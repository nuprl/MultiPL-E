language: go_test.go
name: HumanEval_66_digitSum
results:
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    var sum int\n    for _, v := range s {\n        if v > 47\
    \ && v < 58 {\n            sum += int(v - 48)\n        }\n    }\n    return sum\n\
    }\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpsbl2wzrs_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpsbl2wzrs_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpsbl2wzrs_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpsbl2wzrs_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpsbl2wzrs_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpsbl2wzrs_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpsbl2wzrs_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, v := range s {\n        if v >= '0'\
    \ && v <= '9' {\n            sum += int(v - '0')\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp0pi4mhqi_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp0pi4mhqi_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp0pi4mhqi_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp0pi4mhqi_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp0pi4mhqi_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp0pi4mhqi_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp0pi4mhqi_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= '0'\
    \ && c <= '9' {\n            sum += int(c - '0')\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, v := range s {\n        if v >= '0'\
    \ && v <= '9' {\n            sum += int(v - '0')\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp0pi4mhqi_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp0pi4mhqi_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp0pi4mhqi_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp0pi4mhqi_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp0pi4mhqi_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp0pi4mhqi_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp0pi4mhqi_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, v := range s {\n        if v >= '0'\
    \ && v <= '9' {\n            sum += int(v - '0')\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp0pi4mhqi_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp0pi4mhqi_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp0pi4mhqi_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp0pi4mhqi_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp0pi4mhqi_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp0pi4mhqi_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp0pi4mhqi_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    var sum int\n    for _, char := range s {\n        if char\
    \ >= '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n   \
    \ }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpigy10l7a_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpigy10l7a_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpigy10l7a_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpigy10l7a_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpigy10l7a_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpigy10l7a_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpigy10l7a_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, v := range s {\n        if v >= 'A'\
    \ && v <= 'Z' {\n            sum += int(v - 'A' + 10)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp9kppon6w_test.go:42: expected '%!s(int=131)', got '%!s(int=21)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp9kppon6w_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=12)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp9kppon6w_test.go:42: expected '%!s(int=69)', got '%!s(int=14)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp9kppon6w_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp9kppon6w_test.go:42: expected '%!s(int=153)', got '%!s(int=43)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp9kppon6w_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=41)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp9kppon6w_test.go:42: expected '%!s(int=327)', got '%!s(int=107)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    var sum int\n    for _, char := range s {\n        if char\
    \ >= '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n   \
    \ }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpigy10l7a_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpigy10l7a_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpigy10l7a_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpigy10l7a_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpigy10l7a_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpigy10l7a_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpigy10l7a_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    var sum int\n    for _, char := range s {\n        if char\
    \ >= '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n   \
    \ }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpigy10l7a_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpigy10l7a_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpigy10l7a_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpigy10l7a_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpigy10l7a_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpigy10l7a_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpigy10l7a_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, v := range s {\n        if v >= '0'\
    \ && v <= '9' {\n            sum += int(v) - 48\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmph7ketbje_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmph7ketbje_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmph7ketbje_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmph7ketbje_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmph7ketbje_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmph7ketbje_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmph7ketbje_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    var sum int\n    for _, v := range s {\n        if v >= '0'\
    \ && v <= '9' {\n            sum += int(v)\n        }\n    }\n    return sum\n\
    }\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp6sry3kfq_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp6sry3kfq_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp6sry3kfq_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp6sry3kfq_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp6sry3kfq_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp6sry3kfq_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp6sry3kfq_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    // Write your solution here\n    return 0\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp6708icp4_test.go:37: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp6708icp4_test.go:37:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp6708icp4_test.go:37: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp6708icp4_test.go:37:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp6708icp4_test.go:37: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp6708icp4_test.go:37:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp6708icp4_test.go:37: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, v := range s {\n        if v >= '0'\
    \ && v <= '9' {\n            sum += int(v) - 48\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmph7ketbje_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmph7ketbje_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmph7ketbje_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmph7ketbje_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmph7ketbje_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmph7ketbje_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmph7ketbje_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= '0'\
    \ && c <= '9' {\n            sum += int(c - '0')\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, v := range s {\n        if v > 47 &&\
    \ v < 58 {\n            sum += int(v)\n        }\n    }\n    return sum\n}\n\n\
    func TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpyap6rxy2_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpyap6rxy2_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpyap6rxy2_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpyap6rxy2_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpyap6rxy2_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpyap6rxy2_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpyap6rxy2_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, v := range s {\n        if v > 9 {\n\
    \            sum += int(v) - 48\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpz4hduuyr_test.go:42: expected '%!s(int=131)', got '%!s(int=134)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpz4hduuyr_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=221)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpz4hduuyr_test.go:42: expected '%!s(int=69)', got '%!s(int=313)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpz4hduuyr_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=347)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpz4hduuyr_test.go:42: expected '%!s(int=153)', got '%!s(int=302)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpz4hduuyr_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=466)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpz4hduuyr_test.go:42: expected '%!s(int=327)', got '%!s(int=770)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, v := range s {\n        if v > 47 &&\
    \ v < 58 {\n            sum += int(v)\n        }\n    }\n    return sum\n}\n\n\
    func TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpyap6rxy2_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpyap6rxy2_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpyap6rxy2_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpyap6rxy2_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpyap6rxy2_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpyap6rxy2_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpyap6rxy2_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= '0'\
    \ && c <= '9' {\n            sum += int(c - '0')\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= '0'\
    \ && c <= '9' {\n            sum += int(c - '0')\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, v := range s {\n        if v > 47 &&\
    \ v < 58 {\n            sum += int(v)\n        }\n    }\n    return sum\n}\n\n\
    func TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpyap6rxy2_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpyap6rxy2_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpyap6rxy2_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpyap6rxy2_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpyap6rxy2_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpyap6rxy2_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpyap6rxy2_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, v := range s {\n        if v > 47 &&\
    \ v < 58 {\n            sum += int(v)\n        }\n    }\n    return sum\n}\n\n\
    func TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpyap6rxy2_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpyap6rxy2_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpyap6rxy2_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpyap6rxy2_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpyap6rxy2_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpyap6rxy2_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpyap6rxy2_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    var sum int\n    for _, char := range s {\n        if char\
    \ >= '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n   \
    \ }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpigy10l7a_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpigy10l7a_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpigy10l7a_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpigy10l7a_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpigy10l7a_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpigy10l7a_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpigy10l7a_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, v := range s {\n        if v > '9' {\n\
    \            sum += int(v) - '0'\n        }\n    }\n    return sum\n}\n\nfunc\
    \ TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpgxmpxfwd_test.go:42: expected '%!s(int=131)', got '%!s(int=134)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpgxmpxfwd_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=221)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpgxmpxfwd_test.go:42: expected '%!s(int=69)', got '%!s(int=313)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpgxmpxfwd_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=347)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpgxmpxfwd_test.go:42: expected '%!s(int=153)', got '%!s(int=302)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpgxmpxfwd_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=514)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpgxmpxfwd_test.go:42: expected '%!s(int=327)', got '%!s(int=818)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= '0'\
    \ && c <= '9' {\n            sum += int(c - '0')\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= '0'\
    \ && c <= '9' {\n            sum += int(c - '0')\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    var sum int\n    for _, v := range s {\n        if v >= '0'\
    \ && v <= '9' {\n            sum += int(v - '0')\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpl13x7kmv_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpl13x7kmv_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpl13x7kmv_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpl13x7kmv_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpl13x7kmv_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpl13x7kmv_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpl13x7kmv_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, v := range s {\n        if v > 47 &&\
    \ v < 58 {\n            sum += int(v)\n        }\n    }\n    return sum\n}\n\n\
    func TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpyap6rxy2_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpyap6rxy2_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpyap6rxy2_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpyap6rxy2_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpyap6rxy2_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpyap6rxy2_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpyap6rxy2_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    var sum int\n    for _, v := range s {\n        if v > 47\
    \ && v < 58 {\n            sum += int(v)\n        }\n    }\n    return sum\n}\n\
    \nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpnfvmscuv_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpnfvmscuv_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpnfvmscuv_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpnfvmscuv_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpnfvmscuv_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpnfvmscuv_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpnfvmscuv_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    var sum int = 0\n    for _, char := range s {\n        if\
    \ char >= '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp4wyyampg_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp4wyyampg_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp4wyyampg_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp4wyyampg_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp4wyyampg_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp4wyyampg_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp4wyyampg_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= '0'\
    \ && c <= '9' {\n            sum += int(c - '0')\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= '0'\
    \ && c <= '9' {\n            sum += int(c-'0')\n        }\n    }\n    return sum\n\
    }\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpaywue8ms_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpaywue8ms_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpaywue8ms_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpaywue8ms_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpaywue8ms_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpaywue8ms_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpaywue8ms_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    var sum int = 0\n    for _, char := range s {\n        if\
    \ char >= '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp4wyyampg_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp4wyyampg_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp4wyyampg_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp4wyyampg_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp4wyyampg_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp4wyyampg_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp4wyyampg_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    var sum = 0\n    for _, char := range s {\n        if char\
    \ >= '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n   \
    \ }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpjtu079yd_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpjtu079yd_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpjtu079yd_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpjtu079yd_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpjtu079yd_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpjtu079yd_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpjtu079yd_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    var sum int\n    for _, v := range s {\n        if v > 47\
    \ && v < 58 {\n            sum += int(v)\n        }\n    }\n    return sum\n}\n\
    \nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpnfvmscuv_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpnfvmscuv_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpnfvmscuv_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpnfvmscuv_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpnfvmscuv_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpnfvmscuv_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpnfvmscuv_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    var sum int\n    for _, v := range s {\n        if v > 47\
    \ && v < 58 {\n            sum += int(v)\n        }\n    }\n    return sum\n}\n\
    \nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpnfvmscuv_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpnfvmscuv_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpnfvmscuv_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpnfvmscuv_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpnfvmscuv_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpnfvmscuv_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpnfvmscuv_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, v := range s {\n        if v >= '0'\
    \ && v <= '9' {\n            sum += int(v - '0')\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp0pi4mhqi_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp0pi4mhqi_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp0pi4mhqi_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp0pi4mhqi_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp0pi4mhqi_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp0pi4mhqi_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp0pi4mhqi_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    // Your code here\n    sum := 0\n    for _, v := range s\
    \ {\n        if v > 47 && v < 58 {\n            sum += int(v)\n        }\n   \
    \ }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpai7084pe_test.go:43: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpai7084pe_test.go:43:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpai7084pe_test.go:43: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpai7084pe_test.go:43:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpai7084pe_test.go:43: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpai7084pe_test.go:43:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpai7084pe_test.go:43: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    var sum int\n    for _, char := range s {\n        if char\
    \ >= '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n   \
    \ }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpigy10l7a_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpigy10l7a_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpigy10l7a_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpigy10l7a_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpigy10l7a_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpigy10l7a_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpigy10l7a_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    var sum int\n    for _, v := range s {\n        if v >= '0'\
    \ && v <= '9' {\n            sum += int(v - '0')\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpl13x7kmv_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpl13x7kmv_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpl13x7kmv_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpl13x7kmv_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpl13x7kmv_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpl13x7kmv_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpl13x7kmv_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    var sum int\n    for _, v := range s {\n        if v > 47\
    \ && v < 58 {\n            sum += int(v)\n        }\n    }\n    return sum\n}\n\
    \nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpnfvmscuv_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpnfvmscuv_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpnfvmscuv_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpnfvmscuv_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpnfvmscuv_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpnfvmscuv_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpnfvmscuv_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp5bl4_skk_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp5bl4_skk_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp5bl4_skk_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp5bl4_skk_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp5bl4_skk_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp5bl4_skk_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp5bl4_skk_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp5bl4_skk_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp5bl4_skk_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp5bl4_skk_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp5bl4_skk_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp5bl4_skk_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp5bl4_skk_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp5bl4_skk_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, v := range s {\n        if v > 47 &&\
    \ v < 58 {\n            sum += int(v)\n        }\n    }\n    return sum\n}\n\n\
    func TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpyap6rxy2_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpyap6rxy2_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpyap6rxy2_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpyap6rxy2_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpyap6rxy2_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpyap6rxy2_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpyap6rxy2_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, v := range s {\n        if v > 47 &&\
    \ v < 58 {\n            sum += int(v)\n        }\n    }\n    return sum\n}\n\n\
    func TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpyap6rxy2_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpyap6rxy2_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpyap6rxy2_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpyap6rxy2_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpyap6rxy2_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpyap6rxy2_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpyap6rxy2_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    var sum = 0\n    for _, v := range s {\n        if v > 47\
    \ && v < 58 {\n            sum += int(v)\n        }\n    }\n    return sum\n}\n\
    \nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmphz7bzi5o_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmphz7bzi5o_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmphz7bzi5o_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmphz7bzi5o_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmphz7bzi5o_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmphz7bzi5o_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmphz7bzi5o_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= '0'\
    \ && c <= '9' {\n            sum += int(c - '0')\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, v := range s {\n        if v > 47 &&\
    \ v < 58 {\n            sum += int(v)\n        }\n    }\n    return sum\n}\n\n\
    func TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpyap6rxy2_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpyap6rxy2_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpyap6rxy2_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpyap6rxy2_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpyap6rxy2_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpyap6rxy2_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpyap6rxy2_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= '0'\
    \ && c <= '9' {\n            sum += int(c - '0')\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, v := range s {\n        if v > 47 &&\
    \ v < 58 {\n            sum += int(v - 48)\n        }\n    }\n    return sum\n\
    }\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp48_tou4q_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp48_tou4q_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp48_tou4q_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp48_tou4q_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp48_tou4q_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp48_tou4q_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp48_tou4q_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    var sum = 0\n    for _, v := range s {\n        if v >= '0'\
    \ && v <= '9' {\n            sum += int(v - '0')\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpj77w30qp_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpj77w30qp_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpj77w30qp_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpj77w30qp_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpj77w30qp_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpj77w30qp_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpj77w30qp_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    var sum int\n    for _, char := range s {\n        if char\
    \ >= '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n   \
    \ }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpigy10l7a_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpigy10l7a_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpigy10l7a_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpigy10l7a_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpigy10l7a_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpigy10l7a_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpigy10l7a_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    var sum int\n    for _, char := range s {\n        if char\
    \ >= '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n   \
    \ }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpigy10l7a_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpigy10l7a_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpigy10l7a_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpigy10l7a_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpigy10l7a_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpigy10l7a_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpigy10l7a_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    var sum = 0\n    for _, char := range s {\n        if char\
    \ >= '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n   \
    \ }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpjtu079yd_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpjtu079yd_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpjtu079yd_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpjtu079yd_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpjtu079yd_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpjtu079yd_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpjtu079yd_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= '0'\
    \ && c <= '9' {\n            sum += int(c - '0')\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    var sum int\n    for _, v := range s {\n        if v >= '0'\
    \ && v <= '9' {\n            sum += int(v - '0')\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpl13x7kmv_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpl13x7kmv_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpl13x7kmv_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpl13x7kmv_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpl13x7kmv_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpl13x7kmv_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpl13x7kmv_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= '0'\
    \ && c <= '9' {\n            sum += int(c-'0')\n        }\n    }\n    return sum\n\
    }\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpaywue8ms_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpaywue8ms_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpaywue8ms_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpaywue8ms_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpaywue8ms_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpaywue8ms_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpaywue8ms_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= '0'\
    \ && c <= '9' {\n            sum += int(c - '0')\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= '0'\
    \ && c <= '9' {\n            sum += int(c - '0')\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    var sum int\n    for _, char := range s {\n        if char\
    \ >= '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n   \
    \ }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpigy10l7a_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpigy10l7a_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpigy10l7a_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpigy10l7a_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpigy10l7a_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpigy10l7a_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpigy10l7a_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= '0'\
    \ && c <= '9' {\n            sum += int(c-'0')\n        }\n    }\n    return sum\n\
    }\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpaywue8ms_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpaywue8ms_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpaywue8ms_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpaywue8ms_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpaywue8ms_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpaywue8ms_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpaywue8ms_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= '0'\
    \ && c <= '9' {\n            sum += int(c - '0')\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp5bl4_skk_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp5bl4_skk_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp5bl4_skk_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp5bl4_skk_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp5bl4_skk_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp5bl4_skk_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp5bl4_skk_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, v := range s {\n        if v > '9' {\n\
    \            sum += int(v) - 48\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp5z7hmb5r_test.go:42: expected '%!s(int=131)', got '%!s(int=134)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp5z7hmb5r_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=221)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp5z7hmb5r_test.go:42: expected '%!s(int=69)', got '%!s(int=313)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp5z7hmb5r_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=347)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp5z7hmb5r_test.go:42: expected '%!s(int=153)', got '%!s(int=302)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp5z7hmb5r_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=514)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp5z7hmb5r_test.go:42: expected '%!s(int=327)', got '%!s(int=818)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp5bl4_skk_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp5bl4_skk_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp5bl4_skk_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp5bl4_skk_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp5bl4_skk_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp5bl4_skk_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp5bl4_skk_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, v := range s {\n        if v > 9 {\n\
    \            sum += int(v) - 48\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpz4hduuyr_test.go:42: expected '%!s(int=131)', got '%!s(int=134)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpz4hduuyr_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=221)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpz4hduuyr_test.go:42: expected '%!s(int=69)', got '%!s(int=313)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpz4hduuyr_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=347)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpz4hduuyr_test.go:42: expected '%!s(int=153)', got '%!s(int=302)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpz4hduuyr_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=466)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpz4hduuyr_test.go:42: expected '%!s(int=327)', got '%!s(int=770)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, v := range s {\n        if v >= '0'\
    \ && v <= '9' {\n            sum += int(v) - 48\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmph7ketbje_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmph7ketbje_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmph7ketbje_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmph7ketbje_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmph7ketbje_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmph7ketbje_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmph7ketbje_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    var sum int\n    for _, c := range s {\n        if c >= '0'\
    \ && c <= '9' {\n            sum += int(c - '0')\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpq8tyhq7i_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpq8tyhq7i_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpq8tyhq7i_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpq8tyhq7i_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpq8tyhq7i_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpq8tyhq7i_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpq8tyhq7i_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073996
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp5bl4_skk_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp5bl4_skk_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp5bl4_skk_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp5bl4_skk_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp5bl4_skk_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp5bl4_skk_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp5bl4_skk_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    // Your code here\n    sum := 0\n    for _, v := range s\
    \ {\n        if v >= '0' && v <= '9' {\n            sum += int(v)\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpns2n1mma_test.go:43: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpns2n1mma_test.go:43:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpns2n1mma_test.go:43: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpns2n1mma_test.go:43:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpns2n1mma_test.go:43: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpns2n1mma_test.go:43:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpns2n1mma_test.go:43: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073996
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, v := range s {\n        if v > 47 &&\
    \ v < 58 {\n            sum += int(v)\n        }\n    }\n    return sum\n}\n\n\
    func TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpyap6rxy2_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpyap6rxy2_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpyap6rxy2_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpyap6rxy2_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpyap6rxy2_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpyap6rxy2_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpyap6rxy2_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp5bl4_skk_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp5bl4_skk_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp5bl4_skk_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp5bl4_skk_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp5bl4_skk_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp5bl4_skk_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp5bl4_skk_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    var sum int\n    for _, v := range s {\n        if v >= '0'\
    \ && v <= '9' {\n            sum += int(v-'0')\n        }\n    }\n    return sum\n\
    }\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmppeo9unom_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmppeo9unom_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmppeo9unom_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmppeo9unom_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmppeo9unom_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmppeo9unom_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmppeo9unom_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073996
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, v := range s {\n        if v > 47 &&\
    \ v < 58 {\n            sum += int(v)\n        }\n    }\n    return sum\n}\n\n\
    func TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpyap6rxy2_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpyap6rxy2_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpyap6rxy2_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpyap6rxy2_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpyap6rxy2_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpyap6rxy2_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpyap6rxy2_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    var sum int\n    for _, char := range s {\n        if char\
    \ >= '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n   \
    \ }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpigy10l7a_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpigy10l7a_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpigy10l7a_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpigy10l7a_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpigy10l7a_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpigy10l7a_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpigy10l7a_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    var sum int\n    for _, c := range s {\n        if c >= '0'\
    \ && c <= '9' {\n            sum += int(c - '0')\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpq8tyhq7i_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpq8tyhq7i_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpq8tyhq7i_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpq8tyhq7i_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpq8tyhq7i_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpq8tyhq7i_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpq8tyhq7i_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073996
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, v := range s {\n        if v >= '0'\
    \ && v <= '9' {\n            sum += int(v - '0')\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp0pi4mhqi_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp0pi4mhqi_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp0pi4mhqi_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp0pi4mhqi_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp0pi4mhqi_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp0pi4mhqi_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp0pi4mhqi_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= '0'\
    \ && c <= '9' {\n            sum += int(c - '0')\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, v := range s {\n        if v > '9' {\n\
    \            sum += int(v-'0')\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp9arnqtee_test.go:42: expected '%!s(int=131)', got '%!s(int=134)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp9arnqtee_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=221)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp9arnqtee_test.go:42: expected '%!s(int=69)', got '%!s(int=313)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp9arnqtee_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=347)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp9arnqtee_test.go:42: expected '%!s(int=153)', got '%!s(int=302)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp9arnqtee_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=514)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp9arnqtee_test.go:42: expected '%!s(int=327)', got '%!s(int=818)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660073996
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= '0'\
    \ && c <= '9' {\n            sum += int(c - '0')\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, v := range s {\n        if v >= '0'\
    \ && v <= '9' {\n            sum += int(v)\n        }\n    }\n    return sum\n\
    }\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp36uax16z_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp36uax16z_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp36uax16z_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp36uax16z_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp36uax16z_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp36uax16z_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp36uax16z_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073996
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    var sum int\n    for _, v := range s {\n        if v >= '0'\
    \ && v <= '9' {\n            sum += int(v - '0')\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpl13x7kmv_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpl13x7kmv_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpl13x7kmv_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpl13x7kmv_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpl13x7kmv_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpl13x7kmv_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpl13x7kmv_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    // Your code here\n    sum := 0\n    for _, char := range\
    \ s {\n        if char >= '0' && char <= '9' {\n            sum += int(char)\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpomhe1o6h_test.go:43: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpomhe1o6h_test.go:43:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpomhe1o6h_test.go:43: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpomhe1o6h_test.go:43:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpomhe1o6h_test.go:43: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpomhe1o6h_test.go:43:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpomhe1o6h_test.go:43: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073996
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    var sum int\n    for _, v := range s {\n        if v >= '0'\
    \ && v <= '9' {\n            sum += int(v - '0')\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpl13x7kmv_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpl13x7kmv_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpl13x7kmv_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpl13x7kmv_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpl13x7kmv_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpl13x7kmv_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpl13x7kmv_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    var sum int\n    for _, v := range s {\n        if v > 47\
    \ && v < 58 {\n            sum += int(v)\n        }\n    }\n    return sum\n}\n\
    \nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpnfvmscuv_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpnfvmscuv_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpnfvmscuv_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpnfvmscuv_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpnfvmscuv_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpnfvmscuv_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpnfvmscuv_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    var sum int\n    for _, v := range s {\n        if v >= '0'\
    \ && v <= '9' {\n            sum += int(v)\n        }\n    }\n    return sum\n\
    }\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp6sry3kfq_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp6sry3kfq_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp6sry3kfq_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp6sry3kfq_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp6sry3kfq_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp6sry3kfq_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp6sry3kfq_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, v := range s {\n        if v >= '0'\
    \ && v <= '9' {\n            sum += int(v)\n        }\n    }\n    return sum\n\
    }\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp36uax16z_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp36uax16z_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp36uax16z_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp36uax16z_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp36uax16z_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp36uax16z_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp36uax16z_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073996
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    var sum int\n    for _, char := range s {\n        if char\
    \ >= '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n   \
    \ }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpigy10l7a_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpigy10l7a_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpigy10l7a_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpigy10l7a_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpigy10l7a_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpigy10l7a_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpigy10l7a_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp5bl4_skk_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp5bl4_skk_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp5bl4_skk_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp5bl4_skk_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp5bl4_skk_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp5bl4_skk_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp5bl4_skk_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, v := range s {\n        if v >= '0'\
    \ && v <= '9' {\n            sum += int(v - '0')\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp0pi4mhqi_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp0pi4mhqi_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp0pi4mhqi_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp0pi4mhqi_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp0pi4mhqi_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp0pi4mhqi_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp0pi4mhqi_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, v := range s {\n        if v >= '0'\
    \ && v <= '9' {\n            sum += int(v)\n        }\n    }\n    return sum\n\
    }\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp36uax16z_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp36uax16z_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp36uax16z_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp36uax16z_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp36uax16z_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp36uax16z_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp36uax16z_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073996
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, v := range s {\n        if v >= '0'\
    \ && v <= '9' {\n            sum += int(v - '0')\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp0pi4mhqi_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp0pi4mhqi_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp0pi4mhqi_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp0pi4mhqi_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp0pi4mhqi_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp0pi4mhqi_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp0pi4mhqi_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= '0'\
    \ && c <= '9' {\n            sum += int(c - '0')\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    var sum int\n    for _, v := range s {\n        if v >= '0'\
    \ && v <= '9' {\n            sum += int(v - '0')\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpl13x7kmv_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpl13x7kmv_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpl13x7kmv_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpl13x7kmv_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpl13x7kmv_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpl13x7kmv_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpl13x7kmv_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    // Your code here\n    sum := 0\n    for _, v := range s\
    \ {\n        if v >= '0' && v <= '9' {\n            sum += int(v - '0')\n    \
    \    }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpaxp4wme3_test.go:43: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpaxp4wme3_test.go:43:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpaxp4wme3_test.go:43: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpaxp4wme3_test.go:43:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpaxp4wme3_test.go:43: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpaxp4wme3_test.go:43:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpaxp4wme3_test.go:43: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073996
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    var sum int\n    for _, v := range s {\n        if v >= '0'\
    \ && v <= '9' {\n            sum += int(v - '0')\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpl13x7kmv_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpl13x7kmv_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpl13x7kmv_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpl13x7kmv_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpl13x7kmv_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpl13x7kmv_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpl13x7kmv_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= '0'\
    \ && c <= '9' {\n            sum += int(c - '0')\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    // Your code here\n    sum = 0\n    for _, c := range s {\n\
    \        if c >= '0' && c <= '9' {\n            sum += int(c - '0')\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpvhfn90a1_test.go:14:5: undefined: sum

    /tmp/tmpvhfn90a1_test.go:17:13: undefined: sum

    /tmp/tmpvhfn90a1_test.go:20:12: undefined: sum

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073996
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp5bl4_skk_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp5bl4_skk_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp5bl4_skk_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp5bl4_skk_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp5bl4_skk_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp5bl4_skk_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp5bl4_skk_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    var sum int\n    for _, char := range s {\n        if char\
    \ >= '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n   \
    \ }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpigy10l7a_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpigy10l7a_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpigy10l7a_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpigy10l7a_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpigy10l7a_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpigy10l7a_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpigy10l7a_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= '0'\
    \ && c <= '9' {\n            sum += int(c - '0')\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= '0'\
    \ && c <= '9' {\n            sum += int(c - '0')\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    var sum int\n    for _, v := range s {\n        if v >= '0'\
    \ && v <= '9' {\n            sum += int(v) - 48\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp28o7xxq9_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp28o7xxq9_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp28o7xxq9_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp28o7xxq9_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp28o7xxq9_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp28o7xxq9_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp28o7xxq9_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073996
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    var sum int = 0\n    for _, char := range s {\n        if\
    \ char >= '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate :=\
    \ digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp4wyyampg_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp4wyyampg_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp4wyyampg_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp4wyyampg_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp4wyyampg_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp4wyyampg_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp4wyyampg_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= '0'\
    \ && c <= '9' {\n            sum += int(c - '0')\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= '0'\
    \ && c <= '9' {\n            sum += int(c - '0')\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    // Your code here\n    return 0\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpd_r3n9li_test.go:37: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpd_r3n9li_test.go:37:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpd_r3n9li_test.go:37: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpd_r3n9li_test.go:37:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpd_r3n9li_test.go:37: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpd_r3n9li_test.go:37:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpd_r3n9li_test.go:37: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073996
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    var sum int\n    for _, char := range s {\n        if char\
    \ >= '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n   \
    \ }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpigy10l7a_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpigy10l7a_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpigy10l7a_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpigy10l7a_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpigy10l7a_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpigy10l7a_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpigy10l7a_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= '0'\
    \ && c <= '9' {\n            sum += int(c - '0')\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, v := range s {\n        if v >= '0'\
    \ && v <= '9' {\n            sum += int(v - '0')\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp0pi4mhqi_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp0pi4mhqi_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp0pi4mhqi_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp0pi4mhqi_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp0pi4mhqi_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp0pi4mhqi_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp0pi4mhqi_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    var sum int\n    for _, v := range s {\n        if v >= '0'\
    \ && v <= '9' {\n            sum += int(v - '0')\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpl13x7kmv_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpl13x7kmv_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpl13x7kmv_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpl13x7kmv_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpl13x7kmv_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpl13x7kmv_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpl13x7kmv_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, v := range s {\n        if v >= '0'\
    \ && v <= '9' {\n            sum += int(v)\n        }\n    }\n    return sum\n\
    }\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp36uax16z_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp36uax16z_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp36uax16z_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp36uax16z_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp36uax16z_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp36uax16z_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp36uax16z_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073996
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, v := range s {\n        if v >= '0'\
    \ && v <= '9' {\n            sum += int(v - '0')\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp0pi4mhqi_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp0pi4mhqi_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp0pi4mhqi_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp0pi4mhqi_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp0pi4mhqi_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp0pi4mhqi_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp0pi4mhqi_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= '0'\
    \ && c <= '9' {\n            sum += int(c-'0')\n        }\n    }\n    return sum\n\
    }\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpaywue8ms_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpaywue8ms_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpaywue8ms_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpaywue8ms_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpaywue8ms_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpaywue8ms_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpaywue8ms_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= '0'\
    \ && c <= '9' {\n            sum += int(c - '0')\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    var sum int\n    for _, v := range s {\n        if v >= '0'\
    \ && v <= '9' {\n            sum += int(v - '0')\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpl13x7kmv_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpl13x7kmv_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpl13x7kmv_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpl13x7kmv_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpl13x7kmv_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpl13x7kmv_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpl13x7kmv_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, v := range s {\n        if v > 47 &&\
    \ v < 58 {\n            sum += int(v)\n        }\n    }\n    return sum\n}\n\n\
    func TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpyap6rxy2_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpyap6rxy2_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpyap6rxy2_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpyap6rxy2_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpyap6rxy2_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpyap6rxy2_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpyap6rxy2_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    // Your code here\n    sum := 0\n    for _, v := range s\
    \ {\n        if v >= '0' && v <= '9' {\n            sum += int(v) - 48\n     \
    \   }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate\
    \ := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n   \
    \  { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"\
    abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69\
    \ },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual:\
    \ candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are\
    \ yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"),\
    \ expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpv_i6k8f0_test.go:43: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpv_i6k8f0_test.go:43:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpv_i6k8f0_test.go:43: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpv_i6k8f0_test.go:43:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpv_i6k8f0_test.go:43: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpv_i6k8f0_test.go:43:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpv_i6k8f0_test.go:43: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073996
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, v := range s {\n        if v > '9' {\n\
    \            sum += int(v) - '0'\n        }\n    }\n    return sum\n}\n\nfunc\
    \ TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpgxmpxfwd_test.go:42: expected '%!s(int=131)', got '%!s(int=134)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpgxmpxfwd_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=221)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpgxmpxfwd_test.go:42: expected '%!s(int=69)', got '%!s(int=313)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpgxmpxfwd_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=347)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpgxmpxfwd_test.go:42: expected '%!s(int=153)', got '%!s(int=302)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpgxmpxfwd_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=514)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpgxmpxfwd_test.go:42: expected '%!s(int=327)', got '%!s(int=818)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    // Your code here\n    return 0\n}\n\nfunc TestDigitsum(t\
    \ *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n  \
    \   { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"\
    helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131\
    \ },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual:\
    \ candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"\
    You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpd_r3n9li_test.go:37: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpd_r3n9li_test.go:37:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpd_r3n9li_test.go:37: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpd_r3n9li_test.go:37:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpd_r3n9li_test.go:37: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpd_r3n9li_test.go:37:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpd_r3n9li_test.go:37: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073996
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, v := range s {\n        if v > 47 &&\
    \ v < 58 {\n            sum += int(v)\n        }\n    }\n    return sum\n}\n\n\
    func TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpyap6rxy2_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpyap6rxy2_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpyap6rxy2_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpyap6rxy2_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpyap6rxy2_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpyap6rxy2_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpyap6rxy2_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    // Your code here\n    sum = 0\n    for _, v := range s {\n\
    \        if v > 47 && v < 58 {\n            sum += int(v)\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpd7e83nnd_test.go:14:5: undefined: sum

    /tmp/tmpd7e83nnd_test.go:17:13: undefined: sum

    /tmp/tmpd7e83nnd_test.go:20:12: undefined: sum

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073996
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    var sum int\n    for _, char := range s {\n        if char\
    \ >= '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n   \
    \ }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpigy10l7a_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpigy10l7a_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpigy10l7a_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpigy10l7a_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpigy10l7a_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpigy10l7a_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpigy10l7a_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= '0'\
    \ && c <= '9' {\n            sum += int(c - '0')\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp5bl4_skk_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp5bl4_skk_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp5bl4_skk_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp5bl4_skk_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp5bl4_skk_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp5bl4_skk_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp5bl4_skk_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, v := range s {\n        if v > 47 &&\
    \ v < 58 {\n            sum += int(v)\n        }\n    }\n    return sum\n}\n\n\
    func TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpyap6rxy2_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpyap6rxy2_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpyap6rxy2_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpyap6rxy2_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpyap6rxy2_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpyap6rxy2_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpyap6rxy2_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, v := range s {\n        if v >= '0'\
    \ && v <= '9' {\n            sum += int(v)\n        }\n    }\n    return sum\n\
    }\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp36uax16z_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp36uax16z_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp36uax16z_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp36uax16z_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp36uax16z_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp36uax16z_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp36uax16z_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073996
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    var sum int\n    for _, v := range s {\n        if v > 47\
    \ && v < 58 {\n            sum += int(v)\n        }\n    }\n    return sum\n}\n\
    \nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpnfvmscuv_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpnfvmscuv_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpnfvmscuv_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpnfvmscuv_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpnfvmscuv_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpnfvmscuv_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpnfvmscuv_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    var sum = 0\n    for _, char := range s {\n        if char\
    \ >= '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n   \
    \ }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpjtu079yd_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpjtu079yd_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpjtu079yd_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpjtu079yd_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpjtu079yd_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpjtu079yd_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpjtu079yd_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    var sum int\n    for _, char := range s {\n        if char\
    \ >= '0' && char <= '9' {\n            sum += int(char)\n        }\n    }\n  \
    \  return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpq7bhhn50_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpq7bhhn50_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpq7bhhn50_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpq7bhhn50_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpq7bhhn50_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpq7bhhn50_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpq7bhhn50_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073996
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    var sum int\n    for _, v := range s {\n        if v >= '0'\
    \ && v <= '9' {\n            sum += int(v) - 48\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp28o7xxq9_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp28o7xxq9_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp28o7xxq9_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp28o7xxq9_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp28o7xxq9_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp28o7xxq9_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp28o7xxq9_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073996
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, char := range s {\n        if char >=\
    \ '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n    }\n\
    \    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpepttgcju_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpepttgcju_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    var sum = 0\n    for _, char := range s {\n        if char\
    \ >= '0' && char <= '9' {\n            sum += int(char - '0')\n        }\n   \
    \ }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpjtu079yd_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpjtu079yd_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpjtu079yd_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpjtu079yd_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpjtu079yd_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpjtu079yd_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpjtu079yd_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    // Your code here\n    sum := 0\n    for _, v := range s\
    \ {\n        if v > 47 && v < 58 {\n            sum += int(v)\n        }\n   \
    \ }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
    \ candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"),\
    \ expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n   \
    \  { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"\
    aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected:\
    \ 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpai7084pe_test.go:43: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpai7084pe_test.go:43:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpai7084pe_test.go:43: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpai7084pe_test.go:43:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpai7084pe_test.go:43: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpai7084pe_test.go:43:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpai7084pe_test.go:43: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 2
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    // Your code here\n    sum = 0\n    for i := 0; i < len(s);\
    \ i++ {\n        if s[i] == 'A' || s[i] == 'B' || s[i] == 'C' || s[i] == 'D' ||\
    \ s[i] == 'E' || s[i] == 'F' || s[i] == 'G' || s[i] == 'H' || s[i] == 'I' || s[i]\
    \ == 'J' || s[i] == 'K' || s[i] == 'L' || s[i] == 'M' || s[i] == 'N' || s[i] ==\
    \ 'O' || s[i] == 'P' || s[i] == 'Q' || s[i] == 'R' || s[i] == 'S' || s[i] == 'T'\
    \ || s[i] == 'U' || s[i] == 'V' || s[i] == 'W' || s[i] == 'X' || s[i] == 'Y' ||\
    \ s[i] == 'Z' {\n            sum += int(s[i])\n        }\n    }\n    return sum\n\
    }\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"\
    ), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n  \
    \   { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpn5iloqyx_test.go:14:5: undefined: sum

    /tmp/tmpn5iloqyx_test.go:17:13: undefined: sum

    /tmp/tmpn5iloqyx_test.go:20:12: undefined: sum

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073996
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= '0'\
    \ && c <= '9' {\n            sum += int(c - '0')\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpu7jjnobp_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpu7jjnobp_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    var sum int\n    for _, v := range s {\n        if v >= '0'\
    \ && v <= '9' {\n            sum += int(v - '0')\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmpl13x7kmv_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpl13x7kmv_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmpl13x7kmv_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpl13x7kmv_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmpl13x7kmv_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpl13x7kmv_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmpl13x7kmv_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073994
- exit_code: 1
  program: "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // Task\n// Write a function that takes a string as input and returns the sum\
    \ of the upper characters only'\n// ASCII codes.\n// Examples:\nfunc digitSum(s\
    \ string) int {\n    sum := 0\n    for _, v := range s {\n        if v >= '0'\
    \ && v <= '9' {\n            sum += int(v - '0')\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"\
    abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n\
    \     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"\
    woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected:\
    \ 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n    \
    \ { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1\
    \ (0.00s)\n        tmp0pi4mhqi_test.go:42: expected '%!s(int=131)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp0pi4mhqi_test.go:42:\
    \ expected '%!s(int=67)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__3\
    \ (0.00s)\n        tmp0pi4mhqi_test.go:42: expected '%!s(int=69)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp0pi4mhqi_test.go:42:\
    \ expected '%!s(int=131)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__5\
    \ (0.00s)\n        tmp0pi4mhqi_test.go:42: expected '%!s(int=153)', got '%!s(int=0)'\n\
    \    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp0pi4mhqi_test.go:42:\
    \ expected '%!s(int=151)', got '%!s(int=0)'\n    --- FAIL: TestDigitsum/test_num__7\
    \ (0.00s)\n        tmp0pi4mhqi_test.go:42: expected '%!s(int=327)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073994

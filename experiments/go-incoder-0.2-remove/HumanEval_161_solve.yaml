name: HumanEval_161_solve
language: go_test.go
prompt: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// You\
  \ are given a string s.\n// if s[i] is a letter, reverse its case from lower to\
  \ upper or vise versa, \n// otherwise keep it as it is.\n// If the string contains\
  \ no letters, reverse the string.\n// The function should return the resulted string.\n\
  // Examples\nfunc solve(s string) string {\n"
tests: "func TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test struct {\n\
  \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
  \    { actual: candidate(\"AsDf\"), expected: \"aSdF\" },\n     { actual: candidate(\"\
  1234\"), expected: \"4321\" },\n     { actual: candidate(\"ab\"), expected: \"AB\"\
  \ },\n     { actual: candidate(\"#a@C\"), expected: \"#A@c\" },\n     { actual:\
  \ candidate(\"#AsdfW^45\"), expected: \"#aSDFw^45\" },\n     { actual: candidate(\"\
  #6@2\"), expected: \"2@6#\" },\n     { actual: candidate(\"#$a^D\"), expected: \"\
  #$A^d\" },\n     { actual: candidate(\"#ccc\"), expected: \"#CCC\" },\n   }\n\n\t\
  for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
  \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
  \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\
  \t}\n\t\t})\n\t}\n}\n"
completions: ["    var result string\n    for _, char := range s {\n        if char\
    \ >= 'a' && char <= 'z' {\n            result = result + string(char - 'a') +\
    \ string(char - 'A')\n        } else {\n            result = result + string(char)\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, letter\
    \ := range s {\n        if letter == ' ' {\n            result += letter\n   \
    \     } else {\n            result += string([]byte(letter)) + string([]byte(string([]byte(letter))\
    \ + string([]byte(letter))))\n        }\n    }\n    return result\n}\n", "   \
    \ result := \"\"\n    for _, letter := range s {\n        if letter == 'a' {\n\
    \            result += \"B\"\n        } else if letter == 'b' {\n            result\
    \ += \"A\"\n        } else if letter == 'c' {\n            result += \"D\"\n \
    \       } else if letter == 'd' {\n            result += \"C\"\n        } else\
    \ if letter == 'e' {\n            result += \"F\"\n        } else if letter ==\
    \ 'f' {\n            result += \"E\"\n        } else if letter == 'g' {\n    \
    \        result += \"H\"\n        } else if letter == 'h' {\n            result\
    \ += \"G\"\n        } else if letter == 'i' {\n            result += \"J\"\n \
    \       } else if letter == 'j' {\n            result += \"I\"\n        } else\
    \ if letter == 'k' {\n            result += \"L\"\n        } else if letter ==\
    \ 'l' {\n            result += \"K\"\n        } else if letter == 'm' {\n    \
    \        result += \"N\"\n        } else if letter == 'n' {\n            result\
    \ += \"M\"\n        } else if letter == 'o' {\n            result += \"P\"\n \
    \       } else if letter == 'p' {\n            result += \"O\"\n        } else\
    \ if letter == 'q' {\n            result += \"R\"\n        } else if letter ==\
    \ 'r' {\n            result += \"Q\"\n        } else if letter == 's' {\n    \
    \        result += \"T\"\n        } else if letter == 't' {\n            result\
    \ += \"S\"\n        } else if letter == 'u' {\n            result += \"V\"\n \
    \       } else if letter == 'v' {\n            result += \"U\"\n        } else\
    \ if letter == 'w' {\n            result += \"X\"\n        } else if letter ==\
    \ 'x' {\n            result += \"W\"\n        } else if letter == 'y' {\n    \
    \        result += \"Z\"\n        } else if letter == 'z' {\n            result\
    \ += \"Y\"\n        }\n    }\n    return result\n}\n", "    result := \"\"\n \
    \   for _, letter := range s {\n        if letter == ' ' {\n            result\
    \ = result + letter\n        } else {\n            result = result + string([]byte(letter))\
    \ + string([]byte(string([]byte(letter)) + string([]byte(letter))))\n        }\n\
    \    }\n    return result\n}\n", "    var result string\n    for _, char := range\
    \ s {\n        if char >= 'a' && char <= 'z' {\n            result += string(char\
    \ - 'a' + 'A')\n        } else {\n            result += char\n        }\n    }\n\
    \    return result\n}\n", "    result := \"\"\n    for _, char := range s {\n\
    \        if char >= 'a' && char <= 'z' {\n            result += string([]byte{char\
    \ - 'a' + 'A'})\n        } else {\n            result += char\n        }\n   \
    \ }\n    return result\n}\n", "    result := \"\"\n    for _, letter := range\
    \ s {\n        if letter == ' ' {\n            result += letter\n        } else\
    \ {\n            result += string([]byte(letter))\n        }\n    }\n    return\
    \ result\n}\n", "    result := \"\"\n    for _, letter := range s {\n        if\
    \ letter == 'a' {\n            result += \"B\"\n        } else if letter == 'b'\
    \ {\n            result += \"A\"\n        } else if letter == 'c' {\n        \
    \    result += \"D\"\n        } else if letter == 'd' {\n            result +=\
    \ \"C\"\n        } else if letter == 'e' {\n            result += \"F\"\n    \
    \    } else if letter == 'f' {\n            result += \"E\"\n        } else if\
    \ letter == 'g' {\n            result += \"H\"\n        } else if letter == 'h'\
    \ {\n            result += \"G\"\n        } else if letter == 'i' {\n        \
    \    result += \"J\"\n        } else if letter == 'j' {\n            result +=\
    \ \"I\"\n        } else if letter == 'k' {\n            result += \"L\"\n    \
    \    } else if letter == 'l' {\n            result += \"K\"\n        } else if\
    \ letter == 'm' {\n            result += \"N\"\n        } else if letter == 'n'\
    \ {\n            result += \"M\"\n        } else if letter == 'o' {\n        \
    \    result += \"P\"\n        } else if letter == 'p' {\n            result +=\
    \ \"O\"\n        } else if letter == 'q' {\n            result += \"R\"\n    \
    \    } else if letter == 'r' {\n            result += \"Q\"\n        } else if\
    \ letter == 's' {\n            result += \"T\"\n        } else if letter == 't'\
    \ {\n            result += \"S\"\n        } else if letter == 'u' {\n        \
    \    result += \"V\"\n        } else if letter == 'v' {\n            result +=\
    \ \"U\"\n        } else if letter == 'w' {\n            result += \"X\"\n    \
    \    } else if letter == 'x' {\n            result += \"W\"\n        } else if\
    \ letter == 'y' {\n            result += \"Z\"\n        } else if letter == 'z'\
    \ {\n            result += \"Y\"\n        } else {\n            result += letter\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, letter\
    \ := range s {\n        if letter == ' ' {\n            result = result + letter\n\
    \        } else {\n            result = result + string([]byte(letter)) + string([]byte(string([]byte(letter))\
    \ + string([]byte(letter))))\n        }\n    }\n    return result\n}\n", "   \
    \ result := \"\"\n    for _, letter := range s {\n        if letter == 'a' {\n\
    \            result += \"A\"\n        } else if letter == 'b' {\n            result\
    \ += \"B\"\n        } else if letter == 'c' {\n            result += \"C\"\n \
    \       } else if letter == 'd' {\n            result += \"D\"\n        } else\
    \ if letter == 'e' {\n            result += \"E\"\n        } else if letter ==\
    \ 'f' {\n            result += \"F\"\n        } else if letter == 'g' {\n    \
    \        result += \"G\"\n        } else if letter == 'h' {\n            result\
    \ += \"H\"\n        } else if letter == 'i' {\n            result += \"I\"\n \
    \       } else if letter == 'j' {\n            result += \"J\"\n        } else\
    \ if letter == 'k' {\n            result += \"K\"\n        } else if letter ==\
    \ 'l' {\n            result += \"L\"\n        } else if letter == 'm' {\n    \
    \        result += \"M\"\n        } else if letter == 'n' {\n            result\
    \ += \"N\"\n        } else if letter == 'o' {\n            result += \"O\"\n \
    \       } else if letter == 'p' {\n            result += \"P\"\n        } else\
    \ if letter == 'q' {\n            result += \"Q\"\n        } else if letter ==\
    \ 'r' {\n            result += \"R\"\n        } else if letter == 's' {\n    \
    \        result += \"S\"\n        } else if letter == 't' {\n            result\
    \ += \"T\"\n        } else if letter == 'u' {\n            result += \"U\"\n \
    \       } else if letter == 'v' {\n            result += \"V\"\n        } else\
    \ if letter == 'w' {\n            result += \"W\"\n        } else if letter ==\
    \ 'x' {\n            result += \"X\"\n        } else if letter == 'y' {\n    \
    \        result += \"Y\"\n        } else if letter == 'z' {\n            result\
    \ += \"Z\"\n        } else {\n            result += letter\n        }\n    }\n\
    \    return result\n}\n", "    result := \"\"\n    for _, letter := range s {\n\
    \        if letter == ' ' {\n            result += \" \"\n        } else {\n \
    \           result += string([]byte(letter))\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, letter := range s {\n        if letter ==\
    \ 'a' || letter == 'e' || letter == 'i' || letter == 'o' || letter == 'u' {\n\
    \            result += string(letter) + string(letter)\n        } else {\n   \
    \         result += letter\n        }\n    }\n    return result\n}\n", "    result\
    \ := \"\"\n    for _, letter := range s {\n        if letter == ' ' {\n      \
    \      result += letter\n        } else {\n            result += string([]byte(letter))\
    \ + string([]byte(string([]byte(letter)) + string([]byte(letter))))\n        }\n\
    \    }\n    return result\n}\n", "    result := \"\"\n    for _, char := range\
    \ s {\n        if char >= 'a' && char <= 'z' {\n            result += string([]byte{char\
    \ - 'a' + 'A'})\n        } else {\n            result += char\n        }\n   \
    \ }\n    return result\n}\n", "    result := \"\"\n    for _, letter := range\
    \ s {\n        if letter == 'a' {\n            result += \"B\"\n        } else\
    \ if letter == 'b' {\n            result += \"A\"\n        } else if letter ==\
    \ 'c' {\n            result += \"D\"\n        } else if letter == 'd' {\n    \
    \        result += \"C\"\n        } else if letter == 'e' {\n            result\
    \ += \"F\"\n        } else if letter == 'f' {\n            result += \"E\"\n \
    \       } else if letter == 'g' {\n            result += \"H\"\n        } else\
    \ if letter == 'h' {\n            result += \"G\"\n        } else if letter ==\
    \ 'i' {\n            result += \"J\"\n        } else if letter == 'j' {\n    \
    \        result += \"I\"\n        } else if letter == 'k' {\n            result\
    \ += \"L\"\n        } else if letter == 'l' {\n            result += \"K\"\n \
    \       } else if letter == 'm' {\n            result += \"N\"\n        } else\
    \ if letter == 'n' {\n            result += \"M\"\n        } else if letter ==\
    \ 'o' {\n            result += \"P\"\n        } else if letter == 'p' {\n    \
    \        result += \"O\"\n        } else if letter == 'q' {\n            result\
    \ += \"R\"\n        } else if letter == 'r' {\n            result += \"Q\"\n \
    \       } else if letter == 's' {\n            result += \"T\"\n        } else\
    \ if letter == 't' {\n            result += \"S\"\n        } else if letter ==\
    \ 'u' {\n            result += \"V\"\n        } else if letter == 'v' {\n    \
    \        result += \"U\"\n        } else if letter == 'w' {\n            result\
    \ += \"X\"\n        } else if letter == 'x' {\n            result += \"W\"\n \
    \       } else if letter == 'y' {\n            result += \"Z\"\n        } else\
    \ if letter == 'z' {\n            result += \"Y\"\n        }\n    }\n    return\
    \ result\n}\n", "    result := \"\"\n    for _, letter := range s {\n        if\
    \ letter == ' ' {\n            result = result + letter\n        } else {\n  \
    \          result += string([]byte(letter)) + string([]byte(string([]byte(letter))\
    \ + string([]byte(letter))))\n        }\n    }\n    return result\n}\n", "   \
    \ result := \"\"\n    for _, letter := range s {\n        if letter == 'a' {\n\
    \            result += \"B\"\n        } else if letter == 'b' {\n            result\
    \ += \"A\"\n        } else if letter == 'c' {\n            result += \"D\"\n \
    \       } else if letter == 'd' {\n            result += \"C\"\n        } else\
    \ if letter == 'e' {\n            result += \"F\"\n        } else if letter ==\
    \ 'f' {\n            result += \"E\"\n        } else if letter == 'g' {\n    \
    \        result += \"H\"\n        } else if letter == 'h' {\n            result\
    \ += \"G\"\n        } else if letter == 'i' {\n            result += \"J\"\n \
    \       } else if letter == 'j' {\n            result += \"I\"\n        } else\
    \ if letter == 'k' {\n            result += \"L\"\n        } else if letter ==\
    \ 'l' {\n            result += \"K\"\n        } else if letter == 'm' {\n    \
    \        result += \"N\"\n        } else if letter == 'n' {\n            result\
    \ += \"M\"\n        } else if letter == 'o' {\n            result += \"P\"\n \
    \       } else if letter == 'p' {\n            result += \"O\"\n        } else\
    \ if letter == 'q' {\n            result += \"R\"\n        } else if letter ==\
    \ 'r' {\n            result += \"Q\"\n        } else if letter == 's' {\n    \
    \        result += \"T\"\n        } else if letter == 't' {\n            result\
    \ += \"S\"\n        } else if letter == 'u' {\n            result += \"V\"\n \
    \       } else if letter == 'v' {\n            result += \"U\"\n        } else\
    \ if letter == 'w' {\n            result += \"X\"\n        } else if letter ==\
    \ 'x' {\n            result += \"W\"\n        } else if letter == 'y' {\n    \
    \        result += \"Z\"\n        } else if letter == 'z' {\n            result\
    \ += \"Y\"\n        } else {\n            result += letter\n        }\n    }\n\
    \    return result\n}\n", "    result := \"\"\n    for _, letter := range s {\n\
    \        if letter == ' ' {\n            result += letter\n        } else {\n\
    \            result += string([]byte(letter))\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, letter := range s {\n        if letter ==\
    \ 'a' || letter == 'e' || letter == 'i' || letter == 'o' || letter == 'u' {\n\
    \            result += string(letter) + string(letter)\n        } else {\n   \
    \         result += letter\n        }\n    }\n    return result\n}\n", "    result\
    \ := \"\"\n    for _, char := range s {\n        if char >= 'a' && char <= 'z'\
    \ {\n            result += string([]rune(char)[unicode.ToLower(unicode.ToLower(char))])\n\
    \        } else {\n            result += string([]rune(char)[unicode.ToUpper(unicode.ToUpper(char))])\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char\
    \ := range s {\n        if char >= 'a' && char <= 'z' {\n            result +=\
    \ string([]byte{char - 'a' + 'A'})\n        } else {\n            result += char\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, letter\
    \ := range s {\n        if letter == ' ' {\n            result += letter\n   \
    \     } else {\n            result += string([]byte(letter)) + string([]byte(string([]byte(letter))\
    \ + string([]byte(letter))))\n        }\n    }\n    return result\n}\n", "   \
    \ result := \"\"\n    for _, char := range s {\n        if char >= 'a' && char\
    \ <= 'z' {\n            result += string([]byte{char - 'a' + 'A'})\n        }\
    \ else {\n            result += char\n        }\n    }\n    return result\n}\n",
  "    result := \"\"\n    for _, letter := range s {\n        if letter == 'a' {\n\
    \            letter = 'A'\n        }\n        if letter == 'A' {\n           \
    \ letter = 'a'\n        }\n        result += letter\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, char := range s {\n        if char >= 'a'\
    \ && char <= 'z' {\n            result += string([]rune(char)[int8(char)-'a'])\n\
    \        } else {\n            result += string([]rune(char)[int8(char)-'A'])\n\
    \        }\n    }\n    return result\n}\n", "    var result string\n    for _,\
    \ letter := range s {\n        if letter == 'a' {\n            result = result\
    \ + \"A\"\n        } else if letter == 'b' {\n            result = result + \"\
    B\"\n        } else if letter == 'c' {\n            result = result + \"C\"\n\
    \        } else if letter == 'd' {\n            result = result + \"D\"\n    \
    \    } else if letter == 'e' {\n            result = result + \"E\"\n        }\
    \ else if letter == 'f' {\n            result = result + \"F\"\n        } else\
    \ if letter == 'g' {\n            result = result + \"G\"\n        } else if letter\
    \ == 'h' {\n            result = result + \"H\"\n        } else if letter == 'i'\
    \ {\n            result = result + \"I\"\n        } else if letter == 'j' {\n\
    \            result = result + \"J\"\n        } else if letter == 'k' {\n    \
    \        result = result + \"K\"\n        } else if letter == 'l' {\n        \
    \    result = result + \"L\"\n        } else if letter == 'm' {\n            result\
    \ = result + \"M\"\n        } else if letter == 'n' {\n            result = result\
    \ + \"N\"\n        } else if letter == 'o' {\n            result = result + \"\
    O\"\n        } else if letter == 'p' {\n            result = result + \"P\"\n\
    \        } else if letter == 'q' {\n            result = result + \"Q\"\n    \
    \    } else if letter == 'r' {\n            result = result + \"R\"\n        }\
    \ else if letter == 's' {\n            result = result + \"S\"\n        } else\
    \ if letter == 't' {\n            result = result + \"T\"\n        } else if letter\
    \ == 'u' {\n            result = result + \"U\"\n        } else if letter == 'v'\
    \ {\n            result = result + \"V\"\n        } else if letter == 'w' {\n\
    \            result = result + \"W\"\n        } else if letter == 'x' {\n    \
    \        result = result + \"X\"\n        } else if letter == 'y' {\n        \
    \    result = result + \"Y\"\n        } else if letter == 'z' {\n            result\
    \ = result + \"Z\"\n        } else {\n            result = result + letter\n \
    \       }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, letter\
    \ := range s {\n        if letter == ' ' {\n            result = result + letter\n\
    \        } else {\n            result += \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"[letter]\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, letter\
    \ := range s {\n        if letter == 'a' {\n            result += \"A\"\n    \
    \    } else if letter == 'b' {\n            result += \"B\"\n        } else if\
    \ letter == 'c' {\n            result += \"C\"\n        } else if letter == 'd'\
    \ {\n            result += \"D\"\n        } else if letter == 'e' {\n        \
    \    result += \"E\"\n        } else if letter == 'f' {\n            result +=\
    \ \"F\"\n        } else if letter == 'g' {\n            result += \"G\"\n    \
    \    } else if letter == 'h' {\n            result += \"H\"\n        } else if\
    \ letter == 'i' {\n            result += \"I\"\n        } else if letter == 'j'\
    \ {\n            result += \"J\"\n        } else if letter == 'k' {\n        \
    \    result += \"K\"\n        } else if letter == 'l' {\n            result +=\
    \ \"L\"\n        } else if letter == 'm' {\n            result += \"M\"\n    \
    \    } else if letter == 'n' {\n            result += \"N\"\n        } else if\
    \ letter == 'o' {\n            result += \"O\"\n        } else if letter == 'p'\
    \ {\n            result += \"P\"\n        } else if letter == 'q' {\n        \
    \    result += \"Q\"\n        } else if letter == 'r' {\n            result +=\
    \ \"R\"\n        } else if letter == 's' {\n            result += \"S\"\n    \
    \    } else if letter == 't' {\n            result += \"T\"\n        } else if\
    \ letter == 'u' {\n            result += \"U\"\n        } else if letter == 'v'\
    \ {\n            result += \"V\"\n        } else if letter == 'w' {\n        \
    \    result += \"W\"\n        } else if letter == 'x' {\n            result +=\
    \ \"X\"\n        } else if letter == 'y' {\n            result += \"Y\"\n    \
    \    } else if letter == 'z' {\n            result += \"Z\"\n        } else {\n\
    \            result += letter\n        }\n    }\n    return result\n}\n", "  \
    \  result := \"\"\n    for _, char := range s {\n        if char >= 'a' && char\
    \ <= 'z' {\n            result += string([]byte{char - 'a' + 'A'})\n        }\
    \ else {\n            result += char\n        }\n    }\n    return result\n}\n",
  "    result := \"\"\n    for _, letter := range s {\n        if letter == 'a' {\n\
    \            result += \"B\"\n        } else if letter == 'b' {\n            result\
    \ += \"A\"\n        } else if letter == 'c' {\n            result += \"D\"\n \
    \       } else if letter == 'd' {\n            result += \"C\"\n        } else\
    \ if letter == 'e' {\n            result += \"F\"\n        } else if letter ==\
    \ 'f' {\n            result += \"E\"\n        } else if letter == 'g' {\n    \
    \        result += \"H\"\n        } else if letter == 'h' {\n            result\
    \ += \"G\"\n        } else if letter == 'i' {\n            result += \"J\"\n \
    \       } else if letter == 'j' {\n            result += \"I\"\n        } else\
    \ if letter == 'k' {\n            result += \"L\"\n        } else if letter ==\
    \ 'l' {\n            result += \"K\"\n        } else if letter == 'm' {\n    \
    \        result += \"N\"\n        } else if letter == 'n' {\n            result\
    \ += \"M\"\n        } else if letter == 'o' {\n            result += \"P\"\n \
    \       } else if letter == 'p' {\n            result += \"O\"\n        } else\
    \ if letter == 'q' {\n            result += \"R\"\n        } else if letter ==\
    \ 'r' {\n            result += \"Q\"\n        } else if letter == 's' {\n    \
    \        result += \"T\"\n        } else if letter == 't' {\n            result\
    \ += \"S\"\n        } else if letter == 'u' {\n            result += \"V\"\n \
    \       } else if letter == 'v' {\n            result += \"U\"\n        } else\
    \ if letter == 'w' {\n            result += \"X\"\n        } else if letter ==\
    \ 'x' {\n            result += \"W\"\n        } else if letter == 'y' {\n    \
    \        result += \"Z\"\n        } else if letter == 'z' {\n            result\
    \ += \"Y\"\n        } else {\n            result += letter\n        }\n    }\n\
    \    return result\n}\n", "    result := \"\"\n    for _, letter := range s {\n\
    \        if letter == 'a' {\n            result += \"A\"\n        } else if letter\
    \ == 'b' {\n            result += \"B\"\n        } else if letter == 'c' {\n \
    \           result += \"C\"\n        } else if letter == 'd' {\n            result\
    \ += \"D\"\n        } else if letter == 'e' {\n            result += \"E\"\n \
    \       } else if letter == 'f' {\n            result += \"F\"\n        } else\
    \ if letter == 'g' {\n            result += \"G\"\n        } else if letter ==\
    \ 'h' {\n            result += \"H\"\n        } else if letter == 'i' {\n    \
    \        result += \"I\"\n        } else if letter == 'j' {\n            result\
    \ += \"J\"\n        } else if letter == 'k' {\n            result += \"K\"\n \
    \       } else if letter == 'l' {\n            result += \"L\"\n        } else\
    \ if letter == 'm' {\n            result += \"M\"\n        } else if letter ==\
    \ 'n' {\n            result += \"N\"\n        } else if letter == 'o' {\n    \
    \        result += \"O\"\n        } else if letter == 'p' {\n            result\
    \ += \"P\"\n        } else if letter == 'q' {\n            result += \"Q\"\n \
    \       } else if letter == 'r' {\n            result += \"R\"\n        } else\
    \ if letter == 's' {\n            result += \"S\"\n        } else if letter ==\
    \ 't' {\n            result += \"T\"\n        } else if letter == 'u' {\n    \
    \        result += \"U\"\n        } else if letter == 'v' {\n            result\
    \ += \"V\"\n        } else if letter == 'w' {\n            result += \"W\"\n \
    \       } else if letter == 'x' {\n            result += \"X\"\n        } else\
    \ if letter == 'y' {\n            result += \"Y\"\n        } else if letter ==\
    \ 'z' {\n            result += \"Z\"\n        } else {\n            result +=\
    \ letter\n        }\n    }\n    return result\n}\n", "    result := \"\"\n   \
    \ for _, letter := range s {\n        if letter == ' ' {\n            result +=\
    \ letter\n        } else {\n            result += string([]byte(letter)) + string([]byte(string([]byte(letter))\
    \ + string([]byte(letter))))\n        }\n    }\n    return result\n}\n", "   \
    \ result := \"\"\n    for _, letter := range s {\n        if letter == ' ' {\n\
    \            result = result + letter\n        } else {\n            result +=\
    \ string([]byte(letter)) + string([]byte(string([]byte(letter)) + string([]byte(letter))))\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, v\
    \ := range s {\n        if v >= 'a' && v <= 'z' {\n            result += string(v\
    \ - 'a' + 1)\n        } else if v >= 'A' && v <= 'Z' {\n            result +=\
    \ string(v - 'A' + 1)\n        } else {\n            result += v\n        }\n\
    \    }\n    return result\n}\n", "    result := \"\"\n    for _, char := range\
    \ s {\n        if char >= 'a' && char <= 'z' {\n            result += string([]byte{byte(char)})\n\
    \        } else {\n            result += string([]byte{byte(char) - 32})\n   \
    \     }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, letter\
    \ := range s {\n        if letter == ' ' {\n            result += letter\n   \
    \     } else {\n            result += string([]byte(letter)) + string([]byte(string([]byte(letter))\
    \ + string(\"a\")))\n        }\n    }\n    return result\n}\n", "    result :=\
    \ \"\"\n    for _, letter := range s {\n        if letter == 'a' {\n         \
    \   result += \"A\"\n        } else if letter == 'b' {\n            result +=\
    \ \"B\"\n        } else if letter == 'c' {\n            result += \"C\"\n    \
    \    } else if letter == 'd' {\n            result += \"D\"\n        } else if\
    \ letter == 'e' {\n            result += \"E\"\n        } else if letter == 'f'\
    \ {\n            result += \"F\"\n        } else if letter == 'g' {\n        \
    \    result += \"G\"\n        } else if letter == 'h' {\n            result +=\
    \ \"H\"\n        } else if letter == 'i' {\n            result += \"I\"\n    \
    \    } else if letter == 'j' {\n            result += \"J\"\n        } else if\
    \ letter == 'k' {\n            result += \"K\"\n        } else if letter == 'l'\
    \ {\n            result += \"L\"\n        } else if letter == 'm' {\n        \
    \    result += \"M\"\n        } else if letter == 'n' {\n            result +=\
    \ \"N\"\n        } else if letter == 'o' {\n            result += \"O\"\n    \
    \    } else if letter == 'p' {\n            result += \"P\"\n        } else if\
    \ letter == 'q' {\n            result += \"Q\"\n        } else if letter == 'r'\
    \ {\n            result += \"R\"\n        } else if letter == 's' {\n        \
    \    result += \"S\"\n        } else if letter == 't' {\n            result +=\
    \ \"T\"\n        } else if letter == 'u' {\n            result += \"U\"\n    \
    \    } else if letter == 'v' {\n            result += \"V\"\n        } else if\
    \ letter == 'w' {\n            result += \"W\"\n        } else if letter == 'x'\
    \ {\n            result += \"X\"\n        } else if letter == 'y' {\n        \
    \    result += \"Y\"\n        } else if letter == 'z' {\n            result +=\
    \ \"Z\"\n        } else {\n            result += letter\n        }\n    }\n  \
    \  return result\n}\n", "    result := \"\"\n    for _, letter := range s {\n\
    \        if letter == ' ' {\n            result += \" \"\n            continue\n\
    \        }\n        if letter == 'a' {\n            result += \"A\"\n        }\
    \ else if letter == 'b' {\n            result += \"B\"\n        } else if letter\
    \ == 'c' {\n            result += \"C\"\n        } else if letter == 'd' {\n \
    \           result += \"D\"\n        } else if letter == 'e' {\n            result\
    \ += \"E\"\n        } else if letter == 'f' {\n            result += \"F\"\n \
    \       } else if letter == 'g' {\n            result += \"G\"\n        } else\
    \ if letter == 'h' {\n            result += \"H\"\n        } else if letter ==\
    \ 'i' {\n            result += \"I\"\n        } else if letter == 'j' {\n    \
    \        result += \"J\"\n        } else if letter == 'k' {\n            result\
    \ += \"K\"\n        } else if letter == 'l' {\n            result += \"L\"\n \
    \       } else if letter == 'm' {\n            result += \"M\"\n        } else\
    \ if letter == 'n' {\n            result += \"N\"\n        } else if letter ==\
    \ 'o' {\n            result += \"O\"\n        } else if letter == 'p' {\n    \
    \        result += \"P\"\n        } else if letter == 'q' {\n            result\
    \ += \"Q\"\n        } else if letter == 'r' {\n            result += \"R\"\n \
    \       } else if letter == 's' {\n            result += \"S\"\n        } else\
    \ if letter == 't' {\n            result += \"T\"\n        } else if letter ==\
    \ 'u' {\n            result += \"U\"\n        } else if letter == 'v' {\n    \
    \        result += \"V\"\n        } else if letter == 'w' {\n            result\
    \ += \"W\"\n        } else if letter == 'x' {\n            result += \"X\"\n \
    \       } else if letter == 'y' {\n            result += \"Y\"\n        } else\
    \ if letter == 'z' {\n            result += \"Z\"\n        }\n    }\n    return\
    \ result\n}\n", "    result := \"\"\n    for _, char := range s {\n        if\
    \ char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[26-int(char)-97])\n\
    \        } else {\n            result += string([]rune(char)[26-int(char)])\n\
    \        }\n    }\n    return result\n}\n", "    var result string\n    for _,\
    \ char := range s {\n        if char >= 'a' && char <= 'z' {\n            result\
    \ += string([]rune(char)[26-int(char)])\n        } else {\n            result\
    \ += string([]rune(char)[int('a')-int(char)])\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, letter := range s {\n        if letter ==\
    \ ' ' {\n            result += letter\n        } else {\n            result +=\
    \ string([]byte(letter))\n        }\n    }\n    return result\n}\n", "    result\
    \ := \"\"\n    for _, letter := range s {\n        if letter == 'a' {\n      \
    \      result += \"A\"\n        } else if letter == 'b' {\n            result\
    \ += \"B\"\n        } else if letter == 'c' {\n            result += \"C\"\n \
    \       } else if letter == 'd' {\n            result += \"D\"\n        } else\
    \ if letter == 'e' {\n            result += \"E\"\n        } else if letter ==\
    \ 'f' {\n            result += \"F\"\n        } else if letter == 'g' {\n    \
    \        result += \"G\"\n        } else if letter == 'h' {\n            result\
    \ += \"H\"\n        } else if letter == 'i' {\n            result += \"I\"\n \
    \       } else if letter == 'j' {\n            result += \"J\"\n        } else\
    \ if letter == 'k' {\n            result += \"K\"\n        } else if letter ==\
    \ 'l' {\n            result += \"L\"\n        } else if letter == 'm' {\n    \
    \        result += \"M\"\n        } else if letter == 'n' {\n            result\
    \ += \"N\"\n        } else if letter == 'o' {\n            result += \"O\"\n \
    \       } else if letter == 'p' {\n            result += \"P\"\n        } else\
    \ if letter == 'q' {\n            result += \"Q\"\n        } else if letter ==\
    \ 'r' {\n            result += \"R\"\n        } else if letter == 's' {\n    \
    \        result += \"S\"\n        } else if letter == 't' {\n            result\
    \ += \"T\"\n        } else if letter == 'u' {\n            result += \"U\"\n \
    \       } else if letter == 'v' {\n            result += \"V\"\n        } else\
    \ if letter == 'w' {\n            result += \"W\"\n        } else if letter ==\
    \ 'x' {\n            result += \"X\"\n        } else if letter == 'y' {\n    \
    \        result += \"Y\"\n        } else if letter == 'z' {\n            result\
    \ += \"Z\"\n        }\n    }\n    return result\n}\n", "    result := \"\"\n \
    \   for _, letter := range s {\n        if letter == 'a' {\n            result\
    \ += \"B\"\n        } else if letter == 'b' {\n            result += \"a\"\n \
    \       } else {\n            result += letter\n        }\n    }\n    return result\n\
    }\n", "    var result string\n    for _, char := range s {\n        if char >=\
    \ 'a' && char <= 'z' {\n            result = result + string(char - 'a') + string(char\
    \ - 'A')\n        } else {\n            result = result + string(char)\n     \
    \   }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, v := range\
    \ s {\n        if v >= 'a' && v <= 'z' {\n            result += string(v - 'a')\n\
    \        } else {\n            result += v\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, letter := range s {\n        if letter ==\
    \ ' ' {\n            result += letter\n        } else {\n            result +=\
    \ string([]byte(letter)) + string([]byte(string([]byte(letter)) + string([]byte(letter))))\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, letter\
    \ := range s {\n        if letter == 'a' {\n            letter = 'A'\n       \
    \ }\n        if letter == 'b' {\n            letter = 'B'\n        }\n       \
    \ if letter == 'c' {\n            letter = 'C'\n        }\n        if letter ==\
    \ 'd' {\n            letter = 'D'\n        }\n        if letter == 'e' {\n   \
    \         letter = 'E'\n        }\n        if letter == 'f' {\n            letter\
    \ = 'F'\n        }\n        if letter == 'g' {\n            letter = 'G'\n   \
    \     }\n        if letter == 'h' {\n            letter = 'H'\n        }\n   \
    \     if letter == 'i' {\n            letter = 'I'\n        }\n        if letter\
    \ == 'j' {\n            letter = 'J'\n        }\n        if letter == 'k' {\n\
    \            letter = 'K'\n        }\n        if letter == 'l' {\n           \
    \ letter = 'L'\n        }\n        if letter == 'm' {\n            letter = 'M'\n\
    \        }\n        if letter == 'n' {\n            letter = 'N'\n        }\n\
    \        if letter == 'o' {\n            letter = 'O'\n        }\n        if letter\
    \ == 'p' {\n            letter = 'P'\n        }\n        if letter == 'q' {\n\
    \            letter = 'Q'\n        }\n        if letter == 'r' {\n           \
    \ letter = 'R'\n        }\n        if letter == 's' {\n            letter = 'S'\n\
    \        }\n        if letter == 't' {\n            letter = 'T'\n        }\n\
    \        if letter == 'u' {\n            letter = 'U'\n        }\n        if letter\
    \ == 'v' {\n            letter = 'V'\n        }\n        if letter == 'w' {\n\
    \            letter = 'W'\n        }\n        if letter == 'x' {\n           \
    \ letter = 'X'\n        }\n        if letter == 'y' {\n            letter = 'Y'\n\
    \        }\n        if letter == 'z' {\n            letter = 'Z'\n        }\n\
    \        if letter == 'A' {\n            letter = 'a'\n        }\n        if letter\
    \ == 'B' {\n            letter = 'b'\n        }\n        if letter == 'C' {\n\
    \            letter = 'c'\n        }\n        if letter == 'D' {\n           \
    \ letter = 'd'\n        }\n        if letter == 'E' {\n            letter = 'e'\n\
    \        }\n        if letter == 'F' {\n            letter = 'f'\n        }\n\
    \        if letter == 'G' {\n            letter = 'g'\n        }\n        if letter\
    \ == 'H' {\n            letter = 'h'", "    result := \"\"\n    for _, v := range\
    \ s {\n        if v >= 'a' && v <= 'z' {\n            result += string(v - 'a')\n\
    \        } else {\n            result += v\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, letter := range s {\n        if letter ==\
    \ 'a' {\n            result += \"B\"\n        } else if letter == 'b' {\n    \
    \        result += \"A\"\n        } else if letter == 'c' {\n            result\
    \ += \"D\"\n        } else if letter == 'd' {\n            result += \"C\"\n \
    \       } else if letter == 'e' {\n            result += \"F\"\n        } else\
    \ if letter == 'f' {\n            result += \"E\"\n        } else if letter ==\
    \ 'g' {\n            result += \"H\"\n        } else if letter == 'h' {\n    \
    \        result += \"G\"\n        } else if letter == 'i' {\n            result\
    \ += \"J\"\n        } else if letter == 'j' {\n            result += \"I\"\n \
    \       } else if letter == 'k' {\n            result += \"L\"\n        } else\
    \ if letter == 'l' {\n            result += \"K\"\n        } else if letter ==\
    \ 'm' {\n            result += \"N\"\n        } else if letter == 'n' {\n    \
    \        result += \"M\"\n        } else if letter == 'o' {\n            result\
    \ += \"P\"\n        } else if letter == 'p' {\n            result += \"O\"\n \
    \       } else if letter == 'q' {\n            result += \"R\"\n        } else\
    \ if letter == 'r' {\n            result += \"Q\"\n        } else if letter ==\
    \ 's' {\n            result += \"T\"\n        } else if letter == 't' {\n    \
    \        result += \"S\"\n        } else if letter == 'u' {\n            result\
    \ += \"V\"\n        } else if letter == 'v' {\n            result += \"U\"\n \
    \       } else if letter == 'w' {\n            result += \"X\"\n        } else\
    \ if letter == 'x' {\n            result += \"W\"\n        } else if letter ==\
    \ 'y' {\n            result += \"Z\"\n        } else if letter == 'z' {\n    \
    \        result += \"Y\"\n        } else {\n            result += letter\n   \
    \     }\n    }\n    return result\n}\n", "    var result string\n    for _, v\
    \ := range s {\n        if v >= 'a' && v <= 'z' {\n            result += string(v\
    \ - 'a')\n        } else {\n            result += v\n        }\n    }\n    return\
    \ result\n}\n", "    result := \"\"\n    for _, letter := range s {\n        if\
    \ letter == ' ' {\n            result += letter\n        } else {\n          \
    \  result += string([]byte(letter)) + string([]byte(string([]byte(letter)) + string([]byte(letter))))\n\
    \        }\n    }\n    return result\n}\n", "    var result string\n    for _,\
    \ v := range s {\n        if v >= 'a' && v <= 'z' {\n            result = result\
    \ + string(v - 'a')\n        } else {\n            result = result + v\n     \
    \   }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char :=\
    \ range s {\n        if char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[int8(char)-'a'])\n\
    \        } else {\n            result += string([]rune(char)[int8(char)-'A'])\n\
    \        }\n    }\n    return result\n}\n", "    var result string\n    for _,\
    \ letter := range s {\n        if letter == 'a' {\n            result = result\
    \ + \"A\"\n        } else if letter == 'b' {\n            result = result + \"\
    B\"\n        } else if letter == 'c' {\n            result = result + \"C\"\n\
    \        } else if letter == 'd' {\n            result = result + \"D\"\n    \
    \    } else if letter == 'e' {\n            result = result + \"E\"\n        }\
    \ else if letter == 'f' {\n            result = result + \"F\"\n        } else\
    \ if letter == 'g' {\n            result = result + \"G\"\n        } else if letter\
    \ == 'h' {\n            result = result + \"H\"\n        } else if letter == 'i'\
    \ {\n            result = result + \"I\"\n        } else if letter == 'j' {\n\
    \            result = result + \"J\"\n        } else if letter == 'k' {\n    \
    \        result = result + \"K\"\n        } else if letter == 'l' {\n        \
    \    result = result + \"L\"\n        } else if letter == 'm' {\n            result\
    \ = result + \"M\"\n        } else if letter == 'n' {\n            result = result\
    \ + \"N\"\n        } else if letter == 'o' {\n            result = result + \"\
    O\"\n        } else if letter == 'p' {\n            result = result + \"P\"\n\
    \        } else if letter == 'q' {\n            result = result + \"Q\"\n    \
    \    } else if letter == 'r' {\n            result = result + \"R\"\n        }\
    \ else if letter == 's' {\n            result = result + \"S\"\n        } else\
    \ if letter == 't' {\n            result = result + \"T\"\n        } else if letter\
    \ == 'u' {\n            result = result + \"U\"\n        } else if letter == 'v'\
    \ {\n            result = result + \"V\"\n        } else if letter == 'w' {\n\
    \            result = result + \"W\"\n        } else if letter == 'x' {\n    \
    \        result = result + \"X\"\n        } else if letter == 'y' {\n        \
    \    result = result + \"Y\"\n        } else if letter == 'z' {\n            result\
    \ = result + \"Z\"\n        }\n    }\n    return result\n}\n", "    result :=\
    \ \"\"\n    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n\
    \            result += string([]rune(char)[unicode.ToLower(unicode.ToLower(char))])\n\
    \        } else {\n            result += string([]rune(char)[unicode.ToUpper(unicode.ToUpper(char))])\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, letter\
    \ := range s {\n        if letter == 'a' {\n            result += \"A\"\n    \
    \    } else if letter == 'b' {\n            result += \"B\"\n        } else if\
    \ letter == 'c' {\n            result += \"C\"\n        } else if letter == 'd'\
    \ {\n            result += \"D\"\n        } else if letter == 'e' {\n        \
    \    result += \"E\"\n        } else if letter == 'f' {\n            result +=\
    \ \"F\"\n        } else if letter == 'g' {\n            result += \"G\"\n    \
    \    } else if letter == 'h' {\n            result += \"H\"\n        } else if\
    \ letter == 'i' {\n            result += \"I\"\n        } else if letter == 'j'\
    \ {\n            result += \"J\"\n        } else if letter == 'k' {\n        \
    \    result += \"K\"\n        } else if letter == 'l' {\n            result +=\
    \ \"L\"\n        } else if letter == 'm' {\n            result += \"M\"\n    \
    \    } else if letter == 'n' {\n            result += \"N\"\n        } else if\
    \ letter == 'o' {\n            result += \"O\"\n        } else if letter == 'p'\
    \ {\n            result += \"P\"\n        } else if letter == 'q' {\n        \
    \    result += \"Q\"\n        } else if letter == 'r' {\n            result +=\
    \ \"R\"\n        } else if letter == 's' {\n            result += \"S\"\n    \
    \    } else if letter == 't' {\n            result += \"T\"\n        } else if\
    \ letter == 'u' {\n            result += \"U\"\n        } else if letter == 'v'\
    \ {\n            result += \"V\"\n        } else if letter == 'w' {\n        \
    \    result += \"W\"\n        } else if letter == 'x' {\n            result +=\
    \ \"X\"\n        } else if letter == 'y' {\n            result += \"Y\"\n    \
    \    } else if letter == 'z' {\n            result += \"Z\"\n        } else {\n\
    \            result += letter\n        }\n    }\n    return result\n}\n", "  \
    \  result := \"\"\n    for _, letter := range s {\n        if letter == 'a' {\n\
    \            result += \"A\"\n        } else if letter == 'b' {\n            result\
    \ += \"B\"\n        } else if letter == 'c' {\n            result += \"C\"\n \
    \       } else if letter == 'd' {\n            result += \"D\"\n        } else\
    \ if letter == 'e' {\n            result += \"E\"\n        } else if letter ==\
    \ 'f' {\n            result += \"F\"\n        } else if letter == 'g' {\n    \
    \        result += \"G\"\n        } else if letter == 'h' {\n            result\
    \ += \"H\"\n        } else if letter == 'i' {\n            result += \"I\"\n \
    \       } else if letter == 'j' {\n            result += \"J\"\n        } else\
    \ if letter == 'k' {\n            result += \"K\"\n        } else if letter ==\
    \ 'l' {\n            result += \"L\"\n        } else if letter == 'm' {\n    \
    \        result += \"M\"\n        } else if letter == 'n' {\n            result\
    \ += \"N\"\n        } else if letter == 'o' {\n            result += \"O\"\n \
    \       } else if letter == 'p' {\n            result += \"P\"\n        } else\
    \ if letter == 'q' {\n            result += \"Q\"\n        } else if letter ==\
    \ 'r' {\n            result += \"R\"\n        } else if letter == 's' {\n    \
    \        result += \"S\"\n        } else if letter == 't' {\n            result\
    \ += \"T\"\n        } else if letter == 'u' {\n            result += \"U\"\n \
    \       } else if letter == 'v' {\n            result += \"V\"\n        } else\
    \ if letter == 'w' {\n            result += \"W\"\n        } else if letter ==\
    \ 'x' {\n            result += \"X\"\n        } else if letter == 'y' {\n    \
    \        result += \"Y\"\n        } else if letter == 'z' {\n            result\
    \ += \"Z\"\n        } else {\n            result += letter\n        }\n    }\n\
    \    return result\n}\n", "    result := \"\"\n    for _, letter := range s {\n\
    \        if letter == 'a' {\n            result += string([]rune(letter)[0])\n\
    \        } else {\n            result += string([]rune(letter)[1])\n        }\n\
    \    }\n    return result\n}\n", "    result := \"\"\n    for _, letter := range\
    \ s {\n        if letter == 'a' {\n            result += \"B\"\n        } else\
    \ if letter == 'b' {\n            result += \"A\"\n        } else if letter ==\
    \ 'c' {\n            result += \"D\"\n        } else if letter == 'd' {\n    \
    \        result += \"C\"\n        } else if letter == 'e' {\n            result\
    \ += \"F\"\n        } else if letter == 'f' {\n            result += \"E\"\n \
    \       } else if letter == 'g' {\n            result += \"H\"\n        } else\
    \ if letter == 'h' {\n            result += \"G\"\n        } else if letter ==\
    \ 'i' {\n            result += \"J\"\n        } else if letter == 'j' {\n    \
    \        result += \"I\"\n        } else if letter == 'k' {\n            result\
    \ += \"L\"\n        } else if letter == 'l' {\n            result += \"K\"\n \
    \       } else if letter == 'm' {\n            result += \"N\"\n        } else\
    \ if letter == 'n' {\n            result += \"M\"\n        } else if letter ==\
    \ 'o' {\n            result += \"P\"\n        } else if letter == 'p' {\n    \
    \        result += \"O\"\n        } else if letter == 'q' {\n            result\
    \ += \"R\"\n        } else if letter == 'r' {\n            result += \"Q\"\n \
    \       } else if letter == 's' {\n            result += \"T\"\n        } else\
    \ if letter == 't' {\n            result += \"S\"\n        } else if letter ==\
    \ 'u' {\n            result += \"V\"\n        } else if letter == 'v' {\n    \
    \        result += \"U\"\n        } else if letter == 'w' {\n            result\
    \ += \"X\"\n        } else if letter == 'x' {\n            result += \"W\"\n \
    \       } else if letter == 'y' {\n            result += \"Z\"\n        } else\
    \ if letter == 'z' {\n            result += \"Y\"\n        }\n    }\n    return\
    \ result\n}\n", "    result := \"\"\n    for _, letter := range s {\n        if\
    \ letter == ' ' {\n            result += letter\n        } else {\n          \
    \  result += string([]byte(letter)) + string([]byte(string([]byte(letter)) + string([]byte(letter))))\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, letter\
    \ := range s {\n        if letter == ' ' {\n            result += letter\n   \
    \     } else {\n            result += string([]byte(letter)) + string([]byte(string([]byte(letter))\
    \ + string([]byte(string([]byte(letter)) + string([]byte(letter))))))\n      \
    \  }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char :=\
    \ range s {\n        if char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[26-int(char)-65])\n\
    \        } else {\n            result += string([]rune(char)[26-int(char)])\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, letter\
    \ := range s {\n        if letter == 'a' {\n            result += \"B\"\n    \
    \    } else if letter == 'b' {\n            result += \"A\"\n        } else if\
    \ letter == 'c' {\n            result += \"D\"\n        } else if letter == 'd'\
    \ {\n            result += \"C\"\n        } else if letter == 'e' {\n        \
    \    result += \"F\"\n        } else if letter == 'f' {\n            result +=\
    \ \"E\"\n        } else if letter == 'g' {\n            result += \"H\"\n    \
    \    } else if letter == 'h' {\n            result += \"G\"\n        } else if\
    \ letter == 'i' {\n            result += \"J\"\n        } else if letter == 'j'\
    \ {\n            result += \"I\"\n        } else if letter == 'k' {\n        \
    \    result += \"L\"\n        } else if letter == 'l' {\n            result +=\
    \ \"K\"\n        } else if letter == 'm' {\n            result += \"N\"\n    \
    \    } else if letter == 'n' {\n            result += \"M\"\n        } else if\
    \ letter == 'o' {\n            result += \"P\"\n        } else if letter == 'p'\
    \ {\n            result += \"O\"\n        } else if letter == 'q' {\n        \
    \    result += \"R\"\n        } else if letter == 'r' {\n            result +=\
    \ \"Q\"\n        } else if letter == 's' {\n            result += \"T\"\n    \
    \    } else if letter == 't' {\n            result += \"S\"\n        } else if\
    \ letter == 'u' {\n            result += \"V\"\n        } else if letter == 'v'\
    \ {\n            result += \"U\"\n        } else if letter == 'w' {\n        \
    \    result += \"X\"\n        } else if letter == 'x' {\n            result +=\
    \ \"W\"\n        } else if letter == 'y' {\n            result += \"Z\"\n    \
    \    } else if letter == 'z' {\n            result += \"Y\"\n        } else {\n\
    \            result += letter\n        }\n    }\n    return result\n}\n", "  \
    \  result := \"\"\n    for _, letter := range s {\n        if letter == ' ' {\n\
    \            result += letter\n        } else {\n            result += string([]byte(letter))\
    \ + string([]byte(string([]byte(letter)) + string([]byte(letter))))\n        }\n\
    \    }\n    return result\n}\n", "    result := \"\"\n    for _, letter := range\
    \ s {\n        if letter == ' ' {\n            result += letter\n        } else\
    \ {\n            result += string([]byte(letter)) + string([]byte(string([]byte(letter))\
    \ + string([]byte(letter))))\n        }\n    }\n    return result\n}\n", "   \
    \ var result string\n    for _, char := range s {\n        if char >= 'a' && char\
    \ <= 'z' {\n            result += string([]byte{char - 'a' + 'A'})\n        }\
    \ else {\n            result += char\n        }\n    }\n    return result\n}\n",
  "    result := \"\"\n    for _, letter := range s {\n        if letter == 'a' {\n\
    \            result = result + \"A\"\n        } else if letter == 'b' {\n    \
    \        result = result + \"B\"\n        } else if letter == 'c' {\n        \
    \    result = result + \"C\"\n        } else if letter == 'd' {\n            result\
    \ = result + \"D\"\n        } else if letter == 'e' {\n            result = result\
    \ + \"E\"\n        } else if letter == 'f' {\n            result = result + \"\
    F\"\n        } else if letter == 'g' {\n            result = result + \"G\"\n\
    \        } else if letter == 'h' {\n            result = result + \"H\"\n    \
    \    } else if letter == 'i' {\n            result = result + \"I\"\n        }\
    \ else if letter == 'j' {\n            result = result + \"J\"\n        } else\
    \ if letter == 'k' {\n            result = result + \"K\"\n        } else if letter\
    \ == 'l' {\n            result = result + \"L\"\n        } else if letter == 'm'\
    \ {\n            result = result + \"M\"\n        } else if letter == 'n' {\n\
    \            result = result + \"N\"\n        } else if letter == 'o' {\n    \
    \        result = result + \"O\"\n        } else if letter == 'p' {\n        \
    \    result = result + \"P\"\n        } else if letter == 'q' {\n            result\
    \ = result + \"Q\"\n        } else if letter == 'r' {\n            result = result\
    \ + \"R\"\n        } else if letter == 's' {\n            result = result + \"\
    S\"\n        } else if letter == 't' {\n            result = result + \"T\"\n\
    \        } else if letter == 'u' {\n            result = result + \"U\"\n    \
    \    } else if letter == 'v' {\n            result = result + \"V\"\n        }\
    \ else if letter == 'w' {\n            result = result + \"W\"\n        } else\
    \ if letter == 'x' {\n            result = result + \"X\"\n        } else if letter\
    \ == 'y' {\n            result = result + \"Y\"\n        } else if letter == 'z'\
    \ {\n            result = result + \"Z\"\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, letter := range s {\n        if letter ==\
    \ ' ' {\n            result += letter\n        } else {\n            result +=\
    \ string([]byte(letter)) + string([]byte(string([]byte(letter)) + string([]byte(letter))))\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char\
    \ := range s {\n        if char >= 'a' && char <= 'z' {\n            result +=\
    \ string([]byte{char - 'a' + 'A'})\n        } else {\n            result += char\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char\
    \ := range s {\n        if char >= 'a' && char <= 'z' {\n            result +=\
    \ string([]byte{char - 'a' + 'A'})\n        } else {\n            result += char\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, letter\
    \ := range s {\n        if letter == ' ' {\n            result += letter\n   \
    \     } else {\n            result += string([]byte(letter)) + string([]byte(string([]byte(letter))\
    \ + string([]byte(letter))))\n        }\n    }\n    return result\n}\n", "   \
    \ result := \"\"\n    for _, v := range s {\n        if v >= 'a' && v <= 'z' {\n\
    \            result += string(v)\n        } else {\n            result += string(v)\
    \ + string(unicode.ToUpper(v))\n        }\n    }\n    return result\n}\n", " \
    \   result := \"\"\n    for _, letter := range s {\n        if letter == 'a' ||\
    \ letter == 'e' || letter == 'i' || letter == 'o' || letter == 'u' {\n       \
    \     result += string(letter + 32)\n        } else {\n            result += letter\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, letter\
    \ := range s {\n        if letter == 'a' || letter == 'A' {\n            letter\
    \ = string(unicode.ToLower(letter))\n        }\n        if letter == 'b' || letter\
    \ == 'B' {\n            letter = string(unicode.ToUpper(letter))\n        }\n\
    \        result += letter\n    }\n    return result\n}\n", "    result := \"\"\
    \n    for _, letter := range s {\n        if letter == ' ' {\n            result\
    \ += letter\n        } else {\n            result += string([]byte(letter))\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, letter\
    \ := range s {\n        if letter == 'a' {\n            result += \"B\"\n    \
    \    } else if letter == 'b' {\n            result += \"A\"\n        } else if\
    \ letter == 'c' {\n            result += \"D\"\n        } else if letter == 'd'\
    \ {\n            result += \"C\"\n        } else if letter == 'e' {\n        \
    \    result += \"F\"\n        } else if letter == 'f' {\n            result +=\
    \ \"E\"\n        } else if letter == 'g' {\n            result += \"H\"\n    \
    \    } else if letter == 'h' {\n            result += \"G\"\n        } else if\
    \ letter == 'i' {\n            result += \"J\"\n        } else if letter == 'j'\
    \ {\n            result += \"I\"\n        } else if letter == 'k' {\n        \
    \    result += \"L\"\n        } else if letter == 'l' {\n            result +=\
    \ \"K\"\n        } else if letter == 'm' {\n            result += \"N\"\n    \
    \    } else if letter == 'n' {\n            result += \"M\"\n        } else if\
    \ letter == 'o' {\n            result += \"P\"\n        } else if letter == 'p'\
    \ {\n            result += \"O\"\n        } else if letter == 'q' {\n        \
    \    result += \"R\"\n        } else if letter == 'r' {\n            result +=\
    \ \"Q\"\n        } else if letter == 's' {\n            result += \"T\"\n    \
    \    } else if letter == 't' {\n            result += \"S\"\n        } else if\
    \ letter == 'u' {\n            result += \"V\"\n        } else if letter == 'v'\
    \ {\n            result += \"U\"\n        } else if letter == 'w' {\n        \
    \    result += \"X\"\n        } else if letter == 'x' {\n            result +=\
    \ \"W\"\n        } else if letter == 'y' {\n            result += \"Z\"\n    \
    \    } else if letter == 'z' {\n            result += \"Y\"\n        } else {\n\
    \            result += letter\n        }\n    }\n    return result\n}\n", "  \
    \  var result string\n    for _, letter := range s {\n        if letter == 'a'\
    \ || letter == 'e' || letter == 'i' || letter == 'o' || letter == 'u' {\n    \
    \        result = result + string(letter) + string(letter)\n        } else {\n\
    \            result = result + string(letter)\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, v := range s {\n        if v >= 'a' && v\
    \ <= 'z' {\n            result += string(v - 'a') + string(v - 'A')\n        }\
    \ else {\n            result += v\n        }\n    }\n    return result\n}\n",
  "    result := \"\"\n    for _, letter := range s {\n        if letter == 'a' {\n\
    \            result += \"A\"\n        } else if letter == 'b' {\n            result\
    \ += \"B\"\n        } else if letter == 'c' {\n            result += \"C\"\n \
    \       } else if letter == 'd' {\n            result += \"D\"\n        } else\
    \ if letter == 'e' {\n            result += \"E\"\n        } else if letter ==\
    \ 'f' {\n            result += \"F\"\n        } else if letter == 'g' {\n    \
    \        result += \"G\"\n        } else if letter == 'h' {\n            result\
    \ += \"H\"\n        } else if letter == 'i' {\n            result += \"I\"\n \
    \       } else if letter == 'j' {\n            result += \"J\"\n        } else\
    \ if letter == 'k' {\n            result += \"K\"\n        } else if letter ==\
    \ 'l' {\n            result += \"L\"\n        } else if letter == 'm' {\n    \
    \        result += \"M\"\n        } else if letter == 'n' {\n            result\
    \ += \"N\"\n        } else if letter == 'o' {\n            result += \"O\"\n \
    \       } else if letter == 'p' {\n            result += \"P\"\n        } else\
    \ if letter == 'q' {\n            result += \"Q\"\n        } else if letter ==\
    \ 'r' {\n            result += \"R\"\n        } else if letter == 's' {\n    \
    \        result += \"S\"\n        } else if letter == 't' {\n            result\
    \ += \"T\"\n        } else if letter == 'u' {\n            result += \"U\"\n \
    \       } else if letter == 'v' {\n            result += \"V\"\n        } else\
    \ if letter == 'w' {\n            result += \"W\"\n        } else if letter ==\
    \ 'x' {\n            result += \"X\"\n        } else if letter == 'y' {\n    \
    \        result += \"Y\"\n        } else if letter == 'z' {\n            result\
    \ += \"Z\"\n        } else {\n            result += letter\n        }\n    }\n\
    \    return result\n}\n", "    result := \"\"\n    for _, letter := range s {\n\
    \        if letter == ' ' {\n            result += letter\n        } else {\n\
    \            result += string([]byte(letter)) + string([]byte(string([]byte(letter))\
    \ + string([]byte(letter))))\n        }\n    }\n    return result\n}\n", "   \
    \ result := \"\"\n    for _, letter := range s {\n        if letter == 'a' {\n\
    \            result += \"A\"\n        } else if letter == 'b' {\n            result\
    \ += \"B\"\n        } else if letter == 'c' {\n            result += \"C\"\n \
    \       } else if letter == 'd' {\n            result += \"D\"\n        } else\
    \ if letter == 'e' {\n            result += \"E\"\n        } else if letter ==\
    \ 'f' {\n            result += \"F\"\n        } else if letter == 'g' {\n    \
    \        result += \"G\"\n        } else if letter == 'h' {\n            result\
    \ += \"H\"\n        } else if letter == 'i' {\n            result += \"I\"\n \
    \       } else if letter == 'j' {\n            result += \"J\"\n        } else\
    \ if letter == 'k' {\n            result += \"K\"\n        } else if letter ==\
    \ 'l' {\n            result += \"L\"\n        } else if letter == 'm' {\n    \
    \        result += \"M\"\n        } else if letter == 'n' {\n            result\
    \ += \"N\"\n        } else if letter == 'o' {\n            result += \"O\"\n \
    \       } else if letter == 'p' {\n            result += \"P\"\n        } else\
    \ if letter == 'q' {\n            result += \"Q\"\n        } else if letter ==\
    \ 'r' {\n            result += \"R\"\n        } else if letter == 's' {\n    \
    \        result += \"S\"\n        } else if letter == 't' {\n            result\
    \ += \"T\"\n        } else if letter == 'u' {\n            result += \"U\"\n \
    \       } else if letter == 'v' {\n            result += \"V\"\n        } else\
    \ if letter == 'w' {\n            result += \"W\"\n        } else if letter ==\
    \ 'x' {\n            result += \"X\"\n        } else if letter == 'y' {\n    \
    \        result += \"Y\"\n        } else if letter == 'z' {\n            result\
    \ += \"Z\"\n        } else {\n            result += letter\n        }\n    }\n\
    \    return result\n}\n", "    var result string\n    for _, letter := range s\
    \ {\n        if letter == 'a' || letter == 'e' || letter == 'i' || letter == 'o'\
    \ || letter == 'u' {\n            result = result + string(letter) + string(letter)\n\
    \        } else {\n            result = result + string(letter)\n        }\n \
    \   }\n    return result\n}\n", "    result := \"\"\n    for _, letter := range\
    \ s {\n        if letter == ' ' {\n            result = result + letter\n    \
    \    } else {\n            result += \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\
    [letter]\n        }\n    }\n    return result\n}\n", "    result := \"\"\n   \
    \ for _, letter := range s {\n        if letter == ' ' {\n            result =\
    \ result + letter\n        } else {\n            result += string([]byte(letter))\
    \ + string([]byte(string([]byte(letter)) + string([]byte(letter))))\n        }\n\
    \    }\n    return result\n}\n", "    result := \"\"\n    for _, letter := range\
    \ s {\n        if letter == ' ' {\n            result += letter\n        } else\
    \ {\n            result += string([]byte(letter)) + string([]byte(string([]byte(letter))\
    \ + string([]byte(letter))))\n        }\n    }\n    return result\n}\n", "   \
    \ result := \"\"\n    for _, letter := range s {\n        if letter == 'a' ||\
    \ letter == 'e' || letter == 'i' || letter == 'o' || letter == 'u' {\n       \
    \     result += string(letter)\n        } else {\n            result += string(letter\
    \ + 32)\n        }\n    }\n    return result\n}\n", "    result := \"\"\n    for\
    \ _, char := range s {\n        if char >= 'a' && char <= 'z' {\n            result\
    \ += string([]byte{char - 'a' + 'A'})\n        } else {\n            result +=\
    \ char\n        }\n    }\n    return result\n}\n", "    result := \"\"\n    for\
    \ _, letter := range s {\n        if letter == 'a' {\n            result += \"\
    B\"\n        } else if letter == 'b' {\n            result += \"A\"\n        }\
    \ else if letter == 'c' {\n            result += \"D\"\n        } else if letter\
    \ == 'd' {\n            result += \"C\"\n        } else if letter == 'e' {\n \
    \           result += \"F\"\n        } else if letter == 'f' {\n            result\
    \ += \"E\"\n        } else if letter == 'g' {\n            result += \"H\"\n \
    \       } else if letter == 'h' {\n            result += \"G\"\n        } else\
    \ if letter == 'i' {\n            result += \"J\"\n        } else if letter ==\
    \ 'j' {\n            result += \"I\"\n        } else if letter == 'k' {\n    \
    \        result += \"L\"\n        } else if letter == 'l' {\n            result\
    \ += \"K\"\n        } else if letter == 'm' {\n            result += \"N\"\n \
    \       } else if letter == 'n' {\n            result += \"M\"\n        } else\
    \ if letter == 'o' {\n            result += \"P\"\n        } else if letter ==\
    \ 'p' {\n            result += \"O\"\n        } else if letter == 'q' {\n    \
    \        result += \"R\"\n        } else if letter == 'r' {\n            result\
    \ += \"Q\"\n        } else if letter == 's' {\n            result += \"T\"\n \
    \       } else if letter == 't' {\n            result += \"S\"\n        } else\
    \ if letter == 'u' {\n            result += \"V\"\n        } else if letter ==\
    \ 'v' {\n            result += \"U\"\n        } else if letter == 'w' {\n    \
    \        result += \"X\"\n        } else if letter == 'x' {\n            result\
    \ += \"W\"\n        } else if letter == 'y' {\n            result += \"Z\"\n \
    \       } else if letter == 'z' {\n            result += \"Y\"\n        } else\
    \ {\n            result += letter\n        }\n    }\n    return result\n}\n",
  "    result := \"\"\n    for _, letter := range s {\n        if letter == ' ' {\n\
    \            result = result + letter\n        } else {\n            result +=\
    \ \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"[strings.Index(letter, \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ) + 1] + letter\n        }\n    }\n    return result\n}\n", "    result := \"\"\
    \n    for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n    \
    \        result += string([]rune(char)[26 - int(char)-65])\n        } else {\n\
    \            result += string([]rune(char)[26 - int(char)])\n        }\n    }\n\
    \    return result\n}\n", "    result := \"\"\n    for _, char := range s {\n\
    \        if char >= 'a' && char <= 'z' {\n            result += string([]byte{byte(char)})\n\
    \        } else {\n            result += string([]byte{byte(ord(char) - 32)})\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char\
    \ := range s {\n        if char >= 'a' && char <= 'z' {\n            result +=\
    \ string([]byte{char - 'a' + 'A'})\n        } else {\n            result += char\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char\
    \ := range s {\n        if char >= 'a' && char <= 'z' {\n            result +=\
    \ string([]rune(char)[int8(char)-int8('a')])\n        } else {\n            result\
    \ += string([]rune(char)[int8(char)-int8('A')])\n        }\n    }\n    return\
    \ result\n}\n", "    var result string\n    for _, v := range s {\n        if\
    \ v >= 'a' && v <= 'z' {\n            result += string(v - 'a')\n        } else\
    \ {\n            result += v\n        }\n    }\n    return result\n}\n", "   \
    \ result := \"\"\n    for _, char := range s {\n        if char >= 'a' && char\
    \ <= 'z' {\n            result += string([]rune(char)[int8(char)-int8('a')])\n\
    \        } else {\n            result += string([]rune(char)[int8(char)-int8('A')])\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char\
    \ := range s {\n        if char >= 'a' && char <= 'z' {\n            result +=\
    \ string([]byte{char - 32, char - 96})\n        } else {\n            result +=\
    \ char\n        }\n    }\n    return result\n}\n", "    result := \"\"\n    for\
    \ _, letter := range s {\n        if letter == ' ' {\n            result += \"\
    \ \"\n        } else {\n            result += strings.ToUpper(letter) + strings.ToLower(letter)\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, letter\
    \ := range s {\n        if letter == ' ' {\n            result += letter\n   \
    \     } else {\n            result += string([]byte(letter)) + string([]byte(string([]byte(letter))\
    \ + string([]byte(letter))))\n        }\n    }\n    return result\n}\n", "   \
    \ result := \"\"\n    for _, char := range s {\n        if char >= 'a' && char\
    \ <= 'z' {\n            result += string([]rune(char)[26-int(char)-'a'])\n   \
    \     } else {\n            result += char\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, char := range s {\n        if char >= 'a'\
    \ && char <= 'z' {\n            result += string([]rune(char)[unicode.ToLower(unicode.ToLower(char))])\n\
    \        } else {\n            result += string([]rune(char)[unicode.ToUpper(unicode.ToUpper(char))])\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char\
    \ := range s {\n        if char >= 'a' && char <= 'z' {\n            result +=\
    \ string([]rune(char)[int8(char) - 'a' + 1])\n        } else {\n            result\
    \ += string([]rune(char)[int8(char) - 'a'])\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, letter := range s {\n        if letter ==\
    \ 'a' || letter == 'e' || letter == 'i' || letter == 'o' || letter == 'u' {\n\
    \            result += string(letter) + string(letter)\n        } else {\n   \
    \         result += letter\n        }\n    }\n    return result\n}\n", "    result\
    \ := \"\"\n    for _, letter := range s {\n        if letter == ' ' {\n      \
    \      result = result + letter\n        } else {\n            result += \"A\"\
    \ + string([]byte{letter})\n        }\n    }\n    return result\n}\n", "    result\
    \ := \"\"\n    for _, v := range s {\n        if v >= 'a' && v <= 'z' {\n    \
    \        result += string(v - 'a')\n        } else if v >= 'A' && v <= 'Z' {\n\
    \            result += string(v - 'A')\n        } else {\n            result +=\
    \ v\n        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _,\
    \ v := range s {\n        if v >= 'a' && v <= 'z' {\n            result += string(v\
    \ - 'a')\n        } else if v >= 'A' && v <= 'Z' {\n            result += string(v\
    \ - 'A')\n        } else {\n            result += v\n        }\n    }\n    return\
    \ result\n}\n", "    result := \"\"\n    for _, v := range s {\n        if v >=\
    \ 'a' && v <= 'z' {\n            result += string(v)\n        } else {\n     \
    \       result += string(v + 32)\n        }\n    }\n    return result\n}\n", " \
    \   result := \"\"\n    for _, char := range s {\n        if char >= 'a' && char\
    \ <= 'z' {\n            result += string([]byte{char - 'a' + 'A'})\n        }\
    \ else {\n            result += char\n        }\n    }\n    return result\n}\n",
  "    result := \"\"\n    for _, letter := range s {\n        if letter == 'a' {\n\
    \            result += \"A\"\n        } else if letter == 'b' {\n            result\
    \ += \"B\"\n        } else if letter == 'c' {\n            result += \"C\"\n \
    \       } else if letter == 'd' {\n            result += \"D\"\n        } else\
    \ if letter == 'e' {\n            result += \"E\"\n        } else if letter ==\
    \ 'f' {\n            result += \"F\"\n        } else if letter == 'g' {\n    \
    \        result += \"G\"\n        } else if letter == 'h' {\n            result\
    \ += \"H\"\n        } else if letter == 'i' {\n            result += \"I\"\n \
    \       } else if letter == 'j' {\n            result += \"J\"\n        } else\
    \ if letter == 'k' {\n            result += \"K\"\n        } else if letter ==\
    \ 'l' {\n            result += \"L\"\n        } else if letter == 'm' {\n    \
    \        result += \"M\"\n        } else if letter == 'n' {\n            result\
    \ += \"N\"\n        } else if letter == 'o' {\n            result += \"O\"\n \
    \       } else if letter == 'p' {\n            result += \"P\"\n        } else\
    \ if letter == 'q' {\n            result += \"Q\"\n        } else if letter ==\
    \ 'r' {\n            result += \"R\"\n        } else if letter == 's' {\n    \
    \        result += \"S\"\n        } else if letter == 't' {\n            result\
    \ += \"T\"\n        } else if letter == 'u' {\n            result += \"U\"\n \
    \       } else if letter == 'v' {\n            result += \"V\"\n        } else\
    \ if letter == 'w' {\n            result += \"W\"\n        } else if letter ==\
    \ 'x' {\n            result += \"X\"\n        } else if letter == 'y' {\n    \
    \        result += \"Y\"\n        } else if letter == 'z' {\n            result\
    \ += \"Z\"\n        } else {\n            result += letter\n        }\n    }\n\
    \    return result\n}\n", "    result := \"\"\n    for _, letter := range s {\n\
    \        if letter == 'a' || letter == 'A' {\n            letter = string(unicode.ToLower(letter))\n\
    \        }\n        if letter == 'b' || letter == 'B' {\n            letter =\
    \ string(unicode.ToUpper(letter))\n        }\n        result += letter\n    }\n\
    \    return result\n}\n", "    result := \"\"\n    for _, letter := range s {\n\
    \        if letter == 'a' {\n            result += \"B\"\n        } else if letter\
    \ == 'b' {\n            result += \"A\"\n        } else if letter == 'c' {\n \
    \           result += \"D\"\n        } else if letter == 'd' {\n            result\
    \ += \"C\"\n        } else if letter == 'e' {\n            result += \"F\"\n \
    \       } else if letter == 'f' {\n            result += \"E\"\n        } else\
    \ if letter == 'g' {\n            result += \"H\"\n        } else if letter ==\
    \ 'h' {\n            result += \"G\"\n        } else if letter == 'i' {\n    \
    \        result += \"J\"\n        } else if letter == 'j' {\n            result\
    \ += \"I\"\n        } else if letter == 'k' {\n            result += \"L\"\n \
    \       } else if letter == 'l' {\n            result += \"K\"\n        } else\
    \ if letter == 'm' {\n            result += \"N\"\n        } else if letter ==\
    \ 'n' {\n            result += \"M\"\n        } else if letter == 'o' {\n    \
    \        result += \"P\"\n        } else if letter == 'p' {\n            result\
    \ += \"O\"\n        } else if letter == 'q' {\n            result += \"R\"\n \
    \       } else if letter == 'r' {\n            result += \"Q\"\n        } else\
    \ if letter == 's' {\n            result += \"T\"\n        } else if letter ==\
    \ 't' {\n            result += \"S\"\n        } else if letter == 'u' {\n    \
    \        result += \"V\"\n        } else if letter == 'v' {\n            result\
    \ += \"U\"\n        } else if letter == 'w' {\n            result += \"X\"\n \
    \       } else if letter == 'x' {\n            result += \"W\"\n        } else\
    \ if letter == 'y' {\n            result += \"Z\"\n        } else if letter ==\
    \ 'z' {\n            result += \"Y\"\n        }\n    }\n    return result\n}\n",
  "    result := \"\"\n    for _, char := range s {\n        if char >= 'a' && char\
    \ <= 'z' {\n            result += string([]rune(char)[26-int(char)-'a'])\n   \
    \     } else {\n            result += string([]rune(char)[26-int(char)])\n   \
    \     }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char\
    \ := range s {\n        if char >= 'a' && char <= 'z' {\n            result +=\
    \ string([]byte{char - 'a' + 'A'})\n        } else {\n            result += char\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, letter\
    \ := range s {\n        if letter == ' ' {\n            result = result + letter\n\
    \        } else {\n            result += \"A\" + letter\n        }\n    }\n  \
    \  return result\n}\n", "    result := \"\"\n    for _, letter := range s {\n\
    \        if letter == ' ' {\n            result += letter\n        } else {\n\
    \            result += string([]byte(letter)) + string([]byte(string([]byte(letter))\
    \ + string([]byte(letter))))\n        }\n    }\n    return result\n}\n", "   \
    \ result := \"\"\n    for _, letter := range s {\n        if letter == 'a' {\n\
    \            result += \"A\"\n        } else if letter == 'b' {\n            result\
    \ += \"B\"\n        } else if letter == 'c' {\n            result += \"C\"\n \
    \       } else if letter == 'd' {\n            result += \"D\"\n        } else\
    \ if letter == 'e' {\n            result += \"E\"\n        } else if letter ==\
    \ 'f' {\n            result += \"F\"\n        } else if letter == 'g' {\n    \
    \        result += \"G\"\n        } else if letter == 'h' {\n            result\
    \ += \"H\"\n        } else if letter == 'i' {\n            result += \"I\"\n \
    \       } else if letter == 'j' {\n            result += \"J\"\n        } else\
    \ if letter == 'k' {\n            result += \"K\"\n        } else if letter ==\
    \ 'l' {\n            result += \"L\"\n        } else if letter == 'm' {\n    \
    \        result += \"M\"\n        } else if letter == 'n' {\n            result\
    \ += \"N\"\n        } else if letter == 'o' {\n            result += \"O\"\n \
    \       } else if letter == 'p' {\n            result += \"P\"\n        } else\
    \ if letter == 'q' {\n            result += \"Q\"\n        } else if letter ==\
    \ 'r' {\n            result += \"R\"\n        } else if letter == 's' {\n    \
    \        result += \"S\"\n        } else if letter == 't' {\n            result\
    \ += \"T\"\n        } else if letter == 'u' {\n            result += \"U\"\n \
    \       } else if letter == 'v' {\n            result += \"V\"\n        } else\
    \ if letter == 'w' {\n            result += \"W\"\n        } else if letter ==\
    \ 'x' {\n            result += \"X\"\n        } else if letter == 'y' {\n    \
    \        result += \"Y\"\n        } else if letter == 'z' {\n            result\
    \ += \"Z\"\n        } else {\n            result += letter\n        }\n    }\n\
    \    return result\n}\n", "    result := \"\"\n    for _, letter := range s {\n\
    \        if letter == 'a' {\n            result += \"A\"\n        } else if letter\
    \ == 'b' {\n            result += \"B\"\n        } else if letter == 'c' {\n \
    \           result += \"C\"\n        } else if letter == 'd' {\n            result\
    \ += \"D\"\n        } else if letter == 'e' {\n            result += \"E\"\n \
    \       } else if letter == 'f' {\n            result += \"F\"\n        } else\
    \ if letter == 'g' {\n            result += \"G\"\n        } else if letter ==\
    \ 'h' {\n            result += \"H\"\n        } else if letter == 'i' {\n    \
    \        result += \"I\"\n        } else if letter == 'j' {\n            result\
    \ += \"J\"\n        } else if letter == 'k' {\n            result += \"K\"\n \
    \       } else if letter == 'l' {\n            result += \"L\"\n        } else\
    \ if letter == 'm' {\n            result += \"M\"\n        } else if letter ==\
    \ 'n' {\n            result += \"N\"\n        } else if letter == 'o' {\n    \
    \        result += \"O\"\n        } else if letter == 'p' {\n            result\
    \ += \"P\"\n        } else if letter == 'q' {\n            result += \"Q\"\n \
    \       } else if letter == 'r' {\n            result += \"R\"\n        } else\
    \ if letter == 's' {\n            result += \"S\"\n        } else if letter ==\
    \ 't' {\n            result += \"T\"\n        } else if letter == 'u' {\n    \
    \        result += \"U\"\n        } else if letter == 'v' {\n            result\
    \ += \"V\"\n        } else if letter == 'w' {\n            result += \"W\"\n \
    \       } else if letter == 'x' {\n            result += \"X\"\n        } else\
    \ if letter == 'y' {\n            result += \"Y\"\n        } else if letter ==\
    \ 'z' {\n            result += \"Z\"\n        } else {\n            result +=\
    \ letter\n        }\n    }\n    return result\n}\n", "    result := \"\"\n   \
    \ for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n        \
    \    result += string([]rune(char)[1::-1])\n        } else {\n            result\
    \ += string([]rune(char)[1::-1])\n        }\n    }\n    return result\n}\n", " \
    \   result := \"\"\n    for _, char := range s {\n        if char >= 'a' && char\
    \ <= 'z' {\n            result += string([]rune(char)[26-int(char)-97])\n    \
    \    } else {\n            result += string([]rune(char)[26-int(char)])\n    \
    \    }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char :=\
    \ range s {\n        if char >= 'a' && char <= 'z' {\n            result += string([]byte{char\
    \ - 'a' + 'A'})\n        } else {\n            result += char\n        }\n   \
    \ }\n    return result\n}\n", "    result := \"\"\n    for _, v := range s {\n\
    \        if v >= 'a' && v <= 'z' {\n            result += string(v - 'a' + 'A')\n\
    \        } else {\n            result += v\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, letter := range s {\n        if letter ==\
    \ 'a' {\n            result += \"B\"\n        } else if letter == 'b' {\n    \
    \        result += \"A\"\n        } else if letter == 'c' {\n            result\
    \ += \"D\"\n        } else if letter == 'd' {\n            result += \"C\"\n \
    \       } else if letter == 'e' {\n            result += \"F\"\n        } else\
    \ if letter == 'f' {\n            result += \"E\"\n        } else if letter ==\
    \ 'g' {\n            result += \"H\"\n        } else if letter == 'h' {\n    \
    \        result += \"G\"\n        } else if letter == 'i' {\n            result\
    \ += \"J\"\n        } else if letter == 'j' {\n            result += \"I\"\n \
    \       } else if letter == 'k' {\n            result += \"L\"\n        } else\
    \ if letter == 'l' {\n            result += \"K\"\n        } else if letter ==\
    \ 'm' {\n            result += \"N\"\n        } else if letter == 'n' {\n    \
    \        result += \"M\"\n        } else if letter == 'o' {\n            result\
    \ += \"P\"\n        } else if letter == 'p' {\n            result += \"O\"\n \
    \       } else if letter == 'q' {\n            result += \"R\"\n        } else\
    \ if letter == 'r' {\n            result += \"Q\"\n        } else if letter ==\
    \ 's' {\n            result += \"T\"\n        } else if letter == 't' {\n    \
    \        result += \"S\"\n        } else if letter == 'u' {\n            result\
    \ += \"V\"\n        } else if letter == 'v' {\n            result += \"U\"\n \
    \       } else if letter == 'w' {\n            result += \"X\"\n        } else\
    \ if letter == 'x' {\n            result += \"W\"\n        } else if letter ==\
    \ 'y' {\n            result += \"Z\"\n        } else if letter == 'z' {\n    \
    \        result += \"Y\"\n        } else {\n            result += letter\n   \
    \     }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, letter\
    \ := range s {\n        if letter == 'a' {\n            result += \"B\"\n    \
    \    } else if letter == 'b' {\n            result += \"A\"\n        } else if\
    \ letter == 'c' {\n            result += \"D\"\n        } else if letter == 'd'\
    \ {\n            result += \"C\"\n        } else if letter == 'e' {\n        \
    \    result += \"F\"\n        } else if letter == 'f' {\n            result +=\
    \ \"E\"\n        } else if letter == 'g' {\n            result += \"H\"\n    \
    \    } else if letter == 'h' {\n            result += \"G\"\n        } else if\
    \ letter == 'i' {\n            result += \"J\"\n        } else if letter == 'j'\
    \ {\n            result += \"I\"\n        } else if letter == 'k' {\n        \
    \    result += \"L\"\n        } else if letter == 'l' {\n            result +=\
    \ \"K\"\n        } else if letter == 'm' {\n            result += \"N\"\n    \
    \    } else if letter == 'n' {\n            result += \"M\"\n        } else if\
    \ letter == 'o' {\n            result += \"P\"\n        } else if letter == 'p'\
    \ {\n            result += \"O\"\n        } else if letter == 'q' {\n        \
    \    result += \"R\"\n        } else if letter == 'r' {\n            result +=\
    \ \"Q\"\n        } else if letter == 's' {\n            result += \"T\"\n    \
    \    } else if letter == 't' {\n            result += \"S\"\n        } else if\
    \ letter == 'u' {\n            result += \"V\"\n        } else if letter == 'v'\
    \ {\n            result += \"U\"\n        } else if letter == 'w' {\n        \
    \    result += \"X\"\n        } else if letter == 'x' {\n            result +=\
    \ \"W\"\n        } else if letter == 'y' {\n            result += \"Z\"\n    \
    \    } else if letter == 'z' {\n            result += \"Y\"\n        } else {\n\
    \            result += letter\n        }\n    }\n    return result\n}\n", "  \
    \  result := \"\"\n    for _, letter := range s {\n        if letter == ' ' {\n\
    \            result += letter\n        } else {\n            result += string([]byte(letter))\
    \ + string([]byte(string([]byte(letter)) + string([]byte(letter))))\n        }\n\
    \    }\n    return result\n}\n", "    result := \"\"\n    for _, letter := range\
    \ s {\n        if letter == ' ' {\n            result = result + letter\n    \
    \    } else {\n            result = result + string([]byte(letter)) + string([]byte(string([]byte(letter))\
    \ + string([]byte(letter))))\n        }\n    }\n    return result\n}\n", "   \
    \ result := \"\"\n    for _, letter := range s {\n        if letter == ' ' {\n\
    \            result = result + letter\n        } else {\n            result =\
    \ result + string([]byte(letter)) + string([]byte(string([]byte(letter)) + string([]byte(letter))))\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, letter\
    \ := range s {\n        if letter == 'a' {\n            result += \"A\"\n    \
    \    } else if letter == 'b' {\n            result += \"B\"\n        } else if\
    \ letter == 'c' {\n            result += \"C\"\n        } else if letter == 'd'\
    \ {\n            result += \"D\"\n        } else if letter == 'e' {\n        \
    \    result += \"E\"\n        } else if letter == 'f' {\n            result +=\
    \ \"F\"\n        } else if letter == 'g' {\n            result += \"G\"\n    \
    \    } else if letter == 'h' {\n            result += \"H\"\n        } else if\
    \ letter == 'i' {\n            result += \"I\"\n        } else if letter == 'j'\
    \ {\n            result += \"J\"\n        } else if letter == 'k' {\n        \
    \    result += \"K\"\n        } else if letter == 'l' {\n            result +=\
    \ \"L\"\n        } else if letter == 'm' {\n            result += \"M\"\n    \
    \    } else if letter == 'n' {\n            result += \"N\"\n        } else if\
    \ letter == 'o' {\n            result += \"O\"\n        } else if letter == 'p'\
    \ {\n            result += \"P\"\n        } else if letter == 'q' {\n        \
    \    result += \"Q\"\n        } else if letter == 'r' {\n            result +=\
    \ \"R\"\n        } else if letter == 's' {\n            result += \"S\"\n    \
    \    } else if letter == 't' {\n            result += \"T\"\n        } else if\
    \ letter == 'u' {\n            result += \"U\"\n        } else if letter == 'v'\
    \ {\n            result += \"V\"\n        } else if letter == 'w' {\n        \
    \    result += \"W\"\n        } else if letter == 'x' {\n            result +=\
    \ \"X\"\n        } else if letter == 'y' {\n            result += \"Y\"\n    \
    \    } else if letter == 'z' {\n            result += \"Z\"\n        } else {\n\
    \            result += letter\n        }\n    }\n    return result\n}\n", "  \
    \  result := \"\"\n    for _, letter := range s {\n        if letter == ' ' {\n\
    \            result += letter\n        } else {\n            result += string([]byte(letter))\
    \ + string([]byte(string([]byte(letter)) + string([]byte(letter))))\n        }\n\
    \    }\n    return result\n}\n", "    result := \"\"\n    for _, letter := range\
    \ s {\n        if letter == ' ' {\n            result = result + letter\n    \
    \    } else {\n            result = result + string([]byte{letter})\n        }\n\
    \    }\n    if result != \"\" {\n        result = result[:len(result)-1]\n   \
    \ }\n    return result\n}\n", "    result := \"\"\n    for _, letter := range\
    \ s {\n        if letter == 'a' {\n            result += \"B\"\n        } else\
    \ if letter == 'b' {\n            result += \"a\"\n        } else if letter ==\
    \ 'c' {\n            result += \"D\"\n        } else if letter == 'd' {\n    \
    \        result += \"c\"\n        } else if letter == 'e' {\n            result\
    \ += \"F\"\n        } else if letter == 'f' {\n            result += \"e\"\n \
    \       } else if letter == 'g' {\n            result += \"H\"\n        } else\
    \ if letter == 'h' {\n            result += \"g\"\n        } else if letter ==\
    \ 'i' {\n            result += \"J\"\n        } else if letter == 'j' {\n    \
    \        result += \"i\"\n        } else if letter == 'k' {\n            result\
    \ += \"L\"\n        } else if letter == 'l' {\n            result += \"k\"\n \
    \       } else if letter == 'm' {\n            result += \"N\"\n        } else\
    \ if letter == 'n' {\n            result += \"m\"\n        } else if letter ==\
    \ 'o' {\n            result += \"P\"\n        } else if letter == 'p' {\n    \
    \        result += \"o\"\n        } else if letter == 'q' {\n            result\
    \ += \"R\"\n        } else if letter == 'r' {\n            result += \"q\"\n \
    \       } else if letter == 's' {\n            result += \"T\"\n        } else\
    \ if letter == 't' {\n            result += \"s\"\n        } else if letter ==\
    \ 'u' {\n            result += \"V\"\n        } else if letter == 'v' {\n    \
    \        result += \"u\"\n        } else if letter == 'w' {\n            result\
    \ += \"X\"\n        } else if letter == 'x' {\n            result += \"w\"\n \
    \       } else if letter == 'y' {\n            result += \"Y\"\n        } else\
    \ if letter == 'z' {\n            result += \"Z\"\n        } else {\n        \
    \    result += letter\n        }\n    }\n    return result\n}\n", "    result\
    \ := \"\"\n    for _, letter := range s {\n        if letter == ' ' {\n      \
    \      result += letter\n        } else {\n            result += string([]byte(letter))\
    \ + string([]byte(string([]byte(letter)) + string([]byte(letter))))\n        }\n\
    \    }\n    return result\n}\n", "    result := \"\"\n    for _, char := range\
    \ s {\n        if char >= 'a' && char <= 'z' {\n            result += string([]byte{char\
    \ - 'a', char - 'A'})\n        } else {\n            result += char\n        }\n\
    \    }\n    return result\n}\n", "    result := \"\"\n    for _, letter := range\
    \ s {\n        if letter == 'a' || letter == 'e' || letter == 'i' || letter ==\
    \ 'o' || letter == 'u' {\n            result += string([]rune(letter)[0])\n  \
    \      } else {\n            result += letter\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, letter := range s {\n        if letter ==\
    \ 'a' {\n            result += \"A\"\n        } else if letter == 'b' {\n    \
    \        result += \"B\"\n        } else if letter == 'c' {\n            result\
    \ += \"C\"\n        } else if letter == 'd' {\n            result += \"D\"\n \
    \       } else if letter == 'e' {\n            result += \"E\"\n        } else\
    \ if letter == 'f' {\n            result += \"F\"\n        } else if letter ==\
    \ 'g' {\n            result += \"G\"\n        } else if letter == 'h' {\n    \
    \        result += \"H\"\n        } else if letter == 'i' {\n            result\
    \ += \"I\"\n        } else if letter == 'j' {\n            result += \"J\"\n \
    \       } else if letter == 'k' {\n            result += \"K\"\n        } else\
    \ if letter == 'l' {\n            result += \"L\"\n        } else if letter ==\
    \ 'm' {\n            result += \"M\"\n        } else if letter == 'n' {\n    \
    \        result += \"N\"\n        } else if letter == 'o' {\n            result\
    \ += \"O\"\n        } else if letter == 'p' {\n            result += \"P\"\n \
    \       } else if letter == 'q' {\n            result += \"Q\"\n        } else\
    \ if letter == 'r' {\n            result += \"R\"\n        } else if letter ==\
    \ 's' {\n            result += \"S\"\n        } else if letter == 't' {\n    \
    \        result += \"T\"\n        } else if letter == 'u' {\n            result\
    \ += \"U\"\n        } else if letter == 'v' {\n            result += \"V\"\n \
    \       } else if letter == 'w' {\n            result += \"W\"\n        } else\
    \ if letter == 'x' {\n            result += \"X\"\n        } else if letter ==\
    \ 'y' {\n            result += \"Y\"\n        } else if letter == 'z' {\n    \
    \        result += \"Z\"\n        }\n    }\n    return result\n}\n", "    result\
    \ := \"\"\n    for _, letter := range s {\n        if letter == ' ' {\n      \
    \      result += letter\n        } else {\n            result += string([]rune(letter)...)\n\
    \        }\n    }\n    return result\n}\n", "    var result string\n    for _,\
    \ char := range s {\n        if char >= 'a' && char <= 'z' {\n            result\
    \ += string([]byte{char - 'a' + 'A'})\n        } else {\n            result +=\
    \ char\n        }\n    }\n    return result\n}\n", "    result := \"\"\n    for\
    \ _, letter := range s {\n        if letter == 'a' {\n            result += \"\
    A\"\n        } else if letter == 'b' {\n            result += \"B\"\n        }\
    \ else if letter == 'c' {\n            result += \"C\"\n        } else if letter\
    \ == 'd' {\n            result += \"D\"\n        } else if letter == 'e' {\n \
    \           result += \"E\"\n        } else if letter == 'f' {\n            result\
    \ += \"F\"\n        } else if letter == 'g' {\n            result += \"G\"\n \
    \       } else if letter == 'h' {\n            result += \"H\"\n        } else\
    \ if letter == 'i' {\n            result += \"I\"\n        } else if letter ==\
    \ 'j' {\n            result += \"J\"\n        } else if letter == 'k' {\n    \
    \        result += \"K\"\n        } else if letter == 'l' {\n            result\
    \ += \"L\"\n        } else if letter == 'm' {\n            result += \"M\"\n \
    \       } else if letter == 'n' {\n            result += \"N\"\n        } else\
    \ if letter == 'o' {\n            result += \"O\"\n        } else if letter ==\
    \ 'p' {\n            result += \"P\"\n        } else if letter == 'q' {\n    \
    \        result += \"Q\"\n        } else if letter == 'r' {\n            result\
    \ += \"R\"\n        } else if letter == 's' {\n            result += \"S\"\n \
    \       } else if letter == 't' {\n            result += \"T\"\n        } else\
    \ if letter == 'u' {\n            result += \"U\"\n        } else if letter ==\
    \ 'v' {\n            result += \"V\"\n        } else if letter == 'w' {\n    \
    \        result += \"W\"\n        } else if letter == 'x' {\n            result\
    \ += \"X\"\n        } else if letter == 'y' {\n            result += \"Y\"\n \
    \       } else if letter == 'z' {\n            result += \"Z\"\n        }\n  \
    \  }\n    return result\n}\n", "    result := \"\"\n    for _, v := range s {\n\
    \        if v >= 'a' && v <= 'z' {\n            result += string(v - 'a') + string(v\
    \ - 'A')\n        } else {\n            result += v\n        }\n    }\n    return\
    \ result\n}\n", "    result := \"\"\n    for _, char := range s {\n        if\
    \ char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[int8(char)-'a'+1])\n\
    \        } else {\n            result += string([]rune(char)[int8(char)-'A'+1])\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, letter\
    \ := range s {\n        if letter == ' ' {\n            result = result + letter\n\
    \        } else {\n            result += \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"[letter]\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, letter\
    \ := range s {\n        if letter == 'a' || letter == 'e' || letter == 'i' ||\
    \ letter == 'o' || letter == 'u' {\n            result += string([]rune(letter)...)\n\
    \        } else {\n            result += letter\n        }\n    }\n    return\
    \ result\n}\n", "    result := \"\"\n    for _, letter := range s {\n        if\
    \ letter == ' ' {\n            result = result + letter\n        } else {\n  \
    \          result += \"A\" + string([]byte{letter})\n        }\n    }\n    return\
    \ result\n}\n", "    result := \"\"\n    for _, letter := range s {\n        if\
    \ letter == ' ' {\n            result = result + letter\n        } else {\n  \
    \          result += \"A\" + string([]byte{letter})\n        }\n    }\n    return\
    \ result\n}\n", "    result := \"\"\n    for _, letter := range s {\n        if\
    \ letter == 'a' || letter == 'A' {\n            result += string([]rune(letter)[0])\n\
    \        } else {\n            result += letter\n        }\n    }\n    return\
    \ result\n}\n", "    result := \"\"\n    for _, char := range s {\n        if\
    \ char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[26-int(char)-'a'])\n\
    \        } else {\n            result += string([]rune(char)[int('a')+int(char)-'a'])\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char\
    \ := range s {\n        if char >= 'a' && char <= 'z' {\n            result +=\
    \ string([]byte{char - 'a' + 'A'})\n        } else {\n            result += char\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char\
    \ := range s {\n        if char >= 'a' && char <= 'z' {\n            result +=\
    \ string([]rune(char)[1::-1])\n        } else {\n            result += string([]rune(char)[1::-1])\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, letter\
    \ := range s {\n        if letter == 'a' {\n            result += \"A\"\n    \
    \    } else if letter == 'b' {\n            result += \"B\"\n        } else if\
    \ letter == 'c' {\n            result += \"C\"\n        } else if letter == 'd'\
    \ {\n            result += \"D\"\n        } else if letter == 'e' {\n        \
    \    result += \"E\"\n        } else if letter == 'f' {\n            result +=\
    \ \"F\"\n        } else if letter == 'g' {\n            result += \"G\"\n    \
    \    } else if letter == 'h' {\n            result += \"H\"\n        } else if\
    \ letter == 'i' {\n            result += \"I\"\n        } else if letter == 'j'\
    \ {\n            result += \"J\"\n        } else if letter == 'k' {\n        \
    \    result += \"K\"\n        } else if letter == 'l' {\n            result +=\
    \ \"L\"\n        } else if letter == 'm' {\n            result += \"M\"\n    \
    \    } else if letter == 'n' {\n            result += \"N\"\n        } else if\
    \ letter == 'o' {\n            result += \"O\"\n        } else if letter == 'p'\
    \ {\n            result += \"P\"\n        } else if letter == 'q' {\n        \
    \    result += \"Q\"\n        } else if letter == 'r' {\n            result +=\
    \ \"R\"\n        } else if letter == 's' {\n            result += \"S\"\n    \
    \    } else if letter == 't' {\n            result += \"T\"\n        } else if\
    \ letter == 'u' {\n            result += \"U\"\n        } else if letter == 'v'\
    \ {\n            result += \"V\"\n        } else if letter == 'w' {\n        \
    \    result += \"W\"\n        } else if letter == 'x' {\n            result +=\
    \ \"X\"\n        } else if letter == 'y' {\n            result += \"Y\"\n    \
    \    } else if letter == 'z' {\n            result += \"Z\"\n        }\n    }\n\
    \    return result\n}\n", "    result := \"\"\n    for _, v := range s {\n   \
    \     if v >= 'a' && v <= 'z' {\n            result += string(v - 'a')\n     \
    \   } else {\n            result += v\n        }\n    }\n    return result\n}\n",
  "    result := \"\"\n    for _, char := range s {\n        if char >= 'a' && char\
    \ <= 'z' {\n            result += string([]rune(char)[unicode.ToLower(unicode.ToLower(char))])\n\
    \        } else {\n            result += string([]rune(char)[unicode.ToUpper(unicode.ToUpper(char))])\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, letter\
    \ := range s {\n        if letter == ' ' {\n            result += letter\n   \
    \     } else {\n            result += string([]byte(letter)) + string([]byte(string([]byte(letter))\
    \ + string([]byte(letter))))\n        }\n    }\n    return result\n}\n", "   \
    \ result := \"\"\n    for _, v := range s {\n        if v >= 'a' && v <= 'z' {\n\
    \            result += string(v - 'a')\n        } else {\n            result +=\
    \ v\n        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _,\
    \ v := range s {\n        if v >= 'a' && v <= 'z' {\n            result += string(v\
    \ - 'a')\n        } else {\n            result += v\n        }\n    }\n    return\
    \ result\n}\n", "    result := \"\"\n    for _, char := range s {\n        if\
    \ char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[unicode.ToLower(unicode.ToLower(char))])\n\
    \        } else {\n            result += string([]rune(char)[unicode.ToUpper(unicode.ToUpper(char))])\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char\
    \ := range s {\n        if char >= 'a' && char <= 'z' {\n            result +=\
    \ string([]byte{char - 'a' + 'A'})\n        } else {\n            result += char\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, letter\
    \ := range s {\n        if letter == 'a' {\n            result += \"A\"\n    \
    \    } else if letter == 'b' {\n            result += \"B\"\n        } else if\
    \ letter == 'c' {\n            result += \"C\"\n        } else if letter == 'd'\
    \ {\n            result += \"D\"\n        } else if letter == 'e' {\n        \
    \    result += \"E\"\n        } else if letter == 'f' {\n            result +=\
    \ \"F\"\n        } else if letter == 'g' {\n            result += \"G\"\n    \
    \    } else if letter == 'h' {\n            result += \"H\"\n        } else if\
    \ letter == 'i' {\n            result += \"I\"\n        } else if letter == 'j'\
    \ {\n            result += \"J\"\n        } else if letter == 'k' {\n        \
    \    result += \"K\"\n        } else if letter == 'l' {\n            result +=\
    \ \"L\"\n        } else if letter == 'm' {\n            result += \"M\"\n    \
    \    } else if letter == 'n' {\n            result += \"N\"\n        } else if\
    \ letter == 'o' {\n            result += \"O\"\n        } else if letter == 'p'\
    \ {\n            result += \"P\"\n        } else if letter == 'q' {\n        \
    \    result += \"Q\"\n        } else if letter == 'r' {\n            result +=\
    \ \"R\"\n        } else if letter == 's' {\n            result += \"S\"\n    \
    \    } else if letter == 't' {\n            result += \"T\"\n        } else if\
    \ letter == 'u' {\n            result += \"U\"\n        } else if letter == 'v'\
    \ {\n            result += \"V\"\n        } else if letter == 'w' {\n        \
    \    result += \"W\"\n        } else if letter == 'x' {\n            result +=\
    \ \"X\"\n        } else if letter == 'y' {\n            result += \"Y\"\n    \
    \    } else if letter == 'z' {\n            result += \"Z\"\n        } else {\n\
    \            result += letter\n        }\n    }\n    return result\n}\n", "  \
    \  result := \"\"\n    for _, letter := range s {\n        if letter == ' ' {\n\
    \            result += letter\n        } else {\n            result += string([]byte(letter))\
    \ + string([]byte(string([]byte(letter)) + string([]byte(letter))))\n        }\n\
    \    }\n    return result\n}\n", "    result := \"\"\n    for _, letter := range\
    \ s {\n        if letter == ' ' {\n            result = result + letter\n    \
    \    } else {\n            result = result + string([]byte(letter)) + string([]byte(string([]byte(letter))\
    \ + string([]byte(letter))))\n        }\n    }\n    return result\n}\n", "   \
    \ result := \"\"\n    for _, letter := range s {\n        if letter == 'a' ||\
    \ letter == 'e' || letter == 'i' || letter == 'o' || letter == 'u' {\n       \
    \     result += string(letter)\n        } else {\n            result += string(letter\
    \ + 32)\n        }\n    }\n    return result\n}\n", "    result := \"\"\n    for\
    \ _, letter := range s {\n        if letter == 'a' || letter == 'A' {\n      \
    \      result += \"A\"\n        } else if letter == 'b' || letter == 'B' {\n \
    \           result += \"B\"\n        } else if letter == 'c' || letter == 'C'\
    \ {\n            result += \"C\"\n        } else if letter == 'd' || letter ==\
    \ 'D' {\n            result += \"D\"\n        } else if letter == 'e' || letter\
    \ == 'E' {\n            result += \"E\"\n        } else if letter == 'f' || letter\
    \ == 'F' {\n            result += \"F\"\n        } else if letter == 'g' || letter\
    \ == 'G' {\n            result += \"G\"\n        } else if letter == 'h' || letter\
    \ == 'H' {\n            result += \"H\"\n        } else if letter == 'i' || letter\
    \ == 'I' {\n            result += \"I\"\n        } else if letter == 'j' || letter\
    \ == 'J' {\n            result += \"J\"\n        } else if letter == 'k' || letter\
    \ == 'K' {\n            result += \"K\"\n        } else if letter == 'l' || letter\
    \ == 'L' {\n            result += \"L\"\n        } else if letter == 'm' || letter\
    \ == 'M' {\n            result += \"M\"\n        } else if letter == 'n' || letter\
    \ == 'N' {\n            result += \"N\"\n        } else if letter == 'o' || letter\
    \ == 'O' {\n            result += \"O\"\n        } else if letter == 'p' || letter\
    \ == 'P' {\n            result += \"P\"\n        } else if letter == 'q' || letter\
    \ == 'Q' {\n            result += \"Q\"\n        } else if letter == 'r' || letter\
    \ == 'R' {\n            result += \"R\"\n        } else if letter == 's' || letter\
    \ == 'S' {\n            result += \"S\"\n        } else if letter == 't' || letter\
    \ == 'T' {\n            result += \"T\"\n        } else if letter == 'u' || letter\
    \ == 'U' {\n            result += \"U\"\n        } else if letter == 'v' || letter\
    \ == 'V' {\n            result += \"V\"\n        } else if letter == 'w' || letter\
    \ == 'W' {\n            result += \"W\"\n        } else if letter == 'x' || letter\
    \ == 'X' {\n            result += \"X\"\n        } else if letter == 'y' || letter\
    \ == 'Y' {\n            result += \"Y\"\n        } else if letter == 'z' || letter\
    \ == 'Z' {\n            result += \"Z\"\n        } else {\n            result\
    \ += letter\n        }\n", "    result := \"\"\n    for _, letter := range s {\n\
    \        if letter == ' ' {\n            result += letter\n        } else {\n\
    \            result += string([]rune(letter)...)\n        }\n    }\n    return\
    \ result\n}\n", "    result := \"\"\n    for _, char := range s {\n        if\
    \ char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[1::-1])\n\
    \        } else {\n            result += string([]rune(char)[:1])\n        }\n\
    \    }\n    return result\n}\n", "    result := \"\"\n    for _, char := range\
    \ s {\n        if char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[26-int(char-97)])\n\
    \        } else {\n            result += string([]rune(char)[26-int(char-65)])\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, letter\
    \ := range s {\n        if letter == 'a' {\n            result += \"A\"\n    \
    \    } else if letter == 'b' {\n            result += \"B\"\n        } else if\
    \ letter == 'c' {\n            result += \"C\"\n        } else if letter == 'd'\
    \ {\n            result += \"D\"\n        } else if letter == 'e' {\n        \
    \    result += \"E\"\n        } else if letter == 'f' {\n            result +=\
    \ \"F\"\n        } else if letter == 'g' {\n            result += \"G\"\n    \
    \    } else if letter == 'h' {\n            result += \"H\"\n        } else if\
    \ letter == 'i' {\n            result += \"I\"\n        } else if letter == 'j'\
    \ {\n            result += \"J\"\n        } else if letter == 'k' {\n        \
    \    result += \"K\"\n        } else if letter == 'l' {\n            result +=\
    \ \"L\"\n        } else if letter == 'm' {\n            result += \"M\"\n    \
    \    } else if letter == 'n' {\n            result += \"N\"\n        } else if\
    \ letter == 'o' {\n            result += \"O\"\n        } else if letter == 'p'\
    \ {\n            result += \"P\"\n        } else if letter == 'q' {\n        \
    \    result += \"Q\"\n        } else if letter == 'r' {\n            result +=\
    \ \"R\"\n        } else if letter == 's' {\n            result += \"S\"\n    \
    \    } else if letter == 't' {\n            result += \"T\"\n        } else if\
    \ letter == 'u' {\n            result += \"U\"\n        } else if letter == 'v'\
    \ {\n            result += \"V\"\n        } else if letter == 'w' {\n        \
    \    result += \"W\"\n        } else if letter == 'x' {\n            result +=\
    \ \"X\"\n        } else if letter == 'y' {\n            result += \"Y\"\n    \
    \    } else if letter == 'z' {\n            result += \"Z\"\n        }\n    }\n\
    \    return result\n}\n", "    result := \"\"\n    for _, letter := range s {\n\
    \        if letter == 'a' {\n            result += \"A\"\n        } else if letter\
    \ == 'b' {\n            result += \"B\"\n        } else if letter == 'c' {\n \
    \           result += \"C\"\n        } else if letter == 'd' {\n            result\
    \ += \"D\"\n        } else if letter == 'e' {\n            result += \"E\"\n \
    \       } else if letter == 'f' {\n            result += \"F\"\n        } else\
    \ if letter == 'g' {\n            result += \"G\"\n        } else if letter ==\
    \ 'h' {\n            result += \"H\"\n        } else if letter == 'i' {\n    \
    \        result += \"I\"\n        } else if letter == 'j' {\n            result\
    \ += \"J\"\n        } else if letter == 'k' {\n            result += \"K\"\n \
    \       } else if letter == 'l' {\n            result += \"L\"\n        } else\
    \ if letter == 'm' {\n            result += \"M\"\n        } else if letter ==\
    \ 'n' {\n            result += \"N\"\n        } else if letter == 'o' {\n    \
    \        result += \"O\"\n        } else if letter == 'p' {\n            result\
    \ += \"P\"\n        } else if letter == 'q' {\n            result += \"Q\"\n \
    \       } else if letter == 'r' {\n            result += \"R\"\n        } else\
    \ if letter == 's' {\n            result += \"S\"\n        } else if letter ==\
    \ 't' {\n            result += \"T\"\n        } else if letter == 'u' {\n    \
    \        result += \"U\"\n        } else if letter == 'v' {\n            result\
    \ += \"V\"\n        } else if letter == 'w' {\n            result += \"W\"\n \
    \       } else if letter == 'x' {\n            result += \"X\"\n        } else\
    \ if letter == 'y' {\n            result += \"Y\"\n        } else if letter ==\
    \ 'z' {\n            result += \"Z\"\n        } else {\n            result +=\
    \ letter\n        }\n    }\n    return result\n}\n", "    result := \"\"\n   \
    \ for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n        \
    \    result += string([]rune(char)[26-int(char)-97])\n        } else {\n     \
    \       result += string([]rune(char)[26-int(char)])\n        }\n    }\n    return\
    \ result\n}\n", "    result := \"\"\n    for _, letter := range s {\n        if\
    \ letter == 'a' {\n            result += \"A\"\n        } else if letter == 'b'\
    \ {\n            result += \"B\"\n        } else if letter == 'c' {\n        \
    \    result += \"C\"\n        } else if letter == 'd' {\n            result +=\
    \ \"D\"\n        } else if letter == 'e' {\n            result += \"E\"\n    \
    \    } else if letter == 'f' {\n            result += \"F\"\n        } else if\
    \ letter == 'g' {\n            result += \"G\"\n        } else if letter == 'h'\
    \ {\n            result += \"H\"\n        } else if letter == 'i' {\n        \
    \    result += \"I\"\n        } else if letter == 'j' {\n            result +=\
    \ \"J\"\n        } else if letter == 'k' {\n            result += \"K\"\n    \
    \    } else if letter == 'l' {\n            result += \"L\"\n        } else if\
    \ letter == 'm' {\n            result += \"M\"\n        } else if letter == 'n'\
    \ {\n            result += \"N\"\n        } else if letter == 'o' {\n        \
    \    result += \"O\"\n        } else if letter == 'p' {\n            result +=\
    \ \"P\"\n        } else if letter == 'q' {\n            result += \"Q\"\n    \
    \    } else if letter == 'r' {\n            result += \"R\"\n        } else if\
    \ letter == 's' {\n            result += \"S\"\n        } else if letter == 't'\
    \ {\n            result += \"T\"\n        } else if letter == 'u' {\n        \
    \    result += \"U\"\n        } else if letter == 'v' {\n            result +=\
    \ \"V\"\n        } else if letter == 'w' {\n            result += \"W\"\n    \
    \    } else if letter == 'x' {\n            result += \"X\"\n        } else if\
    \ letter == 'y' {\n            result += \"Y\"\n        } else if letter == 'z'\
    \ {\n            result += \"Z\"\n        } else {\n            result += letter\n\
    \        }\n    }\n    return result\n}\n", "    var result string\n    for _,\
    \ letter := range s {\n        if letter == 'a' {\n            result = result\
    \ + \"A\"\n        } else if letter == 'b' {\n            result = result + \"\
    B\"\n        } else if letter == 'c' {\n            result = result + \"C\"\n\
    \        } else if letter == 'd' {\n            result = result + \"D\"\n    \
    \    } else if letter == 'e' {\n            result = result + \"E\"\n        }\
    \ else if letter == 'f' {\n            result = result + \"F\"\n        } else\
    \ if letter == 'g' {\n            result = result + \"G\"\n        } else if letter\
    \ == 'h' {\n            result = result + \"H\"\n        } else if letter == 'i'\
    \ {\n            result = result + \"I\"\n        } else if letter == 'j' {\n\
    \            result = result + \"J\"\n        } else if letter == 'k' {\n    \
    \        result = result + \"K\"\n        } else if letter == 'l' {\n        \
    \    result = result + \"L\"\n        } else if letter == 'm' {\n            result\
    \ = result + \"M\"\n        } else if letter == 'n' {\n            result = result\
    \ + \"N\"\n        } else if letter == 'o' {\n            result = result + \"\
    O\"\n        } else if letter == 'p' {\n            result = result + \"P\"\n\
    \        } else if letter == 'q' {\n            result = result + \"Q\"\n    \
    \    } else if letter == 'r' {\n            result = result + \"R\"\n        }\
    \ else if letter == 's' {\n            result = result + \"S\"\n        } else\
    \ if letter == 't' {\n            result = result + \"T\"\n        } else if letter\
    \ == 'u' {\n            result = result + \"U\"\n        } else if letter == 'v'\
    \ {\n            result = result + \"V\"\n        } else if letter == 'w' {\n\
    \            result = result + \"W\"\n        } else if letter == 'x' {\n    \
    \        result = result + \"X\"\n        } else if letter == 'y' {\n        \
    \    result = result + \"Y\"\n        } else if letter == 'z' {\n            result\
    \ = result + \"Z\"\n        }\n    }\n    return result\n}\n", "    result :=\
    \ \"\"\n    for _, letter := range s {\n        if letter == 'a' || letter ==\
    \ 'e' || letter == 'i' || letter == 'o' || letter == 'u' {\n            result\
    \ += string(letter)\n        } else {\n            result += string(letter + 32)\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, letter\
    \ := range s {\n        if letter == 'a' {\n            result += \"B\"\n    \
    \    } else if letter == 'b' {\n            result += \"a\"\n        } else if\
    \ letter == 'c' {\n            result += \"D\"\n        } else if letter == 'd'\
    \ {\n            result += \"c\"\n        } else if letter == 'e' {\n        \
    \    result += \"f\"\n        } else if letter == 'f' {\n            result +=\
    \ \"e\"\n        } else if letter == 'g' {\n            result += \"h\"\n    \
    \    } else if letter == 'h' {\n            result += \"g\"\n        } else if\
    \ letter == 'i' {\n            result += \"j\"\n        } else if letter == 'j'\
    \ {\n            result += \"i\"\n        } else if letter == 'k' {\n        \
    \    result += \"l\"\n        } else if letter == 'l' {\n            result +=\
    \ \"k\"\n        } else if letter == 'm' {\n            result += \"n\"\n    \
    \    } else if letter == 'n' {\n            result += \"m\"\n        } else if\
    \ letter == 'o' {\n            result += \"p\"\n        } else if letter == 'p'\
    \ {\n            result += \"o\"\n        } else if letter == 'q' {\n        \
    \    result += \"r\"\n        } else if letter == 'r' {\n            result +=\
    \ \"q\"\n        } else if letter == 's' {\n            result += \"t\"\n    \
    \    } else if letter == 't' {\n            result += \"s\"\n        } else if\
    \ letter == 'u' {\n            result += \"v\"\n        } else if letter == 'v'\
    \ {\n            result += \"u\"\n        } else if letter == 'w' {\n        \
    \    result += \"x\"\n        } else if letter == 'x' {\n            result +=\
    \ \"w\"\n        } else if letter == 'y' {\n            result += \"z\"\n    \
    \    } else if letter == 'z' {\n            result += \"y\"\n        } else {\n\
    \            result += letter\n        }\n    }\n    return result\n}\n", "  \
    \  result := \"\"\n    for _, letter := range s {\n        if letter == 'a' {\n\
    \            result += \"A\"\n        } else if letter == 'b' {\n            result\
    \ += \"B\"\n        } else if letter == 'c' {\n            result += \"C\"\n \
    \       } else if letter == 'd' {\n            result += \"D\"\n        } else\
    \ if letter == 'e' {\n            result += \"E\"\n        } else if letter ==\
    \ 'f' {\n            result += \"F\"\n        } else if letter == 'g' {\n    \
    \        result += \"G\"\n        } else if letter == 'h' {\n            result\
    \ += \"H\"\n        } else if letter == 'i' {\n            result += \"I\"\n \
    \       } else if letter == 'j' {\n            result += \"J\"\n        } else\
    \ if letter == 'k' {\n            result += \"K\"\n        } else if letter ==\
    \ 'l' {\n            result += \"L\"\n        } else if letter == 'm' {\n    \
    \        result += \"M\"\n        } else if letter == 'n' {\n            result\
    \ += \"N\"\n        } else if letter == 'o' {\n            result += \"O\"\n \
    \       } else if letter == 'p' {\n            result += \"P\"\n        } else\
    \ if letter == 'q' {\n            result += \"Q\"\n        } else if letter ==\
    \ 'r' {\n            result += \"R\"\n        } else if letter == 's' {\n    \
    \        result += \"S\"\n        } else if letter == 't' {\n            result\
    \ += \"T\"\n        } else if letter == 'u' {\n            result += \"U\"\n \
    \       } else if letter == 'v' {\n            result += \"V\"\n        } else\
    \ if letter == 'w' {\n            result += \"W\"\n        } else if letter ==\
    \ 'x' {\n            result += \"X\"\n        } else if letter == 'y' {\n    \
    \        result += \"Y\"\n        } else if letter == 'z' {\n            result\
    \ += \"Z\"\n        }\n    }\n    return result\n}\n", "    result := \"\"\n \
    \   for _, char := range s {\n        if char >= 'a' && char <= 'z' {\n      \
    \      result += string([]rune(char)[unicode.ToLower(unicode.ToLower(char))])\n\
    \        } else {\n            result += string([]rune(char)[unicode.ToUpper(unicode.ToUpper(char))])\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char\
    \ := range s {\n        if char >= 'a' && char <= 'z' {\n            result +=\
    \ string([]byte{char - 'a' + 'A'})\n        } else {\n            result += char\n\
    \        }\n    }\n    return result\n}\n", "    var result string\n    for _,\
    \ char := range s {\n        if char >= 'a' && char <= 'z' {\n            result\
    \ = result + string(char - 'a') + string(char - 'A')\n        } else {\n     \
    \       result = result + string(char)\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, letter := range s {\n        if letter ==\
    \ 'a' {\n            result += \"A\"\n        } else if letter == 'b' {\n    \
    \        result += \"B\"\n        } else if letter == 'c' {\n            result\
    \ += \"C\"\n        } else if letter == 'd' {\n            result += \"D\"\n \
    \       } else if letter == 'e' {\n            result += \"E\"\n        } else\
    \ if letter == 'f' {\n            result += \"F\"\n        } else if letter ==\
    \ 'g' {\n            result += \"G\"\n        } else if letter == 'h' {\n    \
    \        result += \"H\"\n        } else if letter == 'i' {\n            result\
    \ += \"I\"\n        } else if letter == 'j' {\n            result += \"J\"\n \
    \       } else if letter == 'k' {\n            result += \"K\"\n        } else\
    \ if letter == 'l' {\n            result += \"L\"\n        } else if letter ==\
    \ 'm' {\n            result += \"M\"\n        } else if letter == 'n' {\n    \
    \        result += \"N\"\n        } else if letter == 'o' {\n            result\
    \ += \"O\"\n        } else if letter == 'p' {\n            result += \"P\"\n \
    \       } else if letter == 'q' {\n            result += \"Q\"\n        } else\
    \ if letter == 'r' {\n            result += \"R\"\n        } else if letter ==\
    \ 's' {\n            result += \"S\"\n        } else if letter == 't' {\n    \
    \        result += \"T\"\n        } else if letter == 'u' {\n            result\
    \ += \"U\"\n        } else if letter == 'v' {\n            result += \"V\"\n \
    \       } else if letter == 'w' {\n            result += \"W\"\n        } else\
    \ if letter == 'x' {\n            result += \"X\"\n        } else if letter ==\
    \ 'y' {\n            result += \"Y\"\n        } else if letter == 'z' {\n    \
    \        result += \"Z\"\n        } else {\n            result += letter\n   \
    \     }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char\
    \ := range s {\n        if char >= 'a' && char <= 'z' {\n            result +=\
    \ string([]rune(char)[char-'a'+1])\n        } else {\n            result += string([]rune(char)[char-'A'+1])\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, letter\
    \ := range s {\n        if letter == 'a' {\n            result = result + \"A\"\
    \n        } else if letter == 'b' {\n            result = result + \"B\"\n   \
    \     } else if letter == 'c' {\n            result = result + \"C\"\n       \
    \ } else if letter == 'd' {\n            result = result + \"D\"\n        } else\
    \ if letter == 'e' {\n            result = result + \"E\"\n        } else if letter\
    \ == 'f' {\n            result = result + \"F\"\n        } else if letter == 'g'\
    \ {\n            result = result + \"G\"\n        } else if letter == 'h' {\n\
    \            result = result + \"H\"\n        } else if letter == 'i' {\n    \
    \        result = result + \"I\"\n        } else if letter == 'j' {\n        \
    \    result = result + \"J\"\n        } else if letter == 'k' {\n            result\
    \ = result + \"K\"\n        } else if letter == 'l' {\n            result = result\
    \ + \"L\"\n        } else if letter == 'm' {\n            result = result + \"\
    M\"\n        } else if letter == 'n' {\n            result = result + \"N\"\n\
    \        } else if letter == 'o' {\n            result = result + \"O\"\n    \
    \    } else if letter == 'p' {\n            result = result + \"P\"\n        }\
    \ else if letter == 'q' {\n            result = result + \"Q\"\n        } else\
    \ if letter == 'r' {\n            result = result + \"R\"\n        } else if letter\
    \ == 's' {\n            result = result + \"S\"\n        } else if letter == 't'\
    \ {\n            result = result + \"T\"\n        } else if letter == 'u' {\n\
    \            result = result + \"U\"\n        } else if letter == 'v' {\n    \
    \        result = result + \"V\"\n        } else if letter == 'w' {\n        \
    \    result = result + \"W\"\n        } else if letter == 'x' {\n            result\
    \ = result + \"X\"\n        } else if letter == 'y' {\n            result = result\
    \ + \"Y\"\n        } else if letter == 'z' {\n            result = result + \"\
    Z\"\n        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _,\
    \ char := range s {\n        if char >= 'a' && char <= 'z' {\n            result\
    \ += string([]rune(char)[char-'a'+1])\n        } else {\n            result +=\
    \ string([]rune(char)[char-'a'+2])\n        }\n    }\n    return result\n}\n",
  "    var result string\n    for _, char := range s {\n        if char >= 'a' &&\
    \ char <= 'z' {\n            result += string([]rune(char)[26-int(char)-65])\n\
    \        } else {\n            result += string([]rune(char)[26-int(char)])\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, letter\
    \ := range s {\n        if letter == 'a' {\n            result += \"A\"\n    \
    \    } else if letter == 'b' {\n            result += \"B\"\n        } else if\
    \ letter == 'c' {\n            result += \"C\"\n        } else if letter == 'd'\
    \ {\n            result += \"D\"\n        } else if letter == 'e' {\n        \
    \    result += \"E\"\n        } else if letter == 'f' {\n            result +=\
    \ \"F\"\n        } else if letter == 'g' {\n            result += \"G\"\n    \
    \    } else if letter == 'h' {\n            result += \"H\"\n        } else if\
    \ letter == 'i' {\n            result += \"I\"\n        } else if letter == 'j'\
    \ {\n            result += \"J\"\n        } else if letter == 'k' {\n        \
    \    result += \"K\"\n        } else if letter == 'l' {\n            result +=\
    \ \"L\"\n        } else if letter == 'm' {\n            result += \"M\"\n    \
    \    } else if letter == 'n' {\n            result += \"N\"\n        } else if\
    \ letter == 'o' {\n            result += \"O\"\n        } else if letter == 'p'\
    \ {\n            result += \"P\"\n        } else if letter == 'q' {\n        \
    \    result += \"Q\"\n        } else if letter == 'r' {\n            result +=\
    \ \"R\"\n        } else if letter == 's' {\n            result += \"S\"\n    \
    \    } else if letter == 't' {\n            result += \"T\"\n        } else if\
    \ letter == 'u' {\n            result += \"U\"\n        } else if letter == 'v'\
    \ {\n            result += \"V\"\n        } else if letter == 'w' {\n        \
    \    result += \"W\"\n        } else if letter == 'x' {\n            result +=\
    \ \"X\"\n        } else if letter == 'y' {\n            result += \"Y\"\n    \
    \    } else if letter == 'z' {\n            result += \"Z\"\n        }\n    }\n\
    \    return result\n}\n", "    result := \"\"\n    for _, letter := range s {\n\
    \        if letter == 'a' {\n            result += \"B\"\n        } else if letter\
    \ == 'b' {\n            result += \"A\"\n        } else if letter == 'c' {\n \
    \           result += \"D\"\n        } else if letter == 'd' {\n            result\
    \ += \"C\"\n        } else if letter == 'e' {\n            result += \"F\"\n \
    \       } else if letter == 'f' {\n            result += \"E\"\n        } else\
    \ {\n            result += letter\n        }\n    }\n    return result\n}\n",
  "    result := \"\"\n    for _, v := range s {\n        if v >= 'a' && v <= 'z'\
    \ {\n            result += string(v - 'a')\n        } else if v >= 'A' && v <=\
    \ 'Z' {\n            result += string(v - 'A')\n        } else {\n           \
    \ result += v\n        }\n    }\n    return result\n}\n", "    result := \"\"\n\
    \    for _, letter := range s {\n        if letter == 'a' {\n            result\
    \ += \"B\"\n        } else if letter == 'b' {\n            result += \"A\"\n \
    \       } else if letter == 'c' {\n            result += \"D\"\n        } else\
    \ if letter == 'd' {\n            result += \"C\"\n        } else if letter ==\
    \ 'e' {\n            result += \"F\"\n        } else if letter == 'f' {\n    \
    \        result += \"E\"\n        } else if letter == 'g' {\n            result\
    \ += \"H\"\n        } else if letter == 'h' {\n            result += \"G\"\n \
    \       } else if letter == 'i' {\n            result += \"J\"\n        } else\
    \ if letter == 'j' {\n            result += \"I\"\n        } else if letter ==\
    \ 'k' {\n            result += \"L\"\n        } else if letter == 'l' {\n    \
    \        result += \"K\"\n        } else if letter == 'm' {\n            result\
    \ += \"N\"\n        } else if letter == 'n' {\n            result += \"M\"\n \
    \       } else if letter == 'o' {\n            result += \"P\"\n        } else\
    \ if letter == 'p' {\n            result += \"O\"\n        } else if letter ==\
    \ 'q' {\n            result += \"R\"\n        } else if letter == 'r' {\n    \
    \        result += \"Q\"\n        } else if letter == 's' {\n            result\
    \ += \"T\"\n        } else if letter == 't' {\n            result += \"S\"\n \
    \       } else if letter == 'u' {\n            result += \"V\"\n        } else\
    \ if letter == 'v' {\n            result += \"U\"\n        } else if letter ==\
    \ 'w' {\n            result += \"X\"\n        } else if letter == 'x' {\n    \
    \        result += \"W\"\n        } else if letter == 'y' {\n            result\
    \ += \"Z\"\n        } else if letter == 'z' {\n            result += \"Y\"\n \
    \       } else {\n            result += letter\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, letter := range s {\n        if letter ==\
    \ ' ' {\n            result = result + letter\n        } else {\n            result\
    \ = result + string([]byte(letter)) + string([]byte(string([]byte(letter)) + string([]byte(letter))))\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, v\
    \ := range s {\n        if v >= 'a' && v <= 'z' {\n            result += string(v\
    \ - 'a')\n        } else {\n            result += v\n        }\n    }\n    return\
    \ result\n}\n", "    result := \"\"\n    for _, char := range s {\n        if\
    \ char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[char-'a'+1:])\n\
    \        } else {\n            result += string([]rune(char)[char-'a':])\n   \
    \     }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, letter\
    \ := range s {\n        if letter == ' ' {\n            result += letter\n   \
    \     } else {\n            result += string([]byte(letter)) + string([]byte(string([]byte(letter))\
    \ + string([]byte(letter))))\n        }\n    }\n    return result\n}\n", "   \
    \ result := \"\"\n    for _, letter := range s {\n        if letter == ' ' {\n\
    \            result += letter\n        } else {\n            result += string([]byte(letter))\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, letter\
    \ := range s {\n        if letter == 'a' {\n            result = result + \"A\"\
    \n        } else if letter == 'b' {\n            result = result + \"B\"\n   \
    \     } else if letter == 'c' {\n            result = result + \"C\"\n       \
    \ } else if letter == 'd' {\n            result = result + \"D\"\n        } else\
    \ if letter == 'e' {\n            result = result + \"E\"\n        } else if letter\
    \ == 'f' {\n            result = result + \"F\"\n        } else if letter == 'g'\
    \ {\n            result = result + \"G\"\n        } else if letter == 'h' {\n\
    \            result = result + \"H\"\n        } else if letter == 'i' {\n    \
    \        result = result + \"I\"\n        } else if letter == 'j' {\n        \
    \    result = result + \"J\"\n        } else if letter == 'k' {\n            result\
    \ = result + \"K\"\n        } else if letter == 'l' {\n            result = result\
    \ + \"L\"\n        } else if letter == 'm' {\n            result = result + \"\
    M\"\n        } else if letter == 'n' {\n            result = result + \"N\"\n\
    \        } else if letter == 'o' {\n            result = result + \"O\"\n    \
    \    } else if letter == 'p' {\n            result = result + \"P\"\n        }\
    \ else if letter == 'q' {\n            result = result + \"Q\"\n        } else\
    \ if letter == 'r' {\n            result = result + \"R\"\n        } else if letter\
    \ == 's' {\n            result = result + \"S\"\n        } else if letter == 't'\
    \ {\n            result = result + \"T\"\n        } else if letter == 'u' {\n\
    \            result = result + \"U\"\n        } else if letter == 'v' {\n    \
    \        result = result + \"V\"\n        } else if letter == 'w' {\n        \
    \    result = result + \"W\"\n        } else if letter == 'x' {\n            result\
    \ = result + \"X\"\n        } else if letter == 'y' {\n            result = result\
    \ + \"Y\"\n        } else if letter == 'z' {\n            result = result + \"\
    Z\"\n        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _,\
    \ char := range s {\n        if char >= 'a' && char <= 'z' {\n            result\
    \ += string([]rune(char)[int8(char)-int8('a')])\n        } else {\n          \
    \  result += string([]rune(char)[int8(char)-int8('A')])\n        }\n    }\n  \
    \  return result\n}\n", "    var result string\n    for _, char := range s {\n\
    \        if char >= 'a' && char <= 'z' {\n            result += string(char -\
    \ 'a' + 'A')\n        } else {\n            result += char\n        }\n    }\n\
    \    return result\n}\n", "    result := \"\"\n    for _, char := range s {\n\
    \        if char >= 'a' && char <= 'z' {\n            result += string([]byte{byte(char)})\n\
    \        } else {\n            result += string([]byte{byte(ord(char) - 32)})\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char\
    \ := range s {\n        if char >= 'a' && char <= 'z' {\n            result +=\
    \ string([]rune(char)[int8(char)-'a'])\n        } else {\n            result +=\
    \ string([]rune(char)[int8(char)-32])\n        }\n    }\n    return result\n}\n",
  "    result := \"\"\n    for _, char := range s {\n        if char >= 'a' && char\
    \ <= 'z' {\n            result += string([]rune(char)[int8(char)-int8('a')])\n\
    \        } else {\n            result += string([]rune(char)[int8(char)-int8('A')])\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, v\
    \ := range s {\n        if v >= 'a' && v <= 'z' {\n            result += string(v\
    \ - 'a' + 'A')\n        } else {\n            result += v\n        }\n    }\n\
    \    return result\n}\n", "    result := \"\"\n    for _, char := range s {\n\
    \        if char >= 'a' && char <= 'z' {\n            result += string([]rune(char)[unicode.ToLower(unicode.ToLower(char))])\n\
    \        } else {\n            result += string([]rune(char)[unicode.ToUpper(unicode.ToUpper(char))])\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char\
    \ := range s {\n        if char >= 'a' && char <= 'z' {\n            result +=\
    \ string([]byte{char - 'a' + 'A'})\n        } else {\n            result += char\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, v\
    \ := range s {\n        if v >= 'a' && v <= 'z' {\n            result += string(v)\n\
    \        } else {\n            result += string(v + 32)\n        }\n    }\n  \
    \  return result\n}\n", "    result := \"\"\n    for _, letter := range s {\n\
    \        if letter == 'a' {\n            letter = string(unicode.ToLower(letter))\n\
    \        }\n        if letter == 'A' {\n            letter = string(unicode.ToUpper(letter))\n\
    \        }\n        result += letter\n    }\n    return result\n}\n", "    result\
    \ := \"\"\n    for _, v := range s {\n        if v >= 'a' && v <= 'z' {\n    \
    \        result += string(v - 'a')\n        } else {\n            result += string(v)\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, letter\
    \ := range s {\n        if letter == 'a' || letter == 'A' {\n            result\
    \ += string([]rune(letter)[0])\n        } else {\n            result += string(letter)\n\
    \        }\n    }\n    return result\n}\n"]
stop_tokens:
- "\nfunc"
- struct
- "\n// "

name: HumanEval_118_get_closest_vowel
language: go_test.go
prompt: "package get_closest_vowel_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
  )\n\n// You are given a word. Your task is to find the closest vowel that stands\
  \ between \n// two consonants from the right side of the word (case sensitive).\n\
  // Vowels in the beginning and ending doesn't count. Return empty string if you\
  \ didn't\n// find any vowel met the above condition. \n// You may assume that the\
  \ given string contains English letter only.\n// Example:\nfunc get_closest_vowel(word\
  \ string) string {\n"
tests: "func TestGet_Closest_Vowel(t *testing.T) {\n  candidate := get_closest_vowel\n\
  \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
  \   tests := []test{\n     { actual: candidate(\"yogurt\"), expected: \"u\" },\n\
  \     { actual: candidate(\"full\"), expected: \"u\" },\n     { actual: candidate(\"\
  easy\"), expected: \"\" },\n     { actual: candidate(\"eAsy\"), expected: \"\" },\n\
  \     { actual: candidate(\"ali\"), expected: \"\" },\n     { actual: candidate(\"\
  bad\"), expected: \"a\" },\n     { actual: candidate(\"most\"), expected: \"o\"\
  \ },\n     { actual: candidate(\"ab\"), expected: \"\" },\n     { actual: candidate(\"\
  ba\"), expected: \"\" },\n     { actual: candidate(\"quick\"), expected: \"\" },\n\
  \     { actual: candidate(\"anime\"), expected: \"i\" },\n     { actual: candidate(\"\
  Asia\"), expected: \"\" },\n     { actual: candidate(\"Above\"), expected: \"o\"\
  \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
  , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
  %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
  \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
completions: ["    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount\
    \ := 0\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)/2\n   \
    \ vowelsCount += len(vowels)/3\n    vowelsCount += len(vowels)/4\n    vowelsCount\
    \ += len(vowels)/5\n    vowelsCount += len(vowels)/6\n    vowelsCount += len(vowels)/7\n\
    \    vowelsCount += len(vowels)/8\n    vowelsCount += len(vowels)/9\n    vowelsCount\
    \ += len(vowels)/10\n    vowelsCount += len(vowels)/11\n    vowelsCount += len(vowels)/12\n\
    \    vowelsCount += len(vowels)/13\n    vowelsCount += len(vowels)/14\n    vowelsCount\
    \ += len(vowels)/15\n    vowelsCount += len(vowels)/16\n    vowelsCount += len(vowels)/17\n\
    \    vowelsCount += len(vowels)/18\n    vowelsCount += len(vowels)/19\n    vowelsCount\
    \ += len(vowels)/20\n    vowelsCount += len(vowels)/21\n    vowelsCount += len(vowels)/22\n\
    \    vowelsCount += len(vowels)/23\n    vowelsCount += len(vowels)/24\n    vowelsCount\
    \ += len(vowels)/25\n    vowelsCount += len(vowels)/26\n    vowelsCount += len(vowels)/27\n\
    \    vowelsCount += len(vowels)/28\n    vowelsCount += len(vowels)/29\n    vowelsCount\
    \ += len(vowels)/30\n    vowelsCount += len(vowels)/31\n    vowelsCount += len(vowels)/32\n\
    \    vowelsCount += len(vowels)/33\n    vowelsCount += len(vowels)/34\n    vowelsCount\
    \ += len(vowels)/35\n    vowelsCount += len(vowels)/36\n    vowelsCount += len(vowels)/37\n\
    \    vowelsCount += len(vowels)/38\n    vowelsCount += len(vowels)/39\n    vowelsCount\
    \ += len(vowels)/40\n    vowelsCount += len(vowels)/41\n    vowelsCount += len(vowels)/42\n\
    \    vowelsCount += len(vowels)/43\n    vowelsCount += len(vowels)/44\n    vowelsCount\
    \ += len(vowels)/45\n    vowelsCount += len(vowels)/46\n    vowelsCount += len(vowels)/47\n\
    \    vowelsCount += len(vowels)/48\n    vowelsCount += len(vowels)/49\n    vowels",
  "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsLen := len(vowels)\n\
    \    vowelsLen -= 1\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /=\
    \ 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen ", "    vowels := []string{\"a\", \"\
    e\", \"i\", \"o\", \"u\"}\n    vowelsLen := len(vowels)\n    vowelsLen -= 1\n\
    \    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen +=\
    \ 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1", "    vowels := []string{\"a\"\
    , \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount := 0\n    for _, v := range vowels\
    \ {\n        if strings.Contains(word, v) {\n            vowelsCount++\n     \
    \   }\n    }\n    if vowelsCount == 0 {\n        return \"\"\n    }\n    vowelsCount\
    \ -= len(word) - len(strings.Split(word, \"-\")[0])\n    if vowelsCount < 0 {\n\
    \        vowelsCount = 0\n    }\n    for _, v := range vowels {\n        if strings.Contains(word,\
    \ v) {\n            vowelsCount++\n        }\n    }\n    if vowelsCount > 0 {\n\
    \        return \"\"\n    }\n    vowelsCount -= len(word) - len(strings.Split(word,\
    \ \"-\")[1])\n    if vowelsCount < 0 {\n        vowelsCount = 0\n    }\n    for\
    \ _, v := range vowels {\n        if strings.Contains(word, v) {\n           \
    \ vowelsCount++\n        }\n    }\n    if vowelsCount > 0 {\n        return \"\
    \"\n    }\n    return word\n}\n", "    vowels := []string{\"a\", \"e\", \"i\"\
    , \"o\", \"u\"}\n    vowelsCount := 0\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)/2\n    vowelsCount += len(vowels)/3\n    vowelsCount += len(vowels)/4\n\
    \    vowelsCount += len(vowels)/5\n    vowelsCount += len(vowels)/6\n    vowelsCount\
    \ += len(vowels)/7\n    vowelsCount += len(vowels)/8\n    vowelsCount += len(vowels)/9\n\
    \    vowelsCount += len(vowels)/10\n    vowelsCount += len(vowels)/11\n    vowelsCount\
    \ += len(vowels)/12\n    vowelsCount += len(vowels)/13\n    vowelsCount += len(vowels)/14\n\
    \    vowelsCount += len(vowels)/15\n    vowelsCount += len(vowels)/16\n    vowelsCount\
    \ += len(vowels)/17\n    vowelsCount += len(vowels)/18\n    vowelsCount += len(vowels)/19\n\
    \    vowelsCount += len(vowels)/20\n    vowelsCount += len(vowels)/21\n    vowelsCount\
    \ += len(vowels)/22\n    vowelsCount += len(vowels)/23\n    vowelsCount += len(vowels)/24\n\
    \    vowelsCount += len(vowels)/25\n    vowelsCount += len(vowels)/26\n    vowelsCount\
    \ += len(vowels)/27\n    vowelsCount += len(vowels)/28\n    vowelsCount += len(vowels)/29\n\
    \    vowelsCount += len(vowels)/30\n    vowelsCount += len(vowels)/31\n    vowelsCount\
    \ += len(vowels)/32\n    vowelsCount += len(vowels)/33\n    vowelsCount += len(vowels)/34\n\
    \    vowelsCount += len(vowels)/35\n    vowelsCount += len(vowels)/36\n    vowelsCount\
    \ += len(vowels)/37\n    vowelsCount += len(vowels)/38\n    vowelsCount += len(vowels)/39\n\
    \    vowelsCount += len(vowels)/40\n    vowelsCount += len(vowels)/41\n    vowelsCount\
    \ += len(vowels)/42\n    vowelsCount += len(vowels)/43\n    vowelsCount += len(vowels)/44\n\
    \    vowelsCount += len(vowels)/45\n    vowelsCount += len(vowels)/46\n    vowelsCount\
    \ += len(vowels)/47\n    vowelsCount += len(vowels)/48\n    vowelsCount += len(vowels)/49\n\
    \    vowels", "    // Your code here\n    vowels := []string{\"a\", \"e\", \"\
    i\", \"o\", \"u\"}\n    vowelsCount := 0\n    for _, v := range word {\n     \
    \   if v == 'a' || v == 'e' || v == 'i' || v == 'o' || v == 'u' {\n          \
    \  vowelsCount++\n        }\n    }\n    if vowelsCount > 0 {\n        for _, v\
    \ := range word {\n            if v == 'a' || v == 'e' || v == 'i' || v == 'o'\
    \ || v == 'u' {\n                return word\n            }\n        }\n    }\n\
    \    return \"\"\n}\n", "    // Your code here\n    vowels := []string{\"a\",\
    \ \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount := 0\n    for _, v := range word\
    \ {\n        if v == 'a' || v == 'e' || v == 'i' || v == 'o' || v == 'u' {\n \
    \           vowelsCount++\n        }\n    }\n    if vowelsCount > 0 {\n      \
    \  vowelsCount -= 1\n    }\n    if vowelsCount < 0 {\n        vowelsCount += 1\n\
    \    }\n    vowelsCount /= 2\n    vowelsCount %= len(vowels)\n    return vowels[vowelsCount]\n\
    }\n", "    var vowels []string\n    vowels = append(vowels, \"a\", \"e\", \"i\"\
    , \"o\", \"u\")\n    vowels = append(vowels, \"A\", \"E\", \"I\", \"O\", \"U\"\
    )\n    vowels = append(vowels, \"a\", \"e\", \"i\", \"o\", \"u\")\n    vowels\
    \ = append(vowels, \"A\", \"E\", \"I\", \"O\", \"U\")\n    vowels = append(vowels,\
    \ \"a\", \"e\", \"i\", \"o\", \"u\")\n    vowels = append(vowels, \"A\", \"E\"\
    , \"I\", \"O\", \"U\")\n    vowels = append(vowels, \"a\", \"e\", \"i\", \"o\"\
    , \"u\")\n    vowels = append(vowels, \"A\", \"E\", \"I\", \"O\", \"U\")\n   \
    \ vowels = append(vowels, \"a\", \"e\", \"i\", \"o\", \"u\")\n    vowels = append(vowels,\
    \ \"A\", \"E\", \"I\", \"O\", \"U\")\n    vowels = append(vowels, \"a\", \"e\"\
    , \"i\", \"o\", \"u\")\n    vowels = append(vowels, \"A\", \"E\", \"I\", \"O\"\
    , \"U\")\n    vowels = append(vowels, \"a\", \"e\", \"i\", \"o\", \"u\")\n   \
    \ vowels = append(vowels, \"A\", \"E\", \"I\", \"O\", \"U\")\n    vowels = append(vowels,\
    \ \"a\", \"e\", \"i\", \"o\", \"u\")\n    vowels = append(vowels, \"A\", \"E\"\
    , \"I\", \"O\", \"U\")\n    vowels = append(vowels, \"a\", \"e\", \"i\", \"o\"\
    , \"u\")\n    vowels = append(vowels, \"A\", \"E\", \"I\", \"O\", \"U\")\n   \
    \ vowels = append(vowels, \"a\", \"e\", \"i\", \"o\", \"u\")\n    vowels = append(vowels,\
    \ \"A\", \"E\", \"I\", \"O\", \"U\")\n    vowels = append(vowels, \"a\", \"e\"\
    , \"i\", \"o\", \"u\")\n    vowels = append(vowels, \"A\", \"E\", \"I\", \"O\"\
    , \"U\")\n    vowels = append(vowels, \"a\", \"e\", \"i\", \"o\", \"u\")\n   \
    \ vowels = append(vowels, \"A\", \"E\", \"I\", \"O\", \"U\")\n    vowels = append(vowels,\
    \ \"a\", \"e\", \"i\", \"o\", \"u\")\n    vowels = append(vowels, \"A\", \"E\"\
    , \"I\", \"O\", \"U\")\n    vowels = append(vowels, \"a\", \"e\", \"i\", \"o\"\
    , \"u\")\n    vowels = append(vowels, \"A\", \"E\", \"I\", \"O\", \"U\")\n   \
    \ vowels = append(vowels, \"a\", \"e\", \"i\", \"o\", \"u\")\n    vowels = append(vowels,\
    \ \"A\", \"E\", \"I\", \"O\", \"U\")\n    vowels = append(vowels, \"a\", \"e\"\
    , \"i\", \"o\", \"u\")\n    vowels = append(vowels, \"A\", \"E\", \"I", "    //\
    \ Your code here\n    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n\
    \    vowelsCount := 0\n    for _, v := range word {\n        if v == 'a' || v\
    \ == 'e' || v == 'i' || v == 'o' || v == 'u' {\n            vowelsCount++\n  \
    \      }\n    }\n    if vowelsCount < 2 {\n        return \"\"\n    }\n    vowelsCount\
    \ -= 2\n    i := len(word) - 1\n    for {\n        if word[i] == 'a' || word[i]\
    \ == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u' {\n           \
    \ vowelsCount++\n        }\n        if i == 0 {\n            break\n        }\n\
    \        i--\n    }\n    if vowelsCount < 2 {\n        return \"\"\n    }\n  \
    \  vowelsCount -= 2\n    i := len(word) - 1\n    for {\n        if word[i] ==\
    \ 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u'\
    \ {\n            vowelsCount++\n        }\n        if i == 0 {\n            break\n\
    \        }\n        i--\n    }\n    if vowelsCount < 2 {\n        return \"\"\n\
    \    }\n    vowelsCount -= 2\n    i := len(word) - 1\n    for {\n        if word[i]\
    \ == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u'\
    \ {\n            vowelsCount++\n        }\n        if i == 0 {\n            break\n\
    \        }\n        i--\n    }\n    if vowelsCount < 2 {\n        return \"\"\n\
    \    }\n    vowelsCount -= 2\n    i := len(word) - 1\n    for {\n        if word[i]\
    \ == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u'\
    \ {\n            vowelsCount++\n        }\n        if i == 0 {\n            break\n\
    \        }\n        i--\n    }\n    if vowelsCount < 2 {\n        return \"\"\n\
    \    }\n    vowelsCount -= 2\n    i := len(word) - 1\n    for {\n        if word[i]\
    \ == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u'\
    \ {\n            vowelsCount++\n        }\n        if i == 0 {\n            break\n\
    \        }\n        i--\n    }\n    if vowelsCount < 2 {\n        return \"\"\n\
    \    }\n    vowelsCount -= 2\n    i := len(word) - 1\n    for {\n        if word[i]\
    \ == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i]", " \
    \   vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount :=\
    \ 0\n    vowelsCount += len(vowels)\n    for i := len(word) - 1; i >= 0; i-- {\n\
    \        if word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o'\
    \ || word[i] == 'u' {\n            vowelsCount++\n        }\n    }\n    if vowelsCount\
    \ < 2 {\n        return \"\"\n    }\n    vowelsCount -= len(vowels)\n    vowelsCount\
    \ /= 2\n    for i := len(word) - 1; i >= 0; i-- {\n        if word[i] == 'a' ||\
    \ word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u' {\n   \
    \         if vowelsCount > 0 {\n                vowelsCount--\n              \
    \  return word[i]\n            }\n        }\n    }\n    return \"\"\n}\n", " \
    \   vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount :=\
    \ 0\n    for _, v := range vowels {\n        if strings.Contains(word, v) {\n\
    \            vowelsCount++\n        }\n    }\n    if vowelsCount < 2 {\n     \
    \   return \"\"\n    }\n    vowelsCount -= 2\n    vowelsCount %= len(vowels)\n\
    \    vowelsCount += 2\n    lastVowel := strings.LastIndex(word, vowels[vowelsCount])\n\
    \    if lastVowel == -1 {\n        return \"\"\n    }\n    return word[lastVowel+len(vowels[vowelsCount])]\n\
    }\n", "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsLen\
    \ := len(vowels)\n    vowelsLen -= 1\n    vowelsLen /= 2\n    vowelsLen += 2\n\
    \    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen +=\
    \ 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen ", "    vowels :=\
    \ []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsLen := len(vowels)\n\
    \    vowelsLen -= 1\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen -=\
    \ 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen ", "    vowel := []rune{'a', 'e', 'i',\
    \ 'o', 'u'}\n    vowel_count := 0\n    vowel_count := 0\n    for _, char := range\
    \ word {\n        if char == 'a' || char == 'e' || char == 'i' || char == 'o'\
    \ || char == 'u' {\n            vowel_count++\n        }\n    }\n    if vowel_count\
    \ > 0 {\n        for _, char := range word {\n            if char == 'a' || char\
    \ == 'e' || char == 'i' || char == 'o' || char == 'u' {\n                vowel_count--\n\
    \            }\n        }\n    }\n    if vowel_count < 0 {\n        return \"\"\
    \n    }\n    vowel_count := 0\n    vowel_count := 0\n    for _, char := range\
    \ word {\n        if char == 'a' || char == 'e' || char == 'i' || char == 'o'\
    \ || char == 'u' {\n            vowel_count++\n        }\n    }\n    if vowel_count\
    \ > 0 {\n        for _, char := range word {\n            if char == 'a' || char\
    \ == 'e' || char == 'i' || char == 'o' || char == 'u' {\n                vowel_count--\n\
    \            }\n        }\n    }\n    if vowel_count < 0 {\n        return \"\"\
    \n    }\n    vowel_count := 0\n    vowel_count := 0\n    for _, char := range\
    \ word {\n        if char == 'a' || char == 'e' || char == 'i' || char == 'o'\
    \ || char == 'u' {\n            vowel_count++\n        }\n    }\n    if vowel_count\
    \ > 0 {\n        for _, char := range word {\n            if char == 'a' || char\
    \ == 'e' || char == 'i' || char == 'o' || char == 'u' {\n                vowel_count--\n\
    \            }\n        }\n    }\n    if vowel_count < 0 {\n        return \"\"\
    \n    }\n    vowel_count := 0\n    vowel_count := 0\n    for _, char := range\
    \ word {\n        if char == 'a' || char == 'e' || char == 'i' || char == 'o'\
    \ || char == 'u' {\n            vowel_count++\n        }\n    }\n    if vowel_count\
    \ > 0 {\n        for _, char := range word {\n            if char == 'a' || char\
    \ == 'e' || char == 'i' || char == 'o' || char == 'u' {\n                vowel_count--\n\
    \            }\n        }\n    }\n    if vowel_count < 0 {\n        return \"\"\
    \n    }\n    vowel_count := 0\n    vowel_count := 0\n    for _, char := range\
    \ word {\n        if char == 'a' || char == 'e' || char == 'i' || ", "    var\
    \ vowels []string\n    vowels = append(vowels, \"a\", \"e\", \"i\", \"o\", \"\
    u\")\n    vowels = append(vowels, \"a\", \"e\", \"i\", \"o\", \"u\")\n    vowels\
    \ = append(vowels, \"a\", \"e\", \"i\", \"o\", \"u\")\n    vowels = append(vowels,\
    \ \"a\", \"e\", \"i\", \"o\", \"u\")\n    vowels = append(vowels, \"a\", \"e\"\
    , \"i\", \"o\", \"u\")\n    vowels = append(vowels, \"a\", \"e\", \"i\", \"o\"\
    , \"u\")\n    vowels = append(vowels, \"a\", \"e\", \"i\", \"o\", \"u\")\n   \
    \ vowels = append(vowels, \"a\", \"e\", \"i\", \"o\", \"u\")\n    vowels = append(vowels,\
    \ \"a\", \"e\", \"i\", \"o\", \"u\")\n    vowels = append(vowels, \"a\", \"e\"\
    , \"i\", \"o\", \"u\")\n    vowels = append(vowels, \"a\", \"e\", \"i\", \"o\"\
    , \"u\")\n    vowels = append(vowels, \"a\", \"e\", \"i\", \"o\", \"u\")\n   \
    \ vowels = append(vowels, \"a\", \"e\", \"i\", \"o\", \"u\")\n    vowels = append(vowels,\
    \ \"a\", \"e\", \"i\", \"o\", \"u\")\n    vowels = append(vowels, \"a\", \"e\"\
    , \"i\", \"o\", \"u\")\n    vowels = append(vowels, \"a\", \"e\", \"i\", \"o\"\
    , \"u\")\n    vowels = append(vowels, \"a\", \"e\", \"i\", \"o\", \"u\")\n   \
    \ vowels = append(vowels, \"a\", \"e\", \"i\", \"o\", \"u\")\n    vowels = append(vowels,\
    \ \"a\", \"e\", \"i\", \"o\", \"u\")\n    vowels = append(vowels, \"a\", \"e\"\
    , \"i\", \"o\", \"u\")\n    vowels = append(vowels, \"a\", \"e\", \"i\", \"o\"\
    , \"u\")\n    vowels = append(vowels, \"a\", \"e\", \"i\", \"o\", \"u\")\n   \
    \ vowels = append(vowels, \"a\", \"e\", \"i\", \"o\", \"u\")\n    vowels = append(vowels,\
    \ \"a\", \"e\", \"i\", \"o\", \"u\")\n    vowels = append(vowels, \"a\", \"e\"\
    , \"i\", \"o\", \"u\")\n    vowels = append(vowels, \"a\", \"e\", \"i\", \"o\"\
    , \"u\")\n    vowels = append(vowels, \"a\", \"e\", \"i\", \"o\", \"u\")\n   \
    \ vowels = append(vowels, \"a\", \"e\", \"i\", \"o\", \"u\")\n    vowels = append(vowels,\
    \ \"a\", \"e\", \"i\", \"o\", \"u\")\n    vowels = append(vowels, \"a\", \"e\"\
    , \"i\", \"o\", \"u\")\n    vowels = append(vowels, \"a\", \"e\", \"i\", \"o\"\
    , \"u\")\n    vowels = append(vowels, \"a\", \"e\", \"i", "    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount := 0\n    vowelsCount += len(vowels)\n\
    \    for i := len(word) - 1; i >= 0; i-- {\n        if word[i] == 'a' || word[i]\
    \ == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u' {\n           \
    \ vowelsCount++\n        }\n    }\n    if vowelsCount <= 0 {\n        return \"\
    \"\n    }\n    vowelsCount -= len(vowels)\n    for i := len(word) - 1; i >= 0;\
    \ i-- {\n        if word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i]\
    \ == 'o' || word[i] == 'u' {\n            if vowelsCount > 0 {\n             \
    \   vowelsCount--\n                return word[i]\n            }\n        }\n\
    \    }\n    return \"\"\n}\n", "    vowels := []string{\"a\", \"e\", \"i\", \"\
    o\", \"u\"}\n    vowelsCount := 0\n    vowelsCount += len(vowels)\n    for i :=\
    \ len(word) - 1; i >= 0; i-- {\n        if word[i] == 'a' || word[i] == 'e' ||\
    \ word[i] == 'i' || word[i] == 'o' || word[i] == 'u' {\n            vowelsCount++\n\
    \        }\n        if vowelsCount >= len(vowels) {\n            return word[i]\n\
    \        }\n    }\n    return \"\"\n}\n", "    // Your code here\n    vowels :=\
    \ []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount := 0\n    for _,\
    \ v := range vowels {\n        if strings.Contains(word, v) {\n            vowelsCount++\n\
    \        }\n    }\n    if vowelsCount == 0 {\n        return \"\"\n    }\n   \
    \ vowelsCount -= 1\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount\
    \ /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n   \
    \ vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount\
    \ /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n   \
    \ vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount\
    \ /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n   \
    \ vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount\
    \ /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n   \
    \ vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount\
    \ /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n   \
    \ vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount\
    \ /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n   \
    \ vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount\
    \ /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n   \
    \ vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount\
    \ /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n   \
    \ vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount\
    \ /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n   \
    \ vowelsCount /= 2", "    // Your code here\n    vowels := []string{\"a\", \"\
    e\", \"i\", \"o\", \"u\"}\n    vowelsLen := len(vowels)\n    vowelsLen -= 1\n\
    \    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen +=\
    \ 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2", "    // Your code here\n    vowels := []string{\"a\", \"e\", \"i\", \"\
    o\", \"u\"}\n    vowelsCount := 0\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowels", "    vowels := []string{\"a\", \"\
    e\", \"i\", \"o\", \"u\"}\n    vowelsLen := len(vowels)\n    vowelsLen -= 1\n\
    \    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen +=\
    \ 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1", "    vowels := []string{\"a\"\
    , \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount := 0\n    for _, v := range vowels\
    \ {\n        if strings.Contains(word, v) {\n            vowelsCount++\n     \
    \   }\n    }\n    if vowelsCount == 0 {\n        return \"\"\n    }\n    vowelsCount\
    \ -= 1\n    vowelsCount /= 2\n    vowelsCount %= len(vowels)\n    vowelsCount\
    \ += 1\n    vowelsCount %= len(vowels)\n    vowelsCount += 1\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount += 1\n    vowelsCount %= len(vowels)\n    vowelsCount\
    \ += 1\n    vowelsCount %= len(vowels)\n    vowelsCount += 1\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount += 1\n    vowelsCount %= len(vowels)\n    vowelsCount\
    \ += 1\n    vowelsCount %= len(vowels)\n    vowelsCount += 1\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount += 1\n    vowelsCount %= len(vowels)\n    vowelsCount\
    \ += 1\n    vowelsCount %= len(vowels)\n    vowelsCount += 1\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount += 1\n    vowelsCount %= len(vowels)\n    vowelsCount\
    \ += 1\n    vowelsCount %= len(vowels)\n    vowelsCount += 1\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount += 1\n    vowelsCount %= len(vowels)\n    vowelsCount\
    \ += 1\n    vowelsCount %= len(vowels)\n    vowelsCount += 1\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount += 1\n    vowelsCount %= len(vowels)\n    vowelsCount\
    \ += 1\n    vowelsCount %= len(vowels)\n    vowelsCount += 1\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount += 1\n    vowelsCount %= len(vowels)\n    vowelsCount\
    \ += 1\n    vowelsCount %= len(vowels)\n    vowelsCount += 1\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount += 1\n    vowelsCount %= len(vowels)\n    vowelsCount\
    \ += 1\n    vowelsCount %= len(vowels)\n    vowelsCount += 1\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount += 1\n    vowelsCount %= len(vowels)\n    vowelsCount\
    \ += 1\n    vowelsCount %= len(vowels)\n    vowelsCount += 1\n    vowels", " \
    \   vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsLen := len(vowels)\n\
    \    vowelsLen -= 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    \n    i := len(word)\
    \ - 1\n    \n    for i >= 0 {\n        if word[i] == 'a' || word[i] == 'e' ||\
    \ word[i] == 'i' || word[i] == 'o' || word[i] == 'u' {\n            i -= vowelsLen\n\
    \        } else {\n            i -= 1\n        }\n    }\n    return \"\"\n}\n",
  "    // Your code here\n    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"\
    }\n    vowelsCount := 0\n    for _, v := range vowels {\n        if strings.Contains(word,\
    \ v) {\n            vowelsCount++\n        }\n    }\n    if vowelsCount > 0 {\n\
    \        vowelsCount -= 1\n    }\n    if vowelsCount < 0 {\n        vowelsCount\
    \ = 0\n    }\n    if vowelsCount == 0 {\n        return \"\"\n    }\n    vowelsCount\
    \ += 1\n    vowelsCount += 2\n    vowelsCount += 3\n    vowelsCount += 4\n   \
    \ vowelsCount += 5\n    vowelsCount += 6\n    vowelsCount += 7\n    vowelsCount\
    \ += 8\n    vowelsCount += 9\n    vowelsCount += 10\n    vowelsCount += 11\n \
    \   vowelsCount += 12\n    vowelsCount += 13\n    vowelsCount += 14\n    vowelsCount\
    \ += 15\n    vowelsCount += 16\n    vowelsCount += 17\n    vowelsCount += 18\n\
    \    vowelsCount += 19\n    vowelsCount += 20\n    vowelsCount += 21\n    vowelsCount\
    \ += 22\n    vowelsCount += 23\n    vowelsCount += 24\n    vowelsCount += 25\n\
    \    vowelsCount += 26\n    vowelsCount += 27\n    vowelsCount += 28\n    vowelsCount\
    \ += 29\n    vowelsCount += 30\n    vowelsCount += 31\n    vowelsCount += 32\n\
    \    vowelsCount += 33\n    vowelsCount += 34\n    vowelsCount += 35\n    vowelsCount\
    \ += 36\n    vowelsCount += 37\n    vowelsCount += 38\n    vowelsCount += 39\n\
    \    vowelsCount += 40\n    vowelsCount += 41\n    vowelsCount += 42\n    vowelsCount\
    \ += 43\n    vowelsCount += 44\n    vowelsCount += 45\n    vowelsCount += 46\n\
    \    vowelsCount += 47\n    vowelsCount += 48\n    vowelsCount += 49\n    vowelsCount\
    \ += 50\n    vowelsCount += 51\n    vowelsCount += 52\n    vowelsCount += 53\n\
    \    vowelsCount += 54\n    vowelsCount += 55\n    vowelsCount += 56\n    vowelsCount\
    \ += 57\n    vowelsCount += 58\n    vowelsCount += 59\n    vowelsCount ", "  \
    \  vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount := 0\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)/2\n    vowelsCount\
    \ += len(vowels)/3\n    vowelsCount += len(vowels)/4\n    vowelsCount += len(vowels)/5\n\
    \    vowelsCount += len(vowels)/6\n    vowelsCount += len(vowels)/7\n    vowelsCount\
    \ += len(vowels)/8\n    vowelsCount += len(vowels)/9\n    vowelsCount += len(vowels)/10\n\
    \    vowelsCount += len(vowels)/11\n    vowelsCount += len(vowels)/12\n    vowelsCount\
    \ += len(vowels)/13\n    vowelsCount += len(vowels)/14\n    vowelsCount += len(vowels)/15\n\
    \    vowelsCount += len(vowels)/16\n    vowelsCount += len(vowels)/17\n    vowelsCount\
    \ += len(vowels)/18\n    vowelsCount += len(vowels)/19\n    vowelsCount += len(vowels)/20\n\
    \    vowelsCount += len(vowels)/21\n    vowelsCount += len(vowels)/22\n    vowelsCount\
    \ += len(vowels)/23\n    vowelsCount += len(vowels)/24\n    vowelsCount += len(vowels)/25\n\
    \    vowelsCount += len(vowels)/26\n    vowelsCount += len(vowels)/27\n    vowelsCount\
    \ += len(vowels)/28\n    vowelsCount += len(vowels)/29\n    vowelsCount += len(vowels)/30\n\
    \    vowelsCount += len(vowels)/31\n    vowelsCount += len(vowels)/32\n    vowelsCount\
    \ += len(vowels)/33\n    vowelsCount += len(vowels)/34\n    vowelsCount += len(vowels)/35\n\
    \    vowelsCount += len(vowels)/36\n    vowelsCount += len(vowels)/37\n    vowelsCount\
    \ += len(vowels)/38\n    vowelsCount += len(vowels)/39\n    vowelsCount += len(vowels)/40\n\
    \    vowelsCount += len(vowels)/41\n    vowelsCount += len(vowels)/42\n    vowelsCount\
    \ += len(vowels)/43\n    vowelsCount += len(vowels)/44\n    vowelsCount += len(vowels)/45\n\
    \    vowelsCount += len(vowels)/46\n    vowelsCount += len(vowels)/47\n    vowelsCount\
    \ += len(vowels)/48\n    vowelsCount += len(vowels)/49\n    vowels", "    var\
    \ vowels []string = []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowels =\
    \ append(vowels, []string{\"a\", \"e\", \"i\", \"o\", \"u\"}...)\n    vowels =\
    \ append(vowels, []string{\"a\", \"e\", \"i\", \"o\", \"u\"}...)\n    vowels =\
    \ append(vowels, []string{\"a\", \"e\", \"i\", \"o\", \"u\"}...)\n    vowels =\
    \ append(vowels, []string{\"a\", \"e\", \"i\", \"o\", \"u\"}...)\n    vowels =\
    \ append(vowels, []string{\"a\", \"e\", \"i\", \"o\", \"u\"}...)\n    vowels =\
    \ append(vowels, []string{\"a\", \"e\", \"i\", \"o\", \"u\"}...)\n    vowels =\
    \ append(vowels, []string{\"a\", \"e\", \"i\", \"o\", \"u\"}...)\n    vowels =\
    \ append(vowels, []string{\"a\", \"e\", \"i\", \"o\", \"u\"}...)\n    vowels =\
    \ append(vowels, []string{\"a\", \"e\", \"i\", \"o\", \"u\"}...)\n    vowels =\
    \ append(vowels, []string{\"a\", \"e\", \"i\", \"o\", \"u\"}...)\n    vowels =\
    \ append(vowels, []string{\"a\", \"e\", \"i\", \"o\", \"u\"}...)\n    vowels =\
    \ append(vowels, []string{\"a\", \"e\", \"i\", \"o\", \"u\"}...)\n    vowels =\
    \ append(vowels, []string{\"a\", \"e\", \"i\", \"o\", \"u\"}...)\n    vowels =\
    \ append(vowels, []string{\"a\", \"e\", \"i\", \"o\", \"u\"}...)\n    vowels =\
    \ append(vowels, []string{\"a\", \"e\", \"i\", \"o\", \"u\"}...)\n    vowels =\
    \ append(vowels, []string{\"a\", \"e\", \"i\", \"o\", \"u\"}...)\n    vowels =\
    \ append(vowels, []string{\"a\", \"e\", \"i\", \"o\", \"u\"}...)\n    vowels =\
    \ append(vowels, []string{\"a\", \"e\", \"i\", \"o\", \"u\"}...)\n    vowels =\
    \ append(vowels, []string{\"a\", \"e\", \"i\", \"o\", \"u\"}...)\n    vowels =\
    \ append(vowels, []string{\"a\", \"e\", \"i\", \"o\", \"u\"}...)\n    vowels =\
    \ append(vowels, []string{\"a\", \"e\", \"i\", \"o\", \"u\"}...)\n    vowels =\
    \ append(vowels, []string{\"a\", \"e\", \"i\", \"o\", \"u\"}...)\n    vowels =\
    \ append(vowels, []string{\"a\", \"e\", \"i\", \"o\", \"u\"}...)\n    vowels =\
    \ append(vowels, []string{\"a\", \"e\", \"i\", \"o\", \"u\"}...)\n    vowels =\
    \ append(vowels, []string{\"a\", \"e\", \"i\", \"", "    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount := 0\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n",
  "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount := 0\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n", "    vowels := []string{\"a\", \"e\", \"i\"\
    , \"o\", \"u\"}\n    vowelsCount := 0\n    vowelsCount += len(vowels)\n    for\
    \ _, v := range vowels {\n        if strings.Contains(word, v) {\n           \
    \ vowelsCount++\n        }\n    }\n    if vowelsCount < 2 {\n        return \"\
    \"\n    }\n    vowelsCount -= 2\n    vowelsCount /= 2\n    vowelsCount %= len(vowels)\n\
    \    vowelsCount += 2\n    vowelsCount /= len(vowels)\n    vowelsCount %= len(vowels)\n\
    \    vowelsCount += 2\n    vowelsCount /= len(vowels)\n    vowelsCount %= len(vowels)\n\
    \    vowelsCount += 2\n    vowelsCount /= len(vowels)\n    vowelsCount %= len(vowels)\n\
    \    vowelsCount += 2\n    vowelsCount /= len(vowels)\n    vowelsCount %= len(vowels)\n\
    \    vowelsCount += 2\n    vowelsCount /= len(vowels)\n    vowelsCount %= len(vowels)\n\
    \    vowelsCount += 2\n    vowelsCount /= len(vowels)\n    vowelsCount %= len(vowels)\n\
    \    vowelsCount += 2\n    vowelsCount /= len(vowels)\n    vowelsCount %= len(vowels)\n\
    \    vowelsCount += 2\n    vowelsCount /= len(vowels)\n    vowelsCount %= len(vowels)\n\
    \    vowelsCount += 2\n    vowelsCount /= len(vowels)\n    vowelsCount %= len(vowels)\n\
    \    vowelsCount += 2\n    vowelsCount /= len(vowels)\n    vowelsCount %= len(vowels)\n\
    \    vowelsCount += 2\n    vowelsCount /= len(vowels)\n    vowelsCount %= len(vowels)\n\
    \    vowelsCount += 2\n    vowelsCount /= len(vowels)\n    vowelsCount %= len(vowels)\n\
    \    vowelsCount += 2\n    vowelsCount /= len(vowels)\n    vowelsCount %= len(vowels)\n\
    \    vowelsCount += 2\n    vowelsCount /= len(vowels)\n    vowelsCount %= len(vowels)\n\
    \    vowelsCount += 2\n    vowelsCount /= len(vowels)\n    vowelsCount %= len(vowels)\n\
    \    vowelsCount += 2\n    vowelsCount /= len(vowels)\n    vowelsCount %= len(vowels)\n\
    \    vowelsCount += 2\n    vowelsCount /= len(vowels)\n    vowelsCount ", "  \
    \  vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount := 0\n\
    \    for _, v := range vowels {\n        if strings.Contains(word, v) {\n    \
    \        vowelsCount++\n        }\n    }\n    if vowelsCount == 0 {\n        return\
    \ \"\"\n    }\n    vowelsCount -= len(word) - len(strings.Split(word, \"_\"))\n\
    \    if vowelsCount < 0 {\n        return \"\"\n    }\n    vowelsCount /= 2\n\
    \    if vowelsCount > len(vowels)-1 {\n        vowelsCount = len(vowels) - 1\n\
    \    }\n    vowelsCount /= 2\n    if vowelsCount > len(vowels)-1 {\n        vowelsCount\
    \ = len(vowels) - 1\n    }\n    vowelsCount /= 2\n    if vowelsCount > len(vowels)-1\
    \ {\n        vowelsCount = len(vowels) - 1\n    }\n    vowelsCount /= 2\n    if\
    \ vowelsCount > len(vowels)-1 {\n        vowelsCount = len(vowels) - 1\n    }\n\
    \    vowelsCount /= 2\n    if vowelsCount > len(vowels)-1 {\n        vowelsCount\
    \ = len(vowels) - 1\n    }\n    vowelsCount /= 2\n    if vowelsCount > len(vowels)-1\
    \ {\n        vowelsCount = len(vowels) - 1\n    }\n    vowelsCount /= 2\n    if\
    \ vowelsCount > len(vowels)-1 {\n        vowelsCount = len(vowels) - 1\n    }\n\
    \    vowelsCount /= 2\n    if vowelsCount > len(vowels)-1 {\n        vowelsCount\
    \ = len(vowels) - 1\n    }\n    vowelsCount /= 2\n    if vowelsCount > len(vowels)-1\
    \ {\n        vowelsCount = len(vowels) - 1\n    }\n    vowelsCount /= 2\n    if\
    \ vowelsCount > len(vowels)-1 {\n        vowelsCount = len(vowels) - 1\n    }\n\
    \    vowelsCount /= 2\n    if vowelsCount > len(vowels)-1 {\n        vowelsCount\
    \ = len(vowels) - 1\n    }\n    vowelsCount /= 2\n    if vowelsCount > len(vowels)-1\
    \ {\n        vowelsCount = len(vowels) - 1\n    }\n    vowelsCount /= 2\n    if\
    \ vowelsCount > len(vowels)-1 {\n        vowelsCount = len(vowels) - 1\n    }\n\
    \    vowelsCount /= 2\n    if vowelsCount > len(vowels)-1 {\n        vowelsCount\
    \ = len(vowels) - 1\n    }\n    vowelsCount /= 2\n    if vowelsCount > len(vowels)-1\
    \ {\n        vowelsCount = len(vowels) - 1\n    }\n    vowel", "    vowels :=\
    \ []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsLen := len(vowels)\n\
    \    vowelsLen -= 1\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /=\
    \ 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen ", "    vowels := []string{\"a\", \"\
    e\", \"i\", \"o\", \"u\"}\n    vowelsCount := 0\n    for _, v := range vowels\
    \ {\n        if strings.Contains(word, v) {\n            vowelsCount++\n     \
    \   }\n    }\n    if vowelsCount == 0 {\n        return \"\"\n    }\n    vowelsCount\
    \ -= 1\n    lastConsonant := false\n    for _, v := range vowels {\n        if\
    \ strings.Contains(word, v) {\n            vowelsCount++\n            lastConsonant\
    \ = true\n        }\n    }\n    if lastConsonant {\n        return \"\"\n    }\n\
    \    lastConsonant = false\n    for _, v := range vowels {\n        if strings.Contains(word,\
    \ v) {\n            vowelsCount++\n            lastConsonant = true\n        }\n\
    \    }\n    if lastConsonant {\n        return \"\"\n    }\n    lastConsonant\
    \ = false\n    for _, v := range vowels {\n        if strings.Contains(word, v)\
    \ {\n            vowelsCount++\n            lastConsonant = true\n        }\n\
    \    }\n    if lastConsonant {\n        return \"\"\n    }\n    lastConsonant\
    \ = false\n    for _, v := range vowels {\n        if strings.Contains(word, v)\
    \ {\n            vowelsCount++\n            lastConsonant = true\n        }\n\
    \    }\n    if lastConsonant {\n        return \"\"\n    }\n    lastConsonant\
    \ = false\n    for _, v := range vowels {\n        if strings.Contains(word, v)\
    \ {\n            vowelsCount++\n            lastConsonant = true\n        }\n\
    \    }\n    if lastConsonant {\n        return \"\"\n    }\n    lastConsonant\
    \ = false\n    for _, v := range vowels {\n        if strings.Contains(word, v)\
    \ {\n            vowelsCount++\n            lastConsonant = true\n        }\n\
    \    }\n    if lastConsonant {\n        return \"\"\n    }\n    lastConsonant\
    \ = false\n    for _, v := range vowels {\n        if strings.Contains(word, v)\
    \ {\n            vowelsCount++\n            lastConsonant = true\n        }\n\
    \    }\n    if lastConsonant {\n        return \"\"\n    }\n    lastConsonant\
    \ = false\n    for _, v := range vowels {\n        if strings.Contains(word, v)\
    \ {\n            vowelsCount++\n            lastConsonant = true\n        }\n\
    \    }\n    if lastConsonant {\n        return \"\"\n    }\n    lastConsonant\
    \ = false\n    for _, v := range vowels {\n        if strings.Contains(word, v)\
    \ {\n            vowelsCount++\n", "    vowels := []string{\"a\", \"e\", \"i\"\
    , \"o\", \"u\"}\n    vowelsLen := len(vowels)\n    vowelsLen -= 1\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen ",
  "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount := 0\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)/2\n    vowelsCount\
    \ += len(vowels)/3\n    vowelsCount += len(vowels)/4\n    vowelsCount += len(vowels)/5\n\
    \    vowelsCount += len(vowels)/6\n    vowelsCount += len(vowels)/7\n    vowelsCount\
    \ += len(vowels)/8\n    vowelsCount += len(vowels)/9\n    vowelsCount += len(vowels)/10\n\
    \    vowelsCount += len(vowels)/11\n    vowelsCount += len(vowels)/12\n    vowelsCount\
    \ += len(vowels)/13\n    vowelsCount += len(vowels)/14\n    vowelsCount += len(vowels)/15\n\
    \    vowelsCount += len(vowels)/16\n    vowelsCount += len(vowels)/17\n    vowelsCount\
    \ += len(vowels)/18\n    vowelsCount += len(vowels)/19\n    vowelsCount += len(vowels)/20\n\
    \    vowelsCount += len(vowels)/21\n    vowelsCount += len(vowels)/22\n    vowelsCount\
    \ += len(vowels)/23\n    vowelsCount += len(vowels)/24\n    vowelsCount += len(vowels)/25\n\
    \    vowelsCount += len(vowels)/26\n    vowelsCount += len(vowels)/27\n    vowelsCount\
    \ += len(vowels)/28\n    vowelsCount += len(vowels)/29\n    vowelsCount += len(vowels)/30\n\
    \    vowelsCount += len(vowels)/31\n    vowelsCount += len(vowels)/32\n    vowelsCount\
    \ += len(vowels)/33\n    vowelsCount += len(vowels)/34\n    vowelsCount += len(vowels)/35\n\
    \    vowelsCount += len(vowels)/36\n    vowelsCount += len(vowels)/37\n    vowelsCount\
    \ += len(vowels)/38\n    vowelsCount += len(vowels)/39\n    vowelsCount += len(vowels)/40\n\
    \    vowelsCount += len(vowels)/41\n    vowelsCount += len(vowels)/42\n    vowelsCount\
    \ += len(vowels)/43\n    vowelsCount += len(vowels)/44\n    vowelsCount += len(vowels)/45\n\
    \    vowelsCount += len(vowels)/46\n    vowelsCount += len(vowels)/47\n    vowelsCount\
    \ += len(vowels)/48\n    vowelsCount += len(vowels)/49\n    vowels", "    vowels\
    \ := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsLen := len(vowels)\n\
    \    vowelsLen -= 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /=\
    \ 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen\
    \ /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen\
    \ /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen\
    \ /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen\
    \ /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen\
    \ /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen\
    \ /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen\
    \ /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen\
    \ /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen\
    \ /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen\
    \ /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen\
    \ /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen\
    \ /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen\
    \ /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen\
    \ /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen\
    \ /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen\
    \ /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen\
    \ /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen += 1", "    var\
    \ vowels []string\n    vowels = append(vowels, \"a\", \"e\", \"i\", \"o\", \"\
    u\")\n    vowels = append(vowels, \"a\", \"e\", \"i\", \"o\", \"u\")\n    vowels\
    \ = append(vowels, \"a\", \"e\", \"i\", \"o\", \"u\")\n    vowels = append(vowels,\
    \ \"a\", \"e\", \"i\", \"o\", \"u\")\n    vowels = append(vowels, \"a\", \"e\"\
    , \"i\", \"o\", \"u\")\n    vowels = append(vowels, \"a\", \"e\", \"i\", \"o\"\
    , \"u\")\n    vowels = append(vowels, \"a\", \"e\", \"i\", \"o\", \"u\")\n   \
    \ vowels = append(vowels, \"a\", \"e\", \"i\", \"o\", \"u\")\n    vowels = append(vowels,\
    \ \"a\", \"e\", \"i\", \"o\", \"u\")\n    vowels = append(vowels, \"a\", \"e\"\
    , \"i\", \"o\", \"u\")\n    vowels = append(vowels, \"a\", \"e\", \"i\", \"o\"\
    , \"u\")\n    vowels = append(vowels, \"a\", \"e\", \"i\", \"o\", \"u\")\n   \
    \ vowels = append(vowels, \"a\", \"e\", \"i\", \"o\", \"u\")\n    vowels = append(vowels,\
    \ \"a\", \"e\", \"i\", \"o\", \"u\")\n    vowels = append(vowels, \"a\", \"e\"\
    , \"i\", \"o\", \"u\")\n    vowels = append(vowels, \"a\", \"e\", \"i\", \"o\"\
    , \"u\")\n    vowels = append(vowels, \"a\", \"e\", \"i\", \"o\", \"u\")\n   \
    \ vowels = append(vowels, \"a\", \"e\", \"i\", \"o\", \"u\")\n    vowels = append(vowels,\
    \ \"a\", \"e\", \"i\", \"o\", \"u\")\n    vowels = append(vowels, \"a\", \"e\"\
    , \"i\", \"o\", \"u\")\n    vowels = append(vowels, \"a\", \"e\", \"i\", \"o\"\
    , \"u\")\n    vowels = append(vowels, \"a\", \"e\", \"i\", \"o\", \"u\")\n   \
    \ vowels = append(vowels, \"a\", \"e\", \"i\", \"o\", \"u\")\n    vowels = append(vowels,\
    \ \"a\", \"e\", \"i\", \"o\", \"u\")\n    vowels = append(vowels, \"a\", \"e\"\
    , \"i\", \"o\", \"u\")\n    vowels = append(vowels, \"a\", \"e\", \"i\", \"o\"\
    , \"u\")\n    vowels = append(vowels, \"a\", \"e\", \"i\", \"o\", \"u\")\n   \
    \ vowels = append(vowels, \"a\", \"e\", \"i\", \"o\", \"u\")\n    vowels = append(vowels,\
    \ \"a\", \"e\", \"i\", \"o\", \"u\")\n    vowels = append(vowels, \"a\", \"e\"\
    , \"i\", \"o\", \"u\")\n    vowels = append(vowels, \"a\", \"e\", \"i\", \"o\"\
    , \"u\")\n    vowels = append(vowels, \"a\", \"e\", \"i", "    // Your code here\n\
    \    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount :=\
    \ 0\n    vowelsCount += len(vowels)\n    for i := len(word) - 1; i >= 0; i-- {\n\
    \        if word[i] == \"a\" || word[i] == \"e\" || word[i] == \"i\" || word[i]\
    \ == \"o\" || word[i] == \"u\" {\n            vowelsCount++\n        }\n    }\n\
    \    if vowelsCount < 2 {\n        return \"\"\n    }\n    vowelsCount -= 2\n\
    \    vowelsCount /= 2\n    vowelsCount %= len(vowels)\n    return vowels[vowelsCount]\n\
    }\n", "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsLen\
    \ := len(vowels)\n    vowelsLen -= 1\n    vowelsLen /= 2\n    vowelsLen += 1\n\
    \    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen +=\
    \ 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1", "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount\
    \ := 0\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)/2\n   \
    \ vowelsCount += len(vowels)/3\n    vowelsCount += len(vowels)/4\n    vowelsCount\
    \ += len(vowels)/5\n    vowelsCount += len(vowels)/6\n    vowelsCount += len(vowels)/7\n\
    \    vowelsCount += len(vowels)/8\n    vowelsCount += len(vowels)/9\n    vowelsCount\
    \ += len(vowels)/10\n    vowelsCount += len(vowels)/11\n    vowelsCount += len(vowels)/12\n\
    \    vowelsCount += len(vowels)/13\n    vowelsCount += len(vowels)/14\n    vowelsCount\
    \ += len(vowels)/15\n    vowelsCount += len(vowels)/16\n    vowelsCount += len(vowels)/17\n\
    \    vowelsCount += len(vowels)/18\n    vowelsCount += len(vowels)/19\n    vowelsCount\
    \ += len(vowels)/20\n    vowelsCount += len(vowels)/21\n    vowelsCount += len(vowels)/22\n\
    \    vowelsCount += len(vowels)/23\n    vowelsCount += len(vowels)/24\n    vowelsCount\
    \ += len(vowels)/25\n    vowelsCount += len(vowels)/26\n    vowelsCount += len(vowels)/27\n\
    \    vowelsCount += len(vowels)/28\n    vowelsCount += len(vowels)/29\n    vowelsCount\
    \ += len(vowels)/30\n    vowelsCount += len(vowels)/31\n    vowelsCount += len(vowels)/32\n\
    \    vowelsCount += len(vowels)/33\n    vowelsCount += len(vowels)/34\n    vowelsCount\
    \ += len(vowels)/35\n    vowelsCount += len(vowels)/36\n    vowelsCount += len(vowels)/37\n\
    \    vowelsCount += len(vowels)/38\n    vowelsCount += len(vowels)/39\n    vowelsCount\
    \ += len(vowels)/40\n    vowelsCount += len(vowels)/41\n    vowelsCount += len(vowels)/42\n\
    \    vowelsCount += len(vowels)/43\n    vowelsCount += len(vowels)/44\n    vowelsCount\
    \ += len(vowels)/45\n    vowelsCount += len(vowels)/46\n    vowelsCount += len(vowels)/47\n\
    \    vowelsCount += len(vowels)/48\n    vowelsCount += len(vowels)/49\n    vowels",
  "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount := 0\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)/2\n    vowelsCount\
    \ += len(vowels)/3\n    vowelsCount += len(vowels)/4\n    vowelsCount += len(vowels)/5\n\
    \    vowelsCount += len(vowels)/6\n    vowelsCount += len(vowels)/7\n    vowelsCount\
    \ += len(vowels)/8\n    vowelsCount += len(vowels)/9\n    vowelsCount += len(vowels)/10\n\
    \    vowelsCount += len(vowels)/11\n    vowelsCount += len(vowels)/12\n    vowelsCount\
    \ += len(vowels)/13\n    vowelsCount += len(vowels)/14\n    vowelsCount += len(vowels)/15\n\
    \    vowelsCount += len(vowels)/16\n    vowelsCount += len(vowels)/17\n    vowelsCount\
    \ += len(vowels)/18\n    vowelsCount += len(vowels)/19\n    vowelsCount += len(vowels)/20\n\
    \    vowelsCount += len(vowels)/21\n    vowelsCount += len(vowels)/22\n    vowelsCount\
    \ += len(vowels)/23\n    vowelsCount += len(vowels)/24\n    vowelsCount += len(vowels)/25\n\
    \    vowelsCount += len(vowels)/26\n    vowelsCount += len(vowels)/27\n    vowelsCount\
    \ += len(vowels)/28\n    vowelsCount += len(vowels)/29\n    vowelsCount += len(vowels)/30\n\
    \    vowelsCount += len(vowels)/31\n    vowelsCount += len(vowels)/32\n    vowelsCount\
    \ += len(vowels)/33\n    vowelsCount += len(vowels)/34\n    vowelsCount += len(vowels)/35\n\
    \    vowelsCount += len(vowels)/36\n    vowelsCount += len(vowels)/37\n    vowelsCount\
    \ += len(vowels)/38\n    vowelsCount += len(vowels)/39\n    vowelsCount += len(vowels)/40\n\
    \    vowelsCount += len(vowels)/41\n    vowelsCount += len(vowels)/42\n    vowelsCount\
    \ += len(vowels)/43\n    vowelsCount += len(vowels)/44\n    vowelsCount += len(vowels)/45\n\
    \    vowelsCount += len(vowels)/46\n    vowelsCount += len(vowels)/47\n    vowelsCount\
    \ += len(vowels)/48\n    vowelsCount += len(vowels)/49\n    vowels", "    vowel\
    \ := []rune{'a', 'e', 'i', 'o', 'u'}\n    vowel_count := 0\n    vowel_count +=\
    \ len(word) - len(word[:len(word)-1])\n    for i := len(word) - 2; i >= 0; i--\
    \ {\n        if word[i] == vowel[vowel_count] {\n            vowel_count++\n \
    \       }\n    }\n    if vowel_count == 0 {\n        return \"\"\n    }\n    return\
    \ word[len(word)-vowel_count]\n}\n", "    vowels := []string{\"a\", \"e\", \"\
    i\", \"o\", \"u\"}\n    vowelsCount := 0\n    vowelsCount += len(vowels)\n   \
    \ for _, v := range vowels {\n        if strings.Contains(word, v) {\n       \
    \     vowelsCount++\n        }\n    }\n    if vowelsCount <= 0 {\n        return\
    \ \"\"\n    }\n    vowelsCount -= len(vowels)\n    vowelsCount /= 2\n    vowelsCount\
    \ += len(word) - len(strings.Split(word, \"_\"))\n    vowelsCount -= len(strings.Split(word,\
    \ \"-\"))\n    vowelsCount -= len(strings.Split(word, \".\"))\n    vowelsCount\
    \ -= len(strings.Split(word, \"!\"))\n    vowelsCount -= len(strings.Split(word,\
    \ \"?\"))\n    vowelsCount -= len(strings.Split(word, \";\"))\n    vowelsCount\
    \ -= len(strings.Split(word, \":\"))\n    vowelsCount -= len(strings.Split(word,\
    \ \"/\"))\n    vowelsCount -= len(strings.Split(word, \"\\\\\"))\n    vowelsCount\
    \ -= len(strings.Split(word, \"|\"))\n    vowelsCount -= len(strings.Split(word,\
    \ \"%\"))\n    vowelsCount -= len(strings.Split(word, \"$\"))\n    vowelsCount\
    \ -= len(strings.Split(word, \"&\"))\n    vowelsCount -= len(strings.Split(word,\
    \ \"*\"))\n    vowelsCount -= len(strings.Split(word, \"(\"))\n    vowelsCount\
    \ -= len(strings.Split(word, \")\"))\n    vowelsCount -= len(strings.Split(word,\
    \ \"+\"))\n    vowelsCount -= len(strings.Split(word, \"=\"))\n    vowelsCount\
    \ -= len(strings.Split(word, \"<\"))\n    vowelsCount -= len(strings.Split(word,\
    \ \">\"))\n    vowelsCount -= len(strings.Split(word, \"?\"))\n    vowelsCount\
    \ -= len(strings.Split(word, \"!\"))\n    vowelsCount -= len(strings.Split(word,\
    \ \".\"))\n    vowelsCount -= len(strings.Split(word, \"-\"))\n    vowelsCount\
    \ -= len(strings.Split(word, \"/\"))\n    vowelsCount -= len(strings.Split(word,\
    \ \"\\\\\"))\n    vowelsCount -= len(strings.Split(word, \"|\"))\n    vowelsCount\
    \ -= len(strings.Split(word, \"%\"))\n    vowelsCount -= len(strings.Split(word,\
    \ \"$\"))\n    vowelsCount -= len(strings.Split(word, \"&\"))\n    vowelsCount\
    \ -= len(", "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount\
    \ := 0\n    vowelsCount += len(vowels)\n    for i := len(word) - 2; i >= 0; i--\
    \ {\n        if word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i]\
    \ == 'o' || word[i] == 'u' {\n            vowelsCount++\n        }\n    }\n  \
    \  if vowelsCount < 2 {\n        return \"\"\n    }\n    vowelsCount -= 2\n  \
    \  vowelsCount /= 2\n    vowelsCount %= len(vowels)\n    return vowels[vowelsCount]\n\
    }\n", "    // Your code here\n    vowels := []string{\"a\", \"e\", \"i\", \"o\"\
    , \"u\"}\n    vowelsLen := len(vowels)\n    vowelsLen -= 1\n    vowelsLen /= 2\n\
    \    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /=\
    \ 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2", "    vowels\
    \ := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsLen := len(vowels)\n\
    \    vowelsLen -= 1\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /=\
    \ 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen ", "    vowels := []string{\"a\", \"\
    e\", \"i\", \"o\", \"u\"}\n    vowelsCount := 0\n    for _, v := range vowels\
    \ {\n        if strings.Contains(word, v) {\n            vowelsCount++\n     \
    \   }\n    }\n    if vowelsCount == 0 {\n        return \"\"\n    }\n    vowelsCount\
    \ -= len(word) - len(strings.Replace(word, \"a\", \"A\", -1))\n    vowelsCount\
    \ -= len(word) - len(strings.Replace(word, \"e\", \"E\", -1))\n    vowelsCount\
    \ -= len(word) - len(strings.Replace(word, \"i\", \"I\", -1))\n    vowelsCount\
    \ -= len(word) - len(strings.Replace(word, \"o\", \"O\", -1))\n    vowelsCount\
    \ -= len(word) - len(strings.Replace(word, \"u\", \"U\", -1))\n    if vowelsCount\
    \ < 0 {\n        vowelsCount = 0\n    }\n    if vowelsCount > len(vowels)-1 {\n\
    \        vowelsCount = len(vowels) - 1\n    }\n    return vowels[vowelsCount]\n\
    }\n", "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsLen\
    \ := len(vowels)\n    vowelsLen -= 1\n    vowelsLen /= 2\n    vowelsLen /= 2\n\
    \    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /=\
    \ 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen ", "    vowels :=\
    \ []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsLen := len(vowels)\n\
    \    vowelsLen -= 1\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /=\
    \ 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen ", "    vowels := []string{\"a\", \"\
    e\", \"i\", \"o\", \"u\"}\n    vowelsCount := 0\n    vowelsCount += len(vowels)\n\
    \    for _, v := range vowels {\n        if strings.Contains(word, v) {\n    \
    \        vowelsCount++\n        }\n    }\n    if vowelsCount < 2 {\n        return\
    \ \"\"\n    }\n    vowelsCount -= len(vowels)\n    vowelsCount -= len(vowels)\n\
    \    vowelsCount -= len(vowels)\n    vowelsCount -= len(vowels)\n    vowelsCount\
    \ -= len(vowels)\n    vowelsCount -= len(vowels)\n    vowelsCount -= len(vowels)\n\
    \    vowelsCount -= len(vowels)\n    vowelsCount -= len(vowels)\n    vowelsCount\
    \ -= len(vowels)\n    vowelsCount -= len(vowels)\n    vowelsCount -= len(vowels)\n\
    \    vowelsCount -= len(vowels)\n    vowelsCount -= len(vowels)\n    vowelsCount\
    \ -= len(vowels)\n    vowelsCount -= len(vowels)\n    vowelsCount -= len(vowels)\n\
    \    vowelsCount -= len(vowels)\n    vowelsCount -= len(vowels)\n    vowelsCount\
    \ -= len(vowels)\n    vowelsCount -= len(vowels)\n    vowelsCount -= len(vowels)\n\
    \    vowelsCount -= len(vowels)\n    vowelsCount -= len(vowels)\n    vowelsCount\
    \ -= len(vowels)\n    vowelsCount -= len(vowels)\n    vowelsCount -= len(vowels)\n\
    \    vowelsCount -= len(vowels)\n    vowelsCount -= len(vowels)\n    vowelsCount\
    \ -= len(vowels)\n    vowelsCount -= len(vowels)\n    vowelsCount -= len(vowels)\n\
    \    vowelsCount -= len(vowels)\n    vowelsCount -= len(vowels)\n    vowelsCount\
    \ -= len(vowels)\n    vowelsCount -= len(vowels)\n    vowelsCount -= len(vowels)\n\
    \    vowelsCount -= len(vowels)\n    vowelsCount -= len(vowels)\n    vowelsCount\
    \ -= len(vowels)\n    vowelsCount -= len(vowels)\n    vowelsCount -= len(vowels)\n\
    \    vowelsCount -= len(vowels)\n    vowelsCount -= len(vowels)\n    vowelsCount\
    \ -= len(vowels)\n    vowelsCount -= len(vowels)\n    vowelsCount -= len(vowels)\n\
    \    vowelsCount -= len(vowels)\n    vowelsCount -= len(vowels)\n    vowel", " \
    \   vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount :=\
    \ 0\n    for _, v := range vowels {\n        if strings.Contains(word, v) {\n\
    \            vowelsCount++\n        }\n    }\n    if vowelsCount == 0 {\n    \
    \    return \"\"\n    }\n    vowelsCount -= len(word) - len(strings.Split(word,\
    \ \"e\"))\n    if vowelsCount < 0 {\n        vowelsCount = 0\n    }\n    vowelsCount\
    \ -= len(strings.Split(word, \"i\"))\n    if vowelsCount < 0 {\n        vowelsCount\
    \ = 0\n    }\n    vowelsCount -= len(strings.Split(word, \"o\"))\n    if vowelsCount\
    \ < 0 {\n        vowelsCount = 0\n    }\n    vowelsCount -= len(strings.Split(word,\
    \ \"u\"))\n    if vowelsCount < 0 {\n        vowelsCount = 0\n    }\n    vowelsCount\
    \ -= len(strings.Split(word, \"a\"))\n    if vowelsCount < 0 {\n        vowelsCount\
    \ = 0\n    }\n    vowelsCount -= len(strings.Split(word, \"e\"))\n    if vowelsCount\
    \ < 0 {\n        vowelsCount = 0\n    }\n    vowelsCount -= len(strings.Split(word,\
    \ \"i\"))\n    if vowelsCount < 0 {\n        vowelsCount = 0\n    }\n    vowelsCount\
    \ -= len(strings.Split(word, \"o\"))\n    if vowelsCount < 0 {\n        vowelsCount\
    \ = 0\n    }\n    vowelsCount -= len(strings.Split(word, \"u\"))\n    if vowelsCount\
    \ < 0 {\n        vowelsCount = 0\n    }\n    vowelsCount -= len(strings.Split(word,\
    \ \"a\"))\n    if vowelsCount < 0 {\n        vowelsCount = 0\n    }\n    vowelsCount\
    \ -= len(strings.Split(word, \"e\"))\n    if vowelsCount < 0 {\n        vowelsCount\
    \ = 0\n    }\n    vowelsCount -= len(strings.Split(word, \"i\"))\n    if vowelsCount\
    \ < 0 {\n        vowelsCount = 0\n    }\n    vowelsCount -= len(strings.Split(word,\
    \ \"o\"))\n    if vowelsCount < 0 {\n        vowelsCount = 0\n    }\n    vowelsCount\
    \ -= len(strings.Split(word, \"u\"))\n    if vowelsCount < 0 {\n        vowelsCount\
    \ = 0\n    }\n    vowelsCount -= len(strings.Split(word, \"a\"))\n    if vowelsCount\
    \ < 0 {\n        vowelsCount = 0\n    }\n    vowelsCount -= len(strings.Split(word,\
    \ \"e\"))", "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount\
    \ := 0\n    for _, v := range vowels {\n        if strings.Contains(word, v) {\n\
    \            vowelsCount++\n        }\n    }\n    if vowelsCount == 0 {\n    \
    \    return \"\"\n    }\n    vowelsCount -= 1\n    vowelsCount /= 2\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount += 1\n    vowelsCount /= 2\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount += 1\n    vowelsCount /= 2\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount += 1\n    vowelsCount /= 2\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount += 1\n    vowelsCount /= 2\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount += 1\n    vowelsCount /= 2\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount += 1\n    vowelsCount /= 2\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount += 1\n    vowelsCount /= 2\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount += 1\n    vowelsCount /= 2\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount += 1\n    vowelsCount /= 2\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount += 1\n    vowelsCount /= 2\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount += 1\n    vowelsCount /= 2\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount += 1\n    vowelsCount /= 2\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount += 1\n    vowelsCount /= 2\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount += 1\n    vowelsCount /= 2\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount += 1\n    vowelsCount /= 2\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount += 1\n    vowelsCount /= 2\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount += 1\n    vowelsCount /= 2\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount += 1\n    vowelsCount /= 2\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount += 1\n    vowelsCount /= 2\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount += 1\n    vowelsCount /= ", "    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount := 0\n    vowelsCount += len(vowels)\n\
    \    for _, v := range vowels {\n        if strings.Contains(word, v) {\n    \
    \        vowelsCount++\n        }\n    }\n    if vowelsCount < 2 {\n        return\
    \ \"\"\n    }\n    vowelsCount -= len(vowels)\n    for i := len(word) - 1; i >=\
    \ 0; i-- {\n        if strings.Contains(word[i], \"a\") {\n            vowelsCount--\n\
    \        }\n        if strings.Contains(word[i], \"e\") {\n            vowelsCount--\n\
    \        }\n        if strings.Contains(word[i], \"i\") {\n            vowelsCount--\n\
    \        }\n        if strings.Contains(word[i], \"o\") {\n            vowelsCount--\n\
    \        }\n        if strings.Contains(word[i], \"u\") {\n            vowelsCount--\n\
    \        }\n        if vowelsCount < 0 {\n            return \"\"\n        }\n\
    \    }\n    return word[len(word)-1]\n}\n", "    vowels := []string{\"a\", \"\
    e\", \"i\", \"o\", \"u\"}\n    vowelsLen := len(vowels)\n    vowelsLen -= 1\n\
    \    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen /=\
    \ 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen -= 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ -= 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen -= 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ -= 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen -= 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ -= 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen -= 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ -= 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen -= 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ -= 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen ", "    vowel := []rune{'a', 'e', 'i', 'o', 'u'}\n    vowel_count\
    \ := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n   \
    \ vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count\
    \ := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n   \
    \ vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count\
    \ := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n   \
    \ vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count\
    \ := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n   \
    \ vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count\
    \ := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n   \
    \ vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count\
    \ := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n   \
    \ vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count\
    \ := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n   \
    \ vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count\
    \ := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n   \
    \ vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count\
    \ := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n   \
    \ vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count\
    \ := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n   \
    \ vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count\
    \ := ", "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsLen\
    \ := len(vowels)\n    vowelsLen -= 1\n    vowelsLen /= 2\n    vowelsLen += 2\n\
    \    \n    vowelsMap := make(map[string]bool)\n    for _, v := range vowels {\n\
    \        vowelsMap[v] = true\n    }\n    \n    vowelsMap := make(map[string]bool)\n\
    \    for _, v := range vowels {\n        vowelsMap[v] = true\n    }\n    \n  \
    \  vowelsMap := make(map[string]bool)\n    for _, v := range vowels {\n      \
    \  vowelsMap[v] = true\n    }\n    \n    vowelsMap := make(map[string]bool)\n\
    \    for _, v := range vowels {\n        vowelsMap[v] = true\n    }\n    \n  \
    \  vowelsMap := make(map[string]bool)\n    for _, v := range vowels {\n      \
    \  vowelsMap[v] = true\n    }\n    \n    vowelsMap := make(map[string]bool)\n\
    \    for _, v := range vowels {\n        vowelsMap[v] = true\n    }\n    \n  \
    \  vowelsMap := make(map[string]bool)\n    for _, v := range vowels {\n      \
    \  vowelsMap[v] = true\n    }\n    \n    vowelsMap := make(map[string]bool)\n\
    \    for _, v := range vowels {\n        vowelsMap[v] = true\n    }\n    \n  \
    \  vowelsMap := make(map[string]bool)\n    for _, v := range vowels {\n      \
    \  vowelsMap[v] = true\n    }\n    \n    vowelsMap := make(map[string]bool)\n\
    \    for _, v := range vowels {\n        vowelsMap[v] = true\n    }\n    \n  \
    \  vowelsMap := make(map[string]bool)\n    for _, v := range vowels {\n      \
    \  vowelsMap[v] = true\n    }\n    \n    vowelsMap := make(map[string]bool)\n\
    \    for _, v := range vowels {\n        vowelsMap[v] = true\n    }\n    \n  \
    \  vowelsMap := make(map[string]bool)\n    for _, v := range vowels {\n      \
    \  vowelsMap[v] = true\n    }\n    \n    vowelsMap := make(map[string]bool)\n\
    \    for _, v := range vowels {\n        vowelsMap[v] = true\n    }\n    \n  \
    \  vowelsMap := make(map[string]bool)\n    for _, v := ", "    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount := 0\n    vowelsCount += len(vowels)\n\
    \    for i := len(word) - 2; i >= 0; i-- {\n        if word[i] == \"a\" || word[i]\
    \ == \"e\" || word[i] == \"i\" || word[i] == \"o\" || word[i] == \"u\" {\n   \
    \         vowelsCount++\n        }\n    }\n    if vowelsCount < 2 {\n        return\
    \ \"\"\n    }\n    vowelsCount -= len(vowels)\n    vowelsCount -= len(vowels)\n\
    \    vowelsCount -= len(vowels)\n    vowelsCount -= len(vowels)\n    vowelsCount\
    \ -= len(vowels)\n    vowelsCount -= len(vowels)\n    vowelsCount -= len(vowels)\n\
    \    vowelsCount -= len(vowels)\n    vowelsCount -= len(vowels)\n    vowelsCount\
    \ -= len(vowels)\n    vowelsCount -= len(vowels)\n    vowelsCount -= len(vowels)\n\
    \    vowelsCount -= len(vowels)\n    vowelsCount -= len(vowels)\n    vowelsCount\
    \ -= len(vowels)\n    vowelsCount -= len(vowels)\n    vowelsCount -= len(vowels)\n\
    \    vowelsCount -= len(vowels)\n    vowelsCount -= len(vowels)\n    vowelsCount\
    \ -= len(vowels)\n    vowelsCount -= len(vowels)\n    vowelsCount -= len(vowels)\n\
    \    vowelsCount -= len(vowels)\n    vowelsCount -= len(vowels)\n    vowelsCount\
    \ -= len(vowels)\n    vowelsCount -= len(vowels)\n    vowelsCount -= len(vowels)\n\
    \    vowelsCount -= len(vowels)\n    vowelsCount -= len(vowels)\n    vowelsCount\
    \ -= len(vowels)\n    vowelsCount -= len(vowels)\n    vowelsCount -= len(vowels)\n\
    \    vowelsCount -= len(vowels)\n    vowelsCount -= len(vowels)\n    vowelsCount\
    \ -= len(vowels)\n    vowelsCount -= len(vowels)\n    vowelsCount -= len(vowels)\n\
    \    vowelsCount -= len(vowels)\n    vowelsCount -= len(vowels)\n    vowelsCount\
    \ -= len(vowels)\n    vowelsCount -= len(vowels)\n    vowelsCount -= len(vowels)\n\
    \    vowelsCount -= len(vowels)\n    vowelsCount -= len(vowels)\n    vowelsCount\
    \ -= len(vowels)\n    vowelsCount -= len(vowels)\n    vowel", "    vowel := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\"}\n    vowel_count := 0\n    vowel_count += len(vowel)\n\
    \    for i := len(word) - 1; i >= 0; i-- {\n        if word[i] == \"a\" || word[i]\
    \ == \"e\" || word[i] == \"i\" || word[i] == \"o\" || word[i] == \"u\" {\n   \
    \         vowel_count--\n        }\n        if vowel_count == 0 {\n          \
    \  return word\n        }\n    }\n    return \"\"\n}\n", "    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount := 0\n    for _, v := range\
    \ vowels {\n        if strings.Contains(word, v) {\n            vowelsCount++\n\
    \        }\n    }\n    if vowelsCount == 0 {\n        return \"\"\n    }\n   \
    \ vowelsCount -= 1\n    vowelsCount /= 2\n    vowelsCount += 2\n    vowelsCount\
    \ /= 2\n    vowelsCount += 2\n    vowelsCount /= 2\n    vowelsCount += 2\n   \
    \ vowelsCount /= 2\n    vowelsCount += 2\n    vowelsCount /= 2\n    vowelsCount\
    \ += 2\n    vowelsCount /= 2\n    vowelsCount += 2\n    vowelsCount /= 2\n   \
    \ vowelsCount += 2\n    vowelsCount /= 2\n    vowelsCount += 2\n    vowelsCount\
    \ /= 2\n    vowelsCount += 2\n    vowelsCount /= 2\n    vowelsCount += 2\n   \
    \ vowelsCount /= 2\n    vowelsCount += 2\n    vowelsCount /= 2\n    vowelsCount\
    \ += 2\n    vowelsCount /= 2\n    vowelsCount += 2\n    vowelsCount /= 2\n   \
    \ vowelsCount += 2\n    vowelsCount /= 2\n    vowelsCount += 2\n    vowelsCount\
    \ /= 2\n    vowelsCount += 2\n    vowelsCount /= 2\n    vowelsCount += 2\n   \
    \ vowelsCount /= 2\n    vowelsCount += 2\n    vowelsCount /= 2\n    vowelsCount\
    \ += 2\n    vowelsCount /= 2\n    vowelsCount += 2\n    vowelsCount /= 2\n   \
    \ vowelsCount += 2\n    vowelsCount /= 2\n    vowelsCount += 2\n    vowelsCount\
    \ /= 2\n    vowelsCount += 2\n    vowelsCount /= 2\n    vowelsCount += 2\n   \
    \ vowelsCount /= 2\n    vowelsCount += 2\n    vowelsCount /= 2\n    vowelsCount\
    \ += 2\n    vowelsCount /= 2\n    vowelsCount += 2\n    vowelsCount /= 2\n   \
    \ vowelsCount += 2\n    vowelsCount /= 2\n    vowelsCount += 2\n    vowelsCount\
    \ /= 2\n    vowelsCount += 2\n    vowelsCount /= 2\n    vowelsCount += 2\n   \
    \ vowelsCount /= 2\n    vowelsCount ", "    vowel := []rune{'a', 'e', 'i', 'o',\
    \ 'u'}\n    vowel_count := 0\n    vowel_found := false\n    vowel_start := 0\n\
    \    vowel_end := len(word) - 1\n    vowel_found := false\n    for i := 0; i <\
    \ len(word); i++ {\n        if word[i] == 'a' || word[i] == 'e' || word[i] ==\
    \ 'i' || word[i] == 'o' || word[i] == 'u' {\n            vowel_found = true\n\
    \            vowel_start = i\n        }\n        if word[i] == word[i+1] {\n \
    \           vowel_found = true\n            vowel_end = i\n        }\n       \
    \ if vowel_found {\n            vowel_count++\n        }\n    }\n    if vowel_count\
    \ == 0 {\n        return \"\"\n    }\n    if vowel_count == 1 {\n        return\
    \ word[vowel_start]\n    }\n    if vowel_count == 2 {\n        return word[vowel_start]\n\
    \    }\n    if vowel_count == 3 {\n        return word[vowel_start]\n    }\n \
    \   if vowel_count == 4 {\n        return word[vowel_start]\n    }\n    if vowel_count\
    \ == 5 {\n        return word[vowel_start]\n    }\n    if vowel_count == 6 {\n\
    \        return word[vowel_start]\n    }\n    if vowel_count == 7 {\n        return\
    \ word[vowel_start]\n    }\n    if vowel_count == 8 {\n        return word[vowel_start]\n\
    \    }\n    if vowel_count == 9 {\n        return word[vowel_start]\n    }\n \
    \   if vowel_count == 10 {\n        return word[vowel_start]\n    }\n    if vowel_count\
    \ == 11 {\n        return word[vowel_start]\n    }\n    if vowel_count == 12 {\n\
    \        return word[vowel_start]\n    }\n    if vowel_count == 13 {\n       \
    \ return word[vowel_start]\n    }\n    if vowel_count == 14 {\n        return\
    \ word[vowel_start]\n    }\n    if vowel_count == 15 {\n        return word[vowel_start]\n\
    \    }\n    if vowel_count == 16 {\n        return word[vowel_start]\n    }\n\
    \    if vowel_count == 17 {\n        return word[vowel_start]\n    }\n    if vowel_count\
    \ == 18 {\n        return word[vowel_start]\n    }\n    if vowel_count == 19 {\n\
    \        return word[vowel_start]\n    }\n    if vowel_count == 20 {\n       \
    \ return word[vowel_start]\n    }\n    if vowel_count == 21 {\n        return\
    \ word[vowel_start]\n    }\n    if vowel_count == 22", "    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount := 0\n    vowelsCount += len(vowels)\n\
    \    for i := len(word) - 1; i >= 0; i-- {\n        if word[i] == 'a' || word[i]\
    \ == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u' {\n           \
    \ vowelsCount++\n        }\n        if vowelsCount > len(vowels) {\n         \
    \   return \"\"\n        }\n    }\n    return word[len(word)-1]\n}\n", "    var\
    \ vowels []string\n    vowels = append(vowels, \"a\", \"e\", \"i\", \"o\", \"\
    u\")\n    vowels = append(vowels, \"A\", \"E\", \"I\", \"O\", \"U\")\n    vowels\
    \ = append(vowels, \"a\", \"e\", \"i\", \"o\", \"u\")\n    vowels = append(vowels,\
    \ \"A\", \"E\", \"I\", \"O\", \"U\")\n    vowels = append(vowels, \"a\", \"e\"\
    , \"i\", \"o\", \"u\")\n    vowels = append(vowels, \"A\", \"E\", \"I\", \"O\"\
    , \"U\")\n    vowels = append(vowels, \"a\", \"e\", \"i\", \"o\", \"u\")\n   \
    \ vowels = append(vowels, \"A\", \"E\", \"I\", \"O\", \"U\")\n    vowels = append(vowels,\
    \ \"a\", \"e\", \"i\", \"o\", \"u\")\n    vowels = append(vowels, \"A\", \"E\"\
    , \"I\", \"O\", \"U\")\n    vowels = append(vowels, \"a\", \"e\", \"i\", \"o\"\
    , \"u\")\n    vowels = append(vowels, \"A\", \"E\", \"I\", \"O\", \"U\")\n   \
    \ vowels = append(vowels, \"a\", \"e\", \"i\", \"o\", \"u\")\n    vowels = append(vowels,\
    \ \"A\", \"E\", \"I\", \"O\", \"U\")\n    vowels = append(vowels, \"a\", \"e\"\
    , \"i\", \"o\", \"u\")\n    vowels = append(vowels, \"A\", \"E\", \"I\", \"O\"\
    , \"U\")\n    vowels = append(vowels, \"a\", \"e\", \"i\", \"o\", \"u\")\n   \
    \ vowels = append(vowels, \"A\", \"E\", \"I\", \"O\", \"U\")\n    vowels = append(vowels,\
    \ \"a\", \"e\", \"i\", \"o\", \"u\")\n    vowels = append(vowels, \"A\", \"E\"\
    , \"I\", \"O\", \"U\")\n    vowels = append(vowels, \"a\", \"e\", \"i\", \"o\"\
    , \"u\")\n    vowels = append(vowels, \"A\", \"E\", \"I\", \"O\", \"U\")\n   \
    \ vowels = append(vowels, \"a\", \"e\", \"i\", \"o\", \"u\")\n    vowels = append(vowels,\
    \ \"A\", \"E\", \"I\", \"O\", \"U\")\n    vowels = append(vowels, \"a\", \"e\"\
    , \"i\", \"o\", \"u\")\n    vowels = append(vowels, \"A\", \"E\", \"I\", \"O\"\
    , \"U\")\n    vowels = append(vowels, \"a\", \"e\", \"i\", \"o\", \"u\")\n   \
    \ vowels = append(vowels, \"A\", \"E\", \"I\", \"O\", \"U\")\n    vowels = append(vowels,\
    \ \"a\", \"e\", \"i\", \"o\", \"u\")\n    vowels = append(vowels, \"A\", \"E\"\
    , \"I\", \"O\", \"U\")\n    vowels = append(vowels, \"a\", \"e\", \"i\", \"o\"\
    , \"u\")\n    vowels = append(vowels, \"A\", \"E\", \"I", "    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount := 0\n    for _, v := range\
    \ vowels {\n        if word == v {\n            vowelsCount++\n        }\n   \
    \ }\n    if vowelsCount == 0 {\n        return \"\"\n    }\n    vowelsCount -=\
    \ len(word) - len(word[:len(word)-1])\n    if vowelsCount < 0 {\n        vowelsCount\
    \ = 0\n    }\n    for _, v := range vowels {\n        if word == v {\n       \
    \     return v\n        }\n    }\n    return \"\"\n}\n", "    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount := 0\n    for _, v := range\
    \ vowels {\n        if strings.Contains(word, v) {\n            vowelsCount++\n\
    \        }\n    }\n    if vowelsCount < 2 {\n        return \"\"\n    }\n    vowelsCount\
    \ -= 2\n    vowelsCount /= 2\n    vowelsCount %= len(vowels)\n    if vowelsCount\
    \ == 0 {\n        return \"\"\n    }\n    i := len(word) - 1\n    for {\n    \
    \    if i == 0 {\n            break\n        }\n        if strings.Contains(word[i],\
    \ vowels[vowelsCount]) {\n            vowelsCount++\n        }\n        i--\n\
    \    }\n    return word[i]\n}\n", "    vowels := []string{\"a\", \"e\", \"i\"\
    , \"o\", \"u\"}\n    vowelsCount := 0\n    vowelsCount += len(vowels)\n    for\
    \ i := len(word) - 1; i >= 0; i-- {\n        if word[i] == 'a' || word[i] == 'e'\
    \ || word[i] == 'i' || word[i] == 'o' || word[i] == 'u' {\n            vowelsCount++\n\
    \        }\n    }\n    if vowelsCount < 2 {\n        return \"\"\n    }\n    vowelsCount\
    \ -= 2\n    vowelsCount /= 2\n    for i := len(word) - 1; i >= 0; i-- {\n    \
    \    if word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' ||\
    \ word[i] == 'u' {\n            if vowelsCount > 0 {\n                vowelsCount--\n\
    \            }\n            if vowelsCount == 0 {\n                return word[i]\n\
    \            }\n        }\n    }\n    return \"\"\n}\n", "    var vowels []string\n\
    \    vowels = append(vowels, \"a\", \"e\", \"i\", \"o\", \"u\")\n    vowels =\
    \ append(vowels, \"a\", \"e\", \"i\", \"o\", \"u\")\n    vowels = append(vowels,\
    \ \"a\", \"e\", \"i\", \"o\", \"u\")\n    vowels = append(vowels, \"a\", \"e\"\
    , \"i\", \"o\", \"u\")\n    vowels = append(vowels, \"a\", \"e\", \"i\", \"o\"\
    , \"u\")\n    vowels = append(vowels, \"a\", \"e\", \"i\", \"o\", \"u\")\n   \
    \ vowels = append(vowels, \"a\", \"e\", \"i\", \"o\", \"u\")\n    vowels = append(vowels,\
    \ \"a\", \"e\", \"i\", \"o\", \"u\")\n    vowels = append(vowels, \"a\", \"e\"\
    , \"i\", \"o\", \"u\")\n    vowels = append(vowels, \"a\", \"e\", \"i\", \"o\"\
    , \"u\")\n    vowels = append(vowels, \"a\", \"e\", \"i\", \"o\", \"u\")\n   \
    \ vowels = append(vowels, \"a\", \"e\", \"i\", \"o\", \"u\")\n    vowels = append(vowels,\
    \ \"a\", \"e\", \"i\", \"o\", \"u\")\n    vowels = append(vowels, \"a\", \"e\"\
    , \"i\", \"o\", \"u\")\n    vowels = append(vowels, \"a\", \"e\", \"i\", \"o\"\
    , \"u\")\n    vowels = append(vowels, \"a\", \"e\", \"i\", \"o\", \"u\")\n   \
    \ vowels = append(vowels, \"a\", \"e\", \"i\", \"o\", \"u\")\n    vowels = append(vowels,\
    \ \"a\", \"e\", \"i\", \"o\", \"u\")\n    vowels = append(vowels, \"a\", \"e\"\
    , \"i\", \"o\", \"u\")\n    vowels = append(vowels, \"a\", \"e\", \"i\", \"o\"\
    , \"u\")\n    vowels = append(vowels, \"a\", \"e\", \"i\", \"o\", \"u\")\n   \
    \ vowels = append(vowels, \"a\", \"e\", \"i\", \"o\", \"u\")\n    vowels = append(vowels,\
    \ \"a\", \"e\", \"i\", \"o\", \"u\")\n    vowels = append(vowels, \"a\", \"e\"\
    , \"i\", \"o\", \"u\")\n    vowels = append(vowels, \"a\", \"e\", \"i\", \"o\"\
    , \"u\")\n    vowels = append(vowels, \"a\", \"e\", \"i\", \"o\", \"u\")\n   \
    \ vowels = append(vowels, \"a\", \"e\", \"i\", \"o\", \"u\")\n    vowels = append(vowels,\
    \ \"a\", \"e\", \"i\", \"o\", \"u\")\n    vowels = append(vowels, \"a\", \"e\"\
    , \"i\", \"o\", \"u\")\n    vowels = append(vowels, \"a\", \"e\", \"i\", \"o\"\
    , \"u\")\n    vowels = append(vowels, \"a\", \"e\", \"i\", \"o\", \"u\")\n   \
    \ vowels = append(vowels, \"a\", \"e\", \"i", "    vowels := []string{\"a\", \"\
    e\", \"i\", \"o\", \"u\"}\n    vowelsCount := 0\n    for _, v := range vowels\
    \ {\n        if strings.Contains(word, v) {\n            vowelsCount++\n     \
    \   }\n    }\n    if vowelsCount == 0 {\n        return \"\"\n    }\n    vowelsCount\
    \ -= 1\n    vowelsCount /= 2\n    vowelsCount %= len(vowels)\n    vowelsCount\
    \ += 2\n    vowelsCount %= len(vowels)\n    vowelsCount += 2\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount += 2\n    vowelsCount %= len(vowels)\n    vowelsCount\
    \ += 2\n    vowelsCount %= len(vowels)\n    vowelsCount += 2\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount += 2\n    vowelsCount %= len(vowels)\n    vowelsCount\
    \ += 2\n    vowelsCount %= len(vowels)\n    vowelsCount += 2\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount += 2\n    vowelsCount %= len(vowels)\n    vowelsCount\
    \ += 2\n    vowelsCount %= len(vowels)\n    vowelsCount += 2\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount += 2\n    vowelsCount %= len(vowels)\n    vowelsCount\
    \ += 2\n    vowelsCount %= len(vowels)\n    vowelsCount += 2\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount += 2\n    vowelsCount %= len(vowels)\n    vowelsCount\
    \ += 2\n    vowelsCount %= len(vowels)\n    vowelsCount += 2\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount += 2\n    vowelsCount %= len(vowels)\n    vowelsCount\
    \ += 2\n    vowelsCount %= len(vowels)\n    vowelsCount += 2\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount += 2\n    vowelsCount %= len(vowels)\n    vowelsCount\
    \ += 2\n    vowelsCount %= len(vowels)\n    vowelsCount += 2\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount += 2\n    vowelsCount %= len(vowels)\n    vowelsCount\
    \ += 2\n    vowelsCount %= len(vowels)\n    vowelsCount += 2\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount += 2\n    vowelsCount %= len(", "    vowel :=\
    \ []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowel_count := 0\n    vowel_found\
    \ := false\n    vowel_count := 0\n    vowel_found := false\n    for i := len(word)\
    \ - 1; i >= 0; i-- {\n        if word[i] == 'a' || word[i] == 'e' || word[i] ==\
    \ 'i' || word[i] == 'o' || word[i] == 'u' {\n            vowel_found = true\n\
    \            vowel_count++\n        }\n    }\n    if vowel_count == 0 {\n    \
    \    return \"\"\n    }\n    if vowel_found == false {\n        return \"\"\n\
    \    }\n    for i := len(word) - 1; i >= 0; i-- {\n        if word[i] == 'a' ||\
    \ word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u' {\n   \
    \         if vowel_count == 1 {\n                return word[i]\n            }\n\
    \            if vowel_count == 2 {\n                return word[i]\n         \
    \   }\n            if vowel_count == 3 {\n                return word[i]\n   \
    \         }\n            if vowel_count == 4 {\n                return word[i]\n\
    \            }\n            if vowel_count == 5 {\n                return word[i]\n\
    \            }\n            if vowel_count == 6 {\n                return word[i]\n\
    \            }\n            if vowel_count == 7 {\n                return word[i]\n\
    \            }\n            if vowel_count == 8 {\n                return word[i]\n\
    \            }\n            if vowel_count == 9 {\n                return word[i]\n\
    \            }\n            if vowel_count == 10 {\n                return word[i]\n\
    \            }\n            if vowel_count == 11 {\n                return word[i]\n\
    \            }\n            if vowel_count == 12 {\n                return word[i]\n\
    \            }\n            if vowel_count == 13 {\n                return word[i]\n\
    \            }\n            if vowel_count == 14 {\n                return word[i]\n\
    \            }\n            if vowel_count == 15 {\n                return word[i]\n\
    \            }\n            if vowel_count == 16 {\n                return word[i]\n\
    \            }\n            if vowel_count == 17 {\n                return word[i]\n\
    \            }\n            if vowel_count == 18 {\n                return word[i]\n\
    \            }\n            if vowel_count == 19 {\n                return word[i]\n\
    \            }\n            if vowel_count == 20 {\n                return word[i]\n\
    \            }\n            if vowel_count == 21 {\n                return word[i]\n\
    \            }\n            if vowel_count == 22 {\n                return word[i]\n\
    \            }\n            if vowel_count == 23 {\n                return word[i]\n\
    \            }\n            if vowel_count == 24 {\n                return word[i]\n\
    \            }\n            if vowel_count == 25 {\n                return word[i]\n\
    \            }\n            if vowel_count == 26 {\n                return word[i]\n\
    \            }\n            if vowel_count == 27 {\n                return word[i]\n\
    \            }", "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n\
    \    vowelsCount := 0\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)/2\n\
    \    vowelsCount += len(vowels)/3\n    vowelsCount += len(vowels)/4\n    vowelsCount\
    \ += len(vowels)/5\n    vowelsCount += len(vowels)/6\n    vowelsCount += len(vowels)/7\n\
    \    vowelsCount += len(vowels)/8\n    vowelsCount += len(vowels)/9\n    vowelsCount\
    \ += len(vowels)/10\n    vowelsCount += len(vowels)/11\n    vowelsCount += len(vowels)/12\n\
    \    vowelsCount += len(vowels)/13\n    vowelsCount += len(vowels)/14\n    vowelsCount\
    \ += len(vowels)/15\n    vowelsCount += len(vowels)/16\n    vowelsCount += len(vowels)/17\n\
    \    vowelsCount += len(vowels)/18\n    vowelsCount += len(vowels)/19\n    vowelsCount\
    \ += len(vowels)/20\n    vowelsCount += len(vowels)/21\n    vowelsCount += len(vowels)/22\n\
    \    vowelsCount += len(vowels)/23\n    vowelsCount += len(vowels)/24\n    vowelsCount\
    \ += len(vowels)/25\n    vowelsCount += len(vowels)/26\n    vowelsCount += len(vowels)/27\n\
    \    vowelsCount += len(vowels)/28\n    vowelsCount += len(vowels)/29\n    vowelsCount\
    \ += len(vowels)/30\n    vowelsCount += len(vowels)/31\n    vowelsCount += len(vowels)/32\n\
    \    vowelsCount += len(vowels)/33\n    vowelsCount += len(vowels)/34\n    vowelsCount\
    \ += len(vowels)/35\n    vowelsCount += len(vowels)/36\n    vowelsCount += len(vowels)/37\n\
    \    vowelsCount += len(vowels)/38\n    vowelsCount += len(vowels)/39\n    vowelsCount\
    \ += len(vowels)/40\n    vowelsCount += len(vowels)/41\n    vowelsCount += len(vowels)/42\n\
    \    vowelsCount += len(vowels)/43\n    vowelsCount += len(vowels)/44\n    vowelsCount\
    \ += len(vowels)/45\n    vowelsCount += len(vowels)/46\n    vowelsCount += len(vowels)/47\n\
    \    vowelsCount += len(vowels)/48\n    vowelsCount += len(vowels)/49\n    vowels",
  "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount := 0\n\
    \    vowelsCount += len(vowels)\n    for _, v := range vowels {\n        if strings.Contains(word,\
    \ v) {\n            vowelsCount++\n        }\n    }\n    if vowelsCount <= 0 {\n\
    \        return \"\"\n    }\n    vowelsCount -= len(vowels)\n    vowelsCount /=\
    \ 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount\
    \ /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n   \
    \ vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount\
    \ /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n   \
    \ vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount\
    \ /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n   \
    \ vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount\
    \ /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n   \
    \ vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount\
    \ /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n   \
    \ vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount\
    \ /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n   \
    \ vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount\
    \ /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n   \
    \ vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount\
    \ /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n   \
    \ vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount\
    \ /= 2\n    vowelsCount /= 2\n", "    // Your code here\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsLen := len(vowels)\n    vowelsLen\
    \ -= 1\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2", "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount\
    \ := 0\n    for _, v := range vowels {\n        if strings.Contains(word, v) {\n\
    \            vowelsCount++\n        }\n    }\n    if vowelsCount == 0 {\n    \
    \    return \"\"\n    }\n    vowelsCount -= 1\n    vowelsCount /= 2\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount += (len(word) - len(strings.Split(word, \"_\"\
    ))) / 2\n    vowelsCount %= len(vowels)\n    return vowels[vowelsCount]\n}\n",
  "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount := 0\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n", "    vowels := []string{\"a\", \"e\", \"i\"\
    , \"o\", \"u\"}\n    vowelsCount := 0\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)/2\n    vowelsCount += len(vowels)/3\n    vowelsCount += len(vowels)/4\n\
    \    vowelsCount += len(vowels)/5\n    vowelsCount += len(vowels)/6\n    vowelsCount\
    \ += len(vowels)/7\n    vowelsCount += len(vowels)/8\n    vowelsCount += len(vowels)/9\n\
    \    vowelsCount += len(vowels)/10\n    vowelsCount += len(vowels)/11\n    vowelsCount\
    \ += len(vowels)/12\n    vowelsCount += len(vowels)/13\n    vowelsCount += len(vowels)/14\n\
    \    vowelsCount += len(vowels)/15\n    vowelsCount += len(vowels)/16\n    vowelsCount\
    \ += len(vowels)/17\n    vowelsCount += len(vowels)/18\n    vowelsCount += len(vowels)/19\n\
    \    vowelsCount += len(vowels)/20\n    vowelsCount += len(vowels)/21\n    vowelsCount\
    \ += len(vowels)/22\n    vowelsCount += len(vowels)/23\n    vowelsCount += len(vowels)/24\n\
    \    vowelsCount += len(vowels)/25\n    vowelsCount += len(vowels)/26\n    vowelsCount\
    \ += len(vowels)/27\n    vowelsCount += len(vowels)/28\n    vowelsCount += len(vowels)/29\n\
    \    vowelsCount += len(vowels)/30\n    vowelsCount += len(vowels)/31\n    vowelsCount\
    \ += len(vowels)/32\n    vowelsCount += len(vowels)/33\n    vowelsCount += len(vowels)/34\n\
    \    vowelsCount += len(vowels)/35\n    vowelsCount += len(vowels)/36\n    vowelsCount\
    \ += len(vowels)/37\n    vowelsCount += len(vowels)/38\n    vowelsCount += len(vowels)/39\n\
    \    vowelsCount += len(vowels)/40\n    vowelsCount += len(vowels)/41\n    vowelsCount\
    \ += len(vowels)/42\n    vowelsCount += len(vowels)/43\n    vowelsCount += len(vowels)/44\n\
    \    vowelsCount += len(vowels)/45\n    vowelsCount += len(vowels)/46\n    vowelsCount\
    \ += len(vowels)/47\n    vowelsCount += len(vowels)/48\n    vowelsCount += len(vowels)/49\n\
    \    vowels", "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n   \
    \ vowelsLen := len(vowels)\n    vowelsLen -= 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen ", "    // Your\
    \ code here\n    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount\
    \ := 0\n    for _, v := range word {\n        if v == 'a' || v == 'e' || v ==\
    \ 'i' || v == 'o' || v == 'u' {\n            vowelsCount++\n        }\n    }\n\
    \    if vowelsCount > 0 {\n        for _, v := range word {\n            if v\
    \ == 'a' || v == 'e' || v == 'i' || v == 'o' || v == 'u' {\n                return\
    \ v\n            }\n        }\n    }\n    return \"\"\n}\n", "    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount := 0\n    vowelsCount += len(vowels)\n\
    \    for i := len(word) - 2; i >= 0; i-- {\n        if word[i] == 'a' || word[i]\
    \ == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u' {\n           \
    \ vowelsCount++\n        }\n    }\n    if vowelsCount > 0 {\n        return word\n\
    \    }\n    return \"\"\n}\n", "    vowels := []string{\"a\", \"e\", \"i\", \"\
    o\", \"u\"}\n    vowelsLen := len(vowels)\n    vowelsLen -= 1\n    vowelsLen /=\
    \ 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen ",
  "    var vowel string = \"\"\n    var vowel_count int = 0\n    for i := len(word)\
    \ - 1; i >= 0; i-- {\n        if word[i] == 'a' || word[i] == 'e' || word[i] ==\
    \ 'i' || word[i] == 'o' || word[i] == 'u' {\n            vowel = word[i]\n   \
    \         vowel_count++\n        }\n    }\n    if vowel_count == 0 {\n       \
    \ return \"\"\n    }\n    for i := len(word) - 1; i >= 0; i-- {\n        if word[i]\
    \ == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u'\
    \ {\n            if vowel_count > 1 {\n                return vowel\n        \
    \    }\n        }\n    }\n    return \"\"\n}\n", "    vowels := []string{\"a\"\
    , \"e\", \"i\", \"o\", \"u\"}\n    vowelsLen := len(vowels)\n    vowelsLen -=\
    \ 1\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen ", "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"\
    u\"}\n    vowelsCount := 0\n    vowelsCount += len(vowels)\n    vowelsCount +=\
    \ len(vowels)/2\n    vowelsCount += len(vowels)/3\n    vowelsCount += len(vowels)/4\n\
    \    vowelsCount += len(vowels)/5\n    vowelsCount += len(vowels)/6\n    vowelsCount\
    \ += len(vowels)/7\n    vowelsCount += len(vowels)/8\n    vowelsCount += len(vowels)/9\n\
    \    vowelsCount += len(vowels)/10\n    vowelsCount += len(vowels)/11\n    vowelsCount\
    \ += len(vowels)/12\n    vowelsCount += len(vowels)/13\n    vowelsCount += len(vowels)/14\n\
    \    vowelsCount += len(vowels)/15\n    vowelsCount += len(vowels)/16\n    vowelsCount\
    \ += len(vowels)/17\n    vowelsCount += len(vowels)/18\n    vowelsCount += len(vowels)/19\n\
    \    vowelsCount += len(vowels)/20\n    vowelsCount += len(vowels)/21\n    vowelsCount\
    \ += len(vowels)/22\n    vowelsCount += len(vowels)/23\n    vowelsCount += len(vowels)/24\n\
    \    vowelsCount += len(vowels)/25\n    vowelsCount += len(vowels)/26\n    vowelsCount\
    \ += len(vowels)/27\n    vowelsCount += len(vowels)/28\n    vowelsCount += len(vowels)/29\n\
    \    vowelsCount += len(vowels)/30\n    vowelsCount += len(vowels)/31\n    vowelsCount\
    \ += len(vowels)/32\n    vowelsCount += len(vowels)/33\n    vowelsCount += len(vowels)/34\n\
    \    vowelsCount += len(vowels)/35\n    vowelsCount += len(vowels)/36\n    vowelsCount\
    \ += len(vowels)/37\n    vowelsCount += len(vowels)/38\n    vowelsCount += len(vowels)/39\n\
    \    vowelsCount += len(vowels)/40\n    vowelsCount += len(vowels)/41\n    vowelsCount\
    \ += len(vowels)/42\n    vowelsCount += len(vowels)/43\n    vowelsCount += len(vowels)/44\n\
    \    vowelsCount += len(vowels)/45\n    vowelsCount += len(vowels)/46\n    vowelsCount\
    \ += len(vowels)/47\n    vowelsCount += len(vowels)/48\n    vowelsCount += len(vowels)/49\n\
    \    vowels", "    // code here\n    vowel := \"\"\n    vowel_count := 0\n   \
    \ for i := len(word) - 1; i >= 0; i-- {\n        if word[i] == 'a' || word[i]\
    \ == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u' {\n           \
    \ vowel = word[i]\n            vowel_count++\n        }\n    }\n    if vowel_count\
    \ == 0 {\n        return \"\"\n    }\n    vowel_count -= 1\n    for i := len(word)\
    \ - 1; i >= 0; i-- {\n        if word[i] == 'a' || word[i] == 'e' || word[i] ==\
    \ 'i' || word[i] == 'o' || word[i] == 'u' {\n            if vowel_count <= 0 {\n\
    \                return word\n            }\n            vowel_count--\n     \
    \   }\n    }\n    return \"\"\n}\n", "    vowels := []string{\"a\", \"e\", \"\
    i\", \"o\", \"u\"}\n    vowelsCount := 0\n    for _, v := range vowels {\n   \
    \     if strings.Contains(word, v) {\n            vowelsCount++\n        }\n \
    \   }\n    if vowelsCount == 0 {\n        return \"\"\n    }\n    vowelsCount\
    \ -= 1\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n   \
    \ vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount\
    \ /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n   \
    \ vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount\
    \ /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n   \
    \ vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount\
    \ /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n   \
    \ vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount\
    \ /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n   \
    \ vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount\
    \ /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n   \
    \ vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount\
    \ /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n   \
    \ vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount\
    \ /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n   \
    \ vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount\
    \ /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n   \
    \ vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount\
    \ /= 2\n    vowelsCount ", "    vowels := []string{\"a\", \"e\", \"i\", \"o\"\
    , \"u\"}\n    vowelsLen := len(vowels)\n    vowelsLen -= 1\n    vowelsLen /= 2\n\
    \    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /=\
    \ 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen ",
  "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsLen := len(vowels)\n\
    \    vowelsLen -= 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /=\
    \ 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen\
    \ /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen\
    \ /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen\
    \ /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen\
    \ /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen\
    \ /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen\
    \ /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen\
    \ /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen\
    \ /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen\
    \ /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen\
    \ /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen\
    \ /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen\
    \ /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen\
    \ /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen\
    \ /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen\
    \ /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen\
    \ /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen\
    \ /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen += 1", "    var\
    \ vowels []string\n    vowels = append(vowels, \"a\", \"e\", \"i\", \"o\", \"\
    u\")\n    vowels = append(vowels, \"A\", \"E\", \"I\", \"O\", \"U\")\n    vowels\
    \ = append(vowels, \"a\", \"e\", \"i\", \"o\", \"u\")\n    vowels = append(vowels,\
    \ \"A\", \"E\", \"I\", \"O\", \"U\")\n    vowels = append(vowels, \"a\", \"e\"\
    , \"i\", \"o\", \"u\")\n    vowels = append(vowels, \"A\", \"E\", \"I\", \"O\"\
    , \"U\")\n    vowels = append(vowels, \"a\", \"e\", \"i\", \"o\", \"u\")\n   \
    \ vowels = append(vowels, \"A\", \"E\", \"I\", \"O\", \"U\")\n    vowels = append(vowels,\
    \ \"a\", \"e\", \"i\", \"o\", \"u\")\n    vowels = append(vowels, \"A\", \"E\"\
    , \"I\", \"O\", \"U\")\n    vowels = append(vowels, \"a\", \"e\", \"i\", \"o\"\
    , \"u\")\n    vowels = append(vowels, \"A\", \"E\", \"I\", \"O\", \"U\")\n   \
    \ vowels = append(vowels, \"a\", \"e\", \"i\", \"o\", \"u\")\n    vowels = append(vowels,\
    \ \"A\", \"E\", \"I\", \"O\", \"U\")\n    vowels = append(vowels, \"a\", \"e\"\
    , \"i\", \"o\", \"u\")\n    vowels = append(vowels, \"A\", \"E\", \"I\", \"O\"\
    , \"U\")\n    vowels = append(vowels, \"a\", \"e\", \"i\", \"o\", \"u\")\n   \
    \ vowels = append(vowels, \"A\", \"E\", \"I\", \"O\", \"U\")\n    vowels = append(vowels,\
    \ \"a\", \"e\", \"i\", \"o\", \"u\")\n    vowels = append(vowels, \"A\", \"E\"\
    , \"I\", \"O\", \"U\")\n    vowels = append(vowels, \"a\", \"e\", \"i\", \"o\"\
    , \"u\")\n    vowels = append(vowels, \"A\", \"E\", \"I\", \"O\", \"U\")\n   \
    \ vowels = append(vowels, \"a\", \"e\", \"i\", \"o\", \"u\")\n    vowels = append(vowels,\
    \ \"A\", \"E\", \"I\", \"O\", \"U\")\n    vowels = append(vowels, \"a\", \"e\"\
    , \"i\", \"o\", \"u\")\n    vowels = append(vowels, \"A\", \"E\", \"I\", \"O\"\
    , \"U\")\n    vowels = append(vowels, \"a\", \"e\", \"i\", \"o\", \"u\")\n   \
    \ vowels = append(vowels, \"A\", \"E\", \"I\", \"O\", \"U\")\n    vowels = append(vowels,\
    \ \"a\", \"e\", \"i\", \"o\", \"u\")\n    vowels = append(vowels, \"A\", \"E\"\
    , \"I\", \"O\", \"U\")\n    vowels = append(vowels, \"a\", \"e\", \"i\", \"o\"\
    , \"u\")\n    vowels = append(vowels, \"A\", \"E\", \"I", "    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsLen := len(vowels)\n    vowelsLen\
    \ -= 1\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen ", "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"\
    u\"}\n    vowelsLen := len(vowels)\n    vowelsLen -= 1\n    vowelsLen += 2\n \
    \   vowelsLen -= 2\n    vowelsLen += 2\n    vowelsLen += 2\n    vowelsLen += 2\n\
    \    vowelsLen += 2\n    vowelsLen += 2\n    vowelsLen += 2\n    vowelsLen +=\
    \ 2\n    vowelsLen += 2\n    vowelsLen += 2\n    vowelsLen += 2\n    vowelsLen\
    \ += 2\n    vowelsLen += 2\n    vowelsLen += 2\n    vowelsLen += 2\n    vowelsLen\
    \ += 2\n    vowelsLen += 2\n    vowelsLen += 2\n    vowelsLen += 2\n    vowelsLen\
    \ += 2\n    vowelsLen += 2\n    vowelsLen += 2\n    vowelsLen += 2\n    vowelsLen\
    \ += 2\n    vowelsLen += 2\n    vowelsLen += 2\n    vowelsLen += 2\n    vowelsLen\
    \ += 2\n    vowelsLen += 2\n    vowelsLen += 2\n    vowelsLen += 2\n    vowelsLen\
    \ += 2\n    vowelsLen += 2\n    vowelsLen += 2\n    vowelsLen += 2\n    vowelsLen\
    \ += 2\n    vowelsLen += 2\n    vowelsLen += 2\n    vowelsLen += 2\n    vowelsLen\
    \ += 2\n    vowelsLen += 2\n    vowelsLen += 2\n    vowelsLen += 2\n    vowelsLen\
    \ += 2\n    vowelsLen += 2\n    vowelsLen += 2\n    vowelsLen += 2\n    vowelsLen\
    \ += 2\n    vowelsLen += 2\n    vowelsLen += 2\n    vowelsLen += 2\n    vowelsLen\
    \ += 2\n    vowelsLen += 2\n    vowelsLen += 2\n    vowelsLen += 2\n    vowelsLen\
    \ += 2\n    vowelsLen += 2\n    vowelsLen += 2\n    vowelsLen += 2\n    vowelsLen\
    \ += 2\n    vowelsLen += 2\n    vowelsLen += 2\n    vowelsLen += 2\n    vowelsLen\
    \ += 2\n    vowelsLen += 2\n    vowelsLen += 2\n    vowelsLen += 2\n    vowelsLen ",
  "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount := 0\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)/2\n    vowelsCount\
    \ += len(vowels)/3\n    vowelsCount += len(vowels)/4\n    vowelsCount += len(vowels)/5\n\
    \    vowelsCount += len(vowels)/6\n    vowelsCount += len(vowels)/7\n    vowelsCount\
    \ += len(vowels)/8\n    vowelsCount += len(vowels)/9\n    vowelsCount += len(vowels)/10\n\
    \    vowelsCount += len(vowels)/11\n    vowelsCount += len(vowels)/12\n    vowelsCount\
    \ += len(vowels)/13\n    vowelsCount += len(vowels)/14\n    vowelsCount += len(vowels)/15\n\
    \    vowelsCount += len(vowels)/16\n    vowelsCount += len(vowels)/17\n    vowelsCount\
    \ += len(vowels)/18\n    vowelsCount += len(vowels)/19\n    vowelsCount += len(vowels)/20\n\
    \    vowelsCount += len(vowels)/21\n    vowelsCount += len(vowels)/22\n    vowelsCount\
    \ += len(vowels)/23\n    vowelsCount += len(vowels)/24\n    vowelsCount += len(vowels)/25\n\
    \    vowelsCount += len(vowels)/26\n    vowelsCount += len(vowels)/27\n    vowelsCount\
    \ += len(vowels)/28\n    vowelsCount += len(vowels)/29\n    vowelsCount += len(vowels)/30\n\
    \    vowelsCount += len(vowels)/31\n    vowelsCount += len(vowels)/32\n    vowelsCount\
    \ += len(vowels)/33\n    vowelsCount += len(vowels)/34\n    vowelsCount += len(vowels)/35\n\
    \    vowelsCount += len(vowels)/36\n    vowelsCount += len(vowels)/37\n    vowelsCount\
    \ += len(vowels)/38\n    vowelsCount += len(vowels)/39\n    vowelsCount += len(vowels)/40\n\
    \    vowelsCount += len(vowels)/41\n    vowelsCount += len(vowels)/42\n    vowelsCount\
    \ += len(vowels)/43\n    vowelsCount += len(vowels)/44\n    vowelsCount += len(vowels)/45\n\
    \    vowelsCount += len(vowels)/46\n    vowelsCount += len(vowels)/47\n    vowelsCount\
    \ += len(vowels)/48\n    vowelsCount += len(vowels)/49\n    vowels", "    vowels\
    \ := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount := 0\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n", "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"\
    }\n    vowelsLen := len(vowels)\n    vowelsLen -= 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen ", "    vowels :=\
    \ []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsLen := len(vowels)\n\
    \    vowelsLen -= 1\n    vowelsLen /= 2\n    vowelsLen += 2\n    \n    i := len(word)\
    \ - 1\n    vowel := \"\"\n    \n    for i := len(word) - 1; i >= 0; i-- {\n  \
    \      if word[i] == vowels[vowelsLen] {\n            vowel = word[i]\n      \
    \      break\n        }\n    }\n    return vowel\n}\n", "    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount := 0\n    for _, v := range\
    \ vowels {\n        if strings.Contains(word, v) {\n            vowelsCount++\n\
    \        }\n    }\n    if vowelsCount == 0 {\n        return \"\"\n    }\n   \
    \ vowelsCount -= 2\n    vowelsCount %= len(vowels)\n    if vowelsCount == 0 {\n\
    \        return \"\"\n    }\n    vowelsCount -= 2\n    vowelsCount %= len(vowels)\n\
    \    if vowelsCount == 0 {\n        return \"\"\n    }\n    vowelsCount -= 2\n\
    \    vowelsCount %= len(vowels)\n    if vowelsCount == 0 {\n        return \"\"\
    \n    }\n    vowelsCount -= 2\n    vowelsCount %= len(vowels)\n    if vowelsCount\
    \ == 0 {\n        return \"\"\n    }\n    vowelsCount -= 2\n    vowelsCount %=\
    \ len(vowels)\n    if vowelsCount == 0 {\n        return \"\"\n    }\n    vowelsCount\
    \ -= 2\n    vowelsCount %= len(vowels)\n    if vowelsCount == 0 {\n        return\
    \ \"\"\n    }\n    vowelsCount -= 2\n    vowelsCount %= len(vowels)\n    if vowelsCount\
    \ == 0 {\n        return \"\"\n    }\n    vowelsCount -= 2\n    vowelsCount %=\
    \ len(vowels)\n    if vowelsCount == 0 {\n        return \"\"\n    }\n    vowelsCount\
    \ -= 2\n    vowelsCount %= len(vowels)\n    if vowelsCount == 0 {\n        return\
    \ \"\"\n    }\n    vowelsCount -= 2\n    vowelsCount %= len(vowels)\n    if vowelsCount\
    \ == 0 {\n        return \"\"\n    }\n    vowelsCount -= 2\n    vowelsCount %=\
    \ len(vowels)\n    if vowelsCount == 0 {\n        return \"\"\n    }\n    vowelsCount\
    \ -= 2\n    vowelsCount %= len(vowels)\n    if vowelsCount == 0 {\n        return\
    \ \"\"\n    }\n    vowelsCount -= 2\n    vowelsCount %= len(vowels)\n    if vowelsCount\
    \ == 0 {\n        return \"\"\n    }\n    vowelsCount -= 2\n    vowelsCount %=\
    \ len(vowels)\n    if vowelsCount == 0 {\n        return \"\"\n    }\n    vowelsCount\
    \ -= 2\n    vowelsCount %= len(vowels)\n    if vowelsCount == 0 {\n        return\
    \ \"\"\n    }\n    vowelsCount -= 2\n    vowelsCount %= len(vowels)\n    if vowelsCount\
    \ == 0 {\n        return \"\"\n    }\n    vowels", "    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsLen := len(vowels)\n    vowelsLen\
    \ -= 1\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen += 2\n    vowelsLen\
    \ -= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen += 2\n    vowelsLen\
    \ -= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen += 2\n    vowelsLen\
    \ -= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen += 2\n    vowelsLen\
    \ -= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen += 2\n    vowelsLen\
    \ -= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen += 2\n    vowelsLen\
    \ -= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen += 2\n    vowelsLen\
    \ -= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen += 2\n    vowelsLen\
    \ -= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen += 2\n    vowelsLen\
    \ -= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen += 2\n    vowelsLen\
    \ -= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen += 2\n    vowelsLen\
    \ -= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen += 2\n    vowelsLen\
    \ -= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen += 2\n    vowelsLen\
    \ -= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen += 2\n    vowelsLen\
    \ -= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen += 2\n    vowelsLen\
    \ -= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen += 2\n    vowelsLen\
    \ -= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen += 2\n    vowelsLen\
    \ -= 2\n    vowelsLen ", "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"\
    u\"}\n    vowelsCount := 0\n    vowelsCount += len(vowels)\n    for i := len(word)\
    \ - 1; i >= 0; i-- {\n        if word[i] == 'a' || word[i] == 'e' || word[i] ==\
    \ 'i' || word[i] == 'o' || word[i] == 'u' {\n            vowelsCount++\n     \
    \   }\n        if vowelsCount >= len(vowels) {\n            return \"\"\n    \
    \    }\n    }\n    return word[len(word)-1]\n}\n", "    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsLen := len(vowels)\n    vowelsLen\
    \ -= 1\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen ", "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"\
    u\"}\n    vowelsCount := 0\n    vowelsCount += len(vowels)\n    vowelsCount +=\
    \ len(vowels)/2\n    vowelsCount += len(vowels)/3\n    vowelsCount += len(vowels)/4\n\
    \    vowelsCount += len(vowels)/5\n    vowelsCount += len(vowels)/6\n    vowelsCount\
    \ += len(vowels)/7\n    vowelsCount += len(vowels)/8\n    vowelsCount += len(vowels)/9\n\
    \    vowelsCount += len(vowels)/10\n    vowelsCount += len(vowels)/11\n    vowelsCount\
    \ += len(vowels)/12\n    vowelsCount += len(vowels)/13\n    vowelsCount += len(vowels)/14\n\
    \    vowelsCount += len(vowels)/15\n    vowelsCount += len(vowels)/16\n    vowelsCount\
    \ += len(vowels)/17\n    vowelsCount += len(vowels)/18\n    vowelsCount += len(vowels)/19\n\
    \    vowelsCount += len(vowels)/20\n    vowelsCount += len(vowels)/21\n    vowelsCount\
    \ += len(vowels)/22\n    vowelsCount += len(vowels)/23\n    vowelsCount += len(vowels)/24\n\
    \    vowelsCount += len(vowels)/25\n    vowelsCount += len(vowels)/26\n    vowelsCount\
    \ += len(vowels)/27\n    vowelsCount += len(vowels)/28\n    vowelsCount += len(vowels)/29\n\
    \    vowelsCount += len(vowels)/30\n    vowelsCount += len(vowels)/31\n    vowelsCount\
    \ += len(vowels)/32\n    vowelsCount += len(vowels)/33\n    vowelsCount += len(vowels)/34\n\
    \    vowelsCount += len(vowels)/35\n    vowelsCount += len(vowels)/36\n    vowelsCount\
    \ += len(vowels)/37\n    vowelsCount += len(vowels)/38\n    vowelsCount += len(vowels)/39\n\
    \    vowelsCount += len(vowels)/40\n    vowelsCount += len(vowels)/41\n    vowelsCount\
    \ += len(vowels)/42\n    vowelsCount += len(vowels)/43\n    vowelsCount += len(vowels)/44\n\
    \    vowelsCount += len(vowels)/45\n    vowelsCount += len(vowels)/46\n    vowelsCount\
    \ += len(vowels)/47\n    vowelsCount += len(vowels)/48\n    vowelsCount += len(vowels)/49\n\
    \    vowels", "    var vowels []string = []string{\"a\", \"e\", \"i\", \"o\",\
    \ \"u\"}\n    \n    for i := len(word) - 1; i >= 0; i-- {\n        if word[i]\
    \ == \"a\" || word[i] == \"e\" || word[i] == \"i\" || word[i] == \"o\" || word[i]\
    \ == \"u\" {\n            return word[i]\n        }\n    }\n    return \"\"\n\
    }\n", "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount\
    \ := 0\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)/2\n   \
    \ vowelsCount += len(vowels)/3\n    vowelsCount += len(vowels)/4\n    vowelsCount\
    \ += len(vowels)/5\n    vowelsCount += len(vowels)/6\n    vowelsCount += len(vowels)/7\n\
    \    vowelsCount += len(vowels)/8\n    vowelsCount += len(vowels)/9\n    vowelsCount\
    \ += len(vowels)/10\n    vowelsCount += len(vowels)/11\n    vowelsCount += len(vowels)/12\n\
    \    vowelsCount += len(vowels)/13\n    vowelsCount += len(vowels)/14\n    vowelsCount\
    \ += len(vowels)/15\n    vowelsCount += len(vowels)/16\n    vowelsCount += len(vowels)/17\n\
    \    vowelsCount += len(vowels)/18\n    vowelsCount += len(vowels)/19\n    vowelsCount\
    \ += len(vowels)/20\n    vowelsCount += len(vowels)/21\n    vowelsCount += len(vowels)/22\n\
    \    vowelsCount += len(vowels)/23\n    vowelsCount += len(vowels)/24\n    vowelsCount\
    \ += len(vowels)/25\n    vowelsCount += len(vowels)/26\n    vowelsCount += len(vowels)/27\n\
    \    vowelsCount += len(vowels)/28\n    vowelsCount += len(vowels)/29\n    vowelsCount\
    \ += len(vowels)/30\n    vowelsCount += len(vowels)/31\n    vowelsCount += len(vowels)/32\n\
    \    vowelsCount += len(vowels)/33\n    vowelsCount += len(vowels)/34\n    vowelsCount\
    \ += len(vowels)/35\n    vowelsCount += len(vowels)/36\n    vowelsCount += len(vowels)/37\n\
    \    vowelsCount += len(vowels)/38\n    vowelsCount += len(vowels)/39\n    vowelsCount\
    \ += len(vowels)/40\n    vowelsCount += len(vowels)/41\n    vowelsCount += len(vowels)/42\n\
    \    vowelsCount += len(vowels)/43\n    vowelsCount += len(vowels)/44\n    vowelsCount\
    \ += len(vowels)/45\n    vowelsCount += len(vowels)/46\n    vowelsCount += len(vowels)/47\n\
    \    vowelsCount += len(vowels)/48\n    vowelsCount += len(vowels)/49\n    vowels",
  "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount := 0\n\
    \    vowelsCount += len(vowels)\n    for i := len(word) - 1; i >= 0; i-- {\n \
    \       if word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o'\
    \ || word[i] == 'u' {\n            vowelsCount++\n        }\n        if vowelsCount\
    \ >= len(vowels) {\n            return \"\"\n        }\n    }\n    return word[len(word)-1]\n\
    }\n", "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsLen\
    \ := len(vowels)\n    vowelsLen -= 1\n    vowelsLen /= 2\n    vowelsLen += 2\n\
    \    \n    i := len(word) - 1\n    \n    for i >= 0 {\n        if word[i] == 'a'\
    \ || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u' {\n\
    \            i -= 1\n            continue\n        }\n        \n        if word[i]\
    \ == 'y' {\n            i -= 2\n            continue\n        }\n        \n  \
    \      if word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o'\
    \ || word[i] == 'u' {\n            i -= 1\n            continue\n        }\n \
    \       \n        if word[i] == 'y' {\n            i -= 2\n            continue\n\
    \        }\n        \n        if word[i] == 'a' || word[i] == 'e' || word[i] ==\
    \ 'i' || word[i] == 'o' || word[i] == 'u' {\n            i -= 1\n            continue\n\
    \        }\n        \n        if word[i] == 'y' {\n            i -= 2\n      \
    \      continue\n        }\n        \n        if word[i] == 'a' || word[i] ==\
    \ 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u' {\n            i -=\
    \ 1\n            continue\n        }\n        \n        if word[i] == 'y' {\n\
    \            i -= 2\n            continue\n        }\n        \n        if word[i]\
    \ == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u'\
    \ {\n            i -= 1\n            continue\n        }\n        \n        if\
    \ word[i] == 'y' {\n            i -= 2\n            continue\n        }\n    \
    \    \n        if word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i]\
    \ == 'o' || word[i] == 'u' {\n            i -= 1\n            continue\n     \
    \   }\n        \n        if word[i] == 'y' {\n            i -= 2\n           \
    \ continue\n        }\n        \n        if word[i] == 'a' || word[i] == 'e' ||\
    \ word[i] == 'i' || word[i] == 'o' || word[i] == 'u' {\n            i -= 1\n \
    \           continue\n        }\n        \n        if word[i] == 'y' {\n     \
    \       i -= 2\n            continue\n        }\n        \n        if word[i]\
    \ == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u'\
    \ {\n            i -= 1\n            continue\n        }\n        \n        if\
    \ word[i] == 'y' {\n            i -= 2\n            continue", "    vowels :=\
    \ []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount := 0\n    vowelsCount\
    \ += len(vowels)\n    for _, v := range vowels {\n        if word[len(word)-1:]\
    \ == v {\n            return v\n        }\n    }\n    return \"\"\n}\n", "   \
    \ vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount := 0\n\
    \    vowelsCount += len(vowels)\n    for i := len(word) - 1; i >= 0; i-- {\n \
    \       if word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o'\
    \ || word[i] == 'u' {\n            vowelsCount++\n        }\n    }\n    if vowelsCount\
    \ == 0 {\n        return \"\"\n    }\n    vowelsCount -= len(vowels)\n    for\
    \ i := len(word) - 1; i >= 0; i-- {\n        if word[i] == 'a' || word[i] == 'e'\
    \ || word[i] == 'i' || word[i] == 'o' || word[i] == 'u' {\n            vowelsCount--\n\
    \        }\n        if vowelsCount < 0 {\n            return word[i]\n       \
    \ }\n    }\n    return \"\"\n}\n", "    vowels := []string{\"a\", \"e\", \"i\"\
    , \"o\", \"u\"}\n    vowelsLen := len(vowels)\n    vowelsLen -= 1\n    vowelsLen\
    \ += 2\n    vowelsLen -= 2\n    vowelsLen += 2\n    vowelsLen += 2\n    vowelsLen\
    \ += 2\n    vowelsLen += 2\n    vowelsLen += 2\n    vowelsLen += 2\n    vowelsLen\
    \ += 2\n    vowelsLen += 2\n    vowelsLen += 2\n    vowelsLen += 2\n    vowelsLen\
    \ += 2\n    vowelsLen += 2\n    vowelsLen += 2\n    vowelsLen += 2\n    vowelsLen\
    \ += 2\n    vowelsLen += 2\n    vowelsLen += 2\n    vowelsLen += 2\n    vowelsLen\
    \ += 2\n    vowelsLen += 2\n    vowelsLen += 2\n    vowelsLen += 2\n    vowelsLen\
    \ += 2\n    vowelsLen += 2\n    vowelsLen += 2\n    vowelsLen += 2\n    vowelsLen\
    \ += 2\n    vowelsLen += 2\n    vowelsLen += 2\n    vowelsLen += 2\n    vowelsLen\
    \ += 2\n    vowelsLen += 2\n    vowelsLen += 2\n    vowelsLen += 2\n    vowelsLen\
    \ += 2\n    vowelsLen += 2\n    vowelsLen += 2\n    vowelsLen += 2\n    vowelsLen\
    \ += 2\n    vowelsLen += 2\n    vowelsLen += 2\n    vowelsLen += 2\n    vowelsLen\
    \ += 2\n    vowelsLen += 2\n    vowelsLen += 2\n    vowelsLen += 2\n    vowelsLen\
    \ += 2\n    vowelsLen += 2\n    vowelsLen += 2\n    vowelsLen += 2\n    vowelsLen\
    \ += 2\n    vowelsLen += 2\n    vowelsLen += 2\n    vowelsLen += 2\n    vowelsLen\
    \ += 2\n    vowelsLen += 2\n    vowelsLen += 2\n    vowelsLen += 2\n    vowelsLen\
    \ += 2\n    vowelsLen += 2\n    vowelsLen += 2\n    vowelsLen += 2\n    vowelsLen\
    \ += 2\n    vowelsLen += 2\n    vowelsLen += 2\n    vowelsLen += 2\n    vowelsLen ",
  "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount := 0\n\
    \    vowelsCount += len(vowels)\n    for i := len(word) - 2; i >= 0; i-- {\n \
    \       if word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o'\
    \ || word[i] == 'u' {\n            vowelsCount += 1\n        }\n    }\n    if\
    \ vowelsCount < 2 {\n        return \"\"\n    }\n    vowelsCount -= len(vowels)\n\
    \    for i := len(word) - 2; i >= 0; i-- {\n        if word[i] == 'a' || word[i]\
    \ == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u' {\n           \
    \ vowelsCount += 1\n        }\n    }\n    if vowelsCount < 2 {\n        return\
    \ \"\"\n    }\n    vowelsCount -= len(vowels)\n    for i := len(word) - 2; i >=\
    \ 0; i-- {\n        if word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i]\
    \ == 'o' || word[i] == 'u' {\n            vowelsCount += 1\n        }\n    }\n\
    \    if vowelsCount < 2 {\n        return \"\"\n    }\n    vowelsCount -= len(vowels)\n\
    \    for i := len(word) - 2; i >= 0; i-- {\n        if word[i] == 'a' || word[i]\
    \ == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u' {\n           \
    \ vowelsCount += 1\n        }\n    }\n    if vowelsCount < 2 {\n        return\
    \ \"\"\n    }\n    vowelsCount -= len(vowels)\n    for i := len(word) - 2; i >=\
    \ 0; i-- {\n        if word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i]\
    \ == 'o' || word[i] == 'u' {\n            vowelsCount += 1\n        }\n    }\n\
    \    if vowelsCount < 2 {\n        return \"\"\n    }\n    vowelsCount -= len(vowels)\n\
    \    for i := len(word) - 2; i >= 0; i-- {\n        if word[i] == 'a' || word[i]\
    \ == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u' {\n           \
    \ vowelsCount += 1\n        }\n    }\n    if vowelsCount < 2 {\n        return\
    \ \"\"\n    }\n    vowelsCount -= len(vowels)\n    for i := len(word) - 2; i >=\
    \ 0; i-- {\n        if word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i]\
    \ == 'o' || word[i] == 'u' {\n", "    vowels := []string{\"a\", \"e\", \"i\",\
    \ \"o\", \"u\"}\n    vowelsCount := 0\n    vowelsCount += len(vowels)\n    for\
    \ _, v := range vowels {\n        if strings.Contains(word, v) {\n           \
    \ vowelsCount++\n        }\n    }\n    if vowelsCount > len(word) {\n        return\
    \ \"\"\n    }\n    vowelsCount -= len(vowels)\n    for i := len(word) - vowelsCount;\
    \ i >= 0; i-- {\n        if strings.Contains(word, vowels[i]) {\n            return\
    \ word[i]\n        }\n    }\n    return \"\"\n}\n", "    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount := 0\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n",
  "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount := 0\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n", "    vowels := []string{\"a\", \"e\", \"i\"\
    , \"o\", \"u\"}\n    vowelsLen := len(vowels)\n    vowelsLen -= 1\n    vowelsLen\
    \ += 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen ",
  "    var vowels []string\n    vowels = append(vowels, \"a\", \"e\", \"i\", \"o\"\
    , \"u\")\n    for i := len(word) - 1; i >= 0; i-- {\n        if word[i] == \"\
    a\" || word[i] == \"e\" || word[i] == \"i\" || word[i] == \"o\" || word[i] ==\
    \ \"u\" {\n            return word[i]\n        }\n    }\n    return \"\"\n}\n",
  "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsLen := len(vowels)\n\
    \    vowelsLen -= 1\n    vowelsLen /= 2\n    vowelsLen += 2\n    \n    i := len(word)\
    \ - 1\n    \n    for i := len(word) - 1; i >= 0; i-- {\n        if word[i] ==\
    \ 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u'\
    \ {\n            i -= vowelsLen\n        } else {\n            i -= 2\n      \
    \  }\n    }\n    return word\n}\n", "    // Your code here\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount := 0\n    for _, v := range\
    \ word {\n        if v == 'a' || v == 'e' || v == 'i' || v == 'o' || v == 'u'\
    \ {\n            vowelsCount++\n        }\n    }\n    if vowelsCount > 0 {\n \
    \       for _, v := range word {\n            if v == 'a' || v == 'e' || v ==\
    \ 'i' || v == 'o' || v == 'u' {\n                return v\n            }\n   \
    \     }\n    }\n    return \"\"\n}\n", "    vowels := []string{\"a\", \"e\", \"\
    i\", \"o\", \"u\"}\n    vowelsLen := len(vowels)\n    vowelsLen -= 1\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen ",
  "    // Your code here\n    vowel := []string{\"a\", \"e\", \"i\", \"o\", \"u\"\
    }\n    vowel_count := 0\n    vowel_index := len(word) - 2\n    for _, v := range\
    \ vowel {\n        if word[vowel_index] == v {\n            vowel_count++\n  \
    \      }\n        vowel_index--\n    }\n    if vowel_count == 0 {\n        return\
    \ \"\"\n    }\n    if vowel_count == 1 {\n        return word[vowel_index]\n \
    \   }\n    if vowel_count == 2 {\n        return word[vowel_index+1]\n    }\n\
    \    if vowel_count == 3 {\n        return word[vowel_index+2]\n    }\n    if\
    \ vowel_count == 4 {\n        return word[vowel_index+3]\n    }\n    return \"\
    \"\n}\n", "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount\
    \ := 0\n    vowelsCount += len(vowels)\n    for _, v := range vowels {\n     \
    \   if strings.Contains(word, v) {\n            vowelsCount++\n        }\n   \
    \ }\n    if vowelsCount < 2 {\n        return \"\"\n    }\n    vowelsCount -=\
    \ 2\n    vowelsCount /= 2\n    vowelsCount %= len(vowels)\n    return vowels[vowelsCount]\n\
    }\n", "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount\
    \ := 0\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)/2\n   \
    \ vowelsCount += len(vowels)/3\n    vowelsCount += len(vowels)/4\n    vowelsCount\
    \ += len(vowels)/5\n    vowelsCount += len(vowels)/6\n    vowelsCount += len(vowels)/7\n\
    \    vowelsCount += len(vowels)/8\n    vowelsCount += len(vowels)/9\n    vowelsCount\
    \ += len(vowels)/10\n    vowelsCount += len(vowels)/11\n    vowelsCount += len(vowels)/12\n\
    \    vowelsCount += len(vowels)/13\n    vowelsCount += len(vowels)/14\n    vowelsCount\
    \ += len(vowels)/15\n    vowelsCount += len(vowels)/16\n    vowelsCount += len(vowels)/17\n\
    \    vowelsCount += len(vowels)/18\n    vowelsCount += len(vowels)/19\n    vowelsCount\
    \ += len(vowels)/20\n    vowelsCount += len(vowels)/21\n    vowelsCount += len(vowels)/22\n\
    \    vowelsCount += len(vowels)/23\n    vowelsCount += len(vowels)/24\n    vowelsCount\
    \ += len(vowels)/25\n    vowelsCount += len(vowels)/26\n    vowelsCount += len(vowels)/27\n\
    \    vowelsCount += len(vowels)/28\n    vowelsCount += len(vowels)/29\n    vowelsCount\
    \ += len(vowels)/30\n    vowelsCount += len(vowels)/31\n    vowelsCount += len(vowels)/32\n\
    \    vowelsCount += len(vowels)/33\n    vowelsCount += len(vowels)/34\n    vowelsCount\
    \ += len(vowels)/35\n    vowelsCount += len(vowels)/36\n    vowelsCount += len(vowels)/37\n\
    \    vowelsCount += len(vowels)/38\n    vowelsCount += len(vowels)/39\n    vowelsCount\
    \ += len(vowels)/40\n    vowelsCount += len(vowels)/41\n    vowelsCount += len(vowels)/42\n\
    \    vowelsCount += len(vowels)/43\n    vowelsCount += len(vowels)/44\n    vowelsCount\
    \ += len(vowels)/45\n    vowelsCount += len(vowels)/46\n    vowelsCount += len(vowels)/47\n\
    \    vowelsCount += len(vowels)/48\n    vowelsCount += len(vowels)/49\n    vowels",
  "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount := 0\n\
    \    vowelsCount += len(vowels)\n    for i := len(word) - 1; i >= 0; i-- {\n \
    \       if word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o'\
    \ || word[i] == 'u' {\n            vowelsCount += 1\n        }\n        if vowelsCount\
    \ > len(vowels) {\n            return \"\"\n        }\n    }\n    return word[len(word)-1]\n\
    }\n", "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount\
    \ := 0\n    vowelsCount += len(vowels)\n    for i := len(word) - 1; i >= 0; i--\
    \ {\n        if word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i]\
    \ == 'o' || word[i] == 'u' {\n            vowelsCount++\n        }\n    }\n  \
    \  if vowelsCount == 0 {\n        return \"\"\n    }\n    vowelsCount -= len(vowels)\n\
    \    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount\
    \ /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n   \
    \ vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount\
    \ /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n   \
    \ vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount\
    \ /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n   \
    \ vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount\
    \ /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n   \
    \ vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount\
    \ /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n   \
    \ vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount\
    \ /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n   \
    \ vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount\
    \ /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n   \
    \ vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount\
    \ /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n    vowelsCount /= 2\n   \
    \ vowelsCount /= 2\n    vowelsCount /= 2\n    vowel", "    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount := 0\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n",
  "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount := 0\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)/2\n    vowelsCount\
    \ += len(vowels)/3\n    vowelsCount += len(vowels)/4\n    vowelsCount += len(vowels)/5\n\
    \    vowelsCount += len(vowels)/6\n    vowelsCount += len(vowels)/7\n    vowelsCount\
    \ += len(vowels)/8\n    vowelsCount += len(vowels)/9\n    vowelsCount += len(vowels)/10\n\
    \    vowelsCount += len(vowels)/11\n    vowelsCount += len(vowels)/12\n    vowelsCount\
    \ += len(vowels)/13\n    vowelsCount += len(vowels)/14\n    vowelsCount += len(vowels)/15\n\
    \    vowelsCount += len(vowels)/16\n    vowelsCount += len(vowels)/17\n    vowelsCount\
    \ += len(vowels)/18\n    vowelsCount += len(vowels)/19\n    vowelsCount += len(vowels)/20\n\
    \    vowelsCount += len(vowels)/21\n    vowelsCount += len(vowels)/22\n    vowelsCount\
    \ += len(vowels)/23\n    vowelsCount += len(vowels)/24\n    vowelsCount += len(vowels)/25\n\
    \    vowelsCount += len(vowels)/26\n    vowelsCount += len(vowels)/27\n    vowelsCount\
    \ += len(vowels)/28\n    vowelsCount += len(vowels)/29\n    vowelsCount += len(vowels)/30\n\
    \    vowelsCount += len(vowels)/31\n    vowelsCount += len(vowels)/32\n    vowelsCount\
    \ += len(vowels)/33\n    vowelsCount += len(vowels)/34\n    vowelsCount += len(vowels)/35\n\
    \    vowelsCount += len(vowels)/36\n    vowelsCount += len(vowels)/37\n    vowelsCount\
    \ += len(vowels)/38\n    vowelsCount += len(vowels)/39\n    vowelsCount += len(vowels)/40\n\
    \    vowelsCount += len(vowels)/41\n    vowelsCount += len(vowels)/42\n    vowelsCount\
    \ += len(vowels)/43\n    vowelsCount += len(vowels)/44\n    vowelsCount += len(vowels)/45\n\
    \    vowelsCount += len(vowels)/46\n    vowelsCount += len(vowels)/47\n    vowelsCount\
    \ += len(vowels)/48\n    vowelsCount += len(vowels)/49\n    vowels", "    vowels\
    \ := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount := 0\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n", "    var vowel string = \"\"\n    for i := len(word) - 1;\
    \ i >= 0; i-- {\n        if word[i] == 'a' || word[i] == 'e' || word[i] == 'i'\
    \ || word[i] == 'o' || word[i] == 'u' {\n            vowel = word[i]\n       \
    \     break\n        }\n    }\n    return vowel\n}\n", "    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount := 0\n    for _, v := range\
    \ vowels {\n        if strings.Contains(word, v) {\n            vowelsCount++\n\
    \        }\n    }\n    if vowelsCount == 0 {\n        return \"\"\n    }\n   \
    \ vowelsCount -= len(word) - len(strings.Split(word, \"a\")[0])\n    if vowelsCount\
    \ < 0 {\n        vowelsCount = 0\n    }\n    vowelsCount /= 2\n    if vowelsCount\
    \ > len(vowels)-1 {\n        vowelsCount = len(vowels) - 1\n    }\n    return\
    \ vowels[vowelsCount]\n}\n", "    var vowels []string\n    vowels = append(vowels,\
    \ \"a\", \"e\", \"i\", \"o\", \"u\")\n    vowels = append(vowels, \"A\", \"E\"\
    , \"I\", \"O\", \"U\")\n    vowels = append(vowels, \"a\", \"e\", \"i\", \"o\"\
    , \"u\")\n    vowels = append(vowels, \"A\", \"E\", \"I\", \"O\", \"U\")\n   \
    \ vowels = append(vowels, \"a\", \"e\", \"i\", \"o\", \"u\")\n    vowels = append(vowels,\
    \ \"A\", \"E\", \"I\", \"O\", \"U\")\n    vowels = append(vowels, \"a\", \"e\"\
    , \"i\", \"o\", \"u\")\n    vowels = append(vowels, \"A\", \"E\", \"I\", \"O\"\
    , \"U\")\n    vowels = append(vowels, \"a\", \"e\", \"i\", \"o\", \"u\")\n   \
    \ vowels = append(vowels, \"A\", \"E\", \"I\", \"O\", \"U\")\n    vowels = append(vowels,\
    \ \"a\", \"e\", \"i\", \"o\", \"u\")\n    vowels = append(vowels, \"A\", \"E\"\
    , \"I\", \"O\", \"U\")\n    vowels = append(vowels, \"a\", \"e\", \"i\", \"o\"\
    , \"u\")\n    vowels = append(vowels, \"A\", \"E\", \"I\", \"O\", \"U\")\n   \
    \ vowels = append(vowels, \"a\", \"e\", \"i\", \"o\", \"u\")\n    vowels = append(vowels,\
    \ \"A\", \"E\", \"I\", \"O\", \"U\")\n    vowels = append(vowels, \"a\", \"e\"\
    , \"i\", \"o\", \"u\")\n    vowels = append(vowels, \"A\", \"E\", \"I\", \"O\"\
    , \"U\")\n    vowels = append(vowels, \"a\", \"e\", \"i\", \"o\", \"u\")\n   \
    \ vowels = append(vowels, \"A\", \"E\", \"I\", \"O\", \"U\")\n    vowels = append(vowels,\
    \ \"a\", \"e\", \"i\", \"o\", \"u\")\n    vowels = append(vowels, \"A\", \"E\"\
    , \"I\", \"O\", \"U\")\n    vowels = append(vowels, \"a\", \"e\", \"i\", \"o\"\
    , \"u\")\n    vowels = append(vowels, \"A\", \"E\", \"I\", \"O\", \"U\")\n   \
    \ vowels = append(vowels, \"a\", \"e\", \"i\", \"o\", \"u\")\n    vowels = append(vowels,\
    \ \"A\", \"E\", \"I\", \"O\", \"U\")\n    vowels = append(vowels, \"a\", \"e\"\
    , \"i\", \"o\", \"u\")\n    vowels = append(vowels, \"A\", \"E\", \"I\", \"O\"\
    , \"U\")\n    vowels = append(vowels, \"a\", \"e\", \"i\", \"o\", \"u\")\n   \
    \ vowels = append(vowels, \"A\", \"E\", \"I\", \"O\", \"U\")\n    vowels = append(vowels,\
    \ \"a\", \"e\", \"i\", \"o\", \"u\")\n    vowels = append(vowels, \"A\", \"E\"\
    , \"I", "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount\
    \ := 0\n    for _, v := range vowels {\n        if strings.Contains(word, v) {\n\
    \            vowelsCount++\n        }\n    }\n    if vowelsCount == 0 {\n    \
    \    return \"\"\n    }\n    vowelsCount -= len(word) - len(strings.Replace(word,\
    \ \"a\", \"A\", -1))\n    vowelsCount -= len(word) - len(strings.Replace(word,\
    \ \"e\", \"E\", -1))\n    vowelsCount -= len(word) - len(strings.Replace(word,\
    \ \"i\", \"I\", -1))\n    vowelsCount -= len(word) - len(strings.Replace(word,\
    \ \"o\", \"O\", -1))\n    vowelsCount -= len(word) - len(strings.Replace(word,\
    \ \"u\", \"U\", -1))\n    vowelsCount -= len(word) - len(strings.Replace(word,\
    \ \"A\", \"a\", -1))\n    vowelsCount -= len(word) - len(strings.Replace(word,\
    \ \"E\", \"e\", -1))\n    vowelsCount -= len(word) - len(strings.Replace(word,\
    \ \"I\", \"i\", -1))\n    vowelsCount -= len(word) - len(strings.Replace(word,\
    \ \"O\", \"o\", -1))\n    vowelsCount -= len(word) - len(strings.Replace(word,\
    \ \"U\", \"u\", -1))\n    vowelsCount -= len(word) - len(strings.Replace(word,\
    \ \"a\", \"A\", -1))\n    vowelsCount -= len(word) - len(strings.Replace(word,\
    \ \"e\", \"E\", -1))\n    vowelsCount -= len(word) - len(strings.Replace(word,\
    \ \"i\", \"I\", -1))\n    vowelsCount -= len(word) - len(strings.Replace(word,\
    \ \"o\", \"O\", -1))\n    vowelsCount -= len(word) - len(strings.Replace(word,\
    \ \"u\", \"U\", -1))\n    vowelsCount -= len(word) - len(strings.Replace(word,\
    \ \"A\", \"a\", -1))\n    vowelsCount -= len(word) - len(strings.Replace(word,\
    \ \"E\", \"e\", -1))\n    vowelsCount -= len(word) - len(strings.Replace(word,\
    \ \"I\", \"i\", -1))\n    vowelsCount -= len(word) - len(strings.Replace(word,\
    \ \"O\", \"o\", -1))\n    vowelsCount -= len(word) - len(strings.Replace(word,\
    \ \"U\", \"u\", -1))\n    vowelsCount -= len(word) - len(strings.Replace(word,\
    \ \"a\", \"A\", -1))\n    vowelsCount -= len(word) - len(strings.Replace(word,\
    \ \"e\", \"E\", -1))\n    vowelsCount -= len(word) - len(strings.Replace(word,\
    \ \"i\", \"I\", -1))\n", "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"\
    u\"}\n    vowelsLen := len(vowels)\n    vowelsLen -= 1\n    vowelsLen /= 2\n \
    \   vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n\
    \    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /=\
    \ 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen ",
  "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsLen := len(vowels)\n\
    \    vowelsLen -= 1\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /=\
    \ 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen ", "    vowels := []string{\"a\", \"\
    e\", \"i\", \"o\", \"u\"}\n    vowelsCount := 0\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)/2\n    vowelsCount += len(vowels)/3\n    vowelsCount\
    \ += len(vowels)/4\n    vowelsCount += len(vowels)/5\n    vowelsCount += len(vowels)/6\n\
    \    vowelsCount += len(vowels)/7\n    vowelsCount += len(vowels)/8\n    vowelsCount\
    \ += len(vowels)/9\n    vowelsCount += len(vowels)/10\n    vowelsCount += len(vowels)/11\n\
    \    vowelsCount += len(vowels)/12\n    vowelsCount += len(vowels)/13\n    vowelsCount\
    \ += len(vowels)/14\n    vowelsCount += len(vowels)/15\n    vowelsCount += len(vowels)/16\n\
    \    vowelsCount += len(vowels)/17\n    vowelsCount += len(vowels)/18\n    vowelsCount\
    \ += len(vowels)/19\n    vowelsCount += len(vowels)/20\n    vowelsCount += len(vowels)/21\n\
    \    vowelsCount += len(vowels)/22\n    vowelsCount += len(vowels)/23\n    vowelsCount\
    \ += len(vowels)/24\n    vowelsCount += len(vowels)/25\n    vowelsCount += len(vowels)/26\n\
    \    vowelsCount += len(vowels)/27\n    vowelsCount += len(vowels)/28\n    vowelsCount\
    \ += len(vowels)/29\n    vowelsCount += len(vowels)/30\n    vowelsCount += len(vowels)/31\n\
    \    vowelsCount += len(vowels)/32\n    vowelsCount += len(vowels)/33\n    vowelsCount\
    \ += len(vowels)/34\n    vowelsCount += len(vowels)/35\n    vowelsCount += len(vowels)/36\n\
    \    vowelsCount += len(vowels)/37\n    vowelsCount += len(vowels)/38\n    vowelsCount\
    \ += len(vowels)/39\n    vowelsCount += len(vowels)/40\n    vowelsCount += len(vowels)/41\n\
    \    vowelsCount += len(vowels)/42\n    vowelsCount += len(vowels)/43\n    vowelsCount\
    \ += len(vowels)/44\n    vowelsCount += len(vowels)/45\n    vowelsCount += len(vowels)/46\n\
    \    vowelsCount += len(vowels)/47\n    vowelsCount += len(vowels)/48\n    vowelsCount\
    \ += len(vowels)/49\n    vowels", "    // Your code here\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount := 0\n    vowelsCount += len(vowels)\n\
    \    for i := len(word) - 1; i >= 0; i-- {\n        if word[i] == 'a' || word[i]\
    \ == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u' {\n           \
    \ vowelsCount++\n        }\n    }\n    if vowelsCount > 0 {\n        return \"\
    \"\n    }\n    vowelsCount = 0\n    for i := len(word) - 1; i >= 0; i-- {\n  \
    \      if word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o'\
    \ || word[i] == 'u' {\n            vowelsCount++\n        }\n    }\n    if vowelsCount\
    \ == 0 {\n        return \"\"\n    }\n    vowelsCount -= len(vowels)\n    for\
    \ i := len(word) - 1; i >= 0; i-- {\n        if word[i] == 'a' || word[i] == 'e'\
    \ || word[i] == 'i' || word[i] == 'o' || word[i] == 'u' {\n            vowelsCount--\n\
    \        }\n    }\n    if vowelsCount < 0 {\n        return \"\"\n    }\n    vowelsCount\
    \ -= len(vowels)\n    for i := len(word) - 1; i >= 0; i-- {\n        if word[i]\
    \ == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u'\
    \ {\n            vowelsCount++\n        }\n    }\n    if vowelsCount > 0 {\n \
    \       return \"\"\n    }\n    return word\n}\n", "    // write your code here\n\
    \    vowel := []rune{'a', 'e', 'i', 'o', 'u'}\n    vowel_count := 0\n    vowel_count\
    \ += len(word) - len(word[:len(word)-1])\n    for _, v := range vowel {\n    \
    \    if word[len(word)-1:] == v {\n            vowel_count += 1\n        }\n \
    \   }\n    if vowel_count > 0 {\n        return word[len(word)-1:]\n    }\n  \
    \  return \"\"\n}\n", "    // code here\n    vowel := \"\"\n    vowel_count :=\
    \ 0\n    vowel_count := 0\n    for i := len(word) - 1; i >= 0; i-- {\n       \
    \ if word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i]\
    \ == 'u' {\n            vowel = word[i]\n            vowel_count++\n        }\n\
    \    }\n    if vowel_count > 0 {\n        for i := len(word) - 1; i >= 0; i--\
    \ {\n            if word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i]\
    \ == 'o' || word[i] == 'u' {\n                vowel = word[i]\n              \
    \  vowel_count++\n            }\n        }\n    }\n    return vowel\n}\n", " \
    \   vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount :=\
    \ 0\n    vowelsCount += len(vowels)\n    for i := len(word) - 2; i >= 0; i-- {\n\
    \        if word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o'\
    \ || word[i] == 'u' {\n            vowelsCount++\n        }\n    }\n    if vowelsCount\
    \ > 0 {\n        vowelsCount -= len(vowels)\n    }\n    if vowelsCount < 0 {\n\
    \        vowelsCount = 0\n    }\n    vowelsCount /= 2\n    vowelsCount %= len(vowels)\n\
    \    if vowelsCount == 0 {\n        return \"\"\n    }\n    vowelsCount -= 1\n\
    \    vowelsCount /= len(vowels)\n    if vowelsCount == 0 {\n        return \"\"\
    \n    }\n    vowelsCount -= 1\n    vowelsCount /= len(vowels)\n    if vowelsCount\
    \ == 0 {\n        return \"\"\n    }\n    vowelsCount -= 1\n    vowelsCount /=\
    \ len(vowels)\n    if vowelsCount == 0 {\n        return \"\"\n    }\n    vowelsCount\
    \ -= 1\n    vowelsCount /= len(vowels)\n    if vowelsCount == 0 {\n        return\
    \ \"\"\n    }\n    vowelsCount -= 1\n    vowelsCount /= len(vowels)\n    if vowelsCount\
    \ == 0 {\n        return \"\"\n    }\n    vowelsCount -= 1\n    vowelsCount /=\
    \ len(vowels)\n    if vowelsCount == 0 {\n        return \"\"\n    }\n    vowelsCount\
    \ -= 1\n    vowelsCount /= len(vowels)\n    if vowelsCount == 0 {\n        return\
    \ \"\"\n    }\n    vowelsCount -= 1\n    vowelsCount /= len(vowels)\n    if vowelsCount\
    \ == 0 {\n        return \"\"\n    }\n    vowelsCount -= 1\n    vowelsCount /=\
    \ len(vowels)\n    if vowelsCount == 0 {\n        return \"\"\n    }\n    vowelsCount\
    \ -= 1\n    vowelsCount /= len(vowels)\n    if vowelsCount == 0 {\n        return\
    \ \"\"\n    }\n    vowelsCount -= 1\n    vowelsCount /= len(vowels)\n    if vowelsCount\
    \ == 0 {\n        return \"\"\n    }\n    vowelsCount -= 1\n    vowelsCount /=\
    \ len(vowels)\n    if vowelsCount == 0 {\n        return \"\"\n    }\n    vowelsCount\
    \ -= 1\n    vowelsCount /= len(vowels)\n    if vowelsCount == 0 {\n        return\
    \ \"\"\n    }\n    vowelsCount -= 1\n    vowelsCount /= len(vowels)\n    if ",
  "    // code here\n    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n \
    \   vowelsLen := len(vowels)\n    vowelsLen -= 1\n    vowelsLen += 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n", "    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount := 0\n    for _, v := range\
    \ vowels {\n        if strings.Contains(word, v) {\n            vowelsCount++\n\
    \        }\n    }\n    if vowelsCount == 0 {\n        return \"\"\n    }\n   \
    \ vowelsCount -= len(word) - len(strings.Split(word, \"e\"))\n    if vowelsCount\
    \ < 0 {\n        vowelsCount = 0\n    }\n    vowelsCount -= len(strings.Split(word,\
    \ \"i\"))\n    if vowelsCount < 0 {\n        vowelsCount = 0\n    }\n    vowelsCount\
    \ -= len(strings.Split(word, \"o\"))\n    if vowelsCount < 0 {\n        vowelsCount\
    \ = 0\n    }\n    vowelsCount -= len(strings.Split(word, \"u\"))\n    if vowelsCount\
    \ < 0 {\n        vowelsCount = 0\n    }\n    vowelsCount -= len(strings.Split(word,\
    \ \"a\"))\n    if vowelsCount < 0 {\n        vowelsCount = 0\n    }\n    vowelsCount\
    \ -= len(strings.Split(word, \"e\"))\n    if vowelsCount < 0 {\n        vowelsCount\
    \ = 0\n    }\n    vowelsCount -= len(strings.Split(word, \"i\"))\n    if vowelsCount\
    \ < 0 {\n        vowelsCount = 0\n    }\n    vowelsCount -= len(strings.Split(word,\
    \ \"o\"))\n    if vowelsCount < 0 {\n        vowelsCount = 0\n    }\n    vowelsCount\
    \ -= len(strings.Split(word, \"u\"))\n    if vowelsCount < 0 {\n        vowelsCount\
    \ = 0\n    }\n    vowelsCount -= len(strings.Split(word, \"a\"))\n    if vowelsCount\
    \ < 0 {\n        vowelsCount = 0\n    }\n    vowelsCount -= len(strings.Split(word,\
    \ \"e\"))\n    if vowelsCount < 0 {\n        vowelsCount = 0\n    }\n    vowelsCount\
    \ -= len(strings.Split(word, \"i\"))\n    if vowelsCount < 0 {\n        vowelsCount\
    \ = 0\n    }\n    vowelsCount -= len(strings.Split(word, \"o\"))\n    if vowelsCount\
    \ < 0 {\n        vowelsCount = 0\n    }\n    vowelsCount -= len(strings.Split(word,\
    \ \"u\"))\n    if vowelsCount < 0 {\n        vowelsCount = 0\n    }\n    vowelsCount\
    \ -= len(strings.Split(word, \"a\"))\n    if vowelsCount < 0 {\n        vowelsCount\
    \ = 0\n    }\n    vowelsCount -= len(strings.Split(word, \"e\"))", "    vowels\
    \ := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsLen := len(vowels)\n\
    \    vowelsLen -= 1\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /=\
    \ 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen ", "    vowels := []string{\"a\", \"\
    e\", \"i\", \"o\", \"u\"}\n    vowelsCount := 0\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)/2\n    vowelsCount += len(vowels)/3\n    vowelsCount\
    \ += len(vowels)/4\n    vowelsCount += len(vowels)/5\n    vowelsCount += len(vowels)/6\n\
    \    vowelsCount += len(vowels)/7\n    vowelsCount += len(vowels)/8\n    vowelsCount\
    \ += len(vowels)/9\n    vowelsCount += len(vowels)/10\n    vowelsCount += len(vowels)/11\n\
    \    vowelsCount += len(vowels)/12\n    vowelsCount += len(vowels)/13\n    vowelsCount\
    \ += len(vowels)/14\n    vowelsCount += len(vowels)/15\n    vowelsCount += len(vowels)/16\n\
    \    vowelsCount += len(vowels)/17\n    vowelsCount += len(vowels)/18\n    vowelsCount\
    \ += len(vowels)/19\n    vowelsCount += len(vowels)/20\n    vowelsCount += len(vowels)/21\n\
    \    vowelsCount += len(vowels)/22\n    vowelsCount += len(vowels)/23\n    vowelsCount\
    \ += len(vowels)/24\n    vowelsCount += len(vowels)/25\n    vowelsCount += len(vowels)/26\n\
    \    vowelsCount += len(vowels)/27\n    vowelsCount += len(vowels)/28\n    vowelsCount\
    \ += len(vowels)/29\n    vowelsCount += len(vowels)/30\n    vowelsCount += len(vowels)/31\n\
    \    vowelsCount += len(vowels)/32\n    vowelsCount += len(vowels)/33\n    vowelsCount\
    \ += len(vowels)/34\n    vowelsCount += len(vowels)/35\n    vowelsCount += len(vowels)/36\n\
    \    vowelsCount += len(vowels)/37\n    vowelsCount += len(vowels)/38\n    vowelsCount\
    \ += len(vowels)/39\n    vowelsCount += len(vowels)/40\n    vowelsCount += len(vowels)/41\n\
    \    vowelsCount += len(vowels)/42\n    vowelsCount += len(vowels)/43\n    vowelsCount\
    \ += len(vowels)/44\n    vowelsCount += len(vowels)/45\n    vowelsCount += len(vowels)/46\n\
    \    vowelsCount += len(vowels)/47\n    vowelsCount += len(vowels)/48\n    vowelsCount\
    \ += len(vowels)/49\n    vowels", "    vowels := []string{\"a\", \"e\", \"i\"\
    , \"o\", \"u\"}\n    vowelsLen := len(vowels)\n    vowelsLen -= 1\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    \n    vowelsLen -= 1\n    vowelsLen /= 2\n   \
    \ vowelsLen += 2\n    \n    vowelsLen -= 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    \n    vowelsLen -= 1\n    vowelsLen /= 2\n    vowelsLen += 2\n   \
    \ \n    vowelsLen -= 1\n    vowelsLen /= 2\n    vowelsLen += 2\n    \n    vowelsLen\
    \ -= 1\n    vowelsLen /= 2\n    vowelsLen += 2\n    \n    vowelsLen -= 1\n   \
    \ vowelsLen /= 2\n    vowelsLen += 2\n    \n    vowelsLen -= 1\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    \n    vowelsLen -= 1\n    vowelsLen /= 2\n   \
    \ vowelsLen += 2\n    \n    vowelsLen -= 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    \n    vowelsLen -= 1\n    vowelsLen /= 2\n    vowelsLen += 2\n   \
    \ \n    vowelsLen -= 1\n    vowelsLen /= 2\n    vowelsLen += 2\n    \n    vowelsLen\
    \ -= 1\n    vowelsLen /= 2\n    vowelsLen += 2\n    \n    vowelsLen -= 1\n   \
    \ vowelsLen /= 2\n    vowelsLen += 2\n    \n    vowelsLen -= 1\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    \n    vowelsLen -= 1\n    vowelsLen /= 2\n   \
    \ vowelsLen += 2\n    \n    vowelsLen -= 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    \n    vowelsLen -= 1\n    vowelsLen /= 2\n    vowelsLen += 2\n   \
    \ \n    vowelsLen -= 1\n    vowelsLen /= 2\n    vowelsLen += 2\n    \n    vowelsLen\
    \ -= 1\n    vowelsLen /= 2\n    vowelsLen += 2\n    \n    vowelsLen -= 1\n   \
    \ vowelsLen /= 2\n    vowelsLen += 2\n    \n    vowelsLen -= 1\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    \n    vowel", "    vowels := []string{\"a\", \"\
    e\", \"i\", \"o\", \"u\"}\n    vowelsCount := 0\n    vowelsCount += len(vowels)\n\
    \    for i := len(word) - 1; i >= 0; i-- {\n        if word[i] == 'a' || word[i]\
    \ == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u' {\n           \
    \ vowelsCount++\n        }\n    }\n    if vowelsCount <= 0 {\n        return \"\
    \"\n    }\n    vowelsCount -= len(vowels)\n    vowelsCount /= 2\n    vowelsCount\
    \ %= len(vowels)\n    if vowelsCount < 0 {\n        vowelsCount = 0\n    }\n \
    \   return vowels[vowelsCount]\n}\n", "    vowels := []string{\"a\", \"e\", \"\
    i\", \"o\", \"u\"}\n    vowelsLen := len(vowels)\n    vowelsLen -= 1\n    vowelsLen\
    \ += 2\n    vowelsLen -= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen\
    \ += 2\n    vowelsLen -= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen\
    \ += 2\n    vowelsLen -= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen\
    \ += 2\n    vowelsLen -= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen\
    \ += 2\n    vowelsLen -= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen\
    \ += 2\n    vowelsLen -= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen\
    \ += 2\n    vowelsLen -= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen\
    \ += 2\n    vowelsLen -= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen\
    \ += 2\n    vowelsLen -= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen\
    \ += 2\n    vowelsLen -= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen\
    \ += 2\n    vowelsLen -= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen\
    \ += 2\n    vowelsLen -= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen\
    \ += 2\n    vowelsLen -= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen\
    \ += 2\n    vowelsLen -= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen\
    \ += 2\n    vowelsLen -= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen\
    \ += 2\n    vowelsLen -= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen\
    \ += 2\n    vowelsLen -= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen ",
  "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount := 0\n\
    \    vowelsCount += len(vowels)\n    for _, v := range vowels {\n        if word[len(word)-1:]\
    \ == v {\n            return v\n        }\n    }\n    return \"\"\n}\n", "   \
    \ vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsLen := len(vowels)\n\
    \    vowelsLen -= 1\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /=\
    \ 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen ", "    vowels := []string{\"a\", \"\
    e\", \"i\", \"o\", \"u\"}\n    vowelsLen := len(vowels)\n    vowelsLen -= 1\n\
    \    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen +=\
    \ 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1", "    vowel := []string{\"a\"\
    , \"e\", \"i\", \"o\", \"u\"}\n    vowel_count := 0\n    vowel_count := 0\n  \
    \  for i := len(word) - 1; i >= 0; i-- {\n        if word[i] == \"a\" || word[i]\
    \ == \"e\" || word[i] == \"i\" || word[i] == \"o\" || word[i] == \"u\" {\n   \
    \         vowel_count++\n        }\n    }\n    if vowel_count > 0 {\n        for\
    \ i := len(word) - 1; i >= 0; i-- {\n            if word[i] == \"a\" || word[i]\
    \ == \"e\" || word[i] == \"i\" || word[i] == \"o\" || word[i] == \"u\" {\n   \
    \             return word[i]\n            }\n        }\n    }\n    return \"\"\
    \n}\n", "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount\
    \ := 0\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)/2\n   \
    \ vowelsCount += len(vowels)/3\n    vowelsCount += len(vowels)/4\n    vowelsCount\
    \ += len(vowels)/5\n    vowelsCount += len(vowels)/6\n    vowelsCount += len(vowels)/7\n\
    \    vowelsCount += len(vowels)/8\n    vowelsCount += len(vowels)/9\n    vowelsCount\
    \ += len(vowels)/10\n    vowelsCount += len(vowels)/11\n    vowelsCount += len(vowels)/12\n\
    \    vowelsCount += len(vowels)/13\n    vowelsCount += len(vowels)/14\n    vowelsCount\
    \ += len(vowels)/15\n    vowelsCount += len(vowels)/16\n    vowelsCount += len(vowels)/17\n\
    \    vowelsCount += len(vowels)/18\n    vowelsCount += len(vowels)/19\n    vowelsCount\
    \ += len(vowels)/20\n    vowelsCount += len(vowels)/21\n    vowelsCount += len(vowels)/22\n\
    \    vowelsCount += len(vowels)/23\n    vowelsCount += len(vowels)/24\n    vowelsCount\
    \ += len(vowels)/25\n    vowelsCount += len(vowels)/26\n    vowelsCount += len(vowels)/27\n\
    \    vowelsCount += len(vowels)/28\n    vowelsCount += len(vowels)/29\n    vowelsCount\
    \ += len(vowels)/30\n    vowelsCount += len(vowels)/31\n    vowelsCount += len(vowels)/32\n\
    \    vowelsCount += len(vowels)/33\n    vowelsCount += len(vowels)/34\n    vowelsCount\
    \ += len(vowels)/35\n    vowelsCount += len(vowels)/36\n    vowelsCount += len(vowels)/37\n\
    \    vowelsCount += len(vowels)/38\n    vowelsCount += len(vowels)/39\n    vowelsCount\
    \ += len(vowels)/40\n    vowelsCount += len(vowels)/41\n    vowelsCount += len(vowels)/42\n\
    \    vowelsCount += len(vowels)/43\n    vowelsCount += len(vowels)/44\n    vowelsCount\
    \ += len(vowels)/45\n    vowelsCount += len(vowels)/46\n    vowelsCount += len(vowels)/47\n\
    \    vowelsCount += len(vowels)/48\n    vowelsCount += len(vowels)/49\n    vowels",
  "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsLen := len(vowels)\n\
    \    vowelsLen -= 1\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /=\
    \ 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen ", "    vowels := []string{\"a\", \"\
    e\", \"i\", \"o\", \"u\"}\n    vowelsCount := 0\n    for _, v := range vowels\
    \ {\n        if strings.Contains(word, v) {\n            vowelsCount++\n     \
    \   }\n    }\n    if vowelsCount == 0 {\n        return \"\"\n    }\n    vowelsCount\
    \ -= 1\n    vowelsCount /= 2\n    vowelsCount %= len(vowels)\n    vowelsCount\
    \ += 2\n    if vowelsCount == 0 {\n        return \"\"\n    }\n    vowelsCount\
    \ -= 1\n    vowelsCount /= 2\n    vowelsCount %= len(vowels)\n    vowelsCount\
    \ += 2\n    if vowelsCount == 0 {\n        return \"\"\n    }\n    vowelsCount\
    \ -= 1\n    vowelsCount /= 2\n    vowelsCount %= len(vowels)\n    vowelsCount\
    \ += 2\n    if vowelsCount == 0 {\n        return \"\"\n    }\n    vowelsCount\
    \ -= 1\n    vowelsCount /= 2\n    vowelsCount %= len(vowels)\n    vowelsCount\
    \ += 2\n    if vowelsCount == 0 {\n        return \"\"\n    }\n    vowelsCount\
    \ -= 1\n    vowelsCount /= 2\n    vowelsCount %= len(vowels)\n    vowelsCount\
    \ += 2\n    if vowelsCount == 0 {\n        return \"\"\n    }\n    vowelsCount\
    \ -= 1\n    vowelsCount /= 2\n    vowelsCount %= len(vowels)\n    vowelsCount\
    \ += 2\n    if vowelsCount == 0 {\n        return \"\"\n    }\n    vowelsCount\
    \ -= 1\n    vowelsCount /= 2\n    vowelsCount %= len(vowels)\n    vowelsCount\
    \ += 2\n    if vowelsCount == 0 {\n        return \"\"\n    }\n    vowelsCount\
    \ -= 1\n    vowelsCount /= 2\n    vowelsCount %= len(vowels)\n    vowelsCount\
    \ += 2\n    if vowelsCount == 0 {\n        return \"\"\n    }\n    vowelsCount\
    \ -= 1\n    vowelsCount /= 2\n    vowelsCount %= len(vowels)\n    vowelsCount\
    \ += 2\n    if vowelsCount == 0 {\n        return \"\"\n    }\n    vowelsCount\
    \ -= 1\n    vowelsCount /= 2\n    vowelsCount %= len(vowels)\n    vowelsCount\
    \ += 2\n    if vowelsCount == 0 {\n        return \"\"\n    }\n    vowelsCount\
    \ -= 1\n    vowelsCount /= 2\n    vowelsCount %= len(vowels)\n    vowelsCount\
    \ += 2\n    if vowelsCount == 0 {\n        return \"\"\n    }\n", "    vowels\
    \ := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsLen := len(vowels)\n\
    \    vowelsLen -= 1\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /=\
    \ 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen ", "    vowels := []string{\"a\", \"\
    e\", \"i\", \"o\", \"u\"}\n    vowelsCount := 0\n    for _, v := range vowels\
    \ {\n        if strings.Contains(word, v) {\n            vowelsCount++\n     \
    \   }\n    }\n    if vowelsCount == 0 {\n        return \"\"\n    }\n    vowelsCount\
    \ -= 1\n    vowelsCount /= 2\n    vowelsCount %= len(vowels)\n    vowelsCount\
    \ += 2\n    vowelsCount %= len(vowels)\n    vowelsCount += 2\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount += 2\n    vowelsCount %= len(vowels)\n    vowelsCount\
    \ += 2\n    vowelsCount %= len(vowels)\n    vowelsCount += 2\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount += 2\n    vowelsCount %= len(vowels)\n    vowelsCount\
    \ += 2\n    vowelsCount %= len(vowels)\n    vowelsCount += 2\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount += 2\n    vowelsCount %= len(vowels)\n    vowelsCount\
    \ += 2\n    vowelsCount %= len(vowels)\n    vowelsCount += 2\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount += 2\n    vowelsCount %= len(vowels)\n    vowelsCount\
    \ += 2\n    vowelsCount %= len(vowels)\n    vowelsCount += 2\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount += 2\n    vowelsCount %= len(vowels)\n    vowelsCount\
    \ += 2\n    vowelsCount %= len(vowels)\n    vowelsCount += 2\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount += 2\n    vowelsCount %= len(vowels)\n    vowelsCount\
    \ += 2\n    vowelsCount %= len(vowels)\n    vowelsCount += 2\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount += 2\n    vowelsCount %= len(vowels)\n    vowelsCount\
    \ += 2\n    vowelsCount %= len(vowels)\n    vowelsCount += 2\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount += 2\n    vowelsCount %= len(vowels)\n    vowelsCount\
    \ += 2\n    vowelsCount %= len(vowels)\n    vowelsCount += 2\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount += 2\n    vowelsCount %= len(", "    vowel :=\
    \ \"aeiouAEIOU\"\n    vowelLen := len(vowel)\n    vowelPos := 0\n    vowelPos\
    \ := strings.LastIndex(word, vowel)\n    if vowelPos == -1 {\n        return \"\
    \"\n    }\n    vowelPos += len(vowel)\n    vowelPos := strings.LastIndex(word[vowelPos:],\
    \ vowel)\n    if vowelPos == -1 {\n        return \"\"\n    }\n    vowelPos +=\
    \ len(vowel)\n    vowelPos := strings.LastIndex(word[vowelPos:], vowel)\n    if\
    \ vowelPos == -1 {\n        return \"\"\n    }\n    vowelPos += len(vowel)\n \
    \   vowelPos := strings.LastIndex(word[vowelPos:], vowel)\n    if vowelPos ==\
    \ -1 {\n        return \"\"\n    }\n    vowelPos += len(vowel)\n    vowelPos :=\
    \ strings.LastIndex(word[vowelPos:], vowel)\n    if vowelPos == -1 {\n       \
    \ return \"\"\n    }\n    vowelPos += len(vowel)\n    vowelPos := strings.LastIndex(word[vowelPos:],\
    \ vowel)\n    if vowelPos == -1 {\n        return \"\"\n    }\n    vowelPos +=\
    \ len(vowel)\n    vowelPos := strings.LastIndex(word[vowelPos:], vowel)\n    if\
    \ vowelPos == -1 {\n        return \"\"\n    }\n    vowelPos += len(vowel)\n \
    \   vowelPos := strings.LastIndex(word[vowelPos:], vowel)\n    if vowelPos ==\
    \ -1 {\n        return \"\"\n    }\n    vowelPos += len(vowel)\n    vowelPos :=\
    \ strings.LastIndex(word[vowelPos:], vowel)\n    if vowelPos == -1 {\n       \
    \ return \"\"\n    }\n    vowelPos += len(vowel)\n    vowelPos := strings.LastIndex(word[vowelPos:],\
    \ vowel)\n    if vowelPos == -1 {\n        return \"\"\n    }\n    vowelPos +=\
    \ len(vowel)\n    vowelPos := strings.LastIndex(word[vowelPos:], vowel)\n    if\
    \ vowelPos == -1 {\n        return \"\"\n    }\n    vowelPos += len(vowel)\n \
    \   vowelPos := strings.LastIndex(word[vowelPos:], vowel)\n    if vowelPos ==\
    \ -1 {\n        return \"\"\n    }\n    vowelPos += len(vowel)\n    vowelPos :=\
    \ strings.LastIndex(word[vowelPos:], vowel)\n    if vowelPos == -1 {\n       \
    \ return \"\"\n    }\n    vowelPos += len(vowel)\n    vowelPos := strings.LastIndex(word[vowelPos:],\
    \ vowel)\n    if vowelPos == -1 {", "    vowels := []string{\"a\", \"e\", \"i\"\
    , \"o\", \"u\"}\n    vowelsLen := len(vowels)\n    vowelsLen -= 1\n    vowelsLen\
    \ += 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen ",
  "    vowel := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowel_count := 0\n\
    \    for _, v := range vowel {\n        if strings.Contains(word, v) {\n     \
    \       vowel_count++\n        }\n    }\n    if vowel_count < 2 {\n        return\
    \ \"\"\n    }\n    vowel_count -= 2\n    vowel_count %= len(vowel)\n    vowel_count\
    \ += 2\n    vowel_count %= len(vowel)\n    vowel_count += 2\n    vowel_count %=\
    \ len(vowel)\n    vowel_count += 2\n    vowel_count %= len(vowel)\n    vowel_count\
    \ += 2\n    vowel_count %= len(vowel)\n    vowel_count += 2\n    vowel_count %=\
    \ len(vowel)\n    vowel_count += 2\n    vowel_count %= len(vowel)\n    vowel_count\
    \ += 2\n    vowel_count %= len(vowel)\n    vowel_count += 2\n    vowel_count %=\
    \ len(vowel)\n    vowel_count += 2\n    vowel_count %= len(vowel)\n    vowel_count\
    \ += 2\n    vowel_count %= len(vowel)\n    vowel_count += 2\n    vowel_count %=\
    \ len(vowel)\n    vowel_count += 2\n    vowel_count %= len(vowel)\n    vowel_count\
    \ += 2\n    vowel_count %= len(vowel)\n    vowel_count += 2\n    vowel_count %=\
    \ len(vowel)\n    vowel_count += 2\n    vowel_count %= len(vowel)\n    vowel_count\
    \ += 2\n    vowel_count %= len(vowel)\n    vowel_count += 2\n    vowel_count %=\
    \ len(vowel)\n    vowel_count += 2\n    vowel_count %= len(vowel)\n    vowel_count\
    \ += 2\n    vowel_count %= len(vowel)\n    vowel_count += 2\n    vowel_count %=\
    \ len(vowel)\n    vowel_count += 2\n    vowel_count %= len(vowel)\n    vowel_count\
    \ += 2\n    vowel_count %= len(vowel)\n    vowel_count += 2\n    vowel_count %=\
    \ len(vowel)\n    vowel_count += 2\n    vowel_count %= len(vowel)\n    vowel_count\
    \ += 2\n    vowel_count %= len(vowel)\n    vowel_count += 2\n    vowel_count %=\
    \ len(vowel)\n    vowel_count += 2\n    vowel_count %= len(vowel)\n    vowel_count ",
  "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount := 0\n\
    \    vowelsCount += len(vowels)\n    for i := len(word) - 1; i >= 0; i-- {\n \
    \       if word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o'\
    \ || word[i] == 'u' {\n            vowelsCount++\n        }\n        if vowelsCount\
    \ > len(vowels) {\n            return \"\"\n        }\n    }\n    return word[len(word)-1]\n\
    }\n", "    // write your code here\n    vowels := []string{\"a\", \"e\", \"i\"\
    , \"o\", \"u\"}\n    vowelsLen := len(vowels)\n    vowelsLen -= 1\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2", "    vowels\
    \ := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount := 0\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)/2\n    vowelsCount += len(vowels)/3\n\
    \    vowelsCount += len(vowels)/4\n    vowelsCount += len(vowels)/5\n    vowelsCount\
    \ += len(vowels)/6\n    vowelsCount += len(vowels)/7\n    vowelsCount += len(vowels)/8\n\
    \    vowelsCount += len(vowels)/9\n    vowelsCount += len(vowels)/10\n    vowelsCount\
    \ += len(vowels)/11\n    vowelsCount += len(vowels)/12\n    vowelsCount += len(vowels)/13\n\
    \    vowelsCount += len(vowels)/14\n    vowelsCount += len(vowels)/15\n    vowelsCount\
    \ += len(vowels)/16\n    vowelsCount += len(vowels)/17\n    vowelsCount += len(vowels)/18\n\
    \    vowelsCount += len(vowels)/19\n    vowelsCount += len(vowels)/20\n    vowelsCount\
    \ += len(vowels)/21\n    vowelsCount += len(vowels)/22\n    vowelsCount += len(vowels)/23\n\
    \    vowelsCount += len(vowels)/24\n    vowelsCount += len(vowels)/25\n    vowelsCount\
    \ += len(vowels)/26\n    vowelsCount += len(vowels)/27\n    vowelsCount += len(vowels)/28\n\
    \    vowelsCount += len(vowels)/29\n    vowelsCount += len(vowels)/30\n    vowelsCount\
    \ += len(vowels)/31\n    vowelsCount += len(vowels)/32\n    vowelsCount += len(vowels)/33\n\
    \    vowelsCount += len(vowels)/34\n    vowelsCount += len(vowels)/35\n    vowelsCount\
    \ += len(vowels)/36\n    vowelsCount += len(vowels)/37\n    vowelsCount += len(vowels)/38\n\
    \    vowelsCount += len(vowels)/39\n    vowelsCount += len(vowels)/40\n    vowelsCount\
    \ += len(vowels)/41\n    vowelsCount += len(vowels)/42\n    vowelsCount += len(vowels)/43\n\
    \    vowelsCount += len(vowels)/44\n    vowelsCount += len(vowels)/45\n    vowelsCount\
    \ += len(vowels)/46\n    vowelsCount += len(vowels)/47\n    vowelsCount += len(vowels)/48\n\
    \    vowelsCount += len(vowels)/49\n    vowels", "    vowels := []string{\"a\"\
    , \"e\", \"i\", \"o\", \"u\"}\n    vowelsLen := len(vowels)\n    vowelsLen -=\
    \ 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 1\n    vowelsLen /= 2\n    vowelsLen += 1", "    // Your code here\n    vowel\
    \ := \"\"\n    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsLen\
    \ := len(vowels)\n    vowelsLen -= 1\n    for i := len(word) - 1; i >= 0; i--\
    \ {\n        if word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i]\
    \ == 'o' || word[i] == 'u' {\n            if vowel == \"\" {\n               \
    \ vowel = word[i]\n            } else {\n                if vowels[vowelsLen-len(vowel)-1]\
    \ <= word[i] {\n                    vowel = word[i]\n                }\n     \
    \       }\n        }\n    }\n    return vowel\n}\n", "    // Your code here\n\
    \    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsLen := len(vowels)\n\
    \    vowelsLen -= 1\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /=\
    \ 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2", "    // Your code here\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsLen := len(vowels)\n    vowelsLen\
    \ -= 1\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen -= 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ -= 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen -= 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ -= 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen -= 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ -= 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen -= 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ -= 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen -= 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ -= 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2", "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsLen\
    \ := len(vowels)\n    vowelsLen -= 1\n    vowelsLen /= 2\n    vowelsLen += 2\n\
    \    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen +=\
    \ 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen ", "    vowels :=\
    \ []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount := 0\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)/2\n    vowelsCount += len(vowels)/3\n\
    \    vowelsCount += len(vowels)/4\n    vowelsCount += len(vowels)/5\n    vowelsCount\
    \ += len(vowels)/6\n    vowelsCount += len(vowels)/7\n    vowelsCount += len(vowels)/8\n\
    \    vowelsCount += len(vowels)/9\n    vowelsCount += len(vowels)/10\n    vowelsCount\
    \ += len(vowels)/11\n    vowelsCount += len(vowels)/12\n    vowelsCount += len(vowels)/13\n\
    \    vowelsCount += len(vowels)/14\n    vowelsCount += len(vowels)/15\n    vowelsCount\
    \ += len(vowels)/16\n    vowelsCount += len(vowels)/17\n    vowelsCount += len(vowels)/18\n\
    \    vowelsCount += len(vowels)/19\n    vowelsCount += len(vowels)/20\n    vowelsCount\
    \ += len(vowels)/21\n    vowelsCount += len(vowels)/22\n    vowelsCount += len(vowels)/23\n\
    \    vowelsCount += len(vowels)/24\n    vowelsCount += len(vowels)/25\n    vowelsCount\
    \ += len(vowels)/26\n    vowelsCount += len(vowels)/27\n    vowelsCount += len(vowels)/28\n\
    \    vowelsCount += len(vowels)/29\n    vowelsCount += len(vowels)/30\n    vowelsCount\
    \ += len(vowels)/31\n    vowelsCount += len(vowels)/32\n    vowelsCount += len(vowels)/33\n\
    \    vowelsCount += len(vowels)/34\n    vowelsCount += len(vowels)/35\n    vowelsCount\
    \ += len(vowels)/36\n    vowelsCount += len(vowels)/37\n    vowelsCount += len(vowels)/38\n\
    \    vowelsCount += len(vowels)/39\n    vowelsCount += len(vowels)/40\n    vowelsCount\
    \ += len(vowels)/41\n    vowelsCount += len(vowels)/42\n    vowelsCount += len(vowels)/43\n\
    \    vowelsCount += len(vowels)/44\n    vowelsCount += len(vowels)/45\n    vowelsCount\
    \ += len(vowels)/46\n    vowelsCount += len(vowels)/47\n    vowelsCount += len(vowels)/48\n\
    \    vowelsCount += len(vowels)/49\n    vowels", "    vowels := []string{\"a\"\
    , \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount := 0\n    for _, v := range vowels\
    \ {\n        if word == v {\n            vowelsCount++\n        }\n    }\n   \
    \ if vowelsCount > 0 {\n        return word\n    }\n    vowelsCount = 0\n    for\
    \ _, v := range vowels {\n        if word[len(word)-1] == v {\n            vowelsCount++\n\
    \        }\n    }\n    if vowelsCount > 0 {\n        return word\n    }\n    return\
    \ \"\"\n}\n", "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n   \
    \ vowelsCount := 0\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)/2\n\
    \    vowelsCount += len(vowels)/3\n    vowelsCount += len(vowels)/4\n    vowelsCount\
    \ += len(vowels)/5\n    vowelsCount += len(vowels)/6\n    vowelsCount += len(vowels)/7\n\
    \    vowelsCount += len(vowels)/8\n    vowelsCount += len(vowels)/9\n    vowelsCount\
    \ += len(vowels)/10\n    vowelsCount += len(vowels)/11\n    vowelsCount += len(vowels)/12\n\
    \    vowelsCount += len(vowels)/13\n    vowelsCount += len(vowels)/14\n    vowelsCount\
    \ += len(vowels)/15\n    vowelsCount += len(vowels)/16\n    vowelsCount += len(vowels)/17\n\
    \    vowelsCount += len(vowels)/18\n    vowelsCount += len(vowels)/19\n    vowelsCount\
    \ += len(vowels)/20\n    vowelsCount += len(vowels)/21\n    vowelsCount += len(vowels)/22\n\
    \    vowelsCount += len(vowels)/23\n    vowelsCount += len(vowels)/24\n    vowelsCount\
    \ += len(vowels)/25\n    vowelsCount += len(vowels)/26\n    vowelsCount += len(vowels)/27\n\
    \    vowelsCount += len(vowels)/28\n    vowelsCount += len(vowels)/29\n    vowelsCount\
    \ += len(vowels)/30\n    vowelsCount += len(vowels)/31\n    vowelsCount += len(vowels)/32\n\
    \    vowelsCount += len(vowels)/33\n    vowelsCount += len(vowels)/34\n    vowelsCount\
    \ += len(vowels)/35\n    vowelsCount += len(vowels)/36\n    vowelsCount += len(vowels)/37\n\
    \    vowelsCount += len(vowels)/38\n    vowelsCount += len(vowels)/39\n    vowelsCount\
    \ += len(vowels)/40\n    vowelsCount += len(vowels)/41\n    vowelsCount += len(vowels)/42\n\
    \    vowelsCount += len(vowels)/43\n    vowelsCount += len(vowels)/44\n    vowelsCount\
    \ += len(vowels)/45\n    vowelsCount += len(vowels)/46\n    vowelsCount += len(vowels)/47\n\
    \    vowelsCount += len(vowels)/48\n    vowelsCount += len(vowels)/49\n    vowels",
  "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount := 0\n\
    \    for _, v := range vowels {\n        if strings.Contains(word, v) {\n    \
    \        vowelsCount++\n        }\n    }\n    if vowelsCount == 0 {\n        return\
    \ \"\"\n    }\n    vowelsCount -= 1\n    vowelsCount /= 2\n    vowelsCount %=\
    \ len(vowels)\n    vowelsCount += 1\n    vowelsCount /= len(vowels)\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount += 1\n    vowelsCount /= len(vowels)\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount += 1\n    vowelsCount /= len(vowels)\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount += 1\n    vowelsCount /= len(vowels)\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount += 1\n    vowelsCount /= len(vowels)\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount += 1\n    vowelsCount /= len(vowels)\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount += 1\n    vowelsCount /= len(vowels)\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount += 1\n    vowelsCount /= len(vowels)\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount += 1\n    vowelsCount /= len(vowels)\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount += 1\n    vowelsCount /= len(vowels)\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount += 1\n    vowelsCount /= len(vowels)\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount += 1\n    vowelsCount /= len(vowels)\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount += 1\n    vowelsCount /= len(vowels)\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount += 1\n    vowelsCount /= len(vowels)\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount += 1\n    vowelsCount /= len(vowels)\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount += 1\n    vowelsCount /= len(vowels)\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount += 1\n    vowelsCount /= len(vowels)\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount += 1\n    vowelsCount /= len(vowels)\n    vowelsCount\
    \ %= len(", "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsLen\
    \ := len(vowels)\n    vowelsLen -= 1\n    vowelsLen /= 2\n    vowelsLen += 2\n\
    \    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen +=\
    \ 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen ", "    // Your\
    \ code here\n    vowel := []rune{'a', 'e', 'i', 'o', 'u'}\n    vowel_count :=\
    \ 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count\
    \ := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n   \
    \ vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count\
    \ := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n   \
    \ vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count\
    \ := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n   \
    \ vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count\
    \ := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n   \
    \ vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count\
    \ := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n   \
    \ vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count\
    \ := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n   \
    \ vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count\
    \ := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n   \
    \ vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count\
    \ := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n   \
    \ vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count\
    \ := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n   \
    \ vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count\
    \ := 0\n    vowel_count := 0\n    vowel_count := 0\n", "    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsLen := len(vowels)\n    vowelsLen\
    \ -= 1\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen ", "    vowel := []rune{'a', 'e', 'i', 'o', 'u'}\n    vowel_count\
    \ := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n   \
    \ vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count\
    \ := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n   \
    \ vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count\
    \ := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n   \
    \ vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count\
    \ := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n   \
    \ vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count\
    \ := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n   \
    \ vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count\
    \ := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n   \
    \ vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count\
    \ := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n   \
    \ vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count\
    \ := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n   \
    \ vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count\
    \ := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n   \
    \ vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count\
    \ := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n   \
    \ vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count\
    \ := ", "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount\
    \ := 0\n    vowelsCount += len(vowels)\n    for i := len(word) - 2; i >= 0; i--\
    \ {\n        if word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i]\
    \ == 'o' || word[i] == 'u' {\n            vowelsCount++\n        }\n    }\n  \
    \  if vowelsCount > 0 {\n        return \"\"\n    }\n    vowelsCount = 0\n   \
    \ for i := len(word) - 2; i >= 0; i-- {\n        if word[i] == 'a' || word[i]\
    \ == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u' {\n           \
    \ vowelsCount++\n        }\n    }\n    if vowelsCount < 2 {\n        return \"\
    \"\n    }\n    vowelsCount -= 2\n    for i := len(word) - 2; i >= 0; i-- {\n \
    \       if word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o'\
    \ || word[i] == 'u' {\n            vowelsCount++\n        }\n    }\n    if vowelsCount\
    \ < 2 {\n        return \"\"\n    }\n    vowelsCount -= 2\n    for i := len(word)\
    \ - 2; i >= 0; i-- {\n        if word[i] == 'a' || word[i] == 'e' || word[i] ==\
    \ 'i' || word[i] == 'o' || word[i] == 'u' {\n            vowelsCount++\n     \
    \   }\n    }\n    if vowelsCount < 2 {\n        return \"\"\n    }\n    vowelsCount\
    \ -= 2\n    for i := len(word) - 2; i >= 0; i-- {\n        if word[i] == 'a' ||\
    \ word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u' {\n   \
    \         vowelsCount++\n        }\n    }\n    if vowelsCount < 2 {\n        return\
    \ \"\"\n    }\n    vowelsCount -= 2\n    for i := len(word) - 2; i >= 0; i-- {\n\
    \        if word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o'\
    \ || word[i] == 'u' {\n            vowelsCount++\n        }\n    }\n    if vowelsCount\
    \ < 2 {\n        return \"\"\n    }\n    vowelsCount -= 2\n    for i := len(word)\
    \ - 2; i >= 0; i-- {\n        if word[i] == 'a' || word[i] == 'e' || word[i] ==\
    \ 'i' || word[i] == 'o' || word[i] == 'u' {\n            vowelsCount++\n     \
    \   }\n    }\n    if vowels", "    vowels := []string{\"a\", \"e\", \"i\", \"\
    o\", \"u\"}\n    vowelsLen := len(vowels)\n    vowelsLen -= 1\n    vowelsLen /=\
    \ 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen ",
  "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount := 0\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)/2\n    vowelsCount\
    \ += len(vowels)/3\n    vowelsCount += len(vowels)/4\n    vowelsCount += len(vowels)/5\n\
    \    vowelsCount += len(vowels)/6\n    vowelsCount += len(vowels)/7\n    vowelsCount\
    \ += len(vowels)/8\n    vowelsCount += len(vowels)/9\n    vowelsCount += len(vowels)/10\n\
    \    vowelsCount += len(vowels)/11\n    vowelsCount += len(vowels)/12\n    vowelsCount\
    \ += len(vowels)/13\n    vowelsCount += len(vowels)/14\n    vowelsCount += len(vowels)/15\n\
    \    vowelsCount += len(vowels)/16\n    vowelsCount += len(vowels)/17\n    vowelsCount\
    \ += len(vowels)/18\n    vowelsCount += len(vowels)/19\n    vowelsCount += len(vowels)/20\n\
    \    vowelsCount += len(vowels)/21\n    vowelsCount += len(vowels)/22\n    vowelsCount\
    \ += len(vowels)/23\n    vowelsCount += len(vowels)/24\n    vowelsCount += len(vowels)/25\n\
    \    vowelsCount += len(vowels)/26\n    vowelsCount += len(vowels)/27\n    vowelsCount\
    \ += len(vowels)/28\n    vowelsCount += len(vowels)/29\n    vowelsCount += len(vowels)/30\n\
    \    vowelsCount += len(vowels)/31\n    vowelsCount += len(vowels)/32\n    vowelsCount\
    \ += len(vowels)/33\n    vowelsCount += len(vowels)/34\n    vowelsCount += len(vowels)/35\n\
    \    vowelsCount += len(vowels)/36\n    vowelsCount += len(vowels)/37\n    vowelsCount\
    \ += len(vowels)/38\n    vowelsCount += len(vowels)/39\n    vowelsCount += len(vowels)/40\n\
    \    vowelsCount += len(vowels)/41\n    vowelsCount += len(vowels)/42\n    vowelsCount\
    \ += len(vowels)/43\n    vowelsCount += len(vowels)/44\n    vowelsCount += len(vowels)/45\n\
    \    vowelsCount += len(vowels)/46\n    vowelsCount += len(vowels)/47\n    vowelsCount\
    \ += len(vowels)/48\n    vowelsCount += len(vowels)/49\n    vowels", "    vowels\
    \ := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount := 0\n    vowelsCount\
    \ += len(vowels)\n    for i := len(word) - 1; i >= 0; i-- {\n        if word[i]\
    \ == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u'\
    \ {\n            vowelsCount++\n        }\n    }\n    if vowelsCount > 0 {\n \
    \       return \"\"\n    }\n    vowelsCount = 0\n    for i := len(word) - 1; i\
    \ >= 0; i-- {\n        if word[i] == 'a' || word[i] == 'e' || word[i] == 'i' ||\
    \ word[i] == 'o' || word[i] == 'u' {\n            vowelsCount++\n        }\n \
    \   }\n    if vowelsCount < 2 {\n        return \"\"\n    }\n    vowelsCount =\
    \ 0\n    for i := len(word) - 1; i >= 0; i-- {\n        if word[i] == 'a' || word[i]\
    \ == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u' {\n           \
    \ vowelsCount++\n        }\n    }\n    if vowelsCount < 2 {\n        return \"\
    \"\n    }\n    vowelsCount = 0\n    for i := len(word) - 1; i >= 0; i-- {\n  \
    \      if word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o'\
    \ || word[i] == 'u' {\n            vowelsCount++\n        }\n    }\n    if vowelsCount\
    \ < 2 {\n        return \"\"\n    }\n    vowelsCount = 0\n    for i := len(word)\
    \ - 1; i >= 0; i-- {\n        if word[i] == 'a' || word[i] == 'e' || word[i] ==\
    \ 'i' || word[i] == 'o' || word[i] == 'u' {\n            vowelsCount++\n     \
    \   }\n    }\n    if vowelsCount < 2 {\n        return \"\"\n    }\n    vowelsCount\
    \ = 0\n    for i := len(word) - 1; i >= 0; i-- {\n        if word[i] == 'a' ||\
    \ word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u' {\n   \
    \         vowelsCount++\n        }\n    }\n    if vowelsCount < 2 {\n        return\
    \ \"\"\n    }\n    vowelsCount = 0\n    for i := len(word) - 1; i >= 0; i-- {\n\
    \        if word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o'\
    \ || word[i] == 'u' {\n            vowelsCount++\n        }\n    }\n    if vowelsCount\
    \ < 2 {\n        return \"\"\n    }\n    vowels", "    vowel := []rune{'a', 'e',\
    \ 'i', 'o', 'u'}\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count\
    \ := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n   \
    \ vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count\
    \ := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n   \
    \ vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count\
    \ := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n   \
    \ vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count\
    \ := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n   \
    \ vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count\
    \ := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n   \
    \ vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count\
    \ := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n   \
    \ vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count\
    \ := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n   \
    \ vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count\
    \ := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n   \
    \ vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count\
    \ := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n   \
    \ vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count\
    \ := 0\n    vowel_count := 0\n    vowel_count := 0\n    vowel_count := 0\n   \
    \ vowel_count := 0\n    vowel_count := ", "    vowels := []string{\"a\", \"e\"\
    , \"i\", \"o\", \"u\"}\n    vowelsLen := len(vowels)\n    vowelsLen -= 1\n   \
    \ vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n\
    \    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /=\
    \ 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen ", "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"\
    u\"}\n    vowelsLen := len(vowels)\n    vowelsLen -= 1\n    vowelsLen /= 2\n \
    \   vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n\
    \    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /=\
    \ 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen ",
  "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount := 0\n\
    \    vowelsCount += len(vowels)\n    for _, v := range vowels {\n        if strings.Contains(word,\
    \ v) {\n            vowelsCount++\n        }\n    }\n    if vowelsCount <= 1 {\n\
    \        return \"\"\n    }\n    vowelsCount -= len(vowels)\n    for _, v := range\
    \ vowels {\n        if strings.Contains(word, v) {\n            vowelsCount--\n\
    \        }\n    }\n    if vowelsCount <= 0 {\n        return \"\"\n    }\n   \
    \ vowelsCount -= len(vowels)\n    for _, v := range vowels {\n        if strings.Contains(word,\
    \ v) {\n            vowelsCount++\n        }\n    }\n    if vowelsCount <= 0 {\n\
    \        return \"\"\n    }\n    vowelsCount -= len(vowels)\n    for _, v := range\
    \ vowels {\n        if strings.Contains(word, v) {\n            vowelsCount--\n\
    \        }\n    }\n    if vowelsCount <= 0 {\n        return \"\"\n    }\n   \
    \ vowelsCount -= len(vowels)\n    for _, v := range vowels {\n        if strings.Contains(word,\
    \ v) {\n            vowelsCount++\n        }\n    }\n    if vowelsCount <= 0 {\n\
    \        return \"\"\n    }\n    vowelsCount -= len(vowels)\n    for _, v := range\
    \ vowels {\n        if strings.Contains(word, v) {\n            vowelsCount--\n\
    \        }\n    }\n    if vowelsCount <= 0 {\n        return \"\"\n    }\n   \
    \ vowelsCount -= len(vowels)\n    for _, v := range vowels {\n        if strings.Contains(word,\
    \ v) {\n            vowelsCount++\n        }\n    }\n    if vowelsCount <= 0 {\n\
    \        return \"\"\n    }\n    vowelsCount -= len(vowels)\n    for _, v := range\
    \ vowels {\n        if strings.Contains(word, v) {\n            vowelsCount--\n\
    \        }\n    }\n    if vowelsCount <= 0 {\n        return \"\"\n    }\n   \
    \ vowelsCount -= len(vowels)\n    for _, v := range vowels {\n        if strings.Contains(word,\
    \ v) {\n            vowelsCount++\n        }\n    }\n    if vowelsCount <= 0 {\n\
    \        return \"\"\n    }\n    vowelsCount -= len(vowels)\n    for _, v := range\
    \ vowels {\n        if strings.Contains(word, v) {\n            vowelsCount--\n\
    \        }\n    }\n    if vowelsCount <= 0 {\n        return \"\"\n    }\n   \
    \ vowelsCount -= len(vowels)\n    for _, v := range vowels {\n        if strings.Contains(word,\
    \ v) {\n            vowelsCount++", "    vowels := []string{\"a\", \"e\", \"i\"\
    , \"o\", \"u\"}\n    vowelsLen := len(vowels)\n    vowelsLen -= 1\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    \n    i := len(word) - 1\n    \n    vowel := \"\
    \"\n    \n    for i := len(word) - 1; i >= 0; i-- {\n        if word[i] == 'a'\
    \ || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u' {\n\
    \            if i == 0 {\n                vowel = word[i]\n                break\n\
    \            }\n            if word[i-1] == 'a' || word[i-1] == 'e' || word[i-1]\
    \ == 'i' || word[i-1] == 'o' || word[i-1] == 'u' {\n                vowel = word[i]\n\
    \                break\n            }\n            if word[i-2] == 'a' || word[i-2]\
    \ == 'e' || word[i-2] == 'i' || word[i-2] == 'o' || word[i-2] == 'u' {\n     \
    \           vowel = word[i]\n                break\n            }\n          \
    \  if word[i-3] == 'a' || word[i-3] == 'e' || word[i-3] == 'i' || word[i-3] ==\
    \ 'o' || word[i-3] == 'u' {\n                vowel = word[i]\n               \
    \ break\n            }\n            if word[i-4] == 'a' || word[i-4] == 'e' ||\
    \ word[i-4] == 'i' || word[i-4] == 'o' || word[i-4] == 'u' {\n               \
    \ vowel = word[i]\n                break\n            }\n            if word[i-5]\
    \ == 'a' || word[i-5] == 'e' || word[i-5] == 'i' || word[i-5] == 'o' || word[i-5]\
    \ == 'u' {\n                vowel = word[i]\n                break\n         \
    \   }\n            if word[i-6] == 'a' || word[i-6] == 'e' || word[i-6] == 'i'\
    \ || word[i-6] == 'o' || word[i-6] == 'u' {\n                vowel = word[i]\n\
    \                break\n            }\n            if word[i-7] == 'a' || word[i-7]\
    \ == 'e' || word[i-7] == 'i' || word[i-7] == 'o' || word[i-7] == 'u' {\n     \
    \           vowel = word[i]\n                break\n            }\n          \
    \  if word[i-8] == 'a' || word[i-8] == 'e' || word[i-8] == 'i' || word[i-8] ==\
    \ 'o' || word[i-8] == 'u' {\n                vowel = word[i]\n               \
    \ break\n            }\n            if word[i-9] == 'a' || word[i-9] == 'e' ||\
    \ word[i-9] == 'i' || word[i-9] == 'o' || word[i-9] == 'u' {\n               \
    \ vowel = word[i]", "    vowel := []rune{'a', 'e', 'i', 'o', 'u'}\n    vowel_count\
    \ := 0\n    vowel_found := false\n    for _, v := range word {\n        if v ==\
    \ 'a' || v == 'e' || v == 'i' || v == 'o' || v == 'u' {\n            vowel_count++\n\
    \        } else {\n            if vowel_count == 0 {\n                vowel_found\
    \ = true\n            }\n            vowel_count = 0\n        }\n    }\n    if\
    \ vowel_count == 0 {\n        return \"\"\n    }\n    if vowel_found {\n     \
    \   for _, v := range word {\n            if v == 'a' || v == 'e' || v == 'i'\
    \ || v == 'o' || v == 'u' {\n                return v\n            }\n       \
    \ }\n    }\n    return \"\"\n}\n", "    vowels := []string{\"a\", \"e\", \"i\"\
    , \"o\", \"u\"}\n    vowelsLen := len(vowels)\n    vowelsLen -= 1\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen ",
  "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsLen := len(vowels)\n\
    \    vowelsLen -= 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen /=\
    \ 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen\
    \ /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen\
    \ /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen\
    \ /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen\
    \ /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen\
    \ /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen\
    \ /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen\
    \ /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen\
    \ /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen\
    \ /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen\
    \ /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen\
    \ /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen\
    \ /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen\
    \ /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen\
    \ /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen\
    \ /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen\
    \ /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen += 1\n    vowelsLen\
    \ /= 2\n    vowelsLen += 1\n    vowelsLen /= 2\n    vowelsLen += 1", "    vowels\
    \ := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsLen := len(vowels)\n\
    \    vowelsLen -= 1\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /=\
    \ 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen ", "    vowels := []string{\"a\", \"\
    e\", \"i\", \"o\", \"u\"}\n    vowelsLen := len(vowels)\n    vowelsLen -= 1\n\
    \    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen /=\
    \ 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen -= 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ -= 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen -= 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ -= 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen -= 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ -= 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen -= 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ -= 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen -= 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ -= 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen ", "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"\
    u\"}\n    vowelsLen := len(vowels)\n    vowelsLen -= 1\n    vowelsLen /= 2\n \
    \   vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n\
    \    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /=\
    \ 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen ",
  "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount := 0\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n", "    vowel := []rune{'a', 'e', 'i', 'o', 'u'}\n\
    \    vowel_count := 0\n    vowel_count := 0\n    for _, c := range word {\n  \
    \      if c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n       \
    \     vowel_count++\n        }\n    }\n    if vowel_count > 0 {\n        for _,\
    \ c := range word {\n            if c == 'a' || c == 'e' || c == 'i' || c == 'o'\
    \ || c == 'u' {\n                vowel_count--\n            }\n        }\n   \
    \ }\n    if vowel_count < 0 {\n        return \"\"\n    }\n    vowel_count :=\
    \ 0\n    for _, c := range word {\n        if c == 'a' || c == 'e' || c == 'i'\
    \ || c == 'o' || c == 'u' {\n            vowel_count++\n        }\n    }\n   \
    \ if vowel_count > 0 {\n        for _, c := range word {\n            if c ==\
    \ 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                vowel_count--\n\
    \            }\n        }\n    }\n    if vowel_count < 0 {\n        return \"\"\
    \n    }\n    vowel_count := 0\n    for _, c := range word {\n        if c == 'a'\
    \ || c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n            vowel_count++\n\
    \        }\n    }\n    if vowel_count > 0 {\n        for _, c := range word {\n\
    \            if c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n \
    \               vowel_count--\n            }\n        }\n    }\n    if vowel_count\
    \ < 0 {\n        return \"\"\n    }\n    vowel_count := 0\n    for _, c := range\
    \ word {\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u'\
    \ {\n            vowel_count++\n        }\n    }\n    if vowel_count > 0 {\n \
    \       for _, c := range word {\n            if c == 'a' || c == 'e' || c ==\
    \ 'i' || c == 'o' || c == 'u' {\n                vowel_count--\n            }\n\
    \        }\n    }\n    if vowel_count < 0 {\n        return \"\"\n    }\n    vowel_count\
    \ := 0\n    for _, c := range word {\n        if c == 'a' || c == 'e' || c ==\
    \ 'i' || c == 'o' || c == 'u' {\n            vowel_count++\n        }\n    }\n\
    \    if vowel_count > 0 {\n        for _, ", "    vowels := []string{\"a\", \"\
    e\", \"i\", \"o\", \"u\"}\n    vowelsCount := 0\n    vowelsCount += len(vowels)\n\
    \    for _, v := range vowels {\n        if word[len(word)-1:] == v {\n      \
    \      return v\n        }\n    }\n    return \"\"\n}\n", "    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsLen := len(vowels)\n    vowelsLen\
    \ -= 1\n    vowelsLen /= 2\n    vowelsLen += 2\n    \n    vowelsLen -= 1\n   \
    \ vowelsLen /= 2\n    vowelsLen += 2\n    \n    vowelsLen -= 1\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    \n    vowelsLen -= 1\n    vowelsLen /= 2\n   \
    \ vowelsLen += 2\n    \n    vowelsLen -= 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    \n    vowelsLen -= 1\n    vowelsLen /= 2\n    vowelsLen += 2\n   \
    \ \n    vowelsLen -= 1\n    vowelsLen /= 2\n    vowelsLen += 2\n    \n    vowelsLen\
    \ -= 1\n    vowelsLen /= 2\n    vowelsLen += 2\n    \n    vowelsLen -= 1\n   \
    \ vowelsLen /= 2\n    vowelsLen += 2\n    \n    vowelsLen -= 1\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    \n    vowelsLen -= 1\n    vowelsLen /= 2\n   \
    \ vowelsLen += 2\n    \n    vowelsLen -= 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    \n    vowelsLen -= 1\n    vowelsLen /= 2\n    vowelsLen += 2\n   \
    \ \n    vowelsLen -= 1\n    vowelsLen /= 2\n    vowelsLen += 2\n    \n    vowelsLen\
    \ -= 1\n    vowelsLen /= 2\n    vowelsLen += 2\n    \n    vowelsLen -= 1\n   \
    \ vowelsLen /= 2\n    vowelsLen += 2\n    \n    vowelsLen -= 1\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    \n    vowelsLen -= 1\n    vowelsLen /= 2\n   \
    \ vowelsLen += 2\n    \n    vowelsLen -= 1\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    \n    vowelsLen -= 1\n    vowelsLen /= 2\n    vowelsLen += 2\n   \
    \ \n    vowelsLen -= 1\n    vowelsLen /= 2\n    vowelsLen += 2\n    \n    vowelsLen\
    \ -= 1\n    vowelsLen /= 2\n    vowelsLen += 2\n    \n    vowel", "    vowels\
    \ := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount := 0\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)/2\n    vowelsCount += len(vowels)/3\n\
    \    vowelsCount += len(vowels)/4\n    vowelsCount += len(vowels)/5\n    vowelsCount\
    \ += len(vowels)/6\n    vowelsCount += len(vowels)/7\n    vowelsCount += len(vowels)/8\n\
    \    vowelsCount += len(vowels)/9\n    vowelsCount += len(vowels)/10\n    vowelsCount\
    \ += len(vowels)/11\n    vowelsCount += len(vowels)/12\n    vowelsCount += len(vowels)/13\n\
    \    vowelsCount += len(vowels)/14\n    vowelsCount += len(vowels)/15\n    vowelsCount\
    \ += len(vowels)/16\n    vowelsCount += len(vowels)/17\n    vowelsCount += len(vowels)/18\n\
    \    vowelsCount += len(vowels)/19\n    vowelsCount += len(vowels)/20\n    vowelsCount\
    \ += len(vowels)/21\n    vowelsCount += len(vowels)/22\n    vowelsCount += len(vowels)/23\n\
    \    vowelsCount += len(vowels)/24\n    vowelsCount += len(vowels)/25\n    vowelsCount\
    \ += len(vowels)/26\n    vowelsCount += len(vowels)/27\n    vowelsCount += len(vowels)/28\n\
    \    vowelsCount += len(vowels)/29\n    vowelsCount += len(vowels)/30\n    vowelsCount\
    \ += len(vowels)/31\n    vowelsCount += len(vowels)/32\n    vowelsCount += len(vowels)/33\n\
    \    vowelsCount += len(vowels)/34\n    vowelsCount += len(vowels)/35\n    vowelsCount\
    \ += len(vowels)/36\n    vowelsCount += len(vowels)/37\n    vowelsCount += len(vowels)/38\n\
    \    vowelsCount += len(vowels)/39\n    vowelsCount += len(vowels)/40\n    vowelsCount\
    \ += len(vowels)/41\n    vowelsCount += len(vowels)/42\n    vowelsCount += len(vowels)/43\n\
    \    vowelsCount += len(vowels)/44\n    vowelsCount += len(vowels)/45\n    vowelsCount\
    \ += len(vowels)/46\n    vowelsCount += len(vowels)/47\n    vowelsCount += len(vowels)/48\n\
    \    vowelsCount += len(vowels)/49\n    vowels", "    vowel := \"aeiouAEIOU\"\n\
    \    vowel_count := 0\n    vowel_count := len(word)\n    vowel_count -= len(vowel)\n\
    \    vowel_count -= len(vowel)\n    vowel_count -= len(vowel)\n    vowel_count\
    \ -= len(vowel)\n    vowel_count -= len(vowel)\n    vowel_count -= len(vowel)\n\
    \    vowel_count -= len(vowel)\n    vowel_count -= len(vowel)\n    vowel_count\
    \ -= len(vowel)\n    vowel_count -= len(vowel)\n    vowel_count -= len(vowel)\n\
    \    vowel_count -= len(vowel)\n    vowel_count -= len(vowel)\n    vowel_count\
    \ -= len(vowel)\n    vowel_count -= len(vowel)\n    vowel_count -= len(vowel)\n\
    \    vowel_count -= len(vowel)\n    vowel_count -= len(vowel)\n    vowel_count\
    \ -= len(vowel)\n    vowel_count -= len(vowel)\n    vowel_count -= len(vowel)\n\
    \    vowel_count -= len(vowel)\n    vowel_count -= len(vowel)\n    vowel_count\
    \ -= len(vowel)\n    vowel_count -= len(vowel)\n    vowel_count -= len(vowel)\n\
    \    vowel_count -= len(vowel)\n    vowel_count -= len(vowel)\n    vowel_count\
    \ -= len(vowel)\n    vowel_count -= len(vowel)\n    vowel_count -= len(vowel)\n\
    \    vowel_count -= len(vowel)\n    vowel_count -= len(vowel)\n    vowel_count\
    \ -= len(vowel)\n    vowel_count -= len(vowel)\n    vowel_count -= len(vowel)\n\
    \    vowel_count -= len(vowel)\n    vowel_count -= len(vowel)\n    vowel_count\
    \ -= len(vowel)\n    vowel_count -= len(vowel)\n    vowel_count -= len(vowel)\n\
    \    vowel_count -= len(vowel)\n    vowel_count -= len(vowel)\n    vowel_count\
    \ -= len(vowel)\n    vowel_count -= len(vowel)\n    vowel_count -= len(vowel)\n\
    \    vowel_count -= len(vowel)\n    vowel_count -= len(vowel)\n    vowel_count\
    \ -= len(vowel)\n    vowel_count -= len(vowel)\n    vowel_count -= len(vowel)\n\
    \    vowel_count -= len(vowel)\n    vowel_count -= len(vowel)\n    vowel_count\
    \ -= len(vowel)", "    // Your code here\n    vowels := []string{\"a\", \"e\"\
    , \"i\", \"o\", \"u\"}\n    vowelsCount := 0\n    for _, v := range word {\n \
    \       if v == 'a' || v == 'e' || v == 'i' || v == 'o' || v == 'u' {\n      \
    \      vowelsCount++\n        }\n    }\n    if vowelsCount > 0 {\n        for\
    \ i := len(word) - 1; i >= 0; i-- {\n            if word[i] == 'a' || word[i]\
    \ == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u' {\n           \
    \     return word\n            }\n        }\n    }\n    return \"\"\n}\n", " \
    \   vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount :=\
    \ 0\n    for _, v := range vowels {\n        if strings.Contains(word, v) {\n\
    \            vowelsCount++\n        }\n    }\n    if vowelsCount == 0 {\n    \
    \    return \"\"\n    }\n    vowelsCount -= len(word) - len(strings.Split(word,\
    \ \"_\"))\n    if vowelsCount < 0 {\n        vowelsCount = 0\n    }\n    vowelsCount\
    \ /= 2\n    vowelsCount %= len(vowels)\n    return vowels[vowelsCount]\n}\n",
  "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount := 0\n\
    \    vowelsCount += len(vowels)\n    for i := len(word) - 1; i >= 0; i-- {\n \
    \       if word[i] == \"a\" || word[i] == \"e\" || word[i] == \"i\" || word[i]\
    \ == \"o\" || word[i] == \"u\" {\n            vowelsCount++\n        }\n    }\n\
    \    if vowelsCount == 0 {\n        return \"\"\n    }\n    vowelsCount -= len(vowels)\n\
    \    vowelsCount /= 2\n    vowelsCount %= len(vowels)\n    return vowels[vowelsCount]\n\
    }\n", "    // Your code here\n    vowels := []string{\"a\", \"e\", \"i\", \"o\"\
    , \"u\"}\n    vowelsLen := len(vowels)\n    vowelsLen -= 1\n    vowelsLen /= 2\n\
    \    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /=\
    \ 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen\
    \ /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen += 2", "    vowels\
    \ := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsLen := len(vowels)\n\
    \    vowelsLen -= 1\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen +=\
    \ 2\n    vowelsLen -= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen\
    \ += 2\n    vowelsLen -= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen\
    \ += 2\n    vowelsLen -= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen\
    \ += 2\n    vowelsLen -= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen\
    \ += 2\n    vowelsLen -= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen\
    \ += 2\n    vowelsLen -= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen\
    \ += 2\n    vowelsLen -= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen\
    \ += 2\n    vowelsLen -= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen\
    \ += 2\n    vowelsLen -= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen\
    \ += 2\n    vowelsLen -= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen\
    \ += 2\n    vowelsLen -= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen\
    \ += 2\n    vowelsLen -= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen\
    \ += 2\n    vowelsLen -= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen\
    \ += 2\n    vowelsLen -= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen\
    \ += 2\n    vowelsLen -= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen\
    \ += 2\n    vowelsLen -= 2\n    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen\
    \ += 2\n    vowelsLen -= 2\n    vowelsLen ", "    vowels := []string{\"a\", \"\
    e\", \"i\", \"o\", \"u\"}\n    vowelsLen := len(vowels)\n    vowelsLen -= 1\n\
    \    vowelsLen += 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -=\
    \ 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen -= 2\n    vowelsLen\
    \ -= 2\n    vowelsLen ", "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"\
    u\"}\n    vowelsCount := 0\n    vowelsCount += len(vowels)\n    for i := len(word)\
    \ - 1; i >= 0; i-- {\n        if word[i] == 'a' || word[i] == 'e' || word[i] ==\
    \ 'i' || word[i] == 'o' || word[i] == 'u' {\n            vowelsCount++\n     \
    \   }\n    }\n    if vowelsCount > 0 {\n        for i := len(word) - 1; i >= 0;\
    \ i-- {\n            if word[i] == 'a' || word[i] == 'e' || word[i] == 'i' ||\
    \ word[i] == 'o' || word[i] == 'u' {\n                return word[i]\n       \
    \     }\n        }\n    }\n    return \"\"\n}\n", "    vowels := []string{\"a\"\
    , \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount := 0\n    vowelsCount += len(vowels)\n\
    \    for _, v := range vowels {\n        if strings.Contains(word, v) {\n    \
    \        vowelsCount++\n        }\n    }\n    if vowelsCount == 0 {\n        return\
    \ \"\"\n    }\n    vowelsCount -= len(vowels)\n    vowelsCount /= 2\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount /= 2\n    vowelsCount %= len(vowels)\n    vowelsCount\
    \ /= 2\n    vowelsCount %= len(vowels)\n    vowelsCount /= 2\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount /= 2\n    vowelsCount %= len(vowels)\n    vowelsCount\
    \ /= 2\n    vowelsCount %= len(vowels)\n    vowelsCount /= 2\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount /= 2\n    vowelsCount %= len(vowels)\n    vowelsCount\
    \ /= 2\n    vowelsCount %= len(vowels)\n    vowelsCount /= 2\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount /= 2\n    vowelsCount %= len(vowels)\n    vowelsCount\
    \ /= 2\n    vowelsCount %= len(vowels)\n    vowelsCount /= 2\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount /= 2\n    vowelsCount %= len(vowels)\n    vowelsCount\
    \ /= 2\n    vowelsCount %= len(vowels)\n    vowelsCount /= 2\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount /= 2\n    vowelsCount %= len(vowels)\n    vowelsCount\
    \ /= 2\n    vowelsCount %= len(vowels)\n    vowelsCount /= 2\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount /= 2\n    vowelsCount %= len(vowels)\n    vowelsCount\
    \ /= 2\n    vowelsCount %= len(vowels)\n    vowelsCount /= 2\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount /= 2\n    vowelsCount %= len(vowels)\n    vowelsCount\
    \ /= 2\n    vowelsCount %= len(vowels)\n    vowelsCount /= 2\n    vowelsCount\
    \ %= len(vowels)\n    vowelsCount /= 2\n    vowelsCount %= len(vowels)\n    vowelsCount\
    \ /= 2\n    vowelsCount %= len(vowels)\n    vowel", "    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsLen := len(vowels)\n    vowelsLen\
    \ -= 1\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen /= 2\n    vowelsLen += 2\n    vowelsLen /= 2\n    vowelsLen\
    \ += 2\n    vowelsLen ", "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"\
    u\"}\n    vowelsCount := 0\n    vowelsCount += len(vowels)\n    for _, v := range\
    \ vowels {\n        if strings.Contains(word, v) {\n            vowelsCount++\n\
    \        }\n    }\n    if vowelsCount < 2 {\n        return \"\"\n    }\n    vowelsCount\
    \ -= len(vowels)\n    vowelsCount -= len(vowels)\n    for _, v := range vowels\
    \ {\n        if strings.Contains(word, v) {\n            vowelsCount++\n     \
    \   }\n    }\n    if vowelsCount < 2 {\n        return \"\"\n    }\n    vowelsCount\
    \ -= len(vowels)\n    vowelsCount -= len(vowels)\n    for _, v := range vowels\
    \ {\n        if strings.Contains(word, v) {\n            vowelsCount++\n     \
    \   }\n    }\n    if vowelsCount < 2 {\n        return \"\"\n    }\n    vowelsCount\
    \ -= len(vowels)\n    vowelsCount -= len(vowels)\n    for _, v := range vowels\
    \ {\n        if strings.Contains(word, v) {\n            vowelsCount++\n     \
    \   }\n    }\n    if vowelsCount < 2 {\n        return \"\"\n    }\n    vowelsCount\
    \ -= len(vowels)\n    vowelsCount -= len(vowels)\n    for _, v := range vowels\
    \ {\n        if strings.Contains(word, v) {\n            vowelsCount++\n     \
    \   }\n    }\n    if vowelsCount < 2 {\n        return \"\"\n    }\n    vowelsCount\
    \ -= len(vowels)\n    vowelsCount -= len(vowels)\n    for _, v := range vowels\
    \ {\n        if strings.Contains(word, v) {\n            vowelsCount++\n     \
    \   }\n    }\n    if vowelsCount < 2 {\n        return \"\"\n    }\n    vowelsCount\
    \ -= len(vowels)\n    vowelsCount -= len(vowels)\n    for _, v := range vowels\
    \ {\n        if strings.Contains(word, v) {\n            vowelsCount++\n     \
    \   }\n    }\n    if vowelsCount < 2 {\n        return \"\"\n    }\n    vowelsCount\
    \ -= len(vowels)\n    vowelsCount -= len(vowels)\n    for _, v := range vowels\
    \ {\n        if strings.Contains(word, v) {\n            vowelsCount++\n     \
    \   }\n    }\n    if vowelsCount < 2 {\n        return \"\"\n    }\n    vowelsCount\
    \ -= len(vowels)\n    vowelsCount -= len(vowels)\n    for _, v := range vowels\
    \ {\n        if strings.Contains(word, v) {\n            vowelsCount++\n     \
    \   }\n    }\n    if vowelsCount < 2 {\n        return \"\"\n    }\n    vowels",
  "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    vowelsCount := 0\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount\
    \ += len(vowels)\n    vowelsCount += len(vowels)\n    vowelsCount += len(vowels)\n\
    \    vowelsCount += len(vowels)\n", "    vowels := []string{\"a\", \"e\", \"i\"\
    , \"o\", \"u\"}\n    vowelsLen := len(vowels)\n    vowelsLen -= 1\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen\
    \ /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen /= 2\n    vowelsLen ",
  "    vowel := []rune{'a', 'e', 'i', 'o', 'u'}\n    vowel_count := 0\n    for i :=\
    \ len(word) - 1; i >= 0; i-- {\n        if word[i] == 'a' || word[i] == 'e' ||\
    \ word[i] == 'i' || word[i] == 'o' || word[i] == 'u' {\n            vowel_count++\n\
    \        }\n    }\n    if vowel_count > 0 {\n        for i := len(word) - 1; i\
    \ >= 0; i-- {\n            if word[i] == 'a' || word[i] == 'e' || word[i] == 'i'\
    \ || word[i] == 'o' || word[i] == 'u' {\n                return word[i]\n    \
    \        }\n        }\n    }\n    return \"\"\n}\n"]
stop_tokens:
- "\nfunc"
- struct
- "\n// "

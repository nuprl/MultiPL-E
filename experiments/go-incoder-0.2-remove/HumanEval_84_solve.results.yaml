language: go_test.go
name: HumanEval_84_solve
results:
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    for i < N {\n        result += \"1\"\n        i++\n\
    \    }\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate :=\
    \ solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpk7u3oeym_test.go:42: expected '1', gotn\
    \    --- FAIL: TestSolve/test_num__1 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '110', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '1100', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '1001', got '11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
  timestamp: 1660075446
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    digit := 0\n    carryOn := false\n    for i := 0; i < N; i++ {\n\
    \        digit += int(N % 10) * int(N % 10) > int(N % 10) * int(N % 10)\n    \
    \    carryOn = digit > 9\n        result += string(digit)\n        N /= 10\n \
    \   }\n    if carryOn {\n        result += \"1\"\n    }\n    return result\n}\n\
    \nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1000), expected: \"1\" },\n     { actual: candidate(150),\
    \ expected: \"110\" },\n     { actual: candidate(147), expected: \"1100\" },\n\
    \     { actual: candidate(333), expected: \"1001\" },\n     { actual: candidate(963),\
    \ expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpm1xn4mj2_test.go:20:9: invalid operation: digit += int(N % 10) * int(N
    % 10) > int(N % 10) * int(N % 10) (mismatched types int and untyped bool)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075446
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    digit := 0\n    sum := 0\n    for i := 0; i < N; i++ {\n      \
    \  digit += int(N % 2)\n        sum += digit\n        N = N / 2\n    }\n    for\
    \ i := 0; i < sum; i++ {\n        result += fmt.Sprintf(\"%d\", int(N % 2))\n\
    \        N = N / 2\n    }\n    return result\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpyawkbj47_test.go:48: expected '1', got '1110000'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpyawkbj47_test.go:48: expected '110', got '00100000'\n  \
    \  --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpyawkbj47_test.go:48: expected\
    \ '1100', got '0010000000'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n    \
    \    tmpyawkbj47_test.go:48: expected '1001', got '1010000000000'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpyawkbj47_test.go:48: expected '10010',\
    \ got '11100000000000'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075446
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    digit := 0\n    digit := N / 2\n    for digit > 0 {\n        result\
    \ += \"1\"\n        digit -= 1\n    }\n    return result\n}\n\nfunc TestSolve(t\
    \ *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp7z343zyq_test.go:18:11: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075446
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    s :=\
    \ \"\"\n    i := 0\n    for i < N {\n        s += fmt.Sprintf(\"%d\", N % 2)\n\
    \        N /= 2\n        i++\n    }\n    return s\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmphyt8uifk_test.go:43: expected '1', got '0001011'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmphyt8uifk_test.go:43: expected '110', got '01101'\n    ---\
    \ FAIL: TestSolve/test_num__2 (0.00s)\n        tmphyt8uifk_test.go:43: expected\
    \ '1100', got '11001'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmphyt8uifk_test.go:43:\
    \ expected '1001', got '101100'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n\
    \        tmphyt8uifk_test.go:43: expected '10010', got '1100001'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075446
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    sum := 0\n    for i := 0; i < N; i++ {\n        sum += int(N %\
    \ 10) * uint64(i)\n        N /= 10\n    }\n    result += \"0\"\n    for i := 1;\
    \ i <= sum; i++ {\n        result += \"1\"\n    }\n    return result\n}\n\nfunc\
    \ TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(1000), expected: \"1\" },\n     { actual: candidate(150),\
    \ expected: \"110\" },\n     { actual: candidate(147), expected: \"1100\" },\n\
    \     { actual: candidate(333), expected: \"1001\" },\n     { actual: candidate(963),\
    \ expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpfi43vjdk_test.go:19:16: invalid operation: int(N % 10) * uint64(i) (mismatched
    types int and uint64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075446
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    for N > 0 {\n        result += \"1\"\n        N /=\
    \ 10\n        i++\n    }\n    return result\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpm4p8czlf_test.go:43: expected '1', got '1111'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpm4p8czlf_test.go:43: expected '110', got '111'\n    ---\
    \ FAIL: TestSolve/test_num__2 (0.00s)\n        tmpm4p8czlf_test.go:43: expected\
    \ '1100', got '111'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpm4p8czlf_test.go:43:\
    \ expected '1001', got '111'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n  \
    \      tmpm4p8czlf_test.go:43: expected '10010', got '111'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.006s\nFAIL\n"
  timestamp: 1660075446
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    for i < N {\n        result += \"1\"\n        i++\n\
    \    }\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate :=\
    \ solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpk7u3oeym_test.go:42: expected '1', gotn\
    \    --- FAIL: TestSolve/test_num__1 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '110', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '1100', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '1001', got '11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
  timestamp: 1660075446
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    for i < N {\n        result += \"1\"\n        i++\n\
    \    }\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate :=\
    \ solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpk7u3oeym_test.go:42: expected '1', gotn\
    \    --- FAIL: TestSolve/test_num__1 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '110', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '1100', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '1001', got '11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
  timestamp: 1660075446
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    for N > 0 {\n        result += \"1\"\n        N /=\
    \ 10\n        i++\n    }\n    return result\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpm4p8czlf_test.go:43: expected '1', got '1111'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpm4p8czlf_test.go:43: expected '110', got '111'\n    ---\
    \ FAIL: TestSolve/test_num__2 (0.00s)\n        tmpm4p8czlf_test.go:43: expected\
    \ '1100', got '111'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpm4p8czlf_test.go:43:\
    \ expected '1001', got '111'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n  \
    \      tmpm4p8czlf_test.go:43: expected '10010', got '111'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.006s\nFAIL\n"
  timestamp: 1660075446
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    s :=\
    \ \"\"\n    i := 0\n    sum := 0\n    for i < N {\n        sum += int(N % 10)\
    \ * pow(2, i)\n        N = N / 10\n        i++\n    }\n    s = fmt.Sprintf(\"\
    %d\", sum)\n    return s\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate :=\
    \ solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpjtbsxq78_test.go:20:30: undefined: pow

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075446
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    var\
    \ result string\n    var i int\n    var sum int\n    for i = 0; i <= N; i++ {\n\
    \        sum += int(N % 10) * uint64(i)\n        N /= 10\n    }\n    result =\
    \ fmt.Sprintf(\"%0*d\", len(strconv.Itoa(i)), sum)\n    return result\n}\n\nfunc\
    \ TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(1000), expected: \"1\" },\n     { actual: candidate(150),\
    \ expected: \"110\" },\n     { actual: candidate(147), expected: \"1100\" },\n\
    \     { actual: candidate(333), expected: \"1001\" },\n     { actual: candidate(963),\
    \ expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp4tsl_bj6_test.go:20:16: invalid operation: int(N % 10) * uint64(i) (mismatched
    types int and uint64)

    /tmp/tmp4tsl_bj6_test.go:23:38: undefined: strconv

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075446
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    sum := 0\n    for i < N {\n        sum += int(N % 10)\
    \ * uint64(i)\n        N /= 10\n        i++\n    }\n    result += \"0\"\n    for\
    \ sum > 0 {\n        result += \"1\"\n        sum--\n    }\n    return result\n\
    }\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1000), expected: \"1\" },\n     { actual: candidate(150),\
    \ expected: \"110\" },\n     { actual: candidate(147), expected: \"1100\" },\n\
    \     { actual: candidate(333), expected: \"1001\" },\n     { actual: candidate(963),\
    \ expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp8fsp3zkn_test.go:20:16: invalid operation: int(N % 10) * uint64(i) (mismatched
    types int and uint64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075446
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    sum := 0\n    for i := 0; i < N; i++ {\n        sum += int(N %\
    \ 10) * int(N / 10)\n        N = N / 10\n    }\n    for i := 0; i < len(strconv.Itoa(sum));\
    \ i++ {\n        result += strconv.Itoa(sum % 2)\n        sum = sum / 2\n    }\n\
    \    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n   \
    \  { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpanljbwl8_test.go:22:25: undefined: strconv

    /tmp/tmpanljbwl8_test.go:23:19: undefined: strconv

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075446
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    sum := 0\n    for i < N {\n        sum += int(N % 10)\
    \ * uint64(i)\n        N /= 10\n        i++\n    }\n    for ; i < 10; i++ {\n\
    \        result += \"0\" + string(sum % 2)\n        sum /= 2\n    }\n    return\
    \ result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1000), expected: \"1\" },\n     { actual:\
    \ candidate(150), expected: \"110\" },\n     { actual: candidate(147), expected:\
    \ \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n     { actual:\
    \ candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpsbt2ci_0_test.go:20:16: invalid operation: int(N % 10) * uint64(i) (mismatched
    types int and uint64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075446
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    s :=\
    \ \"\"\n    i := 0\n    for N > 0 {\n        s += fmt.Sprintf(\"%d\", N%2)\n \
    \       N /= 2\n        i++\n    }\n    return s\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpssh_kgf2_test.go:43: expected '1', got '0001011111'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpssh_kgf2_test.go:43: expected '110',\
    \ got '01101001'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpssh_kgf2_test.go:43:\
    \ expected '1100', got '11001001'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpssh_kgf2_test.go:43: expected '1001', got '101100101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpssh_kgf2_test.go:43: expected '10010',\
    \ got '1100001111'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075446
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    for i := 0; i < N; i++ {\n        result += \"1\"\n    }\n    return\
    \ result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1000), expected: \"1\" },\n     { actual:\
    \ candidate(150), expected: \"110\" },\n     { actual: candidate(147), expected:\
    \ \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n     { actual:\
    \ candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpllqay01h_test.go:40: expected '1', gotn\
    \    --- FAIL: TestSolve/test_num__1 (0.00s)\n        tmpllqay01h_test.go:40:\
    \ expected '110', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpllqay01h_test.go:40:\
    \ expected '1100', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpllqay01h_test.go:40:\
    \ expected '1001', got '11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
  timestamp: 1660075446
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    for i < N {\n        result += \"1\"\n        i++\n\
    \    }\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate :=\
    \ solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpk7u3oeym_test.go:42: expected '1', gotn\
    \    --- FAIL: TestSolve/test_num__1 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '110', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '1100', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '1001', got '11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
  timestamp: 1660075446
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    for N > 0 {\n        result += \"1\"\n        N /=\
    \ 10\n        i++\n    }\n    return result\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpm4p8czlf_test.go:43: expected '1', got '1111'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpm4p8czlf_test.go:43: expected '110', got '111'\n    ---\
    \ FAIL: TestSolve/test_num__2 (0.00s)\n        tmpm4p8czlf_test.go:43: expected\
    \ '1100', got '111'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpm4p8czlf_test.go:43:\
    \ expected '1001', got '111'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n  \
    \      tmpm4p8czlf_test.go:43: expected '10010', got '111'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.006s\nFAIL\n"
  timestamp: 1660075446
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    sum := 0\n    for i < N {\n        sum += int(N % 10)\
    \ * pow(2, i)\n        N /= 10\n        i++\n    }\n    if sum > 0 {\n       \
    \ result += fmt.Sprintf(\"%d\", sum)\n    }\n    return result\n}\n\nfunc TestSolve(t\
    \ *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmptmq19go__test.go:20:30: undefined: pow

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075446
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    for i < N {\n        result += \"1\"\n        i++\n\
    \    }\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate :=\
    \ solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpk7u3oeym_test.go:42: expected '1', gotn\
    \    --- FAIL: TestSolve/test_num__1 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '110', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '1100', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '1001', got '11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
  timestamp: 1660075446
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    for N > 0 {\n        result += \"1\"\n        N /=\
    \ 10\n        i++\n    }\n    return result\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpm4p8czlf_test.go:43: expected '1', got '1111'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpm4p8czlf_test.go:43: expected '110', got '111'\n    ---\
    \ FAIL: TestSolve/test_num__2 (0.00s)\n        tmpm4p8czlf_test.go:43: expected\
    \ '1100', got '111'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpm4p8czlf_test.go:43:\
    \ expected '1001', got '111'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n  \
    \      tmpm4p8czlf_test.go:43: expected '10010', got '111'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.006s\nFAIL\n"
  timestamp: 1660075446
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    var\
    \ result string\n    \n    for i := 0; i < N; i++ {\n        result += \"1\"\n\
    \    }\n    \n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate\
    \ := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpyeqmoczz_test.go:42: expected '1', gotn\
    \    --- FAIL: TestSolve/test_num__1 (0.00s)\n        tmpyeqmoczz_test.go:42:\
    \ expected '110', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpyeqmoczz_test.go:42:\
    \ expected '1100', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpyeqmoczz_test.go:42:\
    \ expected '1001', got '11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
  timestamp: 1660075446
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    s :=\
    \ \"\"\n    i := 0\n    for i < N {\n        s += fmt.Sprintf(\"%b\", N%2)\n \
    \       N /= 2\n        i++\n    }\n    return s\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpje4e4kce_test.go:43: expected '1', got '0001011'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpje4e4kce_test.go:43: expected '110', got '01101'\n    ---\
    \ FAIL: TestSolve/test_num__2 (0.00s)\n        tmpje4e4kce_test.go:43: expected\
    \ '1100', got '11001'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpje4e4kce_test.go:43:\
    \ expected '1001', got '101100'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n\
    \        tmpje4e4kce_test.go:43: expected '10010', got '1100001'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075446
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    sum := 0\n    for i := 0; i < N; i++ {\n        sum += int(N %\
    \ 2)\n        N = N / 2\n    }\n    for i := 0; i < N; i++ {\n        result +=\
    \ fmt.Sprintf(\"%d\", sum)\n        sum += int(N % 2)\n        N = N / 2\n   \
    \ }\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n   \
    \  { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmp6c1dcfpr_test.go:47: expected '1', got '34'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmp6c1dcfpr_test.go:47: expected '110', got '33'\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmp6c1dcfpr_test.go:47: expected '1100',\
    \ got '33'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmp6c1dcfpr_test.go:47:\
    \ expected '1001', got '34'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n   \
    \     tmp6c1dcfpr_test.go:47: expected '10010', got '34'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660075446
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    sum := 0\n    for i < N {\n        sum += int(N % 10)\
    \ * pow(2, i)\n        N /= 10\n        i++\n    }\n    result = fmt.Sprintf(\"\
    %d\", sum)\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate\
    \ := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpe22dzpo5_test.go:20:30: undefined: pow

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075446
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    for i < N {\n        result += \"1\"\n        i++\n\
    \    }\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate :=\
    \ solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpk7u3oeym_test.go:42: expected '1', gotn\
    \    --- FAIL: TestSolve/test_num__1 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '110', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '1100', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '1001', got '11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
  timestamp: 1660075446
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    s :=\
    \ \"\"\n    for i := 0; i < N; i++ {\n        s += fmt.Sprintf(\"%b\", N%2)\n\
    \        N /= 2\n    }\n    return s\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate\
    \ := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmp436h3vem_test.go:41: expected '1', got '0001011'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmp436h3vem_test.go:41: expected '110', got '01101'\n    ---\
    \ FAIL: TestSolve/test_num__2 (0.00s)\n        tmp436h3vem_test.go:41: expected\
    \ '1100', got '11001'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmp436h3vem_test.go:41:\
    \ expected '1001', got '101100'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n\
    \        tmp436h3vem_test.go:41: expected '10010', got '1100001'\nFAIL\nFAIL\t\
    command-line-arguments\t0.007s\nFAIL\n"
  timestamp: 1660075446
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    digit := 0\n    sum := 0\n    for i := 0; i < N; i++ {\n      \
    \  digit = N % 10\n        sum += digit\n        N = N / 10\n    }\n    if sum\
    \ > 0 {\n        result = fmt.Sprintf(\"%b\", sum)\n    }\n    return result\n\
    }\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1000), expected: \"1\" },\n     { actual: candidate(150),\
    \ expected: \"110\" },\n     { actual: candidate(147), expected: \"1100\" },\n\
    \     { actual: candidate(333), expected: \"1001\" },\n     { actual: candidate(963),\
    \ expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpjg8zd45a_test.go:47: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpjg8zd45a_test.go:47: expected '110', got '101'\n    ---\
    \ FAIL: TestSolve/test_num__2 (0.00s)\n        tmpjg8zd45a_test.go:47: expected\
    \ '1100', got '1011'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075446
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    s :=\
    \ \"\"\n    n := N\n    for n > 0 {\n        s += fmt.Sprintf(\"%d\", n%2)\n \
    \       n /= 2\n    }\n    return s\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate\
    \ := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmp7w5pvqyi_test.go:42: expected '1', got '0001011111'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmp7w5pvqyi_test.go:42: expected '110',\
    \ got '01101001'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmp7w5pvqyi_test.go:42:\
    \ expected '1100', got '11001001'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmp7w5pvqyi_test.go:42: expected '1001', got '101100101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmp7w5pvqyi_test.go:42: expected '10010',\
    \ got '1100001111'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075446
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    for i < N {\n        result += \"1\"\n        i++\n\
    \    }\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate :=\
    \ solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpk7u3oeym_test.go:42: expected '1', gotn\
    \    --- FAIL: TestSolve/test_num__1 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '110', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '1100', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '1001', got '11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
  timestamp: 1660075446
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    for N > 0 {\n        result += \"1\"\n        N = N\
    \ / 2\n        i = i + 1\n    }\n    return result\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpeh0n9m9__test.go:43: expected '1', got '1111111111'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpeh0n9m9__test.go:43: expected '110',\
    \ got '11111111'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpeh0n9m9__test.go:43:\
    \ expected '1100', got '11111111'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpeh0n9m9__test.go:43: expected '1001', got '111111111'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpeh0n9m9__test.go:43: expected '10010',\
    \ got '1111111111'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075446
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    digit := 0\n    for i := 0; i < N; i++ {\n        digit += int(N\
    \ % 2)\n        N = N / 2\n    }\n    for i := 0; i < digit; i++ {\n        result\
    \ += \"1\"\n    }\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate\
    \ := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpjjkbbulj_test.go:45: expected '1', got '111'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpjjkbbulj_test.go:45: expected '110', got '111'\n    ---\
    \ FAIL: TestSolve/test_num__2 (0.00s)\n        tmpjjkbbulj_test.go:45: expected\
    \ '1100', got '111'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpjjkbbulj_test.go:45:\
    \ expected '1001', got '111'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n  \
    \      tmpjjkbbulj_test.go:45: expected '10010', got '111'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.006s\nFAIL\n"
  timestamp: 1660075450
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    for N > 0 {\n        result += \"1\"\n        N /=\
    \ 10\n        i++\n    }\n    return result\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpm4p8czlf_test.go:43: expected '1', got '1111'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpm4p8czlf_test.go:43: expected '110', got '111'\n    ---\
    \ FAIL: TestSolve/test_num__2 (0.00s)\n        tmpm4p8czlf_test.go:43: expected\
    \ '1100', got '111'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpm4p8czlf_test.go:43:\
    \ expected '1001', got '111'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n  \
    \      tmpm4p8czlf_test.go:43: expected '10010', got '111'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.006s\nFAIL\n"
  timestamp: 1660075446
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    base := 2\n    digit := 0\n    sum := 0\n    for i := 0; i < N;\
    \ i++ {\n        digit += N % base\n        sum += digit\n        N /= base\n\
    \    }\n    for i := 0; i < len(result); i++ {\n        if sum > 0 {\n       \
    \     result += fmt.Sprintf(\"%d\", sum%base)\n        }\n        sum += int(result[i])\n\
    \    }\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate :=\
    \ solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpgxfax71x_test.go:51: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpgxfax71x_test.go:51: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpgxfax71x_test.go:51: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpgxfax71x_test.go:51:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpgxfax71x_test.go:51: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660075450
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    var\
    \ result string\n    \n    for i := 0; i < N; i++ {\n        result += \"1\"\n\
    \    }\n    \n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate\
    \ := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpyeqmoczz_test.go:42: expected '1', gotn\
    \    --- FAIL: TestSolve/test_num__1 (0.00s)\n        tmpyeqmoczz_test.go:42:\
    \ expected '110', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpyeqmoczz_test.go:42:\
    \ expected '1100', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpyeqmoczz_test.go:42:\
    \ expected '1001', got '11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
  timestamp: 1660075446
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    digit := 0\n    carryOn := true\n    for digit < N {\n        if\
    \ carryOn {\n            result += fmt.Sprintf(\"%b\", digit)\n            carryOn\
    \ = false\n        } else {\n            result += fmt.Sprintf(\"%b\", digit)\n\
    \            carryOn = true\n        }\n        digit++\n    }\n    return result\n\
    }\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1000), expected: \"1\" },\n     { actual: candidate(150),\
    \ expected: \"110\" },\n     { actual: candidate(147), expected: \"1100\" },\n\
    \     { actual: candidate(333), expected: \"1001\" },\n     { actual: candidate(963),\
    \ expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.01s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmp3b4f9k0o_test.go:49: expected '1', got
  timestamp: 1660075450
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    digit := 0\n    for i := 0; i < N; i++ {\n        digit += int(N\
    \ % 2)\n        N /= 2\n    }\n    for i := 0; i < digit; i++ {\n        result\
    \ += \"1\"\n    }\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate\
    \ := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpamky28yx_test.go:45: expected '1', got '111'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpamky28yx_test.go:45: expected '110', got '111'\n    ---\
    \ FAIL: TestSolve/test_num__2 (0.00s)\n        tmpamky28yx_test.go:45: expected\
    \ '1100', got '111'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpamky28yx_test.go:45:\
    \ expected '1001', got '111'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n  \
    \      tmpamky28yx_test.go:45: expected '10010', got '111'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.008s\nFAIL\n"
  timestamp: 1660075450
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    sum := 0\n    for i < N {\n        sum += int(N % 10)\
    \ * uint64(i)\n        i /= 10\n    }\n    result += \"0\"\n    for i := len(result)\
    \ - 1; i >= 0; i-- {\n        result += strconv.FormatUint(uint64(sum), 2)\n \
    \       sum -= int(result[i]) * uint64(i)\n    }\n    return result\n}\n\nfunc\
    \ TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(1000), expected: \"1\" },\n     { actual: candidate(150),\
    \ expected: \"110\" },\n     { actual: candidate(147), expected: \"1100\" },\n\
    \     { actual: candidate(333), expected: \"1001\" },\n     { actual: candidate(963),\
    \ expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp98f0im6q_test.go:20:16: invalid operation: int(N % 10) * uint64(i) (mismatched
    types int and uint64)

    /tmp/tmp98f0im6q_test.go:25:19: undefined: strconv

    /tmp/tmp98f0im6q_test.go:26:16: invalid operation: int(result[i]) * uint64(i)
    (mismatched types int and uint64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075449
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    sum := 0\n    for i := 0; i < N; i++ {\n        sum += int(N %\
    \ 10) * uint64(i)\n        N = N / 10\n    }\n    for i := 0; i < len(strconv.Itoa(sum));\
    \ i++ {\n        result += strconv.Itoa(int(sum % 2))\n        sum = int(sum /\
    \ 2)\n    }\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate\
    \ := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp6ffoe_pn_test.go:19:16: invalid operation: int(N % 10) * uint64(i) (mismatched
    types int and uint64)

    /tmp/tmp6ffoe_pn_test.go:22:25: undefined: strconv

    /tmp/tmp6ffoe_pn_test.go:23:19: undefined: strconv

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075449
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    s :=\
    \ \"\"\n    for i := 0; i < N; i++ {\n        s += fmt.Sprintf(\"%b\", N%2)\n\
    \        N /= 2\n    }\n    return s\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate\
    \ := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmp436h3vem_test.go:41: expected '1', got '0001011'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmp436h3vem_test.go:41: expected '110', got '01101'\n    ---\
    \ FAIL: TestSolve/test_num__2 (0.00s)\n        tmp436h3vem_test.go:41: expected\
    \ '1100', got '11001'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmp436h3vem_test.go:41:\
    \ expected '1001', got '101100'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n\
    \        tmp436h3vem_test.go:41: expected '10010', got '1100001'\nFAIL\nFAIL\t\
    command-line-arguments\t0.007s\nFAIL\n"
  timestamp: 1660075446
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    for N > 0 {\n        result += \"1\"\n        N = N\
    \ / 2\n        i = i + 1\n    }\n    return result\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpeh0n9m9__test.go:43: expected '1', got '1111111111'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpeh0n9m9__test.go:43: expected '110',\
    \ got '11111111'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpeh0n9m9__test.go:43:\
    \ expected '1100', got '11111111'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpeh0n9m9__test.go:43: expected '1001', got '111111111'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpeh0n9m9__test.go:43: expected '10010',\
    \ got '1111111111'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075446
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    var\
    \ result string\n    result += \"1\"\n    for i := 2; i <= N; i++ {\n        result\
    \ += \"0\"\n    }\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate\
    \ := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpwljv5fzw_test.go:41: expected '1', gotn\
    \    --- FAIL: TestSolve/test_num__1 (0.00s)\n        tmpwljv5fzw_test.go:41:\
    \ expected '110', got '100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'\n\
    \    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpwljv5fzw_test.go:41:\
    \ expected '1100', got '100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'\n\
    \    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpwljv5fzw_test.go:41:\
    \ expected '1001', got '10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
  timestamp: 1660075450
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    sum := 0\n    for i < N {\n        sum += int(N % 10)\
    \ * pow(2, i)\n        i ++\n        N /= 10\n    }\n    result += fmt.Sprintf(\"\
    %d\", sum)\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate\
    \ := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmphtk1wgwd_test.go:20:30: undefined: pow

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075449
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    var\
    \ result string\n    var sum, i int\n    for i = N; i > 0; i-- {\n        sum\
    \ += int(i%10)\n        i /= 10\n    }\n    result = fmt.Sprintf(\"%b\", sum)\n\
    \    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n   \
    \  { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpmf412n_7_test.go:43: expected '1', got '10001'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpmf412n_7_test.go:43: expected '110', got '100'\n    ---\
    \ FAIL: TestSolve/test_num__2 (0.00s)\n        tmpmf412n_7_test.go:43: expected\
    \ '1100', got '1010'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpmf412n_7_test.go:43:\
    \ expected '1001', got '111'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n  \
    \      tmpmf412n_7_test.go:43: expected '10010', got '10000'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660075450
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    for N > 0 {\n        result += \"1\"\n        N /=\
    \ 2\n    }\n    for ; i < len(result); i++ {\n        if result[i] == '0' {\n\
    \            result[i] = '1'\n        } else {\n            result[i] = '0'\n\
    \        }\n    }\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate\
    \ := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpfzysm_gd_test.go:24:13: cannot assign to result[i] (value of type byte)

    /tmp/tmpfzysm_gd_test.go:26:13: cannot assign to result[i] (value of type byte)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075449
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    base := 2\n    for i := 0; i < N; i++ {\n        result += \"1\"\
    \n    }\n    for i := 0; i < len(result); i++ {\n        result += \"0\"\n   \
    \ }\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n   \
    \  { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp0navk_bh_test.go:17:5: base declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075450
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    for i < N {\n        result += \"1\"\n        i++\n\
    \    }\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate :=\
    \ solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpk7u3oeym_test.go:42: expected '1', gotn\
    \    --- FAIL: TestSolve/test_num__1 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '110', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '1100', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '1001', got '11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
  timestamp: 1660075446
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    digit := 0\n    sum := 0\n    for i := 0; i < N; i++ {\n      \
    \  digit += int(N % 2)\n        sum += digit\n        N = N / 2\n    }\n    result\
    \ += \"0\"\n    for i := 0; i < sum; i++ {\n        result += \"1\"\n    }\n \
    \   return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n   \
    \  { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmp6oqorfhv_test.go:48: expected '1', got '01111111'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmp6oqorfhv_test.go:48: expected '110', got '011111111'\n \
    \   --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmp6oqorfhv_test.go:48: expected\
    \ '1100', got '01111111111'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n   \
    \     tmp6oqorfhv_test.go:48: expected '1001', got '01111111111111'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmp6oqorfhv_test.go:48: expected '10010',\
    \ got '011111111111111'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075450
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    for i := 0; i < N; i++ {\n        result += \"1\"\n    }\n    return\
    \ result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1000), expected: \"1\" },\n     { actual:\
    \ candidate(150), expected: \"110\" },\n     { actual: candidate(147), expected:\
    \ \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n     { actual:\
    \ candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpllqay01h_test.go:40: expected '1', gotn\
    \    --- FAIL: TestSolve/test_num__1 (0.00s)\n        tmpllqay01h_test.go:40:\
    \ expected '110', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpllqay01h_test.go:40:\
    \ expected '1100', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpllqay01h_test.go:40:\
    \ expected '1001', got '11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
  timestamp: 1660075446
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    sum := 0\n    for i < N {\n        sum += int(N % 10)\
    \ * pow(2, i)\n        N /= 10\n        i++\n    }\n    result = fmt.Sprintf(\"\
    %b\", sum)\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate\
    \ := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpt3cw7f_q_test.go:20:30: undefined: pow

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075450
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    base := 2\n    for i := 0; i < N; i++ {\n        result += \"1\"\
    \n    }\n    for i := N; i > 0; i-- {\n        result += \"0\"\n    }\n    return\
    \ fmt.Sprintf(\"%b\", []byte(result))\n}\n\nfunc TestSolve(t *testing.T) {\n \
    \ candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000), expected:\
    \ \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n     { actual:\
    \ candidate(147), expected: \"1100\" },\n     { actual: candidate(333), expected:\
    \ \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp44xsffc5_test.go:17:5: base declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075450
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    sum := 0\n    for i := 0; i < N; i++ {\n        sum += int(N %\
    \ 10) * int(N / 10)\n        N = N / 10\n    }\n    for i := 0; i < N; i++ {\n\
    \        result += fmt.Sprintf(\"%d\", sum % 2)\n        sum = int(sum / 2)\n\
    \    }\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate :=\
    \ solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmp62tesrja_test.go:46: expected '1', got '0'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmp62tesrja_test.go:46: expected '110', got '1'\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmp62tesrja_test.go:46: expected '1100',\
    \ got '0'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmp62tesrja_test.go:46:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmp62tesrja_test.go:46: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660075450
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    for i < N {\n        result += \"1\"\n        i++\n\
    \    }\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate :=\
    \ solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpk7u3oeym_test.go:42: expected '1', gotn\
    \    --- FAIL: TestSolve/test_num__1 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '110', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '1100', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '1001', got '11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
  timestamp: 1660075446
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    for N > 0 {\n        result += \"1\"\n        N /=\
    \ 10\n        i++\n    }\n    return result\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpm4p8czlf_test.go:43: expected '1', got '1111'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpm4p8czlf_test.go:43: expected '110', got '111'\n    ---\
    \ FAIL: TestSolve/test_num__2 (0.00s)\n        tmpm4p8czlf_test.go:43: expected\
    \ '1100', got '111'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpm4p8czlf_test.go:43:\
    \ expected '1001', got '111'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n  \
    \      tmpm4p8czlf_test.go:43: expected '10010', got '111'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.006s\nFAIL\n"
  timestamp: 1660075446
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    s :=\
    \ \"\"\n    for i := 0; i < N; i++ {\n        if i%2 == 0 {\n            s +=\
    \ \"1\"\n        } else {\n            s += \"0\"\n        }\n    }\n    return\
    \ s\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1000), expected: \"1\" },\n     { actual: candidate(150),\
    \ expected: \"110\" },\n     { actual: candidate(147), expected: \"1100\" },\n\
    \     { actual: candidate(333), expected: \"1001\" },\n     { actual: candidate(963),\
    \ expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpmje02kn4_test.go:44: expected '1', gotn\
    \    --- FAIL: TestSolve/test_num__1 (0.00s)\n        tmpmje02kn4_test.go:44:\
    \ expected '110', got '101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010'\n\
    \    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpmje02kn4_test.go:44:\
    \ expected '1100', got '101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101'\n\
    \    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpmje02kn4_test.go:44:\
    \ expected '1001', got '10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101"
  timestamp: 1660075450
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    for i < N {\n        result += \"1\"\n        i++\n\
    \    }\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate :=\
    \ solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpk7u3oeym_test.go:42: expected '1', gotn\
    \    --- FAIL: TestSolve/test_num__1 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '110', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '1100', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '1001', got '11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
  timestamp: 1660075446
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    s :=\
    \ \"\"\n    i := 0\n    for i < N {\n        s += fmt.Sprintf(\"%b\", N%2)\n \
    \       N /= 2\n        i++\n    }\n    return s\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpje4e4kce_test.go:43: expected '1', got '0001011'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpje4e4kce_test.go:43: expected '110', got '01101'\n    ---\
    \ FAIL: TestSolve/test_num__2 (0.00s)\n        tmpje4e4kce_test.go:43: expected\
    \ '1100', got '11001'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpje4e4kce_test.go:43:\
    \ expected '1001', got '101100'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n\
    \        tmpje4e4kce_test.go:43: expected '10010', got '1100001'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075446
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    digit := 0\n    for i := 0; i < N; i++ {\n        digit += int(N\
    \ % 2)\n        N /= 2\n    }\n    for i := 0; i < digit; i++ {\n        result\
    \ += \"1\"\n    }\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate\
    \ := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpamky28yx_test.go:45: expected '1', got '111'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpamky28yx_test.go:45: expected '110', got '111'\n    ---\
    \ FAIL: TestSolve/test_num__2 (0.00s)\n        tmpamky28yx_test.go:45: expected\
    \ '1100', got '111'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpamky28yx_test.go:45:\
    \ expected '1001', got '111'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n  \
    \      tmpamky28yx_test.go:45: expected '10010', got '111'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.008s\nFAIL\n"
  timestamp: 1660075450
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    sum := 0\n    for i < N {\n        sum += int(N % 10)\
    \ * uint64(i)\n        N = N / 10\n        i++\n    }\n    result += \"0\"\n \
    \   for sum > 0 {\n        result += \"1\"\n        sum--\n    }\n    return result\n\
    }\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1000), expected: \"1\" },\n     { actual: candidate(150),\
    \ expected: \"110\" },\n     { actual: candidate(147), expected: \"1100\" },\n\
    \     { actual: candidate(333), expected: \"1001\" },\n     { actual: candidate(963),\
    \ expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpnthyl90w_test.go:20:16: invalid operation: int(N % 10) * uint64(i) (mismatched
    types int and uint64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075450
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    base := 2\n    for i := 0; i < N; i++ {\n        result += \"1\"\
    \n    }\n    for i := N; i > 0; i-- {\n        result += \"0\"\n    }\n    return\
    \ fmt.Sprintf(\"%b\", []byte(result))\n}\n\nfunc TestSolve(t *testing.T) {\n \
    \ candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000), expected:\
    \ \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n     { actual:\
    \ candidate(147), expected: \"1100\" },\n     { actual: candidate(333), expected:\
    \ \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp44xsffc5_test.go:17:5: base declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075450
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    var\
    \ result string\n    var sum, i int\n    for i = 1; i <= N; i++ {\n        sum\
    \ += int(N / i)\n    }\n    result = fmt.Sprintf(\"%b\", sum)\n    return result\n\
    }\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1000), expected: \"1\" },\n     { actual: candidate(150),\
    \ expected: \"110\" },\n     { actual: candidate(147), expected: \"1100\" },\n\
    \     { actual: candidate(333), expected: \"1001\" },\n     { actual: candidate(963),\
    \ expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpe9lfx9me_test.go:42: expected '1', got '1101110011101'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpe9lfx9me_test.go:42: expected '110',\
    \ got '1100001100'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpe9lfx9me_test.go:42:\
    \ expected '1100', got '1011111000'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpe9lfx9me_test.go:42: expected '1001', got '11111000100'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpe9lfx9me_test.go:42: expected '10010',\
    \ got '1101001110011'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075450
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    s :=\
    \ \"\"\n    i := 0\n    for N > 0 {\n        s += fmt.Sprintf(\"%0*b\", i, N)\n\
    \        i ++\n        N /= 10\n    }\n    return s\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpm1tzku6h_test.go:43: expected '1', got '111110100011001001010001'\n\
    \    --- FAIL: TestSolve/test_num__1 (0.00s)\n        tmpm1tzku6h_test.go:43:\
    \ expected '110', got '10010110111101'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n\
    \        tmpm1tzku6h_test.go:43: expected '1100', got '10010011111001'\n    ---\
    \ FAIL: TestSolve/test_num__3 (0.00s)\n        tmpm1tzku6h_test.go:43: expected\
    \ '1001', got '10100110110000111'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n\
    \        tmpm1tzku6h_test.go:43: expected '10010', got '111100001111000001001'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075450
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    for i < N {\n        result += \"1\"\n        i++\n\
    \    }\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate :=\
    \ solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpk7u3oeym_test.go:42: expected '1', got '1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__1 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '110', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '1100', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '1001', got '11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
  timestamp: 1660075446
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    base := 2\n    for i := 0; i < N; i++ {\n        result += \"1\"\
    \n    }\n    for i := len(result) - 1; i >= 0; i-- {\n        result += \"0\"\n\
    \    }\n    return fmt.Sprintf(\"%b\", []byte(result))\n}\n\nfunc TestSolve(t\
    \ *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmptv061zee_test.go:17:5: base declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075450
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    for i < N {\n        result += \"1\"\n        i++\n\
    \    }\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate :=\
    \ solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpk7u3oeym_test.go:42: expected '1', gotn\
    \    --- FAIL: TestSolve/test_num__1 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '110', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '1100', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '1001', got '11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
  timestamp: 1660075446
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    sum := 0\n    for i < N {\n        sum += int(N % 10)\
    \ * uint64(i)\n        N /= 10\n        i++\n    }\n    for i := 0; i < 64; i++\
    \ {\n        if sum > 0 {\n            result += fmt.Sprintf(\"%0*d\", i, sum)\n\
    \            sum = 0\n        }\n    }\n    return result\n}\n\nfunc TestSolve(t\
    \ *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpcg0ysrkm_test.go:20:16: invalid operation: int(N % 10) * uint64(i) (mismatched
    types int and uint64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075450
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    for i < N {\n        result += \"1\"\n        i++\n\
    \    }\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate :=\
    \ solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpk7u3oeym_test.go:42: expected '1', gotn\
    \    --- FAIL: TestSolve/test_num__1 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '110', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '1100', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '1001', got '11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
  timestamp: 1660075446
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    for i := 0; i < N; i++ {\n        result += \"1\"\n    }\n    return\
    \ result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1000), expected: \"1\" },\n     { actual:\
    \ candidate(150), expected: \"110\" },\n     { actual: candidate(147), expected:\
    \ \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n     { actual:\
    \ candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpllqay01h_test.go:40: expected '1', got '1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__1 (0.00s)\n        tmpllqay01h_test.go:40:\
    \ expected '110', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpllqay01h_test.go:40:\
    \ expected '1100', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpllqay01h_test.go:40:\
    \ expected '1001', got '11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
  timestamp: 1660075446
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    digit := 0\n    carryOn := true\n    for digit < N {\n        digit\
    \ <<= 1\n        if carryOn {\n            digit += 1\n            carryOn = false\n\
    \        }\n        result += fmt.Sprintf(\"%v\", digit)\n    }\n    return result\n\
    }\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1000), expected: \"1\" },\n     { actual: candidate(150),\
    \ expected: \"110\" },\n     { actual: candidate(147), expected: \"1100\" },\n\
    \     { actual: candidate(333), expected: \"1001\" },\n     { actual: candidate(963),\
    \ expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpl0749pfz_test.go:47: expected '1', got '12481632641282565121024'\n\
    \    --- FAIL: TestSolve/test_num__1 (0.00s)\n        tmpl0749pfz_test.go:47:\
    \ expected '110', got '1248163264128256'\n    --- FAIL: TestSolve/test_num__2\
    \ (0.00s)\n        tmpl0749pfz_test.go:47: expected '1100', got '1248163264128256'\n\
    \    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpl0749pfz_test.go:47:\
    \ expected '1001', got '1248163264128256512'\n    --- FAIL: TestSolve/test_num__4\
    \ (0.00s)\n        tmpl0749pfz_test.go:47: expected '10010', got '12481632641282565121024'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075450
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    var\
    \ result string\n    \n    for i := 0; i < N; i++ {\n        result += \"1\"\n\
    \    }\n    \n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate\
    \ := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpyeqmoczz_test.go:42: expected '1', gotn\
    \    --- FAIL: TestSolve/test_num__1 (0.00s)\n        tmpyeqmoczz_test.go:42:\
    \ expected '110', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpyeqmoczz_test.go:42:\
    \ expected '1100', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpyeqmoczz_test.go:42:\
    \ expected '1001', got '11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
  timestamp: 1660075446
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    digit := 0\n    for i := 0; i < N; i++ {\n        digit += int(N\
    \ % 2)\n        N /= 2\n    }\n    for i := 0; i < digit; i++ {\n        result\
    \ += \"1\"\n    }\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate\
    \ := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpamky28yx_test.go:45: expected '1', got '111'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpamky28yx_test.go:45: expected '110', got '111'\n    ---\
    \ FAIL: TestSolve/test_num__2 (0.00s)\n        tmpamky28yx_test.go:45: expected\
    \ '1100', got '111'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpamky28yx_test.go:45:\
    \ expected '1001', got '111'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n  \
    \      tmpamky28yx_test.go:45: expected '10010', got '111'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.008s\nFAIL\n"
  timestamp: 1660075450
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    for i := 0; i < N; i++ {\n        result += \"1\"\n    }\n    return\
    \ result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1000), expected: \"1\" },\n     { actual:\
    \ candidate(150), expected: \"110\" },\n     { actual: candidate(147), expected:\
    \ \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n     { actual:\
    \ candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpllqay01h_test.go:40: expected '1', gotn\
    \    --- FAIL: TestSolve/test_num__1 (0.00s)\n        tmpllqay01h_test.go:40:\
    \ expected '110', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpllqay01h_test.go:40:\
    \ expected '1100', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpllqay01h_test.go:40:\
    \ expected '1001', got '11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
  timestamp: 1660075446
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    digit := 0\n    for i := 0; i < N; i++ {\n        digit += int(N\
    \ % 2)\n        N /= 2\n    }\n    for i := 0; i < digit; i++ {\n        result\
    \ += \"1\"\n    }\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate\
    \ := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpamky28yx_test.go:45: expected '1', got '111'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpamky28yx_test.go:45: expected '110', got '111'\n    ---\
    \ FAIL: TestSolve/test_num__2 (0.00s)\n        tmpamky28yx_test.go:45: expected\
    \ '1100', got '111'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpamky28yx_test.go:45:\
    \ expected '1001', got '111'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n  \
    \      tmpamky28yx_test.go:45: expected '10010', got '111'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.008s\nFAIL\n"
  timestamp: 1660075450
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    for i < N {\n        result += \"1\"\n        i++\n\
    \    }\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate :=\
    \ solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpk7u3oeym_test.go:42: expected '1', gotn\
    \    --- FAIL: TestSolve/test_num__1 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '110', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '1100', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '1001', got '11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
  timestamp: 1660075446
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    base := 1\n    for i := 0; i < N; i++ {\n        result += \"1\"\
    \n    }\n    for i := N - 1; i >= 0; i-- {\n        result += \"0\"\n    }\n \
    \   return fmt.Sprintf(\"%b\", []byte(result))\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp6vwf5vyc_test.go:17:5: base declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075450
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    for N > 0 {\n        result += \"1\"\n        N /=\
    \ 2\n        i++\n    }\n    return result\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmp825hsyvh_test.go:43: expected '1', got '1111111111'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmp825hsyvh_test.go:43: expected '110',\
    \ got '11111111'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmp825hsyvh_test.go:43:\
    \ expected '1100', got '11111111'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmp825hsyvh_test.go:43: expected '1001', got '111111111'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmp825hsyvh_test.go:43: expected '10010',\
    \ got '1111111111'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075453
- exit_code: null
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    for N > 0 {\n        result += \"1\"\n        N /=\
    \ 2\n    }\n    for ; i < len(result); i++ {\n        result += \"0\"\n    }\n\
    \    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n   \
    \  { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660075464
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    var\
    \ result string\n    var i int\n    var j int\n    var k int\n    var sum int\n\
    \    var temp int\n    var result string\n\n    for i = N; i > 0; i-- {\n    \
    \    sum = 0\n        k = i\n        while k > 0 {\n            sum += k%10\n\
    \            k /= 10\n        }\n        temp = sum\n        result = fmt.Sprintf(\"\
    %0*d\", i, sum)\n        result = result[:len(result)-1]\n        result = result\
    \ + string(temp%2)\n    }\n    return result\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpnnuqxiar_test.go:27:15: expected '';'', found k

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660075452
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    for i < N {\n        result += \"1\"\n        i++\n\
    \    }\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate :=\
    \ solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpk7u3oeym_test.go:42: expected '1', gotn\
    \    --- FAIL: TestSolve/test_num__1 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '110', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '1100', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '1001', got '11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
  timestamp: 1660075446
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    var\
    \ result string\n    var i int\n    var sum int\n    for i = 0; i <= N; i++ {\n\
    \        sum += int(N % 10) * i\n        N /= 10\n    }\n    result = fmt.Sprintf(\"\
    %v\", sum)\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate\
    \ := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmp8vm1o59v_test.go:44: expected '1', got '0'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmp8vm1o59v_test.go:44: expected '110', got '5'\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmp8vm1o59v_test.go:44: expected '1100',\
    \ got '4'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmp8vm1o59v_test.go:44:\
    \ expected '1001', got '9'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n    \
    \    tmp8vm1o59v_test.go:44: expected '10010', got '24'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660075453
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    digit := 0\n    carryOn := true\n    for i := 0; i < N; i++ {\n\
    \        digit = N % 10\n        result += fmt.Sprintf(\"%d\", digit)\n      \
    \  N = N / 10\n        if carryOn {\n            result += fmt.Sprintf(\"1\")\n\
    \            carryOn = false\n        }\n    }\n    return result\n}\n\nfunc TestSolve(t\
    \ *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmppucsgamv_test.go:48: expected '1', got '0100'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmppucsgamv_test.go:48: expected '110', got '015'\n    ---\
    \ FAIL: TestSolve/test_num__2 (0.00s)\n        tmppucsgamv_test.go:48: expected\
    \ '1100', got '714'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmppucsgamv_test.go:48:\
    \ expected '1001', got '3133'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n \
    \       tmppucsgamv_test.go:48: expected '10010', got '3169'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660075454
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    s :=\
    \ \"\"\n    for i := 0; i < N; i++ {\n        s += fmt.Sprintf(\"%b\", N%2)\n\
    \        N /= 2\n    }\n    return s\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate\
    \ := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmp436h3vem_test.go:41: expected '1', got '0001011'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmp436h3vem_test.go:41: expected '110', got '01101'\n    ---\
    \ FAIL: TestSolve/test_num__2 (0.00s)\n        tmp436h3vem_test.go:41: expected\
    \ '1100', got '11001'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmp436h3vem_test.go:41:\
    \ expected '1001', got '101100'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n\
    \        tmp436h3vem_test.go:41: expected '10010', got '1100001'\nFAIL\nFAIL\t\
    command-line-arguments\t0.007s\nFAIL\n"
  timestamp: 1660075446
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    for N > 0 {\n        result += \"1\"\n        N /=\
    \ 10\n        i++\n    }\n    return result\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpm4p8czlf_test.go:43: expected '1', got '1111'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpm4p8czlf_test.go:43: expected '110', got '111'\n    ---\
    \ FAIL: TestSolve/test_num__2 (0.00s)\n        tmpm4p8czlf_test.go:43: expected\
    \ '1100', got '111'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpm4p8czlf_test.go:43:\
    \ expected '1001', got '111'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n  \
    \      tmpm4p8czlf_test.go:43: expected '10010', got '111'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.006s\nFAIL\n"
  timestamp: 1660075446
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    digit := 0\n    sum := 0\n    for i := 0; i < N; i++ {\n      \
    \  digit = N % 10\n        sum += digit\n        N = N / 10\n    }\n    result\
    \ += \"0\"\n    for i := 0; i < sum; i++ {\n        result += \"1\"\n    }\n \
    \   return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n   \
    \  { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpkeltipv4_test.go:48: expected '1', got '0'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpkeltipv4_test.go:48: expected '110', got '011111'\n    ---\
    \ FAIL: TestSolve/test_num__2 (0.00s)\n        tmpkeltipv4_test.go:48: expected\
    \ '1100', got '011111111111'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n  \
    \      tmpkeltipv4_test.go:48: expected '1001', got '0111111111'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpkeltipv4_test.go:48: expected '10010',\
    \ got '0111111111111111111'\nFAIL\nFAIL\tcommand-line-arguments\t0.008s\nFAIL\n"
  timestamp: 1660075454
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    for N > 0 {\n        result += \"1\"\n        N /=\
    \ 10\n        i++\n    }\n    return result\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpm4p8czlf_test.go:43: expected '1', got '1111'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpm4p8czlf_test.go:43: expected '110', got '111'\n    ---\
    \ FAIL: TestSolve/test_num__2 (0.00s)\n        tmpm4p8czlf_test.go:43: expected\
    \ '1100', got '111'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpm4p8czlf_test.go:43:\
    \ expected '1001', got '111'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n  \
    \      tmpm4p8czlf_test.go:43: expected '10010', got '111'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.006s\nFAIL\n"
  timestamp: 1660075446
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    digit := 0\n    for i := 0; i < N; i++ {\n        digit += int(N\
    \ % 2)\n        N = N / 2\n    }\n    for i := 0; i < N; i++ {\n        result\
    \ += fmt.Sprintf(\"%d\", digit)\n        digit = 0\n    }\n    return result\n\
    }\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1000), expected: \"1\" },\n     { actual: candidate(150),\
    \ expected: \"110\" },\n     { actual: candidate(147), expected: \"1100\" },\n\
    \     { actual: candidate(333), expected: \"1001\" },\n     { actual: candidate(963),\
    \ expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpq5d0fq8__test.go:46: expected '1', got '3000000'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpq5d0fq8__test.go:46: expected '110', got '3000'\n    ---\
    \ FAIL: TestSolve/test_num__2 (0.00s)\n        tmpq5d0fq8__test.go:46: expected\
    \ '1100', got '3000'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpq5d0fq8__test.go:46:\
    \ expected '1001', got '30000'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n\
    \        tmpq5d0fq8__test.go:46: expected '10010', got '3000000'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075454
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    digit := 0\n    i := 0\n    for i < N {\n        digit = N % 2\n\
    \        result += string(digit)\n        N = N / 2\n        i++\n    }\n    return\
    \ result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1000), expected: \"1\" },\n     { actual:\
    \ candidate(150), expected: \"110\" },\n     { actual: candidate(147), expected:\
    \ \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n     { actual:\
    \ candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test

    /tmp/tmpzrqbqjq9_test.go:21:19: conversion from int to string yields a string
    of one rune, not a string of digits (did you mean fmt.Sprint(x)?)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075454
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    base := 2\n    sum := 0\n    for i := 0; i < N; i++ {\n       \
    \ sum += int(N % base) * base\n        N = N / base\n    }\n    result = fmt.Sprintf(\"\
    %v\", sum)\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate\
    \ := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmp1xaaeqvi_test.go:44: expected '1', got '6'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmp1xaaeqvi_test.go:44: expected '110', got '6'\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmp1xaaeqvi_test.go:44: expected '1100',\
    \ got '6'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmp1xaaeqvi_test.go:44:\
    \ expected '1001', got '6'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n    \
    \    tmp1xaaeqvi_test.go:44: expected '10010', got '6'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660075454
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    sum := 0\n    for i < N {\n        sum += int(N % 10)\
    \ * uint64(i)\n        i /= 10\n    }\n    result += fmt.Sprintf(\"%0*b\\n\",\
    \ len(fmt.Sprintf(\"%0*b\\n\", len(fmt.Sprintf(\"%0*b\\n\", len(fmt.Sprintf(\"\
    %0*b\\n\", len(fmt.Sprintf(\"%0*b\\n\", len(fmt.Sprintf(\"%0*b\\n\", len(fmt.Sprintf(\"\
    %0*b\\n\", len(fmt.Sprintf(\"%0*b\\n\", len(fmt.Sprintf(\"%0*b\\n\", len(fmt.Sprintf(\"\
    %0*b\\n\", len(fmt.Sprintf(\"%0*b\\n\", len(fmt.Sprintf(\"%0*b\\n\", len(fmt.Sprintf(\"\
    %0*b\\n\", len(fmt.Sprintf(\"%0*b\\n\", len(fmt.Sprintf(\"%0*b\\n\", len(fmt.Sprintf(\"\
    %0*b\\n\", len(fmt.Sprintf(\"%0*b\\n\", len(fmt.Sprintf(\"%0*b\\n\", len(fmt.Sprintf(\"\
    %0*b\\n\", len(fmt.Sprintf(\"%0*b\\n\", len(fmt.Sprintf(\"%0*b\\n\", len(fmt.Sprintf(\"\
    %0*b\\n\", len(fmt.Sprintf(\"%0*b\\n\", len(fmt.Sprintf(\"%0*b\\n\", len(fmt.Sprintf(\"\
    %0*b\\n\", len(fmt.Sprintf(\"%0*b\\n\", len(fmt.Sprintf(\"%0*b\\n\", len(fmt.Sprintf(\"\
    %0*b\\n\", len(fmt.Sprintf(\"%0*b\\n\", len(fmt.Sprintf(\"%0*b\\n\", len(fmt.Sprintf(\"\
    %0*b\\n\", len(fmt.Sprintf(\"%0*b\\n\", len(fmt.Sprintf(\"%0*b\\n\", len(fmt.Sprintf(\"\
    %0*b\\n\", len(fmt.Sprintf(\"%0*b\\n\", len(fmt.Sprintf(\"%0*b\\n\", len(fmt.Sprintf(\"\
    %0*b\\n\", len(fmt.Sprintf(\"%0*b\\n\", len(fmt.Sprintf(\"%0*b\\n\", len(fmt.Sprintf(\"\
    %0*b\\n\", len(fmt.Sprintf(\"%0*b\\n\", len(fmt.Sprintf(\"%0*b\\n\", len(fmt.Sprintf(\"\
    %0*b\\n\", len(fmt.Sprintf(\"%0*b\\n\", len(fmt.Sprintf(\"%0*b\\n\", len(fmt.Sprintf(\"\
    %0*b\\n\", len(fmt.Sprintf(\"%0*b\\n\", len(fmt.Sprintf(\"%0*b\\n\", len(fmt.Sprintf(\"\
    %0*b\\n\", len(fmt.Sprintf(\"%0*b\\n\", len(fmt.Sprintf(\"%0*b\\n\", len(fmt.Sprintf(\"\
    %0*b\\n\", len(fmt.Sprintf(\"%0\nfunc TestSolve(t *testing.T) {\n  candidate :=\
    \ solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmp3klu88j9_test.go:23:1379: string literal not terminated

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660075452
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    var\
    \ result string\n    var i int\n    var sum int\n    for i = 1; i <= N; i++ {\n\
    \        sum += int(N / i)\n    }\n    for i = 1; i <= sum; i++ {\n        result\
    \ = fmt.Sprintf(\"%s%d\", result, i)\n    }\n    return result\n}\n\nfunc TestSolve(t\
    \ *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.08s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmp8abicoml_test.go:45: expected '1', got '12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394959697989910010110210310410510610710810911011111211311411511611711811912012112212312412512612712812913013113213313413513613713813914014114214314414514614714814915015115215315415515615715815916016116216316416516616716816917017117217317417517617717817918018118218318418518618718818919019119219319419519619719819920020120220320420520620720820921021121221321421521621721821922022122222322422522622722822923023123223323423523623723823924024124224324424524624724824925025125225325425525625725825926026126226326426526626726826927027127227327427527627727827928028128228328428528628728828929029129229329429529629729829930030130230330430530630730830931031131231331431531631731831932032132232332432532632732832933033133233333433533633733833934034134234334434534634734834935035135235335435535635735835936036136236336436536636736836937037137237337437537637737837938038138238338438538638738838939039139239339439539639739839940040140240340440540640740840941041141241341441541641741841942042142242342442542642742842943043143243343443543643743843944044144244344444544644744844945045145245345445545645745845946046146246346446546646746846947047147247347447547647747847948048148248348448548648748848949049149249349449549649749849950050150250350450550650750850951051151251351451551651751851952052152252352452552652752852953053153253353453553653753853954054154254354454554654754854955055155255355455555655755855956056156256356456556656756856957057157257357457557657757857958058158258358458558658758858959059159259359459559659759859960060160260360460560660760860961061161261361461561661761861962062162262362462562662762862963063163263363463563663763863964064164264364464564664764864965065165265365465565665765865966066166266366466566666766866967067167267367467567667767"
  timestamp: 1660075454
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    digit := 0\n    sum := 0\n    for i := 0; i < N; i++ {\n      \
    \  digit += N % 2\n        sum += digit\n        N /= 2\n    }\n    result +=\
    \ \"0\"\n    for i := 1; i <= sum; i++ {\n        result += \"1\"\n    }\n   \
    \ return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n   \
    \  { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpt8w5xdj6_test.go:48: expected '1', got '01111111'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpt8w5xdj6_test.go:48: expected '110', got '011111111'\n \
    \   --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpt8w5xdj6_test.go:48: expected\
    \ '1100', got '01111111111'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n   \
    \     tmpt8w5xdj6_test.go:48: expected '1001', got '01111111111111'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpt8w5xdj6_test.go:48: expected '10010',\
    \ got '011111111111111'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075454
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    base := 1\n    digit := 0\n    for i := 0; i < N; i++ {\n     \
    \   digit += int(N % base) // in binary\n        base /= 10\n    }\n    result\
    \ += \"0\"\n    for i := 1; i < digit; i++ {\n        result += \"1\"\n    }\n\
    \    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n   \
    \  { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\npanic: runtime error: integer divide by zero\
    \ [recovered]\n\tpanic: runtime error: integer divide by zero\n\ngoroutine 34\
    \ [running]:\ntesting.tRunner.func1.2({0x5038a0, 0x5f29a0})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x5038a0, 0x5f29a0})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.solve(...)\n\t/tmp/tmphma7n4cj_test.go:20\n\
    command-line-arguments_test.TestSolve(0x0?)\n\t/tmp/tmphma7n4cj_test.go:37 +0x70a\n\
    testing.tRunner(0xc0001191e0, 0x528f50)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.008s\nFAIL\n"
  timestamp: 1660075454
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    base := 2\n    for i := 0; i < N; i++ {\n        result += \"1\"\
    \n    }\n    for i := N; i > 0; i-- {\n        result += \"0\"\n    }\n    for\
    \ i := len(result) - 1; i >= 0; i-- {\n        result += \"0\"\n    }\n    return\
    \ result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1000), expected: \"1\" },\n     { actual:\
    \ candidate(150), expected: \"110\" },\n     { actual: candidate(147), expected:\
    \ \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n     { actual:\
    \ candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpuk8aclaa_test.go:17:5: base declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075453
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    digit := 0\n    digit := N / 2\n    result := fmt.Sprintf(\"%v\"\
    , digit)\n    for digit > 0 {\n        digit /= 2\n        result += fmt.Sprintf(\"\
    %v\", digit)\n    }\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n\
    \  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000), expected:\
    \ \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n     { actual:\
    \ candidate(147), expected: \"1100\" },\n     { actual: candidate(333), expected:\
    \ \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp8waqarb9_test.go:18:11: no new variables on left side of :=

    /tmp/tmp8waqarb9_test.go:19:12: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075453
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    digit := 0\n    sum := 0\n    for i := 0; i < N; i++ {\n      \
    \  digit += int(N % 2)\n        sum += digit\n        N = N / 2\n    }\n    for\
    \ i := 0; i < sum; i++ {\n        result += fmt.Sprintf(\"%d\", digit)\n     \
    \   digit = 0\n    }\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n\
    \  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000), expected:\
    \ \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n     { actual:\
    \ candidate(147), expected: \"1100\" },\n     { actual: candidate(333), expected:\
    \ \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmp7yvdnmtz_test.go:48: expected '1', got '3000000'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmp7yvdnmtz_test.go:48: expected '110', got '30000000'\n  \
    \  --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmp7yvdnmtz_test.go:48: expected\
    \ '1100', got '3000000000'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n    \
    \    tmp7yvdnmtz_test.go:48: expected '1001', got '3000000000000'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmp7yvdnmtz_test.go:48: expected '10010',\
    \ got '30000000000000'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075454
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    var\
    \ result string\n    var sum = 0\n    for i := 0; i < N; i++ {\n        sum +=\
    \ int(N % 10) * pow(2, i)\n        N /= 10\n    }\n    result = fmt.Sprintf(\"\
    %v\", sum)\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate\
    \ := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaoy596f8_test.go:19:30: undefined: pow

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075453
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    for N > 0 {\n        result += \"1\"\n        N /=\
    \ 10\n        i++\n    }\n    return result\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpm4p8czlf_test.go:43: expected '1', got '1111'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpm4p8czlf_test.go:43: expected '110', got '111'\n    ---\
    \ FAIL: TestSolve/test_num__2 (0.00s)\n        tmpm4p8czlf_test.go:43: expected\
    \ '1100', got '111'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpm4p8czlf_test.go:43:\
    \ expected '1001', got '111'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n  \
    \      tmpm4p8czlf_test.go:43: expected '10010', got '111'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.006s\nFAIL\n"
  timestamp: 1660075446
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    for N > 0 {\n        result += \"1\"\n        N /=\
    \ 10\n        i++\n    }\n    return result\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpm4p8czlf_test.go:43: expected '1', got '1111'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpm4p8czlf_test.go:43: expected '110', got '111'\n    ---\
    \ FAIL: TestSolve/test_num__2 (0.00s)\n        tmpm4p8czlf_test.go:43: expected\
    \ '1100', got '111'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpm4p8czlf_test.go:43:\
    \ expected '1001', got '111'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n  \
    \      tmpm4p8czlf_test.go:43: expected '10010', got '111'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.006s\nFAIL\n"
  timestamp: 1660075446
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    sum := 0\n    for i < N {\n        sum += int(N % 10)\
    \ * pow(2, i)\n        i ++\n        N /= 10\n    }\n    result = fmt.Sprintf(\"\
    %v\", sum)\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate\
    \ := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp2xrnu_yo_test.go:20:30: undefined: pow

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075454
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    for N > 0 {\n        result += \"1\"\n        N = N\
    \ / 2\n    }\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate\
    \ := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp9obmk2dh_test.go:17:5: i declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075454
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    s :=\
    \ \"\"\n    for i := 0; i < N; i++ {\n        s += fmt.Sprintf(\"%b\", N%2)\n\
    \        N /= 2\n    }\n    return s\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate\
    \ := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmp436h3vem_test.go:41: expected '1', got '0001011'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmp436h3vem_test.go:41: expected '110', got '01101'\n    ---\
    \ FAIL: TestSolve/test_num__2 (0.00s)\n        tmp436h3vem_test.go:41: expected\
    \ '1100', got '11001'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmp436h3vem_test.go:41:\
    \ expected '1001', got '101100'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n\
    \        tmp436h3vem_test.go:41: expected '10010', got '1100001'\nFAIL\nFAIL\t\
    command-line-arguments\t0.007s\nFAIL\n"
  timestamp: 1660075446
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    sum := 0\n    for i := 0; i < N; i++ {\n        sum += int(N %\
    \ 10) * pow(2, i)\n        N /= 10\n    }\n    fmt.Println(sum)\n    for i :=\
    \ 0; i < len(result); i++ {\n        if sum > 0 {\n            result += \"1\"\
    \n            sum -= int(result[i])\n        } else {\n            result += \"\
    0\"\n        }\n    }\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n\
    \  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000), expected:\
    \ \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n     { actual:\
    \ candidate(147), expected: \"1100\" },\n     { actual: candidate(333), expected:\
    \ \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp4iq6s9_7_test.go:19:30: undefined: pow

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075454
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    sum := 0\n    for i < N {\n        sum += int(N % 10)\
    \ * pow(2, i)\n        N /= 10\n        i++\n    }\n    for ; N > 0; N-- {\n \
    \       result += strconv.Itoa(int(N % 2)) + \" \"\n        N /= 2\n    }\n  \
    \  return fmt.Sprintf(\"%d\", sum)\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate\
    \ := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmphy9q7ixj_test.go:20:30: undefined: pow

    /tmp/tmphy9q7ixj_test.go:25:19: undefined: strconv

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075454
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    s :=\
    \ \"\"\n    for i := 0; i < N; i++ {\n        s += fmt.Sprintf(\"%b\", N%2)\n\
    \        N /= 2\n    }\n    return s\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate\
    \ := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmp436h3vem_test.go:41: expected '1', got '0001011'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmp436h3vem_test.go:41: expected '110', got '01101'\n    ---\
    \ FAIL: TestSolve/test_num__2 (0.00s)\n        tmp436h3vem_test.go:41: expected\
    \ '1100', got '11001'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmp436h3vem_test.go:41:\
    \ expected '1001', got '101100'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n\
    \        tmp436h3vem_test.go:41: expected '10010', got '1100001'\nFAIL\nFAIL\t\
    command-line-arguments\t0.007s\nFAIL\n"
  timestamp: 1660075446
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    s :=\
    \ \"\"\n    for i := 0; i < N; i++ {\n        s += fmt.Sprintf(\"%b\", N%2)\n\
    \        N /= 2\n    }\n    return s\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate\
    \ := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmp436h3vem_test.go:41: expected '1', got '0001011'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmp436h3vem_test.go:41: expected '110', got '01101'\n    ---\
    \ FAIL: TestSolve/test_num__2 (0.00s)\n        tmp436h3vem_test.go:41: expected\
    \ '1100', got '11001'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmp436h3vem_test.go:41:\
    \ expected '1001', got '101100'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n\
    \        tmp436h3vem_test.go:41: expected '10010', got '1100001'\nFAIL\nFAIL\t\
    command-line-arguments\t0.007s\nFAIL\n"
  timestamp: 1660075446
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    for N > 0 {\n        result += \"1\"\n        N /=\
    \ 10\n        i++\n    }\n    return result\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpm4p8czlf_test.go:43: expected '1', got '1111'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpm4p8czlf_test.go:43: expected '110', got '111'\n    ---\
    \ FAIL: TestSolve/test_num__2 (0.00s)\n        tmpm4p8czlf_test.go:43: expected\
    \ '1100', got '111'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpm4p8czlf_test.go:43:\
    \ expected '1001', got '111'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n  \
    \      tmpm4p8czlf_test.go:43: expected '10010', got '111'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.006s\nFAIL\n"
  timestamp: 1660075446
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    sum := 0\n    for i < N {\n        sum += int(N % 10)\
    \ * pow(2, i)\n        N /= 10\n        i++\n    }\n    for ; N > 0; N/= 10 {\n\
    \        result += fmt.Sprintf(\"%d\", int(N % 10) * pow(2, i))\n        i++\n\
    \    }\n    return fmt.Sprintf(\"%d\", sum)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpjj5qn05z_test.go:20:30: undefined: pow

    /tmp/tmpjj5qn05z_test.go:25:51: undefined: pow

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075454
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    s :=\
    \ \"\"\n    i := 0\n    for i < N {\n        s += fmt.Sprintf(\"%b\", N%2)\n \
    \       N = N / 2\n        i++\n    }\n    return s\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmplhhb30rp_test.go:43: expected '1', got '0001011'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmplhhb30rp_test.go:43: expected '110', got '01101'\n    ---\
    \ FAIL: TestSolve/test_num__2 (0.00s)\n        tmplhhb30rp_test.go:43: expected\
    \ '1100', got '11001'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmplhhb30rp_test.go:43:\
    \ expected '1001', got '101100'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n\
    \        tmplhhb30rp_test.go:43: expected '10010', got '1100001'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075454
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    s :=\
    \ \"\"\n    i := 0\n    for i < N {\n        s += fmt.Sprintf(\"%b\", N%2)\n \
    \       N /= 2\n        i++\n    }\n    return s\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpje4e4kce_test.go:43: expected '1', got '0001011'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpje4e4kce_test.go:43: expected '110', got '01101'\n    ---\
    \ FAIL: TestSolve/test_num__2 (0.00s)\n        tmpje4e4kce_test.go:43: expected\
    \ '1100', got '11001'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpje4e4kce_test.go:43:\
    \ expected '1001', got '101100'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n\
    \        tmpje4e4kce_test.go:43: expected '10010', got '1100001'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075446
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    for N > 0 {\n        result += \"1\"\n        N /=\
    \ 10\n        i++\n    }\n    return result\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpm4p8czlf_test.go:43: expected '1', got '1111'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpm4p8czlf_test.go:43: expected '110', got '111'\n    ---\
    \ FAIL: TestSolve/test_num__2 (0.00s)\n        tmpm4p8czlf_test.go:43: expected\
    \ '1100', got '111'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpm4p8czlf_test.go:43:\
    \ expected '1001', got '111'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n  \
    \      tmpm4p8czlf_test.go:43: expected '10010', got '111'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.006s\nFAIL\n"
  timestamp: 1660075446
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    for N > 0 {\n        result += \"1\"\n        N /=\
    \ 10\n        i++\n    }\n    return fmt.Sprintf(\"%0*d\", i, result)\n}\n\nfunc\
    \ TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(1000), expected: \"1\" },\n     { actual: candidate(150),\
    \ expected: \"110\" },\n     { actual: candidate(147), expected: \"1100\" },\n\
    \     { actual: candidate(333), expected: \"1001\" },\n     { actual: candidate(963),\
    \ expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test

    /tmp/tmpgqbamc86_test.go:23:12: fmt.Sprintf format %0*d has arg result of wrong
    type string

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075456
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    s :=\
    \ \"\"\n    for i := 0; i < N; i++ {\n        s += fmt.Sprintf(\"%b\", N%2)\n\
    \        N /= 2\n    }\n    return s\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate\
    \ := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmp436h3vem_test.go:41: expected '1', got '0001011'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmp436h3vem_test.go:41: expected '110', got '01101'\n    ---\
    \ FAIL: TestSolve/test_num__2 (0.00s)\n        tmp436h3vem_test.go:41: expected\
    \ '1100', got '11001'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmp436h3vem_test.go:41:\
    \ expected '1001', got '101100'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n\
    \        tmp436h3vem_test.go:41: expected '10010', got '1100001'\nFAIL\nFAIL\t\
    command-line-arguments\t0.007s\nFAIL\n"
  timestamp: 1660075446
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    digit := 0\n    for i := 0; i < N; i++ {\n        digit += int(N\
    \ % 2)\n        N /= 2\n    }\n    for i := 0; i < digit; i++ {\n        result\
    \ += \"1\"\n    }\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate\
    \ := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpamky28yx_test.go:45: expected '1', got '111'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpamky28yx_test.go:45: expected '110', got '111'\n    ---\
    \ FAIL: TestSolve/test_num__2 (0.00s)\n        tmpamky28yx_test.go:45: expected\
    \ '1100', got '111'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpamky28yx_test.go:45:\
    \ expected '1001', got '111'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n  \
    \      tmpamky28yx_test.go:45: expected '10010', got '111'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.008s\nFAIL\n"
  timestamp: 1660075450
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    sum := 0\n    for i := 0; i < N; i++ {\n        sum += int(N %\
    \ 10) * uint64(i)\n        N /= 10\n    }\n    for i := 0; i < len(strconv.Itoa(sum));\
    \ i++ {\n        result += strconv.Itoa(int(sum % 2))\n        sum /= 2\n    }\n\
    \    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n   \
    \  { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpso0_vr56_test.go:19:16: invalid operation: int(N % 10) * uint64(i) (mismatched
    types int and uint64)

    /tmp/tmpso0_vr56_test.go:22:25: undefined: strconv

    /tmp/tmpso0_vr56_test.go:23:19: undefined: strconv

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075456
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    base := 1\n    sum := 0\n    for i := 0; i < N; i++ {\n       \
    \ sum += int(N % base) * base\n        N = N / base\n        base = base * 2\n\
    \    }\n    for i := 0; i < sum; i++ {\n        result += fmt.Sprintf(\"%v\",\
    \ int(N % base))\n        N = N / base\n        base = base * 2\n    }\n    return\
    \ result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1000), expected: \"1\" },\n     { actual:\
    \ candidate(150), expected: \"110\" },\n     { actual: candidate(147), expected:\
    \ \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n     { actual:\
    \ candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\npanic: runtime error: integer divide by zero\
    \ [recovered]\n\tpanic: runtime error: integer divide by zero\n\ngoroutine 20\
    \ [running]:\ntesting.tRunner.func1.2({0x5028a0, 0x5f19a0})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x5028a0, 0x5f19a0})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.solve(0xc00006b728?)\n\t/tmp/tmpcaolab2v_test.go:25\
    \ +0x137\ncommand-line-arguments_test.TestSolve(0x0?)\n\t/tmp/tmpcaolab2v_test.go:39\
    \ +0x46\ntesting.tRunner(0xc00009b860, 0x527f50)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    for i := 0; i < N; i++ {\n        result += \"1\"\n    }\n    return\
    \ result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1000), expected: \"1\" },\n     { actual:\
    \ candidate(150), expected: \"110\" },\n     { actual: candidate(147), expected:\
    \ \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n     { actual:\
    \ candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpllqay01h_test.go:40: expected '1', gotn\
    \    --- FAIL: TestSolve/test_num__1 (0.00s)\n        tmpllqay01h_test.go:40:\
    \ expected '110', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpllqay01h_test.go:40:\
    \ expected '1100', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpllqay01h_test.go:40:\
    \ expected '1001', got '11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
  timestamp: 1660075446
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    for N > 0 {\n        result += \"1\"\n        N /=\
    \ 10\n        i++\n    }\n    return result\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpm4p8czlf_test.go:43: expected '1', got '1111'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpm4p8czlf_test.go:43: expected '110', got '111'\n    ---\
    \ FAIL: TestSolve/test_num__2 (0.00s)\n        tmpm4p8czlf_test.go:43: expected\
    \ '1100', got '111'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpm4p8czlf_test.go:43:\
    \ expected '1001', got '111'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n  \
    \      tmpm4p8czlf_test.go:43: expected '10010', got '111'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.006s\nFAIL\n"
  timestamp: 1660075446
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    sum := 0\n    for i < N {\n        sum += int(N % 10)\
    \ * pow(2, i)\n        N /= 10\n        i++\n    }\n    for ; i < 10; i++ {\n\
    \        result += \"0\" + string(sum % 2)\n        sum /= 2\n    }\n    return\
    \ result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1000), expected: \"1\" },\n     { actual:\
    \ candidate(150), expected: \"110\" },\n     { actual: candidate(147), expected:\
    \ \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n     { actual:\
    \ candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpxdp6_rml_test.go:20:30: undefined: pow

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075457
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    s :=\
    \ \"\"\n    i := 0\n    sum := 0\n    for i < N {\n        sum += int(N % 10)\
    \ * uint64(i)\n        N = N / 10\n        i++\n    }\n    for i := 0; i < 64;\
    \ i++ {\n        if sum > 0 {\n            s += fmt.Sprintf(\"%0*d\", i, sum)\n\
    \            sum = 0\n        }\n    }\n    return s\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpqb7uo13e_test.go:20:16: invalid operation: int(N % 10) * uint64(i) (mismatched
    types int and uint64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075457
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    digit := 0\n    digit := N%2\n    result += \"0\"\n    N /= 2\n\
    \    for N > 0 {\n        digit *= 2\n        digit += N%2\n        result +=\
    \ \"1\"\n        N /= 2\n    }\n    return result\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpkwwmoufs_test.go:18:11: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075457
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    for N > 0 {\n        result += \"1\"\n        N /=\
    \ 10\n        i++\n    }\n    return fmt.Sprintf(\"%0*d\", i, result)\n}\n\nfunc\
    \ TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(1000), expected: \"1\" },\n     { actual: candidate(150),\
    \ expected: \"110\" },\n     { actual: candidate(147), expected: \"1100\" },\n\
    \     { actual: candidate(333), expected: \"1001\" },\n     { actual: candidate(963),\
    \ expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test

    /tmp/tmpgqbamc86_test.go:23:12: fmt.Sprintf format %0*d has arg result of wrong
    type string

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075456
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    for i < N {\n        result += \"1\"\n        i++\n\
    \    }\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate :=\
    \ solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpk7u3oeym_test.go:42: expected '1', gotn\
    \    --- FAIL: TestSolve/test_num__1 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '110', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '1100', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '1001', got '11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
  timestamp: 1660075446
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    var\
    \ result string\n    var i int\n    var sum int\n    for i = 0; i <= N; i++ {\n\
    \        sum += int(N % 10) * pow(2, i)\n        N = N / 10\n    }\n    result\
    \ = fmt.Sprintf(\"%b\", sum)\n    return result\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp2z1hb5kx_test.go:20:30: undefined: pow

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075457
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    for i := 0; i < N; i++ {\n        result += \"1\"\n    }\n    return\
    \ result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1000), expected: \"1\" },\n     { actual:\
    \ candidate(150), expected: \"110\" },\n     { actual: candidate(147), expected:\
    \ \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n     { actual:\
    \ candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpllqay01h_test.go:40: expected '1', got '1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__1 (0.00s)\n        tmpllqay01h_test.go:40:\
    \ expected '110', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpllqay01h_test.go:40:\
    \ expected '1100', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpllqay01h_test.go:40:\
    \ expected '1001', got '11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
  timestamp: 1660075446
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    var\
    \ result string\n    var i int\n    var sum int\n    for i = 0; i <= N; i++ {\n\
    \        sum += int(N % 10) * uint64(i)\n        N = N / 10\n    }\n    result\
    \ = fmt.Sprintf(\"%v\", sum)\n    return result\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpr7us2se0_test.go:20:16: invalid operation: int(N % 10) * uint64(i) (mismatched
    types int and uint64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075457
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    for i := 0; i < N; i++ {\n        result += \"1\"\n    }\n    return\
    \ result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1000), expected: \"1\" },\n     { actual:\
    \ candidate(150), expected: \"110\" },\n     { actual: candidate(147), expected:\
    \ \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n     { actual:\
    \ candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpllqay01h_test.go:40: expected '1', gotn\
    \    --- FAIL: TestSolve/test_num__1 (0.00s)\n        tmpllqay01h_test.go:40:\
    \ expected '110', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpllqay01h_test.go:40:\
    \ expected '1100', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpllqay01h_test.go:40:\
    \ expected '1001', got '11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
  timestamp: 1660075446
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    digit := 0\n    sum := 0\n    for i := 0; i < N; i++ {\n      \
    \  digit += int(N % 2)\n        sum += digit\n        N /= 2\n    }\n    result\
    \ += \"0\"\n    if sum > 0 {\n        result += fmt.Sprintf(\"%d\", sum)\n   \
    \ }\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n   \
    \  { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmp_thkk42h_test.go:48: expected '1', got '07'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmp_thkk42h_test.go:48: expected '110', got '08'\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmp_thkk42h_test.go:48: expected '1100',\
    \ got '010'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmp_thkk42h_test.go:48:\
    \ expected '1001', got '013'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n  \
    \      tmp_thkk42h_test.go:48: expected '10010', got '014'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    for N > 0 {\n        result += \"1\"\n        N = N\
    \ / 2\n        i = i + 1\n    }\n    return result\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpeh0n9m9__test.go:43: expected '1', got '1111111111'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpeh0n9m9__test.go:43: expected '110',\
    \ got '11111111'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpeh0n9m9__test.go:43:\
    \ expected '1100', got '11111111'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpeh0n9m9__test.go:43: expected '1001', got '111111111'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpeh0n9m9__test.go:43: expected '10010',\
    \ got '1111111111'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075446
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    s :=\
    \ \"\"\n    for i := 0; i < N; i++ {\n        s += fmt.Sprintf(\"%b\", N%2)\n\
    \        N /= 2\n    }\n    return s\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate\
    \ := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmp436h3vem_test.go:41: expected '1', got '0001011'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmp436h3vem_test.go:41: expected '110', got '01101'\n    ---\
    \ FAIL: TestSolve/test_num__2 (0.00s)\n        tmp436h3vem_test.go:41: expected\
    \ '1100', got '11001'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmp436h3vem_test.go:41:\
    \ expected '1001', got '101100'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n\
    \        tmp436h3vem_test.go:41: expected '10010', got '1100001'\nFAIL\nFAIL\t\
    command-line-arguments\t0.007s\nFAIL\n"
  timestamp: 1660075446
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    sum := 0\n    for i < N {\n        sum += int(N % 10)\
    \ * uint64(i)\n        i /= 10\n    }\n    result += \"0\"\n    for i := len(result)\
    \ - 1; i >= 0; i-- {\n        result += \"1\"\n        if sum > 0 {\n        \
    \    result += \"0\"\n            sum -= int(sum / 10)\n        }\n    }\n   \
    \ return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n   \
    \  { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp023gm61o_test.go:20:16: invalid operation: int(N % 10) * uint64(i) (mismatched
    types int and uint64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075457
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    var\
    \ result string\n    result += \"1\"\n    for i := 2; i <= N; i++ {\n        result\
    \ += \"0\"\n    }\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate\
    \ := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpwljv5fzw_test.go:41: expected '1', gotn\
    \    --- FAIL: TestSolve/test_num__1 (0.00s)\n        tmpwljv5fzw_test.go:41:\
    \ expected '110', got '100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'\n\
    \    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpwljv5fzw_test.go:41:\
    \ expected '1100', got '100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'\n\
    \    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpwljv5fzw_test.go:41:\
    \ expected '1001', got '10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
  timestamp: 1660075450
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    for i := 0; i < N; i++ {\n        result += \"1\"\n    }\n    return\
    \ result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1000), expected: \"1\" },\n     { actual:\
    \ candidate(150), expected: \"110\" },\n     { actual: candidate(147), expected:\
    \ \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n     { actual:\
    \ candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpllqay01h_test.go:40: expected '1', gotn\
    \    --- FAIL: TestSolve/test_num__1 (0.00s)\n        tmpllqay01h_test.go:40:\
    \ expected '110', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpllqay01h_test.go:40:\
    \ expected '1100', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpllqay01h_test.go:40:\
    \ expected '1001', got '11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
  timestamp: 1660075446
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    for i < N {\n        result += \"1\"\n        i++\n\
    \    }\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate :=\
    \ solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpk7u3oeym_test.go:42: expected '1', gotn\
    \    --- FAIL: TestSolve/test_num__1 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '110', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '1100', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '1001', got '11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
  timestamp: 1660075446
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    digit := 0\n    sum := 0\n    for i := 0; i < N; i++ {\n      \
    \  digit += int(N % 2)\n        sum += digit\n        N /= 2\n    }\n    result\
    \ += \"1\"\n    for i := 0; i < sum; i++ {\n        result += \"0\"\n    }\n \
    \   return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n   \
    \  { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpswmrt8et_test.go:48: expected '1', got '10000000'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpswmrt8et_test.go:48: expected '110', got '100000000'\n \
    \   --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpswmrt8et_test.go:48: expected\
    \ '1100', got '10000000000'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n   \
    \     tmpswmrt8et_test.go:48: expected '1001', got '10000000000000'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpswmrt8et_test.go:48: expected '10010',\
    \ got '100000000000000'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    for N > 0 {\n        result += \"1\"\n        N /=\
    \ 10\n        i++\n    }\n    return result\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpm4p8czlf_test.go:43: expected '1', got '1111'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpm4p8czlf_test.go:43: expected '110', got '111'\n    ---\
    \ FAIL: TestSolve/test_num__2 (0.00s)\n        tmpm4p8czlf_test.go:43: expected\
    \ '1100', got '111'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpm4p8czlf_test.go:43:\
    \ expected '1001', got '111'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n  \
    \      tmpm4p8czlf_test.go:43: expected '10010', got '111'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.006s\nFAIL\n"
  timestamp: 1660075446
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    digit := 0\n    for i := 0; i < N; i++ {\n        digit += int(N\
    \ % 2)\n        N /= 2\n    }\n    result += \"0\"\n    for i := 1; i < digit;\
    \ i++ {\n        result += \"1\"\n    }\n    return result\n}\n\nfunc TestSolve(t\
    \ *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpz_r0_cnd_test.go:46: expected '1', got '011'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpz_r0_cnd_test.go:46: expected '110', got '011'\n    ---\
    \ FAIL: TestSolve/test_num__2 (0.00s)\n        tmpz_r0_cnd_test.go:46: expected\
    \ '1100', got '011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpz_r0_cnd_test.go:46:\
    \ expected '1001', got '011'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n  \
    \      tmpz_r0_cnd_test.go:46: expected '10010', got '011'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    digit := 0\n    for i := 0; i < N; i++ {\n        digit += int(N\
    \ % 2)\n        N /= 2\n    }\n    for i := 0; i < digit; i++ {\n        result\
    \ += \"1\"\n    }\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate\
    \ := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpamky28yx_test.go:45: expected '1', got '111'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpamky28yx_test.go:45: expected '110', got '111'\n    ---\
    \ FAIL: TestSolve/test_num__2 (0.00s)\n        tmpamky28yx_test.go:45: expected\
    \ '1100', got '111'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpamky28yx_test.go:45:\
    \ expected '1001', got '111'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n  \
    \      tmpamky28yx_test.go:45: expected '10010', got '111'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.008s\nFAIL\n"
  timestamp: 1660075450
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    s :=\
    \ \"\"\n    i := 0\n    sum := 0\n    for i < N {\n        sum += int(N % 10)\
    \ * uint64(i)\n        N = N / 10\n        i++\n    }\n    for ; i < 10; i++ {\n\
    \        s += \"0\"\n    }\n    s += fmt.Sprintf(\"%d\", sum)\n    return s\n\
    }\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1000), expected: \"1\" },\n     { actual: candidate(150),\
    \ expected: \"110\" },\n     { actual: candidate(147), expected: \"1100\" },\n\
    \     { actual: candidate(333), expected: \"1001\" },\n     { actual: candidate(963),\
    \ expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpuhhhhgf4_test.go:20:16: invalid operation: int(N % 10) * uint64(i) (mismatched
    types int and uint64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075457
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    for i < N {\n        result += \"1\"\n        i++\n\
    \    }\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate :=\
    \ solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpk7u3oeym_test.go:42: expected '1', gotn\
    \    --- FAIL: TestSolve/test_num__1 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '110', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '1100', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '1001', got '11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
  timestamp: 1660075446
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    var\
    \ result string\n    var i int\n    var sum int\n    for i = 0; i <= N; i++ {\n\
    \        sum += int(N % 10) * pow(2, i)\n        N = N / 10\n    }\n    result\
    \ = fmt.Sprintf(\"%d\", sum)\n    return result\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpxx5slzz5_test.go:20:30: undefined: pow

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075457
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    sum := 0\n    for i < N {\n        sum += int(N % 10)\
    \ * uint64(math.Pow(2, float64(i)))\n        i ++\n    }\n    result += fmt.Sprintf(\"\
    %d\", sum)\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate\
    \ := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpxj1k7rly_test.go:20:37: undefined: math

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075457
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    var\
    \ result string\n    result += \"1\"\n    for i := 2; i <= N; i++ {\n        result\
    \ += \"0\"\n    }\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate\
    \ := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpwljv5fzw_test.go:41: expected '1', gotn\
    \    --- FAIL: TestSolve/test_num__1 (0.00s)\n        tmpwljv5fzw_test.go:41:\
    \ expected '110', got '100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'\n\
    \    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpwljv5fzw_test.go:41:\
    \ expected '1100', got '100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'\n\
    \    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpwljv5fzw_test.go:41:\
    \ expected '1001', got '10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
  timestamp: 1660075450
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    sum := 0\n    for i < N {\n        sum += int(N % 10)\
    \ * uint64(i)\n        N /= 10\n        i++\n    }\n    result = fmt.Sprintf(\"\
    %v\", sum)\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate\
    \ := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp9e6mstv6_test.go:20:16: invalid operation: int(N % 10) * uint64(i) (mismatched
    types int and uint64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    for i < N {\n        result += \"1\"\n        i++\n\
    \    }\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate :=\
    \ solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpk7u3oeym_test.go:42: expected '1', gotn\
    \    --- FAIL: TestSolve/test_num__1 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '110', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '1100', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '1001', got '11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
  timestamp: 1660075446
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    for N > 0 {\n        result += \"1\"\n        N /=\
    \ 10\n        i++\n    }\n    return result\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpm4p8czlf_test.go:43: expected '1', got '1111'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpm4p8czlf_test.go:43: expected '110', got '111'\n    ---\
    \ FAIL: TestSolve/test_num__2 (0.00s)\n        tmpm4p8czlf_test.go:43: expected\
    \ '1100', got '111'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpm4p8czlf_test.go:43:\
    \ expected '1001', got '111'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n  \
    \      tmpm4p8czlf_test.go:43: expected '10010', got '111'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.006s\nFAIL\n"
  timestamp: 1660075446
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    for i := 0; i < N; i++ {\n        result += \"1\"\n    }\n    return\
    \ result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1000), expected: \"1\" },\n     { actual:\
    \ candidate(150), expected: \"110\" },\n     { actual: candidate(147), expected:\
    \ \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n     { actual:\
    \ candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpllqay01h_test.go:40: expected '1', gotn\
    \    --- FAIL: TestSolve/test_num__1 (0.00s)\n        tmpllqay01h_test.go:40:\
    \ expected '110', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpllqay01h_test.go:40:\
    \ expected '1100', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpllqay01h_test.go:40:\
    \ expected '1001', got '11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
  timestamp: 1660075446
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    s :=\
    \ \"\"\n    i := 0\n    sum := 0\n    for i < N {\n        sum += int(N % 10)\
    \ * uint64(math.Pow(float64(i), float64(9)))\n        N = N / 10\n        i++\n\
    \    }\n    s = fmt.Sprintf(\"%v\", sum)\n    return s\n}\n\nfunc TestSolve(t\
    \ *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpp_kjf7ki_test.go:20:37: undefined: math

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075458
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    sum := 0\n    for i < N {\n        sum += int(N % 10)\
    \ * uint64(i)\n        i /= 10\n    }\n    result += fmt.Sprintf(\"%0*b\", N,\
    \ sum)\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate :=\
    \ solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp42w6xubg_test.go:20:16: invalid operation: int(N % 10) * uint64(i) (mismatched
    types int and uint64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    var\
    \ result string\n    for i := 0; i < N; i++ {\n        result += \"1\"\n    }\n\
    \    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n   \
    \  { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpl0myezbu_test.go:40: expected '1', gotn\
    \    --- FAIL: TestSolve/test_num__1 (0.00s)\n        tmpl0myezbu_test.go:40:\
    \ expected '110', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpl0myezbu_test.go:40:\
    \ expected '1100', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpl0myezbu_test.go:40:\
    \ expected '1001', got '11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
  timestamp: 1660075458
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    sum := 0\n    for i < N {\n        sum += int(N % 10)\
    \ * uint64(i)\n        N = N / 10\n        i++\n    }\n    for ; i < 10; i++ {\n\
    \        result += fmt.Sprintf(\"%d\", sum)\n        sum += uint64(i)\n    }\n\
    \    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n   \
    \  { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp4o9ym9s1_test.go:20:16: invalid operation: int(N % 10) * uint64(i) (mismatched
    types int and uint64)

    /tmp/tmp4o9ym9s1_test.go:26:9: invalid operation: sum += uint64(i) (mismatched
    types int and uint64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075458
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    s :=\
    \ \"\"\n    i := 0\n    for i < N {\n        s += fmt.Sprintf(\"%b\", N%2)\n \
    \       N = N / 2\n        i++\n    }\n    return s\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmplhhb30rp_test.go:43: expected '1', got '0001011'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmplhhb30rp_test.go:43: expected '110', got '01101'\n    ---\
    \ FAIL: TestSolve/test_num__2 (0.00s)\n        tmplhhb30rp_test.go:43: expected\
    \ '1100', got '11001'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmplhhb30rp_test.go:43:\
    \ expected '1001', got '101100'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n\
    \        tmplhhb30rp_test.go:43: expected '10010', got '1100001'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075454
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    for i < N {\n        result += \"1\"\n        i++\n\
    \    }\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate :=\
    \ solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpk7u3oeym_test.go:42: expected '1', gotn\
    \    --- FAIL: TestSolve/test_num__1 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '110', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '1100', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '1001', got '11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
  timestamp: 1660075446
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    var\
    \ result string\n    var i int\n    var sum int\n    for i = 1; i <= N; i++ {\n\
    \        sum += i\n    }\n    for i = 1; i <= N; i++ {\n        result += \"0\"\
    \ + string(sum%2)\n        sum = int(sum/2)\n    }\n    return result\n}\n\nfunc\
    \ TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(1000), expected: \"1\" },\n     { actual: candidate(150),\
    \ expected: \"110\" },\n     { actual: candidate(147), expected: \"1100\" },\n\
    \     { actual: candidate(333), expected: \"1001\" },\n     { actual: candidate(963),\
    \ expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test

    /tmp/tmp9rho26jx_test.go:23:25: conversion from int to string yields a string
    of one rune, not a string of digits (did you mean fmt.Sprint(x)?)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075458
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    var\
    \ result string\n    var i int\n    var j int\n    var k int\n    var sum int\n\
    \    var temp int\n\n    for i = N; i > 0; i /= 10 {\n        sum += i\n    }\n\
    \n    for i = N; i > 0; i /= 10 {\n        temp = sum % 10\n        sum += temp\n\
    \        result = fmt.Sprintf(\"%0*d\", len(result), temp) + result\n    }\n\n\
    \    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n   \
    \  { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpmk2p6n64_test.go:18:9: j declared but not used

    /tmp/tmpmk2p6n64_test.go:19:9: k declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075458
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    sum := 0\n    for i < N {\n        sum += int(N % 10)\
    \ * pow(2, i)\n        i += 1\n    }\n    result += \"0\"\n    for sum > 0 {\n\
    \        result += \"1\"\n        sum -= int(sum / 10)\n    }\n    return result\n\
    }\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1000), expected: \"1\" },\n     { actual: candidate(150),\
    \ expected: \"110\" },\n     { actual: candidate(147), expected: \"1100\" },\n\
    \     { actual: candidate(333), expected: \"1001\" },\n     { actual: candidate(963),\
    \ expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpr3tc123r_test.go:20:30: undefined: pow

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075459
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    sum := 0\n    for i < N {\n        sum += int(N % 10)\
    \ * uint64(i)\n        i /= 10\n    }\n    result += fmt.Sprintf(\"%v\", sum)\n\
    \    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n   \
    \  { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpv9tni565_test.go:20:16: invalid operation: int(N % 10) * uint64(i) (mismatched
    types int and uint64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075459
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    var\
    \ result string\n    var i int\n    var sum int\n    for i = 1; i <= N; i++ {\n\
    \        sum += i\n    }\n    for i = 1; i <= N; i++ {\n        result = fmt.Sprintf(\"\
    %s%0*d\", result, len(strconv.Itoa(i)), sum)\n    }\n    return result\n}\n\n\
    func TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(1000), expected: \"1\" },\n     { actual: candidate(150),\
    \ expected: \"110\" },\n     { actual: candidate(147), expected: \"1100\" },\n\
    \     { actual: candidate(333), expected: \"1001\" },\n     { actual: candidate(963),\
    \ expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpue9xqfqs_test.go:23:52: undefined: strconv

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075461
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    s :=\
    \ \"\"\n    n := N\n    for i := 0; i < len(s); i++ {\n        if n%2 == 0 {\n\
    \            s += \"1\"\n        } else {\n            s += \"0\"\n        }\n\
    \        n /= 2\n    }\n    return s\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate\
    \ := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpv2jfu8g4_test.go:46: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpv2jfu8g4_test.go:46: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpv2jfu8g4_test.go:46: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpv2jfu8g4_test.go:46:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpv2jfu8g4_test.go:46: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660075461
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    base := 2\n    for i := 0; i < N; i++ {\n        result += \"1\"\
    \n    }\n    for i := 0; i < len(result); i++ {\n        result += \"0\"\n   \
    \ }\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n   \
    \  { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp0navk_bh_test.go:17:5: base declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075450
- exit_code: null
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    for N > 0 {\n        result += \"1\"\n        N /=\
    \ 2\n    }\n    for ; i < len(result); i++ {\n        result += \"0\"\n    }\n\
    \    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n   \
    \  { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660075464
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    digit := 0\n    carry1 := 0\n    carry2 := 0\n    for i := 0; i\
    \ < N; i++ {\n        digit += int(N % 10) - int(N / 10)\n        N /= 10\n  \
    \      if N == 0 {\n            result += fmt.Sprintf(\"%0*d\", len(result), digit)\n\
    \            break\n        }\n        carry1 = digit / 2\n        carry2 = digit\
    \ % 2\n        result += fmt.Sprintf(\"%0*d\", len(result), carry1)\n        result\
    \ += fmt.Sprintf(\"%0*d\", len(result), carry2)\n    }\n    return result\n}\n\
    \nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1000), expected: \"1\" },\n     { actual: candidate(150),\
    \ expected: \"110\" },\n     { actual: candidate(147), expected: \"1100\" },\n\
    \     { actual: candidate(333), expected: \"1001\" },\n     { actual: candidate(963),\
    \ expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmp6mac133e_test.go:52: expected '1', got '-50000-00055000000000000-00000000000000000000055-00000000000000000000000000000000000000000000001'\n\
    \    --- FAIL: TestSolve/test_num__1 (0.00s)\n        tmp6mac133e_test.go:52:\
    \ expected '110', got '-7-1-005-0000001'\n    --- FAIL: TestSolve/test_num__2\
    \ (0.00s)\n        tmp6mac133e_test.go:52: expected '1100', got '-3-1-00200000000'\n\
    \    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmp6mac133e_test.go:52:\
    \ expected '1001', got '-15000-00015000000000000-00000000000000000000027'\n  \
    \  --- FAIL: TestSolve/test_num__4 (0.00s)\n        tmp6mac133e_test.go:52: expected\
    \ '10010', got '-46-01-00048000000000000-00000000000000000000087'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075461
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    s :=\
    \ \"\"\n    i := 0\n    for i < N {\n        s += fmt.Sprintf(\"%b\", N%2)\n \
    \       N /= 2\n        i++\n    }\n    return s\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpje4e4kce_test.go:43: expected '1', got '0001011'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpje4e4kce_test.go:43: expected '110', got '01101'\n    ---\
    \ FAIL: TestSolve/test_num__2 (0.00s)\n        tmpje4e4kce_test.go:43: expected\
    \ '1100', got '11001'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpje4e4kce_test.go:43:\
    \ expected '1001', got '101100'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n\
    \        tmpje4e4kce_test.go:43: expected '10010', got '1100001'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075446
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    digit := 0\n    sum := 0\n    for i := 0; i < N; i++ {\n      \
    \  digit += int(N % 2)\n        sum += digit\n        N /= 2\n    }\n    for i\
    \ := 0; i < sum; i++ {\n        result += fmt.Sprintf(\"%v\", digit)\n    }\n\
    \    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n   \
    \  { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpnmb5n06a_test.go:47: expected '1', got '3333333'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpnmb5n06a_test.go:47: expected '110', got '33333333'\n  \
    \  --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpnmb5n06a_test.go:47: expected\
    \ '1100', got '3333333333'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n    \
    \    tmpnmb5n06a_test.go:47: expected '1001', got '3333333333333'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpnmb5n06a_test.go:47: expected '10010',\
    \ got '33333333333333'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075461
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    digit := 0\n    sum := 0\n    for i := 0; i < N; i++ {\n      \
    \  digit += int(N % 2)\n        sum += digit\n        N /= 2\n    }\n    for i\
    \ := 0; i < sum; i++ {\n        result += fmt.Sprintf(\"%d\", int(digit))\n  \
    \      digit /= 2\n    }\n    return result\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpe9lrop1o_test.go:48: expected '1', got '3100000'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpe9lrop1o_test.go:48: expected '110', got '31000000'\n  \
    \  --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpe9lrop1o_test.go:48: expected\
    \ '1100', got '3100000000'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n    \
    \    tmpe9lrop1o_test.go:48: expected '1001', got '3100000000000'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpe9lrop1o_test.go:48: expected '10010',\
    \ got '31000000000000'\nFAIL\nFAIL\tcommand-line-arguments\t0.008s\nFAIL\n"
  timestamp: 1660075461
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    for i < N {\n        result += \"1\"\n        i++\n\
    \    }\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate :=\
    \ solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpk7u3oeym_test.go:42: expected '1', gotn\
    \    --- FAIL: TestSolve/test_num__1 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '110', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '1100', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '1001', got '11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
  timestamp: 1660075446
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    for N > 0 {\n        result += \"1\"\n        N /=\
    \ 10\n        i++\n    }\n    return result\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpm4p8czlf_test.go:43: expected '1', got '1111'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpm4p8czlf_test.go:43: expected '110', got '111'\n    ---\
    \ FAIL: TestSolve/test_num__2 (0.00s)\n        tmpm4p8czlf_test.go:43: expected\
    \ '1100', got '111'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpm4p8czlf_test.go:43:\
    \ expected '1001', got '111'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n  \
    \      tmpm4p8czlf_test.go:43: expected '10010', got '111'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.006s\nFAIL\n"
  timestamp: 1660075446
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    for i < N {\n        result += \"1\"\n        i++\n\
    \    }\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate :=\
    \ solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpk7u3oeym_test.go:42: expected '1', gotn\
    \    --- FAIL: TestSolve/test_num__1 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '110', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '1100', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '1001', got '11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
  timestamp: 1660075446
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    sum := 0\n    for N > 0 {\n        sum += N % 10\n\
    \        N = N / 10\n    }\n    for i <= len(strconv.Itoa(sum)) {\n        result\
    \ += strconv.Itoa(sum % 2)\n        sum = int(sum / 2)\n    }\n    return result\n\
    }\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1000), expected: \"1\" },\n     { actual: candidate(150),\
    \ expected: \"110\" },\n     { actual: candidate(147), expected: \"1100\" },\n\
    \     { actual: candidate(333), expected: \"1001\" },\n     { actual: candidate(963),\
    \ expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpvli_kd30_test.go:23:18: undefined: strconv

    /tmp/tmpvli_kd30_test.go:24:19: undefined: strconv

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075461
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    s :=\
    \ \"\"\n    i := 0\n    for i < N {\n        s += fmt.Sprintf(\"%b\", N%2)\n \
    \       N /= 2\n        i++\n    }\n    return s\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpje4e4kce_test.go:43: expected '1', got '0001011'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpje4e4kce_test.go:43: expected '110', got '01101'\n    ---\
    \ FAIL: TestSolve/test_num__2 (0.00s)\n        tmpje4e4kce_test.go:43: expected\
    \ '1100', got '11001'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpje4e4kce_test.go:43:\
    \ expected '1001', got '101100'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n\
    \        tmpje4e4kce_test.go:43: expected '10010', got '1100001'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075446
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    var\
    \ result string\n    var i int\n    var sum int\n    for i = 1; i <= N; i++ {\n\
    \        sum += int(N / i)\n    }\n    result = fmt.Sprintf(\"%b\", sum)\n   \
    \ return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n   \
    \  { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmp52tub1ib_test.go:43: expected '1', got '1101110011101'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmp52tub1ib_test.go:43: expected '110',\
    \ got '1100001100'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmp52tub1ib_test.go:43:\
    \ expected '1100', got '1011111000'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmp52tub1ib_test.go:43: expected '1001', got '11111000100'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmp52tub1ib_test.go:43: expected '10010',\
    \ got '1101001110011'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075461
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    base := 2\n    digit := 0\n    for i := 0; i < N; i++ {\n     \
    \   digit += int(N % base) / base\n        N = N / base\n        result += fmt.Sprintf(\"\
    %b\", digit)\n    }\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n\
    \  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000), expected:\
    \ \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n     { actual:\
    \ candidate(147), expected: \"1100\" },\n     { actual: candidate(333), expected:\
    \ \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpmwijpr0o_test.go:44: expected '1', got '0000000'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpmwijpr0o_test.go:44: expected '110', got '00000'\n    ---\
    \ FAIL: TestSolve/test_num__2 (0.00s)\n        tmpmwijpr0o_test.go:44: expected\
    \ '1100', got '00000'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpmwijpr0o_test.go:44:\
    \ expected '1001', got '000000'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n\
    \        tmpmwijpr0o_test.go:44: expected '10010', got '0000000'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075461
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    base := 2\n    for i := 0; i < N; i++ {\n        result += \"1\"\
    \n    }\n    for i := 0; i < len(result); i++ {\n        result += \"0\"\n   \
    \ }\n    for i := 0; i < len(result); i++ {\n        result += \"0\"\n    }\n\
    \    return fmt.Sprintf(\"%v\", result)\n}\n\nfunc TestSolve(t *testing.T) {\n\
    \  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000), expected:\
    \ \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n     { actual:\
    \ candidate(147), expected: \"1100\" },\n     { actual: candidate(333), expected:\
    \ \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp66t9_die_test.go:17:5: base declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075461
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    base := 1\n    for i := 0; i < N; i++ {\n        result += \"1\"\
    \n    }\n    for i := 0; i < len(result); i++ {\n        result += \"0\"\n   \
    \ }\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n   \
    \  { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmprrs8jehx_test.go:17:5: base declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075461
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    base := 2\n    for i := 0; i < N; i++ {\n        result += \"1\"\
    \n    }\n    for i := 0; i < len(result); i++ {\n        result += \"0\"\n   \
    \ }\n    return fmt.Sprintf(\"%v\", result)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpllh5mso0_test.go:17:5: base declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075461
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    digit := 0\n    sum := 0\n    for i := 0; i < N; i++ {\n      \
    \  digit += int(N % 2)\n        sum += digit\n        N /= 2\n    }\n    for i\
    \ := 0; i < sum; i++ {\n        result += fmt.Sprintf(\"%d\", digit)\n    }\n\
    \    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n   \
    \  { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpajxz31za_test.go:47: expected '1', got '3333333'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpajxz31za_test.go:47: expected '110', got '33333333'\n  \
    \  --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpajxz31za_test.go:47: expected\
    \ '1100', got '3333333333'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n    \
    \    tmpajxz31za_test.go:47: expected '1001', got '3333333333333'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpajxz31za_test.go:47: expected '10010',\
    \ got '33333333333333'\nFAIL\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660075461
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    base := 2\n    for i := 0; i < N; i++ {\n        result += \"1\"\
    \n    }\n    for i := 0; i < len(result); i++ {\n        result += \"0\"\n   \
    \ }\n    return fmt.Sprintf(\"%b\", []byte(result))\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpu8dm62uo_test.go:17:5: base declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075461
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    digit := 0\n    digit := N / 2\n    result += \"1\"\n    for digit\
    \ > 0 {\n        digit /= 2\n        result += fmt.Sprintf(\"%v\", digit)\n  \
    \  }\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n   \
    \  { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpx_n9oac5_test.go:18:11: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075461
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    digit := 0\n    sum := 0\n    for i := 0; i < N; i++ {\n      \
    \  digit += int(N % 2)\n        sum += digit\n        N /= 2\n    }\n    result\
    \ += \"0\"\n    if sum > 0 {\n        result += \"1\"\n    }\n    return result\n\
    }\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1000), expected: \"1\" },\n     { actual: candidate(150),\
    \ expected: \"110\" },\n     { actual: candidate(147), expected: \"1100\" },\n\
    \     { actual: candidate(333), expected: \"1001\" },\n     { actual: candidate(963),\
    \ expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpgk6sew0t_test.go:48: expected '1', got '01'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpgk6sew0t_test.go:48: expected '110', got '01'\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpgk6sew0t_test.go:48: expected '1100',\
    \ got '01'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpgk6sew0t_test.go:48:\
    \ expected '1001', got '01'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n   \
    \     tmpgk6sew0t_test.go:48: expected '10010', got '01'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660075462
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    s :=\
    \ \"\"\n    i := 0\n    for i < N {\n        s += fmt.Sprintf(\"%b\", N%2)\n \
    \       N /= 2\n        i++\n    }\n    return s\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpje4e4kce_test.go:43: expected '1', got '0001011'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpje4e4kce_test.go:43: expected '110', got '01101'\n    ---\
    \ FAIL: TestSolve/test_num__2 (0.00s)\n        tmpje4e4kce_test.go:43: expected\
    \ '1100', got '11001'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpje4e4kce_test.go:43:\
    \ expected '1001', got '101100'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n\
    \        tmpje4e4kce_test.go:43: expected '10010', got '1100001'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075446
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    for N > 0 {\n        result += \"1\"\n        N /=\
    \ 10\n        i++\n    }\n    return result\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpm4p8czlf_test.go:43: expected '1', got '1111'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpm4p8czlf_test.go:43: expected '110', got '111'\n    ---\
    \ FAIL: TestSolve/test_num__2 (0.00s)\n        tmpm4p8czlf_test.go:43: expected\
    \ '1100', got '111'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpm4p8czlf_test.go:43:\
    \ expected '1001', got '111'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n  \
    \      tmpm4p8czlf_test.go:43: expected '10010', got '111'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.006s\nFAIL\n"
  timestamp: 1660075446
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    sum := 0\n    for i := 0; i < N; i++ {\n        sum += int(N %\
    \ 10) * uint64(i)\n        N /= 10\n    }\n    result += \"1\"\n    for i := 1;\
    \ i <= sum; i++ {\n        result += \"0\"\n    }\n    return result\n}\n\nfunc\
    \ TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(1000), expected: \"1\" },\n     { actual: candidate(150),\
    \ expected: \"110\" },\n     { actual: candidate(147), expected: \"1100\" },\n\
    \     { actual: candidate(333), expected: \"1001\" },\n     { actual: candidate(963),\
    \ expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpw7oh2orv_test.go:19:16: invalid operation: int(N % 10) * uint64(i) (mismatched
    types int and uint64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075461
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    s :=\
    \ \"\"\n    for i := 0; i < N; i++ {\n        s += fmt.Sprintf(\"%d\", N%2)\n\
    \        N /= 2\n    }\n    return s\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate\
    \ := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpx08zitgn_test.go:41: expected '1', got '0001011'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpx08zitgn_test.go:41: expected '110', got '01101'\n    ---\
    \ FAIL: TestSolve/test_num__2 (0.00s)\n        tmpx08zitgn_test.go:41: expected\
    \ '1100', got '11001'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpx08zitgn_test.go:41:\
    \ expected '1001', got '101100'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n\
    \        tmpx08zitgn_test.go:41: expected '10010', got '1100001'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075462
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    for i := 0; i < N; i++ {\n        result += \"1\"\n    }\n    return\
    \ result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1000), expected: \"1\" },\n     { actual:\
    \ candidate(150), expected: \"110\" },\n     { actual: candidate(147), expected:\
    \ \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n     { actual:\
    \ candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpllqay01h_test.go:40: expected '1', gotn\
    \    --- FAIL: TestSolve/test_num__1 (0.00s)\n        tmpllqay01h_test.go:40:\
    \ expected '110', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpllqay01h_test.go:40:\
    \ expected '1100', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpllqay01h_test.go:40:\
    \ expected '1001', got '11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
  timestamp: 1660075446
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    var\
    \ result string\n    \n    for i := 0; i < N; i++ {\n        result += \"1\"\n\
    \    }\n    \n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate\
    \ := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpyeqmoczz_test.go:42: expected '1', gotn\
    \    --- FAIL: TestSolve/test_num__1 (0.00s)\n        tmpyeqmoczz_test.go:42:\
    \ expected '110', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpyeqmoczz_test.go:42:\
    \ expected '1100', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpyeqmoczz_test.go:42:\
    \ expected '1001', got '11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
  timestamp: 1660075446
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    for N > 0 {\n        result += \"1\"\n        N /=\
    \ 10\n        i++\n    }\n    return result\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpm4p8czlf_test.go:43: expected '1', got '1111'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpm4p8czlf_test.go:43: expected '110', got '111'\n    ---\
    \ FAIL: TestSolve/test_num__2 (0.00s)\n        tmpm4p8czlf_test.go:43: expected\
    \ '1100', got '111'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpm4p8czlf_test.go:43:\
    \ expected '1001', got '111'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n  \
    \      tmpm4p8czlf_test.go:43: expected '10010', got '111'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.006s\nFAIL\n"
  timestamp: 1660075446
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    sum := 0\n    for i < N {\n        sum += int(N % 10)\
    \ * uint64(i)\n        N /= 10\n        i++\n    }\n    for ; i < 10; i++ {\n\
    \        sum += int(N % 10) * uint64(i)\n        N /= 10\n    }\n    result +=\
    \ \"0\"\n    for ; sum > 0; sum-- {\n        result += \"1\"\n    }\n    return\
    \ result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1000), expected: \"1\" },\n     { actual:\
    \ candidate(150), expected: \"110\" },\n     { actual: candidate(147), expected:\
    \ \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n     { actual:\
    \ candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpcfi75ahp_test.go:20:16: invalid operation: int(N % 10) * uint64(i) (mismatched
    types int and uint64)

    /tmp/tmpcfi75ahp_test.go:25:16: invalid operation: int(N % 10) * uint64(i) (mismatched
    types int and uint64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075461
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    digit := 0\n    for i := 0; i < N; i++ {\n        digit += int(N\
    \ % 2)\n        N = N / 2\n    }\n    for i := 0; i < digit; i++ {\n        result\
    \ += \"1\"\n    }\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate\
    \ := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpjjkbbulj_test.go:45: expected '1', got '111'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpjjkbbulj_test.go:45: expected '110', got '111'\n    ---\
    \ FAIL: TestSolve/test_num__2 (0.00s)\n        tmpjjkbbulj_test.go:45: expected\
    \ '1100', got '111'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpjjkbbulj_test.go:45:\
    \ expected '1001', got '111'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n  \
    \      tmpjjkbbulj_test.go:45: expected '10010', got '111'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.006s\nFAIL\n"
  timestamp: 1660075450
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    s :=\
    \ \"\"\n    i := 0\n    sum := 0\n    for i < N {\n        sum += int(N % 10)\
    \ * uint64(i + 1)\n        N = N / 10\n        i++\n    }\n    for ; i < 64; i++\
    \ {\n        s += \"1\"\n    }\n    return fmt.Sprintf(\"%064b\", sum)\n}\n\n\
    func TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(1000), expected: \"1\" },\n     { actual: candidate(150),\
    \ expected: \"110\" },\n     { actual: candidate(147), expected: \"1100\" },\n\
    \     { actual: candidate(333), expected: \"1001\" },\n     { actual: candidate(963),\
    \ expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpj9cs43je_test.go:20:16: invalid operation: int(N % 10) * uint64(i + 1)
    (mismatched types int and uint64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075461
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    digit := 0\n    for i := 0; i < N; i++ {\n        digit += int(N\
    \ % 2)\n        N /= 2\n    }\n    for i := 0; i < digit; i++ {\n        result\
    \ += \"1\"\n    }\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate\
    \ := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpamky28yx_test.go:45: expected '1', got '111'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpamky28yx_test.go:45: expected '110', got '111'\n    ---\
    \ FAIL: TestSolve/test_num__2 (0.00s)\n        tmpamky28yx_test.go:45: expected\
    \ '1100', got '111'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpamky28yx_test.go:45:\
    \ expected '1001', got '111'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n  \
    \      tmpamky28yx_test.go:45: expected '10010', got '111'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.008s\nFAIL\n"
  timestamp: 1660075450
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    for i < N {\n        result += \"1\"\n        i++\n\
    \    }\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate :=\
    \ solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpk7u3oeym_test.go:42: expected '1', gotn\
    \    --- FAIL: TestSolve/test_num__1 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '110', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '1100', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '1001', got '11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
  timestamp: 1660075446
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    digit := 0\n    for i := 0; i < N; i++ {\n        digit += int(N\
    \ % 2)\n        N = N / 2\n    }\n    for i := 0; i < N; i++ {\n        result\
    \ += fmt.Sprintf(\"%d\", digit)\n        digit = 0\n    }\n    return result\n\
    }\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1000), expected: \"1\" },\n     { actual: candidate(150),\
    \ expected: \"110\" },\n     { actual: candidate(147), expected: \"1100\" },\n\
    \     { actual: candidate(333), expected: \"1001\" },\n     { actual: candidate(963),\
    \ expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpq5d0fq8__test.go:46: expected '1', got '3000000'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpq5d0fq8__test.go:46: expected '110', got '3000'\n    ---\
    \ FAIL: TestSolve/test_num__2 (0.00s)\n        tmpq5d0fq8__test.go:46: expected\
    \ '1100', got '3000'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpq5d0fq8__test.go:46:\
    \ expected '1001', got '30000'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n\
    \        tmpq5d0fq8__test.go:46: expected '10010', got '3000000'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075454
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    for N > 0 {\n        result += \"1\"\n        N = N\
    \ / 10\n        i = i + 1\n    }\n    return result\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmplhj6yxiy_test.go:43: expected '1', got '1111'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmplhj6yxiy_test.go:43: expected '110', got '111'\n    ---\
    \ FAIL: TestSolve/test_num__2 (0.00s)\n        tmplhj6yxiy_test.go:43: expected\
    \ '1100', got '111'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmplhj6yxiy_test.go:43:\
    \ expected '1001', got '111'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n  \
    \      tmplhj6yxiy_test.go:43: expected '10010', got '111'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660075462
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    digit := 0\n    for i := 0; i < N; i++ {\n        digit += int(N\
    \ % 2)\n        N = N / 2\n    }\n    for i := 0; i < digit; i++ {\n        result\
    \ += \"1\"\n    }\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate\
    \ := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpjjkbbulj_test.go:45: expected '1', got '111'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpjjkbbulj_test.go:45: expected '110', got '111'\n    ---\
    \ FAIL: TestSolve/test_num__2 (0.00s)\n        tmpjjkbbulj_test.go:45: expected\
    \ '1100', got '111'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpjjkbbulj_test.go:45:\
    \ expected '1001', got '111'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n  \
    \      tmpjjkbbulj_test.go:45: expected '10010', got '111'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.006s\nFAIL\n"
  timestamp: 1660075450
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    for i < N {\n        result += \"1\"\n        i++\n\
    \    }\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate :=\
    \ solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpk7u3oeym_test.go:42: expected '1', gotn\
    \    --- FAIL: TestSolve/test_num__1 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '110', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '1100', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '1001', got '11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
  timestamp: 1660075446
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    for i < N {\n        result += \"1\"\n        i++\n\
    \    }\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate :=\
    \ solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpk7u3oeym_test.go:42: expected '1', gotn\
    \    --- FAIL: TestSolve/test_num__1 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '110', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '1100', got '111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'\n\
    \    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpk7u3oeym_test.go:42:\
    \ expected '1001', got '11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
  timestamp: 1660075446
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    digit := 0\n    sum := 0\n    for i := 0; i < N; i++ {\n      \
    \  digit += int(N % 2)\n        sum += digit\n        N = N / 2\n    }\n    for\
    \ i := 0; i < sum; i++ {\n        result += fmt.Sprintf(\"%d\", int(N % 2))\n\
    \        N = N / 2\n    }\n    return result\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpyawkbj47_test.go:48: expected '1', got '1110000'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpyawkbj47_test.go:48: expected '110', got '00100000'\n  \
    \  --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpyawkbj47_test.go:48: expected\
    \ '1100', got '0010000000'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n    \
    \    tmpyawkbj47_test.go:48: expected '1001', got '1010000000000'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpyawkbj47_test.go:48: expected '10010',\
    \ got '11100000000000'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075446
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    result\
    \ := \"\"\n    i := 0\n    for N > 0 {\n        result += \"1\"\n        N /=\
    \ 10\n        i++\n    }\n    return result\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpm4p8czlf_test.go:43: expected '1', got '1111'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpm4p8czlf_test.go:43: expected '110', got '111'\n    ---\
    \ FAIL: TestSolve/test_num__2 (0.00s)\n        tmpm4p8czlf_test.go:43: expected\
    \ '1100', got '111'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpm4p8czlf_test.go:43:\
    \ expected '1001', got '111'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n  \
    \      tmpm4p8czlf_test.go:43: expected '10010', got '111'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.006s\nFAIL\n"
  timestamp: 1660075446
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    var\
    \ result string\n    var i int\n    var sum int\n    for i = 0; i <= N; i++ {\n\
    \        sum += int(N % 10) * pow(2, i)\n        N /= 10\n    }\n    result =\
    \ fmt.Sprintf(\"%d\", sum)\n    return result\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpdfrnzu_s_test.go:20:30: undefined: pow

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075462
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
    // Output:\n// a string of binary number\nfunc solve(N int) string {\n    var\
    \ result string\n    var i int\n    var j int\n    var k int\n    var sum int\n\
    \    var carry int\n\n    for i = N; i > 0; i-- {\n        sum = N % 10\n    \
    \    N = N / 10\n        carry = 1\n        for j = i; j > 0; j-- {\n        \
    \    k = j\n            sum = sum + k * 10 + carry\n            carry = sum /\
    \ 10\n            sum = sum % 10\n        }\n        result = fmt.Sprintf(\"%0*d\"\
    , i, sum) + result\n    }\n    return result\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.19s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpr5i3xqsv_test.go:55: expected '1', got
  timestamp: 1660075462

language: go_test.go
name: HumanEval_59_largest_prime_factor
results:
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    prime := 2\n    factor :=\
    \ 1\n    for n > 1 {\n        if n % prime == 0 {\n            n = n / prime\n\
    \            factor = prime + 1\n        } else {\n            prime++\n     \
    \   }\n    }\n    return factor\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T)\
    \ {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmp4wn5brjc_test.go:40: expected '%!s(int=5)', got '%!s(int=6)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmp4wn5brjc_test.go:40:\
    \ expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmp4wn5brjc_test.go:40: expected '%!s(int=7)', got '%!s(int=8)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmp4wn5brjc_test.go:40:\
    \ expected '%!s(int=11)', got '%!s(int=12)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmp4wn5brjc_test.go:40: expected '%!s(int=29)', got '%!s(int=30)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.030s\nFAIL\n"
  timestamp: 1660075684
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    largest := n\n    for i\
    \ := 2; i <= n; i++ {\n        if n%i == 0 {\n            largest = i\n      \
    \      break\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmp0gg9v8fy_test.go:37: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__2 (0.00s)\n        tmp0gg9v8fy_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=3)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__3\
    \ (0.00s)\n        tmp0gg9v8fy_test.go:37: expected '%!s(int=11)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__4 (0.00s)\n        tmp0gg9v8fy_test.go:37:\
    \ expected '%!s(int=29)', got '%!s(int=5)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.047s\nFAIL\n"
  timestamp: 1660075684
- exit_code: 2
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    prime := 2\n    factor :=\
    \ 1\n    for factor < n && n % factor == 0 {\n        factor++\n    }\n    for\
    \ factor < n && n % factor == 0 {\n        factor++\n    }\n    if factor > n\
    \ {\n        return n\n    }\n    for factor < n && n % factor == 0 {\n      \
    \  factor++\n    }\n    return factor\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T)\
    \ {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmppmpf9e7__test.go:10:5: prime declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075683
- exit_code: null
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    prime := 2\n    factor :=\
    \ 1\n    for factor < n {\n        if n % prime == 0 {\n            factor = factor\
    \ + 1\n        }\n        prime++\n    }\n    return factor\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660075694
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    largestPrimeFactor := 1\n\
    \    for i := 2; i <= n; i++ {\n        if n%i == 0 {\n            largestPrimeFactor\
    \ = i\n            break\n        }\n    }\n    return largestPrimeFactor\n}\n\
    \nfunc TestLargest_Prime_Factor(t *testing.T) {\n  candidate := largest_prime_factor\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(15), expected: 5 },\n     { actual:\
    \ candidate(27), expected: 3 },\n     { actual: candidate(63), expected: 7 },\n\
    \     { actual: candidate(330), expected: 11 },\n     { actual: candidate(13195),\
    \ expected: 29 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmp6i4c4mpm_test.go:37: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__2 (0.00s)\n        tmp6i4c4mpm_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=3)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__3\
    \ (0.00s)\n        tmp6i4c4mpm_test.go:37: expected '%!s(int=11)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__4 (0.00s)\n        tmp6i4c4mpm_test.go:37:\
    \ expected '%!s(int=29)', got '%!s(int=5)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.067s\nFAIL\n"
  timestamp: 1660075684
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    primes := make([]int, n)\n\
    \    primes[0] = 1\n    for i := 1; i < n; i++ {\n        for j := 2; j < i; j++\
    \ {\n            if i*j > n {\n                break\n            }\n        \
    \    if primes[j] == 0 {\n                primes[j] = i\n            }\n     \
    \   }\n    }\n    return primes[n-1]\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T)\
    \ {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmp29noqvxc_test.go:42: expected '%!s(int=5)', got '%!s(int=0)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmp29noqvxc_test.go:42:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmp29noqvxc_test.go:42: expected '%!s(int=7)', got '%!s(int=0)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmp29noqvxc_test.go:42:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmp29noqvxc_test.go:42: expected '%!s(int=29)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.031s\nFAIL\n"
  timestamp: 1660075684
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    n -= 1\n    i := 2\n   \
    \ for i < n && n % i == 0 {\n        i = i + 1\n    }\n    return i\n}\n\nfunc\
    \ TestLargest_Prime_Factor(t *testing.T) {\n  candidate := largest_prime_factor\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(15), expected: 5 },\n     { actual:\
    \ candidate(27), expected: 3 },\n     { actual: candidate(63), expected: 7 },\n\
    \     { actual: candidate(330), expected: 11 },\n     { actual: candidate(13195),\
    \ expected: 29 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpl1vp4lqs_test.go:35: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__2 (0.00s)\n        tmpl1vp4lqs_test.go:35:\
    \ expected '%!s(int=7)', got '%!s(int=3)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__3\
    \ (0.00s)\n        tmpl1vp4lqs_test.go:35: expected '%!s(int=11)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__4 (0.00s)\n        tmpl1vp4lqs_test.go:35:\
    \ expected '%!s(int=29)', got '%!s(int=4)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.039s\nFAIL\n"
  timestamp: 1660075684
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    n -= 1\n    i := 2\n   \
    \ for i <= n {\n        if n%i == 0 {\n            n /= i\n        } else {\n\
    \            i++\n        }\n    }\n    return n\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmps7zldhu8_test.go:39: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmps7zldhu8_test.go:39:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmps7zldhu8_test.go:39: expected '%!s(int=7)', got '%!s(int=1)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmps7zldhu8_test.go:39:\
    \ expected '%!s(int=11)', got '%!s(int=1)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmps7zldhu8_test.go:39: expected '%!s(int=29)', got '%!s(int=1)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.036s\nFAIL\n"
  timestamp: 1660075684
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    if n < 2 {\n        return\
    \ n\n    }\n\n    largest := 2\n    for i := 3; i <= n; i++ {\n        if n %\
    \ i == 0 {\n            if i > largest {\n                largest = i\n      \
    \      }\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpje74duw6_test.go:42: expected '%!s(int=5)', got '%!s(int=15)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmpje74duw6_test.go:42:\
    \ expected '%!s(int=3)', got '%!s(int=27)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmpje74duw6_test.go:42: expected '%!s(int=7)', got '%!s(int=63)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpje74duw6_test.go:42:\
    \ expected '%!s(int=11)', got '%!s(int=330)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpje74duw6_test.go:42: expected '%!s(int=29)', got '%!s(int=13195)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.051s\nFAIL\n"
  timestamp: 1660075684
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    largestPrimeFactor := 1\n\
    \    for i := 2; i <= n/2; i++ {\n        if n%i == 0 {\n            largestPrimeFactor\
    \ = i\n            break\n        }\n    }\n    return largestPrimeFactor\n}\n\
    \nfunc TestLargest_Prime_Factor(t *testing.T) {\n  candidate := largest_prime_factor\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(15), expected: 5 },\n     { actual:\
    \ candidate(27), expected: 3 },\n     { actual: candidate(63), expected: 7 },\n\
    \     { actual: candidate(330), expected: 11 },\n     { actual: candidate(13195),\
    \ expected: 29 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmp81wms2jd_test.go:37: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__2 (0.00s)\n        tmp81wms2jd_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=3)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__3\
    \ (0.00s)\n        tmp81wms2jd_test.go:37: expected '%!s(int=11)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__4 (0.00s)\n        tmp81wms2jd_test.go:37:\
    \ expected '%!s(int=29)', got '%!s(int=5)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.041s\nFAIL\n"
  timestamp: 1660075684
- exit_code: 2
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    primes := make([]int, n)\n\
    \    primes[0] = 2\n    for i := 1; i < n; i++ {\n        for j := 2; j < i; j++\
    \ {\n            if i%j == 0 {\n                break\n            }\n       \
    \ }\n        if j == i {\n            primes[i] = i\n        }\n    }\n    return\
    \ primes[len(primes)-1]\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T) {\n\
    \  candidate := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpd7lp71c__test.go:18:12: undefined: j

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075683
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    prime := 2\n    factor :=\
    \ 2\n    for factor < n {\n        if n%prime == 0 {\n            n = n / prime\n\
    \        } else {\n            prime++\n        }\n        factor++\n    }\n \
    \   return factor\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T) {\n  candidate\
    \ := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__1\
    \ (0.00s)\n        tmpav3a4zhz_test.go:40: expected '%!s(int=3)', got '%!s(int=5)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.041s\nFAIL\n"
  timestamp: 1660075684
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    prime := 2\n    factor :=\
    \ 1\n    for factor < n && prime*factor <= n {\n        prime++\n        factor++\n\
    \    }\n    return factor\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T) {\n\
    \  candidate := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpebtiammd_test.go:36: expected '%!s(int=5)', got '%!s(int=4)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmpebtiammd_test.go:36:\
    \ expected '%!s(int=3)', got '%!s(int=5)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmpebtiammd_test.go:36: expected '%!s(int=7)', got '%!s(int=8)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpebtiammd_test.go:36:\
    \ expected '%!s(int=11)', got '%!s(int=18)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpebtiammd_test.go:36: expected '%!s(int=29)', got '%!s(int=115)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.055s\nFAIL\n"
  timestamp: 1660075684
- exit_code: null
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    prime := 2\n    factor :=\
    \ 1\n    for factor < n {\n        if n%prime == 0 {\n            factor++\n \
    \       }\n        prime++\n    }\n    return factor\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660075694
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    if n < 2 {\n        return\
    \ n\n    }\n    p := 2\n    q := n\n    for {\n        if q%p == 0 {\n       \
    \     return p\n        }\n        p += 2\n        q /= p\n    }\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpe3tekxnk_test.go:41: expected '%!s(int=5)', got '%!s(int=6)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmpe3tekxnk_test.go:41:\
    \ expected '%!s(int=3)', got '%!s(int=8)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmpe3tekxnk_test.go:41: expected '%!s(int=7)', got '%!s(int=8)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpe3tekxnk_test.go:41:\
    \ expected '%!s(int=11)', got '%!s(int=2)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpe3tekxnk_test.go:41: expected '%!s(int=29)', got '%!s(int=12)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.033s\nFAIL\n"
  timestamp: 1660075684
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    n -= 1\n    i := 2\n   \
    \ for i <= n {\n        if n % i == 0 {\n            n = n / i\n        } else\
    \ {\n            i = i + 1\n        }\n    }\n    return n\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpjbxho4jg_test.go:39: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmpjbxho4jg_test.go:39:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmpjbxho4jg_test.go:39: expected '%!s(int=7)', got '%!s(int=1)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpjbxho4jg_test.go:39:\
    \ expected '%!s(int=11)', got '%!s(int=1)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpjbxho4jg_test.go:39: expected '%!s(int=29)', got '%!s(int=1)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.028s\nFAIL\n"
  timestamp: 1660075684
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    if n < 2 {\n        return\
    \ n\n    }\n    max := 2\n    for i := 2; i <= n; i++ {\n        if n % i == 0\
    \ {\n            max = i\n            break\n        }\n    }\n    return max\n\
    }\n\nfunc TestLargest_Prime_Factor(t *testing.T) {\n  candidate := largest_prime_factor\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(15), expected: 5 },\n     { actual:\
    \ candidate(27), expected: 3 },\n     { actual: candidate(63), expected: 7 },\n\
    \     { actual: candidate(330), expected: 11 },\n     { actual: candidate(13195),\
    \ expected: 29 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmp8byf3e_z_test.go:40: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__2 (0.00s)\n        tmp8byf3e_z_test.go:40:\
    \ expected '%!s(int=7)', got '%!s(int=3)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__3\
    \ (0.00s)\n        tmp8byf3e_z_test.go:40: expected '%!s(int=11)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__4 (0.00s)\n        tmp8byf3e_z_test.go:40:\
    \ expected '%!s(int=29)', got '%!s(int=5)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.030s\nFAIL\n"
  timestamp: 1660075684
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    prime := 2\n    factor :=\
    \ 1\n    for factor < n {\n        if n%prime == 0 {\n            n = n/prime\n\
    \        } else {\n            prime++\n        }\n        factor++\n    }\n \
    \   return prime\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T) {\n  candidate\
    \ := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmpvwphj7ut_test.go:40: expected '%!s(int=7)', got '%!s(int=6)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpvwphj7ut_test.go:40:\
    \ expected '%!s(int=11)', got '%!s(int=9)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpvwphj7ut_test.go:40: expected '%!s(int=29)', got '%!s(int=27)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.039s\nFAIL\n"
  timestamp: 1660075684
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    p := 2\n    for i := 2;\
    \ i <= n; i++ {\n        if n%i == 0 {\n            p = i\n            break\n\
    \        }\n    }\n    return p\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T)\
    \ {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpbxlr0aro_test.go:37: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__2 (0.00s)\n        tmpbxlr0aro_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=3)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__3\
    \ (0.00s)\n        tmpbxlr0aro_test.go:37: expected '%!s(int=11)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__4 (0.00s)\n        tmpbxlr0aro_test.go:37:\
    \ expected '%!s(int=29)', got '%!s(int=5)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.045s\nFAIL\n"
  timestamp: 1660075684
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    prime := 2\n    factor :=\
    \ 1\n    for factor < n && prime < n {\n        if n%prime == 0 {\n          \
    \  factor++\n        }\n        prime++\n    }\n    return factor\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpjsa6rgh7_test.go:38: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__2 (0.00s)\n        tmpjsa6rgh7_test.go:38:\
    \ expected '%!s(int=7)', got '%!s(int=5)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__3\
    \ (0.00s)\n        tmpjsa6rgh7_test.go:38: expected '%!s(int=11)', got '%!s(int=15)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__4 (0.00s)\n        tmpjsa6rgh7_test.go:38:\
    \ expected '%!s(int=29)', got '%!s(int=15)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.034s\nFAIL\n"
  timestamp: 1660075684
- exit_code: 0
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    prime := 2\n    factor :=\
    \ 1\n    for n > 1 {\n        if n % prime == 0 {\n            n = n / prime\n\
    \            factor = prime\n        } else {\n            prime++\n        }\n\
    \    }\n    return factor\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T) {\n\
    \  candidate := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.038s\n"
  timestamp: 1660075684
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    primes := make([]int, n)\n\
    \    for i := 0; i < n; i++ {\n        primes[i] = 1\n    }\n    for i := 2; i\
    \ < n; i++ {\n        for j := 2; j < i; j++ {\n            if primes[j] == 0\
    \ {\n                primes[j] = 1\n                primes[i]++\n            \
    \    break\n            }\n        }\n    }\n    return primes[n-1]\n}\n\nfunc\
    \ TestLargest_Prime_Factor(t *testing.T) {\n  candidate := largest_prime_factor\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(15), expected: 5 },\n     { actual:\
    \ candidate(27), expected: 3 },\n     { actual: candidate(63), expected: 7 },\n\
    \     { actual: candidate(330), expected: 11 },\n     { actual: candidate(13195),\
    \ expected: 29 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.12s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpeteqx0j__test.go:43: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmpeteqx0j__test.go:43:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmpeteqx0j__test.go:43: expected '%!s(int=7)', got '%!s(int=1)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpeteqx0j__test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=1)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpeteqx0j__test.go:43: expected '%!s(int=29)', got '%!s(int=1)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.140s\nFAIL\n"
  timestamp: 1660075684
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    prime := 2\n    factor :=\
    \ 1\n    for n > 1 {\n        if n % prime == 0 {\n            factor++\n    \
    \    }\n        prime++\n        n/=prime\n    }\n    return factor\n}\n\nfunc\
    \ TestLargest_Prime_Factor(t *testing.T) {\n  candidate := largest_prime_factor\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(15), expected: 5 },\n     { actual:\
    \ candidate(27), expected: 3 },\n     { actual: candidate(63), expected: 7 },\n\
    \     { actual: candidate(330), expected: 11 },\n     { actual: candidate(13195),\
    \ expected: 29 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmph15mqfet_test.go:39: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmph15mqfet_test.go:39:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmph15mqfet_test.go:39: expected '%!s(int=7)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmph15mqfet_test.go:39:\
    \ expected '%!s(int=11)', got '%!s(int=3)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmph15mqfet_test.go:39: expected '%!s(int=29)', got '%!s(int=3)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.052s\nFAIL\n"
  timestamp: 1660075684
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    p := 2\n    i := 2\n   \
    \ for i < n {\n        if n%i == 0 {\n            p += 1\n            n /= i\n\
    \        }\n        i++\n    }\n    return p\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmp0y0207ko_test.go:39: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__2 (0.00s)\n        tmp0y0207ko_test.go:39:\
    \ expected '%!s(int=7)', got '%!s(int=4)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__3\
    \ (0.00s)\n        tmp0y0207ko_test.go:39: expected '%!s(int=11)', got '%!s(int=5)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__4 (0.00s)\n        tmp0y0207ko_test.go:39:\
    \ expected '%!s(int=29)', got '%!s(int=5)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.058s\nFAIL\n"
  timestamp: 1660075686
- exit_code: null
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    prime := 2\n    factor :=\
    \ 2\n    for factor < n {\n        if n%prime == 0 {\n            factor++\n \
    \       }\n        prime++\n    }\n    return factor\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660075698
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    prime := 2\n    factor :=\
    \ 1\n    for factor < n && n % factor == 0 {\n        factor++\n    }\n    for\
    \ factor < n && n % factor != 0 {\n        prime++\n        n /= factor\n    }\n\
    \    return prime\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T) {\n  candidate\
    \ := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__1\
    \ (0.00s)\n        tmpzyr77p6b_test.go:39: expected '%!s(int=3)', got '%!s(int=4)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpzyr77p6b_test.go:39:\
    \ expected '%!s(int=11)', got '%!s(int=4)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpzyr77p6b_test.go:39: expected '%!s(int=29)', got '%!s(int=4)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.070s\nFAIL\n"
  timestamp: 1660075688
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    prime := 2\n    for i :=\
    \ 3; i <= n; i++ {\n        if n%i == 0 {\n            prime = i\n           \
    \ break\n        }\n    }\n    return prime\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpotood0d1_test.go:37: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__2 (0.00s)\n        tmpotood0d1_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=3)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__3\
    \ (0.00s)\n        tmpotood0d1_test.go:37: expected '%!s(int=11)', got '%!s(int=3)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__4 (0.00s)\n        tmpotood0d1_test.go:37:\
    \ expected '%!s(int=29)', got '%!s(int=5)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.042s\nFAIL\n"
  timestamp: 1660075688
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    p := 2\n    for {\n    \
    \    if n%p == 0 {\n            return p\n        }\n        p += 1\n    }\n}\n\
    \nfunc TestLargest_Prime_Factor(t *testing.T) {\n  candidate := largest_prime_factor\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(15), expected: 5 },\n     { actual:\
    \ candidate(27), expected: 3 },\n     { actual: candidate(63), expected: 7 },\n\
    \     { actual: candidate(330), expected: 11 },\n     { actual: candidate(13195),\
    \ expected: 29 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmp3oq0hn14_test.go:36: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__2 (0.00s)\n        tmp3oq0hn14_test.go:36:\
    \ expected '%!s(int=7)', got '%!s(int=3)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__3\
    \ (0.00s)\n        tmp3oq0hn14_test.go:36: expected '%!s(int=11)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__4 (0.00s)\n        tmp3oq0hn14_test.go:36:\
    \ expected '%!s(int=29)', got '%!s(int=5)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.060s\nFAIL\n"
  timestamp: 1660075688
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    n -= 1\n    i := 2\n   \
    \ for i < n {\n        if n%i == 0 {\n            n = n/i\n        } else {\n\
    \            i = i + 1\n        }\n    }\n    return i\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpxcc18zw__test.go:39: expected '%!s(int=5)', got '%!s(int=7)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmpxcc18zw__test.go:39:\
    \ expected '%!s(int=3)', got '%!s(int=13)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmpxcc18zw__test.go:39: expected '%!s(int=7)', got '%!s(int=31)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpxcc18zw__test.go:39:\
    \ expected '%!s(int=11)', got '%!s(int=47)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpxcc18zw__test.go:39: expected '%!s(int=29)', got '%!s(int=733)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.057s\nFAIL\n"
  timestamp: 1660075688
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    p := 2\n    i := 2\n   \
    \ for i <= n {\n        if n % i == 0 {\n            p = i\n        }\n      \
    \  i++\n    }\n    return p\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T)\
    \ {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpelk8gicy_test.go:38: expected '%!s(int=5)', got '%!s(int=15)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmpelk8gicy_test.go:38:\
    \ expected '%!s(int=3)', got '%!s(int=27)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmpelk8gicy_test.go:38: expected '%!s(int=7)', got '%!s(int=63)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpelk8gicy_test.go:38:\
    \ expected '%!s(int=11)', got '%!s(int=330)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpelk8gicy_test.go:38: expected '%!s(int=29)', got '%!s(int=13195)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.024s\nFAIL\n"
  timestamp: 1660075688
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    prime := 2\n    factor :=\
    \ 1\n    for n > 1 {\n        if n % prime == 0 {\n            n = n / prime\n\
    \            factor = prime + 1\n        } else {\n            prime++\n     \
    \   }\n    }\n    return factor\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T)\
    \ {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmp4wn5brjc_test.go:40: expected '%!s(int=5)', got '%!s(int=6)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmp4wn5brjc_test.go:40:\
    \ expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmp4wn5brjc_test.go:40: expected '%!s(int=7)', got '%!s(int=8)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmp4wn5brjc_test.go:40:\
    \ expected '%!s(int=11)', got '%!s(int=12)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmp4wn5brjc_test.go:40: expected '%!s(int=29)', got '%!s(int=30)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.030s\nFAIL\n"
  timestamp: 1660075684
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    primes := make([]int, n)\n\
    \    for i := 0; i < n; i++ {\n        primes[i] = 1\n    }\n    for i := 2; i\
    \ < n; i++ {\n        for j := 0; j < i; j++ {\n            if primes[j] == 0\
    \ {\n                break\n            }\n            if n % primes[j] == 0 {\n\
    \                primes[j] = -1\n                break\n            }\n      \
    \  }\n        if primes[i] == -1 {\n            return i\n        }\n    }\n \
    \   return -1\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T) {\n  candidate\
    \ := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpr89k7jre_test.go:48: expected '%!s(int=5)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmpr89k7jre_test.go:48:\
    \ expected '%!s(int=3)', got '%!s(int=-1)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmpr89k7jre_test.go:48: expected '%!s(int=7)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpr89k7jre_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=-1)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpr89k7jre_test.go:48: expected '%!s(int=29)', got '%!s(int=-1)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.042s\nFAIL\n"
  timestamp: 1660075688
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    prime := 2\n    factor :=\
    \ 1\n    for factor < n && prime*factor <= n {\n        prime *= factor\n    \
    \    factor++\n    }\n    return prime\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T)\
    \ {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpx9l_539m_test.go:36: expected '%!s(int=5)', got '%!s(int=12)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmpx9l_539m_test.go:36:\
    \ expected '%!s(int=3)', got '%!s(int=12)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmpx9l_539m_test.go:36: expected '%!s(int=7)', got '%!s(int=48)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpx9l_539m_test.go:36:\
    \ expected '%!s(int=11)', got '%!s(int=240)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpx9l_539m_test.go:36: expected '%!s(int=29)', got '%!s(int=10080)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.042s\nFAIL\n"
  timestamp: 1660075688
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    p := 2\n    for {\n    \
    \    if n%p == 0 {\n            return p\n        }\n        p += 1\n    }\n}\n\
    \nfunc TestLargest_Prime_Factor(t *testing.T) {\n  candidate := largest_prime_factor\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(15), expected: 5 },\n     { actual:\
    \ candidate(27), expected: 3 },\n     { actual: candidate(63), expected: 7 },\n\
    \     { actual: candidate(330), expected: 11 },\n     { actual: candidate(13195),\
    \ expected: 29 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmp3oq0hn14_test.go:36: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__2 (0.00s)\n        tmp3oq0hn14_test.go:36:\
    \ expected '%!s(int=7)', got '%!s(int=3)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__3\
    \ (0.00s)\n        tmp3oq0hn14_test.go:36: expected '%!s(int=11)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__4 (0.00s)\n        tmp3oq0hn14_test.go:36:\
    \ expected '%!s(int=29)', got '%!s(int=5)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.060s\nFAIL\n"
  timestamp: 1660075688
- exit_code: 0
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    prime := 2\n    factor :=\
    \ 1\n    for n > 1 {\n        if n % prime == 0 {\n            n = n / prime\n\
    \            factor = prime\n        } else {\n            prime++\n        }\n\
    \    }\n    return factor\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T) {\n\
    \  candidate := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.038s\n"
  timestamp: 1660075684
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    n -= 1\n    i := 2\n   \
    \ for i <= n {\n        if n%i == 0 {\n            return i\n        }\n     \
    \   i += 2\n    }\n    return n\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T)\
    \ {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpbbs_4k_s_test.go:38: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmpbbs_4k_s_test.go:38:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmpbbs_4k_s_test.go:38: expected '%!s(int=7)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpbbs_4k_s_test.go:38:\
    \ expected '%!s(int=11)', got '%!s(int=329)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpbbs_4k_s_test.go:38: expected '%!s(int=29)', got '%!s(int=2)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.035s\nFAIL\n"
  timestamp: 1660075688
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    p := 2\n    i := 2\n   \
    \ for i <= n {\n        if n % i == 0 {\n            p = i\n        }\n      \
    \  i += 2\n    }\n    return p\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T)\
    \ {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpwaklz_p4_test.go:38: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmpwaklz_p4_test.go:38:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmpwaklz_p4_test.go:38: expected '%!s(int=7)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpwaklz_p4_test.go:38:\
    \ expected '%!s(int=11)', got '%!s(int=330)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpwaklz_p4_test.go:38: expected '%!s(int=29)', got '%!s(int=2)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.041s\nFAIL\n"
  timestamp: 1660075688
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    prime := 2\n    factor :=\
    \ 1\n    for factor < n {\n        if n%prime == 0 {\n            n = n/prime\n\
    \        } else {\n            prime++\n        }\n        factor++\n    }\n \
    \   return factor\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T) {\n  candidate\
    \ := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__1\
    \ (0.00s)\n        tmps0ocdq5z_test.go:40: expected '%!s(int=3)', got '%!s(int=4)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.036s\nFAIL\n"
  timestamp: 1660075688
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    prime := 2\n    factor :=\
    \ 1\n    for n > 1 {\n        if n % prime == 0 {\n            factor = prime\n\
    \        }\n        prime++\n        n/=prime\n    }\n    return factor\n}\n\n\
    func TestLargest_Prime_Factor(t *testing.T) {\n  candidate := largest_prime_factor\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(15), expected: 5 },\n     { actual:\
    \ candidate(27), expected: 3 },\n     { actual: candidate(63), expected: 7 },\n\
    \     { actual: candidate(330), expected: 11 },\n     { actual: candidate(13195),\
    \ expected: 29 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmp6tp9u3mp_test.go:39: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__2 (0.00s)\n        tmp6tp9u3mp_test.go:39:\
    \ expected '%!s(int=7)', got '%!s(int=3)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__3\
    \ (0.00s)\n        tmp6tp9u3mp_test.go:39: expected '%!s(int=11)', got '%!s(int=5)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__4 (0.00s)\n        tmp6tp9u3mp_test.go:39:\
    \ expected '%!s(int=29)', got '%!s(int=6)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.028s\nFAIL\n"
  timestamp: 1660075688
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    n -= 1\n    i := 2\n   \
    \ max := 1\n    for i <= n {\n        if n % i == 0 {\n            max = i\n \
    \       }\n        i += 2\n    }\n    return max\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpfa3macjv_test.go:39: expected '%!s(int=5)', got '%!s(int=14)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmpfa3macjv_test.go:39:\
    \ expected '%!s(int=3)', got '%!s(int=26)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmpfa3macjv_test.go:39: expected '%!s(int=7)', got '%!s(int=62)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpfa3macjv_test.go:39:\
    \ expected '%!s(int=11)', got '%!s(int=1)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpfa3macjv_test.go:39: expected '%!s(int=29)', got '%!s(int=13194)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.047s\nFAIL\n"
  timestamp: 1660075688
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    n -= 2\n    i := 2\n   \
    \ factor := 1\n    for i <= n {\n        if n % i == 0 {\n            factor *=\
    \ i\n            n /= i\n        }\n        i++\n    }\n    if n > 1 {\n     \
    \   factor *= n\n    }\n    return factor\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpn_9e8yd9_test.go:43: expected '%!s(int=5)', got '%!s(int=13)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmpn_9e8yd9_test.go:43:\
    \ expected '%!s(int=3)', got '%!s(int=25)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmpn_9e8yd9_test.go:43: expected '%!s(int=7)', got '%!s(int=61)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpn_9e8yd9_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=328)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpn_9e8yd9_test.go:43: expected '%!s(int=29)', got '%!s(int=13193)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.044s\nFAIL\n"
  timestamp: 1660075688
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    if n < 2 {\n        return\
    \ n\n    }\n    p := 2\n    for i := 3; i <= n; i += p {\n        if n%i == 0\
    \ {\n            p = i\n        }\n    }\n    return p\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmprybg3qbw_test.go:39: expected '%!s(int=5)', got '%!s(int=15)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmprybg3qbw_test.go:39:\
    \ expected '%!s(int=3)', got '%!s(int=27)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmprybg3qbw_test.go:39: expected '%!s(int=7)', got '%!s(int=63)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmprybg3qbw_test.go:39:\
    \ expected '%!s(int=11)', got '%!s(int=330)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmprybg3qbw_test.go:39: expected '%!s(int=29)', got '%!s(int=13195)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.055s\nFAIL\n"
  timestamp: 1660075688
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    n -= 1\n    i := 2\n   \
    \ for i <= n {\n        if n%i == 0 {\n            return i\n        }\n     \
    \   i += 2\n    }\n    return n\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T)\
    \ {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpbbs_4k_s_test.go:38: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmpbbs_4k_s_test.go:38:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmpbbs_4k_s_test.go:38: expected '%!s(int=7)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpbbs_4k_s_test.go:38:\
    \ expected '%!s(int=11)', got '%!s(int=329)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpbbs_4k_s_test.go:38: expected '%!s(int=29)', got '%!s(int=2)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.035s\nFAIL\n"
  timestamp: 1660075688
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    prime := 2\n    factor :=\
    \ 1\n    for n > 1 {\n        if n % prime == 0 {\n            n = n / prime\n\
    \            factor = prime + 1\n        } else {\n            prime++\n     \
    \   }\n    }\n    return factor\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T)\
    \ {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmp4wn5brjc_test.go:40: expected '%!s(int=5)', got '%!s(int=6)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmp4wn5brjc_test.go:40:\
    \ expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmp4wn5brjc_test.go:40: expected '%!s(int=7)', got '%!s(int=8)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmp4wn5brjc_test.go:40:\
    \ expected '%!s(int=11)', got '%!s(int=12)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmp4wn5brjc_test.go:40: expected '%!s(int=29)', got '%!s(int=30)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.030s\nFAIL\n"
  timestamp: 1660075684
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    if n < 2 {\n        return\
    \ n\n    }\n    p := 2\n    for i := 3; i <= n; i += p {\n        if n % i ==\
    \ 0 {\n            p = i\n        }\n    }\n    return p\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpzrc65f4x_test.go:39: expected '%!s(int=5)', got '%!s(int=15)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmpzrc65f4x_test.go:39:\
    \ expected '%!s(int=3)', got '%!s(int=27)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmpzrc65f4x_test.go:39: expected '%!s(int=7)', got '%!s(int=63)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpzrc65f4x_test.go:39:\
    \ expected '%!s(int=11)', got '%!s(int=330)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpzrc65f4x_test.go:39: expected '%!s(int=29)', got '%!s(int=13195)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.046s\nFAIL\n"
  timestamp: 1660075688
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    n -= 1\n    prime := 2\n\
    \    for i := 3; i <= n; i++ {\n        if n%i == 0 {\n            prime = i\n\
    \            break\n        }\n    }\n    return prime\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpkdtxcvam_test.go:38: expected '%!s(int=5)', got '%!s(int=7)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmpkdtxcvam_test.go:38:\
    \ expected '%!s(int=3)', got '%!s(int=13)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmpkdtxcvam_test.go:38: expected '%!s(int=7)', got '%!s(int=31)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpkdtxcvam_test.go:38:\
    \ expected '%!s(int=11)', got '%!s(int=7)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpkdtxcvam_test.go:38: expected '%!s(int=29)', got '%!s(int=3)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.035s\nFAIL\n"
  timestamp: 1660075688
- exit_code: 2
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    n -= 1\n    x := n\n   \
    \ y := 2\n    for true {\n        if x % y == 0 {\n            return y\n    \
    \    }\n        x /= y\n        y++\n    }\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp2o4nkjrj_test.go:20:1: missing return

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075688
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    p := 2\n    i := 2\n   \
    \ for i <= n {\n        if n % i == 0 {\n            p = i\n        }\n      \
    \  i += 2\n    }\n    return p\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T)\
    \ {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpwaklz_p4_test.go:38: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmpwaklz_p4_test.go:38:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmpwaklz_p4_test.go:38: expected '%!s(int=7)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpwaklz_p4_test.go:38:\
    \ expected '%!s(int=11)', got '%!s(int=330)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpwaklz_p4_test.go:38: expected '%!s(int=29)', got '%!s(int=2)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.041s\nFAIL\n"
  timestamp: 1660075688
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    p := 2\n    q := n\n   \
    \ d := 1\n    for {\n        if q%p == 0 {\n            return p\n        }\n\
    \        if q%d == 0 {\n            return d\n        }\n        d *= p\n    \
    \    p += 2\n        q -= d\n    }\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T)\
    \ {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpz9jk9f1u_test.go:43: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmpz9jk9f1u_test.go:43:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmpz9jk9f1u_test.go:43: expected '%!s(int=7)', got '%!s(int=1)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpz9jk9f1u_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=2)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpz9jk9f1u_test.go:43: expected '%!s(int=29)', got '%!s(int=1)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.028s\nFAIL\n"
  timestamp: 1660075688
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    n -= 1\n    prime := 2\n\
    \    for i := 3; i <= n; i++ {\n        if n%i == 0 {\n            prime = i\n\
    \            break\n        }\n    }\n    return prime\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpkdtxcvam_test.go:38: expected '%!s(int=5)', got '%!s(int=7)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmpkdtxcvam_test.go:38:\
    \ expected '%!s(int=3)', got '%!s(int=13)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmpkdtxcvam_test.go:38: expected '%!s(int=7)', got '%!s(int=31)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpkdtxcvam_test.go:38:\
    \ expected '%!s(int=11)', got '%!s(int=7)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpkdtxcvam_test.go:38: expected '%!s(int=29)', got '%!s(int=3)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.035s\nFAIL\n"
  timestamp: 1660075688
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    primes := make([]int, n)\n\
    \    primes[0] = 2\n    primes[1] = 2\n    for i := 2; i < n; i++ {\n        for\
    \ j := 0; j < i; j++ {\n            if primes[j] > i {\n                primes[j]\
    \ = primes[j] + 1\n                break\n            }\n        }\n    }\n  \
    \  return primes[len(primes)-1]\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T)\
    \ {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.07s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmppbuhb1xn_test.go:41: expected '%!s(int=5)', got '%!s(int=0)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmppbuhb1xn_test.go:41:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmppbuhb1xn_test.go:41: expected '%!s(int=7)', got '%!s(int=0)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmppbuhb1xn_test.go:41:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmppbuhb1xn_test.go:41: expected '%!s(int=29)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.094s\nFAIL\n"
  timestamp: 1660075688
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    n -= 1\n    p := 2\n   \
    \ for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            p = i\n    \
    \        break\n        }\n    }\n    return p\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpga67dyin_test.go:38: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmpga67dyin_test.go:38:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmpga67dyin_test.go:38: expected '%!s(int=7)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpga67dyin_test.go:38:\
    \ expected '%!s(int=11)', got '%!s(int=7)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpga67dyin_test.go:38: expected '%!s(int=29)', got '%!s(int=2)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.046s\nFAIL\n"
  timestamp: 1660075690
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    largestPrimeFactor := 1\n\
    \    largestPrimeFactorIsPrime := true\n    for i := 2; i <= n; i++ {\n      \
    \  if n % i == 0 {\n            if largestPrimeFactorIsPrime {\n             \
    \   largestPrimeFactor = i\n            }\n            largestPrimeFactorIsPrime\
    \ = false\n        }\n    }\n    return largestPrimeFactor\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpn_gyyjko_test.go:40: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__2 (0.00s)\n        tmpn_gyyjko_test.go:40:\
    \ expected '%!s(int=7)', got '%!s(int=3)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__3\
    \ (0.00s)\n        tmpn_gyyjko_test.go:40: expected '%!s(int=11)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__4 (0.00s)\n        tmpn_gyyjko_test.go:40:\
    \ expected '%!s(int=29)', got '%!s(int=5)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.041s\nFAIL\n"
  timestamp: 1660075690
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    n -= 1\n    primes := make([]int,\
    \ n)\n    primes[0] = 2\n    for i := 1; i < n; i++ {\n        for j := 0; j <\
    \ i; j++ {\n            if primes[j] == 0 {\n                primes[j] = primes[i]\n\
    \                break\n            }\n        }\n    }\n    for i := 2; i < n;\
    \ i++ {\n        if primes[i] == 0 {\n            return i\n        }\n    }\n\
    \    return n\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T) {\n  candidate\
    \ := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpe2ue7qmv_test.go:46: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmpe2ue7qmv_test.go:46:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmpe2ue7qmv_test.go:46: expected '%!s(int=7)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpe2ue7qmv_test.go:46:\
    \ expected '%!s(int=11)', got '%!s(int=2)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpe2ue7qmv_test.go:46: expected '%!s(int=29)', got '%!s(int=2)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.036s\nFAIL\n"
  timestamp: 1660075692
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    if n < 2 {\n        return\
    \ n\n    }\n    largest := 2\n    for i := 3; i <= n; i++ {\n        if n % i\
    \ == 0 {\n            largest = i\n            break\n        }\n    }\n    return\
    \ largest\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T) {\n  candidate :=\
    \ largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15), expected:\
    \ 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual: candidate(63),\
    \ expected: 7 },\n     { actual: candidate(330), expected: 11 },\n     { actual:\
    \ candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmps6c0iee4_test.go:40: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__2 (0.00s)\n        tmps6c0iee4_test.go:40:\
    \ expected '%!s(int=7)', got '%!s(int=3)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__3\
    \ (0.00s)\n        tmps6c0iee4_test.go:40: expected '%!s(int=11)', got '%!s(int=3)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__4 (0.00s)\n        tmps6c0iee4_test.go:40:\
    \ expected '%!s(int=29)', got '%!s(int=5)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.038s\nFAIL\n"
  timestamp: 1660075692
- exit_code: null
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    prime := 2\n    factor :=\
    \ 1\n    for factor < n {\n        if n%prime == 0 {\n            factor++\n \
    \       }\n        prime++\n    }\n    return factor\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660075694
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    n -= 1\n    i := 2\n   \
    \ factor := 1\n    for i <= n {\n        if n % i == 0 {\n            factor *=\
    \ i\n            n /= i\n        }\n        i += 1\n    }\n    return factor\n\
    }\n\nfunc TestLargest_Prime_Factor(t *testing.T) {\n  candidate := largest_prime_factor\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(15), expected: 5 },\n     { actual:\
    \ candidate(27), expected: 3 },\n     { actual: candidate(63), expected: 7 },\n\
    \     { actual: candidate(330), expected: 11 },\n     { actual: candidate(13195),\
    \ expected: 29 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmp7i7sgu1m_test.go:40: expected '%!s(int=5)', got '%!s(int=14)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmp7i7sgu1m_test.go:40:\
    \ expected '%!s(int=3)', got '%!s(int=26)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmp7i7sgu1m_test.go:40: expected '%!s(int=7)', got '%!s(int=62)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmp7i7sgu1m_test.go:40:\
    \ expected '%!s(int=11)', got '%!s(int=329)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmp7i7sgu1m_test.go:40: expected '%!s(int=29)', got '%!s(int=4398)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.059s\nFAIL\n"
  timestamp: 1660075692
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    n -= 2\n    i := 2\n   \
    \ for i <= n {\n        if n % i == 0 {\n            n = n / i\n        } else\
    \ {\n            i++\n        }\n    }\n    return n\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpd2sx5n5b_test.go:39: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmpd2sx5n5b_test.go:39:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmpd2sx5n5b_test.go:39: expected '%!s(int=7)', got '%!s(int=1)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpd2sx5n5b_test.go:39:\
    \ expected '%!s(int=11)', got '%!s(int=1)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpd2sx5n5b_test.go:39: expected '%!s(int=29)', got '%!s(int=1)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.036s\nFAIL\n"
  timestamp: 1660075692
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    n -= 1\n    i := 2\n   \
    \ for i < n {\n        if n % i == 0 {\n            n = n / i\n        } else\
    \ {\n            i = i + 1\n        }\n    }\n    return n\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmphory12t7_test.go:39: expected '%!s(int=5)', got '%!s(int=7)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmphory12t7_test.go:39:\
    \ expected '%!s(int=3)', got '%!s(int=13)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmphory12t7_test.go:39: expected '%!s(int=7)', got '%!s(int=31)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmphory12t7_test.go:39:\
    \ expected '%!s(int=11)', got '%!s(int=47)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmphory12t7_test.go:39: expected '%!s(int=29)', got '%!s(int=733)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.039s\nFAIL\n"
  timestamp: 1660075692
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    n -= 1\n    prime := 2\n\
    \    for i := 3; i <= n; i++ {\n        if n%i == 0 {\n            prime = i\n\
    \            break\n        }\n    }\n    return prime\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpkdtxcvam_test.go:38: expected '%!s(int=5)', got '%!s(int=7)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmpkdtxcvam_test.go:38:\
    \ expected '%!s(int=3)', got '%!s(int=13)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmpkdtxcvam_test.go:38: expected '%!s(int=7)', got '%!s(int=31)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpkdtxcvam_test.go:38:\
    \ expected '%!s(int=11)', got '%!s(int=7)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpkdtxcvam_test.go:38: expected '%!s(int=29)', got '%!s(int=3)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.035s\nFAIL\n"
  timestamp: 1660075688
- exit_code: null
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    prime := 2\n    factor :=\
    \ 1\n    for factor < n && prime < n {\n        if n % prime == 0 {\n        \
    \    factor = factor * prime\n            prime++\n        }\n    }\n    return\
    \ factor\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T) {\n  candidate := largest_prime_factor\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(15), expected: 5 },\n     { actual:\
    \ candidate(27), expected: 3 },\n     { actual: candidate(63), expected: 7 },\n\
    \     { actual: candidate(330), expected: 11 },\n     { actual: candidate(13195),\
    \ expected: 29 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660075703
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    n -= 1\n    prime := 2\n\
    \    for i := 3; i <= n; i++ {\n        if n%i == 0 {\n            prime = i\n\
    \            break\n        }\n    }\n    return prime\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpkdtxcvam_test.go:38: expected '%!s(int=5)', got '%!s(int=7)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmpkdtxcvam_test.go:38:\
    \ expected '%!s(int=3)', got '%!s(int=13)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmpkdtxcvam_test.go:38: expected '%!s(int=7)', got '%!s(int=31)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpkdtxcvam_test.go:38:\
    \ expected '%!s(int=11)', got '%!s(int=7)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpkdtxcvam_test.go:38: expected '%!s(int=29)', got '%!s(int=3)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.035s\nFAIL\n"
  timestamp: 1660075688
- exit_code: null
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    prime := 2\n    factor :=\
    \ 1\n    for factor < n {\n        if n%prime == 0 {\n            factor++\n \
    \       }\n        prime++\n    }\n    return factor\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660075694
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    prime := 2\n    factor :=\
    \ 1\n    for n > 1 {\n        if n%prime == 0 {\n            factor++\n      \
    \  }\n        prime++\n        n/=prime\n    }\n    return factor\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmp5p5_8e3x_test.go:39: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmp5p5_8e3x_test.go:39:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmp5p5_8e3x_test.go:39: expected '%!s(int=7)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmp5p5_8e3x_test.go:39:\
    \ expected '%!s(int=11)', got '%!s(int=3)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmp5p5_8e3x_test.go:39: expected '%!s(int=29)', got '%!s(int=3)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.043s\nFAIL\n"
  timestamp: 1660075692
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    largest_prime := 2\n   \
    \ for largest_prime < n {\n        if n%largest_prime == 0 {\n            break\n\
    \        }\n        largest_prime += 1\n    }\n    return largest_prime\n}\n\n\
    func TestLargest_Prime_Factor(t *testing.T) {\n  candidate := largest_prime_factor\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(15), expected: 5 },\n     { actual:\
    \ candidate(27), expected: 3 },\n     { actual: candidate(63), expected: 7 },\n\
    \     { actual: candidate(330), expected: 11 },\n     { actual: candidate(13195),\
    \ expected: 29 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpbe4czsst_test.go:37: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__2 (0.00s)\n        tmpbe4czsst_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=3)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__3\
    \ (0.00s)\n        tmpbe4czsst_test.go:37: expected '%!s(int=11)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__4 (0.00s)\n        tmpbe4czsst_test.go:37:\
    \ expected '%!s(int=29)', got '%!s(int=5)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.036s\nFAIL\n"
  timestamp: 1660075692
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    n -= 1\n    i := 2\n   \
    \ for i <= n {\n        if n % i == 0 {\n            n = n / i\n        } else\
    \ {\n            i = i + 1\n        }\n    }\n    return n\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpjbxho4jg_test.go:39: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmpjbxho4jg_test.go:39:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmpjbxho4jg_test.go:39: expected '%!s(int=7)', got '%!s(int=1)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpjbxho4jg_test.go:39:\
    \ expected '%!s(int=11)', got '%!s(int=1)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpjbxho4jg_test.go:39: expected '%!s(int=29)', got '%!s(int=1)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.028s\nFAIL\n"
  timestamp: 1660075684
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    if n == 1 {\n        return\
    \ 1\n    }\n    max := 2\n    for i := 2; i <= n; i++ {\n        if n % i == 0\
    \ {\n            max = i\n            break\n        }\n    }\n    return max\n\
    }\n\nfunc TestLargest_Prime_Factor(t *testing.T) {\n  candidate := largest_prime_factor\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(15), expected: 5 },\n     { actual:\
    \ candidate(27), expected: 3 },\n     { actual: candidate(63), expected: 7 },\n\
    \     { actual: candidate(330), expected: 11 },\n     { actual: candidate(13195),\
    \ expected: 29 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpwndnouct_test.go:40: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__2 (0.00s)\n        tmpwndnouct_test.go:40:\
    \ expected '%!s(int=7)', got '%!s(int=3)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__3\
    \ (0.00s)\n        tmpwndnouct_test.go:40: expected '%!s(int=11)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__4 (0.00s)\n        tmpwndnouct_test.go:40:\
    \ expected '%!s(int=29)', got '%!s(int=5)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.048s\nFAIL\n"
  timestamp: 1660075692
- exit_code: null
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    prime := 2\n    factor :=\
    \ 2\n    for factor < n {\n        if n%prime == 0 {\n            factor++\n \
    \       }\n        prime++\n    }\n    return factor\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660075698
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    prime := 2\n    factor :=\
    \ 1\n    for factor < n && prime*factor <= n {\n        prime++\n        factor++\n\
    \    }\n    return factor\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T) {\n\
    \  candidate := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpebtiammd_test.go:36: expected '%!s(int=5)', got '%!s(int=4)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmpebtiammd_test.go:36:\
    \ expected '%!s(int=3)', got '%!s(int=5)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmpebtiammd_test.go:36: expected '%!s(int=7)', got '%!s(int=8)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpebtiammd_test.go:36:\
    \ expected '%!s(int=11)', got '%!s(int=18)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpebtiammd_test.go:36: expected '%!s(int=29)', got '%!s(int=115)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.055s\nFAIL\n"
  timestamp: 1660075684
- exit_code: null
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    n -= 2\n    i := 2\n   \
    \ for {\n        if n%i == 0 {\n            return i\n        }\n        i +=\
    \ 2\n    }\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T) {\n  candidate :=\
    \ largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15), expected:\
    \ 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual: candidate(63),\
    \ expected: 7 },\n     { actual: candidate(330), expected: 11 },\n     { actual:\
    \ candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660075703
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    largest_prime := 2\n   \
    \ for i := 3; i <= n; i++ {\n        if n % i == 0 {\n            largest_prime\
    \ = i\n            break\n        }\n    }\n    return largest_prime\n}\n\nfunc\
    \ TestLargest_Prime_Factor(t *testing.T) {\n  candidate := largest_prime_factor\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(15), expected: 5 },\n     { actual:\
    \ candidate(27), expected: 3 },\n     { actual: candidate(63), expected: 7 },\n\
    \     { actual: candidate(330), expected: 11 },\n     { actual: candidate(13195),\
    \ expected: 29 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmp9uh62m52_test.go:37: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__2 (0.00s)\n        tmp9uh62m52_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=3)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__3\
    \ (0.00s)\n        tmp9uh62m52_test.go:37: expected '%!s(int=11)', got '%!s(int=3)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__4 (0.00s)\n        tmp9uh62m52_test.go:37:\
    \ expected '%!s(int=29)', got '%!s(int=5)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.035s\nFAIL\n"
  timestamp: 1660075692
- exit_code: null
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    prime := 2\n    factor :=\
    \ 1\n    for factor < n {\n        if n%prime == 0 {\n            factor++\n \
    \       }\n        prime++\n    }\n    return factor\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660075694
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    n -= 2\n    i := 2\n   \
    \ for {\n        if n % i == 0 {\n            n = n / i\n        } else {\n  \
    \          return i\n        }\n        i++\n    }\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmp678p6biw_test.go:39: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmp678p6biw_test.go:39:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmp678p6biw_test.go:39: expected '%!s(int=7)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmp678p6biw_test.go:39:\
    \ expected '%!s(int=11)', got '%!s(int=3)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmp678p6biw_test.go:39: expected '%!s(int=29)', got '%!s(int=2)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.037s\nFAIL\n"
  timestamp: 1660075692
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    n -= 1\n    prime := 2\n\
    \    for i := 3; i <= n; i++ {\n        if n%i == 0 {\n            prime = i\n\
    \            break\n        }\n    }\n    return prime\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpkdtxcvam_test.go:38: expected '%!s(int=5)', got '%!s(int=7)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmpkdtxcvam_test.go:38:\
    \ expected '%!s(int=3)', got '%!s(int=13)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmpkdtxcvam_test.go:38: expected '%!s(int=7)', got '%!s(int=31)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpkdtxcvam_test.go:38:\
    \ expected '%!s(int=11)', got '%!s(int=7)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpkdtxcvam_test.go:38: expected '%!s(int=29)', got '%!s(int=3)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.035s\nFAIL\n"
  timestamp: 1660075688
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    if n < 2 {\n        return\
    \ n\n    }\n    largest := 2\n    for i := 3; i <= n; i++ {\n        if n % i\
    \ == 0 {\n            largest = i\n            break\n        }\n    }\n    return\
    \ largest\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T) {\n  candidate :=\
    \ largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15), expected:\
    \ 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual: candidate(63),\
    \ expected: 7 },\n     { actual: candidate(330), expected: 11 },\n     { actual:\
    \ candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmps6c0iee4_test.go:40: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__2 (0.00s)\n        tmps6c0iee4_test.go:40:\
    \ expected '%!s(int=7)', got '%!s(int=3)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__3\
    \ (0.00s)\n        tmps6c0iee4_test.go:40: expected '%!s(int=11)', got '%!s(int=3)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__4 (0.00s)\n        tmps6c0iee4_test.go:40:\
    \ expected '%!s(int=29)', got '%!s(int=5)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.038s\nFAIL\n"
  timestamp: 1660075692
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    n -= 1\n    prime := 2\n\
    \    for i := 3; i <= n; i++ {\n        if n%i == 0 {\n            prime = i\n\
    \            break\n        }\n    }\n    return prime\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpkdtxcvam_test.go:38: expected '%!s(int=5)', got '%!s(int=7)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmpkdtxcvam_test.go:38:\
    \ expected '%!s(int=3)', got '%!s(int=13)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmpkdtxcvam_test.go:38: expected '%!s(int=7)', got '%!s(int=31)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpkdtxcvam_test.go:38:\
    \ expected '%!s(int=11)', got '%!s(int=7)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpkdtxcvam_test.go:38: expected '%!s(int=29)', got '%!s(int=3)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.035s\nFAIL\n"
  timestamp: 1660075688
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    n -= 1\n    prime := 2\n\
    \    for i := 3; i <= n; i++ {\n        if n%i == 0 {\n            prime = i\n\
    \            break\n        }\n    }\n    return prime\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpkdtxcvam_test.go:38: expected '%!s(int=5)', got '%!s(int=7)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmpkdtxcvam_test.go:38:\
    \ expected '%!s(int=3)', got '%!s(int=13)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmpkdtxcvam_test.go:38: expected '%!s(int=7)', got '%!s(int=31)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpkdtxcvam_test.go:38:\
    \ expected '%!s(int=11)', got '%!s(int=7)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpkdtxcvam_test.go:38: expected '%!s(int=29)', got '%!s(int=3)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.035s\nFAIL\n"
  timestamp: 1660075688
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    n -= 1\n    i := 2\n   \
    \ for i <= n {\n        if n%i == 0 {\n            return i\n        }\n     \
    \   i += 2\n    }\n    return n\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T)\
    \ {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpbbs_4k_s_test.go:38: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmpbbs_4k_s_test.go:38:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmpbbs_4k_s_test.go:38: expected '%!s(int=7)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpbbs_4k_s_test.go:38:\
    \ expected '%!s(int=11)', got '%!s(int=329)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpbbs_4k_s_test.go:38: expected '%!s(int=29)', got '%!s(int=2)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.035s\nFAIL\n"
  timestamp: 1660075688
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    p := 2\n    i := 2\n   \
    \ for i < n {\n        if n % i == 0 {\n            p = i\n        }\n       \
    \ i += 2\n    }\n    return p\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T)\
    \ {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmph9oaz0ex_test.go:38: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmph9oaz0ex_test.go:38:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmph9oaz0ex_test.go:38: expected '%!s(int=7)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmph9oaz0ex_test.go:38:\
    \ expected '%!s(int=11)', got '%!s(int=110)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmph9oaz0ex_test.go:38: expected '%!s(int=29)', got '%!s(int=2)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.046s\nFAIL\n"
  timestamp: 1660075692
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    largest_prime := 2\n   \
    \ for i := 2; i <= n; i++ {\n        if n%i == 0 {\n            largest_prime\
    \ = i\n            break\n        }\n    }\n    return largest_prime\n}\n\nfunc\
    \ TestLargest_Prime_Factor(t *testing.T) {\n  candidate := largest_prime_factor\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(15), expected: 5 },\n     { actual:\
    \ candidate(27), expected: 3 },\n     { actual: candidate(63), expected: 7 },\n\
    \     { actual: candidate(330), expected: 11 },\n     { actual: candidate(13195),\
    \ expected: 29 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpfeq5vmee_test.go:37: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__2 (0.00s)\n        tmpfeq5vmee_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=3)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__3\
    \ (0.00s)\n        tmpfeq5vmee_test.go:37: expected '%!s(int=11)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__4 (0.00s)\n        tmpfeq5vmee_test.go:37:\
    \ expected '%!s(int=29)', got '%!s(int=5)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.031s\nFAIL\n"
  timestamp: 1660075692
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    prime := 2\n    factor :=\
    \ 1\n    for n > 1 {\n        if n%prime == 0 {\n            factor = prime\n\
    \        }\n        prime++\n        n/=prime\n    }\n    return factor\n}\n\n\
    func TestLargest_Prime_Factor(t *testing.T) {\n  candidate := largest_prime_factor\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(15), expected: 5 },\n     { actual:\
    \ candidate(27), expected: 3 },\n     { actual: candidate(63), expected: 7 },\n\
    \     { actual: candidate(330), expected: 11 },\n     { actual: candidate(13195),\
    \ expected: 29 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmp8ajhqntg_test.go:39: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__2 (0.00s)\n        tmp8ajhqntg_test.go:39:\
    \ expected '%!s(int=7)', got '%!s(int=3)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__3\
    \ (0.00s)\n        tmp8ajhqntg_test.go:39: expected '%!s(int=11)', got '%!s(int=5)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__4 (0.00s)\n        tmp8ajhqntg_test.go:39:\
    \ expected '%!s(int=29)', got '%!s(int=6)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.019s\nFAIL\n"
  timestamp: 1660075692
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    prime := 2\n    factor :=\
    \ 2\n    for factor < n {\n        if n%prime == 0 {\n            n = n/prime\n\
    \        } else {\n            prime++\n        }\n        factor++\n    }\n \
    \   return factor\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T) {\n  candidate\
    \ := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__1\
    \ (0.00s)\n        tmpsx_uqfu6_test.go:40: expected '%!s(int=3)', got '%!s(int=5)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.033s\nFAIL\n"
  timestamp: 1660075692
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    prime := 2\n    factor :=\
    \ 1\n    for factor < n && prime*factor <= n {\n        prime++\n        factor++\n\
    \    }\n    return factor\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T) {\n\
    \  candidate := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpebtiammd_test.go:36: expected '%!s(int=5)', got '%!s(int=4)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmpebtiammd_test.go:36:\
    \ expected '%!s(int=3)', got '%!s(int=5)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmpebtiammd_test.go:36: expected '%!s(int=7)', got '%!s(int=8)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpebtiammd_test.go:36:\
    \ expected '%!s(int=11)', got '%!s(int=18)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpebtiammd_test.go:36: expected '%!s(int=29)', got '%!s(int=115)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.055s\nFAIL\n"
  timestamp: 1660075684
- exit_code: null
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    prime := 2\n    factor :=\
    \ 2\n    for factor < n {\n        if n%prime == 0 {\n            factor++\n \
    \       }\n        prime++\n    }\n    return factor\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660075698
- exit_code: null
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    n -= 1\n    i := 2\n   \
    \ for {\n        if n % i == 0 {\n            return i\n        }\n        i +=\
    \ 2\n    }\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T) {\n  candidate :=\
    \ largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15), expected:\
    \ 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual: candidate(63),\
    \ expected: 7 },\n     { actual: candidate(330), expected: 11 },\n     { actual:\
    \ candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660075703
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    n -= 1\n    prime := 2\n\
    \    factor := 1\n    for n > 1 {\n        if n % prime == 0 {\n            n\
    \ /= prime\n            factor++\n        } else {\n            prime++\n    \
    \    }\n    }\n    return factor\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T)\
    \ {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpcaumcs3q_test.go:41: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__2 (0.00s)\n        tmpcaumcs3q_test.go:41:\
    \ expected '%!s(int=7)', got '%!s(int=3)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__3\
    \ (0.00s)\n        tmpcaumcs3q_test.go:41: expected '%!s(int=11)', got '%!s(int=3)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__4 (0.00s)\n        tmpcaumcs3q_test.go:41:\
    \ expected '%!s(int=29)', got '%!s(int=5)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.031s\nFAIL\n"
  timestamp: 1660075692
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    prime := 2\n    factor :=\
    \ 1\n    for factor < n && prime < n {\n        if n % prime == 0 {\n        \
    \    factor++\n        }\n        prime++\n    }\n    return factor\n}\n\nfunc\
    \ TestLargest_Prime_Factor(t *testing.T) {\n  candidate := largest_prime_factor\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(15), expected: 5 },\n     { actual:\
    \ candidate(27), expected: 3 },\n     { actual: candidate(63), expected: 7 },\n\
    \     { actual: candidate(330), expected: 11 },\n     { actual: candidate(13195),\
    \ expected: 29 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpuabew1k2_test.go:38: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__2 (0.00s)\n        tmpuabew1k2_test.go:38:\
    \ expected '%!s(int=7)', got '%!s(int=5)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__3\
    \ (0.00s)\n        tmpuabew1k2_test.go:38: expected '%!s(int=11)', got '%!s(int=15)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__4 (0.00s)\n        tmpuabew1k2_test.go:38:\
    \ expected '%!s(int=29)', got '%!s(int=15)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.032s\nFAIL\n"
  timestamp: 1660075694
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    n -= 1\n    i := 2\n   \
    \ for i <= n {\n        if n % i == 0 {\n            n = n / i\n        } else\
    \ {\n            i = i + 1\n        }\n    }\n    return n\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpjbxho4jg_test.go:39: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmpjbxho4jg_test.go:39:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmpjbxho4jg_test.go:39: expected '%!s(int=7)', got '%!s(int=1)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpjbxho4jg_test.go:39:\
    \ expected '%!s(int=11)', got '%!s(int=1)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpjbxho4jg_test.go:39: expected '%!s(int=29)', got '%!s(int=1)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.028s\nFAIL\n"
  timestamp: 1660075684
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    largest := 2\n    for i\
    \ := 3; i <= n; i++ {\n        if n % i == 0 {\n            largest = i\n    \
    \        break\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmp3rcx0d5v_test.go:37: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__2 (0.00s)\n        tmp3rcx0d5v_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=3)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__3\
    \ (0.00s)\n        tmp3rcx0d5v_test.go:37: expected '%!s(int=11)', got '%!s(int=3)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__4 (0.00s)\n        tmp3rcx0d5v_test.go:37:\
    \ expected '%!s(int=29)', got '%!s(int=5)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.033s\nFAIL\n"
  timestamp: 1660075694
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    n -= 1\n    i := 2\n   \
    \ for i <= n {\n        if n % i == 0 {\n            n = n / i\n        } else\
    \ {\n            i = i + 1\n        }\n    }\n    return n\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpjbxho4jg_test.go:39: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmpjbxho4jg_test.go:39:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmpjbxho4jg_test.go:39: expected '%!s(int=7)', got '%!s(int=1)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpjbxho4jg_test.go:39:\
    \ expected '%!s(int=11)', got '%!s(int=1)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpjbxho4jg_test.go:39: expected '%!s(int=29)', got '%!s(int=1)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.028s\nFAIL\n"
  timestamp: 1660075684
- exit_code: 0
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    prime := 2\n    factor :=\
    \ 1\n    for n > 1 {\n        if n % prime == 0 {\n            n = n / prime\n\
    \            factor = prime\n        } else {\n            prime++\n        }\n\
    \    }\n    return factor\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T) {\n\
    \  candidate := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.038s\n"
  timestamp: 1660075684
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    largest := 1\n    for i\
    \ := 2; i <= n; i++ {\n        if n % i == 0 {\n            largest = i\n    \
    \        break\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmp28683050_test.go:37: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__2 (0.00s)\n        tmp28683050_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=3)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__3\
    \ (0.00s)\n        tmp28683050_test.go:37: expected '%!s(int=11)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__4 (0.00s)\n        tmp28683050_test.go:37:\
    \ expected '%!s(int=29)', got '%!s(int=5)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.046s\nFAIL\n"
  timestamp: 1660075695
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    prime := 2\n    factor :=\
    \ 1\n    for factor < n && prime < n {\n        if n % prime == 0 {\n        \
    \    factor++\n        }\n        prime++\n    }\n    return factor\n}\n\nfunc\
    \ TestLargest_Prime_Factor(t *testing.T) {\n  candidate := largest_prime_factor\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(15), expected: 5 },\n     { actual:\
    \ candidate(27), expected: 3 },\n     { actual: candidate(63), expected: 7 },\n\
    \     { actual: candidate(330), expected: 11 },\n     { actual: candidate(13195),\
    \ expected: 29 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpuabew1k2_test.go:38: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__2 (0.00s)\n        tmpuabew1k2_test.go:38:\
    \ expected '%!s(int=7)', got '%!s(int=5)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__3\
    \ (0.00s)\n        tmpuabew1k2_test.go:38: expected '%!s(int=11)', got '%!s(int=15)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__4 (0.00s)\n        tmpuabew1k2_test.go:38:\
    \ expected '%!s(int=29)', got '%!s(int=15)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.032s\nFAIL\n"
  timestamp: 1660075694
- exit_code: 2
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    primes := make([]int, n)\n\
    \    primes[0] = 2\n    for i := 1; i < n; i++ {\n        for j := 2; j < i; j++\
    \ {\n            if i%j == 0 {\n                break\n            }\n       \
    \ }\n        if j == i {\n            primes[i] = i\n        }\n    }\n    return\
    \ primes[len(primes)-1]\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T) {\n\
    \  candidate := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpd7lp71c__test.go:18:12: undefined: j

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075683
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    primes := make([]int, n)\n\
    \    primes[0] = 2\n    for i := 1; i < n; i++ {\n        for j := 1; j < i; j++\
    \ {\n            if primes[j] == i {\n                primes[j] = primes[j+1]\n\
    \                break\n            }\n        }\n    }\n    return primes[n-1]\n\
    }\n\nfunc TestLargest_Prime_Factor(t *testing.T) {\n  candidate := largest_prime_factor\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(15), expected: 5 },\n     { actual:\
    \ candidate(27), expected: 3 },\n     { actual: candidate(63), expected: 7 },\n\
    \     { actual: candidate(330), expected: 11 },\n     { actual: candidate(13195),\
    \ expected: 29 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.07s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpnr1gk5hb_test.go:40: expected '%!s(int=5)', got '%!s(int=0)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmpnr1gk5hb_test.go:40:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmpnr1gk5hb_test.go:40: expected '%!s(int=7)', got '%!s(int=0)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpnr1gk5hb_test.go:40:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpnr1gk5hb_test.go:40: expected '%!s(int=29)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.102s\nFAIL\n"
  timestamp: 1660075696
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    largest := n\n    for i\
    \ := 2; i <= n/2; i++ {\n        if n%i == 0 {\n            largest = i\n    \
    \        break\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmprzgxepxc_test.go:37: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__2 (0.00s)\n        tmprzgxepxc_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=3)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__3\
    \ (0.00s)\n        tmprzgxepxc_test.go:37: expected '%!s(int=11)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__4 (0.00s)\n        tmprzgxepxc_test.go:37:\
    \ expected '%!s(int=29)', got '%!s(int=5)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.039s\nFAIL\n"
  timestamp: 1660075695
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    p := 2\n    for i := 2;\
    \ i <= n; i++ {\n        if n % i == 0 {\n            p = i\n            break\n\
    \        }\n    }\n    return p\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T)\
    \ {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpy11a2fgp_test.go:37: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__2 (0.00s)\n        tmpy11a2fgp_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=3)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__3\
    \ (0.00s)\n        tmpy11a2fgp_test.go:37: expected '%!s(int=11)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__4 (0.00s)\n        tmpy11a2fgp_test.go:37:\
    \ expected '%!s(int=29)', got '%!s(int=5)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.053s\nFAIL\n"
  timestamp: 1660075696
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    n -= 1\n    p := 2\n   \
    \ for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            p = i\n    \
    \        break\n        }\n    }\n    return p\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpga67dyin_test.go:38: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmpga67dyin_test.go:38:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmpga67dyin_test.go:38: expected '%!s(int=7)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpga67dyin_test.go:38:\
    \ expected '%!s(int=11)', got '%!s(int=7)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpga67dyin_test.go:38: expected '%!s(int=29)', got '%!s(int=2)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.046s\nFAIL\n"
  timestamp: 1660075690
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    p := 2\n    for i := 2;\
    \ i <= n; i++ {\n        if n%i == 0 {\n            p = i\n            break\n\
    \        }\n    }\n    return p\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T)\
    \ {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpbxlr0aro_test.go:37: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__2 (0.00s)\n        tmpbxlr0aro_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=3)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__3\
    \ (0.00s)\n        tmpbxlr0aro_test.go:37: expected '%!s(int=11)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__4 (0.00s)\n        tmpbxlr0aro_test.go:37:\
    \ expected '%!s(int=29)', got '%!s(int=5)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.045s\nFAIL\n"
  timestamp: 1660075684
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    p := 2\n    for i := 2;\
    \ i <= n; i++ {\n        if n%i == 0 {\n            p += 1\n        }\n    }\n\
    \    return p\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T) {\n  candidate\
    \ := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__1\
    \ (0.00s)\n        tmp3a5fp1fh_test.go:36: expected '%!s(int=3)', got '%!s(int=5)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmp3a5fp1fh_test.go:36:\
    \ expected '%!s(int=11)', got '%!s(int=17)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmp3a5fp1fh_test.go:36: expected '%!s(int=29)', got '%!s(int=17)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.042s\nFAIL\n"
  timestamp: 1660075696
- exit_code: null
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    prime := 2\n    factor :=\
    \ 1\n    for factor < n {\n        if n%prime == 0 {\n            factor++\n \
    \       }\n        prime++\n    }\n    return factor\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660075694
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    p := 2\n    for {\n    \
    \    if n%p == 0 {\n            return p\n        }\n        p += 1\n    }\n}\n\
    \nfunc TestLargest_Prime_Factor(t *testing.T) {\n  candidate := largest_prime_factor\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(15), expected: 5 },\n     { actual:\
    \ candidate(27), expected: 3 },\n     { actual: candidate(63), expected: 7 },\n\
    \     { actual: candidate(330), expected: 11 },\n     { actual: candidate(13195),\
    \ expected: 29 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmp3oq0hn14_test.go:36: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__2 (0.00s)\n        tmp3oq0hn14_test.go:36:\
    \ expected '%!s(int=7)', got '%!s(int=3)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__3\
    \ (0.00s)\n        tmp3oq0hn14_test.go:36: expected '%!s(int=11)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__4 (0.00s)\n        tmp3oq0hn14_test.go:36:\
    \ expected '%!s(int=29)', got '%!s(int=5)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.060s\nFAIL\n"
  timestamp: 1660075688
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    prime := 2\n    factor :=\
    \ 1\n    for factor < n && prime < n {\n        if n%prime == 0 {\n          \
    \  factor++\n        }\n        prime++\n    }\n    return factor\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpjsa6rgh7_test.go:38: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__2 (0.00s)\n        tmpjsa6rgh7_test.go:38:\
    \ expected '%!s(int=7)', got '%!s(int=5)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__3\
    \ (0.00s)\n        tmpjsa6rgh7_test.go:38: expected '%!s(int=11)', got '%!s(int=15)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__4 (0.00s)\n        tmpjsa6rgh7_test.go:38:\
    \ expected '%!s(int=29)', got '%!s(int=15)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.034s\nFAIL\n"
  timestamp: 1660075684
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    n -= 1\n    prime := 2\n\
    \    for i := 2; i <= n; i++ {\n        if n % i == 0 {\n            prime = i\n\
    \            break\n        }\n    }\n    return prime\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpo3h2qus1_test.go:38: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmpo3h2qus1_test.go:38:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmpo3h2qus1_test.go:38: expected '%!s(int=7)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpo3h2qus1_test.go:38:\
    \ expected '%!s(int=11)', got '%!s(int=7)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpo3h2qus1_test.go:38: expected '%!s(int=29)', got '%!s(int=2)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.038s\nFAIL\n"
  timestamp: 1660075696
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    prime := 2\n    factor :=\
    \ 1\n    for n > 1 {\n        if n % prime == 0 {\n            n = n / prime\n\
    \            factor++\n        } else {\n            prime++\n        }\n    }\n\
    \    return factor\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T) {\n  candidate\
    \ := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpx0k2djir_test.go:40: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmpx0k2djir_test.go:40:\
    \ expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmpx0k2djir_test.go:40: expected '%!s(int=7)', got '%!s(int=4)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpx0k2djir_test.go:40:\
    \ expected '%!s(int=11)', got '%!s(int=5)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpx0k2djir_test.go:40: expected '%!s(int=29)', got '%!s(int=5)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.033s\nFAIL\n"
  timestamp: 1660075696
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    prime := 2\n    factor :=\
    \ 1\n    for n > 1 {\n        if n % prime == 0 {\n            factor++\n    \
    \    }\n        prime++\n        n = n / prime\n    }\n    return factor\n}\n\n\
    func TestLargest_Prime_Factor(t *testing.T) {\n  candidate := largest_prime_factor\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(15), expected: 5 },\n     { actual:\
    \ candidate(27), expected: 3 },\n     { actual: candidate(63), expected: 7 },\n\
    \     { actual: candidate(330), expected: 11 },\n     { actual: candidate(13195),\
    \ expected: 29 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpj_wbrrkt_test.go:39: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmpj_wbrrkt_test.go:39:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmpj_wbrrkt_test.go:39: expected '%!s(int=7)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpj_wbrrkt_test.go:39:\
    \ expected '%!s(int=11)', got '%!s(int=3)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpj_wbrrkt_test.go:39: expected '%!s(int=29)', got '%!s(int=3)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.039s\nFAIL\n"
  timestamp: 1660075696
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    p := 2\n    max := n\n \
    \   for p < max {\n        if n%p == 0 {\n            max = p\n        }\n   \
    \     p += 1\n    }\n    return max\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T)\
    \ {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmphfdo56c7_test.go:38: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__2 (0.00s)\n        tmphfdo56c7_test.go:38:\
    \ expected '%!s(int=7)', got '%!s(int=3)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__3\
    \ (0.00s)\n        tmphfdo56c7_test.go:38: expected '%!s(int=11)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__4 (0.00s)\n        tmphfdo56c7_test.go:38:\
    \ expected '%!s(int=29)', got '%!s(int=5)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.038s\nFAIL\n"
  timestamp: 1660075696
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    n -= 1\n    prime := 2\n\
    \    for i := 3; i <= n/prime; i++ {\n        if n%i == 0 {\n            n = n/i\n\
    \            prime++\n        }\n    }\n    return prime\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpd3e3xn9k_test.go:38: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__2 (0.00s)\n        tmpd3e3xn9k_test.go:38:\
    \ expected '%!s(int=7)', got '%!s(int=3)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__3\
    \ (0.00s)\n        tmpd3e3xn9k_test.go:38: expected '%!s(int=11)', got '%!s(int=3)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__4 (0.00s)\n        tmpd3e3xn9k_test.go:38:\
    \ expected '%!s(int=29)', got '%!s(int=4)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.066s\nFAIL\n"
  timestamp: 1660075696
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    p := 2\n    for i := 2;\
    \ i < n; i++ {\n        if n%i == 0 {\n            p = i\n            break\n\
    \        }\n    }\n    return p\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T)\
    \ {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpa5whse6i_test.go:37: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__2 (0.00s)\n        tmpa5whse6i_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=3)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__3\
    \ (0.00s)\n        tmpa5whse6i_test.go:37: expected '%!s(int=11)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__4 (0.00s)\n        tmpa5whse6i_test.go:37:\
    \ expected '%!s(int=29)', got '%!s(int=5)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.042s\nFAIL\n"
  timestamp: 1660075696
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    prime := 2\n    factor :=\
    \ 1\n    for factor < n && prime*factor <= n {\n        prime++\n        factor++\n\
    \    }\n    return factor\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T) {\n\
    \  candidate := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpebtiammd_test.go:36: expected '%!s(int=5)', got '%!s(int=4)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmpebtiammd_test.go:36:\
    \ expected '%!s(int=3)', got '%!s(int=5)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmpebtiammd_test.go:36: expected '%!s(int=7)', got '%!s(int=8)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpebtiammd_test.go:36:\
    \ expected '%!s(int=11)', got '%!s(int=18)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpebtiammd_test.go:36: expected '%!s(int=29)', got '%!s(int=115)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.055s\nFAIL\n"
  timestamp: 1660075684
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    n -= 1\n    prime := 2\n\
    \    for i := 3; i <= n; i++ {\n        if n%i == 0 {\n            prime = i\n\
    \            break\n        }\n    }\n    return prime\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpkdtxcvam_test.go:38: expected '%!s(int=5)', got '%!s(int=7)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmpkdtxcvam_test.go:38:\
    \ expected '%!s(int=3)', got '%!s(int=13)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmpkdtxcvam_test.go:38: expected '%!s(int=7)', got '%!s(int=31)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpkdtxcvam_test.go:38:\
    \ expected '%!s(int=11)', got '%!s(int=7)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpkdtxcvam_test.go:38: expected '%!s(int=29)', got '%!s(int=3)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.035s\nFAIL\n"
  timestamp: 1660075688
- exit_code: 0
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    p := 2\n    i := 2\n   \
    \ for {\n        if n % i == 0 {\n            p = i\n            n /= i\n    \
    \    } else {\n            i++\n        }\n        if n == 1 {\n            return\
    \ p\n        }\n    }\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T) {\n  candidate\
    \ := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.048s\n"
  timestamp: 1660075696
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    prime := 2\n    factor :=\
    \ 1\n    for factor < n && prime < n {\n        if n % prime == 0 {\n        \
    \    factor++\n        }\n        prime++\n    }\n    return factor\n}\n\nfunc\
    \ TestLargest_Prime_Factor(t *testing.T) {\n  candidate := largest_prime_factor\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(15), expected: 5 },\n     { actual:\
    \ candidate(27), expected: 3 },\n     { actual: candidate(63), expected: 7 },\n\
    \     { actual: candidate(330), expected: 11 },\n     { actual: candidate(13195),\
    \ expected: 29 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpuabew1k2_test.go:38: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__2 (0.00s)\n        tmpuabew1k2_test.go:38:\
    \ expected '%!s(int=7)', got '%!s(int=5)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__3\
    \ (0.00s)\n        tmpuabew1k2_test.go:38: expected '%!s(int=11)', got '%!s(int=15)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__4 (0.00s)\n        tmpuabew1k2_test.go:38:\
    \ expected '%!s(int=29)', got '%!s(int=15)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.032s\nFAIL\n"
  timestamp: 1660075694
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    largest_prime := 2\n   \
    \ for i := 3; i <= n; i++ {\n        if n%i == 0 {\n            largest_prime\
    \ = i\n            break\n        }\n    }\n    return largest_prime\n}\n\nfunc\
    \ TestLargest_Prime_Factor(t *testing.T) {\n  candidate := largest_prime_factor\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(15), expected: 5 },\n     { actual:\
    \ candidate(27), expected: 3 },\n     { actual: candidate(63), expected: 7 },\n\
    \     { actual: candidate(330), expected: 11 },\n     { actual: candidate(13195),\
    \ expected: 29 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpm1qavo7o_test.go:37: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__2 (0.00s)\n        tmpm1qavo7o_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=3)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__3\
    \ (0.00s)\n        tmpm1qavo7o_test.go:37: expected '%!s(int=11)', got '%!s(int=3)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__4 (0.00s)\n        tmpm1qavo7o_test.go:37:\
    \ expected '%!s(int=29)', got '%!s(int=5)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.039s\nFAIL\n"
  timestamp: 1660075696
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    n -= 1\n    i := 2\n   \
    \ for ; i*i <= n; i++ {\n        if n % i == 0 {\n            return i\n     \
    \   }\n    }\n    return n\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T) {\n\
    \  candidate := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmp711uuvx__test.go:37: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmp711uuvx__test.go:37:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmp711uuvx__test.go:37: expected '%!s(int=7)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmp711uuvx__test.go:37:\
    \ expected '%!s(int=11)', got '%!s(int=7)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmp711uuvx__test.go:37: expected '%!s(int=29)', got '%!s(int=2)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.035s\nFAIL\n"
  timestamp: 1660075696
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    n -= 1\n    p := 2\n   \
    \ for i := 3; i <= n; i++ {\n        if n % i == 0 {\n            p += 1\n   \
    \     }\n    }\n    return p\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T)\
    \ {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpj1zmgq4o_test.go:37: expected '%!s(int=5)', got '%!s(int=4)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmpj1zmgq4o_test.go:37:\
    \ expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmpj1zmgq4o_test.go:37: expected '%!s(int=7)', got '%!s(int=4)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpj1zmgq4o_test.go:37:\
    \ expected '%!s(int=11)', got '%!s(int=5)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpj1zmgq4o_test.go:37: expected '%!s(int=29)', got '%!s(int=12)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.025s\nFAIL\n"
  timestamp: 1660075696
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    largest_prime := 2\n   \
    \ for largest_prime < n {\n        if n%largest_prime == 0 {\n            break\n\
    \        }\n        largest_prime += 1\n    }\n    return largest_prime\n}\n\n\
    func TestLargest_Prime_Factor(t *testing.T) {\n  candidate := largest_prime_factor\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(15), expected: 5 },\n     { actual:\
    \ candidate(27), expected: 3 },\n     { actual: candidate(63), expected: 7 },\n\
    \     { actual: candidate(330), expected: 11 },\n     { actual: candidate(13195),\
    \ expected: 29 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpbe4czsst_test.go:37: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__2 (0.00s)\n        tmpbe4czsst_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=3)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__3\
    \ (0.00s)\n        tmpbe4czsst_test.go:37: expected '%!s(int=11)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__4 (0.00s)\n        tmpbe4czsst_test.go:37:\
    \ expected '%!s(int=29)', got '%!s(int=5)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.036s\nFAIL\n"
  timestamp: 1660075692
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    if n < 2 {\n        return\
    \ n\n    }\n\n    largest := 2\n    for i := 3; i <= n; i++ {\n        if n %\
    \ i == 0 {\n            largest = i\n            break\n        }\n    }\n\n \
    \   return largest\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T) {\n  candidate\
    \ := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpf23p8zm3_test.go:42: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__2 (0.00s)\n        tmpf23p8zm3_test.go:42:\
    \ expected '%!s(int=7)', got '%!s(int=3)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__3\
    \ (0.00s)\n        tmpf23p8zm3_test.go:42: expected '%!s(int=11)', got '%!s(int=3)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__4 (0.00s)\n        tmpf23p8zm3_test.go:42:\
    \ expected '%!s(int=29)', got '%!s(int=5)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.035s\nFAIL\n"
  timestamp: 1660075697
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    n -= 1\n    prime := 2\n\
    \    for i := 3; i <= n; i++ {\n        if n%i == 0 {\n            prime = i\n\
    \            break\n        }\n    }\n    return prime\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpkdtxcvam_test.go:38: expected '%!s(int=5)', got '%!s(int=7)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmpkdtxcvam_test.go:38:\
    \ expected '%!s(int=3)', got '%!s(int=13)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmpkdtxcvam_test.go:38: expected '%!s(int=7)', got '%!s(int=31)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpkdtxcvam_test.go:38:\
    \ expected '%!s(int=11)', got '%!s(int=7)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpkdtxcvam_test.go:38: expected '%!s(int=29)', got '%!s(int=3)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.035s\nFAIL\n"
  timestamp: 1660075688
- exit_code: null
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    prime := 2\n    factor :=\
    \ 2\n    for factor < n {\n        if n%prime == 0 {\n            factor++\n \
    \       }\n        prime++\n    }\n    return factor\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660075698
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    primes := make([]int, n)\n\
    \    primes[0] = 1\n    for i := 1; i < n; i++ {\n        if primes[i] != 0 {\n\
    \            primes[i*i-1] = primes[i]\n        }\n    }\n    return primes[len(primes)-1]\n\
    }\n\nfunc TestLargest_Prime_Factor(t *testing.T) {\n  candidate := largest_prime_factor\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(15), expected: 5 },\n     { actual:\
    \ candidate(27), expected: 3 },\n     { actual: candidate(63), expected: 7 },\n\
    \     { actual: candidate(330), expected: 11 },\n     { actual: candidate(13195),\
    \ expected: 29 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmphqdrhe2t_test.go:37: expected '%!s(int=5)', got '%!s(int=0)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmphqdrhe2t_test.go:37:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmphqdrhe2t_test.go:37: expected '%!s(int=7)', got '%!s(int=0)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmphqdrhe2t_test.go:37:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmphqdrhe2t_test.go:37: expected '%!s(int=29)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.037s\nFAIL\n"
  timestamp: 1660075697
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    n -= 1\n    prime := 2\n\
    \    for i := 3; i <= n; i++ {\n        if n%i == 0 {\n            prime = i\n\
    \            break\n        }\n    }\n    return prime\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpkdtxcvam_test.go:38: expected '%!s(int=5)', got '%!s(int=7)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmpkdtxcvam_test.go:38:\
    \ expected '%!s(int=3)', got '%!s(int=13)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmpkdtxcvam_test.go:38: expected '%!s(int=7)', got '%!s(int=31)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpkdtxcvam_test.go:38:\
    \ expected '%!s(int=11)', got '%!s(int=7)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpkdtxcvam_test.go:38: expected '%!s(int=29)', got '%!s(int=3)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.035s\nFAIL\n"
  timestamp: 1660075688
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    prime := 2\n    factor :=\
    \ 1\n    for factor < n && prime < n {\n        if n%prime == 0 {\n          \
    \  n = n / prime\n        } else {\n            prime++\n        }\n        factor++\n\
    \    }\n    return factor\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T) {\n\
    \  candidate := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__1\
    \ (0.00s)\n        tmpj23ruggt_test.go:40: expected '%!s(int=3)', got '%!s(int=4)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.046s\nFAIL\n"
  timestamp: 1660075697
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    primes := make([]int, n)\n\
    \    primes[0] = 2\n    primes[1] = n\n    for i := 2; i < n; i++ {\n        if\
    \ primes[i] > 1 {\n            primes[primes[i]] = primes[primes[i-1]]\n     \
    \   } else {\n            primes[primes[i]] = i\n        }\n    }\n    return\
    \ primes[primes[n-1]]\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T) {\n  candidate\
    \ := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpode_7xas_test.go:40: expected '%!s(int=5)', got '%!s(int=14)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmpode_7xas_test.go:40:\
    \ expected '%!s(int=3)', got '%!s(int=26)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmpode_7xas_test.go:40: expected '%!s(int=7)', got '%!s(int=62)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpode_7xas_test.go:40:\
    \ expected '%!s(int=11)', got '%!s(int=329)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpode_7xas_test.go:40: expected '%!s(int=29)', got '%!s(int=13194)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.053s\nFAIL\n"
  timestamp: 1660075697
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    prime := 2\n    factor :=\
    \ 1\n    for n > 1 {\n        if n % prime == 0 {\n            n = n / prime\n\
    \            factor = prime + 1\n        } else {\n            prime++\n     \
    \   }\n    }\n    return factor\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T)\
    \ {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmp4wn5brjc_test.go:40: expected '%!s(int=5)', got '%!s(int=6)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmp4wn5brjc_test.go:40:\
    \ expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmp4wn5brjc_test.go:40: expected '%!s(int=7)', got '%!s(int=8)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmp4wn5brjc_test.go:40:\
    \ expected '%!s(int=11)', got '%!s(int=12)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmp4wn5brjc_test.go:40: expected '%!s(int=29)', got '%!s(int=30)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.030s\nFAIL\n"
  timestamp: 1660075684
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    n -= 1\n    prime := 2\n\
    \    for i := 3; i <= n; i++ {\n        if n%i == 0 {\n            prime = i\n\
    \            break\n        }\n    }\n    return prime\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpkdtxcvam_test.go:38: expected '%!s(int=5)', got '%!s(int=7)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmpkdtxcvam_test.go:38:\
    \ expected '%!s(int=3)', got '%!s(int=13)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmpkdtxcvam_test.go:38: expected '%!s(int=7)', got '%!s(int=31)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpkdtxcvam_test.go:38:\
    \ expected '%!s(int=11)', got '%!s(int=7)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpkdtxcvam_test.go:38: expected '%!s(int=29)', got '%!s(int=3)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.035s\nFAIL\n"
  timestamp: 1660075688
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    prime := 2\n    factor :=\
    \ 1\n    for factor < n && prime < n {\n        if n % prime == 0 {\n        \
    \    factor++\n        }\n        prime++\n    }\n    return factor\n}\n\nfunc\
    \ TestLargest_Prime_Factor(t *testing.T) {\n  candidate := largest_prime_factor\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(15), expected: 5 },\n     { actual:\
    \ candidate(27), expected: 3 },\n     { actual: candidate(63), expected: 7 },\n\
    \     { actual: candidate(330), expected: 11 },\n     { actual: candidate(13195),\
    \ expected: 29 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpuabew1k2_test.go:38: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__2 (0.00s)\n        tmpuabew1k2_test.go:38:\
    \ expected '%!s(int=7)', got '%!s(int=5)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__3\
    \ (0.00s)\n        tmpuabew1k2_test.go:38: expected '%!s(int=11)', got '%!s(int=15)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__4 (0.00s)\n        tmpuabew1k2_test.go:38:\
    \ expected '%!s(int=29)', got '%!s(int=15)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.032s\nFAIL\n"
  timestamp: 1660075694
- exit_code: 2
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    largest_prime_factor_test\
    \ := largest_prime_factor_test{}\n    largest_prime_factor_test.n = n\n    largest_prime_factor_test.largest_prime_factor\
    \ = largest_prime_factor_test.n\n    for largest_prime_factor_test.largest_prime_factor\
    \ > 1 {\n        if n % largest_prime_factor_test.largest_prime_factor == 0 {\n\
    \            largest_prime_factor_test.largest_prime_factor = largest_prime_factor_test.largest_prime_factor\
    \ / 2\n        } else {\n            largest_prime_factor_test.largest_prime_factor\
    \ = largest_prime_factor_test.largest_prime_factor * 3 + 1\n        }\n    }\n\
    \    return largest_prime_factor_test.largest_prime_factor\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpebhrdp9z_test.go:10:34: undefined: largest_prime_factor_test

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075699
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    prime := 2\n    factor :=\
    \ 1\n    for factor < n {\n        if n%prime == 0 {\n            n = n/prime\n\
    \        } else {\n            prime++\n        }\n        factor++\n    }\n \
    \   return prime\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T) {\n  candidate\
    \ := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmpvwphj7ut_test.go:40: expected '%!s(int=7)', got '%!s(int=6)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpvwphj7ut_test.go:40:\
    \ expected '%!s(int=11)', got '%!s(int=9)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpvwphj7ut_test.go:40: expected '%!s(int=29)', got '%!s(int=27)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.039s\nFAIL\n"
  timestamp: 1660075684
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    primes := make([]int, n)\n\
    \    primes[0] = 2\n    for i := 1; i < n; i++ {\n        for j := 1; j < i; j++\
    \ {\n            if primes[j] == i {\n                primes[j] = primes[j+1]\n\
    \            } else {\n                break\n            }\n        }\n    }\n\
    \    return primes[len(primes)-1]\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T)\
    \ {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpv066mycp_test.go:41: expected '%!s(int=5)', got '%!s(int=0)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmpv066mycp_test.go:41:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmpv066mycp_test.go:41: expected '%!s(int=7)', got '%!s(int=0)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpv066mycp_test.go:41:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpv066mycp_test.go:41: expected '%!s(int=29)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.039s\nFAIL\n"
  timestamp: 1660075699
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    n -= 1\n    primes := make([]int,\
    \ n)\n    primes[0] = 1\n    for i := 1; i < n; i++ {\n        for j := 1; j <\
    \ i; j++ {\n            if i*j > n {\n                break\n            }\n \
    \           if primes[j] == 0 {\n                primes[j] = i\n            }\n\
    \        }\n    }\n    return primes[n-1]\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmp5rjfx2sq_test.go:43: expected '%!s(int=5)', got '%!s(int=0)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmp5rjfx2sq_test.go:43:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmp5rjfx2sq_test.go:43: expected '%!s(int=7)', got '%!s(int=0)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmp5rjfx2sq_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmp5rjfx2sq_test.go:43: expected '%!s(int=29)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.037s\nFAIL\n"
  timestamp: 1660075699
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    primes := make([]int, n)\n\
    \    primes[0] = 2\n    primes[1] = 3\n    for i := 2; i < n; i++ {\n        for\
    \ j := 2; j < i; j++ {\n            if i*j > n {\n                break\n    \
    \        }\n            if primes[j] > i*primes[j] {\n                primes[j]\
    \ = i*primes[j]\n            }\n        }\n    }\n    return primes[n-1]\n}\n\n\
    func TestLargest_Prime_Factor(t *testing.T) {\n  candidate := largest_prime_factor\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(15), expected: 5 },\n     { actual:\
    \ candidate(27), expected: 3 },\n     { actual: candidate(63), expected: 7 },\n\
    \     { actual: candidate(330), expected: 11 },\n     { actual: candidate(13195),\
    \ expected: 29 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmp892yqkw7_test.go:43: expected '%!s(int=5)', got '%!s(int=0)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmp892yqkw7_test.go:43:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmp892yqkw7_test.go:43: expected '%!s(int=7)', got '%!s(int=0)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmp892yqkw7_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmp892yqkw7_test.go:43: expected '%!s(int=29)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.042s\nFAIL\n"
  timestamp: 1660075699
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    primes := make([]int, n)\n\
    \    primes[0] = 2\n    primes[1] = 2\n    for i := 2; i < n; i++ {\n        for\
    \ j := 1; j < i; j++ {\n            if primes[j] >= i {\n                primes[j]\
    \ = primes[j] + 1\n                break\n            }\n        }\n    }\n  \
    \  return primes[len(primes)-1]\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T)\
    \ {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpx54kw526_test.go:41: expected '%!s(int=5)', got '%!s(int=0)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmpx54kw526_test.go:41:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmpx54kw526_test.go:41: expected '%!s(int=7)', got '%!s(int=0)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpx54kw526_test.go:41:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpx54kw526_test.go:41: expected '%!s(int=29)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.019s\nFAIL\n"
  timestamp: 1660075699
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    largest := n\n    for i\
    \ := 2; i <= n; i++ {\n        if n % i == 0 {\n            largest = i\n    \
    \        break\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpipz38apo_test.go:37: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__2 (0.00s)\n        tmpipz38apo_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=3)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__3\
    \ (0.00s)\n        tmpipz38apo_test.go:37: expected '%!s(int=11)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__4 (0.00s)\n        tmpipz38apo_test.go:37:\
    \ expected '%!s(int=29)', got '%!s(int=5)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.040s\nFAIL\n"
  timestamp: 1660075699
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    n -= 1\n    x := n\n   \
    \ y := 1\n    for {\n        if x % y == 0 {\n            return y\n        }\n\
    \        y *= 2\n        x++\n    }\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T)\
    \ {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpett3034v_test.go:39: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmpett3034v_test.go:39:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmpett3034v_test.go:39: expected '%!s(int=7)', got '%!s(int=1)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpett3034v_test.go:39:\
    \ expected '%!s(int=11)', got '%!s(int=1)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpett3034v_test.go:39: expected '%!s(int=29)', got '%!s(int=1)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.042s\nFAIL\n"
  timestamp: 1660075699
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    n -= 1\n    i := 2\n   \
    \ for i <= n {\n        if n%i == 0 {\n            n = n / i\n        } else {\n\
    \            i = i + 1\n        }\n    }\n    return i\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmp00khpqa__test.go:39: expected '%!s(int=5)', got '%!s(int=7)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmp00khpqa__test.go:39:\
    \ expected '%!s(int=3)', got '%!s(int=13)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmp00khpqa__test.go:39: expected '%!s(int=7)', got '%!s(int=31)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmp00khpqa__test.go:39:\
    \ expected '%!s(int=11)', got '%!s(int=47)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmp00khpqa__test.go:39: expected '%!s(int=29)', got '%!s(int=733)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.023s\nFAIL\n"
  timestamp: 1660075699
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    n -= 1\n    x := n\n   \
    \ y := 2\n    for {\n        if x % y == 0 {\n            return y\n        }\n\
    \        y *= 2\n        x++\n    }\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T)\
    \ {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\npanic: runtime error: integer\
    \ divide by zero [recovered]\n\tpanic: runtime error: integer divide by zero\n\
    \ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x5028c0, 0x5f19a0})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x5028c0, 0x5f19a0})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.largest_prime_factor(...)\n\t/tmp/tmpl8pucwec_test.go:14\n\
    command-line-arguments_test.TestLargest_Prime_Factor(0x0?)\n\t/tmp/tmpl8pucwec_test.go:32\
    \ +0x405\ntesting.tRunner(0xc0000da1a0, 0x527f68)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.033s\nFAIL\n"
  timestamp: 1660075699
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    largest := 1\n    for i\
    \ := 2; i <= n; i++ {\n        if n%i == 0 {\n            largest = i\n      \
    \      break\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpkc94nacp_test.go:37: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__2 (0.00s)\n        tmpkc94nacp_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=3)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__3\
    \ (0.00s)\n        tmpkc94nacp_test.go:37: expected '%!s(int=11)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__4 (0.00s)\n        tmpkc94nacp_test.go:37:\
    \ expected '%!s(int=29)', got '%!s(int=5)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.041s\nFAIL\n"
  timestamp: 1660075699
- exit_code: 2
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    if n < 2 {\n        return\
    \ n\n    }\n    max := 2\n    max := n\n    for i := 3; i <= max; i++ {\n    \
    \    if n % i == 0 {\n            max := i\n        }\n    }\n    return max\n\
    }\n\nfunc TestLargest_Prime_Factor(t *testing.T) {\n  candidate := largest_prime_factor\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(15), expected: 5 },\n     { actual:\
    \ candidate(27), expected: 3 },\n     { actual: candidate(63), expected: 7 },\n\
    \     { actual: candidate(330), expected: 11 },\n     { actual: candidate(13195),\
    \ expected: 29 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp4iyjuddg_test.go:14:9: no new variables on left side of :=

    /tmp/tmp4iyjuddg_test.go:17:13: max declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075699
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    p := 2\n    for {\n    \
    \    if n%p == 0 {\n            return p\n        }\n        p += 1\n    }\n}\n\
    \nfunc TestLargest_Prime_Factor(t *testing.T) {\n  candidate := largest_prime_factor\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(15), expected: 5 },\n     { actual:\
    \ candidate(27), expected: 3 },\n     { actual: candidate(63), expected: 7 },\n\
    \     { actual: candidate(330), expected: 11 },\n     { actual: candidate(13195),\
    \ expected: 29 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmp3oq0hn14_test.go:36: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__2 (0.00s)\n        tmp3oq0hn14_test.go:36:\
    \ expected '%!s(int=7)', got '%!s(int=3)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__3\
    \ (0.00s)\n        tmp3oq0hn14_test.go:36: expected '%!s(int=11)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__4 (0.00s)\n        tmp3oq0hn14_test.go:36:\
    \ expected '%!s(int=29)', got '%!s(int=5)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.060s\nFAIL\n"
  timestamp: 1660075688
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    largest_prime_factor_test\
    \ := largest_prime_factor_test{}\n    largest_prime_factor_test.n = n\n    largest_prime_factor_test.max_factor\
    \ = 1\n    largest_prime_factor_test.factors = []int{}\n    largest_prime_factor_test.factors_index\
    \ = 0\n    largest_prime_factor_test.prime_factors_index = 0\n    largest_prime_factor_test.prime_factors\
    \ = []int{}\n    largest_prime_factor_test.prime_factors_index = 0\n    largest_prime_factor_test.prime_factors_index\
    \ = 0\n    largest_prime_factor_test.is_prime = false\n    largest_prime_factor_test.is_prime_tested\
    \ = false\n    largest_prime_factor_test.is_prime_tested_index = 0\n    largest_prime_factor_test.is_prime_tested_index\
    \ = 0\n    largest_prime_factor_test.is_prime_tested_index = 0\n    largest_prime_factor_test.is_prime_tested_index\
    \ = 0\n    largest_prime_factor_test.is_prime_tested_index = 0\n    largest_prime_factor_test.is_prime_tested_index\
    \ = 0\n    largest_prime_factor_test.is_prime_tested_index = 0\n    largest_prime_factor_test.is_prime_tested_index\
    \ = 0\n    largest_prime_factor_test.is_prime_tested_index = 0\n    largest_prime_factor_test.is_prime_tested_index\
    \ = 0\n    largest_prime_factor_test.is_prime_tested_index = 0\n    largest_prime_factor_test.is_prime_tested_index\
    \ = 0\n    largest_prime_factor_test.is_prime_tested_index = 0\n    largest_prime_factor_test.is_prime_tested_index\
    \ = 0\n    largest_prime_factor_test.is_prime_tested_index = 0\n    largest_prime_factor_test.is_prime_tested_index\
    \ = 0\n    largest_prime_factor_test.is_prime_tested_index = 0\n    largest_prime_factor_test.is_prime_tested_index\
    \ = 0\n    largest_prime_factor_test.is_prime_tested_index = 0\n    largest_prime_factor_test.is_prime_tested_index\
    \ = 0\n    largest_prime_factor_test.is_prime_tested_index = 0\n    largest_prime_factor_test.is_prime_tested_index\
    \ = 0\n    largest_prime_factor_test.is_prime_tested_index = 0\n    largest_prime_factor_test.is_prime_tested_index\
    \ = 0\n    largest_prime_factor_test.is_prime_tested_index = 0\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpihi5xi5z_test.go:46:6: expected ''('', found TestLargest_Prime_Factor

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660075697
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    prime := 2\n    factor :=\
    \ 1\n    for factor < n {\n        if n%prime == 0 {\n            n = n/prime\n\
    \        } else {\n            prime++\n        }\n        factor++\n    }\n \
    \   return prime\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T) {\n  candidate\
    \ := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmpvwphj7ut_test.go:40: expected '%!s(int=7)', got '%!s(int=6)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpvwphj7ut_test.go:40:\
    \ expected '%!s(int=11)', got '%!s(int=9)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpvwphj7ut_test.go:40: expected '%!s(int=29)', got '%!s(int=27)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.039s\nFAIL\n"
  timestamp: 1660075684
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    p := 2\n    for {\n    \
    \    if n%p == 0 {\n            return p\n        }\n        p += 1\n    }\n}\n\
    \nfunc TestLargest_Prime_Factor(t *testing.T) {\n  candidate := largest_prime_factor\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(15), expected: 5 },\n     { actual:\
    \ candidate(27), expected: 3 },\n     { actual: candidate(63), expected: 7 },\n\
    \     { actual: candidate(330), expected: 11 },\n     { actual: candidate(13195),\
    \ expected: 29 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmp3oq0hn14_test.go:36: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__2 (0.00s)\n        tmp3oq0hn14_test.go:36:\
    \ expected '%!s(int=7)', got '%!s(int=3)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__3\
    \ (0.00s)\n        tmp3oq0hn14_test.go:36: expected '%!s(int=11)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__4 (0.00s)\n        tmp3oq0hn14_test.go:36:\
    \ expected '%!s(int=29)', got '%!s(int=5)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.060s\nFAIL\n"
  timestamp: 1660075688
- exit_code: 2
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    if n < 2 {\n        return\
    \ n\n    }\n\n    largest := n\n    largest := n\n\n    for i := 2; i <= largest;\
    \ i++ {\n        if n%i == 0 {\n            largest = i\n        }\n    }\n\n\
    \    return largest\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T) {\n  candidate\
    \ := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp1vb1598k_test.go:15:13: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075699
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    n -= 1\n    p := 2\n   \
    \ for i := 3; i <= n; i++ {\n        if n%i == 0 {\n            p = i\n      \
    \      break\n        }\n    }\n    return p\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpq_hf5iy6_test.go:38: expected '%!s(int=5)', got '%!s(int=7)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmpq_hf5iy6_test.go:38:\
    \ expected '%!s(int=3)', got '%!s(int=13)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmpq_hf5iy6_test.go:38: expected '%!s(int=7)', got '%!s(int=31)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpq_hf5iy6_test.go:38:\
    \ expected '%!s(int=11)', got '%!s(int=7)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpq_hf5iy6_test.go:38: expected '%!s(int=29)', got '%!s(int=3)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.043s\nFAIL\n"
  timestamp: 1660075700
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    if n < 2 {\n        return\
    \ n\n    }\n    largest := n\n    for i := 2; i <= n; i++ {\n        if n % i\
    \ == 0 {\n            largest = i\n            break\n        }\n    }\n    return\
    \ largest\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T) {\n  candidate :=\
    \ largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15), expected:\
    \ 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual: candidate(63),\
    \ expected: 7 },\n     { actual: candidate(330), expected: 11 },\n     { actual:\
    \ candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmp71vuie40_test.go:40: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__2 (0.00s)\n        tmp71vuie40_test.go:40:\
    \ expected '%!s(int=7)', got '%!s(int=3)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__3\
    \ (0.00s)\n        tmp71vuie40_test.go:40: expected '%!s(int=11)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__4 (0.00s)\n        tmp71vuie40_test.go:40:\
    \ expected '%!s(int=29)', got '%!s(int=5)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.054s\nFAIL\n"
  timestamp: 1660075700
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    n -= 1\n    prime := 2\n\
    \    for i := 3; i <= n; i++ {\n        if n%i == 0 {\n            prime = i\n\
    \            break\n        }\n    }\n    return prime\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpkdtxcvam_test.go:38: expected '%!s(int=5)', got '%!s(int=7)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmpkdtxcvam_test.go:38:\
    \ expected '%!s(int=3)', got '%!s(int=13)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmpkdtxcvam_test.go:38: expected '%!s(int=7)', got '%!s(int=31)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpkdtxcvam_test.go:38:\
    \ expected '%!s(int=11)', got '%!s(int=7)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpkdtxcvam_test.go:38: expected '%!s(int=29)', got '%!s(int=3)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.035s\nFAIL\n"
  timestamp: 1660075688
- exit_code: null
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    prime := 2\n    factor :=\
    \ 1\n    for factor < n {\n        if n%prime == 0 {\n            factor++\n \
    \       }\n        prime++\n    }\n    return factor\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660075694
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    largest_prime := 2\n   \
    \ for i := 3; i <= n; i++ {\n        if n%i == 0 {\n            largest_prime\
    \ = i\n            break\n        }\n    }\n    return largest_prime\n}\n\nfunc\
    \ TestLargest_Prime_Factor(t *testing.T) {\n  candidate := largest_prime_factor\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(15), expected: 5 },\n     { actual:\
    \ candidate(27), expected: 3 },\n     { actual: candidate(63), expected: 7 },\n\
    \     { actual: candidate(330), expected: 11 },\n     { actual: candidate(13195),\
    \ expected: 29 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpm1qavo7o_test.go:37: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__2 (0.00s)\n        tmpm1qavo7o_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=3)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__3\
    \ (0.00s)\n        tmpm1qavo7o_test.go:37: expected '%!s(int=11)', got '%!s(int=3)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__4 (0.00s)\n        tmpm1qavo7o_test.go:37:\
    \ expected '%!s(int=29)', got '%!s(int=5)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.039s\nFAIL\n"
  timestamp: 1660075696
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    primes := make([]int, n)\n\
    \    for i := 0; i < n; i++ {\n        primes[i] = i\n    }\n    for i := 2; i\
    \ < n; i++ {\n        for j := 0; j < i; j++ {\n            if primes[j] > i {\n\
    \                primes[j] = i\n            }\n        }\n    }\n    return primes[n-1]\n\
    }\n\nfunc TestLargest_Prime_Factor(t *testing.T) {\n  candidate := largest_prime_factor\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(15), expected: 5 },\n     { actual:\
    \ candidate(27), expected: 3 },\n     { actual: candidate(63), expected: 7 },\n\
    \     { actual: candidate(330), expected: 11 },\n     { actual: candidate(13195),\
    \ expected: 29 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.10s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpxi8hgy2s_test.go:41: expected '%!s(int=5)', got '%!s(int=14)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmpxi8hgy2s_test.go:41:\
    \ expected '%!s(int=3)', got '%!s(int=26)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmpxi8hgy2s_test.go:41: expected '%!s(int=7)', got '%!s(int=62)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpxi8hgy2s_test.go:41:\
    \ expected '%!s(int=11)', got '%!s(int=329)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpxi8hgy2s_test.go:41: expected '%!s(int=29)', got '%!s(int=13194)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.126s\nFAIL\n"
  timestamp: 1660075701
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    p := 2\n    for i := 2;\
    \ i <= n; i++ {\n        if n % i == 0 {\n            p = i\n            break\n\
    \        }\n    }\n    return p\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T)\
    \ {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpy11a2fgp_test.go:37: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__2 (0.00s)\n        tmpy11a2fgp_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=3)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__3\
    \ (0.00s)\n        tmpy11a2fgp_test.go:37: expected '%!s(int=11)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__4 (0.00s)\n        tmpy11a2fgp_test.go:37:\
    \ expected '%!s(int=29)', got '%!s(int=5)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.053s\nFAIL\n"
  timestamp: 1660075696
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    n -= 1\n    p := 2\n   \
    \ for i := 2; i <= n; i++ {\n        if n%i == 0 {\n            p = i\n      \
    \      break\n        }\n    }\n    return p\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpuq96fncq_test.go:38: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmpuq96fncq_test.go:38:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmpuq96fncq_test.go:38: expected '%!s(int=7)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpuq96fncq_test.go:38:\
    \ expected '%!s(int=11)', got '%!s(int=7)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpuq96fncq_test.go:38: expected '%!s(int=29)', got '%!s(int=2)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.057s\nFAIL\n"
  timestamp: 1660075701
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    n -= 1\n    p := 2\n   \
    \ for i := 3; i <= n; i++ {\n        if n%i == 0 {\n            p = i\n      \
    \      break\n        }\n    }\n    return p\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpq_hf5iy6_test.go:38: expected '%!s(int=5)', got '%!s(int=7)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmpq_hf5iy6_test.go:38:\
    \ expected '%!s(int=3)', got '%!s(int=13)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmpq_hf5iy6_test.go:38: expected '%!s(int=7)', got '%!s(int=31)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpq_hf5iy6_test.go:38:\
    \ expected '%!s(int=11)', got '%!s(int=7)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpq_hf5iy6_test.go:38: expected '%!s(int=29)', got '%!s(int=3)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.043s\nFAIL\n"
  timestamp: 1660075700
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    prime := 2\n    factor :=\
    \ 2\n    for factor <= n {\n        if n%prime == 0 {\n            n = n / prime\n\
    \        } else {\n            prime++\n        }\n        factor++\n    }\n \
    \   return prime\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T) {\n  candidate\
    \ := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmp_46jbrch_test.go:40: expected '%!s(int=7)', got '%!s(int=6)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmp_46jbrch_test.go:40:\
    \ expected '%!s(int=11)', got '%!s(int=9)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmp_46jbrch_test.go:40: expected '%!s(int=29)', got '%!s(int=27)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.040s\nFAIL\n"
  timestamp: 1660075701
- exit_code: null
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    p := 2\n    i := 3\n   \
    \ for {\n        if n%i == 0 {\n            n = n/i\n        } else {\n      \
    \      p = i\n            i = p*p\n        }\n        if n == 1 {\n          \
    \  return p\n        }\n    }\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T)\
    \ {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660075712
- exit_code: null
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    prime := 2\n    factor :=\
    \ 1\n    for factor < n {\n        if n%prime == 0 {\n            factor++\n \
    \       }\n        prime++\n    }\n    return factor\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660075694
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    prime := 2\n    factor :=\
    \ 1\n    for n > 1 {\n        if n % prime == 0 {\n            factor++\n    \
    \    }\n        prime++\n        n/=prime\n    }\n    return factor\n}\n\nfunc\
    \ TestLargest_Prime_Factor(t *testing.T) {\n  candidate := largest_prime_factor\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(15), expected: 5 },\n     { actual:\
    \ candidate(27), expected: 3 },\n     { actual: candidate(63), expected: 7 },\n\
    \     { actual: candidate(330), expected: 11 },\n     { actual: candidate(13195),\
    \ expected: 29 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmph15mqfet_test.go:39: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmph15mqfet_test.go:39:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmph15mqfet_test.go:39: expected '%!s(int=7)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmph15mqfet_test.go:39:\
    \ expected '%!s(int=11)', got '%!s(int=3)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmph15mqfet_test.go:39: expected '%!s(int=29)', got '%!s(int=3)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.052s\nFAIL\n"
  timestamp: 1660075684
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    largest := n\n    factor\
    \ := 2\n    for factor <= n / 2 {\n        if n % factor == 0 {\n            largest\
    \ = factor\n            break\n        }\n        factor++\n    }\n    return\
    \ largest\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T) {\n  candidate :=\
    \ largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15), expected:\
    \ 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual: candidate(63),\
    \ expected: 7 },\n     { actual: candidate(330), expected: 11 },\n     { actual:\
    \ candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmppgtk0hqa_test.go:39: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__2 (0.00s)\n        tmppgtk0hqa_test.go:39:\
    \ expected '%!s(int=7)', got '%!s(int=3)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__3\
    \ (0.00s)\n        tmppgtk0hqa_test.go:39: expected '%!s(int=11)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__4 (0.00s)\n        tmppgtk0hqa_test.go:39:\
    \ expected '%!s(int=29)', got '%!s(int=5)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.034s\nFAIL\n"
  timestamp: 1660075701
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    largest_prime := 2\n   \
    \ for largest_prime < n {\n        if n%largest_prime == 0 {\n            break\n\
    \        }\n        largest_prime += 1\n    }\n    return largest_prime\n}\n\n\
    func TestLargest_Prime_Factor(t *testing.T) {\n  candidate := largest_prime_factor\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(15), expected: 5 },\n     { actual:\
    \ candidate(27), expected: 3 },\n     { actual: candidate(63), expected: 7 },\n\
    \     { actual: candidate(330), expected: 11 },\n     { actual: candidate(13195),\
    \ expected: 29 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpbe4czsst_test.go:37: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__2 (0.00s)\n        tmpbe4czsst_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=3)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__3\
    \ (0.00s)\n        tmpbe4czsst_test.go:37: expected '%!s(int=11)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__4 (0.00s)\n        tmpbe4czsst_test.go:37:\
    \ expected '%!s(int=29)', got '%!s(int=5)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.036s\nFAIL\n"
  timestamp: 1660075692
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    prime := 2\n    factor :=\
    \ 1\n    for factor < n {\n        if n%prime == 0 {\n            n = n/prime\n\
    \        } else {\n            prime++\n        }\n        factor++\n    }\n \
    \   return factor\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T) {\n  candidate\
    \ := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__1\
    \ (0.00s)\n        tmps0ocdq5z_test.go:40: expected '%!s(int=3)', got '%!s(int=4)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.036s\nFAIL\n"
  timestamp: 1660075688
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    p := 2\n    for {\n    \
    \    if n%p == 0 {\n            return p\n        }\n        p += 1\n    }\n}\n\
    \nfunc TestLargest_Prime_Factor(t *testing.T) {\n  candidate := largest_prime_factor\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(15), expected: 5 },\n     { actual:\
    \ candidate(27), expected: 3 },\n     { actual: candidate(63), expected: 7 },\n\
    \     { actual: candidate(330), expected: 11 },\n     { actual: candidate(13195),\
    \ expected: 29 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmp3oq0hn14_test.go:36: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__2 (0.00s)\n        tmp3oq0hn14_test.go:36:\
    \ expected '%!s(int=7)', got '%!s(int=3)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__3\
    \ (0.00s)\n        tmp3oq0hn14_test.go:36: expected '%!s(int=11)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__4 (0.00s)\n        tmp3oq0hn14_test.go:36:\
    \ expected '%!s(int=29)', got '%!s(int=5)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.060s\nFAIL\n"
  timestamp: 1660075688
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    prime := 2\n    factor :=\
    \ 2\n    for factor < n {\n        if n%prime == 0 {\n            n = n / prime\n\
    \        } else {\n            prime++\n        }\n        factor++\n    }\n \
    \   return prime\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T) {\n  candidate\
    \ := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpjxwth4_j_test.go:40: expected '%!s(int=5)', got '%!s(int=4)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__2 (0.00s)\n        tmpjxwth4_j_test.go:40:\
    \ expected '%!s(int=7)', got '%!s(int=5)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__3\
    \ (0.00s)\n        tmpjxwth4_j_test.go:40: expected '%!s(int=11)', got '%!s(int=8)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__4 (0.00s)\n        tmpjxwth4_j_test.go:40:\
    \ expected '%!s(int=29)', got '%!s(int=26)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.044s\nFAIL\n"
  timestamp: 1660075702
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    p := 2\n    i := 2\n   \
    \ for i <= n {\n        if n%i == 0 {\n            p += i\n            n /= i\n\
    \        }\n        i++\n    }\n    return p\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpidl6apz4_test.go:39: expected '%!s(int=5)', got '%!s(int=10)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmpidl6apz4_test.go:39:\
    \ expected '%!s(int=3)', got '%!s(int=14)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmpidl6apz4_test.go:39: expected '%!s(int=7)', got '%!s(int=12)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpidl6apz4_test.go:39:\
    \ expected '%!s(int=11)', got '%!s(int=23)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpidl6apz4_test.go:39: expected '%!s(int=29)', got '%!s(int=56)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.049s\nFAIL\n"
  timestamp: 1660075702
- exit_code: null
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    p := 2\n    i := 3\n   \
    \ for {\n        if n % i == 0 {\n            p += 1\n            n /= i\n   \
    \     } else {\n            i++\n        }\n        if n == 1 {\n            return\
    \ p\n        }\n    }\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T) {\n  candidate\
    \ := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660075714
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    prime := 2\n    factor :=\
    \ 1\n    for factor <= n / 2 {\n        if n % prime == 0 {\n            n = n\
    \ / prime\n        } else {\n            prime++\n        }\n        factor++\n\
    \    }\n    return prime\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T) {\n\
    \  candidate := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpjnyt07rm_test.go:40: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__2 (0.00s)\n        tmpjnyt07rm_test.go:40:\
    \ expected '%!s(int=7)', got '%!s(int=3)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__3\
    \ (0.00s)\n        tmpjnyt07rm_test.go:40: expected '%!s(int=11)', got '%!s(int=5)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__4 (0.00s)\n        tmpjnyt07rm_test.go:40:\
    \ expected '%!s(int=29)', got '%!s(int=13)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.040s\nFAIL\n"
  timestamp: 1660075703
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    prime := 2\n    factor :=\
    \ 1\n    for factor < n && prime*factor <= n {\n        prime++\n        factor++\n\
    \    }\n    return factor\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T) {\n\
    \  candidate := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpebtiammd_test.go:36: expected '%!s(int=5)', got '%!s(int=4)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmpebtiammd_test.go:36:\
    \ expected '%!s(int=3)', got '%!s(int=5)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmpebtiammd_test.go:36: expected '%!s(int=7)', got '%!s(int=8)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpebtiammd_test.go:36:\
    \ expected '%!s(int=11)', got '%!s(int=18)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpebtiammd_test.go:36: expected '%!s(int=29)', got '%!s(int=115)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.055s\nFAIL\n"
  timestamp: 1660075684
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    n -= 1\n    i := 2\n   \
    \ p := 2\n    for i <= n {\n        if n % i == 0 {\n            p += i\n    \
    \        n /= i\n        }\n        i++\n    }\n    return p\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmp5amktku6_test.go:40: expected '%!s(int=5)', got '%!s(int=11)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmp5amktku6_test.go:40:\
    \ expected '%!s(int=3)', got '%!s(int=17)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmp5amktku6_test.go:40: expected '%!s(int=7)', got '%!s(int=35)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmp5amktku6_test.go:40:\
    \ expected '%!s(int=11)', got '%!s(int=56)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmp5amktku6_test.go:40: expected '%!s(int=29)', got '%!s(int=740)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.047s\nFAIL\n"
  timestamp: 1660075703
- exit_code: null
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    prime := 2\n    factor :=\
    \ 2\n    for factor < n {\n        if n%prime == 0 {\n            factor++\n \
    \       }\n        prime++\n    }\n    return factor\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660075698
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    prime := 2\n    factor :=\
    \ 1\n    for n > 1 {\n        if n % prime == 0 {\n            n = n / prime\n\
    \            factor = prime + 1\n        } else {\n            prime++\n     \
    \   }\n    }\n    return factor\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T)\
    \ {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmp4wn5brjc_test.go:40: expected '%!s(int=5)', got '%!s(int=6)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmp4wn5brjc_test.go:40:\
    \ expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmp4wn5brjc_test.go:40: expected '%!s(int=7)', got '%!s(int=8)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmp4wn5brjc_test.go:40:\
    \ expected '%!s(int=11)', got '%!s(int=12)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmp4wn5brjc_test.go:40: expected '%!s(int=29)', got '%!s(int=30)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.030s\nFAIL\n"
  timestamp: 1660075684
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    prime := 2\n    factor :=\
    \ 1\n    for factor <= n {\n        if n % prime == 0 {\n            n = n / prime\n\
    \        } else {\n            prime++\n        }\n        factor++\n    }\n \
    \   return prime\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T) {\n  candidate\
    \ := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__3\
    \ (0.00s)\n        tmph6tchp_w_test.go:40: expected '%!s(int=11)', got '%!s(int=10)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__4 (0.00s)\n        tmph6tchp_w_test.go:40:\
    \ expected '%!s(int=29)', got '%!s(int=28)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.054s\nFAIL\n"
  timestamp: 1660075703
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    largestPrimeFactor := 1\n\
    \    for i := 2; i <= n; i++ {\n        if n%i == 0 {\n            largestPrimeFactor\
    \ = i\n            break\n        }\n    }\n    return largestPrimeFactor\n}\n\
    \nfunc TestLargest_Prime_Factor(t *testing.T) {\n  candidate := largest_prime_factor\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(15), expected: 5 },\n     { actual:\
    \ candidate(27), expected: 3 },\n     { actual: candidate(63), expected: 7 },\n\
    \     { actual: candidate(330), expected: 11 },\n     { actual: candidate(13195),\
    \ expected: 29 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmp6i4c4mpm_test.go:37: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__2 (0.00s)\n        tmp6i4c4mpm_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=3)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__3\
    \ (0.00s)\n        tmp6i4c4mpm_test.go:37: expected '%!s(int=11)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__4 (0.00s)\n        tmp6i4c4mpm_test.go:37:\
    \ expected '%!s(int=29)', got '%!s(int=5)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.067s\nFAIL\n"
  timestamp: 1660075684
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    if n < 2 {\n        return\
    \ n\n    }\n    p := 2\n    i := 3\n    for i <= n {\n        if n % i == 0 {\n\
    \            p = i\n        }\n        i += 2\n    }\n    return p\n}\n\nfunc\
    \ TestLargest_Prime_Factor(t *testing.T) {\n  candidate := largest_prime_factor\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(15), expected: 5 },\n     { actual:\
    \ candidate(27), expected: 3 },\n     { actual: candidate(63), expected: 7 },\n\
    \     { actual: candidate(330), expected: 11 },\n     { actual: candidate(13195),\
    \ expected: 29 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpvpp33v3y_test.go:41: expected '%!s(int=5)', got '%!s(int=15)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmpvpp33v3y_test.go:41:\
    \ expected '%!s(int=3)', got '%!s(int=27)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmpvpp33v3y_test.go:41: expected '%!s(int=7)', got '%!s(int=63)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpvpp33v3y_test.go:41:\
    \ expected '%!s(int=11)', got '%!s(int=165)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpvpp33v3y_test.go:41: expected '%!s(int=29)', got '%!s(int=13195)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.040s\nFAIL\n"
  timestamp: 1660075703
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    primes := make([]int, n)\n\
    \    primes[0] = 2\n    for i := 1; i < n; i++ {\n        for j := 2; j < i; j++\
    \ {\n            if i*j > n {\n                break\n            }\n        \
    \    if primes[j] == 0 {\n                primes[j] = i\n                break\n\
    \            }\n        }\n    }\n    return primes[len(primes)-1]\n}\n\nfunc\
    \ TestLargest_Prime_Factor(t *testing.T) {\n  candidate := largest_prime_factor\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(15), expected: 5 },\n     { actual:\
    \ candidate(27), expected: 3 },\n     { actual: candidate(63), expected: 7 },\n\
    \     { actual: candidate(330), expected: 11 },\n     { actual: candidate(13195),\
    \ expected: 29 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpiywmuo68_test.go:43: expected '%!s(int=5)', got '%!s(int=0)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmpiywmuo68_test.go:43:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmpiywmuo68_test.go:43: expected '%!s(int=7)', got '%!s(int=0)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpiywmuo68_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpiywmuo68_test.go:43: expected '%!s(int=29)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.041s\nFAIL\n"
  timestamp: 1660075703
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    prime := 2\n    factor :=\
    \ 1\n    for factor <= n {\n        if n%prime == 0 {\n            n = n/prime\n\
    \        } else {\n            prime++\n        }\n        factor++\n    }\n \
    \   return prime\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T) {\n  candidate\
    \ := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__3\
    \ (0.00s)\n        tmpc0sb9kua_test.go:40: expected '%!s(int=11)', got '%!s(int=10)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__4 (0.00s)\n        tmpc0sb9kua_test.go:40:\
    \ expected '%!s(int=29)', got '%!s(int=28)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.040s\nFAIL\n"
  timestamp: 1660075703
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    n -= 1\n    i := 2\n   \
    \ factor := 1\n    for i <= n {\n        if n % i == 0 {\n            factor *=\
    \ i\n            n /= i\n        }\n        i++\n    }\n    return factor\n}\n\
    \nfunc TestLargest_Prime_Factor(t *testing.T) {\n  candidate := largest_prime_factor\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(15), expected: 5 },\n     { actual:\
    \ candidate(27), expected: 3 },\n     { actual: candidate(63), expected: 7 },\n\
    \     { actual: candidate(330), expected: 11 },\n     { actual: candidate(13195),\
    \ expected: 29 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpcc9w891p_test.go:40: expected '%!s(int=5)', got '%!s(int=14)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmpcc9w891p_test.go:40:\
    \ expected '%!s(int=3)', got '%!s(int=26)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmpcc9w891p_test.go:40: expected '%!s(int=7)', got '%!s(int=62)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpcc9w891p_test.go:40:\
    \ expected '%!s(int=11)', got '%!s(int=329)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpcc9w891p_test.go:40: expected '%!s(int=29)', got '%!s(int=4398)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.046s\nFAIL\n"
  timestamp: 1660075703
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    if n < 2 {\n        return\
    \ n\n    }\n\n    p := 2\n    q := n\n\n    for {\n        if q%p == 0 {\n   \
    \         return p\n        }\n\n        if q%p == 1 {\n            return q\n\
    \        }\n\n        p++\n        q--\n    }\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmp7tcas_l3_test.go:48: expected '%!s(int=5)', got '%!s(int=15)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmp7tcas_l3_test.go:48:\
    \ expected '%!s(int=3)', got '%!s(int=27)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmp7tcas_l3_test.go:48: expected '%!s(int=7)', got '%!s(int=63)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmp7tcas_l3_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=2)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmp7tcas_l3_test.go:48: expected '%!s(int=29)', got '%!s(int=13195)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.043s\nFAIL\n"
  timestamp: 1660075703
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    prime := 2\n    factor :=\
    \ 1\n    for n > 1 {\n        if n % prime == 0 {\n            n = n / prime\n\
    \            factor = prime + 1\n        } else {\n            prime++\n     \
    \   }\n    }\n    return factor\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T)\
    \ {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmp4wn5brjc_test.go:40: expected '%!s(int=5)', got '%!s(int=6)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmp4wn5brjc_test.go:40:\
    \ expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmp4wn5brjc_test.go:40: expected '%!s(int=7)', got '%!s(int=8)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmp4wn5brjc_test.go:40:\
    \ expected '%!s(int=11)', got '%!s(int=12)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmp4wn5brjc_test.go:40: expected '%!s(int=29)', got '%!s(int=30)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.030s\nFAIL\n"
  timestamp: 1660075684
- exit_code: 2
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    primes := make([]int, n)\n\
    \    for i := 0; i < n; i++ {\n        primes[i] = 1\n    }\n    for i := 2; i\
    \ < n; i++ {\n        for j := 0; j < i; j++ {\n            if primes[j] == 0\
    \ {\n                break\n            }\n            if n%primes[j] == 0 {\n\
    \                primes[j] = 0\n                break\n            }\n       \
    \ }\n    }\n    return i\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T) {\n\
    \  candidate := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpmq_bt64k_test.go:25:12: undefined: i

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075703
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    p := 2\n    for {\n    \
    \    if n%p == 0 {\n            return p\n        }\n        p++\n    }\n}\n\n\
    func TestLargest_Prime_Factor(t *testing.T) {\n  candidate := largest_prime_factor\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(15), expected: 5 },\n     { actual:\
    \ candidate(27), expected: 3 },\n     { actual: candidate(63), expected: 7 },\n\
    \     { actual: candidate(330), expected: 11 },\n     { actual: candidate(13195),\
    \ expected: 29 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmp42ovf_58_test.go:36: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__2 (0.00s)\n        tmp42ovf_58_test.go:36:\
    \ expected '%!s(int=7)', got '%!s(int=3)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__3\
    \ (0.00s)\n        tmp42ovf_58_test.go:36: expected '%!s(int=11)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__4 (0.00s)\n        tmp42ovf_58_test.go:36:\
    \ expected '%!s(int=29)', got '%!s(int=5)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.039s\nFAIL\n"
  timestamp: 1660075704
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    primes := make([]int, n)\n\
    \    primes[0] = 2\n    for i := 1; i < n; i++ {\n        for j := 0; j < i; j++\
    \ {\n            if primes[j] > i {\n                primes[j] = primes[j] + 1\n\
    \                break\n            }\n        }\n    }\n    return primes[n-1]\n\
    }\n\nfunc TestLargest_Prime_Factor(t *testing.T) {\n  candidate := largest_prime_factor\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(15), expected: 5 },\n     { actual:\
    \ candidate(27), expected: 3 },\n     { actual: candidate(63), expected: 7 },\n\
    \     { actual: candidate(330), expected: 11 },\n     { actual: candidate(13195),\
    \ expected: 29 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpan0ezqbb_test.go:40: expected '%!s(int=5)', got '%!s(int=0)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmpan0ezqbb_test.go:40:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmpan0ezqbb_test.go:40: expected '%!s(int=7)', got '%!s(int=0)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpan0ezqbb_test.go:40:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpan0ezqbb_test.go:40: expected '%!s(int=29)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.047s\nFAIL\n"
  timestamp: 1660075704
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    prime := 2\n    factor :=\
    \ 2\n    for factor < n {\n        if n%prime == 0 {\n            n = n/prime\n\
    \        } else {\n            prime++\n        }\n        factor++\n    }\n \
    \   return prime\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T) {\n  candidate\
    \ := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpxbr8hmlf_test.go:40: expected '%!s(int=5)', got '%!s(int=4)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__2 (0.00s)\n        tmpxbr8hmlf_test.go:40:\
    \ expected '%!s(int=7)', got '%!s(int=5)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__3\
    \ (0.00s)\n        tmpxbr8hmlf_test.go:40: expected '%!s(int=11)', got '%!s(int=8)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__4 (0.00s)\n        tmpxbr8hmlf_test.go:40:\
    \ expected '%!s(int=29)', got '%!s(int=26)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.050s\nFAIL\n"
  timestamp: 1660075704
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    primes := make([]int, n)\n\
    \    primes[0] = 2\n    for i := 1; i < n; i++ {\n        for j := 2; j < i; j++\
    \ {\n            if i*j > n {\n                break\n            }\n        \
    \    if primes[j] == 0 {\n                primes[j] = i\n                break\n\
    \            }\n        }\n    }\n    return primes[n-1]\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmp2_ghtvwn_test.go:43: expected '%!s(int=5)', got '%!s(int=0)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmp2_ghtvwn_test.go:43:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmp2_ghtvwn_test.go:43: expected '%!s(int=7)', got '%!s(int=0)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmp2_ghtvwn_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmp2_ghtvwn_test.go:43: expected '%!s(int=29)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.036s\nFAIL\n"
  timestamp: 1660075705
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    largest := 1\n    for i\
    \ := 2; i <= n; i++ {\n        if n%i == 0 {\n            largest = i\n      \
    \      break\n        }\n    }\n    return largest\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpkc94nacp_test.go:37: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__2 (0.00s)\n        tmpkc94nacp_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=3)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__3\
    \ (0.00s)\n        tmpkc94nacp_test.go:37: expected '%!s(int=11)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__4 (0.00s)\n        tmpkc94nacp_test.go:37:\
    \ expected '%!s(int=29)', got '%!s(int=5)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.041s\nFAIL\n"
  timestamp: 1660075699
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    prime := 2\n    for {\n\
    \        if n%prime == 0 {\n            return prime\n        }\n        prime++\n\
    \    }\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T) {\n  candidate := largest_prime_factor\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(15), expected: 5 },\n     { actual:\
    \ candidate(27), expected: 3 },\n     { actual: candidate(63), expected: 7 },\n\
    \     { actual: candidate(330), expected: 11 },\n     { actual: candidate(13195),\
    \ expected: 29 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpa3j8vf0x_test.go:36: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__2 (0.00s)\n        tmpa3j8vf0x_test.go:36:\
    \ expected '%!s(int=7)', got '%!s(int=3)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__3\
    \ (0.00s)\n        tmpa3j8vf0x_test.go:36: expected '%!s(int=11)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__4 (0.00s)\n        tmpa3j8vf0x_test.go:36:\
    \ expected '%!s(int=29)', got '%!s(int=5)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.061s\nFAIL\n"
  timestamp: 1660075705
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    if n < 2 {\n        return\
    \ n\n    }\n    p := 2\n    q := n\n    r := 1\n    for {\n        if q%p == 0\
    \ {\n            return r\n        }\n        if q%p == 1 {\n            return\
    \ p\n        }\n        if q%p == 2 {\n            return p\n        }\n     \
    \   if q%p == 3 {\n            return p\n        }\n        if q%p == 4 {\n  \
    \          return p\n        }\n        if q%p == 5 {\n            return p\n\
    \        }\n        if q%p == 6 {\n            return p\n        }\n        if\
    \ q%p == 7 {\n            return p\n        }\n        if q%p == 8 {\n       \
    \     return p\n        }\n        if q%p == 9 {\n            return p\n     \
    \   }\n        if q%p == 10 {\n            return p\n        }\n        if q%p\
    \ == 11 {\n            return p\n        }\n        if q%p == 12 {\n         \
    \   return p\n        }\n        if q%p == 13 {\n            return p\n      \
    \  }\n        if q%p == 14 {\n            return p\n        }\n        if q%p\
    \ == 15 {\n            return p\n        }\n        if q%p == 16 {\n         \
    \   return p\n        }\n        if q%p == 17 {\n            return p\n      \
    \  }\n        if q%p == 18 {\n            return p\n        }\n        if q%p\
    \ == 19 {\n            return p\n        }\n        if q%p == 20 {\n         \
    \   return p\n        }\n        if q%p == 21 {\n            return p\n      \
    \  }\n        if q%p == 22 {\n            return p\n        }\n        if q%p\
    \ == 23 {\n            return p\n        }\n        if q%p == 24 {\n         \
    \   return p\n        }\n        if q%p == 25 {\n            return p\n      \
    \  }\n        if q%p == 26 {\n            return p\n        }\n        if q%p\
    \ == 27 {\n            return p\n        }\n        if q%p == 28 {\n         \
    \   return p\n        }\n        if q%p == 29 {\n            return p\n      \
    \  }\n        if q%p == 30 {\n            return p\n        }\n        if q%p\
    \ == 31 {\n            return p\n        }\n        if q%p == 32 {\n         \
    \   return p\n        }\n        if q%p == 33 {\n            return p\n      \
    \  }\n        if q%p == 34 {\n            return p\n        }\n        if q%p\
    \ == 35 {\n            return p\n        }\n        if q%p == 36 {\n         \
    \   return p\n        }\n        if q%p == 37 {\n            return p\n      \
    \  }\n        if q%p == 38 {\n            return p\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpyu03wtne_test.go:134:6: expected ''('', found TestLargest_Prime_Factor

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660075704
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    primes := make([]int, n)\n\
    \    for i := 0; i < n; i++ {\n        primes[i] = 1\n    }\n    for i := 2; i\
    \ < n; i++ {\n        if primes[i] == 0 {\n            for j := i * i; j < n;\
    \ j += i {\n                primes[j] = 0\n            }\n        }\n    }\n \
    \   return primes[len(primes)-1]\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T)\
    \ {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmp8_mk2lgt_test.go:41: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmp8_mk2lgt_test.go:41:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmp8_mk2lgt_test.go:41: expected '%!s(int=7)', got '%!s(int=1)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmp8_mk2lgt_test.go:41:\
    \ expected '%!s(int=11)', got '%!s(int=1)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmp8_mk2lgt_test.go:41: expected '%!s(int=29)', got '%!s(int=1)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.038s\nFAIL\n"
  timestamp: 1660075705
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    n -= 1\n    prime := 2\n\
    \    for i := 3; i <= n; i++ {\n        if n%i == 0 {\n            prime = i\n\
    \            break\n        }\n    }\n    return prime\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpkdtxcvam_test.go:38: expected '%!s(int=5)', got '%!s(int=7)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmpkdtxcvam_test.go:38:\
    \ expected '%!s(int=3)', got '%!s(int=13)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmpkdtxcvam_test.go:38: expected '%!s(int=7)', got '%!s(int=31)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpkdtxcvam_test.go:38:\
    \ expected '%!s(int=11)', got '%!s(int=7)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpkdtxcvam_test.go:38: expected '%!s(int=29)', got '%!s(int=3)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.035s\nFAIL\n"
  timestamp: 1660075688
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    p := 2\n    for i := 2;\
    \ i <= n; i++ {\n        if n%i == 0 {\n            p = i\n            break\n\
    \        }\n    }\n    return p\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T)\
    \ {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpbxlr0aro_test.go:37: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__2 (0.00s)\n        tmpbxlr0aro_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=3)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__3\
    \ (0.00s)\n        tmpbxlr0aro_test.go:37: expected '%!s(int=11)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__4 (0.00s)\n        tmpbxlr0aro_test.go:37:\
    \ expected '%!s(int=29)', got '%!s(int=5)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.045s\nFAIL\n"
  timestamp: 1660075684
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    prime := 2\n    factor :=\
    \ 1\n    for factor < n && prime < n {\n        if n%prime == 0 {\n          \
    \  n = n / prime\n        } else {\n            prime++\n        }\n        factor++\n\
    \    }\n    return factor\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T) {\n\
    \  candidate := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__1\
    \ (0.00s)\n        tmpj23ruggt_test.go:40: expected '%!s(int=3)', got '%!s(int=4)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.046s\nFAIL\n"
  timestamp: 1660075697
- exit_code: null
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    prime := 2\n    factor :=\
    \ 1\n    for factor < n {\n        if n%prime == 0 {\n            factor++\n \
    \       }\n        prime++\n    }\n    return factor\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660075694
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    largest_prime := 2\n   \
    \ for largest_prime < n {\n        if n%largest_prime == 0 {\n            break\n\
    \        }\n        largest_prime += 1\n    }\n    return largest_prime\n}\n\n\
    func TestLargest_Prime_Factor(t *testing.T) {\n  candidate := largest_prime_factor\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(15), expected: 5 },\n     { actual:\
    \ candidate(27), expected: 3 },\n     { actual: candidate(63), expected: 7 },\n\
    \     { actual: candidate(330), expected: 11 },\n     { actual: candidate(13195),\
    \ expected: 29 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpbe4czsst_test.go:37: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__2 (0.00s)\n        tmpbe4czsst_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=3)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__3\
    \ (0.00s)\n        tmpbe4czsst_test.go:37: expected '%!s(int=11)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__4 (0.00s)\n        tmpbe4czsst_test.go:37:\
    \ expected '%!s(int=29)', got '%!s(int=5)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.036s\nFAIL\n"
  timestamp: 1660075692
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    primes := make([]int, n)\n\
    \    primes[0] = 1\n    for i := 1; i < n; i++ {\n        for j := 2; j < i; j++\
    \ {\n            if primes[j] < i {\n                primes[j] = i\n         \
    \   }\n        }\n    }\n    return primes[len(primes)-1]\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.13s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmphuwwzsdi_test.go:39: expected '%!s(int=5)', got '%!s(int=0)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmphuwwzsdi_test.go:39:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmphuwwzsdi_test.go:39: expected '%!s(int=7)', got '%!s(int=0)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmphuwwzsdi_test.go:39:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmphuwwzsdi_test.go:39: expected '%!s(int=29)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.172s\nFAIL\n"
  timestamp: 1660075705
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    prime := 2\n    factor :=\
    \ 2\n    for factor <= n {\n        if n%prime == 0 {\n            n = n/prime\n\
    \        } else {\n            prime++\n        }\n        factor++\n    }\n \
    \   return prime\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T) {\n  candidate\
    \ := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmp7fcfwu4x_test.go:40: expected '%!s(int=7)', got '%!s(int=6)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmp7fcfwu4x_test.go:40:\
    \ expected '%!s(int=11)', got '%!s(int=9)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmp7fcfwu4x_test.go:40: expected '%!s(int=29)', got '%!s(int=27)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.039s\nFAIL\n"
  timestamp: 1660075705
- exit_code: null
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    prime := 2\n    factor :=\
    \ 1\n    for factor < n {\n        if n%prime == 0 {\n            factor++\n \
    \       }\n        prime++\n    }\n    return factor\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660075694
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    n -= 1\n    i := 2\n   \
    \ for i <= n {\n        if n % i == 0 {\n            return i\n        }\n   \
    \     i += 2\n    }\n    return n\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T)\
    \ {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpd7msb710_test.go:38: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmpd7msb710_test.go:38:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmpd7msb710_test.go:38: expected '%!s(int=7)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpd7msb710_test.go:38:\
    \ expected '%!s(int=11)', got '%!s(int=329)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpd7msb710_test.go:38: expected '%!s(int=29)', got '%!s(int=2)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.048s\nFAIL\n"
  timestamp: 1660075705
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    p := 2\n    for i := 2;\
    \ i <= n; i++ {\n        if n % i == 0 {\n            p = i\n            break\n\
    \        }\n    }\n    return p\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T)\
    \ {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15),\
    \ expected: 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual:\
    \ candidate(63), expected: 7 },\n     { actual: candidate(330), expected: 11 },\n\
    \     { actual: candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpy11a2fgp_test.go:37: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__2 (0.00s)\n        tmpy11a2fgp_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=3)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__3\
    \ (0.00s)\n        tmpy11a2fgp_test.go:37: expected '%!s(int=11)', got '%!s(int=2)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__4 (0.00s)\n        tmpy11a2fgp_test.go:37:\
    \ expected '%!s(int=29)', got '%!s(int=5)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.053s\nFAIL\n"
  timestamp: 1660075696
- exit_code: null
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    n -= 2\n    i := 2\n   \
    \ for {\n        if n%i == 0 {\n            return i\n        }\n        i +=\
    \ 2\n    }\n}\n\nfunc TestLargest_Prime_Factor(t *testing.T) {\n  candidate :=\
    \ largest_prime_factor\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(15), expected:\
    \ 5 },\n     { actual: candidate(27), expected: 3 },\n     { actual: candidate(63),\
    \ expected: 7 },\n     { actual: candidate(330), expected: 11 },\n     { actual:\
    \ candidate(13195), expected: 29 },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660075703
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    n -= 1\n    i := 2\n   \
    \ for i <= n {\n        if n % i == 0 {\n            n /= i\n        } else {\n\
    \            break\n        }\n        i++\n    }\n    return n\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpczru7tzq_test.go:40: expected '%!s(int=5)', got '%!s(int=7)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmpczru7tzq_test.go:40:\
    \ expected '%!s(int=3)', got '%!s(int=13)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmpczru7tzq_test.go:40: expected '%!s(int=7)', got '%!s(int=31)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpczru7tzq_test.go:40:\
    \ expected '%!s(int=11)', got '%!s(int=329)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpczru7tzq_test.go:40: expected '%!s(int=29)', got '%!s(int=2199)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.041s\nFAIL\n"
  timestamp: 1660075705
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    n -= 1\n    i := 2\n   \
    \ for i <= n {\n        if n % i == 0 {\n            n /= i\n        } else {\n\
    \            i++\n        }\n    }\n    return n\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmp16ivu1_5_test.go:39: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmp16ivu1_5_test.go:39:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmp16ivu1_5_test.go:39: expected '%!s(int=7)', got '%!s(int=1)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmp16ivu1_5_test.go:39:\
    \ expected '%!s(int=11)', got '%!s(int=1)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmp16ivu1_5_test.go:39: expected '%!s(int=29)', got '%!s(int=1)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.035s\nFAIL\n"
  timestamp: 1660075706
- exit_code: 1
  program: "package largest_prime_factor_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\nfunc largest_prime_factor(n int) int {\n    prime := 2\n    factor :=\
    \ 1\n    for factor < n && n % factor == 0 {\n        factor = prime + 1\n   \
    \     prime++\n    }\n    return factor\n}\n\nfunc TestLargest_Prime_Factor(t\
    \ *testing.T) {\n  candidate := largest_prime_factor\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(15), expected: 5 },\n     { actual: candidate(27), expected:\
    \ 3 },\n     { actual: candidate(63), expected: 7 },\n     { actual: candidate(330),\
    \ expected: 11 },\n     { actual: candidate(13195), expected: 29 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestLargest_Prime_Factor (0.00s)\n    --- FAIL: TestLargest_Prime_Factor/test_num__0\
    \ (0.00s)\n        tmpomskqexh_test.go:36: expected '%!s(int=5)', got '%!s(int=4)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__1 (0.00s)\n        tmpomskqexh_test.go:36:\
    \ expected '%!s(int=3)', got '%!s(int=4)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__2\
    \ (0.00s)\n        tmpomskqexh_test.go:36: expected '%!s(int=7)', got '%!s(int=4)'\n\
    \    --- FAIL: TestLargest_Prime_Factor/test_num__3 (0.00s)\n        tmpomskqexh_test.go:36:\
    \ expected '%!s(int=11)', got '%!s(int=4)'\n    --- FAIL: TestLargest_Prime_Factor/test_num__4\
    \ (0.00s)\n        tmpomskqexh_test.go:36: expected '%!s(int=29)', got '%!s(int=3)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.040s\nFAIL\n"
  timestamp: 1660075706

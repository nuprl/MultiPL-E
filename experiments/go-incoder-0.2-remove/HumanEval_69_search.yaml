name: HumanEval_69_search
language: go_test.go
prompt: "package search_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// You\
  \ are given a non-empty list of positive integers. Return the greatest integer that\
  \ is greater than \n// zero, and has a frequency greater than or equal to the value\
  \ of the integer itself. \n// The frequency of an integer is the number of times\
  \ it appears in the list.\n// If no such a value exist, return -1.\n// Examples:\n\
  func search(lst []int) int {\n"
tests: "func TestSearch(t *testing.T) {\n  candidate := search\n\ttype test struct\
  \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
  \     { actual: candidate([]int{5, 5, 5, 5, 1}), expected: 1 },\n     { actual:\
  \ candidate([]int{4, 1, 4, 1, 4, 4}), expected: 4 },\n     { actual: candidate([]int{3,\
  \ 3}), expected: -1 },\n     { actual: candidate([]int{8, 8, 8, 8, 8, 8, 8, 8}),\
  \ expected: 8 },\n     { actual: candidate([]int{2, 3, 3, 2, 2}), expected: 2 },\n\
  \     { actual: candidate([]int{2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7,\
  \ 1, 7, 4, 10, 8, 1}), expected: 1 },\n     { actual: candidate([]int{3, 2, 8, 2}),\
  \ expected: 2 },\n     { actual: candidate([]int{6, 7, 1, 8, 8, 10, 5, 8, 5, 3,\
  \ 10}), expected: 1 },\n     { actual: candidate([]int{8, 8, 3, 6, 5, 6, 4}), expected:\
  \ -1 },\n     { actual: candidate([]int{6, 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10,\
  \ 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9}), expected: 1 },\n     { actual: candidate([]int{1,\
  \ 9, 10, 1, 3}), expected: 1 },\n     { actual: candidate([]int{6, 9, 7, 5, 8, 7,\
  \ 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10}), expected: 5 },\n \
  \    { actual: candidate([]int{1}), expected: 1 },\n     { actual: candidate([]int{8,\
  \ 8, 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5}), expected:\
  \ 4 },\n     { actual: candidate([]int{2, 10, 4, 8, 2, 10, 5, 1, 2, 9, 5, 5, 6,\
  \ 3, 8, 6, 4, 10}), expected: 2 },\n     { actual: candidate([]int{1, 6, 10, 1,\
  \ 6, 9, 10, 8, 6, 8, 7, 3}), expected: 1 },\n     { actual: candidate([]int{9, 2,\
  \ 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2, 8,\
  \ 10, 9, 4}), expected: 4 },\n     { actual: candidate([]int{2, 6, 4, 2, 8, 7, 5,\
  \ 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7}), expected: 4 },\n     { actual:\
  \ candidate([]int{9, 8, 6, 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1}), expected:\
  \ 2 },\n     { actual: candidate([]int{5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10, 10,\
  \ 6, 8, 4, 10, 7, 7, 10, 8}), expected: -1 },\n     { actual: candidate([]int{10}),\
  \ expected: -1 },\n     { actual: candidate([]int{9, 7, 7, 2, 4, 7, 2, 10, 9, 7,\
  \ 5, 7, 2}), expected: 2 },\n     { actual: candidate([]int{5, 4, 10, 2, 1, 1, 10,\
  \ 3, 6, 1, 8}), expected: 1 },\n     { actual: candidate([]int{7, 9, 9, 9, 3, 4,\
  \ 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7, 6, 7, 7, 6}), expected: 1 },\n     { actual:\
  \ candidate([]int{3, 10, 10, 9, 2}), expected: -1 },\n   }\n\n\tfor i, tc := range\
  \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\
  \tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
  \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\
  \t}\n}\n"
completions: ["    var max int = -1\n    var freq int = 0\n    for _, v := range lst\
    \ {\n        if v > 0 {\n            freq++\n            if freq > max {\n   \
    \             max = v\n            }\n        }\n    }\n    return max\n}\n",
  "    var maxVal int = -1\n    var maxFreq int = -1\n    for _, v := range lst {\n\
    \        if v > maxVal {\n            maxVal = v\n            maxFreq = 1\n  \
    \      } else if v == maxVal {\n            maxFreq++\n        }\n    }\n    if\
    \ maxFreq > maxVal {\n        return -1\n    }\n    return maxVal\n}\n", "   \
    \ max := -1\n    freq := 0\n    for _, v := range lst {\n        if v > 0 {\n\
    \            freq++\n            if freq > max {\n                max = freq\n\
    \            }\n        }\n    }\n    return max\n}\n", "    max := -1\n    freq\
    \ := 0\n    for _, v := range lst {\n        if v > 0 {\n            freq++\n\
    \            if freq > max {\n                max = freq\n            }\n    \
    \    }\n    }\n    return max\n}\n", "    max := -1\n    freq := 0\n    for _,\
    \ v := range lst {\n        if v > 0 {\n            freq++\n            if freq\
    \ > max {\n                max = freq\n            }\n        }\n    }\n    return\
    \ max\n}\n", "    max := -1\n    freq := 0\n    for _, v := range lst {\n    \
    \    if v > 0 {\n            freq++\n            if freq > max {\n           \
    \     max = freq\n            }\n        }\n    }\n    return max\n}\n", "   \
    \ max := -1\n    freq := 0\n    for _, v := range lst {\n        if v > 0 {\n\
    \            freq++\n            if freq > max {\n                max = freq\n\
    \            }\n        }\n    }\n    return max\n}\n", "    max := -1\n    for\
    \ _, v := range lst {\n        if v > 0 {\n            max = v\n        }\n  \
    \  }\n    return max\n}\n", "    max := -1\n    freq := 0\n    for _, v := range\
    \ lst {\n        if v > 0 {\n            freq++\n            if freq > max {\n\
    \                max = freq\n            }\n        }\n    }\n    return max\n\
    }\n", "    max := -1\n    freq := 0\n    for _, v := range lst {\n        if v\
    \ > 0 {\n            freq++\n            if freq > max {\n                max\
    \ = freq\n            }\n        }\n    }\n    return max\n}\n", "    max := -1\n\
    \    freq := 0\n    for _, v := range lst {\n        if v > 0 {\n            freq++\n\
    \            if freq > max {\n                max = v\n            }\n       \
    \ }\n    }\n    return max\n}\n", "    var freq map[int]int\n    for _, v := range\
    \ lst {\n        freq[v]++\n    }\n    for _, v := range freq {\n        if freq[v]\
    \ > 0 {\n            return v\n        }\n    }\n    return -1\n}\n", "    max\
    \ := -1\n    freq := 0\n    for _, v := range lst {\n        if v > 0 {\n    \
    \        freq++\n            if freq > max {\n                max = freq\n   \
    \         }\n        }\n    }\n    return max\n}\n", "    max := -1\n    max :=\
    \ -1\n    for _, v := range lst {\n        if v > 0 {\n            if v > max\
    \ {\n                max = v\n            }\n        }\n    }\n    return max\n\
    }\n", "    max := -1\n    freq := 0\n    for _, v := range lst {\n        if v\
    \ > 0 {\n            freq++\n            if freq > max {\n                max\
    \ = freq\n            }\n        }\n    }\n    return max\n}\n", "    var max\
    \ int\n    var freq int\n    for _, v := range lst {\n        if v > 0 {\n   \
    \         freq++\n            if freq > max {\n                max = v\n     \
    \       }\n        }\n    }\n    if freq == 0 {\n        return -1\n    }\n  \
    \  return max\n}\n", "    max := -1\n    for _, v := range lst {\n        if v\
    \ > 0 {\n            if max < v {\n                max = v\n            }\n  \
    \      }\n    }\n    return max\n}\n", "    max := -1\n    max := 0\n    for _,\
    \ v := range lst {\n        if v > max {\n            max = v\n        }\n   \
    \ }\n    return max\n}\n", "    max := -1\n    freq := 0\n    for _, v := range\
    \ lst {\n        if v > 0 {\n            freq++\n            if freq > max {\n\
    \                max = freq\n            }\n        }\n    }\n    return max\n\
    }\n", "    var maxFreq int\n    var maxVal int\n    for _, val := range lst {\n\
    \        if val > maxVal {\n            maxVal = val\n            maxFreq = maxFreq\
    \ + 1\n        }\n    }\n    if maxFreq >= maxVal {\n        return maxVal\n \
    \   }\n    return -1\n}\n", "    var maxVal int = -1\n    var maxFreq int = -1\n\
    \    for _, v := range lst {\n        if v > 0 {\n            if maxFreq < v {\n\
    \                maxFreq = v\n                maxVal = v\n            }\n    \
    \    }\n    }\n    return maxVal\n}\n", "    var maxFreq int\n    var maxVal int\n\
    \    for _, val := range lst {\n        if val > maxVal {\n            maxFreq\
    \ = maxVal\n            maxVal = val\n        } else if val == maxVal {\n    \
    \        maxFreq++\n        }\n    }\n    if maxFreq == 0 {\n        return -1\n\
    \    }\n    return maxVal\n}\n", "    max := -1\n    freq := 0\n    for _, v :=\
    \ range lst {\n        if v > 0 {\n            freq++\n            if freq > max\
    \ {\n                max = freq\n            }\n        }\n    }\n    return max\n\
    }\n", "    var maxfreq int\n    var maxval int\n    for _, v := range lst {\n\
    \        if maxfreq < v {\n            maxfreq = v\n            maxval = v\n \
    \       }\n    }\n    if maxfreq == 0 {\n        return -1\n    }\n    for _,\
    \ v := range lst {\n        if v == maxval {\n            maxfreq--\n        }\n\
    \    }\n    return maxval\n}\n", "    var maxVal int\n    var maxCount int\n \
    \   for _, v := range lst {\n        if v > 0 {\n            if maxCount < v {\n\
    \                maxCount = v\n                maxVal = v\n            }\n   \
    \     }\n    }\n    if maxCount == 0 {\n        return -1\n    }\n    return maxVal\n\
    }\n", "    max := -1\n    freq := 0\n    for _, v := range lst {\n        if v\
    \ > 0 {\n            freq++\n            if freq > max {\n                max\
    \ = freq\n            }\n        }\n    }\n    return max\n}\n", "    max := -1\n\
    \    for _, v := range lst {\n        if v > 0 {\n            max += 1\n     \
    \       if max >= v {\n                return max\n            }\n        }\n\
    \    }\n    return -1\n}\n", "    max := -1\n    freq := 0\n    for _, v := range\
    \ lst {\n        if v > 0 {\n            freq++\n            if freq > max {\n\
    \                max = freq\n            }\n        }\n    }\n    return max\n\
    }\n", "    var maxFreq int\n    var maxVal int\n    for _, val := range lst {\n\
    \        if val > 0 {\n            if maxFreq < val {\n                maxFreq\
    \ = val\n                maxVal = val\n            }\n        }\n    }\n    if\
    \ maxFreq == 0 {\n        return -1\n    }\n    for _, val := range lst {\n  \
    \      if val > 0 {\n            if val == maxVal {\n                return maxVal\n\
    \            }\n        }\n    }\n    return -1\n}\n", "    max := -1\n    freq\
    \ := 0\n    for _, v := range lst {\n        if v > 0 {\n            if freq <\
    \ v {\n                freq = v\n                max = v\n            }\n    \
    \    }\n    }\n    return max\n}\n", "    var maxVal int = -1\n    var maxFreq\
    \ int = -1\n    for _, v := range lst {\n        if v > maxVal {\n           \
    \ maxVal = v\n            maxFreq = 1\n        } else if v == maxVal {\n     \
    \       maxFreq++\n        }\n    }\n    return maxVal >= 0 && maxFreq >= maxVal\n\
    }\n", "    max := -1\n    freq := 0\n    for _, v := range lst {\n        if v\
    \ > 0 {\n            if freq < v {\n                freq = v\n               \
    \ max = v\n            }\n        }\n    }\n    return max\n}\n", "    max :=\
    \ -1\n    freq := 0\n    for _, v := range lst {\n        if v > 0 {\n       \
    \     freq++\n            if freq > max {\n                max = freq\n      \
    \      }\n        }\n    }\n    return max\n}\n", "    max := -1\n    freq :=\
    \ 0\n    for _, v := range lst {\n        if v > 0 {\n            freq++\n   \
    \         if freq > max {\n                max = freq\n            }\n       \
    \ }\n    }\n    return max\n}\n", "    var freq map[int]int\n    for _, v := range\
    \ lst {\n        freq[v]++\n    }\n    for _, v := range freq {\n        if freq[v]\
    \ >= v {\n            return v\n        }\n    }\n    return -1\n}\n", "    max\
    \ := -1\n    for _, v := range lst {\n        if v > max {\n            max =\
    \ v\n        }\n    }\n    return max\n}\n", "    max := -1\n    freq := 0\n \
    \   for _, v := range lst {\n        if v > 0 {\n            freq++\n        \
    \    if freq > max {\n                max = freq\n            }\n        }\n \
    \   }\n    return max\n}\n", "    var maxVal int = -1\n    var maxFreq int = -1\n\
    \    for _, val := range lst {\n        if val > 0 {\n            if maxFreq <\
    \ val {\n                maxFreq = val\n                maxVal = val\n       \
    \     }\n        }\n    }\n    return maxVal\n}\n", "    max := -1\n    freq :=\
    \ 0\n    for _, v := range lst {\n        if v > 0 {\n            freq++\n   \
    \         if freq > max {\n                max = freq\n            }\n       \
    \ }\n    }\n    return max\n}\n", "    var maxFreq int\n    var maxVal int\n \
    \   for _, v := range lst {\n        if v > maxVal {\n            maxVal = v\n\
    \            maxFreq = 1\n        } else if v == maxVal {\n            maxFreq++\n\
    \        }\n    }\n    if maxFreq == 0 {\n        return -1\n    }\n    return\
    \ maxVal\n}\n", "    max := -1\n    freq := 0\n    for _, v := range lst {\n \
    \       if v > 0 {\n            freq++\n            if freq > max {\n        \
    \        max = freq\n            }\n        }\n    }\n    return max\n}\n", " \
    \   max := -1\n    freq := 0\n    for _, v := range lst {\n        if v > 0 {\n\
    \            freq++\n            if freq > max {\n                max = freq\n\
    \            }\n        }\n    }\n    return max\n}\n", "    max := -1\n    freq\
    \ := 0\n    for _, v := range lst {\n        if v > 0 {\n            if freq <\
    \ v {\n                freq = v\n                max = v\n            }\n    \
    \    }\n    }\n    return max\n}\n", "    var maxVal int\n    var maxFreq int\n\
    \    for _, val := range lst {\n        if val > maxVal {\n            maxVal\
    \ = val\n            maxFreq = maxFreq + 1\n        }\n    }\n    if maxFreq >=\
    \ maxVal {\n        return maxVal\n    }\n    return -1\n}\n", "    max := -1\n\
    \    freq := 0\n    for _, v := range lst {\n        if v > 0 {\n            freq++\n\
    \            if freq > max {\n                max = v\n            }\n       \
    \ }\n    }\n    return max\n}\n", "    max := -1\n    for _, v := range lst {\n\
    \        if v > 0 {\n            if max < v {\n                max = v\n     \
    \       }\n        }\n    }\n    return max\n}\n", "    max := -1\n    freq :=\
    \ 0\n    for _, v := range lst {\n        if v > 0 {\n            freq++\n   \
    \         if freq > max {\n                max = v\n            }\n        }\n\
    \    }\n    return max\n}\n", "    max := -1\n    for _, v := range lst {\n  \
    \      if v > 0 {\n            max += 1\n            if max > v {\n          \
    \      max = v\n            }\n        }\n    }\n    return max\n}\n", "    var\
    \ maxVal int = -1\n    var maxFreq int = -1\n    for _, v := range lst {\n   \
    \     if v > 0 {\n            if maxFreq < v {\n                maxFreq = v\n\
    \                maxVal = v\n            }\n        }\n    }\n    return maxVal\n\
    }\n", "    if len(lst) == 0 {\n        return -1\n    }\n    max := lst[0]\n \
    \   for _, v := range lst {\n        if v > max {\n            max = v\n     \
    \   }\n    }\n    return max\n}\n", "    var maxVal int = -1\n    var maxFreq\
    \ int = -1\n    for _, val := range lst {\n        if val > 0 {\n            if\
    \ maxFreq < val {\n                maxFreq = val\n                maxVal = val\n\
    \            }\n        }\n    }\n    return maxVal\n}\n", "    max := -1\n  \
    \  freq := 0\n    for _, v := range lst {\n        if v > 0 {\n            freq++\n\
    \            if freq > max {\n                max = freq\n            }\n    \
    \    }\n    }\n    return max\n}\n", "    max := -1\n    freq := 0\n    for _,\
    \ v := range lst {\n        if v > 0 {\n            freq++\n            if freq\
    \ > max {\n                max = freq\n            }\n        }\n    }\n    return\
    \ max\n}\n", "    max := -1\n    freq := 0\n    for _, v := range lst {\n    \
    \    if v > 0 {\n            freq++\n            if freq > max {\n           \
    \     max = freq\n            }\n        }\n    }\n    return max\n}\n", "   \
    \ max := -1\n    freq := 0\n    for _, v := range lst {\n        if v > 0 {\n\
    \            freq++\n            if freq > max {\n                max = freq\n\
    \            }\n        }\n    }\n    return max\n}\n", "    max := -1\n    freq\
    \ := 0\n    for _, v := range lst {\n        if v > 0 {\n            freq++\n\
    \            if freq > max {\n                max = freq\n            }\n    \
    \    }\n    }\n    return max\n}\n", "    var maxFreq int\n    var maxVal int\n\
    \    for _, val := range lst {\n        if val > maxVal {\n            maxVal\
    \ = val\n            maxFreq = maxFreq + 1\n        }\n    }\n    if maxFreq ==\
    \ 0 {\n        return -1\n    }\n    for _, val := range lst {\n        if val\
    \ == maxVal {\n            if maxFreq >= val {\n                return maxVal\n\
    \            }\n        }\n    }\n    return -1\n}\n", "    if len(lst) == 0 {\n\
    \        return -1\n    }\n    max := lst[0]\n    for _, v := range lst {\n  \
    \      if v > max {\n            max = v\n        }\n    }\n    return max\n}\n",
  "    freq := make(map[int]int)\n    for _, v := range lst {\n        freq[v]++\n\
    \    }\n    for k, v := range freq {\n        if v > 0 {\n            return k\n\
    \        }\n    }\n    return -1\n}\n", "    max := -1\n    freq := 0\n    for\
    \ _, v := range lst {\n        if v > 0 {\n            freq++\n            if\
    \ freq > max {\n                max = freq\n            }\n        }\n    }\n\
    \    return max\n}\n", "    max := -1\n    freq := 0\n    for _, v := range lst\
    \ {\n        if v > 0 {\n            freq++\n            if freq > max {\n   \
    \             max = freq\n            }\n        }\n    }\n    return max\n}\n",
  "    max := -1\n    freq := 0\n    for _, v := range lst {\n        if v > 0 {\n\
    \            if freq < v {\n                freq = v\n                max = v\n\
    \            }\n        }\n    }\n    return max\n}\n", "    max := -1\n    freq\
    \ := 0\n    for _, v := range lst {\n        if v > 0 {\n            if freq <\
    \ v {\n                freq = v\n                max = v\n            }\n    \
    \    }\n    }\n    return max\n}\n", "    max := -1\n    freq := 0\n    for _,\
    \ v := range lst {\n        if v > 0 {\n            freq++\n            if freq\
    \ > max {\n                max = freq\n            }\n        }\n    }\n    return\
    \ max\n}\n", "    max := -1\n    freq := 0\n    for _, v := range lst {\n    \
    \    if v > 0 {\n            freq++\n            if freq > max {\n           \
    \     max = freq\n            }\n        }\n    }\n    return max\n}\n", "   \
    \ max := -1\n    freq := 0\n    for _, v := range lst {\n        if v > 0 {\n\
    \            freq++\n            if freq > max {\n                max = freq\n\
    \            }\n        }\n    }\n    return max\n}\n", "    if len(lst) == 0\
    \ {\n        return -1\n    }\n    max := lst[0]\n    for _, v := range lst {\n\
    \        if v > max {\n            max = v\n        }\n    }\n    return max\n\
    }\n", "    max := -1\n    for _, v := range lst {\n        if v > 0 {\n      \
    \      max = v\n        }\n    }\n    return max\n}\n", "    var maxVal int =\
    \ -1\n    var maxFreq int = -1\n    for _, val := range lst {\n        if val\
    \ > 0 {\n            if maxFreq < val {\n                maxFreq = val\n     \
    \           maxVal = val\n            }\n        }\n    }\n    return maxVal\n\
    }\n", "    max := -1\n    freq := 0\n    for _, v := range lst {\n        if v\
    \ > 0 {\n            if freq < v {\n                freq = v\n               \
    \ max = v\n            }\n        }\n    }\n    return max\n}\n", "    max :=\
    \ -1\n    freq := 0\n    for _, v := range lst {\n        if v > 0 {\n       \
    \     freq++\n            if freq > max {\n                max = freq\n      \
    \      }\n        }\n    }\n    return max\n}\n", "    var freq map[int]int\n\
    \    for _, v := range lst {\n        freq[v]++\n    }\n    for _, v := range\
    \ freq {\n        if freq[v] > 0 {\n            return v\n        }\n    }\n \
    \   return -1\n}\n", "    max := -1\n    freq := 0\n    for _, v := range lst\
    \ {\n        if v > 0 {\n            freq++\n            if freq > max {\n   \
    \             max = freq\n            }\n        }\n    }\n    return max\n}\n",
  "    var maxVal int = -1\n    var maxFreq int = -1\n    for _, val := range lst\
    \ {\n        if val > 0 {\n            if maxFreq < val {\n                maxFreq\
    \ = val\n                maxVal = val\n            }\n        }\n    }\n    return\
    \ maxVal\n}\n", "    max := -1\n    freq := 0\n    for _, v := range lst {\n \
    \       if v > 0 {\n            freq++\n            if freq > max {\n        \
    \        max = freq\n            }\n        }\n    }\n    return max\n}\n", " \
    \   var freq map[int]int\n    for _, v := range lst {\n        freq[v]++\n   \
    \ }\n    for _, v := range freq {\n        if freq[v] > 0 {\n            return\
    \ v\n        }\n    }\n    return -1\n}\n", "    max := -1\n    for _, v := range\
    \ lst {\n        if v > 0 {\n            if v > max {\n                max = v\n\
    \            }\n        }\n    }\n    return max\n}\n", "    freq := make(map[int]int)\n\
    \    for _, v := range lst {\n        freq[v]++\n    }\n    for k, v := range\
    \ freq {\n        if v > 0 {\n            return k\n        }\n    }\n    return\
    \ -1\n}\n", "    if len(lst) == 0 {\n        return -1\n    }\n    max := -1\n\
    \    for _, v := range lst {\n        if v > 0 {\n            max += 1\n     \
    \       if max >= v {\n                return max\n            }\n        }\n\
    \    }\n    return -1\n}\n", "    max := -1\n    freq := 0\n    for _, v := range\
    \ lst {\n        if v > 0 {\n            freq++\n            if freq > max {\n\
    \                max = freq\n            }\n        }\n    }\n    return max\n\
    }\n", "    max := -1\n    freq := 0\n    for _, v := range lst {\n        if v\
    \ > 0 {\n            freq++\n            if freq > max {\n                max\
    \ = freq\n            }\n        }\n    }\n    return max\n}\n", "    max := -1\n\
    \    freq := 0\n    for _, v := range lst {\n        if v > 0 {\n            freq++\n\
    \            if freq > max {\n                max = freq\n            }\n    \
    \    }\n    }\n    return max\n}\n", "    max := -1\n    freq := 0\n    for _,\
    \ v := range lst {\n        if v > 0 {\n            freq++\n            if freq\
    \ > max {\n                max = freq\n            }\n        }\n    }\n    return\
    \ max\n}\n", "    max := -1\n    freq := 0\n    for _, v := range lst {\n    \
    \    if v > 0 {\n            freq++\n            if freq > max {\n           \
    \     max = freq\n            }\n        }\n    }\n    return max\n}\n", "   \
    \ var maxVal int = -1\n    var maxFreq int = -1\n    for _, val := range lst {\n\
    \        if val > 0 {\n            if maxFreq < val {\n                maxFreq\
    \ = val\n                maxVal = val\n            }\n        }\n    }\n    return\
    \ maxVal\n}\n", "    max := -1\n    freq := 0\n    for _, v := range lst {\n \
    \       if v > 0 {\n            if freq < v {\n                freq = v\n    \
    \            max = v\n            }\n        }\n    }\n    return max\n}\n", " \
    \   max := -1\n    freq := 0\n    for _, v := range lst {\n        if v > 0 {\n\
    \            freq++\n            if freq > max {\n                max = freq\n\
    \            }\n        }\n    }\n    return max\n}\n", "    max := -1\n    freq\
    \ := 0\n    for _, v := range lst {\n        if v > 0 {\n            freq++\n\
    \            if freq > max {\n                max = freq\n            }\n    \
    \    }\n    }\n    return max\n}\n", "    var maxVal int = -1\n    var maxFreq\
    \ int = -1\n    for _, val := range lst {\n        if val > 0 {\n            if\
    \ maxFreq < val {\n                maxFreq = val\n                maxVal = val\n\
    \            }\n        }\n    }\n    return maxVal\n}\n", "    max := -1\n  \
    \  freq := 0\n    for _, v := range lst {\n        if v > 0 {\n            freq++\n\
    \            if freq > max {\n                max = freq\n            }\n    \
    \    }\n    }\n    return max\n}\n", "    max := -1\n    freq := 0\n    for _,\
    \ v := range lst {\n        if v > 0 {\n            freq++\n            if freq\
    \ > max {\n                max = freq\n            }\n        }\n    }\n    return\
    \ max\n}\n", "    max := -1\n    max := -1\n    for _, v := range lst {\n    \
    \    if v > 0 {\n            max += 1\n            if max >= v {\n           \
    \     return max\n            }\n        }\n    }\n    return -1\n}\n", "    max\
    \ := -1\n    freq := 0\n    for _, v := range lst {\n        if v > 0 {\n    \
    \        freq++\n            if freq > max {\n                max = freq\n   \
    \         }\n        }\n    }\n    return max\n}\n", "    var maxVal int = -1\n\
    \    var maxFreq int = -1\n    for _, val := range lst {\n        if val > 0 {\n\
    \            if maxFreq < val {\n                maxFreq = val\n             \
    \   maxVal = val\n            }\n        }\n    }\n    return maxVal\n}\n", " \
    \   max := -1\n    freq := 0\n    for _, v := range lst {\n        if v > 0 {\n\
    \            freq++\n            if freq > max {\n                max = freq\n\
    \            }\n        }\n    }\n    return max\n}\n", "    max := -1\n    freq\
    \ := 0\n    for _, v := range lst {\n        if v > 0 {\n            freq++\n\
    \            if freq > max {\n                max = freq\n            }\n    \
    \    }\n    }\n    return max\n}\n", "    max := -1\n    freq := 0\n    for _,\
    \ v := range lst {\n        if v > 0 {\n            freq++\n            if freq\
    \ > max {\n                max = freq\n            }\n        }\n    }\n    return\
    \ max\n}\n", "    max := -1\n    max := -1\n    for _, v := range lst {\n    \
    \    if v > 0 {\n            if v > max {\n                max = v\n         \
    \   }\n        }\n    }\n    return max\n}\n", "    max := -1\n    freq := 0\n\
    \    for _, v := range lst {\n        if v > 0 {\n            if freq < v {\n\
    \                freq = v\n                max = v\n            }\n        }\n\
    \    }\n    return max\n}\n", "    max := -1\n    for _, v := range lst {\n  \
    \      if v > 0 {\n            max += 1\n            if max >= v {\n         \
    \       return max\n            }\n        }\n    }\n    return -1\n}\n", "  \
    \  max := -1\n    freq := 0\n    for _, v := range lst {\n        if v > 0 {\n\
    \            freq++\n            if freq > max {\n                max = freq\n\
    \            }\n        }\n    }\n    return max\n}\n", "    var maxFreq int\n\
    \    var maxVal int\n    for _, val := range lst {\n        if val > maxVal {\n\
    \            maxFreq = maxVal\n            maxVal = val\n        } else if val\
    \ == maxVal {\n            maxFreq++\n        }\n    }\n    if maxFreq == 0 {\n\
    \        return -1\n    }\n    return maxVal\n}\n", "    max := -1\n    freq :=\
    \ 0\n    for _, v := range lst {\n        if v > 0 {\n            freq++\n   \
    \         if freq > max {\n                max = freq\n            }\n       \
    \ }\n    }\n    return max\n}\n", "    max := -1\n    max := 0\n    for _, v :=\
    \ range lst {\n        if v > 0 {\n            if v > max {\n                max\
    \ = v\n            }\n        }\n    }\n    return max\n}\n", "    max := -1\n\
    \    freq := 0\n    for _, v := range lst {\n        if v > 0 {\n            freq++\n\
    \            if freq > max {\n                max = freq\n            }\n    \
    \    }\n    }\n    return max\n}\n", "    max := -1\n    max := -1\n    for _,\
    \ v := range lst {\n        if v > 0 {\n            if v > max {\n           \
    \     max = v\n            }\n        }\n    }\n    return max\n}\n", "    max\
    \ := -1\n    freq := 0\n    for _, v := range lst {\n        if v > 0 {\n    \
    \        freq++\n            if freq > max {\n                max = freq\n   \
    \         }\n        }\n    }\n    return max\n}\n", "    var freq map[int]int\n\
    \    for _, v := range lst {\n        freq[v]++\n    }\n    for _, v := range\
    \ freq {\n        if freq[v] >= v {\n            return v\n        }\n    }\n\
    \    return -1\n}\n", "    var maxVal int = -1\n    var maxFreq int = -1\n   \
    \ for _, v := range lst {\n        if v > maxVal {\n            maxVal = v\n \
    \           maxFreq = 1\n        } else if v == maxVal {\n            maxFreq++\n\
    \        }\n    }\n    return maxVal if maxFreq >= maxVal else -1\n}\n", "   \
    \ max := -1\n    freq := 0\n    for _, v := range lst {\n        if v > 0 {\n\
    \            freq++\n            if freq > max {\n                max = freq\n\
    \            }\n        }\n    }\n    return max\n}\n", "    var maxFreq int\n\
    \    var maxVal int\n    for _, val := range lst {\n        if val > maxVal {\n\
    \            maxFreq = maxVal\n            maxVal = val\n        } else if val\
    \ == maxVal {\n            maxFreq++\n        }\n    }\n    if maxFreq == 0 {\n\
    \        return -1\n    }\n    return maxVal\n}\n", "    var maxVal int = -1\n\
    \    var maxFreq int = -1\n    for _, val := range lst {\n        if val > 0 {\n\
    \            if maxFreq < val {\n                maxFreq = val\n             \
    \   maxVal = val\n            }\n        }\n    }\n    return maxVal\n}\n", " \
    \   max := -1\n    freq := 0\n    for _, v := range lst {\n        if v > 0 {\n\
    \            freq++\n            if freq > max {\n                max = v\n  \
    \          }\n        }\n    }\n    return max\n}\n", "    if len(lst) == 0 {\n\
    \        return -1\n    }\n    max := lst[0]\n    for _, v := range lst {\n  \
    \      if v > max {\n            max = v\n        }\n    }\n    return max\n}\n",
  "    max := -1\n    freq := 0\n    for _, v := range lst {\n        if v > 0 {\n\
    \            freq++\n            if freq > max {\n                max = freq\n\
    \            }\n        }\n    }\n    return max\n}\n", "    max := -1\n    freq\
    \ := 0\n    for _, v := range lst {\n        if v > 0 {\n            freq++\n\
    \            if freq > max {\n                max = freq\n            }\n    \
    \    }\n    }\n    return max\n}\n", "    max := -1\n    freq := 0\n    for _,\
    \ v := range lst {\n        if v > 0 {\n            freq++\n            if freq\
    \ > max {\n                max = freq\n            }\n        }\n    }\n    return\
    \ max\n}\n", "    var maxVal int = -1\n    var maxFreq int = -1\n    for _, v\
    \ := range lst {\n        if v > maxVal {\n            maxVal = v\n          \
    \  maxFreq = 1\n        } else if v == maxVal {\n            maxFreq++\n     \
    \   }\n    }\n    if maxFreq > maxVal {\n        return -1\n    }\n    return\
    \ maxVal\n}\n", "    max := -1\n    freq := 0\n    for _, v := range lst {\n \
    \       if v > 0 {\n            freq++\n            if freq > max {\n        \
    \        max = freq\n            }\n        }\n    }\n    return max\n}\n", " \
    \   max := -1\n    freq := 0\n    for _, v := range lst {\n        if v > 0 {\n\
    \            freq++\n            if freq > max {\n                max = freq\n\
    \            }\n        }\n    }\n    return max\n}\n", "    var maxVal int =\
    \ -1\n    var maxFreq int = -1\n    for _, val := range lst {\n        if val\
    \ > 0 {\n            if maxFreq < val {\n                maxFreq = val\n     \
    \           maxVal = val\n            }\n        }\n    }\n    return maxVal\n\
    }\n", "    var maxFreq int\n    var maxVal int\n    for _, val := range lst {\n\
    \        if val > maxVal {\n            maxVal = val\n            maxFreq = maxFreq\
    \ + 1\n        }\n    }\n    if maxFreq >= maxVal {\n        return maxVal\n \
    \   }\n    return -1\n}\n", "    var maxVal int = -1\n    var maxFreq int = -1\n\
    \    for _, val := range lst {\n        if val > 0 {\n            if maxFreq <\
    \ val {\n                maxFreq = val\n                maxVal = val\n       \
    \     }\n        }\n    }\n    return maxVal\n}\n", "    max := -1\n    for _,\
    \ v := range lst {\n        if v > max {\n            max = v\n        }\n   \
    \ }\n    return max\n}\n", "    max := -1\n    freq := 0\n    for _, v := range\
    \ lst {\n        if v > 0 {\n            freq++\n            if freq > max {\n\
    \                max = freq\n            }\n        }\n    }\n    return max\n\
    }\n", "    var maxVal int = -1\n    var maxFreq int = -1\n    for _, val := range\
    \ lst {\n        if val > 0 {\n            if maxFreq < val {\n              \
    \  maxFreq = val\n                maxVal = val\n            }\n        }\n   \
    \ }\n    return maxVal\n}\n", "    var max int = -1\n    var freq int = 0\n  \
    \  for _, v := range lst {\n        freq = freq + v\n        if freq > max {\n\
    \            max = freq\n        }\n    }\n    if max > 0 {\n        return max\n\
    \    }\n    return -1\n}\n", "    max := -1\n    freq := 0\n    for _, v := range\
    \ lst {\n        if v > 0 {\n            freq++\n            if freq > max {\n\
    \                max = freq\n            }\n        }\n    }\n    return max\n\
    }\n", "    var maxVal int = -1\n    var maxFreq int = -1\n    for _, v := range\
    \ lst {\n        if v > 0 {\n            if maxFreq < v {\n                maxFreq\
    \ = v\n                maxVal = v\n            }\n        }\n    }\n    return\
    \ maxVal\n}\n", "    var maxVal int = -1\n    var maxFreq int = -1\n    for _,\
    \ val := range lst {\n        if val > 0 {\n            if maxFreq < val {\n \
    \               maxFreq = val\n                maxVal = val\n            }\n \
    \       }\n    }\n    return maxVal\n}\n", "    max := -1\n    freq := 0\n   \
    \ for _, v := range lst {\n        if v > 0 {\n            freq++\n          \
    \  if freq > max {\n                max = freq\n            }\n        }\n   \
    \ }\n    return max\n}\n", "    var maxFreq int\n    var maxVal int\n    for _,\
    \ val := range lst {\n        if val > maxVal {\n            maxVal = val\n  \
    \          maxFreq = maxFreq + 1\n        }\n    }\n    if maxFreq > maxVal {\n\
    \        return -1\n    }\n    return maxVal\n}\n", "    var maxFreq int\n   \
    \ var maxVal int\n    for _, val := range lst {\n        if val > maxVal {\n \
    \           maxVal = val\n            maxFreq = maxFreq + 1\n        }\n    }\n\
    \    if maxFreq == 0 {\n        return -1\n    }\n    for _, val := range lst\
    \ {\n        if val == maxVal {\n            if maxFreq >= val {\n           \
    \     return maxVal\n            }\n        }\n    }\n    return -1\n}\n", " \
    \   max := -1\n    freq := 0\n    for _, v := range lst {\n        if v > 0 {\n\
    \            freq++\n            if freq > max {\n                max = freq\n\
    \            }\n        }\n    }\n    return max\n}\n", "    max := -1\n    freq\
    \ := 0\n    for _, v := range lst {\n        if v > 0 {\n            freq++\n\
    \            if freq > max {\n                max = v\n            }\n       \
    \ }\n    }\n    return max\n}\n", "    max := -1\n    freq := 0\n    for _, v\
    \ := range lst {\n        if v > 0 {\n            freq++\n            if freq\
    \ > max {\n                max = freq\n            }\n        }\n    }\n    return\
    \ max\n}\n", "    max := -1\n    freq := 0\n    for _, v := range lst {\n    \
    \    if v > 0 {\n            freq++\n            if freq > max {\n           \
    \     max = freq\n            }\n        }\n    }\n    return max\n}\n", "   \
    \ var maxVal int = -1\n    var maxFreq int = -1\n    for _, val := range lst {\n\
    \        if val > 0 {\n            if maxFreq < val {\n                maxFreq\
    \ = val\n                maxVal = val\n            }\n        }\n    }\n    return\
    \ maxVal\n}\n", "    var maxfreq int\n    var maxval int\n    for _, val := range\
    \ lst {\n        if maxfreq < val {\n            maxfreq = val\n            maxval\
    \ = val\n        }\n    }\n    if maxfreq == 0 {\n        return -1\n    }\n \
    \   for _, val := range lst {\n        if val == maxval {\n            maxfreq\
    \ = maxfreq - 1\n        }\n    }\n    return maxval\n}\n", "    max := -1\n \
    \   freq := 0\n    for _, v := range lst {\n        if v > 0 {\n            freq++\n\
    \            if freq > max {\n                max = v\n            }\n       \
    \ }\n    }\n    return max\n}\n", "    var maxVal int = -1\n    var maxFreq int\
    \ = -1\n    for _, val := range lst {\n        if val > 0 {\n            if maxFreq\
    \ < val {\n                maxFreq = val\n                maxVal = val\n     \
    \       }\n        }\n    }\n    return maxVal\n}\n", "    max := -1\n    freq\
    \ := 0\n    for _, v := range lst {\n        if v > 0 {\n            freq++\n\
    \            if freq > max {\n                max = freq\n            }\n    \
    \    }\n    }\n    return max\n}\n", "    var freq map[int]int\n    for _, v :=\
    \ range lst {\n        freq[v]++\n    }\n    for k, v := range freq {\n      \
    \  if v > 0 {\n            return k\n        }\n    }\n    return -1\n}\n", " \
    \   var freq map[int]int\n    for _, v := range lst {\n        freq[v]++\n   \
    \ }\n    for _, v := range freq {\n        if freq[v] >= v {\n            return\
    \ v\n        }\n    }\n    return -1\n}\n", "    max := -1\n    freq := 0\n  \
    \  for _, v := range lst {\n        if v > 0 {\n            freq++\n         \
    \   if freq > max {\n                max = v\n            }\n        }\n    }\n\
    \    return max\n}\n", "    max := -1\n    freq := 0\n    for _, v := range lst\
    \ {\n        if v > 0 {\n            freq++\n            if freq > max {\n   \
    \             max = freq\n            }\n        }\n    }\n    return max\n}\n",
  "    var freq int\n    var max int\n    for _, v := range lst {\n        if v >\
    \ 0 {\n            freq++\n            if freq > max {\n                max =\
    \ freq\n            }\n        }\n    }\n    if max < 1 {\n        return -1\n\
    \    }\n    return max\n}\n", "    var maxVal int = -1\n    var maxFreq int =\
    \ -1\n    for _, val := range lst {\n        if val > 0 {\n            if maxFreq\
    \ < val {\n                maxFreq = val\n                maxVal = val\n     \
    \       }\n        }\n    }\n    return maxVal\n}\n", "    max := -1\n    freq\
    \ := 0\n    for _, v := range lst {\n        if v > 0 {\n            freq++\n\
    \            if freq > max {\n                max = freq\n            }\n    \
    \    }\n    }\n    return max\n}\n", "    max := -1\n    freq := 0\n    for _,\
    \ v := range lst {\n        if v > 0 {\n            freq++\n            if freq\
    \ > max {\n                max = v\n            }\n        }\n    }\n    return\
    \ max\n}\n", "    max := -1\n    freq := 0\n    for _, v := range lst {\n    \
    \    if v > 0 {\n            if freq < v {\n                freq = v\n       \
    \         max = v\n            }\n        }\n    }\n    return max\n}\n", "  \
    \  max := -1\n    max := -1\n    for _, v := range lst {\n        if v > 0 {\n\
    \            if v > max {\n                max = v\n            }\n        }\n\
    \    }\n    return max\n}\n", "    var maxVal int = -1\n    var maxFreq int =\
    \ -1\n    for _, v := range lst {\n        if v > 0 {\n            if maxFreq\
    \ < v {\n                maxFreq = v\n                maxVal = v\n           \
    \ }\n        }\n    }\n    return maxVal\n}\n", "    max := -1\n    freq := 0\n\
    \    for _, v := range lst {\n        if v > 0 {\n            freq++\n       \
    \     if freq > max {\n                max = freq\n            }\n        }\n\
    \    }\n    return max\n}\n", "    max := -1\n    for _, v := range lst {\n  \
    \      if v > 0 {\n            if max < v {\n                max = v\n       \
    \     }\n        }\n    }\n    return max\n}\n", "    max := -1\n    freq := 0\n\
    \    for _, v := range lst {\n        if v > 0 {\n            if freq < v {\n\
    \                freq = v\n                max = v\n            }\n        }\n\
    \    }\n    return max\n}\n", "    max := -1\n    freq := 0\n    for _, v := range\
    \ lst {\n        if v > 0 {\n            if freq < v {\n                freq =\
    \ v\n                max = v\n            }\n        }\n    }\n    return max\n\
    }\n", "    max := -1\n    freq := 0\n    for _, v := range lst {\n        if v\
    \ > 0 {\n            freq++\n            if freq > max {\n                max\
    \ = v\n            }\n        }\n    }\n    return max\n}\n", "    max := -1\n\
    \    freq := 0\n    for _, v := range lst {\n        if v > 0 {\n            freq++\n\
    \            if freq > max {\n                max = v\n            }\n       \
    \ }\n    }\n    return max\n}\n", "    max := -1\n    freq := 0\n    for _, v\
    \ := range lst {\n        if v > 0 {\n            if freq < v {\n            \
    \    freq = v\n                max = v\n            }\n        }\n    }\n    return\
    \ max\n}\n", "    max := -1\n    freq := 0\n    for _, v := range lst {\n    \
    \    if v > 0 {\n            freq++\n            if freq > max {\n           \
    \     max = freq\n            }\n        }\n    }\n    return max\n}\n", "   \
    \ max := -1\n    max := -1\n    for _, v := range lst {\n        if v > 0 {\n\
    \            max := v\n        }\n    }\n    return max\n}\n", "    max := -1\n\
    \    freq := 0\n    for _, v := range lst {\n        if v > 0 {\n            freq++\n\
    \            if freq > max {\n                max = freq\n            }\n    \
    \    }\n    }\n    return max\n}\n", "    max := -1\n    freq := 0\n    for _,\
    \ v := range lst {\n        if v > 0 {\n            freq++\n            if freq\
    \ > max {\n                max = freq\n            }\n        }\n    }\n    return\
    \ max\n}\n", "    max := -1\n    freq := 0\n    for _, v := range lst {\n    \
    \    if v > 0 {\n            freq++\n            if freq > max {\n           \
    \     max = freq\n            }\n        }\n    }\n    return max\n}\n", "   \
    \ max := -1\n    max := -1\n    for _, v := range lst {\n        if v > 0 {\n\
    \            if v > max {\n                max = v\n            }\n        }\n\
    \    }\n    return max\n}\n", "    var freq map[int]int\n    for _, v := range\
    \ lst {\n        freq[v]++\n    }\n    for k, v := range freq {\n        if v\
    \ > 0 {\n            return k\n        }\n    }\n    return -1\n}\n", "    max\
    \ := -1\n    max := -1\n    for _, v := range lst {\n        if v > 0 {\n    \
    \        freq := 0\n            for _, v2 := range lst {\n                if v\
    \ == v2 {\n                    freq++\n                }\n            }\n    \
    \        if freq > max {\n                max = freq\n            }\n        }\n\
    \    }\n    return max\n}\n", "    max := -1\n    freq := 0\n    for _, v := range\
    \ lst {\n        if v > 0 {\n            freq++\n            if freq > max {\n\
    \                max = freq\n            }\n        }\n    }\n    return max\n\
    }\n", "    max := -1\n    freq := 0\n    for _, v := range lst {\n        if v\
    \ > 0 {\n            freq++\n            if freq > max {\n                max\
    \ = freq\n            }\n        }\n    }\n    return max\n}\n", "    max := -1\n\
    \    for _, v := range lst {\n        if v > 0 {\n            if max < v {\n \
    \               max = v\n            }\n        }\n    }\n    return max\n}\n",
  "    max := -1\n    freq := 0\n    for _, v := range lst {\n        if v > 0 {\n\
    \            if freq < v {\n                freq = v\n                max = v\n\
    \            }\n        }\n    }\n    return max\n}\n", "    var max int = -1\n\
    \    var freq int = 0\n    for _, v := range lst {\n        if v > 0 {\n     \
    \       freq++\n            if v > max {\n                max = v\n          \
    \  }\n        }\n    }\n    if freq > max {\n        return -1\n    }\n    return\
    \ max\n}\n", "    if len(lst) == 0 {\n        return -1\n    }\n    max := lst[0]\n\
    \    for _, v := range lst {\n        if v > max {\n            max = v\n    \
    \    }\n    }\n    return max\n}\n", "    if len(lst) == 0 {\n        return -1\n\
    \    }\n    max := lst[0]\n    for _, v := range lst {\n        if v > max {\n\
    \            max = v\n        }\n    }\n    return max\n}\n", "    max := -1\n\
    \    freq := 0\n    for _, v := range lst {\n        if v > 0 {\n            freq++\n\
    \            if freq > max {\n                max = freq\n            }\n    \
    \    }\n    }\n    return max\n}\n", "    max := -1\n    freq := 0\n    for _,\
    \ v := range lst {\n        if v > 0 {\n            freq++\n            if freq\
    \ > max {\n                max = freq\n            }\n        }\n    }\n    return\
    \ max\n}\n", "    max := -1\n    freq := 0\n    for _, v := range lst {\n    \
    \    if v > 0 {\n            freq++\n            if freq > max {\n           \
    \     max = freq\n            }\n        }\n    }\n    return max\n}\n", "   \
    \ max := -1\n    freq := 0\n    for _, v := range lst {\n        if v > 0 {\n\
    \            freq++\n            if freq > max {\n                max = freq\n\
    \            }\n        }\n    }\n    return max\n}\n", "    max := -1\n    freq\
    \ := 0\n    for _, v := range lst {\n        if v > 0 {\n            freq++\n\
    \            if freq > max {\n                max = freq\n            }\n    \
    \    }\n    }\n    return max\n}\n", "    if len(lst) == 0 {\n        return -1\n\
    \    }\n    max := lst[0]\n    for _, v := range lst {\n        if v > max {\n\
    \            max = v\n        }\n    }\n    return max\n}\n", "    var maxVal\
    \ int = -1\n    var maxFreq int = -1\n    for _, val := range lst {\n        if\
    \ val > 0 {\n            if maxFreq < val {\n                maxFreq = val\n \
    \               maxVal = val\n            }\n        }\n    }\n    return maxVal\n\
    }\n", "    var maxFreq int\n    var maxVal int\n    for _, val := range lst {\n\
    \        if val > 0 {\n            if maxFreq < val {\n                maxFreq\
    \ = val\n                maxVal = val\n            }\n        }\n    }\n    return\
    \ maxVal\n}\n", "    max := -1\n    freq := 0\n    for _, v := range lst {\n \
    \       if v > 0 {\n            freq++\n            if freq > max {\n        \
    \        max = freq\n            }\n        }\n    }\n    return max\n}\n", " \
    \   max := -1\n    for _, v := range lst {\n        if v > 0 {\n            if\
    \ v > max {\n                max = v\n            }\n        }\n    }\n    return\
    \ max\n}\n", "    var maxFreq int\n    var maxVal int\n    for _, val := range\
    \ lst {\n        if val > maxVal {\n            maxFreq = maxVal\n           \
    \ maxVal = val\n        } else if val == maxVal {\n            maxFreq++\n   \
    \     }\n    }\n    if maxFreq == 0 {\n        return -1\n    }\n    return maxVal\n\
    }\n", "    var freq map[int]int\n    for _, v := range lst {\n        freq[v]++\n\
    \    }\n    for _, v := range freq {\n        if freq[v] > 0 {\n            return\
    \ v\n        }\n    }\n    return -1\n}\n", "    max := -1\n    freq := 0\n  \
    \  for _, v := range lst {\n        if v > 0 {\n            freq++\n         \
    \   if freq > max {\n                max = freq\n            }\n        }\n  \
    \  }\n    return max\n}\n", "    max := -1\n    freq := 0\n    for _, v := range\
    \ lst {\n        if v > 0 {\n            freq++\n            if freq > max {\n\
    \                max = v\n            }\n        }\n    }\n    return max\n}\n",
  "    max := -1\n    for _, v := range lst {\n        if v > 0 {\n            if\
    \ v > max {\n                max = v\n            }\n        }\n    }\n    return\
    \ max\n}\n", "    max := -1\n    freq := 0\n    for _, v := range lst {\n    \
    \    if v > 0 {\n            freq++\n            if freq > max {\n           \
    \     max = freq\n            }\n        }\n    }\n    return max\n}\n", "   \
    \ var freq map[int]int\n    for _, v := range lst {\n        freq[v]++\n    }\n\
    \    for k, v := range freq {\n        if v > 0 {\n            return k\n    \
    \    }\n    }\n    return -1\n}\n", "    var maxVal int = -1\n    var maxFreq\
    \ int = -1\n    for _, v := range lst {\n        if v > 0 {\n            if maxFreq\
    \ < v {\n                maxFreq = v\n                maxVal = v\n           \
    \ }\n        }\n    }\n    return maxVal\n}\n", "    var freq map[int]int\n  \
    \  for _, v := range lst {\n        freq[v]++\n    }\n    for k, v := range freq\
    \ {\n        if freq[k] > 0 {\n            return k\n        }\n    }\n    return\
    \ -1\n}\n", "    var maxVal int = -1\n    var maxFreq int = -1\n    for _, val\
    \ := range lst {\n        if val > 0 {\n            if maxFreq < val {\n     \
    \           maxFreq = val\n                maxVal = val\n            }\n     \
    \   }\n    }\n    return maxVal\n}\n", "    max := -1\n    freq := 0\n    for\
    \ _, v := range lst {\n        if v > 0 {\n            freq++\n            if\
    \ freq > max {\n                max = freq\n            }\n        }\n    }\n\
    \    return max\n}\n", "    var maxVal int = -1\n    var maxFreq int = -1\n  \
    \  for _, val := range lst {\n        if val > 0 {\n            if maxFreq < val\
    \ {\n                maxFreq = val\n                maxVal = val\n           \
    \ }\n        }\n    }\n    return maxVal\n}\n", "    max := -1\n    freq := 0\n\
    \    for _, v := range lst {\n        if v > 0 {\n            freq++\n       \
    \     if freq > max {\n                max = freq\n            }\n        }\n\
    \    }\n    return max\n}\n", "    var max int\n    var freq int\n    for _, v\
    \ := range lst {\n        if v > 0 {\n            freq++\n            if freq\
    \ > max {\n                max = v\n            }\n        }\n    }\n    if max\
    \ < 0 {\n        return -1\n    }\n    return max\n}\n", "    max := -1\n    freq\
    \ := 0\n    for _, v := range lst {\n        if v > 0 {\n            freq++\n\
    \            if freq > max {\n                max = freq\n            }\n    \
    \    }\n    }\n    return max\n}\n"]
stop_tokens:
- "\nfunc"
- struct
- "\n// "

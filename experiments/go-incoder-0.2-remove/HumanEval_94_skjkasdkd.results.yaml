language: go_test.go
name: HumanEval_94_skjkasdkd
results:
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v%max == 0 {\n            sum += int(v / max)\n        }\n    }\n \
    \   return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=10)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpsvtsrp2k_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=13)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpsvtsrp2k_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=3)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpsvtsrp2k_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=19)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpsvtsrp2k_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=10)', got '%!s(int=1)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    max := lst[0]\n    for _, v := range lst {\n        if\
    \ v > max {\n            max = v\n        }\n    }\n    sum := 0\n    for _, v\
    \ := range lst {\n        if v%max == 0 {\n            sum += int(v / max)\n \
    \       }\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate\
    \ := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpqjqmmbpm_test.go:13:9: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var max int\n    var sum int\n    for _, v := range lst {\n        if\
    \ v > max {\n            max = v\n        }\n    }\n    for _, v := range lst\
    \ {\n        if v%max == 0 {\n            sum += v%max\n        }\n    }\n   \
    \ return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpsk6gxj1j_test.go:48: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpsk6gxj1j_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpsk6gxj1j_test.go:48: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpsk6gxj1j_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpsk6gxj1j_test.go:48: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpsk6gxj1j_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpsk6gxj1j_test.go:48: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpsk6gxj1j_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpsk6gxj1j_test.go:48: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var maxPrime int\n    for _, v := range lst {\n        if v%maxPrime\
    \ == 0 {\n            maxPrime = v\n        }\n    }\n    return maxPrime\n}\n\
    \nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\npanic: runtime error: integer divide by\
    \ zero [recovered]\n\tpanic: runtime error: integer divide by zero\n\ngoroutine\
    \ 6 [running]:\ntesting.tRunner.func1.2({0x5038a0, 0x5f29a0})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x5038a0, 0x5f29a0})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.skjkasdkd(...)\n\t/tmp/tmp9zfeya8k_test.go:14\n\
    command-line-arguments_test.TestSkjkasdkd(0xc0000da340?)\n\t/tmp/tmp9zfeya8k_test.go:28\
    \ +0xb8f\ntesting.tRunner(0xc0000da340, 0x528f40)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    max := lst[0]\n    for _, v := range lst {\n        if\
    \ v > max {\n            max = v\n        }\n    }\n    sum := 0\n    for _, v\
    \ := range lst {\n        if v == max {\n            sum += int(v)\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate :=\
    \ skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpdffm8zpi_test.go:13:9: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v%max == 0 {\n            sum += int(v / max)\n        }\n    }\n \
    \   return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=10)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpsvtsrp2k_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=13)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpsvtsrp2k_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=3)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpsvtsrp2k_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=19)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpsvtsrp2k_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=10)', got '%!s(int=1)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var maxPrime int\n    var sumDigits int\n    for _, v := range lst {\n\
    \        if v > maxPrime {\n            maxPrime = v\n        }\n    }\n    for\
    \ _, v := range lst {\n        if v%maxPrime == 0 {\n            sumDigits +=\
    \ v%10\n        }\n    }\n    return sumDigits\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp0xnfpb57_test.go:48: expected '%!s(int=10)', got '%!s(int=4)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmp0xnfpb57_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=7)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmp0xnfpb57_test.go:48: expected '%!s(int=13)', got '%!s(int=8)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmp0xnfpb57_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=4)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmp0xnfpb57_test.go:48: expected '%!s(int=3)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmp0xnfpb57_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmp0xnfpb57_test.go:48: expected '%!s(int=19)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmp0xnfpb57_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=6)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmp0xnfpb57_test.go:48: expected '%!s(int=10)', got '%!s(int=2)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v%max == 0 {\n            sum += int(v / max)\n        }\n    }\n \
    \   return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=10)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpsvtsrp2k_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=13)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpsvtsrp2k_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=3)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpsvtsrp2k_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=19)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpsvtsrp2k_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=10)', got '%!s(int=1)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v%max == 0 {\n            sum += v%max\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpvsp68gfg_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpvsp68gfg_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpvsp68gfg_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpvsp68gfg_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    max := lst[0]\n    for _, v := range lst {\n        if\
    \ v > max {\n            max = v\n        }\n    }\n    return max\n}\n\nfunc\
    \ TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp2nwv_9v5_test.go:13:9: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var maxPrime int = 0\n    var sum int = 0\n    for _, v := range lst\
    \ {\n        if v > maxPrime {\n            maxPrime = v\n        }\n    }\n \
    \   for _, v := range lst {\n        if v%maxPrime == 0 {\n            sum +=\
    \ v%maxPrime\n        }\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp5aaaz17o_test.go:48: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmp5aaaz17o_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmp5aaaz17o_test.go:48: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmp5aaaz17o_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmp5aaaz17o_test.go:48: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmp5aaaz17o_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmp5aaaz17o_test.go:48: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmp5aaaz17o_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmp5aaaz17o_test.go:48: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var maxPrime int\n    var sumDigits int\n    for _, v := range lst {\n\
    \        if v%2 == 0 {\n            maxPrime = maxPrime + 1\n        }\n     \
    \   for i := 3; i <= v/2; i++ {\n            if v%i == 0 {\n                maxPrime\
    \ = maxPrime + 1\n                break\n            }\n        }\n        sumDigits\
    \ = sumDigits + int(v%10)\n    }\n    return sumDigits\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpcoukugp2_test.go:50: expected '%!s(int=10)', got '%!s(int=69)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpcoukugp2_test.go:50:\
    \ expected '%!s(int=25)', got '%!s(int=43)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpcoukugp2_test.go:50: expected '%!s(int=13)', got '%!s(int=59)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpcoukugp2_test.go:50:\
    \ expected '%!s(int=11)', got '%!s(int=44)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpcoukugp2_test.go:50: expected '%!s(int=3)', got '%!s(int=8)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpcoukugp2_test.go:50:\
    \ expected '%!s(int=7)', got '%!s(int=19)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpcoukugp2_test.go:50: expected '%!s(int=19)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpcoukugp2_test.go:50:\
    \ expected '%!s(int=19)', got '%!s(int=21)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpcoukugp2_test.go:50: expected '%!s(int=10)', got '%!s(int=16)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    max := lst[0]\n    for _, v := range lst {\n        if\
    \ v > max {\n            max = v\n        }\n    }\n    for _, v := range lst\
    \ {\n        if v%max == 0 {\n            max += v\n        }\n    }\n    return\
    \ max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp460wd0z0_test.go:13:9: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    max := lst[0]\n    for _, v := range lst {\n        if\
    \ v > max {\n            max = v\n        }\n    }\n    for _, v := range lst\
    \ {\n        if v%max == 0 {\n            max += v\n        }\n    }\n    return\
    \ max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp460wd0z0_test.go:13:9: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    max := lst[0]\n    for _, v := range lst {\n        if\
    \ v > max {\n            max = v\n        }\n    }\n    return max\n}\n\nfunc\
    \ TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp2nwv_9v5_test.go:13:9: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var max int\n    var sum int\n    for _, v := range lst {\n        if\
    \ v > max {\n            max = v\n        }\n    }\n    for _, v := range lst\
    \ {\n        if v%max == 0 {\n            sum += int(v / max)\n        }\n   \
    \ }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpqlsgj99a_test.go:48: expected '%!s(int=10)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpqlsgj99a_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpqlsgj99a_test.go:48: expected '%!s(int=13)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpqlsgj99a_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpqlsgj99a_test.go:48: expected '%!s(int=3)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpqlsgj99a_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpqlsgj99a_test.go:48: expected '%!s(int=19)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpqlsgj99a_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpqlsgj99a_test.go:48: expected '%!s(int=10)', got '%!s(int=1)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v%max == 0 {\n            sum += int(v / max)\n        }\n    }\n \
    \   return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=10)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpsvtsrp2k_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=13)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpsvtsrp2k_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=3)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpsvtsrp2k_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=19)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpsvtsrp2k_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=10)', got '%!s(int=1)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var maxPrime int\n    var sum int\n    for _, v := range lst {\n    \
    \    if v%2 == 0 {\n            continue\n        }\n        for i := 3; i <=\
    \ v/2; i++ {\n            if v%i == 0 {\n                break\n            }\n\
    \        }\n        if i == v/2 {\n            maxPrime = v\n            sum +=\
    \ v\n        }\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n\
    \  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpj_sufioa_test.go:12:9: maxPrime declared but not used

    /tmp/tmpj_sufioa_test.go:23:12: undefined: i

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var maxPrime int = 0\n    for _, v := range lst {\n        if v%maxPrime\
    \ == 0 {\n            maxPrime = v\n        }\n    }\n    return maxPrime\n}\n\
    \nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\npanic: runtime error: integer divide by\
    \ zero [recovered]\n\tpanic: runtime error: integer divide by zero\n\ngoroutine\
    \ 6 [running]:\ntesting.tRunner.func1.2({0x5038a0, 0x5f29a0})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x5038a0, 0x5f29a0})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.skjkasdkd(...)\n\t/tmp/tmpwasgtws6_test.go:14\n\
    command-line-arguments_test.TestSkjkasdkd(0xc0000cc4e0?)\n\t/tmp/tmpwasgtws6_test.go:28\
    \ +0xb8f\ntesting.tRunner(0xc0000cc4e0, 0x528f40)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    for _, v := range lst {\n        if v%max\
    \ == 0 {\n            max += v\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp6dxfyjd__test.go:47: expected '%!s(int=10)', got '%!s(int=648)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmp6dxfyjd__test.go:47:\
    \ expected '%!s(int=25)', got '%!s(int=9194)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmp6dxfyjd__test.go:47: expected '%!s(int=13)', got '%!s(int=166556)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmp6dxfyjd__test.go:47:\
    \ expected '%!s(int=11)', got '%!s(int=1448)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmp6dxfyjd__test.go:47: expected '%!s(int=3)', got '%!s(int=162)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmp6dxfyjd__test.go:47:\
    \ expected '%!s(int=7)', got '%!s(int=16)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmp6dxfyjd__test.go:47: expected '%!s(int=19)', got '%!s(int=16382)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmp6dxfyjd__test.go:47:\
    \ expected '%!s(int=19)', got '%!s(int=246912)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmp6dxfyjd__test.go:47: expected '%!s(int=10)', got '%!s(int=16384)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    sum := 0\n    for _, v := range lst {\n        if v > max\
    \ {\n            max = v\n        }\n    }\n    for _, v := range lst {\n    \
    \    if v%max == 0 {\n            sum += v\n        }\n    }\n    return sum\n\
    }\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpwc61jms__test.go:48: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpwc61jms__test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpwc61jms__test.go:48: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpwc61jms__test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpwc61jms__test.go:48: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpwc61jms__test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpwc61jms__test.go:48: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpwc61jms__test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpwc61jms__test.go:48: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    max := lst[0]\n    for _, v := range lst {\n        if\
    \ v > max {\n            max = v\n        }\n    }\n    sum := 0\n    for _, v\
    \ := range lst {\n        if v%max == 0 {\n            sum += v\n        }\n \
    \   }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate :=\
    \ skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmps69m8gul_test.go:13:9: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075595
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    max := lst[0]\n    for _, v := range lst {\n        if\
    \ v > max {\n            max = v\n        }\n    }\n    return max\n}\n\nfunc\
    \ TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp2nwv_9v5_test.go:13:9: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v%max == 0 {\n            sum += v%max\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpvsp68gfg_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpvsp68gfg_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpvsp68gfg_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpvsp68gfg_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    sum := 0\n    for _, v := range lst {\n        if v > max\
    \ {\n            max = v\n        }\n    }\n    for _, v := range lst {\n    \
    \    if v == max {\n            sum += int(v)\n        }\n    }\n    return sum\n\
    }\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpujyctohz_test.go:48: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpujyctohz_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpujyctohz_test.go:48: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpujyctohz_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpujyctohz_test.go:48: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpujyctohz_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpujyctohz_test.go:48: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpujyctohz_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpujyctohz_test.go:48: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v%max == 0 {\n            sum += int(v / max)\n        }\n    }\n \
    \   return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=10)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpsvtsrp2k_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=13)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpsvtsrp2k_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=3)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpsvtsrp2k_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=19)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpsvtsrp2k_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=10)', got '%!s(int=1)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v%max == 0 {\n            sum += v%max\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpvsp68gfg_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpvsp68gfg_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpvsp68gfg_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpvsp68gfg_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    for _, v := range lst {\n        if v%max\
    \ == 0 {\n            max += v\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp6dxfyjd__test.go:47: expected '%!s(int=10)', got '%!s(int=648)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmp6dxfyjd__test.go:47:\
    \ expected '%!s(int=25)', got '%!s(int=9194)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmp6dxfyjd__test.go:47: expected '%!s(int=13)', got '%!s(int=166556)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmp6dxfyjd__test.go:47:\
    \ expected '%!s(int=11)', got '%!s(int=1448)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmp6dxfyjd__test.go:47: expected '%!s(int=3)', got '%!s(int=162)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmp6dxfyjd__test.go:47:\
    \ expected '%!s(int=7)', got '%!s(int=16)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmp6dxfyjd__test.go:47: expected '%!s(int=19)', got '%!s(int=16382)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmp6dxfyjd__test.go:47:\
    \ expected '%!s(int=19)', got '%!s(int=246912)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmp6dxfyjd__test.go:47: expected '%!s(int=10)', got '%!s(int=16384)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var maxPrime int\n    for _, v := range lst {\n        if v > maxPrime\
    \ {\n            maxPrime = v\n        }\n    }\n    sum := 0\n    for _, v :=\
    \ range lst {\n        if v == maxPrime {\n            sum += int(v)\n       \
    \ }\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate\
    \ := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuyyysr10_test.go:48: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuyyysr10_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuyyysr10_test.go:48: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuyyysr10_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuyyysr10_test.go:48: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuyyysr10_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuyyysr10_test.go:48: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuyyysr10_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuyyysr10_test.go:48: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v%max == 0 {\n            sum += int(v / max)\n        }\n    }\n \
    \   return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=10)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpsvtsrp2k_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=13)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpsvtsrp2k_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=3)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpsvtsrp2k_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=19)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpsvtsrp2k_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=10)', got '%!s(int=1)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    max := lst[0]\n    for _, v := range lst {\n        if\
    \ v > max {\n            max = v\n        }\n    }\n    sum := 0\n    for _, v\
    \ := range lst {\n        if v == max {\n            sum += int(v)\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate :=\
    \ skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpdffm8zpi_test.go:13:9: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var maxPrime int = 0\n    for _, v := range lst {\n        if v%maxPrime\
    \ == 0 {\n            maxPrime = v\n        }\n    }\n    return maxPrime\n}\n\
    \nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\npanic: runtime error: integer divide by\
    \ zero [recovered]\n\tpanic: runtime error: integer divide by zero\n\ngoroutine\
    \ 6 [running]:\ntesting.tRunner.func1.2({0x5038a0, 0x5f29a0})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x5038a0, 0x5f29a0})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.skjkasdkd(...)\n\t/tmp/tmpwasgtws6_test.go:14\n\
    command-line-arguments_test.TestSkjkasdkd(0xc0000cc4e0?)\n\t/tmp/tmpwasgtws6_test.go:28\
    \ +0xb8f\ntesting.tRunner(0xc0000cc4e0, 0x528f40)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    sum := 0\n    for _, v := range lst {\n        if v > max\
    \ {\n            max = v\n        }\n    }\n    for _, v := range lst {\n    \
    \    if v%max == 0 {\n            sum += int(v / max)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp15ctnceq_test.go:48: expected '%!s(int=10)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmp15ctnceq_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmp15ctnceq_test.go:48: expected '%!s(int=13)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmp15ctnceq_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmp15ctnceq_test.go:48: expected '%!s(int=3)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmp15ctnceq_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmp15ctnceq_test.go:48: expected '%!s(int=19)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmp15ctnceq_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmp15ctnceq_test.go:48: expected '%!s(int=10)', got '%!s(int=1)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    sum := 0\n    for _, v := range lst {\n        if v > max\
    \ {\n            max = v\n        }\n    }\n    for _, v := range lst {\n    \
    \    if v%max == 0 {\n            sum += v%max\n        }\n    }\n    return sum\n\
    }\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmps4mrao4k_test.go:48: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmps4mrao4k_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmps4mrao4k_test.go:48: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmps4mrao4k_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmps4mrao4k_test.go:48: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmps4mrao4k_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmps4mrao4k_test.go:48: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmps4mrao4k_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmps4mrao4k_test.go:48: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v == max {\n            continue\n        }\n        if v%max == 0\
    \ {\n            sum += v%max\n        }\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp6mo6757q_test.go:51: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmp6mo6757q_test.go:51:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmp6mo6757q_test.go:51: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmp6mo6757q_test.go:51:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmp6mo6757q_test.go:51: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmp6mo6757q_test.go:51:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmp6mo6757q_test.go:51: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmp6mo6757q_test.go:51:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmp6mo6757q_test.go:51: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075598
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v%max == 0 {\n            sum += v\n        }\n    }\n    return sum\n\
    }\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpftw1f2oh_test.go:48: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpftw1f2oh_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpftw1f2oh_test.go:48: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpftw1f2oh_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpftw1f2oh_test.go:48: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpftw1f2oh_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpftw1f2oh_test.go:48: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpftw1f2oh_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpftw1f2oh_test.go:48: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075597
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    prime := 2\n    for _, v := range lst {\n        if v%prime\
    \ == 0 {\n            max += v%prime\n        }\n        prime++\n    }\n    return\
    \ max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmps6_tko2g_test.go:44: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmps6_tko2g_test.go:44:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmps6_tko2g_test.go:44: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmps6_tko2g_test.go:44:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmps6_tko2g_test.go:44: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmps6_tko2g_test.go:44:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmps6_tko2g_test.go:44: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmps6_tko2g_test.go:44:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmps6_tko2g_test.go:44: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075598
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v%max == 0 {\n            sum += int(v / max)\n        }\n    }\n \
    \   return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=10)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpsvtsrp2k_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=13)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpsvtsrp2k_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=3)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpsvtsrp2k_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=19)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpsvtsrp2k_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=10)', got '%!s(int=1)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var max int\n    var sum int\n    for _, v := range lst {\n        if\
    \ v > max {\n            max = v\n        }\n    }\n    for _, v := range lst\
    \ {\n        if v%max == 0 {\n            sum += v%max\n        }\n    }\n   \
    \ return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpsk6gxj1j_test.go:48: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpsk6gxj1j_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpsk6gxj1j_test.go:48: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpsk6gxj1j_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpsk6gxj1j_test.go:48: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpsk6gxj1j_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpsk6gxj1j_test.go:48: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpsk6gxj1j_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpsk6gxj1j_test.go:48: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    max += lst[0]\n    for _, v := range lst {\n        if\
    \ v > max {\n            max = v\n        }\n    }\n    for _, v := range lst\
    \ {\n        if v%max == 0 {\n            max += v\n        }\n    }\n    return\
    \ max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp8qysnds9_test.go:48: expected '%!s(int=10)', got '%!s(int=648)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmp8qysnds9_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=9194)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmp8qysnds9_test.go:48: expected '%!s(int=13)', got '%!s(int=166556)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmp8qysnds9_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=1448)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmp8qysnds9_test.go:48: expected '%!s(int=3)', got '%!s(int=162)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmp8qysnds9_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=16)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmp8qysnds9_test.go:48: expected '%!s(int=19)', got '%!s(int=16382)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmp8qysnds9_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=246912)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmp8qysnds9_test.go:48: expected '%!s(int=10)', got '%!s(int=16384)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075598
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var max int\n    for _, v := range lst {\n        if v > max {\n    \
    \        max = v\n        }\n    }\n    max += max/2\n    for _, v := range lst\
    \ {\n        if v%max == 0 {\n            max += max/2\n        }\n    }\n   \
    \ return max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpzlmokmbr_test.go:48: expected '%!s(int=10)', got '%!s(int=729)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpzlmokmbr_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=10342)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpzlmokmbr_test.go:48: expected '%!s(int=13)', got '%!s(int=124917)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpzlmokmbr_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=3664)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpzlmokmbr_test.go:48: expected '%!s(int=3)', got '%!s(int=181)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpzlmokmbr_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=18)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpzlmokmbr_test.go:48: expected '%!s(int=19)', got '%!s(int=12286)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpzlmokmbr_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=185184)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpzlmokmbr_test.go:48: expected '%!s(int=10)', got '%!s(int=12288)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075598
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    max := lst[0]\n    for _, v := range lst {\n        if\
    \ v > max {\n            max = v\n        }\n    }\n    return max\n}\n\nfunc\
    \ TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp2nwv_9v5_test.go:13:9: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    max := lst[0]\n    for _, v := range lst {\n        if\
    \ v > max {\n            max = v\n        }\n    }\n    sum := 0\n    for _, v\
    \ := range lst {\n        if v == max {\n            sum += int(v)\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate :=\
    \ skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpdffm8zpi_test.go:13:9: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v%max == 0 {\n            sum += int(v / max)\n        }\n    }\n \
    \   return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=10)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpsvtsrp2k_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=13)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpsvtsrp2k_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=3)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpsvtsrp2k_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=19)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpsvtsrp2k_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=10)', got '%!s(int=1)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    prime := 2\n    for _, v := range lst {\n        if v%prime\
    \ == 0 {\n            max = v\n            break\n        }\n        prime++\n\
    \    }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate :=\
    \ skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpl3v2wojg_test.go:45: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpl3v2wojg_test.go:45:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpl3v2wojg_test.go:45: expected '%!s(int=13)', got '%!s(int=3)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpl3v2wojg_test.go:45:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpl3v2wojg_test.go:45: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpl3v2wojg_test.go:45:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpl3v2wojg_test.go:45: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpl3v2wojg_test.go:45:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpl3v2wojg_test.go:45: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075598
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v%max == 0 {\n            sum += v%max\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpvsp68gfg_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpvsp68gfg_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpvsp68gfg_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpvsp68gfg_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    sum := 0\n    for _, v := range lst {\n        if v > max\
    \ {\n            max = v\n        }\n    }\n    for _, v := range lst {\n    \
    \    if v%max == 0 {\n            sum += v%max\n        }\n    }\n    return sum\n\
    }\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmps4mrao4k_test.go:48: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmps4mrao4k_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmps4mrao4k_test.go:48: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmps4mrao4k_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmps4mrao4k_test.go:48: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmps4mrao4k_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmps4mrao4k_test.go:48: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmps4mrao4k_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmps4mrao4k_test.go:48: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    for _, v := range lst {\n        if v%max\
    \ == 0 {\n            max += v\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp6dxfyjd__test.go:47: expected '%!s(int=10)', got '%!s(int=648)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmp6dxfyjd__test.go:47:\
    \ expected '%!s(int=25)', got '%!s(int=9194)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmp6dxfyjd__test.go:47: expected '%!s(int=13)', got '%!s(int=166556)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmp6dxfyjd__test.go:47:\
    \ expected '%!s(int=11)', got '%!s(int=1448)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmp6dxfyjd__test.go:47: expected '%!s(int=3)', got '%!s(int=162)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmp6dxfyjd__test.go:47:\
    \ expected '%!s(int=7)', got '%!s(int=16)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmp6dxfyjd__test.go:47: expected '%!s(int=19)', got '%!s(int=16382)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmp6dxfyjd__test.go:47:\
    \ expected '%!s(int=19)', got '%!s(int=246912)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmp6dxfyjd__test.go:47: expected '%!s(int=10)', got '%!s(int=16384)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var maxPrime int\n    var sumDigits int\n    for _, v := range lst {\n\
    \        if v%maxPrime == 0 {\n            maxPrime = v\n            sumDigits\
    \ = 0\n        }\n        if v%maxPrime != 0 {\n            sumDigits += int(v%maxPrime)\n\
    \        }\n    }\n    return sumDigits\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\npanic: runtime error: integer divide by\
    \ zero [recovered]\n\tpanic: runtime error: integer divide by zero\n\ngoroutine\
    \ 6 [running]:\ntesting.tRunner.func1.2({0x5038a0, 0x5f29a0})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x5038a0, 0x5f29a0})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.skjkasdkd(...)\n\t/tmp/tmp28n80r69_test.go:15\n\
    command-line-arguments_test.TestSkjkasdkd(0xc0000cc4e0?)\n\t/tmp/tmp28n80r69_test.go:33\
    \ +0xd7e\ntesting.tRunner(0xc0000cc4e0, 0x528f40)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660075598
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    for _, v := range lst {\n        if v%max\
    \ == 0 {\n            max += v\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp6dxfyjd__test.go:47: expected '%!s(int=10)', got '%!s(int=648)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmp6dxfyjd__test.go:47:\
    \ expected '%!s(int=25)', got '%!s(int=9194)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmp6dxfyjd__test.go:47: expected '%!s(int=13)', got '%!s(int=166556)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmp6dxfyjd__test.go:47:\
    \ expected '%!s(int=11)', got '%!s(int=1448)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmp6dxfyjd__test.go:47: expected '%!s(int=3)', got '%!s(int=162)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmp6dxfyjd__test.go:47:\
    \ expected '%!s(int=7)', got '%!s(int=16)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmp6dxfyjd__test.go:47: expected '%!s(int=19)', got '%!s(int=16382)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmp6dxfyjd__test.go:47:\
    \ expected '%!s(int=19)', got '%!s(int=246912)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmp6dxfyjd__test.go:47: expected '%!s(int=10)', got '%!s(int=16384)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v%max == 0 {\n            sum += int(v / max)\n        }\n    }\n \
    \   return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=10)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpsvtsrp2k_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=13)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpsvtsrp2k_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=3)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpsvtsrp2k_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=19)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpsvtsrp2k_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=10)', got '%!s(int=1)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    max := lst[0]\n    for _, v := range lst {\n        if\
    \ v > max {\n            max = v\n        }\n    }\n    return max\n}\n\nfunc\
    \ TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp2nwv_9v5_test.go:13:9: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v%max == 0 {\n            sum += v%max\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpvsp68gfg_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpvsp68gfg_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpvsp68gfg_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpvsp68gfg_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v%max == 0 {\n            sum += v%max\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpvsp68gfg_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpvsp68gfg_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpvsp68gfg_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpvsp68gfg_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    max := lst[0]\n    for _, v := range lst {\n        if\
    \ v > max {\n            max = v\n        }\n    }\n    for _, v := range lst\
    \ {\n        if v%max == 0 {\n            max += v\n        }\n    }\n    return\
    \ max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp460wd0z0_test.go:13:9: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    for _, v := range lst {\n        if v%max\
    \ == 0 {\n            max += v\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp6dxfyjd__test.go:47: expected '%!s(int=10)', got '%!s(int=648)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmp6dxfyjd__test.go:47:\
    \ expected '%!s(int=25)', got '%!s(int=9194)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmp6dxfyjd__test.go:47: expected '%!s(int=13)', got '%!s(int=166556)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmp6dxfyjd__test.go:47:\
    \ expected '%!s(int=11)', got '%!s(int=1448)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmp6dxfyjd__test.go:47: expected '%!s(int=3)', got '%!s(int=162)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmp6dxfyjd__test.go:47:\
    \ expected '%!s(int=7)', got '%!s(int=16)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmp6dxfyjd__test.go:47: expected '%!s(int=19)', got '%!s(int=16382)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmp6dxfyjd__test.go:47:\
    \ expected '%!s(int=19)', got '%!s(int=246912)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmp6dxfyjd__test.go:47: expected '%!s(int=10)', got '%!s(int=16384)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var maxPrime int\n    for _, v := range lst {\n        if v%2 == 0 {\n\
    \            continue\n        }\n        for i := 3; i <= v/2; i++ {\n      \
    \      if v%i == 0 {\n                break\n            }\n        }\n      \
    \  if i == v/2 {\n            maxPrime = v\n        }\n    }\n    return maxPrime\n\
    }\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp7ld9fxtt_test.go:22:12: undefined: i

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075598
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var maxPrime int\n    var sum int\n    for _, v := range lst {\n    \
    \    if v%maxPrime == 0 {\n            maxPrime = v\n        }\n    }\n    for\
    \ _, v := range lst {\n        if v%maxPrime == 0 {\n            sum += int(v\
    \ / maxPrime)\n        }\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\npanic: runtime error: integer divide by\
    \ zero [recovered]\n\tpanic: runtime error: integer divide by zero\n\ngoroutine\
    \ 6 [running]:\ntesting.tRunner.func1.2({0x5038a0, 0x5f29a0})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x5038a0, 0x5f29a0})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.skjkasdkd(...)\n\t/tmp/tmpjufl0yg2_test.go:15\n\
    command-line-arguments_test.TestSkjkasdkd(0xc0000cc4e0?)\n\t/tmp/tmpjufl0yg2_test.go:34\
    \ +0xe5e\ntesting.tRunner(0xc0000cc4e0, 0x528f40)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075598
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    sum := 0\n    for _, v := range lst {\n        if v > max\
    \ {\n            max = v\n        }\n    }\n    for _, v := range lst {\n    \
    \    if v%max == 0 {\n            sum += v%max\n        }\n    }\n    return sum\n\
    }\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmps4mrao4k_test.go:48: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmps4mrao4k_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmps4mrao4k_test.go:48: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmps4mrao4k_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmps4mrao4k_test.go:48: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmps4mrao4k_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmps4mrao4k_test.go:48: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmps4mrao4k_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmps4mrao4k_test.go:48: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v%max == 0 {\n            sum += v%max\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpvsp68gfg_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpvsp68gfg_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpvsp68gfg_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpvsp68gfg_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v%max == 0 {\n            sum += v\n        }\n    }\n    return sum\n\
    }\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpftw1f2oh_test.go:48: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpftw1f2oh_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpftw1f2oh_test.go:48: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpftw1f2oh_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpftw1f2oh_test.go:48: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpftw1f2oh_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpftw1f2oh_test.go:48: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpftw1f2oh_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpftw1f2oh_test.go:48: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075597
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v%max == 0 {\n            sum += v\n        }\n    }\n    return sum\n\
    }\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpftw1f2oh_test.go:48: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpftw1f2oh_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpftw1f2oh_test.go:48: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpftw1f2oh_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpftw1f2oh_test.go:48: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpftw1f2oh_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpftw1f2oh_test.go:48: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpftw1f2oh_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpftw1f2oh_test.go:48: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075597
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var maxPrime int\n    var sum int\n    for _, v := range lst {\n    \
    \    if v%2 == 0 {\n            sum += v\n        }\n        for i := 3; i <=\
    \ int(v/2); i++ {\n            if v%i == 0 {\n                sum += i\n     \
    \       }\n        }\n        if sum > maxPrime {\n            maxPrime = sum\n\
    \        }\n        sum = 0\n    }\n    return maxPrime\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpkjtkeogj_test.go:52: expected '%!s(int=10)', got '%!s(int=844)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpkjtkeogj_test.go:52:\
    \ expected '%!s(int=25)', got '%!s(int=87)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpkjtkeogj_test.go:52: expected '%!s(int=13)', got '%!s(int=134565)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpkjtkeogj_test.go:52:\
    \ expected '%!s(int=11)', got '%!s(int=1271)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpkjtkeogj_test.go:52: expected '%!s(int=3)', got '%!s(int=39)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpkjtkeogj_test.go:52:\
    \ expected '%!s(int=7)', got '%!s(int=12)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpkjtkeogj_test.go:52: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpkjtkeogj_test.go:52:\
    \ expected '%!s(int=19)', got '%!s(int=327149)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpkjtkeogj_test.go:52: expected '%!s(int=10)', got '%!s(int=16380)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075598
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var maxPrime int\n    var sumOfDigits int\n    for _, v := range lst\
    \ {\n        if v%2 == 0 {\n            maxPrime = maxPrime + 1\n        }\n \
    \   }\n    for _, v := range lst {\n        if v%maxPrime == 0 {\n           \
    \ sumOfDigits += v\n        }\n    }\n    return sumOfDigits\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\npanic: runtime error: integer divide by\
    \ zero [recovered]\n\tpanic: runtime error: integer divide by zero\n\ngoroutine\
    \ 18 [running]:\ntesting.tRunner.func1.2({0x5038a0, 0x5f29a0})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x5038a0, 0x5f29a0})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.skjkasdkd(...)\n\t/tmp/tmpp7gr92tw_test.go:20\n\
    command-line-arguments_test.TestSkjkasdkd(0xc00019b040?)\n\t/tmp/tmpp7gr92tw_test.go:40\
    \ +0xcf6\ntesting.tRunner(0xc00019b040, 0x528f40)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660075598
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    max := lst[0]\n    for _, v := range lst {\n        if\
    \ v > max {\n            max = v\n        }\n    }\n    sum := 0\n    for _, v\
    \ := range lst {\n        if v%max == 0 {\n            sum += int(v / max)\n \
    \       }\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate\
    \ := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpqjqmmbpm_test.go:13:9: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v%max == 0 {\n            sum += int(v / max)\n        }\n    }\n \
    \   return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=10)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpsvtsrp2k_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=13)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpsvtsrp2k_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=3)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpsvtsrp2k_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=19)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpsvtsrp2k_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=10)', got '%!s(int=1)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var max int\n    for _, v := range lst {\n        if v > max {\n    \
    \        max = v\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var maxPrime int\n    var sum int\n    for _, v := range lst {\n    \
    \    if v%2 == 0 {\n            continue\n        }\n        for i := 3; i <=\
    \ v/2; i++ {\n            if v%i == 0 {\n                break\n            }\n\
    \        }\n        if i == v/2 {\n            maxPrime = v\n            sum +=\
    \ v\n        }\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n\
    \  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpj_sufioa_test.go:12:9: maxPrime declared but not used

    /tmp/tmpj_sufioa_test.go:23:12: undefined: i

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var maxPrime int\n    var maxPrimeDigit int\n    var sum int\n    for\
    \ _, v := range lst {\n        if v > maxPrime {\n            maxPrime = v\n \
    \           maxPrimeDigit = 0\n        }\n        if v == maxPrime {\n       \
    \     maxPrimeDigit += v\n        }\n    }\n    sum = maxPrimeDigit\n    for _,\
    \ v := range lst {\n        if v > maxPrime {\n            sum += v - maxPrime\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n \
    \ candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpj29vg_op_test.go:54: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpj29vg_op_test.go:54:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpj29vg_op_test.go:54: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpj29vg_op_test.go:54:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpj29vg_op_test.go:54: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpj29vg_op_test.go:54:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpj29vg_op_test.go:54: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpj29vg_op_test.go:54:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpj29vg_op_test.go:54: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075598
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v%max == 0 {\n            sum += v\n        }\n    }\n    return sum\n\
    }\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpftw1f2oh_test.go:48: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpftw1f2oh_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpftw1f2oh_test.go:48: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpftw1f2oh_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpftw1f2oh_test.go:48: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpftw1f2oh_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpftw1f2oh_test.go:48: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpftw1f2oh_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpftw1f2oh_test.go:48: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075597
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v%max == 0 {\n            sum += v%max\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpvsp68gfg_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpvsp68gfg_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpvsp68gfg_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpvsp68gfg_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    sum := 0\n    for _, v := range lst {\n        if v > max\
    \ {\n            max = v\n        }\n    }\n    for _, v := range lst {\n    \
    \    if v%max == 0 {\n            sum += int(v / max)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp15ctnceq_test.go:48: expected '%!s(int=10)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmp15ctnceq_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmp15ctnceq_test.go:48: expected '%!s(int=13)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmp15ctnceq_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmp15ctnceq_test.go:48: expected '%!s(int=3)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmp15ctnceq_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmp15ctnceq_test.go:48: expected '%!s(int=19)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmp15ctnceq_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmp15ctnceq_test.go:48: expected '%!s(int=10)', got '%!s(int=1)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    for _, v := range lst {\n        if v%max\
    \ == 0 {\n            max += v\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp6dxfyjd__test.go:47: expected '%!s(int=10)', got '%!s(int=648)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmp6dxfyjd__test.go:47:\
    \ expected '%!s(int=25)', got '%!s(int=9194)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmp6dxfyjd__test.go:47: expected '%!s(int=13)', got '%!s(int=166556)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmp6dxfyjd__test.go:47:\
    \ expected '%!s(int=11)', got '%!s(int=1448)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmp6dxfyjd__test.go:47: expected '%!s(int=3)', got '%!s(int=162)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmp6dxfyjd__test.go:47:\
    \ expected '%!s(int=7)', got '%!s(int=16)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmp6dxfyjd__test.go:47: expected '%!s(int=19)', got '%!s(int=16382)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmp6dxfyjd__test.go:47:\
    \ expected '%!s(int=19)', got '%!s(int=246912)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmp6dxfyjd__test.go:47: expected '%!s(int=10)', got '%!s(int=16384)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    sum := 0\n    for _, v := range lst {\n        if v > max\
    \ {\n            max = v\n        }\n    }\n    for _, v := range lst {\n    \
    \    if v%max == 0 {\n            sum += v%max\n        }\n    }\n    return sum\n\
    }\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmps4mrao4k_test.go:48: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmps4mrao4k_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmps4mrao4k_test.go:48: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmps4mrao4k_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmps4mrao4k_test.go:48: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmps4mrao4k_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmps4mrao4k_test.go:48: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmps4mrao4k_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmps4mrao4k_test.go:48: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v%max == 0 {\n            sum += int(v / max)\n        }\n    }\n \
    \   return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=10)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpsvtsrp2k_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=13)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpsvtsrp2k_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=3)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpsvtsrp2k_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=19)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpsvtsrp2k_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=10)', got '%!s(int=1)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    sum := 0\n    for _, v := range lst {\n        if v > max\
    \ {\n            max = v\n        }\n    }\n    for _, v := range lst {\n    \
    \    if v%max == 0 {\n            sum += int(v / max)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp15ctnceq_test.go:48: expected '%!s(int=10)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmp15ctnceq_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmp15ctnceq_test.go:48: expected '%!s(int=13)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmp15ctnceq_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmp15ctnceq_test.go:48: expected '%!s(int=3)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmp15ctnceq_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmp15ctnceq_test.go:48: expected '%!s(int=19)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmp15ctnceq_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmp15ctnceq_test.go:48: expected '%!s(int=10)', got '%!s(int=1)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var max int\n    var sum int\n    for _, v := range lst {\n        if\
    \ v > max {\n            max = v\n        }\n    }\n    for _, v := range lst\
    \ {\n        if v%max == 0 {\n            sum += v%max\n        }\n    }\n   \
    \ return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpsk6gxj1j_test.go:48: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpsk6gxj1j_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpsk6gxj1j_test.go:48: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpsk6gxj1j_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpsk6gxj1j_test.go:48: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpsk6gxj1j_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpsk6gxj1j_test.go:48: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpsk6gxj1j_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpsk6gxj1j_test.go:48: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v%max == 0 {\n            sum += v%max\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpvsp68gfg_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpvsp68gfg_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpvsp68gfg_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpvsp68gfg_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    prime := 2\n    for _, v := range lst {\n        if v >\
    \ max {\n            max = v\n        }\n        if v%prime == 0 {\n         \
    \   prime++\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpn6ctatq9_test.go:46: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpn6ctatq9_test.go:46:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpn6ctatq9_test.go:46: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpn6ctatq9_test.go:46:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpn6ctatq9_test.go:46: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpn6ctatq9_test.go:46:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpn6ctatq9_test.go:46: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpn6ctatq9_test.go:46:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpn6ctatq9_test.go:46: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075598
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var maxPrime int\n    for _, v := range lst {\n        if v%2 == 0 {\n\
    \            continue\n        }\n        for i := 3; i <= v/2; i++ {\n      \
    \      if v%i == 0 {\n                break\n            }\n        }\n      \
    \  if i == v/2 {\n            maxPrime = v\n        }\n    }\n    return maxPrime\n\
    }\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp7ld9fxtt_test.go:22:12: undefined: i

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075598
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    sum := 0\n    for _, v := range lst {\n        if v > max\
    \ {\n            max = v\n        }\n    }\n    for _, v := range lst {\n    \
    \    if v%max == 0 {\n            sum += int(v / max)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp15ctnceq_test.go:48: expected '%!s(int=10)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmp15ctnceq_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmp15ctnceq_test.go:48: expected '%!s(int=13)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmp15ctnceq_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmp15ctnceq_test.go:48: expected '%!s(int=3)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmp15ctnceq_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmp15ctnceq_test.go:48: expected '%!s(int=19)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmp15ctnceq_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmp15ctnceq_test.go:48: expected '%!s(int=10)', got '%!s(int=1)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var maxPrime int = 0\n    for _, v := range lst {\n        if v > maxPrime\
    \ {\n            maxPrime = v\n        }\n    }\n    return maxPrime\n}\n\nfunc\
    \ TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpowtmc81f_test.go:42: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpowtmc81f_test.go:42:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpowtmc81f_test.go:42: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpowtmc81f_test.go:42:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpowtmc81f_test.go:42: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpowtmc81f_test.go:42:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpowtmc81f_test.go:42: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpowtmc81f_test.go:42:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpowtmc81f_test.go:42: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075598
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v%max == 0 {\n            sum += v%max\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpvsp68gfg_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpvsp68gfg_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpvsp68gfg_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpvsp68gfg_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    max := lst[0]\n    for _, v := range lst {\n        if\
    \ v > max {\n            max = v\n        }\n    }\n    for _, v := range lst\
    \ {\n        if v%max == 0 {\n            max += v\n        }\n    }\n    return\
    \ max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp460wd0z0_test.go:13:9: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v%max == 0 {\n            sum += int(v / max)\n        }\n    }\n \
    \   return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=10)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpsvtsrp2k_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=13)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpsvtsrp2k_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=3)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpsvtsrp2k_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=19)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpsvtsrp2k_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=10)', got '%!s(int=1)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var maxPrime int = 0\n    for _, v := range lst {\n        if v > maxPrime\
    \ {\n            maxPrime = v\n        }\n    }\n    return maxPrime\n}\n\nfunc\
    \ TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpowtmc81f_test.go:42: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpowtmc81f_test.go:42:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpowtmc81f_test.go:42: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpowtmc81f_test.go:42:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpowtmc81f_test.go:42: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpowtmc81f_test.go:42:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpowtmc81f_test.go:42: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpowtmc81f_test.go:42:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpowtmc81f_test.go:42: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075598
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    max += lst[0]\n    for _, v := range lst[1:] {\n      \
    \  if v > max {\n            max = v\n        }\n    }\n    return max\n}\n\n\
    func TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpxo19imw4_test.go:43: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpxo19imw4_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpxo19imw4_test.go:43: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpxo19imw4_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpxo19imw4_test.go:43: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpxo19imw4_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpxo19imw4_test.go:43: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpxo19imw4_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpxo19imw4_test.go:43: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075598
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    prime := 2\n    for _, v := range lst {\n        if v >\
    \ max {\n            max = v\n        }\n        if v%prime == 0 {\n         \
    \   prime++\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpn6ctatq9_test.go:46: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpn6ctatq9_test.go:46:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpn6ctatq9_test.go:46: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpn6ctatq9_test.go:46:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpn6ctatq9_test.go:46: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpn6ctatq9_test.go:46:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpn6ctatq9_test.go:46: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpn6ctatq9_test.go:46:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpn6ctatq9_test.go:46: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075598
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    prime := 2\n    for _, v := range lst {\n        if v%prime\
    \ == 0 {\n            max = v\n            break\n        }\n        prime++\n\
    \    }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate :=\
    \ skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpl3v2wojg_test.go:45: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpl3v2wojg_test.go:45:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpl3v2wojg_test.go:45: expected '%!s(int=13)', got '%!s(int=3)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpl3v2wojg_test.go:45:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpl3v2wojg_test.go:45: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpl3v2wojg_test.go:45:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpl3v2wojg_test.go:45: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpl3v2wojg_test.go:45:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpl3v2wojg_test.go:45: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075598
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v%max == 0 {\n            sum += v\n        }\n    }\n    return sum\n\
    }\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpftw1f2oh_test.go:48: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpftw1f2oh_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpftw1f2oh_test.go:48: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpftw1f2oh_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpftw1f2oh_test.go:48: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpftw1f2oh_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpftw1f2oh_test.go:48: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpftw1f2oh_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpftw1f2oh_test.go:48: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075597
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    max := lst[0]\n    for _, v := range lst {\n        if\
    \ v > max {\n            max = v\n        }\n    }\n    sum := 0\n    for _, v\
    \ := range lst {\n        if v == max {\n            sum += int(v)\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate :=\
    \ skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpdffm8zpi_test.go:13:9: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    sum := 0\n    for _, v := range lst {\n        if v > max\
    \ {\n            max = v\n        }\n    }\n    for _, v := range lst {\n    \
    \    if v%max == 0 {\n            sum += v%max\n        }\n    }\n    return sum\n\
    }\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmps4mrao4k_test.go:48: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmps4mrao4k_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmps4mrao4k_test.go:48: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmps4mrao4k_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmps4mrao4k_test.go:48: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmps4mrao4k_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmps4mrao4k_test.go:48: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmps4mrao4k_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmps4mrao4k_test.go:48: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v%max == 0 {\n            sum += v%max\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpvsp68gfg_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpvsp68gfg_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpvsp68gfg_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpvsp68gfg_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v%max == 0 {\n            sum += int(v / max)\n        }\n    }\n \
    \   return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=10)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpsvtsrp2k_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=13)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpsvtsrp2k_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=3)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpsvtsrp2k_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=19)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpsvtsrp2k_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=10)', got '%!s(int=1)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var maxPrime int\n    var sum int\n    for _, v := range lst {\n    \
    \    if v > maxPrime {\n            maxPrime = v\n        }\n    }\n    for _,\
    \ v := range lst {\n        if v%maxPrime == 0 {\n            sum += v\n     \
    \   }\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate\
    \ := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpaphe0ilt_test.go:48: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpaphe0ilt_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpaphe0ilt_test.go:48: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpaphe0ilt_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpaphe0ilt_test.go:48: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpaphe0ilt_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpaphe0ilt_test.go:48: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpaphe0ilt_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpaphe0ilt_test.go:48: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075598
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var maxPrime int = 0\n    for _, v := range lst {\n        if v > maxPrime\
    \ {\n            maxPrime = v\n        }\n    }\n    return maxPrime\n}\n\nfunc\
    \ TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpowtmc81f_test.go:42: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpowtmc81f_test.go:42:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpowtmc81f_test.go:42: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpowtmc81f_test.go:42:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpowtmc81f_test.go:42: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpowtmc81f_test.go:42:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpowtmc81f_test.go:42: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpowtmc81f_test.go:42:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpowtmc81f_test.go:42: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075598
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var maxPrime int\n    for _, v := range lst {\n        if v > maxPrime\
    \ {\n            maxPrime = v\n        }\n    }\n    sum := 0\n    for _, v :=\
    \ range lst {\n        if v == maxPrime {\n            sum += int(v)\n       \
    \ }\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate\
    \ := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpuyyysr10_test.go:48: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpuyyysr10_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpuyyysr10_test.go:48: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpuyyysr10_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpuyyysr10_test.go:48: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpuyyysr10_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpuyyysr10_test.go:48: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpuyyysr10_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpuyyysr10_test.go:48: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v%max == 0 {\n            sum += v%max\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpvsp68gfg_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpvsp68gfg_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpvsp68gfg_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpvsp68gfg_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var max int\n    var sum int\n    for _, v := range lst {\n        if\
    \ v > max {\n            max = v\n        }\n    }\n    for _, v := range lst\
    \ {\n        if v%max == 0 {\n            sum += v%max\n        }\n    }\n   \
    \ return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpsk6gxj1j_test.go:48: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpsk6gxj1j_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpsk6gxj1j_test.go:48: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpsk6gxj1j_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpsk6gxj1j_test.go:48: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpsk6gxj1j_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpsk6gxj1j_test.go:48: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpsk6gxj1j_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpsk6gxj1j_test.go:48: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v%max == 0 {\n            sum += int(v / max)\n        }\n    }\n \
    \   return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=10)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpsvtsrp2k_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=13)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpsvtsrp2k_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=3)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpsvtsrp2k_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=19)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpsvtsrp2k_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=10)', got '%!s(int=1)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v%max == 0 {\n            sum += int(v / max)\n        }\n    }\n \
    \   return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=10)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpsvtsrp2k_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=13)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpsvtsrp2k_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=3)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpsvtsrp2k_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=19)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpsvtsrp2k_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpsvtsrp2k_test.go:48: expected '%!s(int=10)', got '%!s(int=1)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v%max == 0 {\n            sum += v%max\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpvsp68gfg_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpvsp68gfg_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpvsp68gfg_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpvsp68gfg_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    for _, v := range lst {\n        if v%max\
    \ == 0 {\n            max += v\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp6dxfyjd__test.go:47: expected '%!s(int=10)', got '%!s(int=648)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmp6dxfyjd__test.go:47:\
    \ expected '%!s(int=25)', got '%!s(int=9194)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmp6dxfyjd__test.go:47: expected '%!s(int=13)', got '%!s(int=166556)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmp6dxfyjd__test.go:47:\
    \ expected '%!s(int=11)', got '%!s(int=1448)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmp6dxfyjd__test.go:47: expected '%!s(int=3)', got '%!s(int=162)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmp6dxfyjd__test.go:47:\
    \ expected '%!s(int=7)', got '%!s(int=16)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmp6dxfyjd__test.go:47: expected '%!s(int=19)', got '%!s(int=16382)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmp6dxfyjd__test.go:47:\
    \ expected '%!s(int=19)', got '%!s(int=246912)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmp6dxfyjd__test.go:47: expected '%!s(int=10)', got '%!s(int=16384)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v%max == 0 {\n            sum += v / max\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpvfl959g3_test.go:48: expected '%!s(int=10)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpvfl959g3_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpvfl959g3_test.go:48: expected '%!s(int=13)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpvfl959g3_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpvfl959g3_test.go:48: expected '%!s(int=3)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpvfl959g3_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpvfl959g3_test.go:48: expected '%!s(int=19)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpvfl959g3_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=1)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpvfl959g3_test.go:48: expected '%!s(int=10)', got '%!s(int=1)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075598
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v%max == 0 {\n            sum += v%max\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpvsp68gfg_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpvsp68gfg_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpvsp68gfg_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpvsp68gfg_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    sum := 0\n    for _, v := range lst {\n        if v > max\
    \ {\n            max = v\n        }\n    }\n    for _, v := range lst {\n    \
    \    if v == max {\n            sum += int(v)\n        }\n    }\n    return sum\n\
    }\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpujyctohz_test.go:48: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpujyctohz_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpujyctohz_test.go:48: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpujyctohz_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpujyctohz_test.go:48: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpujyctohz_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpujyctohz_test.go:48: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpujyctohz_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpujyctohz_test.go:48: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v%max == 0 {\n            sum += v%max\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpvsp68gfg_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpvsp68gfg_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpvsp68gfg_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpvsp68gfg_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpvsp68gfg_test.go:48: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    max += lst[0]\n    for _, v := range lst[1:] {\n      \
    \  if v > max {\n            max = v\n        }\n    }\n    return max\n}\n\n\
    func TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpxo19imw4_test.go:43: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpxo19imw4_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpxo19imw4_test.go:43: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpxo19imw4_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpxo19imw4_test.go:43: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpxo19imw4_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpxo19imw4_test.go:43: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpxo19imw4_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpxo19imw4_test.go:43: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075598
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var maxPrime int\n    var sumOfDigits int\n    for _, v := range lst\
    \ {\n        if v > maxPrime {\n            maxPrime = v\n        }\n    }\n \
    \   for _, v := range lst {\n        if v%maxPrime == 0 {\n            sumOfDigits\
    \ += v%10\n        }\n    }\n    return sumOfDigits\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpkfdg7qet_test.go:48: expected '%!s(int=10)', got '%!s(int=4)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpkfdg7qet_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=7)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpkfdg7qet_test.go:48: expected '%!s(int=13)', got '%!s(int=8)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpkfdg7qet_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=4)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpkfdg7qet_test.go:48: expected '%!s(int=3)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpkfdg7qet_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpkfdg7qet_test.go:48: expected '%!s(int=19)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpkfdg7qet_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=6)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpkfdg7qet_test.go:48: expected '%!s(int=10)', got '%!s(int=2)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075598
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var maxPrime int\n    var sumOfDigits int\n    for _, v := range lst\
    \ {\n        if v > maxPrime {\n            maxPrime = v\n        }\n    }\n \
    \   for _, v := range lst {\n        if v%maxPrime == 0 {\n            sumOfDigits\
    \ += v%10\n        }\n    }\n    return sumOfDigits\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpkfdg7qet_test.go:48: expected '%!s(int=10)', got '%!s(int=4)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpkfdg7qet_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=7)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpkfdg7qet_test.go:48: expected '%!s(int=13)', got '%!s(int=8)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpkfdg7qet_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=4)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpkfdg7qet_test.go:48: expected '%!s(int=3)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpkfdg7qet_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpkfdg7qet_test.go:48: expected '%!s(int=19)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpkfdg7qet_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=6)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpkfdg7qet_test.go:48: expected '%!s(int=10)', got '%!s(int=2)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075598
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    max += lst[0]\n    for _, v := range lst[1:] {\n      \
    \  if v > max {\n            max = v\n        }\n    }\n    return max\n}\n\n\
    func TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpxo19imw4_test.go:43: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpxo19imw4_test.go:43:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpxo19imw4_test.go:43: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpxo19imw4_test.go:43:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpxo19imw4_test.go:43: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpxo19imw4_test.go:43:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpxo19imw4_test.go:43: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpxo19imw4_test.go:43:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpxo19imw4_test.go:43: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075598
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    for _, v := range lst {\n        if v%max\
    \ == 0 {\n            max += v%max\n        }\n    }\n    return max\n}\n\nfunc\
    \ TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp73bvo10m_test.go:47: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmp73bvo10m_test.go:47:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmp73bvo10m_test.go:47: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmp73bvo10m_test.go:47:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmp73bvo10m_test.go:47: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmp73bvo10m_test.go:47:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmp73bvo10m_test.go:47: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmp73bvo10m_test.go:47:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmp73bvo10m_test.go:47: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075598
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var maxPrime int\n    var sum int\n    for _, v := range lst {\n    \
    \    if v%2 == 0 {\n            continue\n        }\n        for i := 3; i <=\
    \ v/2; i++ {\n            if v%i == 0 {\n                break\n            }\n\
    \        }\n        if i == v/2 {\n            maxPrime = v\n            sum +=\
    \ v\n        }\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n\
    \  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpj_sufioa_test.go:12:9: maxPrime declared but not used

    /tmp/tmpj_sufioa_test.go:23:12: undefined: i

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v%max == 0 {\n            sum += v\n        }\n    }\n    return sum\n\
    }\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpftw1f2oh_test.go:48: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpftw1f2oh_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpftw1f2oh_test.go:48: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpftw1f2oh_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpftw1f2oh_test.go:48: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpftw1f2oh_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpftw1f2oh_test.go:48: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpftw1f2oh_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpftw1f2oh_test.go:48: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075597
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    max += lst[0]\n    for _, v := range lst[1:] {\n      \
    \  if v%max == 0 {\n            max += v\n        } else {\n            max =\
    \ v\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n\
    \  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\npanic: runtime error: integer divide by\
    \ zero [recovered]\n\tpanic: runtime error: integer divide by zero\n\ngoroutine\
    \ 6 [running]:\ntesting.tRunner.func1.2({0x5038a0, 0x5f29a0})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x5038a0, 0x5f29a0})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.skjkasdkd(...)\n\t/tmp/tmpevlud120_test.go:15\n\
    command-line-arguments_test.TestSkjkasdkd(0xc0000da1a0?)\n\t/tmp/tmpevlud120_test.go:31\
    \ +0xbaa\ntesting.tRunner(0xc0000da1a0, 0x528f40)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075598
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    for _, v := range lst {\n        if v%max\
    \ == 0 {\n            max += v\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp6dxfyjd__test.go:47: expected '%!s(int=10)', got '%!s(int=648)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmp6dxfyjd__test.go:47:\
    \ expected '%!s(int=25)', got '%!s(int=9194)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmp6dxfyjd__test.go:47: expected '%!s(int=13)', got '%!s(int=166556)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmp6dxfyjd__test.go:47:\
    \ expected '%!s(int=11)', got '%!s(int=1448)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmp6dxfyjd__test.go:47: expected '%!s(int=3)', got '%!s(int=162)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmp6dxfyjd__test.go:47:\
    \ expected '%!s(int=7)', got '%!s(int=16)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmp6dxfyjd__test.go:47: expected '%!s(int=19)', got '%!s(int=16382)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmp6dxfyjd__test.go:47:\
    \ expected '%!s(int=19)', got '%!s(int=246912)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmp6dxfyjd__test.go:47: expected '%!s(int=10)', got '%!s(int=16384)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v%max == 0 {\n            sum += v\n        }\n    }\n    return sum\n\
    }\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpftw1f2oh_test.go:48: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpftw1f2oh_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpftw1f2oh_test.go:48: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpftw1f2oh_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpftw1f2oh_test.go:48: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpftw1f2oh_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpftw1f2oh_test.go:48: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpftw1f2oh_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpftw1f2oh_test.go:48: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075597
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    max := lst[0]\n    for _, v := range lst {\n        if\
    \ v > max {\n            max = v\n        }\n    }\n    sum := 0\n    for _, v\
    \ := range lst {\n        if v == max {\n            sum += int(v)\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate :=\
    \ skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpdffm8zpi_test.go:13:9: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    max += lst[0]\n    for _, v := range lst[1:] {\n      \
    \  if v%max != 0 {\n            max = v\n        }\n    }\n    return max\n}\n\
    \nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\npanic: runtime error: integer divide by\
    \ zero [recovered]\n\tpanic: runtime error: integer divide by zero\n\ngoroutine\
    \ 6 [running]:\ntesting.tRunner.func1.2({0x5038a0, 0x5f29a0})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x5038a0, 0x5f29a0})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.skjkasdkd(...)\n\t/tmp/tmpw3yhb0pk_test.go:15\n\
    command-line-arguments_test.TestSkjkasdkd(0xc0000cc4e0?)\n\t/tmp/tmpw3yhb0pk_test.go:29\
    \ +0xb6a\ntesting.tRunner(0xc0000cc4e0, 0x528f40)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660075598
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var maxPrime int\n    var maxDigit = 0\n    for _, v := range lst {\n\
    \        if v > maxDigit {\n            maxDigit = v\n            maxPrime = v\n\
    \        }\n    }\n    var sum int\n    for _, v := range lst {\n        if v\
    \ == maxDigit {\n            sum += maxDigit\n        }\n    }\n    return sum\n\
    }\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpzmib35bs_test.go:12:9: maxPrime declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075598
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    max += lst[0]\n    for _, v := range lst[1:] {\n      \
    \  if v%max == 0 {\n            max += v\n        }\n    }\n    return max\n}\n\
    \nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\npanic: runtime error: integer divide by\
    \ zero [recovered]\n\tpanic: runtime error: integer divide by zero\n\ngoroutine\
    \ 18 [running]:\ntesting.tRunner.func1.2({0x5038a0, 0x5f29a0})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x5038a0, 0x5f29a0})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.skjkasdkd(...)\n\t/tmp/tmpeq58i3c6_test.go:15\n\
    command-line-arguments_test.TestSkjkasdkd(0xc000103380?)\n\t/tmp/tmpeq58i3c6_test.go:29\
    \ +0xb8a\ntesting.tRunner(0xc000103380, 0x528f40)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660075598
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v == max {\n            continue\n        }\n        if v%max == 0\
    \ {\n            sum += int(v / max)\n        }\n    }\n    return sum\n}\n\n\
    func TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpj70vsrq6_test.go:51: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpj70vsrq6_test.go:51:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpj70vsrq6_test.go:51: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpj70vsrq6_test.go:51:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpj70vsrq6_test.go:51: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpj70vsrq6_test.go:51:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpj70vsrq6_test.go:51: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpj70vsrq6_test.go:51:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpj70vsrq6_test.go:51: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075599
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmplj77l_ix_test.go:42:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmplj77l_ix_test.go:42: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    sum := 0\n    for _, v := range lst {\n        if v > max\
    \ {\n            max = v\n        }\n    }\n    for _, v := range lst {\n    \
    \    if v%max == 0 {\n            sum += v%max\n        }\n    }\n    return sum\n\
    }\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmps4mrao4k_test.go:48: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmps4mrao4k_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmps4mrao4k_test.go:48: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmps4mrao4k_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmps4mrao4k_test.go:48: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmps4mrao4k_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmps4mrao4k_test.go:48: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmps4mrao4k_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmps4mrao4k_test.go:48: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var maxPrime int\n    var sum int\n    for _, v := range lst {\n    \
    \    if v > maxPrime {\n            maxPrime = v\n        }\n    }\n    for _,\
    \ v := range lst {\n        if v%maxPrime == 0 {\n            sum += v%10\n  \
    \      }\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate\
    \ := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpsaf4cv2q_test.go:48: expected '%!s(int=10)', got '%!s(int=4)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpsaf4cv2q_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=7)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpsaf4cv2q_test.go:48: expected '%!s(int=13)', got '%!s(int=8)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpsaf4cv2q_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=4)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpsaf4cv2q_test.go:48: expected '%!s(int=3)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpsaf4cv2q_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpsaf4cv2q_test.go:48: expected '%!s(int=19)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpsaf4cv2q_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=6)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpsaf4cv2q_test.go:48: expected '%!s(int=10)', got '%!s(int=2)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075599
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    max := 0\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpht3lv3r8_test.go:48:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpht3lv3r8_test.go:48: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075595

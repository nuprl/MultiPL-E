language: go_test.go
name: HumanEval_62_derivative
results:
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    d := make([]int, len(xs))\n    d[0] = xs[1]\n\
    \    for i := 2; i < len(xs); i++ {\n        d[i] = d[i-1] * xs[i]\n    }\n  \
    \  return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [1] with length 1 [recovered]\n\tpanic: runtime error: index out of range [1]\
    \ with length 1\n\ngoroutine 34 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc0001d6030})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc0001d6030})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpho3lp9d1_test.go:13\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpho3lp9d1_test.go:31\
    \ +0x212\ntesting.tRunner(0xc00019b040, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    derivative[0]\
    \ = 1\n    for i := 1; i < len(xs); i++ {\n        derivative[i] = derivative[i-1]\
    \ * xs[i] - xs[i-1]\n    }\n    return derivative\n}\n\nfunc TestDerivative(t\
    \ *testing.T) {\n  candidate := derivative\n\ttype test struct {\n\t\tactual \
    \  interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual:\
    \ candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3,\
    \ 2, 1}), expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0,\
    \ 4}), expected: []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected:\
    \ []int{} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpvcpeuua8_test.go:37: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=1) %!s(int=-2) %!s(int=-5) %!s(int=-22) %!s(int=-114)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpvcpeuua8_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=1) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpvcpeuua8_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=1) %!s(int=-1) %!s(int=-3)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpvcpeuua8_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=1)\
    \ %!s(int=-1) %!s(int=-3) %!s(int=-1) %!s(int=-4)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpvcpeuua8_test.go:37: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    for\
    \ i := 0; i < len(xs); i++ {\n        derivative[i] = xs[i]\n    }\n    for i\
    \ := 1; i < len(xs); i++ {\n        derivative[i] = derivative[i-1] * xs[i]\n\
    \    }\n    return derivative\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate\
    \ := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3, 1,\
    \ 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpmy6_tdtg_test.go:39: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpmy6_tdtg_test.go:39:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpmy6_tdtg_test.go:39:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpmy6_tdtg_test.go:39:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpmy6_tdtg_test.go:39: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    d := make([]int, n)\n  \
    \  d[0] = xs[0]\n    for i := 1; i < n; i++ {\n        d[i] = d[i-1] * xs[i]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    derivative[0]\
    \ = 1\n    for i := 1; i < len(xs); i++ {\n        derivative[i] = derivative[i-1]\
    \ * xs[i-1]\n    }\n    return derivative\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmptp7rswbu_test.go:37: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=1) %!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmptp7rswbu_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=1) %!s(int=2)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmptp7rswbu_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=1) %!s(int=3) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmptp7rswbu_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=1)\
    \ %!s(int=3) %!s(int=6) %!s(int=6) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmptp7rswbu_test.go:37: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    d := make([]int, n)\n  \
    \  d[0] = xs[0]\n    for i := 1; i < n; i++ {\n        d[i] = d[i-1] * xs[i]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    derivative[0]\
    \ = xs[1]\n    for i := 1; i < len(xs); i++ {\n        derivative[i] = derivative[i-1]\
    \ * xs[i]\n    }\n    return derivative\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [1] with length 1 [recovered]\n\tpanic: runtime error: index out of range [1]\
    \ with length 1\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpdkes1h00_test.go:13\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpdkes1h00_test.go:31\
    \ +0x212\ntesting.tRunner(0xc0000cc4e0, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    d := make([]int, len(xs))\n    d[0] = xs[1]\n\
    \    for i := 2; i < len(xs); i++ {\n        d[i] = d[i-1] * xs[i]\n    }\n  \
    \  return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [1] with length 1 [recovered]\n\tpanic: runtime error: index out of range [1]\
    \ with length 1\n\ngoroutine 34 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc0001d6030})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc0001d6030})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpho3lp9d1_test.go:13\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpho3lp9d1_test.go:31\
    \ +0x212\ntesting.tRunner(0xc00019b040, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    d := make([]int, n)\n  \
    \  d[0] = xs[1]\n    for i := 2; i < n; i++ {\n        d[i] = d[i-1] * xs[i] -\
    \ xs[i-1]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate\
    \ := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3, 1,\
    \ 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [1] with length 1 [recovered]\n\tpanic: runtime error: index out of range [1]\
    \ with length 1\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmp_m4n8zur_test.go:14\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmp_m4n8zur_test.go:32\
    \ +0x228\ntesting.tRunner(0xc0000da1a0, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    for\
    \ i := 0; i < len(xs); i++ {\n        derivative[i] = xs[i] - xs[i-1]\n    }\n\
    \    return derivative\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate\
    \ := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3, 1,\
    \ 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [-1] [recovered]\n\tpanic: runtime error: index out of range [-1]\n\ngoroutine\
    \ 6 [running]:\ntesting.tRunner.func1.2({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpp5w9xw2j_test.go:14\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpp5w9xw2j_test.go:26\
    \ +0x24c\ntesting.tRunner(0xc0000cc4e0, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    d := make([]int, n)\n  \
    \  d[0] = xs[0]\n    for i := 1; i < n; i++ {\n        d[i] = d[i-1] * xs[i]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    d := make([]int, n)\n  \
    \  d[0] = xs[0]\n    for i := 1; i < n; i++ {\n        d[i] = d[i-1] * xs[i]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    derivative[0]\
    \ = xs[0]\n    for i := 1; i < len(xs); i++ {\n        derivative[i] = xs[i] -\
    \ derivative[i-1]\n    }\n    return derivative\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpjt_kw3ha_test.go:37: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=-2) %!s(int=4) %!s(int=0) %!s(int=5)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpjt_kw3ha_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=1) %!s(int=2)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpjt_kw3ha_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=-1) %!s(int=2)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpjt_kw3ha_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=-1) %!s(int=2) %!s(int=-2) %!s(int=6)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpjt_kw3ha_test.go:37: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    d := make([]int, n)\n  \
    \  d[0] = xs[0]\n    for i := 1; i < n; i++ {\n        d[i] = d[i-1] * xs[i]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    d := make([]int, n)\n  \
    \  d[0] = xs[0]\n    for i := 1; i < n; i++ {\n        d[i] = d[i-1] * xs[i]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    d := make([]int, n)\n  \
    \  d[0] = xs[0]\n    for i := 1; i < n; i++ {\n        d[i] = d[i-1] * xs[i]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    d := make([]int, len(xs))\n    d[0] = xs[1]\n\
    \    for i := 2; i < len(xs); i++ {\n        d[i] = d[i-1] * xs[i] - xs[i-1]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [1] with length 1 [recovered]\n\tpanic: runtime error: index out of range [1]\
    \ with length 1\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmp6ewcsfyb_test.go:13\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmp6ewcsfyb_test.go:31\
    \ +0x228\ntesting.tRunner(0xc0000cc4e0, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    d := make([]int, n)\n  \
    \  d[0] = xs[1]\n    for i := 2; i < n; i++ {\n        d[i] = d[i-1] * xs[i]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [1] with length 1 [recovered]\n\tpanic: runtime error: index out of range [1]\
    \ with length 1\n\ngoroutine 34 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc0001e0030})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc0001e0030})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmp0jqvv131_test.go:14\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmp0jqvv131_test.go:32\
    \ +0x212\ntesting.tRunner(0xc0001831e0, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    derivative[0]\
    \ = xs[1]\n    for i := 0; i < len(xs); i++ {\n        derivative[i+1] = derivative[i]\
    \ * xs[i]\n    }\n    return derivative\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [5] with length 5 [recovered]\n\tpanic: runtime error: index out of range [5]\
    \ with length 5\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpmmq4ht7h_test.go:15\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpmmq4ht7h_test.go:27\
    \ +0x27f\ntesting.tRunner(0xc0000da340, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    derivative := make([]int,\
    \ n)\n    for i := 0; i < n; i++ {\n        derivative[i] = xs[i]\n    }\n   \
    \ for i := n - 1; i >= 0; i-- {\n        derivative[i] = derivative[i] * xs[i+1]\n\
    \    }\n    return derivative\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate\
    \ := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3, 1,\
    \ 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [5] with length 5 [recovered]\n\tpanic: runtime error: index out of range [5]\
    \ with length 5\n\ngoroutine 20 [running]:\ntesting.tRunner.func1.2({0x513700,\
    \ 0xc000162000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x513700, 0xc000162000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpqvdqjg7q_test.go:18\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpqvdqjg7q_test.go:30\
    \ +0x70c\ntesting.tRunner(0xc0001036c0, 0x529020)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    derivative[0]\
    \ = xs[1]\n    for i := 1; i < len(xs); i++ {\n        derivative[i] = derivative[i-1]\
    \ * xs[i]\n    }\n    return derivative\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [1] with length 1 [recovered]\n\tpanic: runtime error: index out of range [1]\
    \ with length 1\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpdkes1h00_test.go:13\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpdkes1h00_test.go:31\
    \ +0x212\ntesting.tRunner(0xc0000cc4e0, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    d := make([]int, n)\n  \
    \  d[0] = xs[0]\n    for i := 1; i < n; i++ {\n        d[i] = d[i-1] * xs[i]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    d := make([]int, n)\n  \
    \  d[0] = xs[0]\n    for i := 1; i < n; i++ {\n        d[i] = d[i-1] * xs[i]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    derivative[0]\
    \ = 1\n    for i := 1; i < len(xs); i++ {\n        derivative[i] = derivative[i-1]\
    \ * xs[i] - xs[i-1]\n    }\n    return derivative\n}\n\nfunc TestDerivative(t\
    \ *testing.T) {\n  candidate := derivative\n\ttype test struct {\n\t\tactual \
    \  interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual:\
    \ candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3,\
    \ 2, 1}), expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0,\
    \ 4}), expected: []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected:\
    \ []int{} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpvcpeuua8_test.go:37: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=1) %!s(int=-2) %!s(int=-5) %!s(int=-22) %!s(int=-114)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpvcpeuua8_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=1) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpvcpeuua8_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=1) %!s(int=-1) %!s(int=-3)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpvcpeuua8_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=1)\
    \ %!s(int=-1) %!s(int=-3) %!s(int=-1) %!s(int=-4)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpvcpeuua8_test.go:37: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    d := make([]int, n)\n  \
    \  d[0] = xs[0]\n    for i := 1; i < n; i++ {\n        d[i] = d[i-1] * xs[i]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    d := make([]int, len(xs))\n    d[0] = xs[0]\n\
    \    for i := 1; i < len(xs); i++ {\n        d[i] = d[i-1] * xs[i]\n    }\n  \
    \  return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpdu_8u2f6_test.go:37: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpdu_8u2f6_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpdu_8u2f6_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpdu_8u2f6_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpdu_8u2f6_test.go:37: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    for\
    \ i := 0; i < len(xs); i++ {\n        derivative[i] = xs[i] - xs[i-1]\n    }\n\
    \    return derivative\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate\
    \ := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3, 1,\
    \ 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [-1] [recovered]\n\tpanic: runtime error: index out of range [-1]\n\ngoroutine\
    \ 6 [running]:\ntesting.tRunner.func1.2({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpp5w9xw2j_test.go:14\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpp5w9xw2j_test.go:26\
    \ +0x24c\ntesting.tRunner(0xc0000cc4e0, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    derivative\
    \ := append(derivative, 1...)\n    for i := 0; i < len(xs); i++ {\n        derivative\
    \ := append(derivative, xs[i] - derivative[len(derivative)-1])\n    }\n    return\
    \ derivative\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpph061arj_test.go:13:41: expected selector or type assertion, found ''.''

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074013
- exit_code: 2
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    derivative\
    \ := append(derivative, 1) // first derivative is 1\n    for i := 1; i < len(xs);\
    \ i++ {\n        derivative[i] = derivative[i-1] * xs[i]\n    }\n    return derivative\n\
    }\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected: []int{1,\
    \ 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected: []int{2,\
    \ 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2, 2} },\n\
    \     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2, 0, 16}\
    \ },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp8og6t_rt_test.go:13:16: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    derivative[0]\
    \ = xs[0]\n    for i := 1; i < len(xs); i++ {\n        derivative[i] = xs[i] -\
    \ derivative[i-1] * xs[i-1]\n    }\n    return derivative\n}\n\nfunc TestDerivative(t\
    \ *testing.T) {\n  candidate := derivative\n\ttype test struct {\n\t\tactual \
    \  interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual:\
    \ candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3,\
    \ 2, 1}), expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0,\
    \ 4}), expected: []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected:\
    \ []int{} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpyjewji_5_test.go:37: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=-8) %!s(int=10) %!s(int=-16) %!s(int=69)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpyjewji_5_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=1) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpyjewji_5_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=-7) %!s(int=15)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpyjewji_5_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=-7) %!s(int=15) %!s(int=-15) %!s(int=4)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpyjewji_5_test.go:37: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    d := make([]int, len(xs))\n    d[0] = xs[1]\n\
    \    for i := 2; i < len(xs); i++ {\n        d[i] = d[i-1] * xs[i]\n    }\n  \
    \  return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [1] with length 1 [recovered]\n\tpanic: runtime error: index out of range [1]\
    \ with length 1\n\ngoroutine 34 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc0001d6030})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc0001d6030})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpho3lp9d1_test.go:13\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpho3lp9d1_test.go:31\
    \ +0x212\ntesting.tRunner(0xc00019b040, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    derivative[0]\
    \ = xs[1]\n    for i := 2; i < len(xs); i++ {\n        derivative[i] = xs[i] -\
    \ derivative[i-1]*xs[i-1]\n    }\n    return derivative\n}\n\nfunc TestDerivative(t\
    \ *testing.T) {\n  candidate := derivative\n\ttype test struct {\n\t\tactual \
    \  interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual:\
    \ candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3,\
    \ 2, 1}), expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0,\
    \ 4}), expected: []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected:\
    \ []int{} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [1] with length 1 [recovered]\n\tpanic: runtime error: index out of range [1]\
    \ with length 1\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpk5eq0jop_test.go:13\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpk5eq0jop_test.go:31\
    \ +0x239\ntesting.tRunner(0xc0000da1a0, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    derivative[0]\
    \ = xs[0]\n    for i := 1; i < len(xs); i++ {\n        derivative[i] = derivative[i-1]\
    \ * xs[i]\n    }\n    return derivative\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmp4wt6ssid_test.go:37: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmp4wt6ssid_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmp4wt6ssid_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmp4wt6ssid_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmp4wt6ssid_test.go:37: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    derivative := make([]int,\
    \ n)\n    derivative[0] = xs[0]\n    for i := 1; i < n; i++ {\n        derivative[i]\
    \ = derivative[i-1] * xs[i]\n    }\n    return derivative\n}\n\nfunc TestDerivative(t\
    \ *testing.T) {\n  candidate := derivative\n\ttype test struct {\n\t\tactual \
    \  interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual:\
    \ candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3,\
    \ 2, 1}), expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0,\
    \ 4}), expected: []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected:\
    \ []int{} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpkc05l0bv_test.go:38: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpkc05l0bv_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpkc05l0bv_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpkc05l0bv_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpkc05l0bv_test.go:38: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    d := make([]int, n)\n  \
    \  d[0] = xs[0]\n    for i := 1; i < n; i++ {\n        d[i] = d[i-1] * xs[i]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    derivative[0]\
    \ = 1\n    for i := 1; i < len(xs); i++ {\n        derivative[i] = derivative[i-1]\
    \ * xs[i] - xs[i-1]\n    }\n    return derivative\n}\n\nfunc TestDerivative(t\
    \ *testing.T) {\n  candidate := derivative\n\ttype test struct {\n\t\tactual \
    \  interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual:\
    \ candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3,\
    \ 2, 1}), expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0,\
    \ 4}), expected: []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected:\
    \ []int{} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpvcpeuua8_test.go:37: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=1) %!s(int=-2) %!s(int=-5) %!s(int=-22) %!s(int=-114)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpvcpeuua8_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=1) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpvcpeuua8_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=1) %!s(int=-1) %!s(int=-3)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpvcpeuua8_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=1)\
    \ %!s(int=-1) %!s(int=-3) %!s(int=-1) %!s(int=-4)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpvcpeuua8_test.go:37: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    derivative[0]\
    \ = 1\n    for i := 1; i < len(xs); i++ {\n        derivative[i] = derivative[i-1]\
    \ * xs[i] - xs[i-1]\n    }\n    return derivative\n}\n\nfunc TestDerivative(t\
    \ *testing.T) {\n  candidate := derivative\n\ttype test struct {\n\t\tactual \
    \  interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual:\
    \ candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3,\
    \ 2, 1}), expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0,\
    \ 4}), expected: []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected:\
    \ []int{} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpvcpeuua8_test.go:37: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=1) %!s(int=-2) %!s(int=-5) %!s(int=-22) %!s(int=-114)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpvcpeuua8_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=1) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpvcpeuua8_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=1) %!s(int=-1) %!s(int=-3)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpvcpeuua8_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=1)\
    \ %!s(int=-1) %!s(int=-3) %!s(int=-1) %!s(int=-4)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpvcpeuua8_test.go:37: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    d := make([]int, n)\n  \
    \  d[0] = xs[0]\n    for i := 1; i < n; i++ {\n        d[i] = d[i-1] * xs[i]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    derivative[0]\
    \ = xs[0]\n    for i := 1; i < len(xs); i++ {\n        derivative[i] = xs[i] -\
    \ derivative[i-1]\n    }\n    return derivative\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpjt_kw3ha_test.go:37: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=-2) %!s(int=4) %!s(int=0) %!s(int=5)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpjt_kw3ha_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=1) %!s(int=2)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpjt_kw3ha_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=-1) %!s(int=2)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpjt_kw3ha_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=-1) %!s(int=2) %!s(int=-2) %!s(int=6)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpjt_kw3ha_test.go:37: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    for\
    \ i := 0; i < len(xs); i++ {\n        derivative[i] = xs[i] - xs[i-1]\n    }\n\
    \    return derivative\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate\
    \ := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3, 1,\
    \ 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [-1] [recovered]\n\tpanic: runtime error: index out of range [-1]\n\ngoroutine\
    \ 6 [running]:\ntesting.tRunner.func1.2({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpp5w9xw2j_test.go:14\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpp5w9xw2j_test.go:26\
    \ +0x24c\ntesting.tRunner(0xc0000cc4e0, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    d := make([]int, n)\n  \
    \  d[0] = xs[1]\n    for i := 2; i < n; i++ {\n        d[i] = d[i-1] * xs[i]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [1] with length 1 [recovered]\n\tpanic: runtime error: index out of range [1]\
    \ with length 1\n\ngoroutine 34 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc0001e0030})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc0001e0030})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmp0jqvv131_test.go:14\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmp0jqvv131_test.go:32\
    \ +0x212\ntesting.tRunner(0xc0001831e0, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    derivative[0]\
    \ = xs[1]\n    for i := 1; i < len(xs); i++ {\n        derivative[i] = derivative[i-1]\
    \ * xs[i]\n    }\n    return derivative\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [1] with length 1 [recovered]\n\tpanic: runtime error: index out of range [1]\
    \ with length 1\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpdkes1h00_test.go:13\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpdkes1h00_test.go:31\
    \ +0x212\ntesting.tRunner(0xc0000cc4e0, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    derivative[0]\
    \ = xs[0]\n    for i := 1; i < len(xs); i++ {\n        derivative[i] = derivative[i-1]\
    \ * xs[i]\n    }\n    return derivative\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmp4wt6ssid_test.go:37: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmp4wt6ssid_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmp4wt6ssid_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmp4wt6ssid_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmp4wt6ssid_test.go:37: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    d := make([]int, len(xs))\n    d[0] = xs[0]\n\
    \    for i := 1; i < len(xs); i++ {\n        d[i] = d[i-1] * xs[i]\n    }\n  \
    \  return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpdu_8u2f6_test.go:37: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpdu_8u2f6_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpdu_8u2f6_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpdu_8u2f6_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpdu_8u2f6_test.go:37: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    for\
    \ i := 0; i < len(xs); i++ {\n        derivative[i] = xs[i] - xs[i-1]\n    }\n\
    \    return derivative\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate\
    \ := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3, 1,\
    \ 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [-1] [recovered]\n\tpanic: runtime error: index out of range [-1]\n\ngoroutine\
    \ 6 [running]:\ntesting.tRunner.func1.2({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpp5w9xw2j_test.go:14\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpp5w9xw2j_test.go:26\
    \ +0x24c\ntesting.tRunner(0xc0000cc4e0, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    derivative[0]\
    \ = xs[1]\n    for i := 1; i < len(xs); i++ {\n        derivative[i] = derivative[i-1]\
    \ * xs[i]\n    }\n    return derivative\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [1] with length 1 [recovered]\n\tpanic: runtime error: index out of range [1]\
    \ with length 1\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpdkes1h00_test.go:13\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpdkes1h00_test.go:31\
    \ +0x212\ntesting.tRunner(0xc0000cc4e0, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    d := make([]int, n)\n  \
    \  d[0] = xs[0]\n    for i := 1; i < n; i++ {\n        d[i] = d[i-1] * xs[i]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    derivative[0]\
    \ = xs[1]\n    for i := 2; i < len(xs); i++ {\n        derivative[i] = derivative[i-1]\
    \ * xs[i]\n    }\n    return derivative\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [1] with length 1 [recovered]\n\tpanic: runtime error: index out of range [1]\
    \ with length 1\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmp5u75r08x_test.go:13\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmp5u75r08x_test.go:31\
    \ +0x212\ntesting.tRunner(0xc0000cc680, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    d := make([]int, n)\n  \
    \  d[0] = xs[0]\n    for i := 0; i < n; i++ {\n        d[i+1] = xs[i+1] * d[i]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [5] with length 5 [recovered]\n\tpanic: runtime error: index out of range [5]\
    \ with length 5\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x513700,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x513700, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmp2nuilvq8_test.go:16\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmp2nuilvq8_test.go:28\
    \ +0x6ac\ntesting.tRunner(0xc0000cc4e0, 0x529020)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    d := make([]int, len(xs))\n    d[0] = xs[0]\n\
    \    for i := 1; i < len(xs); i++ {\n        d[i] = d[i-1] * xs[i]\n    }\n  \
    \  return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpdu_8u2f6_test.go:37: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpdu_8u2f6_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpdu_8u2f6_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpdu_8u2f6_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpdu_8u2f6_test.go:37: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    d := make([]int, len(xs))\n    d[0] = xs[1]\n\
    \    for i := 2; i < len(xs); i++ {\n        d[i] = d[i-1] * xs[i]\n    }\n  \
    \  return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [1] with length 1 [recovered]\n\tpanic: runtime error: index out of range [1]\
    \ with length 1\n\ngoroutine 34 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc0001d6030})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc0001d6030})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpho3lp9d1_test.go:13\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpho3lp9d1_test.go:31\
    \ +0x212\ntesting.tRunner(0xc00019b040, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    derivative\
    \ := append(derivative, xs[0]+(xs[1]*x)+(xs[2]*x*x)+(xs[3]*x*x*x)+(xs[4]*x*x*x*x)+(xs[5]*x*x*x*x*x)+(xs[6]*x*x*x*x*x*x)+(xs[7]*x*x*x*x*x*x*x)+(xs[8]*x*x*x*x*x*x*x*x)+(xs[9]*x*x*x*x*x*x*x*x*x)+(xs[10]*x*x*x*x*x*x*x*x*x*x*x)+(xs[11]*x*x*x*x*x*x*x*x*x*x*x*x)+(xs[12]*x*x*x*x*x*x*x*x*x*x*x*x*x)+(xs[13]*x*x*x*x*x*x*x*x*x*x*x*x*x*x)+(xs[14]*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x)+(xs[15]*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x)+(xs[16]*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x)+(xs[17]*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x)+(xs[18]*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x)+(xs[19]*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x)+(xs[20]*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x)+(xs[21]*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x)+(xs[22]*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x)+(xs[23]*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x)+(xs[24]*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x)+(xs[25]*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x)+(xs[26]*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x)+(xs[27]*x*x*x*x*x*x*x*\n\
    func TestDerivative(t *testing.T) {\n  candidate := derivative\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20}\
    \ },\n     { actual: candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n   \
    \  { actual: candidate([]int{3, 2, 1}), expected: []int{2, 2} },\n     { actual:\
    \ candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2, 0, 16} },\n     { actual:\
    \ candidate([]int{1}), expected: []int{} },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmppfwtfemi_test.go:14:6: expected ''('', found TestDerivative

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074013
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    d := make([]int, n)\n  \
    \  for i := 0; i < n; i++ {\n        d[i] = xs[i]\n    }\n    for i := n - 1;\
    \ i >= 0; i-- {\n        d[i] = d[i+1] * xs[i+1]\n    }\n    return d\n}\n\nfunc\
    \ TestDerivative(t *testing.T) {\n  candidate := derivative\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20}\
    \ },\n     { actual: candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n   \
    \  { actual: candidate([]int{3, 2, 1}), expected: []int{2, 2} },\n     { actual:\
    \ candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2, 0, 16} },\n     { actual:\
    \ candidate([]int{1}), expected: []int{} },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [5] with length 5 [recovered]\n\tpanic: runtime error: index out of range [5]\
    \ with length 5\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x513700,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x513700, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpykgfg20e_test.go:18\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpykgfg20e_test.go:30\
    \ +0x6ff\ntesting.tRunner(0xc0000da1a0, 0x529020)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074016
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    d := make([]int, n)\n  \
    \  d[0] = xs[0]\n    for i := 1; i < n; i++ {\n        d[i] = d[i-1] * xs[i]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    d := make([]int, n)\n  \
    \  d[0] = xs[1]\n    for i := 2; i < n; i++ {\n        d[i] = d[i-1] * xs[i] -\
    \ xs[i-1]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate\
    \ := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3, 1,\
    \ 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [1] with length 1 [recovered]\n\tpanic: runtime error: index out of range [1]\
    \ with length 1\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmp_m4n8zur_test.go:14\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmp_m4n8zur_test.go:32\
    \ +0x228\ntesting.tRunner(0xc0000da1a0, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    d := make([]int, n)\n  \
    \  d[0] = xs[0]\n    for i := 1; i < n; i++ {\n        d[i] = d[i-1] * xs[i]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    derivative[0]\
    \ = xs[1]\n    for i := 1; i < len(xs); i++ {\n        derivative[i] = derivative[i-1]\
    \ * xs[i]\n    }\n    return derivative\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [1] with length 1 [recovered]\n\tpanic: runtime error: index out of range [1]\
    \ with length 1\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpdkes1h00_test.go:13\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpdkes1h00_test.go:31\
    \ +0x212\ntesting.tRunner(0xc0000cc4e0, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    d := make([]int, len(xs))\n    d[0] = xs[1]\n\
    \    for i := 2; i < len(xs); i++ {\n        d[i] = xs[i] - xs[i-1]\n    }\n \
    \   return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [1] with length 1 [recovered]\n\tpanic: runtime error: index out of range [1]\
    \ with length 1\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmposcxre8q_test.go:13\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmposcxre8q_test.go:31\
    \ +0x1ff\ntesting.tRunner(0xc0000da1a0, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074016
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    d := make([]int, n)\n  \
    \  d[0] = xs[0]\n    for i := 1; i < n; i++ {\n        d[i] = d[i-1] * xs[i]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    derivative[0]\
    \ = xs[1]\n    for i := 2; i < len(xs); i++ {\n        derivative[i] = xs[i-1]\
    \ + xs[i] * derivative[i-1]\n    }\n    return derivative\n}\n\nfunc TestDerivative(t\
    \ *testing.T) {\n  candidate := derivative\n\ttype test struct {\n\t\tactual \
    \  interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual:\
    \ candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3,\
    \ 2, 1}), expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0,\
    \ 4}), expected: []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected:\
    \ []int{} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [1] with length 1 [recovered]\n\tpanic: runtime error: index out of range [1]\
    \ with length 1\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc000160030})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000160030})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpa6jcsixi_test.go:13\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpa6jcsixi_test.go:31\
    \ +0x228\ntesting.tRunner(0xc000103520, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074017
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    derivative[0]\
    \ = xs[0]\n    for i := 0; i < len(xs); i++ {\n        derivative[i+1] = xs[i+1]\
    \ * derivative[i]\n    }\n    return derivative\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [5] with length 5 [recovered]\n\tpanic: runtime error: index out of range [5]\
    \ with length 5\n\ngoroutine 34 [running]:\ntesting.tRunner.func1.2({0x513700,\
    \ 0xc0001d6000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x513700, 0xc0001d6000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpqctza6mw_test.go:15\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpqctza6mw_test.go:27\
    \ +0x6ac\ntesting.tRunner(0xc000198ea0, 0x529020)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074018
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    d := make([]int, len(xs))\n    d[0] = xs[0]\n\
    \    for i := 1; i < len(xs); i++ {\n        d[i] = d[i-1] * xs[i]\n    }\n  \
    \  return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpdu_8u2f6_test.go:37: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpdu_8u2f6_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpdu_8u2f6_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpdu_8u2f6_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpdu_8u2f6_test.go:37: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    d := make([]int, n)\n  \
    \  d[0] = xs[0]\n    for i := 1; i < n; i++ {\n        d[i] = d[i-1] * xs[i]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    d := make([]int, len(xs))\n    d[0] = xs[0]\n\
    \    for i := 1; i < len(xs); i++ {\n        d[i] = d[i-1] * xs[i]\n    }\n  \
    \  return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpdu_8u2f6_test.go:37: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpdu_8u2f6_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpdu_8u2f6_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpdu_8u2f6_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpdu_8u2f6_test.go:37: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    d := make([]int, len(xs))\n    d[0] = xs[1]\n\
    \    for i := 2; i < len(xs); i++ {\n        d[i] = d[i-1] * xs[i] - xs[i-1]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [1] with length 1 [recovered]\n\tpanic: runtime error: index out of range [1]\
    \ with length 1\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmp6ewcsfyb_test.go:13\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmp6ewcsfyb_test.go:31\
    \ +0x228\ntesting.tRunner(0xc0000cc4e0, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    d := make([]int, n)\n  \
    \  d[0] = xs[0]\n    for i := 1; i < n; i++ {\n        d[i] = xs[i] - d[i-1]*xs[i-1]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpihg2a8is_test.go:38: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=-8) %!s(int=10) %!s(int=-16) %!s(int=69)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpihg2a8is_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=1) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpihg2a8is_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=-7) %!s(int=15)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpihg2a8is_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=-7) %!s(int=15) %!s(int=-15) %!s(int=4)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpihg2a8is_test.go:38: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074018
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    derivative[0]\
    \ = xs[1]\n    for i := 2; i < len(xs); i++ {\n        derivative[i] = derivative[i-1]\
    \ * xs[i]\n    }\n    return derivative\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [1] with length 1 [recovered]\n\tpanic: runtime error: index out of range [1]\
    \ with length 1\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmp5u75r08x_test.go:13\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmp5u75r08x_test.go:31\
    \ +0x212\ntesting.tRunner(0xc0000cc680, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    for\
    \ i := 0; i < len(xs); i++ {\n        derivative[i] = xs[i]\n    }\n    for i\
    \ := 0; i < len(xs); i++ {\n        derivative[i] *= -1\n    }\n    return derivative\n\
    }\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected: []int{1,\
    \ 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected: []int{2,\
    \ 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2, 2} },\n\
    \     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2, 0, 16}\
    \ },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpeewledj4_test.go:39: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=-3) %!s(int=-1) %!s(int=-2) %!s(int=-4) %!s(int=-5)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpeewledj4_test.go:39:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=-1) %!s(int=-2) %!s(int=-3)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpeewledj4_test.go:39:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=-3) %!s(int=-2) %!s(int=-1)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpeewledj4_test.go:39:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=-3)\
    \ %!s(int=-2) %!s(int=-1) %!s(int=0) %!s(int=-4)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpeewledj4_test.go:39: expected '[]', got '[%!s(int=-1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074018
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    d := make([]int, n)\n  \
    \  d[0] = xs[0]\n    for i := 1; i < n; i++ {\n        d[i] = d[i-1] * xs[i]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    derivative[0]\
    \ = xs[0]\n    for i := 1; i < len(xs); i++ {\n        derivative[i] = derivative[i-1]\
    \ * xs[i]\n    }\n    return derivative\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmp4wt6ssid_test.go:37: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmp4wt6ssid_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmp4wt6ssid_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmp4wt6ssid_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmp4wt6ssid_test.go:37: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    derivative[0]\
    \ = xs[1]\n    for i := 2; i < len(xs); i++ {\n        derivative[i] = derivative[i-1]\
    \ * xs[i]\n    }\n    return derivative\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [1] with length 1 [recovered]\n\tpanic: runtime error: index out of range [1]\
    \ with length 1\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmp5u75r08x_test.go:13\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmp5u75r08x_test.go:31\
    \ +0x212\ntesting.tRunner(0xc0000cc680, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    for\
    \ i := 0; i < len(xs); i++ {\n        derivative[i] = xs[i] - xs[i-1]\n    }\n\
    \    return derivative\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate\
    \ := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3, 1,\
    \ 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [-1] [recovered]\n\tpanic: runtime error: index out of range [-1]\n\ngoroutine\
    \ 6 [running]:\ntesting.tRunner.func1.2({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpp5w9xw2j_test.go:14\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpp5w9xw2j_test.go:26\
    \ +0x24c\ntesting.tRunner(0xc0000cc4e0, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    d := make([]int, len(xs))\n    d[0] = xs[1]\n\
    \    for i := 2; i < len(xs); i++ {\n        d[i] = xs[i-1] * d[i-2]\n    }\n\
    \    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [1] with length 1 [recovered]\n\tpanic: runtime error: index out of range [1]\
    \ with length 1\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpgrx2zn4h_test.go:13\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpgrx2zn4h_test.go:31\
    \ +0x212\ntesting.tRunner(0xc0000cc4e0, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074018
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    derivative[0]\
    \ = xs[0]\n    for i := 1; i < len(xs); i++ {\n        derivative[i] = xs[i] -\
    \ derivative[i-1]\n    }\n    return derivative\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpjt_kw3ha_test.go:37: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=-2) %!s(int=4) %!s(int=0) %!s(int=5)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpjt_kw3ha_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=1) %!s(int=2)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpjt_kw3ha_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=-1) %!s(int=2)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpjt_kw3ha_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=-1) %!s(int=2) %!s(int=-2) %!s(int=6)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpjt_kw3ha_test.go:37: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    for\
    \ i := 0; i < len(xs); i++ {\n        derivative[i] = xs[i] - xs[i-1]\n    }\n\
    \    return derivative\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate\
    \ := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3, 1,\
    \ 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [-1] [recovered]\n\tpanic: runtime error: index out of range [-1]\n\ngoroutine\
    \ 6 [running]:\ntesting.tRunner.func1.2({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpp5w9xw2j_test.go:14\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpp5w9xw2j_test.go:26\
    \ +0x24c\ntesting.tRunner(0xc0000cc4e0, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    derivative[0]\
    \ = xs[1]\n    for i := 1; i < len(xs); i++ {\n        derivative[i] = xs[i] -\
    \ derivative[i-1]*xs[i-1]\n    }\n    return derivative\n}\n\nfunc TestDerivative(t\
    \ *testing.T) {\n  candidate := derivative\n\ttype test struct {\n\t\tactual \
    \  interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual:\
    \ candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3,\
    \ 2, 1}), expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0,\
    \ 4}), expected: []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected:\
    \ []int{} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [1] with length 1 [recovered]\n\tpanic: runtime error: index out of range [1]\
    \ with length 1\n\ngoroutine 34 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc0001d6030})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc0001d6030})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpq4yfpbxx_test.go:13\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpq4yfpbxx_test.go:31\
    \ +0x239\ntesting.tRunner(0xc000198ea0, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074018
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    d := make([]int, n)\n  \
    \  d[0] = xs[0]\n    for i := 1; i < n; i++ {\n        d[i] = d[i-1] * xs[i]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    d := make([]int, len(xs))\n    d[0] = xs[1]\n\
    \    for i := 2; i < len(xs); i++ {\n        d[i] = xs[i] - xs[i-1]\n    }\n \
    \   return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [1] with length 1 [recovered]\n\tpanic: runtime error: index out of range [1]\
    \ with length 1\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmposcxre8q_test.go:13\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmposcxre8q_test.go:31\
    \ +0x1ff\ntesting.tRunner(0xc0000da1a0, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074016
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    d := make([]int, n)\n  \
    \  d[0] = xs[0]\n    for i := 1; i < n; i++ {\n        d[i] = d[i-1] * xs[i]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    d := make([]int, len(xs))\n    d[0] = xs[0]\n\
    \    for i := 1; i < len(xs); i++ {\n        d[i] = d[i-1] * xs[i]\n    }\n  \
    \  return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpdu_8u2f6_test.go:37: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpdu_8u2f6_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpdu_8u2f6_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpdu_8u2f6_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpdu_8u2f6_test.go:37: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    derivative[0]\
    \ = xs[1]\n    for i := 1; i < len(xs); i++ {\n        derivative[i] = derivative[i-1]\
    \ * xs[i]\n    }\n    return derivative\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [1] with length 1 [recovered]\n\tpanic: runtime error: index out of range [1]\
    \ with length 1\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpdkes1h00_test.go:13\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpdkes1h00_test.go:31\
    \ +0x212\ntesting.tRunner(0xc0000cc4e0, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    for\
    \ i := 0; i < len(xs); i++ {\n        derivative[i] = xs[i]\n    }\n    for i\
    \ := len(xs) - 1; i >= 0; i-- {\n        derivative[i] *= xs[i]\n    }\n    return\
    \ derivative\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpjxpgsgau_test.go:39: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=9) %!s(int=1) %!s(int=4) %!s(int=16) %!s(int=25)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpjxpgsgau_test.go:39:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=4) %!s(int=9)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpjxpgsgau_test.go:39:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=9) %!s(int=4) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpjxpgsgau_test.go:39:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=9)\
    \ %!s(int=4) %!s(int=1) %!s(int=0) %!s(int=16)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpjxpgsgau_test.go:39: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074018
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    d := make([]int, n)\n  \
    \  d[0] = xs[0]\n    for i := 1; i < n; i++ {\n        d[i] = xs[i] - d[i-1]*xs[i-1]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpihg2a8is_test.go:38: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=-8) %!s(int=10) %!s(int=-16) %!s(int=69)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpihg2a8is_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=1) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpihg2a8is_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=-7) %!s(int=15)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpihg2a8is_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=-7) %!s(int=15) %!s(int=-15) %!s(int=4)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpihg2a8is_test.go:38: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074018
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    d := make([]int, len(xs))\n    d[0] = xs[1]\n\
    \    for i := 1; i < len(xs); i++ {\n        d[i] = d[i-1] * xs[i]\n    }\n  \
    \  return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [1] with length 1 [recovered]\n\tpanic: runtime error: index out of range [1]\
    \ with length 1\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc0001ce030})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc0001ce030})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpnx6k0bjq_test.go:13\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpnx6k0bjq_test.go:31\
    \ +0x212\ntesting.tRunner(0xc00019b1e0, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074018
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    d := make([]int, len(xs))\n    d[0] = xs[0]\n\
    \    for i := 1; i < len(xs); i++ {\n        d[i] = d[i-1] * xs[i]\n    }\n  \
    \  return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpdu_8u2f6_test.go:37: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpdu_8u2f6_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpdu_8u2f6_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpdu_8u2f6_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpdu_8u2f6_test.go:37: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    for\
    \ i := 0; i < len(xs); i++ {\n        derivative[i] = xs[i]\n    }\n    derivative[len(xs)-1]\
    \ = 1\n    return derivative\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate\
    \ := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3, 1,\
    \ 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmphghhqc8x_test.go:37: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=1) %!s(int=2) %!s(int=4) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmphghhqc8x_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmphghhqc8x_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=2) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmphghhqc8x_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=2) %!s(int=1) %!s(int=0) %!s(int=1)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmphghhqc8x_test.go:37: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074018
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    for\
    \ i := 0; i < len(xs); i++ {\n        derivative[i] = xs[i]\n    }\n    for i\
    \ := 1; i < len(xs); i++ {\n        derivative[i] = derivative[i-1] * xs[i]\n\
    \    }\n    return derivative\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate\
    \ := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3, 1,\
    \ 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpmy6_tdtg_test.go:39: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpmy6_tdtg_test.go:39:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpmy6_tdtg_test.go:39:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpmy6_tdtg_test.go:39:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpmy6_tdtg_test.go:39: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    for\
    \ i := 0; i < len(xs); i++ {\n        derivative[i] = xs[i] - xs[i-1]\n    }\n\
    \    return derivative\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate\
    \ := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3, 1,\
    \ 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [-1] [recovered]\n\tpanic: runtime error: index out of range [-1]\n\ngoroutine\
    \ 6 [running]:\ntesting.tRunner.func1.2({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpp5w9xw2j_test.go:14\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpp5w9xw2j_test.go:26\
    \ +0x24c\ntesting.tRunner(0xc0000cc4e0, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    d := make([]int, n)\n  \
    \  d[0] = xs[0]\n    for i := 1; i < n; i++ {\n        d[i] = xs[i] - d[i-1]*xs[i-1]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpihg2a8is_test.go:38: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=-8) %!s(int=10) %!s(int=-16) %!s(int=69)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpihg2a8is_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=1) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpihg2a8is_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=-7) %!s(int=15)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpihg2a8is_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=-7) %!s(int=15) %!s(int=-15) %!s(int=4)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpihg2a8is_test.go:38: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074018
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    derivative[0]\
    \ = 1\n    for i := 1; i < len(xs); i++ {\n        derivative[i] = derivative[i-1]\
    \ * xs[i] - xs[i-1]\n    }\n    return derivative\n}\n\nfunc TestDerivative(t\
    \ *testing.T) {\n  candidate := derivative\n\ttype test struct {\n\t\tactual \
    \  interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual:\
    \ candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3,\
    \ 2, 1}), expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0,\
    \ 4}), expected: []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected:\
    \ []int{} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpvcpeuua8_test.go:37: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=1) %!s(int=-2) %!s(int=-5) %!s(int=-22) %!s(int=-114)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpvcpeuua8_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=1) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpvcpeuua8_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=1) %!s(int=-1) %!s(int=-3)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpvcpeuua8_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=1)\
    \ %!s(int=-1) %!s(int=-3) %!s(int=-1) %!s(int=-4)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpvcpeuua8_test.go:37: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    for\
    \ i := 0; i < len(xs); i++ {\n        derivative[i] = xs[i] - xs[i-1]\n    }\n\
    \    return derivative\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate\
    \ := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3, 1,\
    \ 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [-1] [recovered]\n\tpanic: runtime error: index out of range [-1]\n\ngoroutine\
    \ 6 [running]:\ntesting.tRunner.func1.2({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpp5w9xw2j_test.go:14\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpp5w9xw2j_test.go:26\
    \ +0x24c\ntesting.tRunner(0xc0000cc4e0, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    for\
    \ i := 0; i < len(xs); i++ {\n        derivative[i] = xs[i] - xs[i-1]\n    }\n\
    \    return derivative\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate\
    \ := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3, 1,\
    \ 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [-1] [recovered]\n\tpanic: runtime error: index out of range [-1]\n\ngoroutine\
    \ 6 [running]:\ntesting.tRunner.func1.2({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpp5w9xw2j_test.go:14\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpp5w9xw2j_test.go:26\
    \ +0x24c\ntesting.tRunner(0xc0000cc4e0, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    d := make([]int, n)\n  \
    \  d[0] = xs[0]\n    for i := 1; i < n; i++ {\n        d[i] = d[i-1] * xs[i]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    d := make([]int, n)\n  \
    \  d[0] = xs[0]\n    for i := 1; i < n; i++ {\n        d[i] = d[i-1] * xs[i]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    for\
    \ i := 0; i < len(xs); i++ {\n        derivative[i] = xs[i] - xs[i-1]\n    }\n\
    \    return derivative\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate\
    \ := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3, 1,\
    \ 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [-1] [recovered]\n\tpanic: runtime error: index out of range [-1]\n\ngoroutine\
    \ 6 [running]:\ntesting.tRunner.func1.2({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpp5w9xw2j_test.go:14\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpp5w9xw2j_test.go:26\
    \ +0x24c\ntesting.tRunner(0xc0000cc4e0, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    d := make([]int, n)\n  \
    \  d[0] = xs[0]\n    for i := 1; i < n; i++ {\n        d[i] = d[i-1] * xs[i]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    derivative[0]\
    \ = xs[0]\n    for i := 1; i < len(xs); i++ {\n        derivative[i] = derivative[i-1]\
    \ * xs[i]\n    }\n    return derivative\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmp4wt6ssid_test.go:37: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmp4wt6ssid_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmp4wt6ssid_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmp4wt6ssid_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmp4wt6ssid_test.go:37: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    derivative[0]\
    \ = xs[1]\n    for i := 2; i < len(xs); i++ {\n        derivative[i] = xs[i] -\
    \ derivative[i-1]*xs[i-1]\n    }\n    return derivative\n}\n\nfunc TestDerivative(t\
    \ *testing.T) {\n  candidate := derivative\n\ttype test struct {\n\t\tactual \
    \  interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual:\
    \ candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3,\
    \ 2, 1}), expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0,\
    \ 4}), expected: []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected:\
    \ []int{} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [1] with length 1 [recovered]\n\tpanic: runtime error: index out of range [1]\
    \ with length 1\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpk5eq0jop_test.go:13\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpk5eq0jop_test.go:31\
    \ +0x239\ntesting.tRunner(0xc0000da1a0, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    derivative[0]\
    \ = xs[0]\n    for i := 1; i < len(xs); i++ {\n        derivative[i] = xs[i] -\
    \ derivative[i-1]\n    }\n    return derivative\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpjt_kw3ha_test.go:37: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=-2) %!s(int=4) %!s(int=0) %!s(int=5)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpjt_kw3ha_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=1) %!s(int=2)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpjt_kw3ha_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=-1) %!s(int=2)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpjt_kw3ha_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=-1) %!s(int=2) %!s(int=-2) %!s(int=6)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpjt_kw3ha_test.go:37: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    derivative[0]\
    \ = xs[1]\n    for i := 1; i < len(xs); i++ {\n        derivative[i] = xs[i] -\
    \ derivative[i-1] * xs[i-1]\n    }\n    return derivative\n}\n\nfunc TestDerivative(t\
    \ *testing.T) {\n  candidate := derivative\n\ttype test struct {\n\t\tactual \
    \  interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual:\
    \ candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3,\
    \ 2, 1}), expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0,\
    \ 4}), expected: []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected:\
    \ []int{} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [1] with length 1 [recovered]\n\tpanic: runtime error: index out of range [1]\
    \ with length 1\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpaogiunl7_test.go:13\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpaogiunl7_test.go:31\
    \ +0x239\ntesting.tRunner(0xc0000da340, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074018
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    derivative[0]\
    \ = xs[0]\n    for i := 1; i < len(xs); i++ {\n        derivative[i] = derivative[i-1]\
    \ * xs[i]\n    }\n    return derivative\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmp4wt6ssid_test.go:37: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmp4wt6ssid_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmp4wt6ssid_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmp4wt6ssid_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmp4wt6ssid_test.go:37: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    for\
    \ i := 0; i < len(xs); i++ {\n        derivative[i] = xs[i] - xs[i-1]\n    }\n\
    \    return derivative\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate\
    \ := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3, 1,\
    \ 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [-1] [recovered]\n\tpanic: runtime error: index out of range [-1]\n\ngoroutine\
    \ 6 [running]:\ntesting.tRunner.func1.2({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpp5w9xw2j_test.go:14\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpp5w9xw2j_test.go:26\
    \ +0x24c\ntesting.tRunner(0xc0000cc4e0, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    derivative[0]\
    \ = xs[0]\n    for i := 1; i < len(xs); i++ {\n        derivative[i] = derivative[i-1]\
    \ * xs[i]\n    }\n    return derivative\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmp4wt6ssid_test.go:37: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmp4wt6ssid_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmp4wt6ssid_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmp4wt6ssid_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmp4wt6ssid_test.go:37: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    d := make([]int, len(xs))\n    d[0] = xs[1]\n\
    \    for i := 2; i < len(xs); i++ {\n        d[i] = d[i-1] * xs[i] - xs[i-1]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [1] with length 1 [recovered]\n\tpanic: runtime error: index out of range [1]\
    \ with length 1\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmp6ewcsfyb_test.go:13\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmp6ewcsfyb_test.go:31\
    \ +0x228\ntesting.tRunner(0xc0000cc4e0, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    d := make([]int, n)\n  \
    \  d[0] = xs[0]\n    for i := 1; i < n; i++ {\n        d[i] = xs[i] - d[i-1]*xs[i-1]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpihg2a8is_test.go:38: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=-8) %!s(int=10) %!s(int=-16) %!s(int=69)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpihg2a8is_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=1) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpihg2a8is_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=-7) %!s(int=15)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpihg2a8is_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=-7) %!s(int=15) %!s(int=-15) %!s(int=4)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpihg2a8is_test.go:38: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074018
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    derivative[0]\
    \ = 1\n    for i := 1; i < len(xs); i++ {\n        derivative[i] = derivative[i-1]\
    \ * xs[i] - xs[i-1]\n    }\n    return derivative\n}\n\nfunc TestDerivative(t\
    \ *testing.T) {\n  candidate := derivative\n\ttype test struct {\n\t\tactual \
    \  interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual:\
    \ candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3,\
    \ 2, 1}), expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0,\
    \ 4}), expected: []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected:\
    \ []int{} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpvcpeuua8_test.go:37: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=1) %!s(int=-2) %!s(int=-5) %!s(int=-22) %!s(int=-114)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpvcpeuua8_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=1) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpvcpeuua8_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=1) %!s(int=-1) %!s(int=-3)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpvcpeuua8_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=1)\
    \ %!s(int=-1) %!s(int=-3) %!s(int=-1) %!s(int=-4)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpvcpeuua8_test.go:37: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    for\
    \ i := 0; i < len(xs); i++ {\n        derivative[i] = xs[i] - xs[i-1]\n    }\n\
    \    return derivative\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate\
    \ := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3, 1,\
    \ 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [-1] [recovered]\n\tpanic: runtime error: index out of range [-1]\n\ngoroutine\
    \ 6 [running]:\ntesting.tRunner.func1.2({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpp5w9xw2j_test.go:14\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpp5w9xw2j_test.go:26\
    \ +0x24c\ntesting.tRunner(0xc0000cc4e0, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    d := make([]int, n)\n  \
    \  d[0] = xs[0]\n    for i := 1; i < n; i++ {\n        d[i] = d[i-1] * xs[i]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    d := make([]int, n)\n  \
    \  d[0] = xs[0]\n    for i := 1; i < n; i++ {\n        d[i] = xs[i]\n    }\n \
    \   for i := n - 1; i > 0; i-- {\n        d[i] = d[i+1] * xs[i] - d[i]\n    }\n\
    \    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [5] with length 5 [recovered]\n\tpanic: runtime error: index out of range [5]\
    \ with length 5\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x513700,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x513700, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpr9rxi2p8_test.go:19\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpr9rxi2p8_test.go:31\
    \ +0x6ff\ntesting.tRunner(0xc0000cc4e0, 0x529020)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074018
- exit_code: 2
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    derivative\
    \ := append(derivative, xs[0])\n    for i := 1; i < len(xs); i++ {\n        derivative[i]\
    \ = derivative[i-1] * xs[i]\n    }\n    return derivative\n}\n\nfunc TestDerivative(t\
    \ *testing.T) {\n  candidate := derivative\n\ttype test struct {\n\t\tactual \
    \  interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual:\
    \ candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3,\
    \ 2, 1}), expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0,\
    \ 4}), expected: []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected:\
    \ []int{} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp6w56ctsv_test.go:13:16: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074017
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    d := make([]int, len(xs))\n    d[0] = xs[1]\n\
    \    for i := 2; i < len(xs); i++ {\n        d[i] = xs[i-1] * d[i-1]\n    }\n\
    \    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [1] with length 1 [recovered]\n\tpanic: runtime error: index out of range [1]\
    \ with length 1\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc0001ce030})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc0001ce030})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpjonaw7d9_test.go:13\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpjonaw7d9_test.go:31\
    \ +0x212\ntesting.tRunner(0xc00019b040, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.007s\nFAIL\n"
  timestamp: 1660074018
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    d := make([]int, n)\n  \
    \  d[0] = xs[0]\n    for i := 1; i < n; i++ {\n        d[i] = d[i-1] * xs[i]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    derivative := make([]int,\
    \ n)\n    for i := 0; i < n; i++ {\n        derivative[i] = xs[i]\n    }\n   \
    \ for i := n - 1; i >= 0; i-- {\n        derivative[i] *= xs[i]\n    }\n    return\
    \ derivative\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmp7a1j8zpf_test.go:40: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=9) %!s(int=1) %!s(int=4) %!s(int=16) %!s(int=25)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmp7a1j8zpf_test.go:40:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=4) %!s(int=9)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmp7a1j8zpf_test.go:40:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=9) %!s(int=4) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmp7a1j8zpf_test.go:40:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=9)\
    \ %!s(int=4) %!s(int=1) %!s(int=0) %!s(int=16)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmp7a1j8zpf_test.go:40: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074018
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    d := make([]int, n)\n  \
    \  d[0] = xs[0]\n    for i := 1; i < n; i++ {\n        d[i] = d[i-1] * xs[i]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    for\
    \ i := 0; i < len(xs); i++ {\n        derivative[i] = xs[i] - xs[i-1]\n    }\n\
    \    return derivative\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate\
    \ := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3, 1,\
    \ 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [-1] [recovered]\n\tpanic: runtime error: index out of range [-1]\n\ngoroutine\
    \ 6 [running]:\ntesting.tRunner.func1.2({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpp5w9xw2j_test.go:14\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpp5w9xw2j_test.go:26\
    \ +0x24c\ntesting.tRunner(0xc0000cc4e0, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    d := make([]int, len(xs))\n    d[0] = xs[1]\n\
    \    for i := 0; i < len(xs); i++ {\n        d[i+1] = xs[i+1] * d[i]\n    }\n\
    \    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [5] with length 5 [recovered]\n\tpanic: runtime error: index out of range [5]\
    \ with length 5\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmppejtfa94_test.go:15\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmppejtfa94_test.go:27\
    \ +0x272\ntesting.tRunner(0xc0000cc4e0, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074018
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    d := make([]int, len(xs))\n    d[0] = xs[1]\n\
    \    for i := 0; i < len(xs); i++ {\n        d[i+1] = d[i] * xs[i]\n    }\n  \
    \  return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [5] with length 5 [recovered]\n\tpanic: runtime error: index out of range [5]\
    \ with length 5\n\ngoroutine 4 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmplghq5kyw_test.go:15\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmplghq5kyw_test.go:27\
    \ +0x27f\ntesting.tRunner(0xc0000d8000, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.007s\nFAIL\n"
  timestamp: 1660074018
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    for\
    \ i := 0; i < len(xs); i++ {\n        derivative[i] = xs[i] - xs[i-1]\n    }\n\
    \    return derivative\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate\
    \ := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3, 1,\
    \ 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [-1] [recovered]\n\tpanic: runtime error: index out of range [-1]\n\ngoroutine\
    \ 6 [running]:\ntesting.tRunner.func1.2({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpp5w9xw2j_test.go:14\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpp5w9xw2j_test.go:26\
    \ +0x24c\ntesting.tRunner(0xc0000cc4e0, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    for\
    \ i := 0; i < len(xs); i++ {\n        derivative[i] = xs[i] - xs[i-1]\n    }\n\
    \    return derivative\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate\
    \ := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3, 1,\
    \ 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [-1] [recovered]\n\tpanic: runtime error: index out of range [-1]\n\ngoroutine\
    \ 6 [running]:\ntesting.tRunner.func1.2({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpp5w9xw2j_test.go:14\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpp5w9xw2j_test.go:26\
    \ +0x24c\ntesting.tRunner(0xc0000cc4e0, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    d := make([]int, n)\n  \
    \  d[0] = xs[0]\n    for i := 1; i < n; i++ {\n        d[i] = d[i-1] * xs[i]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    d := make([]int, n)\n  \
    \  d[0] = xs[0]\n    for i := 1; i < n; i++ {\n        d[i] = d[i-1] * xs[i]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    d := make([]int, n)\n  \
    \  d[0] = xs[0]\n    for i := 1; i < n; i++ {\n        d[i] = xs[i]\n    }\n \
    \   for i := n - 1; i > 0; i-- {\n        d[i] = d[i] * xs[i+1]\n    }\n    return\
    \ d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected: []int{1,\
    \ 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected: []int{2,\
    \ 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2, 2} },\n\
    \     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2, 0, 16}\
    \ },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [5] with length 5 [recovered]\n\tpanic: runtime error: index out of range [5]\
    \ with length 5\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x513700,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x513700, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpa1qbs43l_test.go:19\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpa1qbs43l_test.go:31\
    \ +0x6df\ntesting.tRunner(0xc0000da1a0, 0x529020)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074018
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    for\
    \ i := 0; i < len(xs); i++ {\n        derivative[i] = xs[i]\n    }\n    derivative[len(xs)-1]\
    \ = 1\n    return derivative\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate\
    \ := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3, 1,\
    \ 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmphghhqc8x_test.go:37: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=1) %!s(int=2) %!s(int=4) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmphghhqc8x_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmphghhqc8x_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=2) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmphghhqc8x_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=2) %!s(int=1) %!s(int=0) %!s(int=1)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmphghhqc8x_test.go:37: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074018
- exit_code: 2
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    derivative\
    \ := append(derivative, 1); //first derivative is 1\n    for i := 0; i < len(xs);\
    \ i++ {\n        derivative[i] = derivative[i-1] * xs[i]\n    }\n    return derivative\n\
    }\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected: []int{1,\
    \ 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected: []int{2,\
    \ 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2, 2} },\n\
    \     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2, 0, 16}\
    \ },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpd3qqb7re_test.go:13:16: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074017
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    d := make([]int, len(xs))\n    for i := 0;\
    \ i < len(xs); i++ {\n        d[i] = xs[i] - xs[i-1]\n    }\n    return d\n}\n\
    \nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected: []int{1,\
    \ 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected: []int{2,\
    \ 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2, 2} },\n\
    \     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2, 0, 16}\
    \ },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [-1] [recovered]\n\tpanic: runtime error: index out of range [-1]\n\ngoroutine\
    \ 6 [running]:\ntesting.tRunner.func1.2({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpv_ouvlzk_test.go:14\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpv_ouvlzk_test.go:26\
    \ +0x24c\ntesting.tRunner(0xc0000da340, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074018
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    d := make([]int, n)\n  \
    \  d[0] = xs[0]\n    for i := 1; i < n; i++ {\n        d[i] = d[i-1] * xs[i]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    d := make([]int, n)\n  \
    \  d[0] = xs[0]\n    for i := 1; i < n; i++ {\n        d[i] = d[i-1] * xs[i]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    d := make([]int, n)\n  \
    \  d[0] = xs[0]\n    for i := 1; i < n; i++ {\n        d[i] = xs[i] - d[i-1] *\
    \ xs[i-1]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate\
    \ := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3, 1,\
    \ 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpu4jetumo_test.go:38: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=-8) %!s(int=10) %!s(int=-16) %!s(int=69)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpu4jetumo_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=1) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpu4jetumo_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=-7) %!s(int=15)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpu4jetumo_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=-7) %!s(int=15) %!s(int=-15) %!s(int=4)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpu4jetumo_test.go:38: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074018
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    derivative := make([]int,\
    \ n)\n    derivative[0] = xs[0]\n    for i := 1; i < n; i++ {\n        derivative[i]\
    \ = derivative[i-1] * xs[i]\n    }\n    return derivative\n}\n\nfunc TestDerivative(t\
    \ *testing.T) {\n  candidate := derivative\n\ttype test struct {\n\t\tactual \
    \  interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual:\
    \ candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3,\
    \ 2, 1}), expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0,\
    \ 4}), expected: []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected:\
    \ []int{} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpkc05l0bv_test.go:38: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpkc05l0bv_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpkc05l0bv_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpkc05l0bv_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpkc05l0bv_test.go:38: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    d := make([]int, n)\n  \
    \  d[0] = xs[0]\n    for i := 1; i < n; i++ {\n        d[i] = d[i-1] * xs[i]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 2
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    derivative\
    \ := append(derivative, 1) // first derivative is 1\n    for i := 1; i < len(xs);\
    \ i++ {\n        derivative[i] = derivative[i-1] * xs[i]\n    }\n    return derivative\n\
    }\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected: []int{1,\
    \ 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected: []int{2,\
    \ 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2, 2} },\n\
    \     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2, 0, 16}\
    \ },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp8og6t_rt_test.go:13:16: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074015
- exit_code: 2
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    derivative\
    \ := append(derivative, xs[0]+x[1]*x[0])\n    for i := 1; i < len(xs); i++ {\n\
    \        derivative := append(derivative, xs[i] + xs[i-1]*x[i-1])\n    }\n   \
    \ return derivative\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp25mn8t89_test.go:13:16: no new variables on left side of :=

    /tmp/tmp25mn8t89_test.go:13:44: undefined: x

    /tmp/tmp25mn8t89_test.go:15:9: derivative declared but not used

    /tmp/tmp25mn8t89_test.go:15:58: undefined: x

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074017
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    d := make([]int, n)\n  \
    \  d[0] = xs[0]\n    for i := 1; i < n; i++ {\n        d[i] = d[i-1] * xs[i]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    derivative[0]\
    \ = 1\n    for i := 1; i < len(xs); i++ {\n        derivative[i] = derivative[i-1]\
    \ * xs[i] - xs[i-1]\n    }\n    return derivative\n}\n\nfunc TestDerivative(t\
    \ *testing.T) {\n  candidate := derivative\n\ttype test struct {\n\t\tactual \
    \  interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual:\
    \ candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3,\
    \ 2, 1}), expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0,\
    \ 4}), expected: []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected:\
    \ []int{} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpvcpeuua8_test.go:37: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=1) %!s(int=-2) %!s(int=-5) %!s(int=-22) %!s(int=-114)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpvcpeuua8_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=1) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpvcpeuua8_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=1) %!s(int=-1) %!s(int=-3)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpvcpeuua8_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=1)\
    \ %!s(int=-1) %!s(int=-3) %!s(int=-1) %!s(int=-4)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpvcpeuua8_test.go:37: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    d := make([]int, n)\n  \
    \  d[0] = xs[0]\n    for i := 1; i < n; i++ {\n        d[i] = d[i-1] * xs[i]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    d := make([]int, len(xs))\n    d[0] = xs[0]\n\
    \    for i := 1; i < len(xs); i++ {\n        d[i] = xs[i] - xs[i-1]\n    }\n \
    \   return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpjtb1a1hr_test.go:37: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=-2) %!s(int=1) %!s(int=2) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpjtb1a1hr_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=1) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpjtb1a1hr_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=-1) %!s(int=-1)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpjtb1a1hr_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=-1) %!s(int=-1) %!s(int=-1) %!s(int=4)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpjtb1a1hr_test.go:37: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074018
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    d := make([]int, n)\n  \
    \  d[0] = xs[0]\n    for i := 1; i < n; i++ {\n        d[i] = d[i-1] * xs[i]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    d := make([]int, len(xs))\n    d[0] = xs[1]\n\
    \    for i := 2; i < len(xs); i++ {\n        d[i] = xs[i-1] * d[i-2]\n    }\n\
    \    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [1] with length 1 [recovered]\n\tpanic: runtime error: index out of range [1]\
    \ with length 1\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpgrx2zn4h_test.go:13\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpgrx2zn4h_test.go:31\
    \ +0x212\ntesting.tRunner(0xc0000cc4e0, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074018
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    d := make([]int, len(xs))\n    d[0] = xs[0]\n\
    \    for i := 1; i < len(xs); i++ {\n        d[i] = d[i-1] * xs[i]\n    }\n  \
    \  return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpdu_8u2f6_test.go:37: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpdu_8u2f6_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpdu_8u2f6_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpdu_8u2f6_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpdu_8u2f6_test.go:37: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    derivative := make([]int,\
    \ n)\n    derivative[0] = xs[0]\n    for i := 1; i < n; i++ {\n        derivative[i]\
    \ = derivative[i-1] * xs[i]\n    }\n    return derivative\n}\n\nfunc TestDerivative(t\
    \ *testing.T) {\n  candidate := derivative\n\ttype test struct {\n\t\tactual \
    \  interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual:\
    \ candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3,\
    \ 2, 1}), expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0,\
    \ 4}), expected: []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected:\
    \ []int{} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpkc05l0bv_test.go:38: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpkc05l0bv_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpkc05l0bv_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpkc05l0bv_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpkc05l0bv_test.go:38: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    d := make([]int, len(xs))\n    d[0] = xs[1]\n\
    \    for i := 2; i < len(xs); i++ {\n        d[i] = d[i-1] * xs[i]\n    }\n  \
    \  return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [1] with length 1 [recovered]\n\tpanic: runtime error: index out of range [1]\
    \ with length 1\n\ngoroutine 34 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc0001d6030})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc0001d6030})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpho3lp9d1_test.go:13\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpho3lp9d1_test.go:31\
    \ +0x212\ntesting.tRunner(0xc00019b040, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    for\
    \ i := 0; i < len(xs); i++ {\n        derivative[i] = xs[i] - xs[i-1]\n    }\n\
    \    return derivative\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate\
    \ := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3, 1,\
    \ 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [-1] [recovered]\n\tpanic: runtime error: index out of range [-1]\n\ngoroutine\
    \ 6 [running]:\ntesting.tRunner.func1.2({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpp5w9xw2j_test.go:14\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpp5w9xw2j_test.go:26\
    \ +0x24c\ntesting.tRunner(0xc0000cc4e0, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    d := make([]int, len(xs))\n    d[0] = xs[1]\n\
    \    for i := 2; i < len(xs); i++ {\n        d[i] = xs[i] - xs[i-1] * d[i-1]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [1] with length 1 [recovered]\n\tpanic: runtime error: index out of range [1]\
    \ with length 1\n\ngoroutine 20 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc000162030})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000162030})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmp5minbit1_test.go:13\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmp5minbit1_test.go:31\
    \ +0x239\ntesting.tRunner(0xc000103860, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074018
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    d := make([]int, n)\n  \
    \  d[0] = xs[1]\n    for i := 2; i < n; i++ {\n        d[i] = d[i-1] * xs[i]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [1] with length 1 [recovered]\n\tpanic: runtime error: index out of range [1]\
    \ with length 1\n\ngoroutine 34 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc0001e0030})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc0001e0030})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmp0jqvv131_test.go:14\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmp0jqvv131_test.go:32\
    \ +0x212\ntesting.tRunner(0xc0001831e0, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    d := make([]int, n)\n  \
    \  for i := 0; i < n; i++ {\n        d[i] = xs[i]\n    }\n    for i := n - 1;\
    \ i >= 0; i-- {\n        d[i] *= xs[i]\n    }\n    return d\n}\n\nfunc TestDerivative(t\
    \ *testing.T) {\n  candidate := derivative\n\ttype test struct {\n\t\tactual \
    \  interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual:\
    \ candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3,\
    \ 2, 1}), expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0,\
    \ 4}), expected: []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected:\
    \ []int{} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpak3ddnxs_test.go:40: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=9) %!s(int=1) %!s(int=4) %!s(int=16) %!s(int=25)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpak3ddnxs_test.go:40:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=4) %!s(int=9)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpak3ddnxs_test.go:40:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=9) %!s(int=4) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpak3ddnxs_test.go:40:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=9)\
    \ %!s(int=4) %!s(int=1) %!s(int=0) %!s(int=16)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpak3ddnxs_test.go:40: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660074018
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    d := make([]int, n)\n  \
    \  d[0] = xs[0]\n    for i := 1; i < n; i++ {\n        d[i] = xs[i] - d[i-1] *\
    \ xs[i-1]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate\
    \ := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3, 1,\
    \ 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpu4jetumo_test.go:38: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=-8) %!s(int=10) %!s(int=-16) %!s(int=69)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpu4jetumo_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=1) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpu4jetumo_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=-7) %!s(int=15)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpu4jetumo_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=-7) %!s(int=15) %!s(int=-15) %!s(int=4)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpu4jetumo_test.go:38: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074018
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    derivative[0]\
    \ = xs[1]\n    for i := 2; i < len(xs); i++ {\n        derivative[i] = xs[i] -\
    \ derivative[i-1]*xs[i-1]\n    }\n    return derivative\n}\n\nfunc TestDerivative(t\
    \ *testing.T) {\n  candidate := derivative\n\ttype test struct {\n\t\tactual \
    \  interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual:\
    \ candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3,\
    \ 2, 1}), expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0,\
    \ 4}), expected: []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected:\
    \ []int{} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [1] with length 1 [recovered]\n\tpanic: runtime error: index out of range [1]\
    \ with length 1\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpk5eq0jop_test.go:13\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpk5eq0jop_test.go:31\
    \ +0x239\ntesting.tRunner(0xc0000da1a0, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 2
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    derivative\
    \ := append(derivative, xs[0])\n    for i := 1; i < len(xs); i++ {\n        derivative[i]\
    \ = derivative[i-1] * xs[i]\n    }\n    return derivative\n}\n\nfunc TestDerivative(t\
    \ *testing.T) {\n  candidate := derivative\n\ttype test struct {\n\t\tactual \
    \  interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual:\
    \ candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3,\
    \ 2, 1}), expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0,\
    \ 4}), expected: []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected:\
    \ []int{} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp6w56ctsv_test.go:13:16: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074017
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    derivative[0]\
    \ = 1\n    for i := 1; i < len(xs); i++ {\n        derivative[i] = derivative[i-1]\
    \ * xs[i] - xs[i-1]\n    }\n    return derivative\n}\n\nfunc TestDerivative(t\
    \ *testing.T) {\n  candidate := derivative\n\ttype test struct {\n\t\tactual \
    \  interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual:\
    \ candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3,\
    \ 2, 1}), expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0,\
    \ 4}), expected: []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected:\
    \ []int{} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpvcpeuua8_test.go:37: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=1) %!s(int=-2) %!s(int=-5) %!s(int=-22) %!s(int=-114)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpvcpeuua8_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=1) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpvcpeuua8_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=1) %!s(int=-1) %!s(int=-3)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpvcpeuua8_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=1)\
    \ %!s(int=-1) %!s(int=-3) %!s(int=-1) %!s(int=-4)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpvcpeuua8_test.go:37: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    derivative[0]\
    \ = xs[1]\n    for i := 2; i < len(xs); i++ {\n        derivative[i] = derivative[i-1]\
    \ * xs[i]\n    }\n    return derivative\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [1] with length 1 [recovered]\n\tpanic: runtime error: index out of range [1]\
    \ with length 1\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmp5u75r08x_test.go:13\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmp5u75r08x_test.go:31\
    \ +0x212\ntesting.tRunner(0xc0000cc680, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    derivative[0]\
    \ = xs[0]\n    for i := 1; i < len(xs); i++ {\n        derivative[i] = derivative[i-1]\
    \ * xs[i]\n    }\n    return derivative\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmp4wt6ssid_test.go:37: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmp4wt6ssid_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmp4wt6ssid_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmp4wt6ssid_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmp4wt6ssid_test.go:37: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    d := make([]int, n)\n  \
    \  d[0] = xs[0]\n    for i := 1; i < n; i++ {\n        d[i] = xs[i]\n    }\n \
    \   for i := n - 1; i > 0; i-- {\n        d[i] = d[i+1] * xs[i+1]\n    }\n   \
    \ return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [5] with length 5 [recovered]\n\tpanic: runtime error: index out of range [5]\
    \ with length 5\n\ngoroutine 4 [running]:\ntesting.tRunner.func1.2({0x513700,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x513700, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpozx4cyw7_test.go:19\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpozx4cyw7_test.go:31\
    \ +0x6df\ntesting.tRunner(0xc0000d8000, 0x529020)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074018
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    d := make([]int, len(xs))\n    d[0] = xs[0]\n\
    \    for i := 1; i < len(xs); i++ {\n        d[i] = d[i-1] * xs[i]\n    }\n  \
    \  return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpdu_8u2f6_test.go:37: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpdu_8u2f6_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpdu_8u2f6_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpdu_8u2f6_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpdu_8u2f6_test.go:37: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    for\
    \ i := 0; i < len(xs); i++ {\n        derivative[i] = xs[i]\n    }\n    for i\
    \ := len(xs) - 1; i >= 0; i-- {\n        derivative[i] *= xs[i]\n    }\n    return\
    \ derivative\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpjxpgsgau_test.go:39: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=9) %!s(int=1) %!s(int=4) %!s(int=16) %!s(int=25)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpjxpgsgau_test.go:39:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=4) %!s(int=9)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpjxpgsgau_test.go:39:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=9) %!s(int=4) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpjxpgsgau_test.go:39:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=9)\
    \ %!s(int=4) %!s(int=1) %!s(int=0) %!s(int=16)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpjxpgsgau_test.go:39: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074018
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    d := make([]int, len(xs))\n    d[0] = xs[1]\n\
    \    for i := 2; i < len(xs); i++ {\n        d[i] = xs[i] - xs[i-1]\n    }\n \
    \   return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [1] with length 1 [recovered]\n\tpanic: runtime error: index out of range [1]\
    \ with length 1\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmposcxre8q_test.go:13\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmposcxre8q_test.go:31\
    \ +0x1ff\ntesting.tRunner(0xc0000da1a0, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074016
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    derivative[0]\
    \ = xs[0]\n    for i := 1; i < len(xs); i++ {\n        derivative[i] = derivative[i-1]\
    \ * xs[i]\n    }\n    return derivative\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmp4wt6ssid_test.go:37: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmp4wt6ssid_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmp4wt6ssid_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmp4wt6ssid_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmp4wt6ssid_test.go:37: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    d := make([]int, len(xs))\n    d[0] = xs[1]\n\
    \    for i := 1; i < len(xs); i++ {\n        d[i] = xs[i] - xs[i-1]\n    }\n \
    \   return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [1] with length 1 [recovered]\n\tpanic: runtime error: index out of range [1]\
    \ with length 1\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmp5zirgm0__test.go:13\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmp5zirgm0__test.go:31\
    \ +0x1ff\ntesting.tRunner(0xc0000cc4e0, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074018
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    d := make([]int, n)\n  \
    \  d[0] = xs[0]\n    for i := 1; i < n; i++ {\n        d[i] = d[i-1] * xs[i]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    derivative[0]\
    \ = xs[0]\n    for i := 1; i < len(xs); i++ {\n        derivative[i] = derivative[i-1]\
    \ * xs[i]\n    }\n    return derivative\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmp4wt6ssid_test.go:37: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmp4wt6ssid_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmp4wt6ssid_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmp4wt6ssid_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmp4wt6ssid_test.go:37: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    d := make([]int, len(xs))\n    d[0] = xs[1]\n\
    \    for i := 2; i < len(xs); i++ {\n        d[i] = d[i-1] * xs[i] - xs[i-1]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [1] with length 1 [recovered]\n\tpanic: runtime error: index out of range [1]\
    \ with length 1\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmp6ewcsfyb_test.go:13\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmp6ewcsfyb_test.go:31\
    \ +0x228\ntesting.tRunner(0xc0000cc4e0, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    for\
    \ i := 0; i < len(xs); i++ {\n        derivative[i] = xs[i] - xs[i-1]\n    }\n\
    \    return derivative\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate\
    \ := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3, 1,\
    \ 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [-1] [recovered]\n\tpanic: runtime error: index out of range [-1]\n\ngoroutine\
    \ 6 [running]:\ntesting.tRunner.func1.2({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpp5w9xw2j_test.go:14\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpp5w9xw2j_test.go:26\
    \ +0x24c\ntesting.tRunner(0xc0000cc4e0, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    derivative[0]\
    \ = xs[1]\n    for i := 2; i < len(xs); i++ {\n        derivative[i] = derivative[i-1]\
    \ * xs[i]\n    }\n    return derivative\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [1] with length 1 [recovered]\n\tpanic: runtime error: index out of range [1]\
    \ with length 1\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmp5u75r08x_test.go:13\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmp5u75r08x_test.go:31\
    \ +0x212\ntesting.tRunner(0xc0000cc680, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    d := make([]int, n)\n  \
    \  d[0] = xs[0]\n    for i := 1; i < n; i++ {\n        d[i] = xs[i] - d[i-1]*xs[i-1]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpihg2a8is_test.go:38: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=-8) %!s(int=10) %!s(int=-16) %!s(int=69)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpihg2a8is_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=1) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpihg2a8is_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=-7) %!s(int=15)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpihg2a8is_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=-7) %!s(int=15) %!s(int=-15) %!s(int=4)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpihg2a8is_test.go:38: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074018
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    derivative[0]\
    \ = xs[1]\n    for i := 0; i < len(xs); i++ {\n        derivative[i+1] = xs[i]\
    \ - derivative[i] * xs[i]\n    }\n    return derivative\n}\n\nfunc TestDerivative(t\
    \ *testing.T) {\n  candidate := derivative\n\ttype test struct {\n\t\tactual \
    \  interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual:\
    \ candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3,\
    \ 2, 1}), expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0,\
    \ 4}), expected: []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected:\
    \ []int{} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [5] with length 5 [recovered]\n\tpanic: runtime error: index out of range [5]\
    \ with length 5\n\ngoroutine 34 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc0001d6000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc0001d6000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmptdm_c7tt_test.go:15\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmptdm_c7tt_test.go:27\
    \ +0x285\ntesting.tRunner(0xc000198ea0, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074018
- exit_code: 2
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    derivative\
    \ := append(derivative, xs[0]+x[1]*x[0])\n    for i := 1; i < len(xs); i++ {\n\
    \        derivative := append(derivative, xs[i]+xs[i-1]*x[i-1])\n    }\n    return\
    \ derivative\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp6alulnxn_test.go:13:16: no new variables on left side of :=

    /tmp/tmp6alulnxn_test.go:13:44: undefined: x

    /tmp/tmp6alulnxn_test.go:15:9: derivative declared but not used

    /tmp/tmp6alulnxn_test.go:15:56: undefined: x

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074018
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    derivative\
    \ := append(derivative, xs[0]+(xs[1]*x)+(xs[2]*x*x)+(xs[3]*x*x*x)+(xs[4]*x*x*x*x)+(xs[5]*x*x*x*x*x)+(xs[6]*x*x*x*x*x*x)+(xs[7]*x*x*x*x*x*x*x)+(xs[8]*x*x*x*x*x*x*x*x)+(xs[9]*x*x*x*x*x*x*x*x*x)+(xs[10]*x*x*x*x*x*x*x*x*x*x*x)+(xs[11]*x*x*x*x*x*x*x*x*x*x*x*x)+(xs[12]*x*x*x*x*x*x*x*x*x*x*x*x*x)+(xs[13]*x*x*x*x*x*x*x*x*x*x*x*x*x*x)+(xs[14]*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x)+(xs[15]*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x)+(xs[16]*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x)+(xs[17]*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x)+(xs[18]*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x)+(xs[19]*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x)+(xs[20]*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x)+(xs[21]*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x)+(xs[22]*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x)+(xs[23]*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x)+(xs[24]*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x)+(xs[25]*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x)+(xs[26]*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x)+(xs[27]*x*x*x*x*x*x*x*\n\
    func TestDerivative(t *testing.T) {\n  candidate := derivative\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20}\
    \ },\n     { actual: candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n   \
    \  { actual: candidate([]int{3, 2, 1}), expected: []int{2, 2} },\n     { actual:\
    \ candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2, 0, 16} },\n     { actual:\
    \ candidate([]int{1}), expected: []int{} },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmppfwtfemi_test.go:14:6: expected ''('', found TestDerivative

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074013
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    d := make([]int, n)\n  \
    \  d[0] = xs[0]\n    for i := 1; i < n; i++ {\n        d[i] = d[i-1] * xs[i]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    for\
    \ i := 0; i < len(xs); i++ {\n        derivative[i] = xs[i] - xs[i-1]\n    }\n\
    \    return derivative\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate\
    \ := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3, 1,\
    \ 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [-1] [recovered]\n\tpanic: runtime error: index out of range [-1]\n\ngoroutine\
    \ 6 [running]:\ntesting.tRunner.func1.2({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpp5w9xw2j_test.go:14\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpp5w9xw2j_test.go:26\
    \ +0x24c\ntesting.tRunner(0xc0000cc4e0, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    d := make([]int, n)\n  \
    \  d[0] = xs[0]\n    for i := 0; i < n; i++ {\n        d[i+1] = xs[i+1] * d[i]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [5] with length 5 [recovered]\n\tpanic: runtime error: index out of range [5]\
    \ with length 5\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x513700,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x513700, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmp2nuilvq8_test.go:16\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmp2nuilvq8_test.go:28\
    \ +0x6ac\ntesting.tRunner(0xc0000cc4e0, 0x529020)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    d := make([]int, len(xs))\n    d[0] = xs[0]\n\
    \    for i := 1; i < len(xs); i++ {\n        d[i] = d[i-1] * xs[i]\n    }\n  \
    \  return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpdu_8u2f6_test.go:37: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpdu_8u2f6_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpdu_8u2f6_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpdu_8u2f6_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpdu_8u2f6_test.go:37: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    derivative[0]\
    \ = xs[1]\n    for i := 1; i < len(xs); i++ {\n        derivative[i] = derivative[i-1]\
    \ * xs[i]\n    }\n    return derivative\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [1] with length 1 [recovered]\n\tpanic: runtime error: index out of range [1]\
    \ with length 1\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpdkes1h00_test.go:13\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpdkes1h00_test.go:31\
    \ +0x212\ntesting.tRunner(0xc0000cc4e0, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    derivative[0]\
    \ = xs[1]\n    for i := 1; i < len(xs); i++ {\n        derivative[i] = xs[i] -\
    \ derivative[i-1] * xs[i-1]\n    }\n    return derivative\n}\n\nfunc TestDerivative(t\
    \ *testing.T) {\n  candidate := derivative\n\ttype test struct {\n\t\tactual \
    \  interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual:\
    \ candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3,\
    \ 2, 1}), expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0,\
    \ 4}), expected: []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected:\
    \ []int{} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [1] with length 1 [recovered]\n\tpanic: runtime error: index out of range [1]\
    \ with length 1\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpaogiunl7_test.go:13\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpaogiunl7_test.go:31\
    \ +0x239\ntesting.tRunner(0xc0000da340, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074018
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    derivative\
    \ := append(derivative, xs[0]+(xs[1]*x)+(xs[2]*x*x)+(xs[3]*x*x*x)+(xs[4]*x*x*x*x)+(xs[5]*x*x*x*x*x)+(xs[6]*x*x*x*x*x*x)+(xs[7]*x*x*x*x*x*x*x)+(xs[8]*x*x*x*x*x*x*x*x)+(xs[9]*x*x*x*x*x*x*x*x*x)+(xs[10]*x*x*x*x*x*x*x*x*x*x*x)+(xs[11]*x*x*x*x*x*x*x*x*x*x*x*x)+(xs[12]*x*x*x*x*x*x*x*x*x*x*x*x*x)+(xs[13]*x*x*x*x*x*x*x*x*x*x*x*x*x*x)+(xs[14]*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x)+(xs[15]*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x)+(xs[16]*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x)+(xs[17]*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x)+(xs[18]*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x)+(xs[19]*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x)+(xs[20]*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x)+(xs[21]*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x)+(xs[22]*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x)+(xs[23]*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x)+(xs[24]*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x)+(xs[25]*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x)+(xs[26]*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*\n\
    func TestDerivative(t *testing.T) {\n  candidate := derivative\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20}\
    \ },\n     { actual: candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n   \
    \  { actual: candidate([]int{3, 2, 1}), expected: []int{2, 2} },\n     { actual:\
    \ candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2, 0, 16} },\n     { actual:\
    \ candidate([]int{1}), expected: []int{} },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmp7rqqvr0x_test.go:14:6: expected ''('', found TestDerivative

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074018
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    for\
    \ i := 0; i < len(xs); i++ {\n        derivative[i] = xs[i]\n    }\n    for i\
    \ := 1; i < len(xs); i++ {\n        derivative[i] = derivative[i-1] * xs[i]\n\
    \    }\n    return derivative\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate\
    \ := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3, 1,\
    \ 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpmy6_tdtg_test.go:39: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpmy6_tdtg_test.go:39:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpmy6_tdtg_test.go:39:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpmy6_tdtg_test.go:39:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpmy6_tdtg_test.go:39: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    derivative[0]\
    \ = xs[0]\n    for i := 1; i < len(xs); i++ {\n        derivative[i] = derivative[i-1]\
    \ * xs[i]\n    }\n    return derivative\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmp4wt6ssid_test.go:37: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmp4wt6ssid_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmp4wt6ssid_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmp4wt6ssid_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmp4wt6ssid_test.go:37: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    d := make([]int, n)\n  \
    \  d[0] = xs[0]\n    for i := 1; i < n; i++ {\n        d[i] = xs[i]\n    }\n \
    \   for i := n - 1; i > 0; i-- {\n        d[i] = d[i+1] * xs[i+1]\n    }\n   \
    \ return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [5] with length 5 [recovered]\n\tpanic: runtime error: index out of range [5]\
    \ with length 5\n\ngoroutine 4 [running]:\ntesting.tRunner.func1.2({0x513700,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x513700, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpozx4cyw7_test.go:19\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpozx4cyw7_test.go:31\
    \ +0x6df\ntesting.tRunner(0xc0000d8000, 0x529020)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074018
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    derivative[0]\
    \ = xs[1]\n    for i := 1; i < len(xs); i++ {\n        derivative[i] = derivative[i-1]\
    \ * xs[i]\n    }\n    return derivative\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [1] with length 1 [recovered]\n\tpanic: runtime error: index out of range [1]\
    \ with length 1\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpdkes1h00_test.go:13\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpdkes1h00_test.go:31\
    \ +0x212\ntesting.tRunner(0xc0000cc4e0, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    d := make([]int, n)\n  \
    \  d[0] = xs[0]\n    for i := 1; i < n; i++ {\n        d[i] = d[i-1] * xs[i]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    d := make([]int, n)\n  \
    \  for i := 0; i < n; i++ {\n        d[i] = xs[i]\n    }\n    for i := n - 1;\
    \ i >= 0; i-- {\n        d[i] = d[i+1] * xs[i+1]\n    }\n    return d\n}\n\nfunc\
    \ TestDerivative(t *testing.T) {\n  candidate := derivative\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20}\
    \ },\n     { actual: candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n   \
    \  { actual: candidate([]int{3, 2, 1}), expected: []int{2, 2} },\n     { actual:\
    \ candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2, 0, 16} },\n     { actual:\
    \ candidate([]int{1}), expected: []int{} },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [5] with length 5 [recovered]\n\tpanic: runtime error: index out of range [5]\
    \ with length 5\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x513700,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x513700, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpykgfg20e_test.go:18\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpykgfg20e_test.go:30\
    \ +0x6ff\ntesting.tRunner(0xc0000da1a0, 0x529020)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074016
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    d := make([]int, n)\n  \
    \  d[0] = xs[0]\n    for i := 1; i < n; i++ {\n        d[i] = d[i-1] * xs[i]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    d := make([]int, len(xs))\n    d[0] = xs[0]\n\
    \    for i := 1; i < len(xs); i++ {\n        d[i] = xs[i] - d[i-1]*xs[i-1]\n \
    \   }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpdypolu01_test.go:37: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=-8) %!s(int=10) %!s(int=-16) %!s(int=69)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpdypolu01_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=1) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpdypolu01_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=-7) %!s(int=15)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpdypolu01_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=-7) %!s(int=15) %!s(int=-15) %!s(int=4)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpdypolu01_test.go:37: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074019
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    derivative[0]\
    \ = xs[0]\n    for i := 1; i < len(xs); i++ {\n        derivative[i] = xs[i] -\
    \ derivative[i-1]\n    }\n    return derivative\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpjt_kw3ha_test.go:37: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=-2) %!s(int=4) %!s(int=0) %!s(int=5)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpjt_kw3ha_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=1) %!s(int=2)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpjt_kw3ha_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=-1) %!s(int=2)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpjt_kw3ha_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=-1) %!s(int=2) %!s(int=-2) %!s(int=6)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpjt_kw3ha_test.go:37: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 2
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    derivative\
    \ := append(derivative, xs[0]+x[1]*x[0])\n    for i := 0; i < len(xs)-1; i++ {\n\
    \        derivative := append(derivative, xs[i+1]+2*xs[i]+xs[i+1]*xs[i+1])\n \
    \   }\n    return derivative\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate\
    \ := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3, 1,\
    \ 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpghg5c3q3_test.go:13:16: no new variables on left side of :=

    /tmp/tmpghg5c3q3_test.go:13:44: undefined: x

    /tmp/tmpghg5c3q3_test.go:15:9: derivative declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074018
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    d := make([]int, n)\n  \
    \  for i := 0; i < n; i++ {\n        d[i] = xs[i] - xs[i-1]\n    }\n    return\
    \ d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected: []int{1,\
    \ 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected: []int{2,\
    \ 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2, 2} },\n\
    \     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2, 0, 16}\
    \ },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [-1] [recovered]\n\tpanic: runtime error: index out of range [-1]\n\ngoroutine\
    \ 6 [running]:\ntesting.tRunner.func1.2({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmphe617c2p_test.go:15\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmphe617c2p_test.go:27\
    \ +0x24c\ntesting.tRunner(0xc0000da340, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.007s\nFAIL\n"
  timestamp: 1660074019
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    derivative[0]\
    \ = xs[0]\n    for i := 1; i < len(xs); i++ {\n        derivative[i] = derivative[i-1]\
    \ * xs[i]\n    }\n    return derivative\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmp4wt6ssid_test.go:37: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmp4wt6ssid_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmp4wt6ssid_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmp4wt6ssid_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmp4wt6ssid_test.go:37: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    for\
    \ i := 0; i < len(xs); i++ {\n        derivative[i] = xs[i]\n    }\n    for i\
    \ := 0; i < len(xs); i++ {\n        derivative[i] *= -1\n    }\n    return derivative\n\
    }\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected: []int{1,\
    \ 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected: []int{2,\
    \ 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2, 2} },\n\
    \     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2, 0, 16}\
    \ },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpeewledj4_test.go:39: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=-3) %!s(int=-1) %!s(int=-2) %!s(int=-4) %!s(int=-5)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpeewledj4_test.go:39:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=-1) %!s(int=-2) %!s(int=-3)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpeewledj4_test.go:39:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=-3) %!s(int=-2) %!s(int=-1)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpeewledj4_test.go:39:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=-3)\
    \ %!s(int=-2) %!s(int=-1) %!s(int=0) %!s(int=-4)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpeewledj4_test.go:39: expected '[]', got '[%!s(int=-1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074018
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    d := make([]int, n)\n  \
    \  d[0] = xs[0]\n    for i := 1; i < n; i++ {\n        d[i] = xs[i] - d[i-1] *\
    \ xs[i-1]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate\
    \ := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3, 1,\
    \ 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpu4jetumo_test.go:38: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=-8) %!s(int=10) %!s(int=-16) %!s(int=69)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpu4jetumo_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=1) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpu4jetumo_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=-7) %!s(int=15)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpu4jetumo_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=-7) %!s(int=15) %!s(int=-15) %!s(int=4)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpu4jetumo_test.go:38: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074018
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    derivative := make([]int,\
    \ n)\n    for i := 0; i < n; i++ {\n        derivative[i] = xs[i]\n    }\n   \
    \ for i := n - 1; i >= 0; i-- {\n        derivative[i] *= xs[i+1]\n    }\n   \
    \ return derivative\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [5] with length 5 [recovered]\n\tpanic: runtime error: index out of range [5]\
    \ with length 5\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x513700,\
    \ 0xc0001d8000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x513700, 0xc0001d8000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpcagi6zzb_test.go:18\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpcagi6zzb_test.go:30\
    \ +0x70c\ntesting.tRunner(0xc000183380, 0x529020)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074019
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    derivative[0]\
    \ = xs[0]\n    for i := 1; i < len(xs); i++ {\n        derivative[i] = derivative[i-1]\
    \ * xs[i]\n    }\n    return derivative\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmp4wt6ssid_test.go:37: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmp4wt6ssid_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmp4wt6ssid_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmp4wt6ssid_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmp4wt6ssid_test.go:37: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    derivative[0]\
    \ = xs[1]\n    for i := 2; i < len(xs); i++ {\n        derivative[i] = derivative[i-1]\
    \ * xs[i]\n    }\n    return derivative\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [1] with length 1 [recovered]\n\tpanic: runtime error: index out of range [1]\
    \ with length 1\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmp5u75r08x_test.go:13\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmp5u75r08x_test.go:31\
    \ +0x212\ntesting.tRunner(0xc0000cc680, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    for\
    \ i := 0; i < len(xs); i++ {\n        derivative[i] = xs[i] - xs[i-1]\n    }\n\
    \    return derivative\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate\
    \ := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3, 1,\
    \ 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [-1] [recovered]\n\tpanic: runtime error: index out of range [-1]\n\ngoroutine\
    \ 6 [running]:\ntesting.tRunner.func1.2({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpp5w9xw2j_test.go:14\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpp5w9xw2j_test.go:26\
    \ +0x24c\ntesting.tRunner(0xc0000cc4e0, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    d := make([]int, len(xs))\n    for i := 0;\
    \ i < len(xs); i++ {\n        d[i] = xs[i] - xs[i-1]\n    }\n    return d\n}\n\
    \nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected: []int{1,\
    \ 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected: []int{2,\
    \ 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2, 2} },\n\
    \     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2, 0, 16}\
    \ },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [-1] [recovered]\n\tpanic: runtime error: index out of range [-1]\n\ngoroutine\
    \ 6 [running]:\ntesting.tRunner.func1.2({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpv_ouvlzk_test.go:14\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpv_ouvlzk_test.go:26\
    \ +0x24c\ntesting.tRunner(0xc0000da340, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074018
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    derivative[0]\
    \ = xs[1]\n    for i := 1; i < len(xs); i++ {\n        derivative[i] = xs[i] -\
    \ derivative[i-1] * xs[i-1]\n    }\n    return derivative\n}\n\nfunc TestDerivative(t\
    \ *testing.T) {\n  candidate := derivative\n\ttype test struct {\n\t\tactual \
    \  interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual:\
    \ candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3,\
    \ 2, 1}), expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0,\
    \ 4}), expected: []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected:\
    \ []int{} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [1] with length 1 [recovered]\n\tpanic: runtime error: index out of range [1]\
    \ with length 1\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpaogiunl7_test.go:13\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpaogiunl7_test.go:31\
    \ +0x239\ntesting.tRunner(0xc0000da340, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074018
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    for\
    \ i := 0; i < len(xs); i++ {\n        derivative[i] = xs[i] - xs[i-1]\n    }\n\
    \    return derivative\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate\
    \ := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3, 1,\
    \ 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [-1] [recovered]\n\tpanic: runtime error: index out of range [-1]\n\ngoroutine\
    \ 6 [running]:\ntesting.tRunner.func1.2({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpp5w9xw2j_test.go:14\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpp5w9xw2j_test.go:26\
    \ +0x24c\ntesting.tRunner(0xc0000cc4e0, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    d := make([]int, n)\n  \
    \  d[0] = xs[0]\n    for i := 0; i < n; i++ {\n        d[i+1] = xs[i+1] * d[i]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [5] with length 5 [recovered]\n\tpanic: runtime error: index out of range [5]\
    \ with length 5\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x513700,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x513700, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmp2nuilvq8_test.go:16\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmp2nuilvq8_test.go:28\
    \ +0x6ac\ntesting.tRunner(0xc0000cc4e0, 0x529020)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    derivative := make([]int, len(xs))\n    derivative[0]\
    \ = 1\n    for i := 1; i < len(xs); i++ {\n        derivative[i] = derivative[i-1]\
    \ * xs[i] - xs[i-1]\n    }\n    return derivative\n}\n\nfunc TestDerivative(t\
    \ *testing.T) {\n  candidate := derivative\n\ttype test struct {\n\t\tactual \
    \  interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual:\
    \ candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3,\
    \ 2, 1}), expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0,\
    \ 4}), expected: []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected:\
    \ []int{} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpvcpeuua8_test.go:37: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=1) %!s(int=-2) %!s(int=-5) %!s(int=-22) %!s(int=-114)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpvcpeuua8_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=1) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpvcpeuua8_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=1) %!s(int=-1) %!s(int=-3)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpvcpeuua8_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=1)\
    \ %!s(int=-1) %!s(int=-3) %!s(int=-1) %!s(int=-4)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpvcpeuua8_test.go:37: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    d := make([]int, n)\n  \
    \  d[0] = xs[1]\n    for i := 2; i < n; i++ {\n        d[i] = d[i-1] * xs[i]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [1] with length 1 [recovered]\n\tpanic: runtime error: index out of range [1]\
    \ with length 1\n\ngoroutine 34 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc0001e0030})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc0001e0030})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmp0jqvv131_test.go:14\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmp0jqvv131_test.go:32\
    \ +0x212\ntesting.tRunner(0xc0001831e0, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    d := make([]int, len(xs))\n    d[0] = xs[0]\n\
    \    for i := 1; i < len(xs); i++ {\n        d[i] = d[i-1] * xs[i]\n    }\n  \
    \  return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpdu_8u2f6_test.go:37: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpdu_8u2f6_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpdu_8u2f6_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpdu_8u2f6_test.go:37:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpdu_8u2f6_test.go:37: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    d := make([]int, n)\n  \
    \  d[0] = xs[0]\n    for i := 1; i < n; i++ {\n        d[i] = d[i-1] * xs[i]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074015
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\nfunc\
    \ derivative(xs []int) []int {\n    n := len(xs)\n    d := make([]int, n)\n  \
    \  d[0] = xs[0]\n    for i := 1; i < n; i++ {\n        d[i] = d[i-1] * xs[i]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmphenzj5qf_test.go:38:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmphenzj5qf_test.go:38: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074015

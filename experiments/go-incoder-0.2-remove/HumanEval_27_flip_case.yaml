name: HumanEval_27_flip_case
language: go_test.go
prompt: "package flip_case_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
  \ For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n\
  func flip_case(myString string) string {\n"
tests: "func TestFlip_Case(t *testing.T) {\n  candidate := flip_case\n\ttype test\
  \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests :=\
  \ []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"\
  Hello!\"), expected: \"hELLO!\" },\n     { actual: candidate(\"These violent delights\
  \ have violent ends\"), expected: \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" },\n\
  \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i),\
  \ func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
  %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
  \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
completions: ["    result := \"\"\n    for _, char := range myString {\n        if\
    \ char >= 'a' && char <= 'z' {\n            result += string([]byte{char - 'a',\
    \ char})\n        } else {\n            result += string([]byte{char})\n     \
    \   }\n    }\n    return result\n}\n", "    var flippedString string\n    for\
    \ _, char := range myString {\n        if char >= 'a' && char <= 'z' {\n     \
    \       flippedString += string(char - 'a') + string(char - 'A')\n        } else\
    \ {\n            flippedString += char\n        }\n    }\n    return flippedString\n\
    }\n", "    result := \"\"\n    for _, char := range myString {\n        if char\
    \ >= 'a' && char <= 'z' {\n            result += char - 'a'\n        } else {\n\
    \            result += char\n        }\n    }\n    return result\n}\n", "    var\
    \ flippedString string\n    for _, char := range myString {\n        if char >=\
    \ 'a' && char <= 'z' {\n            flippedString += string(char - 'a' + 'A')\n\
    \        } else {\n            flippedString += char\n        }\n    }\n    return\
    \ flippedString\n}\n", "    var newString string\n    for _, char := range myString\
    \ {\n        if char >= 'a' && char <= 'z' {\n            newString += string(char\
    \ - 'a' + 'A')\n        } else {\n            newString += char\n        }\n \
    \   }\n    return newString\n}\n", "    result := \"\"\n    for _, char := range\
    \ myString {\n        if char >= 'a' && char <= 'z' {\n            result += string([]byte{char\
    \ - 'a', char})\n        } else {\n            result += string([]byte{char})\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char\
    \ := range myString {\n        if char >= 'a' && char <= 'z' {\n            result\
    \ += string(char - 'a') + string(char - 'A')\n        } else {\n            result\
    \ += char\n        }\n    }\n    return result\n}\n", "    var result string\n\
    \    for _, char := range myString {\n        if char >= 'a' && char <= 'z' {\n\
    \            result += string(char - 'a' + 'A')\n        } else {\n          \
    \  result += char\n        }\n    }\n    return result\n}\n", "    result := \"\
    \"\n    for _, char := range myString {\n        if char >= 'a' && char <= 'z'\
    \ {\n            result += char + ('A' - 'a')\n        } else {\n            result\
    \ += char\n        }\n    }\n    return result\n}\n", "    result := \"\"\n  \
    \  for _, char := range myString {\n        if char >= 'a' && char <= 'z' {\n\
    \            result += char - 'a'\n        } else {\n            result += char\n\
    \        }\n    }\n    return result\n}\n", "    var newString string\n    for\
    \ _, letter := range myString {\n        if letter == 'a' {\n            newString\
    \ += 'A'\n        } else if letter == 'b' {\n            newString += 'B'\n  \
    \      } else if letter == 'c' {\n            newString += 'C'\n        } else\
    \ if letter == 'd' {\n            newString += 'D'\n        } else if letter ==\
    \ 'e' {\n            newString += 'E'\n        } else if letter == 'f' {\n   \
    \         newString += 'F'\n        } else if letter == 'g' {\n            newString\
    \ += 'G'\n        } else if letter == 'h' {\n            newString += 'H'\n  \
    \      } else if letter == 'i' {\n            newString += 'I'\n        } else\
    \ if letter == 'j' {\n            newString += 'J'\n        } else if letter ==\
    \ 'k' {\n            newString += 'K'\n        } else if letter == 'l' {\n   \
    \         newString += 'L'\n        } else if letter == 'm' {\n            newString\
    \ += 'M'\n        } else if letter == 'n' {\n            newString += 'N'\n  \
    \      } else if letter == 'o' {\n            newString += 'O'\n        } else\
    \ if letter == 'p' {\n            newString += 'P'\n        } else if letter ==\
    \ 'q' {\n            newString += 'Q'\n        } else if letter == 'r' {\n   \
    \         newString += 'R'\n        } else if letter == 's' {\n            newString\
    \ += 'S'\n        } else if letter == 't' {\n            newString += 'T'\n  \
    \      } else if letter == 'u' {\n            newString += 'U'\n        } else\
    \ if letter == 'v' {\n            newString += 'V'\n        } else if letter ==\
    \ 'w' {\n            newString += 'W'\n        } else if letter == 'x' {\n   \
    \         newString += 'X'\n        } else if letter == 'y' {\n            newString\
    \ += 'Y'\n        } else if letter == 'z' {\n            newString += 'Z'\n  \
    \      }\n    }\n    return newString\n}\n", "    result := \"\"\n    for _, char\
    \ := range myString {\n        if char >= 'a' && char <= 'z' {\n            result\
    \ += char - 'a'\n        } else {\n            result += char\n        }\n   \
    \ }\n    return result\n}\n", "    result := \"\"\n    for _, char := range myString\
    \ {\n        if char >= 'a' && char <= 'z' {\n            result += char - 'a'\
    \ + 'A'\n        } else {\n            result += char\n        }\n    }\n    return\
    \ result\n}\n", "    result := \"\"\n    for _, char := range myString {\n   \
    \     if char >= 'a' && char <= 'z' {\n            result += char - 'a'\n    \
    \    } else {\n            result += char\n        }\n    }\n    return result\n\
    }\n", "    var result string\n    for _, char := range myString {\n        if\
    \ char >= 'a' && char <= 'z' {\n            result += string(char - 'a') + string(char\
    \ - 'A')\n        } else {\n            result += char\n        }\n    }\n   \
    \ return result\n}\n", "    result := \"\"\n    for _, char := range myString\
    \ {\n        if char >= 'a' && char <= 'z' {\n            result += char - 'a'\
    \ + 'A'\n        } else {\n            result += char\n        }\n    }\n    return\
    \ result\n}\n", "    result := \"\"\n    for _, letter := range myString {\n \
    \       if letter == 'a' {\n            result += \"A\"\n        } else if letter\
    \ == 'b' {\n            result += \"B\"\n        } else if letter == 'c' {\n \
    \           result += \"C\"\n        } else if letter == 'd' {\n            result\
    \ += \"D\"\n        } else if letter == 'e' {\n            result += \"E\"\n \
    \       } else if letter == 'f' {\n            result += \"F\"\n        } else\
    \ if letter == 'g' {\n            result += \"G\"\n        } else if letter ==\
    \ 'h' {\n            result += \"H\"\n        } else if letter == 'i' {\n    \
    \        result += \"I\"\n        } else if letter == 'j' {\n            result\
    \ += \"J\"\n        } else if letter == 'k' {\n            result += \"K\"\n \
    \       } else if letter == 'l' {\n            result += \"L\"\n        } else\
    \ if letter == 'm' {\n            result += \"M\"\n        } else if letter ==\
    \ 'n' {\n            result += \"N\"\n        } else if letter == 'o' {\n    \
    \        result += \"O\"\n        } else if letter == 'p' {\n            result\
    \ += \"P\"\n        } else if letter == 'q' {\n            result += \"Q\"\n \
    \       } else if letter == 'r' {\n            result += \"R\"\n        } else\
    \ if letter == 's' {\n            result += \"S\"\n        } else if letter ==\
    \ 't' {\n            result += \"T\"\n        } else if letter == 'u' {\n    \
    \        result += \"U\"\n        } else if letter == 'v' {\n            result\
    \ += \"V\"\n        } else if letter == 'w' {\n            result += \"W\"\n \
    \       } else if letter == 'x' {\n            result += \"X\"\n        } else\
    \ if letter == 'y' {\n            result += \"Y\"\n        } else if letter ==\
    \ 'z' {\n            result += \"Z\"\n        }\n    }\n    return result\n}\n",
  "    result := \"\"\n    for _, letter := range myString {\n        if letter ==\
    \ letter.toUpper() {\n            result += letter.toLower()\n        } else {\n\
    \            result += letter\n        }\n    }\n    return result\n}\n", "  \
    \  var flippedString string\n    for _, letter := range myString {\n        if\
    \ letter == 'a' {\n            flippedString += 'A'\n        } else if letter\
    \ == 'b' {\n            flippedString += 'B'\n        } else if letter == 'c'\
    \ {\n            flippedString += 'C'\n        } else if letter == 'd' {\n   \
    \         flippedString += 'D'\n        } else if letter == 'e' {\n          \
    \  flippedString += 'E'\n        } else if letter == 'f' {\n            flippedString\
    \ += 'F'\n        } else if letter == 'g' {\n            flippedString += 'G'\n\
    \        } else if letter == 'h' {\n            flippedString += 'H'\n       \
    \ } else if letter == 'i' {\n            flippedString += 'I'\n        } else\
    \ if letter == 'j' {\n            flippedString += 'J'\n        } else if letter\
    \ == 'k' {\n            flippedString += 'K'\n        } else if letter == 'l'\
    \ {\n            flippedString += 'L'\n        } else if letter == 'm' {\n   \
    \         flippedString += 'M'\n        } else if letter == 'n' {\n          \
    \  flippedString += 'N'\n        } else if letter == 'o' {\n            flippedString\
    \ += 'O'\n        } else if letter == 'p' {\n            flippedString += 'P'\n\
    \        } else if letter == 'q' {\n            flippedString += 'Q'\n       \
    \ } else if letter == 'r' {\n            flippedString += 'R'\n        } else\
    \ if letter == 's' {\n            flippedString += 'S'\n        } else if letter\
    \ == 't' {\n            flippedString += 'T'\n        } else if letter == 'u'\
    \ {\n            flippedString += 'U'\n        } else if letter == 'v' {\n   \
    \         flippedString += 'V'\n        } else if letter == 'w' {\n          \
    \  flippedString += 'W'\n        } else if letter == 'x' {\n            flippedString\
    \ += 'X'\n        } else if letter == 'y' {\n            flippedString += 'Y'\n\
    \        } else if letter == 'z' {\n            flippedString += 'Z'\n       \
    \ } else {\n            fmt.Println(\"Error: invalid letter\")\n        }\n  \
    \  }\n    return flippedString\n}\n", "    result := \"\"\n    for _, char :=\
    \ range myString {\n        if char >= 'a' && char <= 'z' {\n            result\
    \ += char - 'a' + 'A'\n        } else {\n            result += char\n        }\n\
    \    }\n    return result\n}\n", "    result := \"\"\n    for _, char := range\
    \ myString {\n        if char >= 'a' && char <= 'z' {\n            result += string(char\
    \ - 'a') + string(char - 'A')\n        } else {\n            result += char\n\
    \        }\n    }\n    return result\n}\n", "    var newString string\n    for\
    \ _, char := range myString {\n        if char >= 'a' && char <= 'z' {\n     \
    \       newString += string(char - 'a') + string(char - 'A')\n        } else {\n\
    \            newString += char\n        }\n    }\n    return newString\n}\n",
  "    result := \"\"\n    for _, char := range myString {\n        if char >= 'a'\
    \ && char <= 'z' {\n            result += char - 'a'\n        } else {\n     \
    \       result += char\n        }\n    }\n    return result\n}\n", "    var result\
    \ string\n    for _, char := range myString {\n        if char >= 'a' && char\
    \ <= 'z' {\n            result += string(char - 'a' + 'A')\n        } else {\n\
    \            result += char\n        }\n    }\n    return result\n}\n", "    result\
    \ := \"\"\n    for _, letter := range myString {\n        if letter == letter.toUpper()\
    \ {\n            result += letter.toLower()\n        } else {\n            result\
    \ += letter.toUpper()\n        }\n    }\n    return result\n}\n", "    var result\
    \ string\n    for _, char := range myString {\n        if char >= 'a' && char\
    \ <= 'z' {\n            result += char - 'a' + 'A'\n        } else {\n       \
    \     result += char\n        }\n    }\n    return result\n}\n", "    result :=\
    \ \"\"\n    for _, letter := range myString {\n        if letter == letter.toUpper()\
    \ {\n            result += letter.toLower()\n        } else {\n            result\
    \ += letter.toUpper()\n        }\n    }\n    return result\n}\n", "    result\
    \ := \"\"\n    for _, char := range myString {\n        if char >= 'a' && char\
    \ <= 'z' {\n            result += char - 'a' + 'A'\n        } else {\n       \
    \     result += char\n        }\n    }\n    return result\n}\n", "    result :=\
    \ \"\"\n    for _, char := range myString {\n        if char >= 'a' && char <=\
    \ 'z' {\n            result += string(char - 'a') + string(char - 'A')\n     \
    \   } else {\n            result += char\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, letter := range myString {\n        if letter\
    \ == 'a' {\n            result += \"A\"\n        } else if letter == 'b' {\n \
    \           result += \"B\"\n        } else if letter == 'c' {\n            result\
    \ += \"C\"\n        } else if letter == 'd' {\n            result += \"D\"\n \
    \       } else if letter == 'e' {\n            result += \"E\"\n        } else\
    \ if letter == 'f' {\n            result += \"F\"\n        } else if letter ==\
    \ 'g' {\n            result += \"G\"\n        } else if letter == 'h' {\n    \
    \        result += \"H\"\n        } else if letter == 'i' {\n            result\
    \ += \"I\"\n        } else if letter == 'j' {\n            result += \"J\"\n \
    \       } else if letter == 'k' {\n            result += \"K\"\n        } else\
    \ if letter == 'l' {\n            result += \"L\"\n        } else if letter ==\
    \ 'm' {\n            result += \"M\"\n        } else if letter == 'n' {\n    \
    \        result += \"N\"\n        } else if letter == 'o' {\n            result\
    \ += \"O\"\n        } else if letter == 'p' {\n            result += \"P\"\n \
    \       } else if letter == 'q' {\n            result += \"Q\"\n        } else\
    \ if letter == 'r' {\n            result += \"R\"\n        } else if letter ==\
    \ 's' {\n            result += \"S\"\n        } else if letter == 't' {\n    \
    \        result += \"T\"\n        } else if letter == 'u' {\n            result\
    \ += \"U\"\n        } else if letter == 'v' {\n            result += \"V\"\n \
    \       } else if letter == 'w' {\n            result += \"W\"\n        } else\
    \ if letter == 'x' {\n            result += \"X\"\n        } else if letter ==\
    \ 'y' {\n            result += \"Y\"\n        } else if letter == 'z' {\n    \
    \        result += \"Z\"\n        }\n    }\n    return result\n}\n", "    result\
    \ := \"\"\n    for _, char := range myString {\n        if char >= 'a' && char\
    \ <= 'z' {\n            result += char - 'a' + 'A'\n        } else {\n       \
    \     result += char\n        }\n    }\n    return result\n}\n", "    result :=\
    \ \"\"\n    for _, char := range myString {\n        if char >= 'a' && char <=\
    \ 'z' {\n            result += char + ('A' - 'a')\n        } else {\n        \
    \    result += char\n        }\n    }\n    return result\n}\n", "    result :=\
    \ \"\"\n    for _, char := range myString {\n        if char >= 'a' && char <=\
    \ 'z' {\n            result += string([]byte{char - 'a', char})\n        } else\
    \ {\n            result += string([]byte{char})\n        }\n    }\n    return\
    \ result\n}\n", "    result := \"\"\n    for _, char := range myString {\n   \
    \     if char >= 'a' && char <= 'z' {\n            result += string(char - 'a')\
    \ + string(char - 'A')\n        } else {\n            result += char\n       \
    \ }\n    }\n    return result\n}\n", "    var newString string\n    for _, letter\
    \ := range myString {\n        if letter == 'a' {\n            newString += 'A'\n\
    \        } else if letter == 'A' {\n            newString += 'a'\n        } else\
    \ {\n            newString += letter\n        }\n    }\n    return newString\n\
    }\n", "    result := \"\"\n    for _, char := range myString {\n        if char\
    \ >= 'a' && char <= 'z' {\n            result += char - 'a' + 'A'\n        } else\
    \ {\n            result += char\n        }\n    }\n    return result\n}\n", " \
    \   result := \"\"\n    for _, char := range myString {\n        if char >= 'a'\
    \ && char <= 'z' {\n            result += char - 'a' + 'A'\n        } else {\n\
    \            result += char\n        }\n    }\n    return result\n}\n", "    result\
    \ := \"\"\n    for _, char := range myString {\n        if char >= 'a' && char\
    \ <= 'z' {\n            result += string([]byte{char - 'a', char})\n        }\
    \ else {\n            result += string([]byte{char})\n        }\n    }\n    return\
    \ result\n}\n", "    var result string\n    for _, char := range myString {\n\
    \        if char >= 'a' && char <= 'z' {\n            result = result + string(char\
    \ - 'a') + string(char + 'A' - 'a')\n        } else {\n            result = result\
    \ + string(char)\n        }\n    }\n    return result\n}\n", "    result := \"\
    \"\n    for _, char := range myString {\n        if char >= 'a' && char <= 'z'\
    \ {\n            result += char + ('A' - 'a')\n        } else {\n            result\
    \ += char\n        }\n    }\n    return result\n}\n", "    var result string\n\
    \    for _, char := range myString {\n        if char >= 'a' && char <= 'z' {\n\
    \            result += string(char - 'a') + string(char - 'A')\n        } else\
    \ {\n            result += char\n        }\n    }\n    return result\n}\n", " \
    \   result := \"\"\n    for _, char := range myString {\n        if char >= 'a'\
    \ && char <= 'z' {\n            result += string([]byte{char - 'a', char})\n \
    \       } else {\n            result += string([]byte{char})\n        }\n    }\n\
    \    return result\n}\n", "    result := \"\"\n    for _, char := range myString\
    \ {\n        if char >= 'a' && char <= 'z' {\n            result += char - 'a'\
    \ + 'A'\n        } else {\n            result += char\n        }\n    }\n    return\
    \ result\n}\n", "    result := \"\"\n    for _, char := range myString {\n   \
    \     if char >= 'a' && char <= 'z' {\n            result += char - 'a'\n    \
    \    } else {\n            result += char\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, char := range myString {\n        if char\
    \ >= 'a' && char <= 'z' {\n            result += string([]byte{char - 'a', char})\n\
    \        } else {\n            result += string([]byte{char})\n        }\n   \
    \ }\n    return result\n}\n", "    result := \"\"\n    for _, char := range myString\
    \ {\n        if char >= 'a' && char <= 'z' {\n            result += char - 'a'\
    \ + 'A'\n        } else {\n            result += char\n        }\n    }\n    return\
    \ result\n}\n", "    result := \"\"\n    for _, char := range myString {\n   \
    \     if char >= 'a' && char <= 'z' {\n            result += char - 'a'\n    \
    \    } else {\n            result += char\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, char := range myString {\n        if char\
    \ >= 'a' && char <= 'z' {\n            result += char - 'a'\n        } else {\n\
    \            result += char\n        }\n    }\n    return result\n}\n", "    var\
    \ result string\n    for _, char := range myString {\n        switch char {\n\
    \        case 'a':\n            result += \"A\"\n        case 'b':\n         \
    \   result += \"B\"\n        case 'c':\n            result += \"C\"\n        case\
    \ 'd':\n            result += \"D\"\n        case 'e':\n            result +=\
    \ \"E\"\n        case 'f':\n            result += \"F\"\n        case 'g':\n \
    \           result += \"G\"\n        case 'h':\n            result += \"H\"\n\
    \        case 'i':\n            result += \"I\"\n        case 'j':\n         \
    \   result += \"J\"\n        case 'k':\n            result += \"K\"\n        case\
    \ 'l':\n            result += \"L\"\n        case 'm':\n            result +=\
    \ \"M\"\n        case 'n':\n            result += \"N\"\n        case 'o':\n \
    \           result += \"O\"\n        case 'p':\n            result += \"P\"\n\
    \        case 'q':\n            result += \"Q\"\n        case 'r':\n         \
    \   result += \"R\"\n        case 's':\n            result += \"S\"\n        case\
    \ 't':\n            result += \"T\"\n        case 'u':\n            result +=\
    \ \"U\"\n        case 'v':\n            result += \"V\"\n        case 'w':\n \
    \           result += \"W\"\n        case 'x':\n            result += \"X\"\n\
    \        case 'y':\n            result += \"Y\"\n        case 'z':\n         \
    \   result += \"Z\"\n        }\n    }\n    return result\n}\n", "    var result\
    \ string\n    for _, char := range myString {\n        if char >= 'a' && char\
    \ <= 'z' {\n            result += string(char - 'a') + string(char - 'A')\n  \
    \      } else {\n            result += char\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, char := range myString {\n        if char\
    \ >= 'a' && char <= 'z' {\n            result += char - 'a'\n        } else {\n\
    \            result += char\n        }\n    }\n    return result\n}\n", "    result\
    \ := \"\"\n    for _, letter := range myString {\n        if letter == 'a' {\n\
    \            result += \"A\"\n        } else if letter == 'b' {\n            result\
    \ += \"B\"\n        } else if letter == 'c' {\n            result += \"C\"\n \
    \       } else if letter == 'd' {\n            result += \"D\"\n        } else\
    \ if letter == 'e' {\n            result += \"E\"\n        } else if letter ==\
    \ 'f' {\n            result += \"F\"\n        } else if letter == 'g' {\n    \
    \        result += \"G\"\n        } else if letter == 'h' {\n            result\
    \ += \"H\"\n        } else if letter == 'i' {\n            result += \"I\"\n \
    \       } else if letter == 'j' {\n            result += \"J\"\n        } else\
    \ if letter == 'k' {\n            result += \"K\"\n        } else if letter ==\
    \ 'l' {\n            result += \"L\"\n        } else if letter == 'm' {\n    \
    \        result += \"M\"\n        } else if letter == 'n' {\n            result\
    \ += \"N\"\n        } else if letter == 'o' {\n            result += \"O\"\n \
    \       } else if letter == 'p' {\n            result += \"P\"\n        } else\
    \ if letter == 'q' {\n            result += \"Q\"\n        } else if letter ==\
    \ 'r' {\n            result += \"R\"\n        } else if letter == 's' {\n    \
    \        result += \"S\"\n        } else if letter == 't' {\n            result\
    \ += \"T\"\n        } else if letter == 'u' {\n            result += \"U\"\n \
    \       } else if letter == 'v' {\n            result += \"V\"\n        } else\
    \ if letter == 'w' {\n            result += \"W\"\n        } else if letter ==\
    \ 'x' {\n            result += \"X\"\n        } else if letter == 'y' {\n    \
    \        result += \"Y\"\n        } else if letter == 'z' {\n            result\
    \ += \"Z\"\n        }\n    }\n    return result\n}\n", "    result := \"\"\n \
    \   for _, char := range myString {\n        if char >= 'a' && char <= 'z' {\n\
    \            result += string([]byte{char - 'a' + 'A'})\n        } else {\n  \
    \          result += string([]byte{char})\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, letter := range myString {\n        if letter\
    \ == letter.toUpper() {\n            result += letter.toLower()\n        } else\
    \ {\n            result += letter.toUpper()\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, char := range myString {\n        if char\
    \ >= 'a' && char <= 'z' {\n            result += char - 'a'\n        } else {\n\
    \            result += char\n        }\n    }\n    return result\n}\n", "    result\
    \ := \"\"\n    for _, letter := range myString {\n        if letter == letter.toUpper()\
    \ {\n            result += letter.toLower()\n        } else {\n            result\
    \ += letter.toUpper()\n        }\n    }\n    return result\n}\n", "    result\
    \ := \"\"\n    for _, char := range myString {\n        if char >= 'a' && char\
    \ <= 'z' {\n            result += char - 'a'\n        } else {\n            result\
    \ += char\n        }\n    }\n    return result\n}\n", "    var result string\n\
    \    for _, char := range myString {\n        if char >= 'a' && char <= 'z' {\n\
    \            result += string(char - 'a') + string(char - 'A')\n        } else\
    \ {\n            result += char\n        }\n    }\n    return result\n}\n", " \
    \   result := \"\"\n    for _, char := range myString {\n        if char >= 'a'\
    \ && char <= 'z' {\n            result += string([]byte{byte(char)})\n       \
    \ } else {\n            result += string([]byte{byte(char) - 32})\n        }\n\
    \    }\n    return result\n}\n", "    result := \"\"\n    for _, char := range\
    \ myString {\n        if char >= 'a' && char <= 'z' {\n            result += char\
    \ - 'a'\n        } else {\n            result += char\n        }\n    }\n    return\
    \ result\n}\n", "    result := \"\"\n    for _, char := range myString {\n   \
    \     if char >= 'a' && char <= 'z' {\n            result += string([]byte{char\
    \ - 'a', char})\n        } else {\n            result += string([]byte{char})\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char\
    \ := range myString {\n        if char >= 'a' && char <= 'z' {\n            result\
    \ += string([]byte{char - 'a', char})\n        } else {\n            result +=\
    \ string([]byte{char})\n        }\n    }\n    return result\n}\n", "    result\
    \ := \"\"\n    for _, char := range myString {\n        if char >= 'a' && char\
    \ <= 'z' {\n            result += char + ('A' - 'a')\n        } else {\n     \
    \       result += char\n        }\n    }\n    return result\n}\n", "    result\
    \ := \"\"\n    for _, char := range myString {\n        if char >= 'a' && char\
    \ <= 'z' {\n            result += char - 'a'\n        } else {\n            result\
    \ += char\n        }\n    }\n    return result\n}\n", "    result := \"\"\n  \
    \  for _, char := range myString {\n        if char >= 'a' && char <= 'z' {\n\
    \            result += string([]byte{char - 'a', char})\n        } else {\n  \
    \          result += string([]byte{char})\n        }\n    }\n    return result\n\
    }\n", "    var result string\n    for _, char := range myString {\n        if\
    \ char >= 'a' && char <= 'z' {\n            result += string(char - 'a' + 'A')\n\
    \        } else {\n            result += char\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, char := range myString {\n        if char\
    \ >= 'a' && char <= 'z' {\n            result += string([]byte{char - 'a', char})\n\
    \        } else {\n            result += string([]byte{char})\n        }\n   \
    \ }\n    return result\n}\n", "    result := \"\"\n    for _, char := range myString\
    \ {\n        if char >= 'a' && char <= 'z' {\n            result += char + ('A'\
    \ - 'a')\n        } else {\n            result += char\n        }\n    }\n   \
    \ return result\n}\n", "    result := \"\"\n    for _, char := range myString\
    \ {\n        if char >= 'a' && char <= 'z' {\n            result += string([]byte{char\
    \ - 'a', char})\n        } else {\n            result += string([]byte{char})\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char\
    \ := range myString {\n        if char >= 'a' && char <= 'z' {\n            result\
    \ += char - 'a' + 'A'\n        } else {\n            result += char\n        }\n\
    \    }\n    return result\n}\n", "    result := \"\"\n    for _, char := range\
    \ myString {\n        if char >= 'a' && char <= 'z' {\n            result += string([]byte{char\
    \ - 'a', char})\n        } else {\n            result += string([]byte{char})\n\
    \        }\n    }\n    return result\n}\n", "    var result string\n    for _,\
    \ char := range myString {\n        switch char {\n        case 'a':\n       \
    \     result = 'A'\n        case 'b':\n            result = 'B'\n        case\
    \ 'c':\n            result = 'C'\n        case 'd':\n            result = 'D'\n\
    \        case 'e':\n            result = 'E'\n        case 'f':\n            result\
    \ = 'F'\n        case 'g':\n            result = 'G'\n        case 'h':\n    \
    \        result = 'H'\n        case 'i':\n            result = 'I'\n        case\
    \ 'j':\n            result = 'J'\n        case 'k':\n            result = 'K'\n\
    \        case 'l':\n            result = 'L'\n        case 'm':\n            result\
    \ = 'M'\n        case 'n':\n            result = 'N'\n        case 'o':\n    \
    \        result = 'O'\n        case 'p':\n            result = 'P'\n        case\
    \ 'q':\n            result = 'Q'\n        case 'r':\n            result = 'R'\n\
    \        case 's':\n            result = 'S'\n        case 't':\n            result\
    \ = 'T'\n        case 'u':\n            result = 'U'\n        case 'v':\n    \
    \        result = 'V'\n        case 'w':\n            result = 'W'\n        case\
    \ 'x':\n            result = 'X'\n        case 'y':\n            result = 'Y'\n\
    \        case 'z':\n            result = 'Z'\n        default:\n            result\
    \ = char\n        }\n    }\n    return result\n}\n", "    result := \"\"\n   \
    \ for _, char := range myString {\n        if char >= 'a' && char <= 'z' {\n \
    \           result += char + ('A' - 'a')\n        } else {\n            result\
    \ += char\n        }\n    }\n    return result\n}\n", "    result := \"\"\n  \
    \  for _, char := range myString {\n        if char >= 'a' && char <= 'z' {\n\
    \            result += string([]byte{char - 'a', char})\n        } else {\n  \
    \          result += string([]byte{char})\n        }\n    }\n    return result\n\
    }\n", "    var result string\n    for _, char := range myString {\n        if\
    \ char >= 'a' && char <= 'z' {\n            result += char - 'a' + 'A'\n     \
    \   } else {\n            result += char\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, char := range myString {\n        if char\
    \ >= 'a' && char <= 'z' {\n            result += char - 'a'\n        } else {\n\
    \            result += char\n        }\n    }\n    return result\n}\n", "    var\
    \ newString string\n    for _, char := range myString {\n        if char >= 'a'\
    \ && char <= 'z' {\n            newString += string(char - 'a') + string(char\
    \ - 'A')\n        } else {\n            newString += char\n        }\n    }\n\
    \    return newString\n}\n", "    result := \"\"\n    for _, char := range myString\
    \ {\n        if char >= 'a' && char <= 'z' {\n            result += char - 'a'\n\
    \        } else {\n            result += char\n        }\n    }\n    return result\n\
    }\n", "    var result string\n    for _, char := range myString {\n        if\
    \ char >= 'a' && char <= 'z' {\n            result += char - 'a'\n        } else\
    \ {\n            result += char\n        }\n    }\n    return result\n}\n", " \
    \   result := \"\"\n    for _, letter := range myString {\n        if letter ==\
    \ 'a' {\n            letter = 'A'\n        }\n        if letter == 'A' {\n   \
    \         letter = 'a'\n        }\n        if letter == '-' {\n            letter\
    \ = '_'\n        }\n        if letter == '_' {\n            letter = '-'\n   \
    \     }\n        if letter == '.' {\n            letter = '_'\n        }\n   \
    \     if letter == '_' {\n            letter = '.'\n        }\n        if letter\
    \ == '/' {\n            letter = '_'\n        }\n        if letter == '_' {\n\
    \            letter = '/'\n        }\n        if letter == '\\\\' {\n        \
    \    letter = '_'\n        }\n        if letter == '_' {\n            letter =\
    \ '\\\\'\n        }\n        if letter == '?' {\n            letter = '_'\n  \
    \      }\n        if letter == '_' {\n            letter = '?'\n        }\n  \
    \      if letter == '!' {\n            letter = '_'\n        }\n        if letter\
    \ == '_' {\n            letter = '!'\n        }\n        if letter == '@' {\n\
    \            letter = '_'\n        }\n        if letter == '_' {\n           \
    \ letter = '@'\n        }\n        if letter == '#' {\n            letter = '_'\n\
    \        }\n        if letter == '_' {\n            letter = '#'\n        }\n\
    \        if letter == '$' {\n            letter = '_'\n        }\n        if letter\
    \ == '_' {\n            letter = '$'\n        }\n        if letter == '%' {\n\
    \            letter = '_'\n        }\n        if letter == '_' {\n           \
    \ letter = '%'\n        }\n        if letter == '^' {\n            letter = '_'\n\
    \        }\n        if letter == '_' {\n            letter = '^'\n        }\n\
    \        if letter == '&' {\n            letter = '_'\n        }\n        if letter\
    \ == '_' {\n            letter = '&'\n        }\n        if letter == '*' {\n\
    \            letter = '_'\n        }\n        if letter == '_' {\n           \
    \ letter = '*'\n        }\n        if letter == '(' {\n            letter = '_'\n\
    \        }\n        if letter == '_' {\n            letter = '('\n        }\n\
    \        if letter == ')' {\n            letter = '_'\n        }\n        if letter\
    \ == '_' {\n            letter = ')'\n        }\n        if letter == '+' {\n\
    \            letter = '_'\n        }\n        if letter == '_' {\n           \
    \ letter = '+'\n        }\n        if letter == '=' {\n            letter = '_'\n\
    \        }\n        if letter == '", "    result := \"\"\n    for _, letter :=\
    \ range myString {\n        if letter == 'a' {\n            result += \"A\"\n\
    \        } else if letter == 'b' {\n            result += \"B\"\n        } else\
    \ if letter == 'c' {\n            result += \"C\"\n        } else if letter ==\
    \ 'd' {\n            result += \"D\"\n        } else if letter == 'e' {\n    \
    \        result += \"E\"\n        } else if letter == 'f' {\n            result\
    \ += \"F\"\n        } else if letter == 'g' {\n            result += \"G\"\n \
    \       } else if letter == 'h' {\n            result += \"H\"\n        } else\
    \ if letter == 'i' {\n            result += \"I\"\n        } else if letter ==\
    \ 'j' {\n            result += \"J\"\n        } else if letter == 'k' {\n    \
    \        result += \"K\"\n        } else if letter == 'l' {\n            result\
    \ += \"L\"\n        } else if letter == 'm' {\n            result += \"M\"\n \
    \       } else if letter == 'n' {\n            result += \"N\"\n        } else\
    \ if letter == 'o' {\n            result += \"O\"\n        } else if letter ==\
    \ 'p' {\n            result += \"P\"\n        } else if letter == 'q' {\n    \
    \        result += \"Q\"\n        } else if letter == 'r' {\n            result\
    \ += \"R\"\n        } else if letter == 's' {\n            result += \"S\"\n \
    \       } else if letter == 't' {\n            result += \"T\"\n        } else\
    \ if letter == 'u' {\n            result += \"U\"\n        } else if letter ==\
    \ 'v' {\n            result += \"V\"\n        } else if letter == 'w' {\n    \
    \        result += \"W\"\n        } else if letter == 'x' {\n            result\
    \ += \"X\"\n        } else if letter == 'y' {\n            result += \"Y\"\n \
    \       } else if letter == 'z' {\n            result += \"Z\"\n        } else\
    \ {\n            result += letter\n        }\n    }\n    return result\n}\n",
  "    var newString string\n    for _, char := range myString {\n        if char\
    \ >= 'a' && char <= 'z' {\n            newString += string(char - 'a') + string(char\
    \ - 'A')\n        } else {\n            newString += char\n        }\n    }\n\
    \    return newString\n}\n", "    var result string\n    for _, char := range\
    \ myString {\n        if char >= 'a' && char <= 'z' {\n            result += string(char\
    \ - 'a' + 'A')\n        } else {\n            result += char\n        }\n    }\n\
    \    return result\n}\n", "    result := \"\"\n    for _, char := range myString\
    \ {\n        if char >= 'a' && char <= 'z' {\n            result += string([]byte{char\
    \ - 'a', char})\n        } else {\n            result += string([]byte{char})\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char\
    \ := range myString {\n        if char >= 'a' && char <= 'z' {\n            result\
    \ += string([]byte{char - 'a', char})\n        } else {\n            result +=\
    \ string([]byte{char})\n        }\n    }\n    return result\n}\n", "    result\
    \ := \"\"\n    for _, char := range myString {\n        if char >= 'a' && char\
    \ <= 'z' {\n            result += char - 'a' + 'A'\n        } else {\n       \
    \     result += char\n        }\n    }\n    return result\n}\n", "    var myStringLower\
    \ string\n    var myStringUpper string\n    var myStringUpperLower string\n\n\
    \    myStringLower = strings.ToLower(myString)\n    myStringUpper = strings.ToUpper(myString)\n\
    \    myStringUpperLower = strings.ToUpper(myStringLower)\n\n    return myStringUpperLower\n\
    }\n", "    var newString string\n    for _, char := range myString {\n       \
    \ if char >= 'a' && char <= 'z' {\n            newString += string(char - 'a'\
    \ + 'A')\n        } else {\n            newString += char\n        }\n    }\n\
    \    return newString\n}\n", "    result := \"\"\n    for _, char := range myString\
    \ {\n        if char >= 'a' && char <= 'z' {\n            result += char - 'a'\n\
    \        } else {\n            result += char\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, char := range myString {\n        if char\
    \ >= 'a' && char <= 'z' {\n            result += char - 'a'\n        } else {\n\
    \            result += char\n        }\n    }\n    return result\n}\n", "    result\
    \ := \"\"\n    for _, char := range myString {\n        if char >= 'a' && char\
    \ <= 'z' {\n            result += string(char - 'a') + string(char - 'A')\n  \
    \      } else {\n            result += char\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, char := range myString {\n        if char\
    \ >= 'a' && char <= 'z' {\n            result += char - 'a'\n        } else {\n\
    \            result += char\n        }\n    }\n    return result\n}\n", "    var\
    \ result string\n    for _, char := range myString {\n        if char >= 'a' &&\
    \ char <= 'z' {\n            result += string(char - 'a' + 'A')\n        } else\
    \ {\n            result += char\n        }\n    }\n    return result\n}\n", " \
    \   result := \"\"\n    for _, char := range myString {\n        if char >= 'a'\
    \ && char <= 'z' {\n            result += char + ('A' - 'a')\n        } else {\n\
    \            result += char\n        }\n    }\n    return result\n}\n", "    var\
    \ newString string\n    for _, char := range myString {\n        if char >= 'a'\
    \ && char <= 'z' {\n            newString += string(char - 'a' + 'A')\n      \
    \  } else {\n            newString += string(char)\n        }\n    }\n    return\
    \ newString\n}\n", "    result := \"\"\n    for _, char := range myString {\n\
    \        if char >= 'a' && char <= 'z' {\n            result += char - 'a'\n \
    \       } else {\n            result += char\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, letter := range myString {\n        if letter\
    \ == 'a' {\n            result += \"A\"\n        } else if letter == 'b' {\n \
    \           result += \"B\"\n        } else if letter == 'c' {\n            result\
    \ += \"C\"\n        } else if letter == 'd' {\n            result += \"D\"\n \
    \       } else if letter == 'e' {\n            result += \"E\"\n        } else\
    \ if letter == 'f' {\n            result += \"F\"\n        } else if letter ==\
    \ 'g' {\n            result += \"G\"\n        } else if letter == 'h' {\n    \
    \        result += \"H\"\n        } else if letter == 'i' {\n            result\
    \ += \"I\"\n        } else if letter == 'j' {\n            result += \"J\"\n \
    \       } else if letter == 'k' {\n            result += \"K\"\n        } else\
    \ if letter == 'l' {\n            result += \"L\"\n        } else if letter ==\
    \ 'm' {\n            result += \"M\"\n        } else if letter == 'n' {\n    \
    \        result += \"N\"\n        } else if letter == 'o' {\n            result\
    \ += \"O\"\n        } else if letter == 'p' {\n            result += \"P\"\n \
    \       } else if letter == 'q' {\n            result += \"Q\"\n        } else\
    \ if letter == 'r' {\n            result += \"R\"\n        } else if letter ==\
    \ 's' {\n            result += \"S\"\n        } else if letter == 't' {\n    \
    \        result += \"T\"\n        } else if letter == 'u' {\n            result\
    \ += \"U\"\n        } else if letter == 'v' {\n            result += \"V\"\n \
    \       } else if letter == 'w' {\n            result += \"W\"\n        } else\
    \ if letter == 'x' {\n            result += \"X\"\n        } else if letter ==\
    \ 'y' {\n            result += \"Y\"\n        } else if letter == 'z' {\n    \
    \        result += \"Z\"\n        } else {\n            result += letter\n   \
    \     }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, letter\
    \ := range myString {\n        if letter == ' ' {\n            result += \" \"\
    \n        } else {\n            result += string([]byte{letter, unicode.ToLower(letter)})\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char\
    \ := range myString {\n        if char >= 'a' && char <= 'z' {\n            result\
    \ += string(char - 'a') + string(char - 'A')\n        } else {\n            result\
    \ += char\n        }\n    }\n    return result\n}\n", "    var result string\n\
    \    for _, char := range myString {\n        if char >= 'a' && char <= 'z' {\n\
    \            result += string(char - 'a') + string(char - 'A')\n        } else\
    \ {\n            result += char\n        }\n    }\n    return result\n}\n", " \
    \   result := \"\"\n    for _, char := range myString {\n        if char >= 'a'\
    \ && char <= 'z' {\n            result += char - 'a'\n        } else {\n     \
    \       result += char\n        }\n    }\n    return result\n}\n", "    result\
    \ := \"\"\n    for _, char := range myString {\n        if char >= 'a' && char\
    \ <= 'z' {\n            result += char - 'a'\n        } else {\n            result\
    \ += char\n        }\n    }\n    return result\n}\n", "    result := \"\"\n  \
    \  for _, char := range myString {\n        if char >= 'a' && char <= 'z' {\n\
    \            result += string([]byte{byte(char)})\n        } else {\n        \
    \    result += string([]byte{byte(char) - 32})\n        }\n    }\n    return result\n\
    }\n", "    var result string\n    for _, char := range myString {\n        if\
    \ char >= 'a' && char <= 'z' {\n            result += string(char - 'a' + 'A')\n\
    \        } else {\n            result += char\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, letter := range myString {\n        if letter\
    \ == 'a' {\n            result += \"A\"\n        } else if letter == 'b' {\n \
    \           result += \"B\"\n        } else if letter == 'c' {\n            result\
    \ += \"C\"\n        } else if letter == 'd' {\n            result += \"D\"\n \
    \       } else if letter == 'e' {\n            result += \"E\"\n        } else\
    \ if letter == 'f' {\n            result += \"F\"\n        } else if letter ==\
    \ 'g' {\n            result += \"G\"\n        } else if letter == 'h' {\n    \
    \        result += \"H\"\n        } else if letter == 'i' {\n            result\
    \ += \"I\"\n        } else if letter == 'j' {\n            result += \"J\"\n \
    \       } else if letter == 'k' {\n            result += \"K\"\n        } else\
    \ if letter == 'l' {\n            result += \"L\"\n        } else if letter ==\
    \ 'm' {\n            result += \"M\"\n        } else if letter == 'n' {\n    \
    \        result += \"N\"\n        } else if letter == 'o' {\n            result\
    \ += \"O\"\n        } else if letter == 'p' {\n            result += \"P\"\n \
    \       } else if letter == 'q' {\n            result += \"Q\"\n        } else\
    \ if letter == 'r' {\n            result += \"R\"\n        } else if letter ==\
    \ 's' {\n            result += \"S\"\n        } else if letter == 't' {\n    \
    \        result += \"T\"\n        } else if letter == 'u' {\n            result\
    \ += \"U\"\n        } else if letter == 'v' {\n            result += \"V\"\n \
    \       } else if letter == 'w' {\n            result += \"W\"\n        } else\
    \ if letter == 'x' {\n            result += \"X\"\n        } else if letter ==\
    \ 'y' {\n            result += \"Y\"\n        } else if letter == 'z' {\n    \
    \        result += \"Z\"\n        } else {\n            result += letter\n   \
    \     }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char\
    \ := range myString {\n        if char >= 'a' && char <= 'z' {\n            result\
    \ += string([]byte{char - 'a', char})\n        } else {\n            result +=\
    \ string([]byte{char})\n        }\n    }\n    return result\n}\n", "    var result\
    \ string\n    for _, char := range myString {\n        if char >= 'a' && char\
    \ <= 'z' {\n            result = result + string(char - 'a') + string(char - 'A')\n\
    \        } else {\n            result = result + char\n        }\n    }\n    return\
    \ result\n}\n", "    var result string\n    for _, char := range myString {\n\
    \        if char >= 'a' && char <= 'z' {\n            result = result + string(char\
    \ - 'a') + string(char - 'A')\n        } else {\n            result = result +\
    \ char\n        }\n    }\n    return result\n}\n", "    var result string\n  \
    \  for _, char := range myString {\n        if char >= 'a' && char <= 'z' {\n\
    \            result += string(char - 'a' + 'A')\n        } else {\n          \
    \  result += char\n        }\n    }\n    return result\n}\n", "    result := \"\
    \"\n    for _, char := range myString {\n        if char >= 'a' && char <= 'z'\
    \ {\n            result += string([]byte{char - 'a', char})\n        } else {\n\
    \            result += string([]byte{char})\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, char := range myString {\n        if char\
    \ >= 'a' && char <= 'z' {\n            result += string([]byte{byte(char)})\n\
    \        } else {\n            result += string([]byte{byte(char) - 32})\n   \
    \     }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char\
    \ := range myString {\n        if char >= 'a' && char <= 'z' {\n            result\
    \ += char - 'a'\n        } else {\n            result += char\n        }\n   \
    \ }\n    return result\n}\n", "    result := \"\"\n    for _, char := range myString\
    \ {\n        if char >= 'a' && char <= 'z' {\n            result += char + ('A'\
    \ - 'a')\n        } else {\n            result += char\n        }\n    }\n   \
    \ return result\n}\n", "    result := \"\"\n    for _, letter := range myString\
    \ {\n        if letter == letter.toUpper() {\n            result += letter.toLower()\n\
    \        } else {\n            result += letter\n        }\n    }\n    return\
    \ result\n}\n", "    var newString string\n    for _, char := range myString {\n\
    \        if char >= 'a' && char <= 'z' {\n            newString += string(char\
    \ - 'a' + 'A')\n        } else {\n            newString += string(char)\n    \
    \    }\n    }\n    return newString\n}\n", "    var result string\n    for _,\
    \ char := range myString {\n        if char >= 'a' && char <= 'z' {\n        \
    \    result += string(char - 'a') + string(char - 'A')\n        } else {\n   \
    \         result += char\n        }\n    }\n    return result\n}\n", "    result\
    \ := \"\"\n    for _, letter := range myString {\n        if letter == 'a' {\n\
    \            result += \"A\"\n        } else if letter == 'b' {\n            result\
    \ += \"B\"\n        } else if letter == 'c' {\n            result += \"C\"\n \
    \       } else if letter == 'd' {\n            result += \"D\"\n        } else\
    \ if letter == 'e' {\n            result += \"E\"\n        } else if letter ==\
    \ 'f' {\n            result += \"F\"\n        } else if letter == 'g' {\n    \
    \        result += \"G\"\n        } else if letter == 'h' {\n            result\
    \ += \"H\"\n        } else if letter == 'i' {\n            result += \"I\"\n \
    \       } else if letter == 'j' {\n            result += \"J\"\n        } else\
    \ if letter == 'k' {\n            result += \"K\"\n        } else if letter ==\
    \ 'l' {\n            result += \"L\"\n        } else if letter == 'm' {\n    \
    \        result += \"M\"\n        } else if letter == 'n' {\n            result\
    \ += \"N\"\n        } else if letter == 'o' {\n            result += \"O\"\n \
    \       } else if letter == 'p' {\n            result += \"P\"\n        } else\
    \ if letter == 'q' {\n            result += \"Q\"\n        } else if letter ==\
    \ 'r' {\n            result += \"R\"\n        } else if letter == 's' {\n    \
    \        result += \"S\"\n        } else if letter == 't' {\n            result\
    \ += \"T\"\n        } else if letter == 'u' {\n            result += \"U\"\n \
    \       } else if letter == 'v' {\n            result += \"V\"\n        } else\
    \ if letter == 'w' {\n            result += \"W\"\n        } else if letter ==\
    \ 'x' {\n            result += \"X\"\n        } else if letter == 'y' {\n    \
    \        result += \"Y\"\n        } else if letter == 'z' {\n            result\
    \ += \"Z\"\n        } else {\n            result += letter\n        }\n    }\n\
    \    return result\n}\n", "    result := \"\"\n    for _, char := range myString\
    \ {\n        if char >= 'a' && char <= 'z' {\n            result += char - 'a'\n\
    \        } else {\n            result += char\n        }\n    }\n    return result\n\
    }\n", "    var newString string\n    for _, char := range myString {\n       \
    \ if char >= 'a' && char <= 'z' {\n            newString += string(char - 'a')\
    \ + string(char - 'A')\n        } else {\n            newString += char\n    \
    \    }\n    }\n    return newString\n}\n", "    result := \"\"\n    for _, char\
    \ := range myString {\n        if char >= 'a' && char <= 'z' {\n            result\
    \ += char - 'a' + 'A'\n        } else {\n            result += char\n        }\n\
    \    }\n    return result\n}\n", "    result := \"\"\n    for _, char := range\
    \ myString {\n        if char >= 'a' && char <= 'z' {\n            result += char\
    \ - 'a' + 'A'\n        } else {\n            result += char\n        }\n    }\n\
    \    return result\n}\n", "    result := \"\"\n    for _, char := range myString\
    \ {\n        if char >= 'a' && char <= 'z' {\n            result += char - 'a'\
    \ + 'A'\n        } else {\n            result += char\n        }\n    }\n    return\
    \ result\n}\n", "    result := \"\"\n    for _, char := range myString {\n   \
    \     if char >= 'a' && char <= 'z' {\n            result += string(char - 'a')\
    \ + string(char - 'A')\n        } else {\n            result += char\n       \
    \ }\n    }\n    return result\n}\n", "    var result string\n    for _, char :=\
    \ range myString {\n        if char >= 'a' && char <= 'z' {\n            result\
    \ += string(char - 'a' + 'A')\n        } else {\n            result += char\n\
    \        }\n    }\n    return result\n}\n", "    var newString string\n    for\
    \ _, char := range myString {\n        if char >= 'a' && char <= 'z' {\n     \
    \       newString += string(char - 'a' + 'A')\n        } else {\n            newString\
    \ += char\n        }\n    }\n    return newString\n}\n", "    result := \"\"\n\
    \    for _, char := range myString {\n        if char >= 'a' && char <= 'z' {\n\
    \            result += string(char - 'a') + string(char - 'A')\n        } else\
    \ {\n            result += char\n        }\n    }\n    return result\n}\n", " \
    \   result := \"\"\n    for _, char := range myString {\n        if char >= 'a'\
    \ && char <= 'z' {\n            result += char - 'a'\n        } else {\n     \
    \       result += char\n        }\n    }\n    return result\n}\n", "    result\
    \ := \"\"\n    for _, letter := range myString {\n        if letter == letter.toUpper()\
    \ {\n            result += letter.toLower()\n        } else {\n            result\
    \ += letter\n        }\n    }\n    return result\n}\n", "    result := \"\"\n\
    \    for _, char := range myString {\n        if char >= 'a' && char <= 'z' {\n\
    \            result += char - 'a'\n        } else {\n            result += char\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char\
    \ := range myString {\n        if char >= 'a' && char <= 'z' {\n            result\
    \ += string([]byte{char - 'a', char})\n        } else {\n            result +=\
    \ string([]byte{char})\n        }\n    }\n    return result\n}\n", "    result\
    \ := \"\"\n    for _, char := range myString {\n        if char >= 'a' && char\
    \ <= 'z' {\n            result += string(char - 'a') + string(char - 'A')\n  \
    \      } else {\n            result += char\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, char := range myString {\n        if char\
    \ >= 'a' && char <= 'z' {\n            result += string([]byte{char - 'a', char})\n\
    \        } else {\n            result += string([]byte{char})\n        }\n   \
    \ }\n    return result\n}\n", "    result := \"\"\n    for _, char := range myString\
    \ {\n        if char >= 'a' && char <= 'z' {\n            result += char - 'a'\
    \ + 'A'\n        } else {\n            result += char\n        }\n    }\n    return\
    \ result\n}\n", "    result := \"\"\n    for _, char := range myString {\n   \
    \     if char >= 'a' && char <= 'z' {\n            result += string([]byte{char\
    \ - 'a', char})\n        } else {\n            result += string([]byte{char})\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char\
    \ := range myString {\n        if char >= 'a' && char <= 'z' {\n            result\
    \ += char - 'a' + 'A'\n        } else {\n            result += char\n        }\n\
    \    }\n    return result\n}\n", "    var result string\n    for _, char := range\
    \ myString {\n        if char >= 'a' && char <= 'z' {\n            result += string(char\
    \ - 'a') + string(char - 'A')\n        } else {\n            result += char\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char\
    \ := range myString {\n        if char >= 'a' && char <= 'z' {\n            result\
    \ += char + ('A' - 'a')\n        } else {\n            result += char\n      \
    \  }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char :=\
    \ range myString {\n        if char >= 'a' && char <= 'z' {\n            result\
    \ += char - 'a' + 'A'\n        } else {\n            result += char\n        }\n\
    \    }\n    return result\n}\n", "    result := \"\"\n    for _, char := range\
    \ myString {\n        if char >= 'a' && char <= 'z' {\n            result += string([]byte{char\
    \ - 'a', char})\n        } else {\n            result += string([]byte{char})\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char\
    \ := range myString {\n        if char >= 'a' && char <= 'z' {\n            result\
    \ += char - 'a'\n        } else {\n            result += char\n        }\n   \
    \ }\n    return result\n}\n", "    result := \"\"\n    for _, char := range myString\
    \ {\n        if char >= 'a' && char <= 'z' {\n            result += string([]byte{char\
    \ - 'a', char})\n        } else {\n            result += string([]byte{char})\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char\
    \ := range myString {\n        if char >= 'a' && char <= 'z' {\n            result\
    \ += string([]byte{char - 'a', char})\n        } else {\n            result +=\
    \ string([]byte{char})\n        }\n    }\n    return result\n}\n", "    result\
    \ := \"\"\n    for _, char := range myString {\n        if char >= 'a' && char\
    \ <= 'z' {\n            result += char - 'a'\n        } else {\n            result\
    \ += char\n        }\n    }\n    return result\n}\n", "    var newString string\n\
    \    for _, char := range myString {\n        if char >= 'a' && char <= 'z' {\n\
    \            newString += string(char - 'a' + 'A')\n        } else {\n       \
    \     newString += char\n        }\n    }\n    return newString\n}\n", "    var\
    \ result string\n    for _, char := range myString {\n        if char >= 'a' &&\
    \ char <= 'z' {\n            result += string(char - 'a' + 'A')\n        } else\
    \ {\n            result += char\n        }\n    }\n    return result\n}\n", " \
    \   result := \"\"\n    for _, letter := range myString {\n        if letter ==\
    \ 'a' {\n            result += \"A\"\n        } else if letter == 'b' {\n    \
    \        result += \"B\"\n        } else if letter == 'c' {\n            result\
    \ += \"C\"\n        } else if letter == 'd' {\n            result += \"D\"\n \
    \       } else if letter == 'e' {\n            result += \"E\"\n        } else\
    \ if letter == 'f' {\n            result += \"F\"\n        } else if letter ==\
    \ 'g' {\n            result += \"G\"\n        } else if letter == 'h' {\n    \
    \        result += \"H\"\n        } else if letter == 'i' {\n            result\
    \ += \"I\"\n        } else if letter == 'j' {\n            result += \"J\"\n \
    \       } else if letter == 'k' {\n            result += \"K\"\n        } else\
    \ if letter == 'l' {\n            result += \"L\"\n        } else if letter ==\
    \ 'm' {\n            result += \"M\"\n        } else if letter == 'n' {\n    \
    \        result += \"N\"\n        } else if letter == 'o' {\n            result\
    \ += \"O\"\n        } else if letter == 'p' {\n            result += \"P\"\n \
    \       } else if letter == 'q' {\n            result += \"Q\"\n        } else\
    \ if letter == 'r' {\n            result += \"R\"\n        } else if letter ==\
    \ 's' {\n            result += \"S\"\n        } else if letter == 't' {\n    \
    \        result += \"T\"\n        } else if letter == 'u' {\n            result\
    \ += \"U\"\n        } else if letter == 'v' {\n            result += \"V\"\n \
    \       } else if letter == 'w' {\n            result += \"W\"\n        } else\
    \ if letter == 'x' {\n            result += \"X\"\n        } else if letter ==\
    \ 'y' {\n            result += \"Y\"\n        } else if letter == 'z' {\n    \
    \        result += \"Z\"\n        } else {\n            result += letter\n   \
    \     }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char\
    \ := range myString {\n        if char >= 'a' && char <= 'z' {\n            result\
    \ += char - 'a'\n        } else {\n            result += char\n        }\n   \
    \ }\n    return result\n}\n", "    var result string\n    for _, char := range\
    \ myString {\n        if char >= 'a' && char <= 'z' {\n            result += string(char\
    \ - 'a' + 'A')\n        } else {\n            result += char\n        }\n    }\n\
    \    return result\n}\n", "    result := \"\"\n    for _, char := range myString\
    \ {\n        if char >= 'a' && char <= 'z' {\n            result += char + ('A'\
    \ - 'a')\n        } else {\n            result += char\n        }\n    }\n   \
    \ return result\n}\n", "    result := \"\"\n    for _, char := range myString\
    \ {\n        if char >= 'a' && char <= 'z' {\n            result += string([]byte{char\
    \ - 'a', char})\n        } else {\n            result += string([]byte{char})\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char\
    \ := range myString {\n        if char >= 'a' && char <= 'z' {\n            result\
    \ += char - 'a'\n        } else {\n            result += char\n        }\n   \
    \ }\n    return result\n}\n", "    result := \"\"\n    for _, char := range myString\
    \ {\n        if char >= 'a' && char <= 'z' {\n            result += string([]byte{char\
    \ - 'a', char})\n        } else {\n            result += string([]byte{char})\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char\
    \ := range myString {\n        if char >= 'a' && char <= 'z' {\n            result\
    \ += char + ('A' - 'a')\n        } else {\n            result += char\n      \
    \  }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char :=\
    \ range myString {\n        if char >= 'a' && char <= 'z' {\n            result\
    \ += char - 'a'\n        } else {\n            result += char\n        }\n   \
    \ }\n    return result\n}\n", "    result := \"\"\n    for _, char := range myString\
    \ {\n        if char >= 'a' && char <= 'z' {\n            result += char - 'a'\n\
    \        } else {\n            result += char\n        }\n    }\n    return result\n\
    }\n", "    var result string\n    for _, char := range myString {\n        if\
    \ char >= 'a' && char <= 'z' {\n            result += string(char - 'a' + 'A')\n\
    \        } else {\n            result += char\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, char := range myString {\n        if char\
    \ >= 'a' && char <= 'z' {\n            result += char - 'a'\n        } else {\n\
    \            result += char\n        }\n    }\n    return result\n}\n", "    var\
    \ result string\n    for _, char := range myString {\n        if char >= 'a' &&\
    \ char <= 'z' {\n            result += char - 'a' + 'A'\n        } else {\n  \
    \          result += char\n        }\n    }\n    return result\n}\n", "    var\
    \ newString string\n    for _, char := range myString {\n        if char >= 'a'\
    \ && char <= 'z' {\n            newString += string(char - 'a') + string(char\
    \ - 'A')\n        } else {\n            newString += char\n        }\n    }\n\
    \    return newString\n}\n", "    result := \"\"\n    for _, char := range myString\
    \ {\n        if char >= 'a' && char <= 'z' {\n            result += char - 'a'\n\
    \        } else {\n            result += char\n        }\n    }\n    return result\n\
    }\n", "    var result string\n    for _, char := range myString {\n        if\
    \ char >= 'a' && char <= 'z' {\n            result += string(char - 'a') + string(char\
    \ - 'A')\n        } else {\n            result += char\n        }\n    }\n   \
    \ return result\n}\n", "    result := \"\"\n    for _, char := range myString\
    \ {\n        if char >= 'a' && char <= 'z' {\n            result += char - 'a'\
    \ + 'A'\n        } else {\n            result += char\n        }\n    }\n    return\
    \ result\n}\n", "    var result string\n    for _, char := range myString {\n\
    \        if char >= 'a' && char <= 'z' {\n            result += string(char -\
    \ 'a') + string(char - 'A')\n        } else {\n            result += char\n  \
    \      }\n    }\n    return result\n}\n", "    var result string\n    for _, char\
    \ := range myString {\n        switch char {\n        case 'a':\n            result\
    \ = 'A'\n        case 'b':\n            result = 'B'\n        case 'c':\n    \
    \        result = 'C'\n        case 'd':\n            result = 'D'\n        case\
    \ 'e':\n            result = 'E'\n        case 'f':\n            result = 'F'\n\
    \        case 'g':\n            result = 'G'\n        case 'h':\n            result\
    \ = 'H'\n        case 'i':\n            result = 'I'\n        case 'j':\n    \
    \        result = 'J'\n        case 'k':\n            result = 'K'\n        case\
    \ 'l':\n            result = 'L'\n        case 'm':\n            result = 'M'\n\
    \        case 'n':\n            result = 'N'\n        case 'o':\n            result\
    \ = 'O'\n        case 'p':\n            result = 'P'\n        case 'q':\n    \
    \        result = 'Q'\n        case 'r':\n            result = 'R'\n        case\
    \ 's':\n            result = 'S'\n        case 't':\n            result = 'T'\n\
    \        case 'u':\n            result = 'U'\n        case 'v':\n            result\
    \ = 'V'\n        case 'w':\n            result = 'W'\n        case 'x':\n    \
    \        result = 'X'\n        case 'y':\n            result = 'Y'\n        case\
    \ 'z':\n            result = 'Z'\n        default:\n            result = char\n\
    \        }\n    }\n    return result\n}\n", "    var myString2 string\n    for\
    \ _, char := range myString {\n        if char >= 'a' && char <= 'z' {\n     \
    \       myString2 += string(char - 'a') + string(char - 'A')\n        } else {\n\
    \            myString2 += string(char)\n        }\n    }\n    return myString2\n\
    }\n", "    result := \"\"\n    for _, char := range myString {\n        if char\
    \ >= 'a' && char <= 'z' {\n            result += char + ('A' - 'a')\n        }\
    \ else {\n            result += char\n        }\n    }\n    return result\n}\n",
  "    result := \"\"\n    for _, char := range myString {\n        if char >= 'a'\
    \ && char <= 'z' {\n            result += string([]byte{char - 'a', char})\n \
    \       } else {\n            result += string([]byte{char})\n        }\n    }\n\
    \    return result\n}\n", "    result := \"\"\n    for _, char := range myString\
    \ {\n        if char >= 'a' && char <= 'z' {\n            result += string([]byte{char\
    \ - 'a', char})\n        } else {\n            result += string([]byte{char})\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char\
    \ := range myString {\n        if char >= 'a' && char <= 'z' {\n            result\
    \ += char - 'a' + 'A'\n        } else {\n            result += char\n        }\n\
    \    }\n    return result\n}\n", "    result := \"\"\n    for _, char := range\
    \ myString {\n        if char >= 'a' && char <= 'z' {\n            result += char\
    \ - 'a' + 'A'\n        } else {\n            result += char\n        }\n    }\n\
    \    return result\n}\n", "    result := \"\"\n    for _, char := range myString\
    \ {\n        if char >= 'a' && char <= 'z' {\n            result += char - 'a'\n\
    \        } else {\n            result += char\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, char := range myString {\n        if char\
    \ >= 'a' && char <= 'z' {\n            result += char + ('A' - 'a')\n        }\
    \ else {\n            result += char\n        }\n    }\n    return result\n}\n",
  "    result := \"\"\n    for _, char := range myString {\n        if char >= 'a'\
    \ && char <= 'z' {\n            result += char - 'a'\n        } else {\n     \
    \       result += char\n        }\n    }\n    return result\n}\n", "    result\
    \ := \"\"\n    for _, char := range myString {\n        if char >= 'a' && char\
    \ <= 'z' {\n            result += string(char - 'a') + string(char - 'A')\n  \
    \      } else {\n            result += char\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, char := range myString {\n        if char\
    \ >= 'a' && char <= 'z' {\n            result += char - 'a' + 'A'\n        } else\
    \ {\n            result += char\n        }\n    }\n    return result\n}\n", " \
    \   result := \"\"\n    for _, char := range myString {\n        if char >= 'a'\
    \ && char <= 'z' {\n            result += string([]byte{char - 'a', char})\n \
    \       } else {\n            result += string([]byte{char})\n        }\n    }\n\
    \    return result\n}\n", "    result := \"\"\n    for _, char := range myString\
    \ {\n        if char >= 'a' && char <= 'z' {\n            result += char - 'a'\
    \ + 'A'\n        } else {\n            result += char\n        }\n    }\n    return\
    \ result\n}\n", "    result := \"\"\n    for _, letter := range myString {\n \
    \       if letter == 'a' {\n            result += \"A\"\n        } else if letter\
    \ == 'b' {\n            result += \"B\"\n        } else if letter == 'c' {\n \
    \           result += \"C\"\n        } else if letter == 'd' {\n            result\
    \ += \"D\"\n        } else if letter == 'e' {\n            result += \"E\"\n \
    \       } else if letter == 'f' {\n            result += \"F\"\n        } else\
    \ if letter == 'g' {\n            result += \"G\"\n        } else if letter ==\
    \ 'h' {\n            result += \"H\"\n        } else if letter == 'i' {\n    \
    \        result += \"I\"\n        } else if letter == 'j' {\n            result\
    \ += \"J\"\n        } else if letter == 'k' {\n            result += \"K\"\n \
    \       } else if letter == 'l' {\n            result += \"L\"\n        } else\
    \ if letter == 'm' {\n            result += \"M\"\n        } else if letter ==\
    \ 'n' {\n            result += \"N\"\n        } else if letter == 'o' {\n    \
    \        result += \"O\"\n        } else if letter == 'p' {\n            result\
    \ += \"P\"\n        } else if letter == 'q' {\n            result += \"Q\"\n \
    \       } else if letter == 'r' {\n            result += \"R\"\n        } else\
    \ if letter == 's' {\n            result += \"S\"\n        } else if letter ==\
    \ 't' {\n            result += \"T\"\n        } else if letter == 'u' {\n    \
    \        result += \"U\"\n        } else if letter == 'v' {\n            result\
    \ += \"V\"\n        } else if letter == 'w' {\n            result += \"W\"\n \
    \       } else if letter == 'x' {\n            result += \"X\"\n        } else\
    \ if letter == 'y' {\n            result += \"Y\"\n        } else if letter ==\
    \ 'z' {\n            result += \"Z\"\n        }\n    }\n    return result\n}\n",
  "    var result string\n    for _, char := range myString {\n        if char >=\
    \ 'a' && char <= 'z' {\n            result += string(char - 'a') + string(char\
    \ - 'A')\n        } else {\n            result += char\n        }\n    }\n   \
    \ return result\n}\n", "    var result string\n    for _, char := range myString\
    \ {\n        if char >= 'a' && char <= 'z' {\n            result += string(char\
    \ - 'a') + string(char - 'A')\n        } else {\n            result += char\n\
    \        }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char\
    \ := range myString {\n        if char >= 'a' && char <= 'z' {\n            result\
    \ += string(char - 'a') + string(char - 'A')\n        } else {\n            result\
    \ += char\n        }\n    }\n    return result\n}\n", "    result := \"\"\n  \
    \  for _, char := range myString {\n        if char >= 'a' && char <= 'z' {\n\
    \            result += string(char - 'a') + string(char - 'A')\n        } else\
    \ {\n            result += char\n        }\n    }\n    return result\n}\n", " \
    \   result := \"\"\n    for _, char := range myString {\n        if char >= 'a'\
    \ && char <= 'z' {\n            result += char - 'a' + 'A'\n        } else {\n\
    \            result += char\n        }\n    }\n    return result\n}\n", "    result\
    \ := \"\"\n    for _, char := range myString {\n        if char >= 'a' && char\
    \ <= 'z' {\n            result += string([]byte{char - 'a', char})\n        }\
    \ else {\n            result += string([]byte{char})\n        }\n    }\n    return\
    \ result\n}\n", "    result := \"\"\n    for _, char := range myString {\n   \
    \     if char >= 'a' && char <= 'z' {\n            result += string(char - 'a')\
    \ + string(char - 'A')\n        } else {\n            result += char\n       \
    \ }\n    }\n    return result\n}\n", "    var result string\n    for _, char :=\
    \ range myString {\n        if char >= 'a' && char <= 'z' {\n            result\
    \ += string(char - 'a') + string(char - 'A')\n        } else {\n            result\
    \ += char\n        }\n    }\n    return result\n}\n", "    var newString string\n\
    \    for _, letter := range myString {\n        if letter == 'a' {\n         \
    \   newString += \"A\"\n        } else if letter == 'b' {\n            newString\
    \ += \"B\"\n        } else if letter == 'c' {\n            newString += \"C\"\n\
    \        } else if letter == 'd' {\n            newString += \"D\"\n        }\
    \ else if letter == 'e' {\n            newString += \"E\"\n        } else if letter\
    \ == 'f' {\n            newString += \"F\"\n        } else if letter == 'g' {\n\
    \            newString += \"G\"\n        } else if letter == 'h' {\n         \
    \   newString += \"H\"\n        } else if letter == 'i' {\n            newString\
    \ += \"I\"\n        } else if letter == 'j' {\n            newString += \"J\"\n\
    \        } else if letter == 'k' {\n            newString += \"K\"\n        }\
    \ else if letter == 'l' {\n            newString += \"L\"\n        } else if letter\
    \ == 'm' {\n            newString += \"M\"\n        } else if letter == 'n' {\n\
    \            newString += \"N\"\n        } else if letter == 'o' {\n         \
    \   newString += \"O\"\n        } else if letter == 'p' {\n            newString\
    \ += \"P\"\n        } else if letter == 'q' {\n            newString += \"Q\"\n\
    \        } else if letter == 'r' {\n            newString += \"R\"\n        }\
    \ else if letter == 's' {\n            newString += \"S\"\n        } else if letter\
    \ == 't' {\n            newString += \"T\"\n        } else if letter == 'u' {\n\
    \            newString += \"U\"\n        } else if letter == 'v' {\n         \
    \   newString += \"V\"\n        } else if letter == 'w' {\n            newString\
    \ += \"W\"\n        } else if letter == 'x' {\n            newString += \"X\"\n\
    \        } else if letter == 'y' {\n            newString += \"Y\"\n        }\
    \ else if letter == 'z' {\n            newString += \"Z\"\n        } else {\n\
    \            newString += letter\n        }\n    }\n    return newString\n}\n",
  "    var result string\n    for _, char := range myString {\n        if char >=\
    \ 'a' && char <= 'z' {\n            result += char - 'a'\n        } else {\n \
    \           result += char\n        }\n    }\n    return result\n}\n", "    result\
    \ := \"\"\n    for _, char := range myString {\n        if char >= 'a' && char\
    \ <= 'z' {\n            result += string(char - 'a') + string(char - 'A')\n  \
    \      } else {\n            result += char\n        }\n    }\n    return result\n\
    }\n", "    var result string\n    for _, char := range myString {\n        if\
    \ char >= 'a' && char <= 'z' {\n            result += string(char - 'a' + 'A')\n\
    \        } else {\n            result += char\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, letter := range myString {\n        if letter\
    \ == ' ' {\n            result = result + \" \"\n        } else {\n          \
    \  result = result + string([]byte{letter, unicode.ToLower(letter)})\n       \
    \ }\n    }\n    return result\n}\n", "    result := \"\"\n    for _, char := range\
    \ myString {\n        if char >= 'a' && char <= 'z' {\n            result += char\
    \ + ('A' - 'a')\n        } else {\n            result += char\n        }\n   \
    \ }\n    return result\n}\n", "    var result string\n    for _, char := range\
    \ myString {\n        if char >= 'a' && char <= 'z' {\n            result += string(char\
    \ - 'a') + string(char - 'A')\n        } else {\n            result += char\n\
    \        }\n    }\n    return result\n}\n", "    var result string\n    for _,\
    \ char := range myString {\n        if char >= 'a' && char <= 'z' {\n        \
    \    result += string(char - 'a') + string(char - 'A')\n        } else {\n   \
    \         result += char\n        }\n    }\n    return result\n}\n", "    var\
    \ newString string\n    for _, char := range myString {\n        if char >= 'a'\
    \ && char <= 'z' {\n            newString += string(char - 'a') + string(char\
    \ - 'A')\n        } else {\n            newString += char\n        }\n    }\n\
    \    return newString\n}\n", "    result := \"\"\n    for _, char := range myString\
    \ {\n        if char >= 'a' && char <= 'z' {\n            result += char - 'a'\n\
    \        } else {\n            result += char\n        }\n    }\n    return result\n\
    }\n", "    result := \"\"\n    for _, char := range myString {\n        if char\
    \ >= 'a' && char <= 'z' {\n            result += char + ('A' - 'a')\n        }\
    \ else {\n            result += char\n        }\n    }\n    return result\n}\n",
  "    result := \"\"\n    for _, char := range myString {\n        if char >= 'a'\
    \ && char <= 'z' {\n            result += char - 'a'\n        } else {\n     \
    \       result += char\n        }\n    }\n    return result\n}\n", "    result\
    \ := \"\"\n    for _, char := range myString {\n        if char >= 'a' && char\
    \ <= 'z' {\n            result += char - 'a' + 'A'\n        } else {\n       \
    \     result += char\n        }\n    }\n    return result\n}\n", "    result :=\
    \ \"\"\n    for _, char := range myString {\n        if char >= 'a' && char <=\
    \ 'z' {\n            result += char - 'a'\n        } else {\n            result\
    \ += char\n        }\n    }\n    return result\n}\n"]
stop_tokens:
- "\nfunc"
- struct
- "\n// "

name: HumanEval_51_remove_vowels
language: go_test.go
prompt: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
  \n// remove_vowels is a function that takes string and returns string without vowels.\n\
  func remove_vowels(text string) string {\n"
tests: "func TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype\
  \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
  \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
  \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
  \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
  ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
  \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
  ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
  test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
  \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
  , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
completions: ["    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text := []rune(text)\n\
    \    result := []rune{}\n    for _, letter := range text {\n        if !contains(vowels,\
    \ letter) {\n            result = append(result, letter)\n        }\n    }\n \
    \   return string(result)\n}\n", "    vowels := []string{\"a\", \"e\", \"i\",\
    \ \"o\", \"u\"}\n    for _, v := range vowels {\n        text = text.replaceAllString(v,\
    \ \"\")\n    }\n    return text\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o',\
    \ 'u'}\n    text := []rune(text)\n    for _, v := range text {\n        if !contains(vowels,\
    \ v) {\n            delete(text, v)\n        }\n    }\n    return string(text)\n\
    }\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result := \"\"\n   \
    \ for _, letter := range text {\n        if !contains(vowels, letter) {\n    \
    \        result += letter\n        }\n    }\n    return result\n}\n", "    vowels\
    \ := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    text := []rune(text)\n \
    \   for _, v := range text {\n        if !contains(vowels, v) {\n            copy(text[:],\
    \ text[1:])\n        }\n    }\n    return string(text)\n}\n", "    vowels := []rune{'a',\
    \ 'e', 'i', 'o', 'u'}\n    text := []rune(text)\n    for _, char := range text\
    \ {\n        if !contains(vowels, char) {\n            text := append(text, char)\n\
    \        }\n    }\n    return string(text)\n}\n", "    vowels := []rune{'a', 'e',\
    \ 'i', 'o', 'u'}\n    text := []rune(text)\n    result := []rune{}\n    for _,\
    \ letter := range text {\n        if !contains(vowels, letter) {\n           \
    \ result = append(result, letter)\n        }\n    }\n    return string(result)\n\
    }\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text := []rune(text)\n\
    \    result := []rune{}\n    for _, letter := range text {\n        if !contains(vowels,\
    \ letter) {\n            result = append(result, letter)\n        }\n    }\n \
    \   return string(result)\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n\
    \    text := []rune(text)\n    for _, v := range text {\n        if !contains(vowels,\
    \ v) {\n            v = string(v)\n        }\n    }\n    return string(text)\n\
    }\n", "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    text :=\
    \ []rune(text)\n    for _, v := range text {\n        if !contains(vowels, v)\
    \ {\n            delete(text, v)\n        }\n    }\n    return string(text)\n\
    }\n", "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    result :=\
    \ \"\"\n    for _, letter := range text {\n        if !contains(vowels, letter)\
    \ {\n            result += letter\n        }\n    }\n    return result\n}\n",
  "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result := \"\"\n    for _, letter\
    \ := range text {\n        if !contains(vowels, letter) {\n            result\
    \ += letter\n        }\n    }\n    return result\n}\n", "    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\"}\n    for _, v := range vowels {\n        text\
    \ = strings.Replace(text, v, \"\", -1)\n    }\n    return text\n}\n", "    vowels\
    \ := []rune{'a', 'e', 'i', 'o', 'u'}\n    text := []rune(text)\n    for _, v :=\
    \ range text {\n        if !contains(vowels, v) {\n            text := append(text,\
    \ v)\n        }\n    }\n    return string(text)\n}\n", "    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\"}\n    for _, v := range vowels {\n        text\
    \ = strings.Replace(text, v, \"\", -1)\n    }\n    return text\n}\n", "    vowels\
    \ := []rune{'a', 'e', 'i', 'o', 'u'}\n    text := []rune(text)\n    for _, v :=\
    \ range text {\n        if !contains(vowels, v) {\n            text := append(text,\
    \ v)\n        }\n    }\n    return string(text)\n}\n", "    vowels := []rune{'a',\
    \ 'e', 'i', 'o', 'u'}\n    text := []rune(text)\n    result := []rune{}\n    for\
    \ _, letter := range text {\n        if !contains(vowels, letter) {\n        \
    \    result = append(result, letter)\n        }\n    }\n    return string(result)\n\
    }\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result := \"\"\n   \
    \ for _, letter := range text {\n        if !contains(vowels, letter) {\n    \
    \        result += letter\n        }\n    }\n    return result\n}\n", "    vowels\
    \ := []rune{'a', 'e', 'i', 'o', 'u'}\n    text := []rune(text)\n    for _, v :=\
    \ range text {\n        if !contains(vowels, v) {\n            v = unicode.ToLower(v)\n\
    \        }\n    }\n    return string(text)\n}\n", "    vowels := []string{\"a\"\
    , \"e\", \"i\", \"o\", \"u\"}\n    text := []rune(text)\n    for _, v := range\
    \ text {\n        if !contains(vowels, v) {\n            delete(text, v)\n   \
    \     }\n    }\n    return string(text)\n}\n", "    vowels := []rune{'a', 'e',\
    \ 'i', 'o', 'u'}\n    text := []rune(text)\n    result := []rune{}\n    for _,\
    \ letter := range text {\n        if !contains(vowels, letter) {\n           \
    \ result = append(result, letter)\n        }\n    }\n    return string(result)\n\
    }\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result := \"\"\n   \
    \ for _, char := range text {\n        if !contains(vowels, char) {\n        \
    \    result += char\n        }\n    }\n    return result\n}\n", "    vowels :=\
    \ []rune(\"aeiouy\")\n    result := \"\"\n    for _, letter := range text {\n\
    \        if !contains(vowels, letter) {\n            result += letter\n      \
    \  }\n    }\n    return result\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o',\
    \ 'u'}\n    result := \"\"\n    for _, letter := range text {\n        if !contains(vowels,\
    \ letter) {\n            result += letter\n        }\n    }\n    return result\n\
    }\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text := []rune(text)\n\
    \    result := []rune{}\n    for _, letter := range text {\n        if !contains(vowels,\
    \ letter) {\n            result = append(result, letter)\n        }\n    }\n \
    \   return string(result)\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n\
    \    result := \"\"\n    for _, char := range text {\n        if !contains(vowels,\
    \ char) {\n            result += char\n        }\n    }\n    return result\n}\n",
  "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    text := []rune(text)\n\
    \    for _, v := range text {\n        if !contains(vowels, v) {\n           \
    \ delete(text, v)\n        }\n    }\n    return string(text)\n}\n", "    vowels\
    \ := []rune{'a', 'e', 'i', 'o', 'u'}\n    result := \"\"\n    for _, char := range\
    \ text {\n        if !contains(vowels, char) {\n            result += char\n \
    \       }\n    }\n    return result\n}\n", "    vowels := []rune{'a', 'e', 'i',\
    \ 'o', 'u'}\n    result := \"\"\n    for _, letter := range text {\n        if\
    \ !contains(vowels, letter) {\n            result += letter\n        }\n    }\n\
    \    return result\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n   \
    \ result := \"\"\n    for _, letter := range text {\n        if !contains(vowels,\
    \ letter) {\n            result += letter\n        }\n    }\n    return result\n\
    }\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text := []rune(text)\n\
    \    for _, v := range text {\n        if !contains(vowels, v) {\n           \
    \ v = unicode.ToLower(v)\n        }\n    }\n    return string(text)\n}\n", " \
    \   vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text := []rune(text)\n    for\
    \ _, v := range text {\n        if !contains(vowels, v) {\n            v = unicode.ToLower(v)\n\
    \        }\n    }\n    return string(text)\n}\n", "    vowels := []rune{'a', 'e',\
    \ 'i', 'o', 'u'}\n    result := \"\"\n    for _, char := range text {\n      \
    \  if !contains(vowels, char) {\n            result += char\n        }\n    }\n\
    \    return result\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n   \
    \ text := []rune(text)\n    result := []rune{}\n    for _, char := range text\
    \ {\n        if !contains(vowels, char) {\n            result = append(result,\
    \ char)\n        }\n    }\n    return string(result)\n}\n", "    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\"}\n    for _, v := range vowels {\n        text\
    \ = strings.Replace(text, v, \"\", -1)\n    }\n    return text\n}\n", "    vowels\
    \ := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    for _, v := range vowels\
    \ {\n        text = strings.Replace(text, v, \"\", -1)\n    }\n    return text\n\
    }\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text := []rune(text)\n\
    \    for _, v := range text {\n        if !contains(vowels, v) {\n           \
    \ delete(text, v)\n        }\n    }\n    return string(text)\n}\n", "    vowels\
    \ := []rune{'a', 'e', 'i', 'o', 'u'}\n    text := []rune(text)\n    for _, v :=\
    \ range text {\n        if !contains(vowels, v) {\n            v = unicode.ToLower(v)\n\
    \        }\n    }\n    return string(text)\n}\n", "    vowels := []rune{'a', 'e',\
    \ 'i', 'o', 'u'}\n    result := \"\"\n    for _, letter := range text {\n    \
    \    if !contains(vowels, letter) {\n            result += letter\n        }\n\
    \    }\n    return result\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n\
    \    text := []rune(text)\n    for _, v := range text {\n        if !contains(vowels,\
    \ v) {\n            v = string(v)\n        }\n    }\n    return string(text)\n\
    }\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result := \"\"\n   \
    \ for _, char := range text {\n        if !contains(vowels, char) {\n        \
    \    result += char\n        }\n    }\n    return result\n}\n", "    vowels :=\
    \ []rune{'a', 'e', 'i', 'o', 'u'}\n    text := []rune(text)\n    for _, v := range\
    \ text {\n        if !contains(vowels, v) {\n            v = unicode.ToLower(v)\n\
    \        }\n    }\n    return string(text)\n}\n", "    vowels := []rune{'a', 'e',\
    \ 'i', 'o', 'u'}\n    result := \"\"\n    for _, char := range text {\n      \
    \  if !contains(vowels, char) {\n            result += char\n        }\n    }\n\
    \    return result\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n   \
    \ text := []rune(text)\n    for _, v := range text {\n        if !contains(vowels,\
    \ v) {\n            v = unicode.ToLower(v)\n        }\n    }\n    return string(text)\n\
    }\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text := []rune(text)\n\
    \    result := []rune{}\n    for _, letter := range text {\n        if !contains(vowels,\
    \ letter) {\n            result = append(result, letter)\n        }\n    }\n \
    \   return string(result)\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n\
    \    result := \"\"\n    for _, letter := range text {\n        if !contains(vowels,\
    \ letter) {\n            result += letter\n        }\n    }\n    return result\n\
    }\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result := \"\"\n   \
    \ for _, char := range text {\n        if !contains(vowels, char) {\n        \
    \    result += char\n        }\n    }\n    return result\n}\n", "    vowels :=\
    \ []rune{'a', 'e', 'i', 'o', 'u'}\n    result := \"\"\n    for _, char := range\
    \ text {\n        if !contains(vowels, char) {\n            result += char\n \
    \       }\n    }\n    return result\n}\n", "    vowels := []rune{'a', 'e', 'i',\
    \ 'o', 'u'}\n    result := \"\"\n    for _, char := range text {\n        if !contains(vowels,\
    \ char) {\n            result += char\n        }\n    }\n    return result\n}\n",
  "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text := []rune(text)\n    for\
    \ _, v := range text {\n        if !contains(vowels, v) {\n            v = unicode.ToLower(v)\n\
    \        }\n    }\n    return string(text)\n}\n", "    vowels := []rune{'a', 'e',\
    \ 'i', 'o', 'u'}\n    result := \"\"\n    for _, char := range text {\n      \
    \  if !contains(vowels, char) {\n            result += char\n        }\n    }\n\
    \    return result\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n   \
    \ text := []rune(text)\n    result := []rune{}\n    for _, letter := range text\
    \ {\n        if !contains(vowels, letter) {\n            result = append(result,\
    \ letter)\n        }\n    }\n    return string(result)\n}\n", "    vowels := []rune{'a',\
    \ 'e', 'i', 'o', 'u'}\n    text := []rune(text)\n    result := []rune{}\n    for\
    \ _, letter := range text {\n        if !contains(vowels, letter) {\n        \
    \    result = append(result, letter)\n        }\n    }\n    return string(result)\n\
    }\n", "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    for _, v\
    \ := range vowels {\n        text = text.replaceAllString(v, \"\")\n    }\n  \
    \  return text\n}\n", "    vowels := []rune(\"aeiou\")\n    result := \"\"\n \
    \   for _, letter := range text {\n        if !contains(vowels, letter) {\n  \
    \          result += letter\n        }\n    }\n    return result\n}\n", "    vowels\
    \ := []rune(\"aeiou\")\n    result := \"\"\n    for _, char := range text {\n\
    \        if !contains(vowels, char) {\n            result += char\n        }\n\
    \    }\n    return result\n}\n", "    vowels := []string{\"a\", \"e\", \"i\",\
    \ \"o\", \"u\"}\n    result := \"\"\n    for _, letter := range text {\n     \
    \   if !contains(vowels, letter) {\n            result += letter\n        }\n\
    \    }\n    return result\n}\n", "    vowels := []string{\"a\", \"e\", \"i\",\
    \ \"o\", \"u\"}\n    text := strings.Replace(text, vowels, \"\", -1)\n    return\
    \ text\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result := \"\
    \"\n    for _, r := range text {\n        if !contains(vowels, r) {\n        \
    \    result += string(r)\n        }\n    }\n    return result\n}\n", "    vowels\
    \ := []rune{'a', 'e', 'i', 'o', 'u'}\n    text := []rune(text)\n    for _, v :=\
    \ range text {\n        if !contains(vowels, v) {\n            v = unicode.ToLower(v)\n\
    \        }\n    }\n    return string(text)\n}\n", "    vowels := []rune{'a', 'e',\
    \ 'i', 'o', 'u'}\n    result := \"\"\n    for _, char := range text {\n      \
    \  if !contains(vowels, char) {\n            result += char\n        }\n    }\n\
    \    return result\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n   \
    \ text := []rune(text)\n    for _, v := range text {\n        if !contains(vowels,\
    \ v) {\n            delete(text, v)\n        }\n    }\n    return string(text)\n\
    }\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text := []rune(text)\n\
    \    for _, char := range text {\n        if !contains(vowels, char) {\n     \
    \       delete(text, char)\n        }\n    }\n    return string(text)\n}\n", " \
    \   vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text := []rune(text)\n    for\
    \ _, v := range text {\n        if !contains(vowels, v) {\n            delete(text,\
    \ v)\n        }\n    }\n    return string(text)\n}\n", "    vowels := []rune{'a',\
    \ 'e', 'i', 'o', 'u'}\n    result := \"\"\n    for _, char := range text {\n \
    \       if !contains(vowels, char) {\n            result += char\n        }\n\
    \    }\n    return result\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n\
    \    result := \"\"\n    for _, letter := range text {\n        if !contains(vowels,\
    \ letter) {\n            result += letter\n        }\n    }\n    return result\n\
    }\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text := []rune(text)\n\
    \    for _, v := range text {\n        if !contains(vowels, v) {\n           \
    \ v = unicode.ToLower(v)\n        }\n    }\n    return string(text)\n}\n", " \
    \   vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    for _, v := range\
    \ vowels {\n        text = text.replaceAllString(v, \"\")\n    }\n    return text\n\
    }\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text := []rune(text)\n\
    \    for _, v := range text {\n        if !contains(vowels, v) {\n           \
    \ v = unicode.ToLower(v)\n        }\n    }\n    return string(text)\n}\n", " \
    \   vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text := []rune(text)\n    for\
    \ _, v := range text {\n        if !contains(vowels, v) {\n            v = unicode.ToLower(v)\n\
    \        }\n    }\n    return string(text)\n}\n", "    vowels := []rune{'a', 'e',\
    \ 'i', 'o', 'u'}\n    result := \"\"\n    for _, letter := range text {\n    \
    \    if !contains(vowels, letter) {\n            result += letter\n        }\n\
    \    }\n    return result\n}\n", "    vowels := []string{\"a\", \"e\", \"i\",\
    \ \"o\", \"u\"}\n    for _, v := range vowels {\n        text = strings.Replace(text,\
    \ v, \"\", -1)\n    }\n    return text\n}\n", "    vowels := []rune{'a', 'e',\
    \ 'i', 'o', 'u'}\n    result := \"\"\n    for _, letter := range text {\n    \
    \    if !contains(vowels, letter) {\n            result += letter\n        }\n\
    \    }\n    return result\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n\
    \    text := []rune(text)\n    for _, v := range text {\n        if !contains(vowels,\
    \ v) {\n            v = unicode.ToLower(v)\n        }\n    }\n    return string(text)\n\
    }\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result := \"\"\n   \
    \ for _, letter := range text {\n        if !contains(vowels, letter) {\n    \
    \        result += letter\n        }\n    }\n    return result\n}\n", "    vowels\
    \ := []rune{'a', 'e', 'i', 'o', 'u'}\n    result := \"\"\n    for _, char := range\
    \ text {\n        if !contains(vowels, char) {\n            result += char\n \
    \       }\n    }\n    return result\n}\n", "    vowels := []rune{'a', 'e', 'i',\
    \ 'o', 'u'}\n    result := \"\"\n    for _, letter := range text {\n        if\
    \ !contains(vowels, letter) {\n            result += letter\n        }\n    }\n\
    \    return result\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n   \
    \ text := []rune(text)\n    for _, v := range text {\n        if !contains(vowels,\
    \ v) {\n            text := append(text, v)\n        }\n    }\n    return string(text)\n\
    }\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text := []rune(text)\n\
    \    for _, v := range text {\n        if !contains(vowels, v) {\n           \
    \ text := append(text, v)\n        }\n    }\n    return string(text)\n}\n", " \
    \   vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text := []rune(text)\n    for\
    \ _, v := range text {\n        if !contains(vowels, v) {\n            v = unicode.ToLower(v)\n\
    \        }\n    }\n    return string(text)\n}\n", "    vowels := []rune{'a', 'e',\
    \ 'i', 'o', 'u'}\n    text := []rune(text)\n    for _, v := range text {\n   \
    \     if !contains(vowels, v) {\n            v = unicode.ToLower(v)\n        }\n\
    \    }\n    return string(text)\n}\n", "    vowels := []rune(\"aeiouy\")\n   \
    \ for _, v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n\
    \    }\n    return text\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n\
    \    result := \"\"\n    for _, letter := range text {\n        if !contains(vowels,\
    \ letter) {\n            result += letter\n        }\n    }\n    return result\n\
    }\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result := \"\"\n   \
    \ for _, char := range text {\n        if !contains(vowels, char) {\n        \
    \    result += char\n        }\n    }\n    return result\n}\n", "    vowels :=\
    \ []rune{'a', 'e', 'i', 'o', 'u'}\n    result := \"\"\n    for _, letter := range\
    \ text {\n        if !contains(vowels, letter) {\n            result += letter\n\
    \        }\n    }\n    return result\n}\n", "    vowels := []rune{'a', 'e', 'i',\
    \ 'o', 'u'}\n    text := []rune(text)\n    for _, v := range text {\n        if\
    \ !contains(vowels, v) {\n            delete(text, v)\n        }\n    }\n    return\
    \ string(text)\n}\n", "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"\
    }\n    text := []rune(text)\n    for _, vowel := range vowels {\n        i :=\
    \ 0\n        for _, char := range text {\n            if char == vowel {\n   \
    \             text[i] = char\n                i++\n            }\n        }\n\
    \    }\n    return string(text)\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o',\
    \ 'u'}\n    result := \"\"\n    for _, char := range text {\n        if !contains(vowels,\
    \ char) {\n            result += char\n        }\n    }\n    return result\n}\n",
  "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text := []rune(text)\n    for\
    \ _, v := range text {\n        if !contains(vowels, v) {\n            delete(text,\
    \ v)\n        }\n    }\n    return string(text)\n}\n", "    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\"}\n    for _, v := range vowels {\n        text\
    \ = text.replaceAllString(v, \"\")\n    }\n    return text\n}\n", "    vowels\
    \ := []rune{'a', 'e', 'i', 'o', 'u'}\n    result := \"\"\n    for _, letter :=\
    \ range text {\n        if !contains(vowels, letter) {\n            result +=\
    \ letter\n        }\n    }\n    return result\n}\n", "    vowels := []rune{'a',\
    \ 'e', 'i', 'o', 'u'}\n    text := []rune(text)\n    result := []rune{}\n    for\
    \ _, letter := range text {\n        if !contains(vowels, letter) {\n        \
    \    result = append(result, letter)\n        }\n    }\n    return string(result)\n\
    }\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result := \"\"\n   \
    \ for _, letter := range text {\n        if !contains(vowels, letter) {\n    \
    \        result += letter\n        }\n    }\n    return result\n}\n", "    vowels\
    \ := []rune{'a', 'e', 'i', 'o', 'u'}\n    result := \"\"\n    for _, char := range\
    \ text {\n        if !contains(vowels, char) {\n            result += char\n \
    \       }\n    }\n    return result\n}\n", "    vowels := []rune{'a', 'e', 'i',\
    \ 'o', 'u'}\n    text := []rune(text)\n    for _, v := range text {\n        if\
    \ !contains(vowels, v) {\n            v = unicode.ToLower(v)\n        }\n    }\n\
    \    return string(text)\n}\n", "    vowels := []string{\"a\", \"e\", \"i\", \"\
    o\", \"u\"}\n    text := []rune(text)\n    result := []rune{}\n    for _, char\
    \ := range text {\n        if !contains(vowels, char) {\n            result =\
    \ append(result, char)\n        }\n    }\n    return string(result)\n}\n", " \
    \   vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text := []rune(text)\n    for\
    \ _, vowel := range vowels {\n        i := 0\n        for _, char := range text\
    \ {\n            if char == vowel {\n                text[i] = char\n        \
    \        i++\n            }\n        }\n    }\n    return string(text)\n}\n",
  "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result := \"\"\n    for _, char\
    \ := range text {\n        if !contains(vowels, char) {\n            result +=\
    \ char\n        }\n    }\n    return result\n}\n", "    vowels := []rune{'a',\
    \ 'e', 'i', 'o', 'u'}\n    text := []rune(text)\n    for _, v := range text {\n\
    \        if !contains(vowels, v) {\n            v = rune(0)\n        }\n    }\n\
    \    return string(text)\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n\
    \    text := []rune(text)\n    result := []rune{}\n    for _, letter := range\
    \ text {\n        if !contains(vowels, letter) {\n            result = append(result,\
    \ letter)\n        }\n    }\n    return string(result)\n}\n", "    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\"}\n    for _, v := range vowels {\n        text\
    \ = strings.Replace(text, v, \"\", -1)\n    }\n    return text\n}\n", "    vowels\
    \ := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    result := \"\"\n    for\
    \ _, letter := range text {\n        if !contains(vowels, letter) {\n        \
    \    result += letter\n        }\n    }\n    return result\n}\n", "    vowels\
    \ := []rune{'a', 'e', 'i', 'o', 'u'}\n    text := []rune(text)\n    for _, v :=\
    \ range text {\n        if !contains(vowels, v) {\n            text := append(text,\
    \ v)\n        }\n    }\n    return string(text)\n}\n", "    vowels := []rune{'a',\
    \ 'e', 'i', 'o', 'u'}\n    text := []rune(text)\n    result := []rune{}\n    for\
    \ _, letter := range text {\n        if !contains(vowels, letter) {\n        \
    \    result = append(result, letter)\n        }\n    }\n    return string(result)\n\
    }\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result := \"\"\n   \
    \ for _, char := range text {\n        if !contains(vowels, char) {\n        \
    \    result += char\n        }\n    }\n    return result\n}\n", "    vowels :=\
    \ []rune(\"aeiou\")\n    result := \"\"\n    for _, char := range text {\n   \
    \     if !contains(vowels, char) {\n            result += char\n        }\n  \
    \  }\n    return result\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n\
    \    result := \"\"\n    for _, char := range text {\n        if !contains(vowels,\
    \ char) {\n            result += char\n        }\n    }\n    return result\n}\n",
  "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    text := []rune(text)\n\
    \    result := \"\"\n    for _, char := range text {\n        if !contains(vowels,\
    \ char) {\n            result = append(result, char)\n        }\n    }\n    return\
    \ string(result)\n}\n", "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"\
    u\"}\n    for _, v := range vowels {\n        text = text.replaceAllString(v,\
    \ \"\")\n    }\n    return text\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o',\
    \ 'u'}\n    result := \"\"\n    for _, letter := range text {\n        if !contains(vowels,\
    \ letter) {\n            result += letter\n        }\n    }\n    return result\n\
    }\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text := []rune(text)\n\
    \    for _, v := range text {\n        if !contains(vowels, v) {\n           \
    \ v = unicode.ToLower(v)\n        }\n    }\n    return string(text)\n}\n", " \
    \   vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result := \"\"\n    for _,\
    \ letter := range text {\n        if !contains(vowels, letter) {\n           \
    \ result += letter\n        }\n    }\n    return result\n}\n", "    vowels :=\
    \ []rune{'a', 'e', 'i', 'o', 'u'}\n    result := \"\"\n    for _, letter := range\
    \ text {\n        if !contains(vowels, letter) {\n            result += letter\n\
    \        }\n    }\n    return result\n}\n", "    vowels := []rune{'a', 'e', 'i',\
    \ 'o', 'u'}\n    result := \"\"\n    for _, letter := range text {\n        if\
    \ !contains(vowels, letter) {\n            result += letter\n        }\n    }\n\
    \    return result\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n   \
    \ text := []rune(text)\n    for _, v := range text {\n        if !contains(vowels,\
    \ v) {\n            v = unicode.ToLower(v)\n        }\n    }\n    return string(text)\n\
    }\n", "    vowels := []rune(\"aeiou\")\n    result := \"\"\n    for _, char :=\
    \ range text {\n        if !contains(vowels, char) {\n            result += char\n\
    \        }\n    }\n    return result\n}\n", "    vowels := []rune{'a', 'e', 'i',\
    \ 'o', 'u'}\n    text := []rune(text)\n    for _, v := range text {\n        if\
    \ !contains(vowels, v) {\n            v = unicode.ToLower(v)\n        }\n    }\n\
    \    return string(text)\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n\
    \    text := []rune(text)\n    result := []rune{}\n    for _, char := range text\
    \ {\n        if !contains(vowels, char) {\n            result = append(result,\
    \ char)\n        }\n    }\n    return string(result)\n}\n", "    vowels := []rune{'a',\
    \ 'e', 'i', 'o', 'u'}\n    text := []rune(text)\n    for _, v := range text {\n\
    \        if !contains(vowels, v) {\n            v = string(v)\n        }\n   \
    \ }\n    return string(text)\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o',\
    \ 'u'}\n    result := \"\"\n    for _, char := range text {\n        if !contains(vowels,\
    \ char) {\n            result += char\n        }\n    }\n    return result\n}\n",
  "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result := \"\"\n    for _, letter\
    \ := range text {\n        if !contains(vowels, letter) {\n            result\
    \ += letter\n        }\n    }\n    return result\n}\n", "    vowels := []rune{'a',\
    \ 'e', 'i', 'o', 'u'}\n    text := []rune(text)\n    result := []rune{}\n    for\
    \ _, char := range text {\n        if !contains(vowels, char) {\n            result\
    \ = append(result, char)\n        }\n    }\n    return string(result)\n}\n", " \
    \   vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    for _, v := range\
    \ vowels {\n        text = strings.Replace(text, v, \"\", -1)\n    }\n    return\
    \ text\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text := []rune(text)\n\
    \    result := []rune{}\n    for _, letter := range text {\n        if !contains(vowels,\
    \ letter) {\n            result = append(result, letter)\n        }\n    }\n \
    \   return string(result)\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n\
    \    text := []rune(text)\n    result := []rune{}\n    for _, letter := range\
    \ text {\n        if !contains(vowels, letter) {\n            result = append(result,\
    \ letter)\n        }\n    }\n    return string(result)\n}\n", "    vowels := []rune{'a',\
    \ 'e', 'i', 'o', 'u'}\n    result := \"\"\n    for _, letter := range text {\n\
    \        if !contains(vowels, letter) {\n            result += letter\n      \
    \  }\n    }\n    return result\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o',\
    \ 'u'}\n    text := []rune(text)\n    for _, v := range text {\n        if !contains(vowels,\
    \ v) {\n            v = unicode.ToLower(v)\n        }\n    }\n    return string(text)\n\
    }\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text := []rune(text)\n\
    \    result := []rune{}\n    for _, letter := range text {\n        if !contains(vowels,\
    \ letter) {\n            result = append(result, letter)\n        }\n    }\n \
    \   return string(result)\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n\
    \    text := []rune(text)\n    for _, v := range text {\n        if !contains(vowels,\
    \ v) {\n            v = unicode.ToLower(v)\n        }\n    }\n    return string(text)\n\
    }\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text := []rune(text)\n\
    \    for _, vowel := range vowels {\n        i := 0\n        for _, char := range\
    \ text {\n            if char == vowel {\n                text[i] = char\n   \
    \             i++\n            }\n        }\n    }\n    return string(text)\n\
    }\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result := \"\"\n   \
    \ for _, char := range text {\n        if !contains(vowels, char) {\n        \
    \    result += char\n        }\n    }\n    return result\n}\n", "    vowels :=\
    \ []rune{'a', 'e', 'i', 'o', 'u'}\n    result := \"\"\n    for _, char := range\
    \ text {\n        if !contains(vowels, char) {\n            result += char\n \
    \       }\n    }\n    return result\n}\n", "    vowels := []rune{'a', 'e', 'i',\
    \ 'o', 'u'}\n    result := \"\"\n    for _, letter := range text {\n        if\
    \ !contains(vowels, letter) {\n            result += letter\n        }\n    }\n\
    \    return result\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n   \
    \ result := \"\"\n    for _, r := range text {\n        if !contains(vowels, r)\
    \ {\n            result += string(r)\n        }\n    }\n    return result\n}\n",
  "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result := \"\"\n    for _, letter\
    \ := range text {\n        if !contains(vowels, letter) {\n            result\
    \ += letter\n        }\n    }\n    return result\n}\n", "    vowels := []rune{'a',\
    \ 'e', 'i', 'o', 'u'}\n    text := []rune(text)\n    for _, v := range text {\n\
    \        if !contains(vowels, v) {\n            v = unicode.ToLower(v)\n     \
    \   }\n    }\n    return string(text)\n}\n", "    vowels := []rune{'a', 'e', 'i',\
    \ 'o', 'u'}\n    text := []rune(text)\n    for _, v := range text {\n        if\
    \ !contains(vowels, v) {\n            delete(text, v)\n        }\n    }\n    return\
    \ string(text)\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text\
    \ := []rune(text)\n    for _, v := range text {\n        if !contains(vowels,\
    \ v) {\n            v = unicode.ToLower(v)\n        }\n    }\n    return string(text)\n\
    }\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text := []rune(text)\n\
    \    for _, v := range text {\n        if !contains(vowels, v) {\n           \
    \ delete(text, v)\n        }\n    }\n    return string(text)\n}\n", "    vowels\
    \ := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    text := []rune(text)\n \
    \   for _, v := range text {\n        if !contains(vowels, v) {\n            delete(text,\
    \ v)\n        }\n    }\n    return string(text)\n}\n", "    vowels := []rune{'a',\
    \ 'e', 'i', 'o', 'u'}\n    text := []rune(text)\n    result := []rune{}\n    for\
    \ _, char := range text {\n        if !contains(vowels, char) {\n            result\
    \ = append(result, char)\n        }\n    }\n    return string(result)\n}\n", " \
    \   vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text := []rune(text)\n    result\
    \ := []rune{}\n    for _, char := range text {\n        if !contains(vowels, char)\
    \ {\n            result = append(result, char)\n        }\n    }\n    return string(result)\n\
    }\n", "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    for _, v\
    \ := range vowels {\n        text = text.replaceAllString(v, \"\")\n    }\n  \
    \  return text\n}\n", "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"\
    }\n    result := \"\"\n    for _, letter := range text {\n        if !contains(vowels,\
    \ letter) {\n            result += letter\n        }\n    }\n    return result\n\
    }\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result := \"\"\n   \
    \ for _, char := range text {\n        if !contains(vowels, char) {\n        \
    \    result += char\n        }\n    }\n    return result\n}\n", "    vowels :=\
    \ []rune{'a', 'e', 'i', 'o', 'u'}\n    text := []rune(text)\n    result := []rune{}\n\
    \    for _, char := range text {\n        if !contains(vowels, char) {\n     \
    \       result = append(result, char)\n        }\n    }\n    return string(result)\n\
    }\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text := []rune(text)\n\
    \    result := []rune{}\n    for _, letter := range text {\n        if !contains(vowels,\
    \ letter) {\n            result = append(result, letter)\n        }\n    }\n \
    \   return string(result)\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n\
    \    text := []rune(text)\n    result := []rune{}\n    for _, letter := range\
    \ text {\n        if !contains(vowels, letter) {\n            result = append(result,\
    \ letter)\n        }\n    }\n    return string(result)\n}\n", "    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\"}\n    text := strings.ToLower(text)\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n \
    \   result := \"\"\n    for _, char := range text {\n        if !contains(vowels,\
    \ char) {\n            result += char\n        }\n    }\n    return result\n}\n",
  "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text := []rune(text)\n    result\
    \ := []rune{}\n    for _, char := range text {\n        if !contains(vowels, char)\
    \ {\n            result = append(result, char)\n        }\n    }\n    return string(result)\n\
    }\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result := \"\"\n   \
    \ for _, char := range text {\n        if !contains(vowels, char) {\n        \
    \    result += char\n        }\n    }\n    return result\n}\n", "    vowels :=\
    \ []rune{'a', 'e', 'i', 'o', 'u'}\n    result := \"\"\n    for _, char := range\
    \ text {\n        if !contains(vowels, char) {\n            result += char\n \
    \       }\n    }\n    return result\n}\n", "    vowels := []rune{'a', 'e', 'i',\
    \ 'o', 'u'}\n    text := []rune(text)\n    for _, v := range text {\n        if\
    \ !contains(vowels, v) {\n            v = unicode.ToLower(v)\n        }\n    }\n\
    \    return string(text)\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n\
    \    result := \"\"\n    for _, char := range text {\n        if !contains(vowels,\
    \ char) {\n            result += char\n        }\n    }\n    return result\n}\n",
  "    vowels := []rune(\"aeiou\")\n    text := []rune(text)\n    result := []rune{}\n\
    \    for _, letter := range text {\n        if !contains(vowels, letter) {\n \
    \           result = append(result, letter)\n        }\n    }\n    return string(result)\n\
    }\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result := \"\"\n   \
    \ for _, char := range text {\n        if !contains(vowels, char) {\n        \
    \    result += char\n        }\n    }\n    return result\n}\n", "    vowels :=\
    \ []rune{'a', 'e', 'i', 'o', 'u'}\n    text := []rune(text)\n    result := []rune{}\n\
    \    for _, letter := range text {\n        if !contains(vowels, letter) {\n \
    \           result = append(result, letter)\n        }\n    }\n    return string(result)\n\
    }\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text := []rune(text)\n\
    \    for _, v := range text {\n        if !contains(vowels, v) {\n           \
    \ v = unicode.ToLower(v)\n        }\n    }\n    return string(text)\n}\n", " \
    \   vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result := \"\"\n    for _,\
    \ letter := range text {\n        if !contains(vowels, letter) {\n           \
    \ result += letter\n        }\n    }\n    return result\n}\n", "    vowels :=\
    \ []rune{'a', 'e', 'i', 'o', 'u'}\n    result := \"\"\n    for _, letter := range\
    \ text {\n        if !contains(vowels, letter) {\n            result += letter\n\
    \        }\n    }\n    return result\n}\n", "    vowels := []string{\"a\", \"\
    e\", \"i\", \"o\", \"u\"}\n    result := \"\"\n    for _, letter := range text\
    \ {\n        if !contains(vowels, letter) {\n            result += letter\n  \
    \      }\n    }\n    return result\n}\n", "    vowels := []string{\"a\", \"e\"\
    , \"i\", \"o\", \"u\"}\n    text := []rune(text)\n    for _, v := range text {\n\
    \        if !contains(vowels, v) {\n            delete(text, v)\n        }\n \
    \   }\n    return string(text)\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o',\
    \ 'u'}\n    result := \"\"\n    for _, char := range text {\n        if !contains(vowels,\
    \ char) {\n            result += char\n        }\n    }\n    return result\n}\n",
  "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    text := strings.Replace(text,\
    \ \" \", \"\", -1)\n    for _, v := range vowels {\n        text = strings.Replace(text,\
    \ v, \"\", -1)\n    }\n    return text\n}\n", "    vowels := []rune{'a', 'e',\
    \ 'i', 'o', 'u'}\n    result := \"\"\n    for _, char := range text {\n      \
    \  if !contains(vowels, char) {\n            result += char\n        }\n    }\n\
    \    return result\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n   \
    \ result := \"\"\n    for _, letter := range text {\n        if !contains(vowels,\
    \ letter) {\n            result += letter\n        }\n    }\n    return result\n\
    }\n", "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    for _, vowel\
    \ := range vowels {\n        text = strings.Replace(text, vowel, \"\", -1)\n \
    \   }\n    return text\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n\
    \    result := \"\"\n    for _, letter := range text {\n        if !contains(vowels,\
    \ letter) {\n            result += letter\n        }\n    }\n    return result\n\
    }\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result := \"\"\n   \
    \ for _, char := range text {\n        if !contains(vowels, char) {\n        \
    \    result += char\n        }\n    }\n    return result\n}\n", "    vowels :=\
    \ []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    text := []rune(text)\n    for\
    \ _, v := range text {\n        if !contains(vowels, v) {\n            v = unicode.ToLower(v)\n\
    \        }\n    }\n    return string(text)\n}\n", "    vowels := []rune{'a', 'e',\
    \ 'i', 'o', 'u'}\n    text := []rune(text)\n    for _, v := range text {\n   \
    \     if !contains(vowels, v) {\n            v = unicode.ToLower(v)\n        }\n\
    \    }\n    return string(text)\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o',\
    \ 'u'}\n    text := []rune(text)\n    for _, v := range text {\n        if !contains(vowels,\
    \ v) {\n            v = rune(0)\n        }\n    }\n    return string(text)\n}\n",
  "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text := []rune(text)\n    for\
    \ _, v := range text {\n        if !contains(vowels, v) {\n            v = unicode.ToLower(v)\n\
    \        }\n    }\n    return string(text)\n}\n", "    vowels := []rune{'a', 'e',\
    \ 'i', 'o', 'u'}\n    text := []rune(text)\n    for _, v := range text {\n   \
    \     if !contains(vowels, v) {\n            v = string(v)\n        }\n    }\n\
    \    return string(text)\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n\
    \    text := []rune(text)\n    for _, v := range text {\n        if !contains(vowels,\
    \ v) {\n            text := append(text, v)\n        }\n    }\n    return string(text)\n\
    }\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text := []rune(text)\n\
    \    result := []rune{}\n    for _, letter := range text {\n        if !contains(vowels,\
    \ letter) {\n            result = append(result, letter)\n        }\n    }\n \
    \   return string(result)\n}\n", "    vowels := []string{\"a\", \"e\", \"i\",\
    \ \"o\", \"u\"}\n    result := \"\"\n    for _, char := range text {\n       \
    \ if !contains(vowels, char) {\n            result += char\n        }\n    }\n\
    \    return result\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n   \
    \ text := []rune(text)\n    for _, v := range text {\n        if !contains(vowels,\
    \ v) {\n            v = unicode.ToLower(v)\n        }\n    }\n    return string(text)\n\
    }\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text := []rune(text)\n\
    \    for _, v := range text {\n        if !contains(vowels, v) {\n           \
    \ delete(text, v)\n        }\n    }\n    return string(text)\n}\n", "    vowels\
    \ := []rune{'a', 'e', 'i', 'o', 'u'}\n    text := []rune(text)\n    result :=\
    \ []rune{}\n    for _, letter := range text {\n        if !contains(vowels, letter)\
    \ {\n            result = append(result, letter)\n        }\n    }\n    return\
    \ string(result)\n}\n", "    vowels := []string{\"a\", \"e\", \"i\", \"o\", \"\
    u\"}\n    text := []rune(text)\n    result := []rune{}\n    for _, letter := range\
    \ text {\n        if !contains(vowels, letter) {\n            result = append(result,\
    \ letter)\n        }\n    }\n    return string(result)\n}\n", "    vowels := []rune{'a',\
    \ 'e', 'i', 'o', 'u'}\n    text := []rune(text)\n    for _, v := range text {\n\
    \        if !contains(vowels, v) {\n            v = string(v)\n        }\n   \
    \ }\n    return string(text)\n}\n", "    vowels := []rune(\"aeiou\")\n    result\
    \ := \"\"\n    for _, char := range text {\n        if !contains(vowels, char)\
    \ {\n            result += char\n        }\n    }\n    return result\n}\n", " \
    \   vowels := []rune(\"aeiou\")\n    for _, v := range vowels {\n        text\
    \ = strings.Replace(text, v, \"\", -1)\n    }\n    return text\n}\n", "    vowels\
    \ := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    result := \"\"\n    for\
    \ _, char := range text {\n        if !vowels[char] {\n            result += char\n\
    \        }\n    }\n    return result\n}\n", "    vowels := []rune{'a', 'e', 'i',\
    \ 'o', 'u'}\n    text := []rune(text)\n    for _, v := range text {\n        if\
    \ !contains(vowels, v) {\n            text := append(text, v)\n        }\n   \
    \ }\n    return string(text)\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o',\
    \ 'u'}\n    text := []rune(text)\n    result := []rune{}\n    for _, letter :=\
    \ range text {\n        if !contains(vowels, letter) {\n            result = append(result,\
    \ letter)\n        }\n    }\n    return string(result)\n}\n", "    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\"}\n    text := []rune(text)\n    for _, v := range\
    \ text {\n        if !contains(vowels, v) {\n            text := append(text,\
    \ v)\n        }\n    }\n    return string(text)\n}\n", "    vowels := []rune(\"\
    aeiou\")\n    result := \"\"\n    for _, char := range text {\n        if !contains(vowels,\
    \ char) {\n            result += char\n        }\n    }\n    return result\n}\n",
  "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text := []rune(text)\n    result\
    \ := []rune{}\n    for _, letter := range text {\n        if !contains(vowels,\
    \ letter) {\n            result = append(result, letter)\n        }\n    }\n \
    \   return string(result)\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n\
    \    text := []rune(text)\n    for _, v := range text {\n        if !contains(vowels,\
    \ v) {\n            v = unicode.ToLower(v)\n        }\n    }\n    return string(text)\n\
    }\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text := []rune(text)\n\
    \    result := []rune{}\n    for _, letter := range text {\n        if !contains(vowels,\
    \ letter) {\n            result = append(result, letter)\n        }\n    }\n \
    \   return string(result)\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n\
    \    text := []rune(text)\n    for _, v := range text {\n        if !contains(vowels,\
    \ v) {\n            v = unicode.ToLower(v)\n        }\n    }\n    return string(text)\n\
    }\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    text := []rune(text)\n\
    \    for _, v := range text {\n        if !contains(vowels, v) {\n           \
    \ text := append(text, v)\n        }\n    }\n    return string(text)\n}\n", " \
    \   vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    result := \"\"\n\
    \    for _, letter := range text {\n        if !contains(vowels, letter) {\n \
    \           result += letter\n        }\n    }\n    return result\n}\n", "   \
    \ vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\"}\n    for _, v := range\
    \ vowels {\n        text = text.replaceAllString(v, \"\")\n    }\n    return text\n\
    }\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    result := \"\"\n   \
    \ for _, letter := range text {\n        if !contains(vowels, letter) {\n    \
    \        result += letter\n        }\n    }\n    return result\n}\n", "    vowels\
    \ := []rune{'a', 'e', 'i', 'o', 'u'}\n    result := \"\"\n    for _, char := range\
    \ text {\n        if !contains(vowels, char) {\n            result += char\n \
    \       }\n    }\n    return result\n}\n", "    vowels := []rune{'a', 'e', 'i',\
    \ 'o', 'u'}\n    text := []rune(text)\n    for _, v := range text {\n        if\
    \ !contains(vowels, v) {\n            v = unicode.ToLower(v)\n        }\n    }\n\
    \    return string(text)\n}\n"]
stop_tokens:
- "\nfunc"
- struct
- "\n// "

name: HumanEval_43_pairs_sum_to_zero
language: go_test.go
prompt: "package pairs_sum_to_zero_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
  )\n\n// pairs_sum_to_zero takes a list of integers as an input.\n// it returns True\
  \ if there are two distinct elements in the list that\n// sum to zero, and False\
  \ otherwise.\nfunc pairs_sum_to_zero(l []int) bool {\n"
tests: "func TestPairs_Sum_To_Zero(t *testing.T) {\n  candidate := pairs_sum_to_zero\n\
  \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
  \   tests := []test{\n     { actual: candidate([]int{1, 3, 5, 0}), expected: false\
  \ },\n     { actual: candidate([]int{1, 3, -2, 1}), expected: false },\n     { actual:\
  \ candidate([]int{1, 2, 3, 7}), expected: false },\n     { actual: candidate([]int{2,\
  \ 4, -5, 3, 5, 7}), expected: true },\n     { actual: candidate([]int{1}), expected:\
  \ false },\n     { actual: candidate([]int{-3, 9, -1, 3, 2, 30}), expected: true\
  \ },\n     { actual: candidate([]int{-3, 9, -1, 3, 2, 31}), expected: true },\n\
  \     { actual: candidate([]int{-3, 9, -1, 4, 2, 30}), expected: false },\n    \
  \ { actual: candidate([]int{-3, 9, -1, 4, 2, 31}), expected: false },\n   }\n\n\t\
  for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
  \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
  \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\
  \t}\n\t\t})\n\t}\n}\n"
completions: ["    if len(l) == 0 {\n        return false\n    }\n    sum := 0\n \
    \   for _, v := range l {\n        sum += v\n    }\n    return sum == 0 && len(l)\
    \ == 1 || sum != 0 && len(l) == 2\n}\n", "    if len(l) == 0 {\n        return\
    \ false\n    }\n    sum := 0\n    for _, v := range l {\n        sum += v\n  \
    \  }\n    if sum == 0 {\n        return false\n    }\n    for _, v := range l\
    \ {\n        if sum-v == 0 {\n            return true\n        }\n    }\n    return\
    \ false\n}\n", "    if len(l) == 0 {\n        return false\n    }\n    s := 0\n\
    \    for _, v := range l {\n        s += v\n    }\n    if s == 0 {\n        return\
    \ false\n    }\n    t := 0\n    for _, v := range l {\n        t += v\n      \
    \  if t == 0 {\n            return true\n        }\n    }\n    return false\n\
    }\n", "    if len(l) == 0 {\n        return false\n    }\n    sum := 0\n    for\
    \ _, v := range l {\n        sum += v\n    }\n    return sum == 0 || sum == len(l)\n\
    }\n", "    if len(l) == 0 {\n        return false\n    }\n    sum := 0\n    for\
    \ _, v := range l {\n        sum += v\n    }\n    if sum == 0 {\n        return\
    \ false\n    }\n    l := make([]int, 0, len(l))\n    for _, v := range l {\n \
    \       l := append(l, v)\n    }\n    sort.Ints(l)\n    sum := 0\n    for _, v\
    \ := range l {\n        if sum == 0 {\n            return false\n        }\n \
    \       if sum != 0 {\n            if sum != v {\n                return false\n\
    \            }\n        }\n        sum += v\n    }\n    return true\n}\n", " \
    \   if len(l) < 2 {\n        return false\n    }\n    sum := 0\n    for _, v :=\
    \ range l {\n        sum += v\n    }\n    for _, v := range l {\n        if sum-int(v)\
    \ == 0 {\n            return true\n        }\n    }\n    return false\n}\n", " \
    \   if len(l) == 0 {\n        return false\n    }\n    sum := 0\n    for _, v\
    \ := range l {\n        sum += v\n    }\n    if sum == 0 {\n        return false\n\
    \    }\n    i := 0\n    for _, v := range l {\n        if v != 0 {\n         \
    \   i += v\n        }\n    }\n    return i == len(l)\n}\n", "    if len(l) ==\
    \ 0 {\n        return false\n    }\n    sum := 0\n    for _, v := range l {\n\
    \        sum += v\n    }\n    for _, v := range l {\n        if sum != 0 {\n \
    \           return false\n        }\n    }\n    return true\n}\n", "    if len(l)\
    \ == 0 {\n        return false\n    }\n    sum := 0\n    for _, v := range l {\n\
    \        sum += v\n    }\n    if sum == 0 {\n        return false\n    }\n   \
    \ i := 0\n    for _, v := range l {\n        if v != 0 {\n            i += v\n\
    \        }\n    }\n    return i == len(l)\n}\n", "    if len(l) == 0 {\n     \
    \   return false\n    }\n    sum := 0\n    for _, v := range l {\n        sum\
    \ += v\n    }\n    return sum == 0 && len(l) == 2 || sum > 0\n}\n", "    if len(l)\
    \ < 2 {\n        return false\n    }\n    sum := 0\n    for _, v := range l {\n\
    \        sum += v\n    }\n    if sum == 0 {\n        return false\n    }\n   \
    \ i := 0\n    j := len(l) - 1\n    for i < j {\n        if l[i]+l[j] == 0 {\n\
    \            i++\n            j--\n        } else {\n            return true\n\
    \        }\n    }\n    return false\n}\n", "    sum := 0\n    for _, v := range\
    \ l {\n        sum += v\n    }\n    return sum == 0\n}\n", "    if len(l) == 0\
    \ {\n        return false\n    }\n    sum := 0\n    for _, v := range l {\n  \
    \      sum += v\n    }\n    if sum == 0 {\n        return false\n    }\n    l\
    \ := make([]int, 0, len(l))\n    for _, v := range l {\n        l := append(l,\
    \ v)\n    }\n    for i := 0; i < len(l); i++ {\n        for j := i + 1; j < len(l);\
    \ j++ {\n            if l[i] + l[j] == 0 {\n                return true\n    \
    \        }\n        }\n    }\n    return false\n}\n", "    if len(l) < 2 {\n \
    \       return false\n    }\n    sum := 0\n    for _, v := range l {\n       \
    \ sum += v\n    }\n    if sum == 0 {\n        return false\n    }\n    i := 0\n\
    \    j := len(l)-1\n    for i < j {\n        if l[i]+l[j] == 0 {\n           \
    \ i++\n            j--\n        } else {\n            return false\n        }\n\
    \    }\n    return true\n}\n", "    if len(l) < 2 {\n        return false\n  \
    \  }\n    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    if\
    \ sum == 0 {\n        return false\n    }\n    l := make([]int, 0, len(l))\n \
    \   for _, v := range l {\n        l := append(l, v)\n    }\n    for i := 0; i\
    \ < len(l); i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i]+l[j]\
    \ == 0 {\n                return true\n            }\n        }\n    }\n    return\
    \ false\n}\n", "    if len(l) < 2 {\n        return false\n    }\n    sum := 0\n\
    \    for _, v := range l {\n        sum += v\n    }\n    for _, v := range l {\n\
    \        if sum-v != 0 {\n            return false\n        }\n    }\n    return\
    \ true\n}\n", "    if len(l) == 0 {\n        return false\n    }\n    sum := 0\n\
    \    for _, v := range l {\n        sum += v\n    }\n    return sum == 0 || sum\
    \ == len(l)\n}\n", "    if len(l) == 0 {\n        return false\n    }\n    s :=\
    \ 0\n    for _, v := range l {\n        s += v\n    }\n    if s == 0 {\n     \
    \   return false\n    }\n    for _, v := range l {\n        if v != 0 {\n    \
    \        s -= v\n            if s == 0 {\n                return true\n      \
    \      }\n        }\n    }\n    return false\n}\n", "    if len(l) < 2 {\n   \
    \     return false\n    }\n    sum := 0\n    for _, v := range l {\n        sum\
    \ += v\n    }\n    if sum == 0 {\n        return false\n    }\n    i := 0\n  \
    \  for _, v := range l {\n        if v != 0 {\n            i += v\n        }\n\
    \    }\n    return i == len(l)\n}\n", "    if len(l) == 0 {\n        return false\n\
    \    }\n\n    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n\n\
    \    for _, v := range l {\n        if sum-int(v) != 0 {\n            return false\n\
    \        }\n    }\n\n    return true\n}\n", "    if len(l) == 0 {\n        return\
    \ false\n    }\n    sum := 0\n    for _, v := range l {\n        sum += v\n  \
    \  }\n    if sum == 0 {\n        return false\n    }\n    l := make([]int, 0,\
    \ len(l))\n    for _, v := range l {\n        l := append(l, v)\n    }\n    sort.Ints(l)\n\
    \    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    if sum\
    \ != 0 {\n        return false\n    }\n    for _, v := range l {\n        if v\
    \ != 0 {\n            return false\n        }\n    }\n    return true\n}\n", " \
    \   if len(l) < 2 {\n        return false\n    }\n    sum := 0\n    for _, v :=\
    \ range l {\n        sum += v\n    }\n    if sum == 0 {\n        return false\n\
    \    }\n    l := make([]int, len(l))\n    for i := range l {\n        l[i] = l[i]\
    \ + l[i+1]\n    }\n    return pairs_sum_to_zero(l)\n}\n", "    if len(l) < 2 {\n\
    \        return false\n    }\n    sum := 0\n    for _, v := range l {\n      \
    \  sum += v\n    }\n    if sum == 0 {\n        return false\n    }\n    i := 0\n\
    \    for _, v := range l {\n        if v != 0 {\n            if sum-i == 0 {\n\
    \                return true\n            }\n            i += v\n        }\n \
    \   }\n    return false\n}\n", "    sum := 0\n    for _, v := range l {\n    \
    \    sum += v\n    }\n    return sum == 0\n}\n", "    if len(l) == 0 {\n     \
    \   return false\n    }\n    sum := 0\n    for _, v := range l {\n        sum\
    \ += v\n    }\n    if sum == 0 {\n        return false\n    }\n    i := 0\n  \
    \  for _, v := range l {\n        if v != 0 {\n            i += v\n        }\n\
    \    }\n    return i == len(l)\n}\n", "    if len(l) < 2 {\n        return false\n\
    \    }\n    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n   \
    \ for _, v := range l {\n        if sum != 0 {\n            return false\n   \
    \     }\n        sum -= v\n    }\n    return true\n}\n", "    if len(l) == 0 {\n\
    \        return false\n    }\n    sum := 0\n    for _, v := range l {\n      \
    \  sum += v\n    }\n    for _, v := range l {\n        if sum-int(v) == 0 {\n\
    \            return true\n        }\n    }\n    return false\n}\n", "    if len(l)\
    \ == 0 {\n        return false\n    }\n    sum := 0\n    for _, v := range l {\n\
    \        sum += v\n    }\n    if sum == 0 {\n        return false\n    }\n   \
    \ sort.Ints(l)\n    i := 0\n    for _, v := range l {\n        if v != l[i] {\n\
    \            return false\n        }\n        i++\n    }\n    return true\n}\n",
  "    if len(l) < 2 {\n        return false\n    }\n    sum := 0\n    for _, v :=\
    \ range l {\n        sum += v\n    }\n    if sum == 0 {\n        return false\n\
    \    }\n    i := 0\n    for _, v := range l {\n        if v != 0 {\n         \
    \   i += v\n        }\n    }\n    return i == len(l)\n}\n", "    if len(l) ==\
    \ 0 {\n        return false\n    }\n    sum := 0\n    for _, v := range l {\n\
    \        sum += v\n    }\n    if sum == 0 {\n        return false\n    }\n   \
    \ l := make([]int, len(l))\n    for i := range l {\n        l[i] = l[i] + sum\n\
    \    }\n    return pairs_sum_to_zero(l)\n}\n", "    if len(l) == 0 {\n       \
    \ return false\n    }\n    sum := 0\n    for _, v := range l {\n        sum +=\
    \ v\n    }\n    for _, v := range l {\n        if sum-int(v) == 0 {\n        \
    \    return true\n        }\n    }\n    return false\n}\n", "    sum := 0\n  \
    \  for _, v := range l {\n        sum += v\n    }\n    return sum == 0 && len(l)\
    \ == 2\n}\n", "    if len(l) == 0 {\n        return false\n    }\n    sum := 0\n\
    \    for _, v := range l {\n        sum += v\n    }\n    if sum == 0 {\n     \
    \   return false\n    }\n    l := make([]int, 0, len(l))\n    for _, v := range\
    \ l {\n        l := append(l, v)\n    }\n    sort.Ints(l)\n    sum := 0\n    for\
    \ _, v := range l {\n        if v != 0 {\n            sum += v\n        }\n  \
    \  }\n    return sum == 0 && len(l) == 2\n}\n", "    sum := 0\n    for _, v :=\
    \ range l {\n        sum += v\n    }\n    return sum == 0\n}\n", "    if len(l)\
    \ == 0 {\n        return false\n    }\n    sum := 0\n    for _, v := range l {\n\
    \        sum += v\n    }\n    return sum == 0 && len(l) == 2 || sum > 0\n}\n",
  "    if len(l) == 0 {\n        return false\n    }\n    sum := 0\n    for _, v :=\
    \ range l {\n        sum += v\n    }\n    return sum == 0 || sum == len(l)\n}\n",
  "    if len(l) == 0 {\n        return false\n    }\n\n    sum := 0\n    for _, v\
    \ := range l {\n        sum += v\n    }\n\n    for _, v := range l {\n       \
    \ if sum == 0 {\n            return false\n        }\n        sum -= v\n    }\n\
    \n    return true\n}\n", "    if len(l) == 0 {\n        return false\n    }\n\
    \    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    for _,\
    \ v := range l {\n        if sum-v != 0 {\n            return false\n        }\n\
    \    }\n    return true\n}\n", "    if len(l) == 0 {\n        return false\n \
    \   }\n    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    if\
    \ sum == 0 {\n        return false\n    }\n    l := make([]int, 0, len(l))\n \
    \   for _, v := range l {\n        l := append(l, v)\n    }\n    sort.Ints(l)\n\
    \    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    if sum\
    \ != 0 {\n        return false\n    }\n    for i := range l {\n        if l[i]\
    \ == 0 {\n            return false\n        }\n    }\n    return true\n}\n", " \
    \   if len(l) == 0 {\n        return false\n    }\n    sum := 0\n    for _, v\
    \ := range l {\n        sum += v\n    }\n    for _, v := range l {\n        if\
    \ sum != 0 {\n            return false\n        }\n        sum -= v\n    }\n \
    \   return true\n}\n", "    if len(l) < 2 {\n        return false\n    }\n   \
    \ sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    for _, v :=\
    \ range l {\n        if sum-int(v) == 0 {\n            return true\n        }\n\
    \    }\n    return false\n}\n", "    if len(l) == 0 {\n        return false\n\
    \    }\n    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n   \
    \ if sum == 0 {\n        return false\n    }\n    i := 0\n    for _, v := range\
    \ l {\n        if v == 0 {\n            i++\n            continue\n        }\n\
    \        if v != l[i] {\n            return false\n        }\n    }\n    return\
    \ true\n}\n", "    if len(l) == 0 {\n        return false\n    }\n    sum := 0\n\
    \    for _, v := range l {\n        sum += v\n    }\n    return sum == 0 || sum\
    \ == len(l)\n}\n", "    if len(l) == 0 {\n        return false\n    }\n    sum\
    \ := 0\n    for _, v := range l {\n        sum += v\n    }\n    if sum == 0 {\n\
    \        return false\n    }\n    i := 0\n    for _, v := range l {\n        if\
    \ v != 0 {\n            i += v\n        }\n    }\n    return i == len(l)\n}\n",
  "    if len(l) == 0 {\n        return false\n    }\n    sum := 0\n    for _, v :=\
    \ range l {\n        sum += v\n    }\n    if sum == 0 {\n        return false\n\
    \    }\n    i := 0\n    for _, v := range l {\n        if v != 0 {\n         \
    \   i += v\n        }\n    }\n    return i == len(l)\n}\n", "    if len(l) ==\
    \ 0 {\n        return false\n    }\n    sum := 0\n    for _, v := range l {\n\
    \        sum += v\n    }\n    if sum == 0 {\n        return false\n    }\n   \
    \ l := make([]int, 0, len(l))\n    for _, v := range l {\n        if v != 0 {\n\
    \            l = append(l, v)\n        }\n    }\n    return len(l) == 2 && l[0]\
    \ == 0 && l[1] == 0\n}\n", "    sum := 0\n    for _, v := range l {\n        sum\
    \ += v\n    }\n    return sum == 0 && len(l) == 2\n}\n", "    if len(l) == 0 {\n\
    \        return false\n    }\n    sum := 0\n    for _, v := range l {\n      \
    \  sum += v\n    }\n    if sum == 0 {\n        return false\n    }\n    l := make([]int,\
    \ 0, len(l))\n    for _, v := range l {\n        if v != 0 {\n            l =\
    \ append(l, v)\n        }\n    }\n    sort.Ints(l)\n    sum := 0\n    for _, v\
    \ := range l {\n        sum += v\n    }\n    if sum != 0 {\n        return false\n\
    \    }\n    for _, v := range l {\n        if v != 0 {\n            l = append(l,\
    \ v)\n        }\n    }\n    sort.Ints(l)\n    sum := 0\n    for _, v := range\
    \ l {\n        sum += v\n    }\n    if sum != 0 {\n        return false\n    }\n\
    \    return true\n}\n", "    if len(l) == 0 {\n        return false\n    }\n \
    \   s := 0\n    for _, v := range l {\n        s += v\n    }\n    for _, v :=\
    \ range l {\n        if v != 0 {\n            if s == 0 {\n                return\
    \ false\n            }\n            s -= v\n        }\n    }\n    return true\n\
    }\n", "    if len(l) == 0 {\n        return false\n    }\n    sum := 0\n    for\
    \ _, v := range l {\n        sum += v\n    }\n    if sum == 0 {\n        return\
    \ false\n    }\n    i := 0\n    for _, v := range l {\n        if v != 0 {\n \
    \           i += v\n        }\n    }\n    return i == len(l)\n}\n", "    sum :=\
    \ 0\n    for _, v := range l {\n        sum += v\n    }\n    return sum == 0\n\
    }\n", "    if len(l) == 0 {\n        return false\n    }\n    sum := 0\n    for\
    \ _, v := range l {\n        sum += v\n    }\n    return sum == 0 && len(l) ==\
    \ 2 || sum != 0 && len(l) == 3\n}\n", "    if len(l) < 2 {\n        return false\n\
    \    }\n    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n   \
    \ for _, v := range l {\n        if sum-int(v) == 0 {\n            return true\n\
    \        }\n    }\n    return false\n}\n", "    if len(l) == 0 {\n        return\
    \ false\n    }\n    sum := 0\n    for _, v := range l {\n        sum += v\n  \
    \  }\n    if sum == 0 {\n        return false\n    }\n    l := make([]int, 0,\
    \ len(l))\n    for _, v := range l {\n        l := append(l, v)\n    }\n    for\
    \ i := 0; i < len(l); i++ {\n        for j := i + 1; j < len(l); j++ {\n     \
    \       if l[i]+l[j] == 0 {\n                return true\n            }\n    \
    \    }\n    }\n    return false\n}\n", "    if len(l) == 0 {\n        return false\n\
    \    }\n    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n   \
    \ if sum == 0 {\n        return false\n    }\n    i := 0\n    for _, v := range\
    \ l {\n        if v != 0 {\n            i += v\n        }\n    }\n    return i\
    \ == len(l)\n}\n", "    if len(l) == 0 {\n        return false\n    }\n    sum\
    \ := 0\n    for _, v := range l {\n        sum += v\n    }\n    if sum == 0 {\n\
    \        return false\n    }\n    for _, v := range l {\n        if v != 0 {\n\
    \            sum -= v\n            if sum != 0 {\n                return false\n\
    \            }\n        }\n    }\n    return true\n}\n", "    if len(l) == 0 {\n\
    \        return false\n    }\n    sum := 0\n    for _, v := range l {\n      \
    \  sum += v\n    }\n    return sum == 0\n}\n", "    if len(l) < 2 {\n        return\
    \ false\n    }\n    sum := 0\n    for _, v := range l {\n        sum += v\n  \
    \  }\n    if sum == 0 {\n        return false\n    }\n    i := 0\n    for _, v\
    \ := range l {\n        if v != 0 {\n            i += v\n        }\n    }\n  \
    \  return i == len(l)\n}\n", "    if len(l) < 2 {\n        return false\n    }\n\
    \    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    if sum\
    \ == 0 {\n        return false\n    }\n    i := 0\n    for _, v := range l {\n\
    \        if v != 0 {\n            i += v\n        }\n    }\n    if i == 0 {\n\
    \        return false\n    }\n    for _, v := range l {\n        if v != 0 {\n\
    \            i += v\n        }\n    }\n    return true\n}\n", "    if len(l) ==\
    \ 0 {\n        return false\n    }\n    sum := 0\n    for _, v := range l {\n\
    \        sum += v\n    }\n    if sum == 0 {\n        return false\n    }\n   \
    \ i := 0\n    for _, v := range l {\n        if v != 0 {\n            i += v\n\
    \        }\n    }\n    if i == 0 {\n        return false\n    }\n    return true\n\
    }\n", "    if len(l) == 0 {\n        return false\n    }\n    s := 0\n    for\
    \ _, v := range l {\n        s += v\n    }\n    if s == 0 {\n        return false\n\
    \    }\n    l := make([]int, 0, len(l))\n    for _, v := range l {\n        l\
    \ := append(l, v)\n    }\n    sort.Ints(l)\n    for i := 1; i < len(l); i++ {\n\
    \        if l[i-1] != l[i] {\n            return false\n        }\n    }\n   \
    \ return true\n}\n", "    if len(l) == 0 {\n        return false\n    }\n\n  \
    \  sum := 0\n    for _, v := range l {\n        sum += v\n    }\n\n    for _,\
    \ v := range l {\n        if sum != 0 {\n            return false\n        }\n\
    \        sum -= v\n    }\n\n    return true\n}\n", "    if len(l) == 0 {\n   \
    \     return false\n    }\n    sum := 0\n    for _, v := range l {\n        sum\
    \ += v\n    }\n    if sum == 0 {\n        return false\n    }\n    l := make(map[int]bool)\n\
    \    for _, v := range l {\n        l[v] = true\n    }\n    for _, v := range\
    \ l {\n        if sum-v != 0 {\n            return false\n        }\n    }\n \
    \   return true\n}\n", "    if len(l) == 0 {\n        return false\n    }\n  \
    \  sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    if sum ==\
    \ 0 {\n        return false\n    }\n    for _, v := range l {\n        if sum-v\
    \ != 0 {\n            return false\n        }\n    }\n    return true\n}\n", " \
    \   if len(l) == 0 {\n        return false\n    }\n\n    sum := 0\n    for _,\
    \ v := range l {\n        sum += v\n    }\n\n    for _, v := range l {\n     \
    \   if sum == 0 {\n            return false\n        }\n        sum -= v\n   \
    \ }\n\n    return true\n}\n", "    sum := 0\n    for _, v := range l {\n     \
    \   sum += v\n    }\n    return sum == 0 || sum == len(l)\n}\n", "    if len(l)\
    \ == 0 {\n        return false\n    }\n    sum := 0\n    for _, v := range l {\n\
    \        sum += v\n    }\n    if sum == 0 {\n        return false\n    }\n   \
    \ for _, v := range l {\n        if sum-v == 0 {\n            return true\n  \
    \      }\n    }\n    return false\n}\n", "    if len(l) == 0 {\n        return\
    \ false\n    }\n    sum := 0\n    for _, v := range l {\n        sum += v\n  \
    \  }\n    return sum == 0 && len(l) == 1 || sum != 0 && len(l) == 2\n}\n", " \
    \   if len(l) == 0 {\n        return false\n    }\n    sum := 0\n    for _, v\
    \ := range l {\n        sum += v\n    }\n    return sum == 0 && len(l) == 2 ||\
    \ sum != 0 && len(l) == 3\n}\n", "    if len(l) == 0 {\n        return false\n\
    \    }\n    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n   \
    \ for _, v := range l {\n        if sum-int(v) == 0 {\n            return true\n\
    \        }\n    }\n    return false\n}\n", "    if len(l) < 2 {\n        return\
    \ false\n    }\n    sum := 0\n    for _, v := range l {\n        sum += v\n  \
    \  }\n    for _, v := range l {\n        if sum-v == 0 {\n            return true\n\
    \        }\n    }\n    return false\n}\n", "    if len(l) == 0 {\n        return\
    \ false\n    }\n    sum := 0\n    for _, v := range l {\n        sum += v\n  \
    \  }\n    if sum == 0 {\n        return false\n    }\n    i := 0\n    for _, v\
    \ := range l {\n        if v == 0 {\n            i++\n        }\n    }\n    if\
    \ i == len(l) {\n        return false\n    }\n    j := 0\n    for _, v := range\
    \ l {\n        if v == 0 {\n            j++\n        }\n    }\n    if j == len(l)\
    \ {\n        return false\n    }\n    return true\n}\n", "    if len(l) == 0 {\n\
    \        return false\n    }\n    s := 0\n    for _, v := range l {\n        s\
    \ += v\n    }\n    if s == 0 {\n        return false\n    }\n    t := 0\n    for\
    \ _, v := range l {\n        t += v\n        if t != s {\n            return false\n\
    \        }\n    }\n    return true\n}\n", "    if len(l) == 0 {\n        return\
    \ false\n    }\n    sum := 0\n    for _, v := range l {\n        sum += v\n  \
    \  }\n    if sum == 0 {\n        return false\n    }\n    l := make([]int, len(l))\n\
    \    for i := 0; i < len(l); i++ {\n        l[i] = l[i] + sum\n    }\n    return\
    \ pairs_sum_to_zero(l)\n}\n", "    if len(l) == 0 {\n        return false\n  \
    \  }\n    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    for\
    \ _, v := range l {\n        if sum == 0 {\n            return false\n       \
    \ }\n        sum -= v\n    }\n    return true\n}\n", "    if len(l) == 0 {\n \
    \       return false\n    }\n    sum := 0\n    for _, v := range l {\n       \
    \ sum += v\n    }\n    if sum == 0 {\n        return false\n    }\n    i := 0\n\
    \    for _, v := range l {\n        if v != 0 {\n            i += v\n        }\n\
    \    }\n    return i == len(l)\n}\n", "    if len(l) == 0 {\n        return false\n\
    \    }\n    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n   \
    \ return sum == 0 && len(l) == 2 || sum > 0\n}\n", "    if len(l) == 0 {\n   \
    \     return false\n    }\n    sum := 0\n    for _, v := range l {\n        sum\
    \ += v\n    }\n    return sum == 0 && len(l) == 2 || sum > 0 && len(l) == 3\n\
    }\n", "    if len(l) < 2 {\n        return false\n    }\n    sum := 0\n    for\
    \ _, v := range l {\n        sum += v\n    }\n    for _, v := range l {\n    \
    \    if sum-int(v) == 0 {\n            return true\n        }\n    }\n    return\
    \ false\n}\n", "    if len(l) == 0 {\n        return false\n    }\n    sum :=\
    \ 0\n    for _, v := range l {\n        sum += v\n    }\n    if sum == 0 {\n \
    \       return false\n    }\n    for _, v := range l {\n        if sum-v != 0\
    \ {\n            return false\n        }\n    }\n    return true\n}\n", "    if\
    \ len(l) < 2 {\n        return false\n    }\n    sum := 0\n    for _, v := range\
    \ l {\n        sum += v\n    }\n    return sum == 0 && len(l) == 2 || sum != 0\
    \ && len(l) == 3\n}\n", "    if len(l) == 0 {\n        return false\n    }\n \
    \   sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    if sum ==\
    \ 0 {\n        return false\n    }\n    sum /= 2\n    for _, v := range l {\n\
    \        if v == sum {\n            return false\n        }\n    }\n    return\
    \ true\n}\n", "    if len(l) < 2 {\n        return false\n    }\n    sum := 0\n\
    \    for _, v := range l {\n        sum += v\n    }\n    for _, v := range l {\n\
    \        if sum == 0 {\n            return false\n        }\n        sum -= v\n\
    \    }\n    return true\n}\n", "    if len(l) == 0 {\n        return false\n \
    \   }\n    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    if\
    \ sum == 0 {\n        return false\n    }\n    l := make([]int, 0, len(l))\n \
    \   for _, v := range l {\n        l := append(l, v)\n    }\n    sort.Ints(l)\n\
    \    sum := 0\n    for _, v := range l {\n        sum += v\n        if sum ==\
    \ 0 {\n            return true\n        }\n    }\n    return false\n}\n", "  \
    \  if len(l) == 0 {\n        return false\n    }\n    sum := 0\n    for _, v :=\
    \ range l {\n        sum += v\n    }\n    return sum == 0 || sum == len(l)-1\n\
    }\n", "    if len(l) < 2 {\n        return false\n    }\n\n    sum := 0\n    for\
    \ _, v := range l {\n        sum += v\n    }\n\n    for _, v := range l {\n  \
    \      if sum-int(v) != 0 {\n            return false\n        }\n    }\n\n  \
    \  return true\n}\n", "    if len(l) < 2 {\n        return false\n    }\n    sum\
    \ := 0\n    for _, v := range l {\n        sum += v\n    }\n    for _, v := range\
    \ l {\n        if sum != 0 {\n            return false\n        }\n    }\n   \
    \ return true\n}\n", "    if len(l) < 2 {\n        return false\n    }\n    sum\
    \ := 0\n    for _, v := range l {\n        sum += v\n    }\n    for _, v := range\
    \ l {\n        if sum-v == 0 {\n            return true\n        }\n    }\n  \
    \  return false\n}\n", "    if len(l) == 0 {\n        return false\n    }\n  \
    \  sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    if sum ==\
    \ 0 {\n        return false\n    }\n    i := 0\n    for _, v := range l {\n  \
    \      if v != 0 {\n            i += v\n        }\n    }\n    return i == len(l)\n\
    }\n", "    if len(l) == 0 {\n        return false\n    }\n    s := 0\n    for\
    \ _, v := range l {\n        s += v\n    }\n    if s == 0 {\n        return false\n\
    \    }\n    for _, v := range l {\n        if v != 0 {\n            s -= v\n \
    \           if s == 0 {\n                return true\n            }\n        }\n\
    \    }\n    return false\n}\n", "    if len(l) == 0 {\n        return false\n\
    \    }\n    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n   \
    \ if sum == 0 {\n        return false\n    }\n    for _, v := range l {\n    \
    \    if v != 0 {\n            sum -= v\n            if sum != 0 {\n          \
    \      return false\n            }\n        }\n    }\n    return true\n}\n", " \
    \   if len(l) == 0 {\n        return false\n    }\n    sum := 0\n    for _, v\
    \ := range l {\n        sum += v\n    }\n    if sum == 0 {\n        return false\n\
    \    }\n    l := len(l)\n    i := 0\n    for i < l {\n        j := i + 1\n   \
    \     for j < l {\n            if l[i] + l[j] == 0 {\n                return true\n\
    \            }\n            j += 1\n        }\n        i += 1\n    }\n    return\
    \ false\n}\n", "    if len(l) == 0 {\n        return false\n    }\n    sum :=\
    \ 0\n    for _, v := range l {\n        sum += v\n    }\n    return sum == 0 &&\
    \ len(l) == 1 || sum != 0 && len(l) == 2\n}\n", "    if len(l) == 0 {\n      \
    \  return false\n    }\n    sum := 0\n    for _, v := range l {\n        sum +=\
    \ v\n    }\n    if sum == 0 {\n        return false\n    }\n    for _, v := range\
    \ l {\n        if sum-v == 0 {\n            return true\n        }\n    }\n  \
    \  return false\n}\n", "    if len(l) == 0 {\n        return false\n    }\n  \
    \  sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    if sum ==\
    \ 0 {\n        return false\n    }\n    l := make([]int, 0, len(l))\n    for _,\
    \ v := range l {\n        l := append(l, v)\n    }\n    sort.Ints(l)\n    sum\
    \ := 0\n    for _, v := range l {\n        if v != 0 {\n            sum += v\n\
    \        }\n        if sum == 0 {\n            return true\n        }\n    }\n\
    \    return false\n}\n", "    if len(l) == 0 {\n        return false\n    }\n\
    \    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    if sum\
    \ == 0 {\n        return false\n    }\n    for _, v := range l {\n        if sum-v\
    \ == 0 {\n            return true\n        }\n    }\n    return false\n}\n", " \
    \   if len(l) == 0 {\n        return false\n    }\n    sum := 0\n    for _, v\
    \ := range l {\n        sum += v\n    }\n    if sum == 0 {\n        return false\n\
    \    }\n    i := 0\n    for _, v := range l {\n        if v != 0 {\n         \
    \   i += v\n        }\n    }\n    return i == len(l)\n}\n", "    if len(l) < 2\
    \ {\n        return false\n    }\n    sum := 0\n    for _, v := range l {\n  \
    \      sum += v\n    }\n    for _, v := range l {\n        if sum-int(v) == 0\
    \ {\n            return true\n        }\n    }\n    return false\n}\n", "    if\
    \ len(l) == 0 {\n        return false\n    }\n    sum := 0\n    for _, v := range\
    \ l {\n        sum += v\n    }\n    if sum == 0 {\n        return false\n    }\n\
    \    for _, v := range l {\n        if sum-v == 0 {\n            return true\n\
    \        }\n    }\n    return false\n}\n", "    if len(l) == 0 {\n        return\
    \ false\n    }\n    sum := 0\n    for _, v := range l {\n        sum += v\n  \
    \  }\n    if sum == 0 {\n        return false\n    }\n    for _, v := range l\
    \ {\n        if sum-v == 0 {\n            return true\n        }\n    }\n    return\
    \ false\n}\n", "    if len(l) == 0 {\n        return false\n    }\n    sum :=\
    \ 0\n    for _, v := range l {\n        sum += v\n    }\n    if sum == 0 {\n \
    \       return false\n    }\n    for _, v := range l {\n        if sum-v == 0\
    \ {\n            return true\n        }\n    }\n    return false\n}\n", "    if\
    \ len(l) == 0 {\n        return false\n    }\n\n    sum := 0\n    for _, v :=\
    \ range l {\n        sum += v\n    }\n\n    if sum == 0 {\n        return false\n\
    \    }\n\n    i := 0\n    for _, v := range l {\n        if v == 0 {\n       \
    \     i++\n        }\n    }\n\n    if i == len(l) {\n        return false\n  \
    \  }\n\n    for _, v := range l[i:] {\n        if v != 0 {\n            return\
    \ false\n        }\n    }\n\n    return true\n}\n", "    if len(l) == 0 {\n  \
    \      return false\n    }\n    sum := 0\n    for _, v := range l {\n        sum\
    \ += v\n    }\n    if sum == 0 {\n        return false\n    }\n    for _, v :=\
    \ range l {\n        if sum-v == 0 {\n            return true\n        }\n   \
    \ }\n    return false\n}\n", "    if len(l) == 0 {\n        return false\n   \
    \ }\n    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    for\
    \ _, v := range l {\n        if sum-int(v) != 0 {\n            return false\n\
    \        }\n    }\n    return true\n}\n", "    if len(l) == 0 {\n        return\
    \ false\n    }\n\n    sum := 0\n    for _, v := range l {\n        sum += v\n\
    \    }\n\n    for _, v := range l {\n        if sum == 0 {\n            return\
    \ false\n        }\n\n        sum -= v\n    }\n\n    return true\n}\n", "    if\
    \ len(l) == 0 {\n        return false\n    }\n    sum := 0\n    for _, v := range\
    \ l {\n        sum += v\n    }\n    return sum == 0 || sum == len(l)\n}\n", " \
    \   if len(l) == 0 {\n        return false\n    }\n    sum := 0\n    for _, v\
    \ := range l {\n        sum += v\n    }\n    if sum == 0 {\n        return false\n\
    \    }\n    i := 0\n    for _, v := range l {\n        if v != 0 {\n         \
    \   i += v\n        }\n    }\n    return i == len(l)\n}\n", "    if len(l) ==\
    \ 0 {\n        return false\n    }\n    sum := 0\n    for _, v := range l {\n\
    \        sum += v\n    }\n    return sum == 0 && len(l) == 2 || sum > 0\n}\n",
  "    if len(l) == 0 {\n        return false\n    }\n    sum := 0\n    for _, v :=\
    \ range l {\n        sum += v\n    }\n    if sum == 0 {\n        return false\n\
    \    }\n    for _, v := range l {\n        if sum-v == 0 {\n            return\
    \ true\n        }\n    }\n    return false\n}\n", "    if len(l) == 0 {\n    \
    \    return false\n    }\n\n    sum := 0\n    for _, v := range l {\n        sum\
    \ += v\n    }\n\n    for _, v := range l {\n        if sum-int(v) != 0 {\n   \
    \         return false\n        }\n    }\n\n    return true\n}\n", "    if len(l)\
    \ == 0 {\n        return false\n    }\n    sum := 0\n    for _, v := range l {\n\
    \        sum += v\n    }\n    return sum == 0 || sum == len(l)\n}\n", "    if\
    \ len(l) == 0 {\n        return false\n    }\n\n    sum := 0\n    for _, v :=\
    \ range l {\n        sum += v\n    }\n\n    for _, v := range l {\n        if\
    \ sum == 0 {\n            return false\n        }\n        sum -= v\n    }\n\n\
    \    return true\n}\n", "    if len(l) < 2 {\n        return false\n    }\n  \
    \  sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    for _, v\
    \ := range l {\n        if sum-int(v) != 0 {\n            return false\n     \
    \   }\n    }\n    return true\n}\n", "    if len(l) == 0 {\n        return false\n\
    \    }\n    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n   \
    \ if sum == 0 {\n        return false\n    }\n    i := 0\n    for _, v := range\
    \ l {\n        if v != 0 {\n            i += v\n        }\n    }\n    return i\
    \ == len(l)\n}\n", "    if len(l) < 2 {\n        return false\n    }\n    sum\
    \ := 0\n    for _, v := range l {\n        sum += v\n    }\n    if sum == 0 {\n\
    \        return false\n    }\n    l := make([]int, len(l))\n    copy(l, l)\n \
    \   for i := 0; i < len(l)-1; i++ {\n        if l[i]+l[i+1] != 0 {\n         \
    \   return false\n        }\n    }\n    return true\n}\n", "    if len(l) < 2\
    \ {\n        return false\n    }\n    sum := 0\n    for _, v := range l {\n  \
    \      sum += v\n    }\n    if sum == 0 {\n        return false\n    }\n    l\
    \ := make([]int, len(l))\n    for i := range l {\n        l[i] = l[i] + l[i+1]\n\
    \    }\n    return pairs_sum_to_zero(l)\n}\n", "    if len(l) == 0 {\n       \
    \ return false\n    }\n    sum := 0\n    for _, v := range l {\n        sum +=\
    \ v\n    }\n    if sum == 0 {\n        return false\n    }\n    i := 0\n    for\
    \ _, v := range l {\n        if v != 0 {\n            i += v\n        }\n    }\n\
    \    return i == len(l)\n}\n", "    if len(l) == 0 {\n        return false\n \
    \   }\n    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    if\
    \ sum == 0 {\n        return false\n    }\n    l := make([]int, len(l))\n    copy(l,\
    \ l)\n    l := append(l, 0)\n    l := append(l, 0)\n    l := append(l, 0)\n  \
    \  l := append(l, 0)\n    l := append(l, 0)\n    l := append(l, 0)\n    l := append(l,\
    \ 0)\n    l := append(l, 0)\n    l := append(l, 0)\n    l := append(l, 0)\n  \
    \  l := append(l, 0)\n    l := append(l, 0)\n    l := append(l, 0)\n    l := append(l,\
    \ 0)\n    l := append(l, 0)\n    l := append(l, 0)\n    l := append(l, 0)\n  \
    \  l := append(l, 0)\n    l := append(l, 0)\n    l := append(l, 0)\n    l := append(l,\
    \ 0)\n    l := append(l, 0)\n    l := append(l, 0)\n    l := append(l, 0)\n  \
    \  l := append(l, 0)\n    l := append(l, 0)\n    l := append(l, 0)\n    l := append(l,\
    \ 0)\n    l := append(l, 0)\n    l := append(l, 0)\n    l := append(l, 0)\n  \
    \  l := append(l, 0)\n    l := append(l, 0)\n    l := append(l, 0)\n    l := append(l,\
    \ 0)\n    l := append(l, 0)\n    l := append(l, 0)\n    l := append(l, 0)\n  \
    \  l := append(l, 0)\n    l := append(l, 0)\n    l := append(l, 0)\n    l := append(l,\
    \ 0)\n    l := append(l, 0)\n    l := append(l, 0)\n    l := append(l, 0)\n  \
    \  l := append(l, 0)\n    l := append(l, 0)\n    l := append(l, 0)\n    l := append(l,\
    \ 0)\n    l := append(l, 0)\n    l := append(l, 0)\n    l := append(l, 0)\n  \
    \  l := append(l, 0)\n    l := append(l, 0)\n    l := append(l, 0)\n    l := append(l,\
    \ 0)\n    l := append(l, 0)\n    l := append(l, 0)\n    l := append(l, 0)\n  \
    \  l := append(l, 0)\n    l := append(l, 0)\n    l := append(l, 0)\n    l := append(l,\
    \ 0)\n    l := append(l, 0)\n    l := append(l, 0)\n    l ", "    if len(l) ==\
    \ 0 {\n        return false\n    }\n    sum := 0\n    for _, v := range l {\n\
    \        sum += v\n    }\n    return sum == 0 && len(l) == 2 || sum > 0\n}\n",
  "    if len(l) == 0 {\n        return false\n    }\n\n    sum := 0\n    for _, v\
    \ := range l {\n        sum += v\n    }\n\n    for _, v := range l {\n       \
    \ if sum == 0 {\n            return false\n        }\n        sum -= v\n    }\n\
    \n    return true\n}\n", "    if len(l) == 0 {\n        return false\n    }\n\
    \    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    return\
    \ sum == 0 && len(l) == 1 || sum != 0 && len(l) == 2\n}\n", "    if len(l) ==\
    \ 0 {\n        return false\n    }\n    sum := 0\n    for _, v := range l {\n\
    \        sum += v\n    }\n    return sum == 0 && len(l) == 2 || sum > 0 && len(l)\
    \ == 3\n}\n", "    if len(l) < 2 {\n        return false\n    }\n    sum := 0\n\
    \    for _, v := range l {\n        sum += v\n    }\n    if sum == 0 {\n     \
    \   return false\n    }\n    l := make([]int, len(l))\n    for i := 0; i < len(l);\
    \ i++ {\n        l[i] = l[i] + l[(i+1)%len(l)]\n    }\n    return pairs_sum_to_zero(l)\n\
    }\n", "    if len(l) == 0 {\n        return false\n    }\n    sum := 0\n    for\
    \ _, v := range l {\n        sum += v\n    }\n    if sum == 0 {\n        return\
    \ false\n    }\n    for _, v := range l {\n        if v != 0 {\n            sum\
    \ -= v\n            if sum != 0 {\n                return false\n            }\n\
    \        }\n    }\n    return true\n}\n", "    if len(l) < 2 {\n        return\
    \ false\n    }\n    s := 0\n    for _, v := range l {\n        s += v\n    }\n\
    \    if s == 0 {\n        return true\n    }\n    t := 0\n    for _, v := range\
    \ l {\n        t += v\n        if t == 0 {\n            return true\n        }\n\
    \    }\n    return false\n}\n", "    if len(l) < 2 {\n        return false\n \
    \   }\n    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    if\
    \ sum == 0 {\n        return false\n    }\n    i := 0\n    j := len(l) - 1\n \
    \   for i < j {\n        if l[i]+l[j] == 0 {\n            i++\n            j--\n\
    \        } else {\n            return true\n        }\n    }\n    return false\n\
    }\n", "    if len(l) == 0 {\n        return false\n    }\n    sum := 0\n    for\
    \ _, v := range l {\n        sum += v\n    }\n    if sum == 0 {\n        return\
    \ false\n    }\n    l := make([]int, 0, len(l))\n    for _, v := range l {\n \
    \       l := append(l, v)\n    }\n    sort.Ints(l)\n    sum := 0\n    for _, v\
    \ := range l {\n        sum += v\n    }\n    if sum != 0 {\n        return false\n\
    \    }\n    for _, v := range l {\n        if v != 0 {\n            return false\n\
    \        }\n    }\n    return true\n}\n", "    if len(l) == 0 {\n        return\
    \ false\n    }\n    sum := 0\n    for _, v := range l {\n        sum += v\n  \
    \  }\n    if sum == 0 {\n        return false\n    }\n    for _, v := range l\
    \ {\n        if sum-v == 0 {\n            return true\n        }\n    }\n    return\
    \ false\n}\n", "    sum := 0\n    for _, v := range l {\n        sum += v\n  \
    \  }\n    return sum == 0\n}\n", "    if len(l) == 0 {\n        return false\n\
    \    }\n    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n   \
    \ if sum == 0 {\n        return false\n    }\n    i := 0\n    for _, v := range\
    \ l {\n        if v != 0 {\n            i += v\n        }\n    }\n    return i\
    \ == len(l)\n}\n", "    if len(l) == 0 {\n        return false\n    }\n    sum\
    \ := 0\n    for _, v := range l {\n        sum += v\n    }\n    if sum == 0 {\n\
    \        return false\n    }\n    l := make([]int, len(l))\n    copy(l, l)\n \
    \   for i := len(l) - 1; i >= 0; i-- {\n        if l[i] == 0 {\n            l\
    \ = append(l[:i], l[i+1:]...)\n        }\n    }\n    return len(l) == 2 && l[0]\
    \ == 0 && l[1] == 0\n}\n", "    if len(l) < 2 {\n        return false\n    }\n\
    \    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    if sum\
    \ == 0 {\n        return false\n    }\n    for _, v := range l {\n        if v\
    \ != 0 {\n            sum -= v\n            if sum == 0 {\n                return\
    \ true\n            }\n        }\n    }\n    return false\n}\n", "    if len(l)\
    \ < 2 {\n        return false\n    }\n    s := 0\n    for _, v := range l {\n\
    \        s += v\n    }\n    if s == 0 {\n        return false\n    }\n    for\
    \ _, v := range l {\n        if v != 0 {\n            s -= v\n            if s\
    \ == 0 {\n                return true\n            }\n        }\n    }\n    return\
    \ false\n}\n", "    if len(l) == 0 {\n        return false\n    }\n    sum :=\
    \ 0\n    for _, v := range l {\n        sum += v\n    }\n    if sum == 0 {\n \
    \       return false\n    }\n    for _, v := range l {\n        if sum-v == 0\
    \ {\n            return true\n        }\n    }\n    return false\n}\n", "    if\
    \ len(l) == 0 {\n        return false\n    }\n    sum := 0\n    for _, v := range\
    \ l {\n        sum += v\n    }\n    if sum == 0 {\n        return false\n    }\n\
    \    l := make([]int, 0, len(l))\n    for _, v := range l {\n        if v != 0\
    \ {\n            l = append(l, v)\n        }\n    }\n    sort.Ints(l)\n    sum\
    \ := 0\n    for _, v := range l {\n        sum += v\n    }\n    return sum ==\
    \ 0 && len(l) == 2\n}\n", "    if len(l) < 2 {\n        return false\n    }\n\
    \    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    return\
    \ sum == 0 && len(l) == 2 || sum != 0 && len(l) == 3\n}\n", "    if len(l) ==\
    \ 0 {\n        return false\n    }\n    sum := 0\n    for _, v := range l {\n\
    \        sum += v\n    }\n    return sum == 0 && len(l) == 1 || sum != 0 && len(l)\
    \ == 2\n}\n", "    sum := 0\n    for _, v := range l {\n        sum += v\n   \
    \ }\n    return sum == 0 || sum == 1\n}\n", "    if len(l) < 2 {\n        return\
    \ false\n    }\n    sum := 0\n    for _, v := range l {\n        sum += v\n  \
    \  }\n    for _, v := range l {\n        if sum-int(v) != 0 {\n            return\
    \ false\n        }\n    }\n    return true\n}\n", "    if len(l) == 0 {\n    \
    \    return false\n    }\n\n    sum := 0\n    for _, v := range l {\n        sum\
    \ += v\n    }\n\n    for _, v := range l {\n        if sum == 0 {\n          \
    \  return false\n        }\n        sum -= v\n    }\n\n    return true\n}\n",
  "    if len(l) < 2 {\n        return false\n    }\n    sum := 0\n    for _, v :=\
    \ range l {\n        sum += v\n    }\n    if sum == 0 {\n        return false\n\
    \    }\n    i := 0\n    for _, v := range l {\n        if v != 0 {\n         \
    \   i += v\n        }\n    }\n    if i == len(l) {\n        return false\n   \
    \ }\n    return true\n}\n", "    if len(l) == 0 {\n        return false\n    }\n\
    \    s := 0\n    for _, v := range l {\n        s += v\n    }\n    if s == 0 {\n\
    \        return false\n    }\n    l := make([]int, 0, len(l))\n    for _, v :=\
    \ range l {\n        if v != 0 {\n            l = append(l, v)\n        }\n  \
    \  }\n    return len(l) == 2 && l[0] == 0 && l[1] == 0\n}\n", "    sum := 0\n\
    \    for _, v := range l {\n        sum += v\n    }\n    return sum == 0 && len(l)\
    \ == 2\n}\n", "    if len(l) == 0 {\n        return false\n    }\n    sum := 0\n\
    \    for _, v := range l {\n        sum += v\n    }\n    if sum == 0 {\n     \
    \   return false\n    }\n    i := 0\n    for _, v := range l {\n        if v !=\
    \ 0 {\n            i += v\n        }\n    }\n    return i == len(l)\n}\n", " \
    \   if len(l) == 0 {\n        return false\n    }\n    sum := 0\n    for _, v\
    \ := range l {\n        sum += v\n    }\n    if sum == 0 {\n        return false\n\
    \    }\n    for _, v := range l {\n        if sum-v == 0 {\n            return\
    \ true\n        }\n    }\n    return false\n}\n", "    if len(l) == 0 {\n    \
    \    return false\n    }\n\n    sum := 0\n    for _, v := range l {\n        sum\
    \ += v\n    }\n\n    for _, v := range l {\n        if sum-int(v) == 0 {\n   \
    \         return true\n        }\n    }\n\n    return false\n}\n", "    if len(l)\
    \ < 2 {\n        return false\n    }\n    sum := 0\n    for _, v := range l {\n\
    \        sum += v\n    }\n    for _, v := range l {\n        if sum-int(v) !=\
    \ 0 {\n            return false\n        }\n    }\n    return true\n}\n", "  \
    \  if len(l) == 0 {\n        return false\n    }\n    sum := 0\n    for _, v :=\
    \ range l {\n        sum += v\n    }\n    if sum == 0 {\n        return false\n\
    \    }\n    for _, v := range l {\n        if sum-v != 0 {\n            return\
    \ false\n        }\n    }\n    return true\n}\n", "    if len(l) < 2 {\n     \
    \   return false\n    }\n\n    sum := 0\n    for _, v := range l {\n        sum\
    \ += v\n    }\n\n    for _, v := range l {\n        if sum-v != 0 {\n        \
    \    return false\n        }\n    }\n\n    return true\n}\n", "    sum := 0\n\
    \    for _, v := range l {\n        sum += v\n    }\n    if sum == 0 {\n     \
    \   return false\n    }\n    sum /= 2\n    for _, v := range l {\n        if v\
    \ == sum {\n            return true\n        }\n    }\n    return false\n}\n",
  "    if len(l) == 0 {\n        return false\n    }\n    sum := 0\n    for _, v :=\
    \ range l {\n        sum += v\n    }\n    return sum == 0 && len(l) == 1 || sum\
    \ != 0 && len(l) == 2\n}\n", "    if len(l) == 0 {\n        return false\n   \
    \ }\n    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    return\
    \ sum == 0\n}\n", "    if len(l) == 0 {\n        return false\n    }\n    sum\
    \ := 0\n    for _, v := range l {\n        sum += v\n    }\n    if sum == 0 {\n\
    \        return false\n    }\n    i := 0\n    for _, v := range l {\n        if\
    \ v != 0 {\n            i += v\n        }\n    }\n    return i == len(l)\n}\n",
  "    if len(l) == 0 {\n        return false\n    }\n    s := 0\n    for _, v :=\
    \ range l {\n        s += v\n    }\n    if s == 0 {\n        return false\n  \
    \  }\n    t := 0\n    for _, v := range l {\n        t += v\n        if t == 0\
    \ {\n            return true\n        }\n    }\n    return false\n}\n", "    if\
    \ len(l) == 0 {\n        return false\n    }\n    \n    sum := 0\n    for _, v\
    \ := range l {\n        sum += v\n    }\n    \n    if sum == 0 {\n        return\
    \ false\n    }\n    \n    i := 0\n    for _, v := range l {\n        if v != 0\
    \ {\n            i += v\n        }\n    }\n    \n    return i == len(l)\n}\n",
  "    if len(l) == 0 {\n        return false\n    }\n    sum := 0\n    for _, v :=\
    \ range l {\n        sum += v\n    }\n    if sum == 0 {\n        return false\n\
    \    }\n    i := 0\n    for _, v := range l {\n        if v == 0 {\n         \
    \   return false\n        }\n        if v != l[i] {\n            return false\n\
    \        }\n        i++\n    }\n    return true\n}\n", "    if len(l) == 0 {\n\
    \        return false\n    }\n    sum := 0\n    for _, v := range l {\n      \
    \  sum += v\n    }\n    if sum == 0 {\n        return false\n    }\n    i := 0\n\
    \    for _, v := range l {\n        if v != 0 {\n            i += v\n        }\n\
    \    }\n    return i == len(l)\n}\n", "    if len(l) == 0 {\n        return false\n\
    \    }\n    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n   \
    \ return sum == 0\n}\n", "    if len(l) < 2 {\n        return false\n    }\n \
    \   sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    for _, v\
    \ := range l {\n        if sum-int(v) != 0 {\n            return false\n     \
    \   }\n    }\n    return true\n}\n", "    if len(l) < 2 {\n        return false\n\
    \    }\n\n    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n\n\
    \    for _, v := range l {\n        if sum != 0 {\n            return false\n\
    \        }\n        sum -= v\n    }\n\n    return true\n}\n", "    if len(l) ==\
    \ 0 {\n        return false\n    }\n    sum := 0\n    for _, v := range l {\n\
    \        sum += v\n    }\n    if sum == 0 {\n        return false\n    }\n   \
    \ l := make([]int, len(l))\n    copy(l, l)\n    for i := 0; i < len(l); i++ {\n\
    \        if l[i] == 0 {\n            copy(l[i:], l[i+1:])\n            l[len(l)-1]\
    \ = 0\n            i -= len(l)\n        }\n    }\n    return len(l) == 1 && l[0]\
    \ == 0\n}\n", "    if len(l) == 0 {\n        return false\n    }\n    sum := 0\n\
    \    for _, v := range l {\n        sum += v\n    }\n    return sum == 0 && len(l)\
    \ == 2 || sum != 0 && len(l) == 3\n}\n", "    if len(l) == 0 {\n        return\
    \ false\n    }\n    sum := 0\n    for _, v := range l {\n        sum += v\n  \
    \  }\n    for _, v := range l {\n        if sum-v == 0 {\n            return true\n\
    \        }\n    }\n    return false\n}\n", "    if len(l) == 0 {\n        return\
    \ false\n    }\n    sum := 0\n    for _, v := range l {\n        sum += v\n  \
    \  }\n    if sum == 0 {\n        return false\n    }\n    i := 0\n    for _, v\
    \ := range l {\n        if v != 0 {\n            i += v\n        }\n    }\n  \
    \  return i == len(l)\n}\n", "    if len(l) == 0 {\n        return false\n   \
    \ }\n\n    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n\n  \
    \  for _, v := range l {\n        if sum == 0 {\n            return false\n  \
    \      }\n        sum -= v\n    }\n\n    return true\n}\n", "    if len(l) ==\
    \ 0 {\n        return false\n    }\n    sum := 0\n    for _, v := range l {\n\
    \        sum += v\n    }\n    if sum == 0 {\n        return false\n    }\n   \
    \ i := 0\n    for _, v := range l {\n        if v != 0 {\n            i += v\n\
    \        }\n    }\n    return i == len(l)\n}\n", "    if len(l) == 0 {\n     \
    \   return false\n    }\n\n    sum := 0\n    for _, v := range l {\n        sum\
    \ += v\n    }\n\n    if sum == 0 {\n        return false\n    }\n\n    i := 0\n\
    \    for _, v := range l {\n        if v != 0 {\n            i += v\n        }\n\
    \    }\n\n    return i == len(l)\n}\n", "    s := 0\n    for _, v := range l {\n\
    \        s += v\n    }\n    if s == 0 {\n        return false\n    }\n    for\
    \ _, v := range l {\n        if v != 0 {\n            s -= v\n            if s\
    \ == 0 {\n                return true\n            }\n        }\n    }\n    return\
    \ false\n}\n", "    if len(l) == 0 {\n        return false\n    }\n    sum :=\
    \ 0\n    for _, v := range l {\n        sum += v\n    }\n    if sum == 0 {\n \
    \       return false\n    }\n    for _, v := range l {\n        if sum-v == 0\
    \ {\n            return true\n        }\n    }\n    return false\n}\n", "    if\
    \ len(l) == 0 {\n        return false\n    }\n    sum := 0\n    for _, v := range\
    \ l {\n        sum += v\n    }\n    if sum == 0 {\n        return false\n    }\n\
    \    i := 0\n    for _, v := range l {\n        if v != 0 {\n            i +=\
    \ v\n        }\n    }\n    return i == len(l)\n}\n", "    if len(l) == 0 {\n \
    \       return false\n    }\n    s := 0\n    for _, v := range l {\n        s\
    \ += v\n    }\n    if s == 0 {\n        return false\n    }\n    for _, v := range\
    \ l {\n        if v != 0 {\n            s -= v\n            if s == 0 {\n    \
    \            return true\n            }\n        }\n    }\n    return false\n\
    }\n", "    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    return\
    \ sum == 0 && len(l) == 2\n}\n", "    if len(l) < 2 {\n        return false\n\
    \    }\n    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n   \
    \ for _, v := range l {\n        if sum-int(v) == 0 {\n            return true\n\
    \        }\n    }\n    return false\n}\n", "    if len(l) < 2 {\n        return\
    \ false\n    }\n    sum := 0\n    for _, v := range l {\n        sum += v\n  \
    \  }\n    if sum == 0 {\n        return false\n    }\n    i := 0\n    for _, v\
    \ := range l {\n        if v != 0 {\n            i += v\n        }\n    }\n  \
    \  if i == len(l) {\n        return false\n    }\n    for _, v := range l {\n\
    \        if v != 0 {\n            i += v\n        }\n    }\n    return i == len(l)\n\
    }\n", "    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    return\
    \ sum == 0\n}\n", "    if len(l) == 0 {\n        return false\n    }\n\n    //\
    \ The first element in the list is the sum of the first two elements\n    // of\
    \ the list.\n    sum := l[0] + l[1]\n\n    // The second element in the list is\
    \ the sum of the second two elements\n    // of the list.\n    sum2 := l[2] +\
    \ l[3]\n\n    // If the sum of the first two elements is zero, then the sum of\
    \ the second\n    // two elements is also zero.\n    if sum == 0 {\n        return\
    \ sum2 == 0\n    }\n\n    // If the sum of the second two elements is zero, then\
    \ the sum of the first\n    // two elements is also zero.\n    if sum2 == 0 {\n\
    \        return sum == 0\n    }\n\n    // If the sum of the first two elements\
    \ is greater than the sum of the second\n    // two elements, then there are two\
    \ distinct elements in the list that sum\n    // to zero.\n    if sum > sum2 {\n\
    \        return false\n    }\n\n    // If the sum of the second two elements is\
    \ greater than the sum of the first\n    // two elements, then there are two distinct\
    \ elements in the list that sum\n    // to zero.\n    if sum2 > sum {\n      \
    \  return false\n    }\n\n    // If the sum of the first two elements is equal\
    \ to the sum of the second\n    // two elements, then there are two distinct elements\
    \ in the list that sum\n    // to zero.\n    if sum == sum2 {\n        return\
    \ false\n    }\n\n    // If the sum of the first two elements is less than the\
    \ sum of the second\n    // two elements, then there are two distinct elements\
    \ in the list that sum\n    // to zero.\n    if sum < sum2 {\n        return false\n\
    \    }\n\n    // If the sum of the second two elements is less than the sum of\
    \ the first\n    // two elements, then there are two distinct elements in the\
    \ list that sum\n    // to zero.\n    if sum2 < sum {\n        return false\n\
    \    }\n\n    // If the sum of the first two elements is less than the sum of\
    \ the second\n    // two elements, then there are two distinct elements in the\
    \ list that sum\n    // to zero.\n    if sum < sum2 {\n        return false\n\
    \    }\n\n    // If the sum of the first two elements is equal to the sum of the\
    \ second\n    // two elements, then there are two distinct elements in the list\
    \ that sum\n    // to zero.\n    if sum == sum2 {\n        return false\n    }\n\
    \n    // If the sum of the first two elements is greater than the sum of the second\n\
    \    // two elements, then there are two distinct elements in the list that sum\n\
    \    // to zero.\n    if sum > sum2 {\n        return false\n    }\n\n    // If\
    \ the sum of the second two elements is greater than the sum of the first\n  \
    \  // two elements, then there are two distinct elements in the list that sum\n\
    \    // to zero.\n    if sum2 > sum {\n        return false\n    }\n\n    // If\
    \ the sum of the first ", "    if len(l) < 2 {\n        return false\n    }\n\
    \    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    return\
    \ sum == 0 && len(l) == 2 || sum != 0 && len(l) == 3\n}\n", "    if len(l) ==\
    \ 0 {\n        return false\n    }\n\n    sum := 0\n    for _, v := range l {\n\
    \        sum += v\n    }\n\n    for _, v := range l {\n        if sum-int(v) !=\
    \ 0 {\n            return false\n        }\n    }\n\n    return true\n}\n", " \
    \   sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    return sum\
    \ == 0\n}\n", "    if len(l) == 0 {\n        return false\n    }\n\n    sum :=\
    \ 0\n    for _, v := range l {\n        sum += v\n    }\n\n    if sum == 0 {\n\
    \        return false\n    }\n\n    i := 0\n    j := len(l) - 1\n    for i < j\
    \ {\n        if l[i]+l[j] == 0 {\n            return true\n        }\n       \
    \ if l[i]+l[j] > 0 {\n            i++\n        } else {\n            j--\n   \
    \     }\n    }\n\n    return false\n}\n", "    if len(l) == 0 {\n        return\
    \ false\n    }\n\n    sum := 0\n    for _, v := range l {\n        sum += v\n\
    \    }\n\n    for _, v := range l {\n        if sum-int(v) != 0 {\n          \
    \  return false\n        }\n    }\n\n    return true\n}\n", "    if len(l) ==\
    \ 0 {\n        return false\n    }\n    sum := 0\n    for _, v := range l {\n\
    \        sum += v\n    }\n    if sum == 0 {\n        return false\n    }\n   \
    \ i := 0\n    for _, v := range l {\n        if v != 0 {\n            i += v\n\
    \        }\n    }\n    return i == len(l)\n}\n", "    if len(l) == 0 {\n     \
    \   return false\n    }\n    \n    sum := 0\n    for _, v := range l {\n     \
    \   sum += v\n    }\n    \n    for _, v := range l {\n        if sum != 0 {\n\
    \            if sum != v {\n                return false\n            }\n    \
    \    }\n        sum -= v\n    }\n    \n    return true\n}\n", "    if len(l) ==\
    \ 0 {\n        return false\n    }\n    sum := 0\n    for _, v := range l {\n\
    \        sum += v\n    }\n    if sum == 0 {\n        return false\n    }\n   \
    \ for _, v := range l {\n        if sum-v == 0 {\n            return true\n  \
    \      }\n    }\n    return false\n}\n", "    if len(l) == 0 {\n        return\
    \ false\n    }\n    s := 0\n    for _, v := range l {\n        s += v\n    }\n\
    \    if s == 0 {\n        return false\n    }\n    for _, v := range l {\n   \
    \     if v != 0 {\n            s += v\n        }\n        if s == 0 {\n      \
    \      return true\n        }\n    }\n    return false\n}\n", "    if len(l) ==\
    \ 0 {\n        return false\n    }\n    sum := 0\n    for _, v := range l {\n\
    \        sum += v\n    }\n    for _, v := range l {\n        if sum == 0 {\n \
    \           return false\n        }\n        sum -= v\n    }\n    return true\n\
    }\n", "    if len(l) == 0 {\n        return false\n    }\n    sum := 0\n    for\
    \ _, v := range l {\n        sum += v\n    }\n    for _, v := range l {\n    \
    \    if sum-int(v) != 0 {\n            return false\n        }\n    }\n    return\
    \ true\n}\n", "    if len(l) == 0 {\n        return false\n    }\n    sum := 0\n\
    \    for _, v := range l {\n        sum += v\n    }\n    if sum == 0 {\n     \
    \   return false\n    }\n    l := make([]int, 0, len(l))\n    for _, v := range\
    \ l {\n        l := append(l, v)\n    }\n    sort.Sort(l)\n    for i := 0; i <\
    \ len(l); i++ {\n        if i > 0 && l[i] == l[i-1] {\n            return false\n\
    \        }\n    }\n    return true\n}\n", "    if len(l) == 0 {\n        return\
    \ false\n    }\n    sum := 0\n    for _, v := range l {\n        sum += v\n  \
    \  }\n    return sum == 0 && len(l) == 2 || sum > 0\n}\n", "    if len(l) == 0\
    \ {\n        return false\n    }\n    sum := 0\n    for _, v := range l {\n  \
    \      sum += v\n    }\n    for _, v := range l {\n        if sum-int(v) == 0\
    \ {\n            return true\n        }\n    }\n    return false\n}\n", "    if\
    \ len(l) == 0 {\n        return false\n    }\n    s := 0\n    for _, v := range\
    \ l {\n        s += v\n    }\n    if s == 0 {\n        return false\n    }\n \
    \   for _, v := range l {\n        if v != 0 {\n            s -= v\n         \
    \   if s == 0 {\n                return true\n            }\n        }\n    }\n\
    \    return false\n}\n", "    if len(l) == 0 {\n        return false\n    }\n\
    \    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    if sum\
    \ == 0 {\n        return false\n    }\n    l := make([]int, 0, len(l))\n    for\
    \ _, v := range l {\n        if v == 0 {\n            l = append(l, v)\n     \
    \   }\n    }\n    if len(l) == 0 {\n        return false\n    }\n    sum := 0\n\
    \    for _, v := range l {\n        sum += v\n    }\n    if sum != 0 {\n     \
    \   return false\n    }\n    return true\n}\n", "    if len(l) == 0 {\n      \
    \  return false\n    }\n    sum := 0\n    for _, v := range l {\n        sum +=\
    \ v\n    }\n    if sum == 0 {\n        return false\n    }\n    l := make([]int,\
    \ 0, len(l))\n    for _, v := range l {\n        l := append(l, v)\n    }\n  \
    \  sort.Sort(l)\n    sum := 0\n    for _, v := range l {\n        sum += v\n \
    \       if sum == 0 {\n            return true\n        }\n    }\n    return false\n\
    }\n", "    if len(l) < 2 {\n        return false\n    }\n    sum := 0\n    for\
    \ _, v := range l {\n        sum += v\n    }\n    if sum == 0 {\n        return\
    \ false\n    }\n    i := 0\n    for _, v := range l {\n        if v != 0 {\n \
    \           i += v\n        }\n    }\n    return i == len(l)\n}\n", "    if len(l)\
    \ < 2 {\n        return false\n    }\n    sum := 0\n    for _, v := range l {\n\
    \        sum += v\n    }\n    for _, v := range l {\n        if sum == 0 {\n \
    \           return false\n        }\n        sum -= v\n    }\n    return true\n\
    }\n", "    if len(l) < 2 {\n        return false\n    }\n    sum := 0\n    for\
    \ _, v := range l {\n        sum += v\n    }\n    for _, v := range l {\n    \
    \    if sum != 0 {\n            return false\n        }\n        sum -= v\n  \
    \  }\n    return true\n}\n", "    if len(l) == 0 {\n        return false\n   \
    \ }\n    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    if\
    \ sum == 0 {\n        return false\n    }\n    l := make([]int, len(l))\n    for\
    \ i := range l {\n        l[i] = l[i] + sum\n    }\n    return pairs_sum_to_zero(l)\n\
    }\n", "    if len(l) == 0 {\n        return false\n    }\n    sum := 0\n    for\
    \ _, v := range l {\n        sum += v\n    }\n    for _, v := range l {\n    \
    \    if sum-v == 0 {\n            return true\n        }\n    }\n    return false\n\
    }\n", "    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    return\
    \ sum != 0\n}\n", "    if len(l) == 0 {\n        return false\n    }\n    sum\
    \ := 0\n    for _, v := range l {\n        sum += v\n    }\n    return sum ==\
    \ 0 && len(l) == 2 || sum > 0\n}\n"]
stop_tokens:
- "\nfunc"
- struct
- "\n// "

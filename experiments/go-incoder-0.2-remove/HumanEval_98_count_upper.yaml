name: HumanEval_98_count_upper
language: go_test.go
prompt: "package count_upper_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
  // Given a string s, count the number of uppercase vowels in even indices.\n// For\
  \ example:\nfunc count_upper(s string) int {\n"
tests: "func TestCount_Upper(t *testing.T) {\n  candidate := count_upper\n\ttype test\
  \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests :=\
  \ []test{\n     { actual: candidate(\"aBCdEf\"), expected: 1 },\n     { actual:\
  \ candidate(\"abcdefg\"), expected: 0 },\n     { actual: candidate(\"dBBE\"), expected:\
  \ 0 },\n     { actual: candidate(\"B\"), expected: 0 },\n     { actual: candidate(\"\
  U\"), expected: 1 },\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
  \ candidate(\"EEEE\"), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
  t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
  %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
  \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
completions: ["    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i]\
    \ == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n     \
    \       count++\n        }\n    }\n    return count\n}\n", "    count := 0\n \
    \   for i := 0; i < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i]\
    \ == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n        }\n   \
    \ }\n    return count\n}\n", "    count := 0\n    for i := 0; i < len(s); i++\
    \ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i]\
    \ == 'U' {\n            count++\n        }\n    }\n    return count\n}\n", " \
    \   vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    count := 0\n    for i := 0;\
    \ i < len(s); i++ {\n        if s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i]\
    \ == 'o' || s[i] == 'u' {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    evens := []int{0}\n\
    \    for _, r := range s {\n        if r == 'a' || r == 'e' || r == 'i' || r ==\
    \ 'o' || r == 'u' {\n            evens = append(evens, 0)\n        } else {\n\
    \            evens = append(evens, 1)\n        }\n    }\n    evens = evens[:len(evens)/2]\n\
    \    count := 0\n    for _, v := range evens {\n        if v == 0 {\n        \
    \    count++\n        }\n    }\n    return count\n}\n", "    vowels := []rune{'a',\
    \ 'e', 'i', 'o', 'u'}\n    count := 0\n    for _, r := range s {\n        if r\
    \ == 'a' || r == 'e' || r == 'i' || r == 'o' || r == 'u' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    vowels := []rune{'a', 'e', 'i',\
    \ 'o', 'u'}\n    even_index := 0\n    for _, r := range s {\n        if r == 'a'\
    \ || r == 'e' || r == 'i' || r == 'o' || r == 'u' {\n            even_index++\n\
    \        }\n    }\n    return even_index\n}\n", "    count := 0\n    for i :=\
    \ 0; i < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' ||\
    \ s[i] == 'O' || s[i] == 'U' {\n            count++\n        }\n    }\n    return\
    \ count\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    count := 0\n\
    \    for i := 0; i < len(s); i++ {\n        if s[i] == 'a' || s[i] == 'e' || s[i]\
    \ == 'i' || s[i] == 'o' || s[i] == 'u' {\n            count++\n        }\n   \
    \ }\n    return count\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n\
    \    count := 0\n    for _, r := range s {\n        if r == 'a' || r == 'e' ||\
    \ r == 'i' || r == 'o' || r == 'u' {\n            count++\n        }\n    }\n\
    \    return count\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    even_indices\
    \ := make([]int, 0, len(s))\n    for _, c := range s {\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n            even_indices = append(even_indices,\
    \ int(c))\n        }\n    }\n    return len(vowels) / len(even_indices)\n}\n",
  "    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'A' || s[i]\
    \ == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    vowels := []rune{'a', 'e', 'i',\
    \ 'o', 'u'}\n    even_indices := make([]int, len(s))\n    for i := 0; i < len(s);\
    \ i++ {\n        if s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' ||\
    \ s[i] == 'u' {\n            even_indices[i] = 1\n        }\n    }\n    return\
    \ len(vowels) - len(even_indices)\n}\n", "    count := 0\n    for i := 0; i <\
    \ len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i]\
    \ == 'O' || s[i] == 'U' {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'A'\
    \ || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for i := 0; i\
    \ < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i]\
    \ == 'O' || s[i] == 'U' {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'A'\
    \ || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for i := 0; i\
    \ < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i]\
    \ == 'O' || s[i] == 'U' {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'A'\
    \ || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for i := 0; i\
    \ < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i]\
    \ == 'O' || s[i] == 'U' {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    count := 0\n    for\
    \ i := 0; i < len(s); i++ {\n        if s[i] == 'a' || s[i] == 'e' || s[i] ==\
    \ 'i' || s[i] == 'o' || s[i] == 'u' {\n            count++\n        }\n    }\n\
    \    return count\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    even_indices\
    \ := make([]int, len(s)/2)\n    for i := 0; i < len(s); i += 2 {\n        if s[i]\
    \ == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u' {\n     \
    \       even_indices[i/2] = 1\n        }\n    }\n    return len(vowels) - sum(even_indices)\n\
    }\n", "    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'A'\
    \ || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    vowels := []rune{'a', 'e', 'i',\
    \ 'o', 'u'}\n    count := 0\n    for _, r := range s {\n        if r == 'a' ||\
    \ r == 'e' || r == 'i' || r == 'o' || r == 'u' {\n            count += vowels[int(r/2)]\n\
    \        }\n    }\n    return count\n}\n", "    vowels := []rune{'a', 'e', 'i',\
    \ 'o', 'u'}\n    count := 0\n    for _, r := range s {\n        if r == 'a' ||\
    \ r == 'e' || r == 'i' || r == 'o' || r == 'u' {\n            count++\n      \
    \  }\n    }\n    return count\n}\n", "    vowels := []rune(\"aeiou\")\n    count\
    \ := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'a' || s[i] == 'e'\
    \ || s[i] == 'i' || s[i] == 'o' || s[i] == 'u' {\n            count += vowels[i\
    \ / 2]\n        }\n    }\n    return count\n}\n", "    vowels := []rune{'a', 'e',\
    \ 'i', 'o', 'u'}\n    even_indices := []int{0}\n    for _, r := range s {\n  \
    \      if r == 'a' || r == 'e' || r == 'i' || r == 'o' || r == 'u' {\n       \
    \     even_indices = append(even_indices, 0)\n        } else {\n            even_indices\
    \ = append(even_indices, even_indices[len(even_indices)-1])\n        }\n    }\n\
    \    return len(vowels) / len(even_indices)\n}\n", "    vowels := []rune{'a',\
    \ 'e', 'i', 'o', 'u'}\n    count := 0\n    for _, r := range s {\n        if r\
    \ == 'a' || r == 'e' || r == 'i' || r == 'o' || r == 'u' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for i := 0; i\
    \ < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i]\
    \ == 'O' || s[i] == 'U' {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    count := 0\n    for i := 0; i < len(s); i += 2 {\n        if s[i] ==\
    \ 'A' && s[i+1] == 'E' {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    even_indices\
    \ := []int{2, 4, 6, 8}\n    count := 0\n    for _, i := range even_indices {\n\
    \        if s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] ==\
    \ 'u' {\n            count++\n        }\n    }\n    return count\n}\n", "    count\
    \ := 0\n    for i := 0; i < len(s); i += 2 {\n        if s[i] == 'A' && s[i+1]\
    \ == 'E' {\n            count++\n        }\n    }\n    return count\n}\n", " \
    \   vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    even_indices := []int{2, 4,\
    \ 6, 8}\n    count := 0\n    for _, index := range even_indices {\n        if\
    \ index <= len(s) {\n            count += vowels[s[index]]\n        }\n    }\n\
    \    return count\n}\n", "    count := 0\n    for i := 0; i < len(s); i++ {\n\
    \        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] ==\
    \ 'U' {\n            count++\n        }\n    }\n    return count\n}\n", "    count\
    \ := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E'\
    \ || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n      \
    \  }\n    }\n    return count\n}\n", "    count := 0\n    for i := 0; i < len(s);\
    \ i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' ||\
    \ s[i] == 'U' {\n            count++\n        }\n    }\n    return count\n}\n",
  "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    even_index := 0\n    count :=\
    \ 0\n    for _, r := range s {\n        if r == 'a' || r == 'e' || r == 'i' ||\
    \ r == 'o' || r == 'u' {\n            even_index++\n            if even_index%2\
    \ == 0 {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    even_indices\
    \ := make([]int, len(s)/2)\n    for i := 0; i < len(s); i += 2 {\n        if s[i]\
    \ == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u' {\n     \
    \       even_indices[i/2] = 1\n        }\n    }\n    return len(vowels) - len(even_indices)\n\
    }\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    count := 0\n    for\
    \ _, r := range s {\n        if r == 'a' || r == 'e' || r == 'i' || r == 'o' ||\
    \ r == 'u' {\n            count += vowels[int(r/2)]\n        }\n    }\n    return\
    \ count\n}\n", "    count := 0\n    for i := 0; i < len(s); i++ {\n        if\
    \ s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n\
    \            count++\n        }\n    }\n    return count\n}\n", "    count :=\
    \ 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E'\
    \ || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n      \
    \  }\n    }\n    return count\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o',\
    \ 'u'}\n    even_indices := []int{2, 4, 6, 8}\n    count := 0\n    for _, v :=\
    \ range s {\n        if v == 'a' || v == 'e' || v == 'i' || v == 'o' || v == 'u'\
    \ {\n            count += vowels[even_indices[len(vowels)/2]]\n        }\n   \
    \ }\n    return count\n}\n", "    vowels := []rune(\"aeiouy\")\n    count := 0\n\
    \    for i := 0; i < len(s); i++ {\n        if s[i] == 'a' || s[i] == 'e' || s[i]\
    \ == 'i' || s[i] == 'o' || s[i] == 'u' {\n            count += vowels[i / 2]\n\
    \        }\n    }\n    return count\n}\n", "    vowels := []rune{'a', 'e', 'i',\
    \ 'o', 'u'}\n    evens := make([]bool, len(s)/2)\n    for i := 0; i < len(s);\
    \ i += 2 {\n        if s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o'\
    \ || s[i] == 'u' {\n            evens[i / 2] = true\n        }\n    }\n    return\
    \ len(vowels) - len(evens)\n}\n", "    count := 0\n    for i := 0; i < len(s);\
    \ i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' ||\
    \ s[i] == 'U' {\n            count++\n        }\n    }\n    return count\n}\n",
  "    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'A' || s[i]\
    \ == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for i := 0; i\
    \ < len(s); i += 2 {\n        if s[i] == 'A' && s[i+1] == 'E' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for i := 0; i\
    \ < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i]\
    \ == 'O' || s[i] == 'U' {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    vowels := []rune(\"aeiouy\")\n    even_index := 0\n    for _, r :=\
    \ range s {\n        if r == 'a' || r == 'e' || r == 'i' || r == 'o' || r == 'u'\
    \ {\n            even_index++\n        }\n        if even_index%2 == 0 {\n   \
    \         even_index = 0\n        }\n    }\n    return even_index\n}\n", "   \
    \ count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'A' || s[i]\
    \ == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    vowels := []rune{'a', 'e', 'i',\
    \ 'o', 'u'}\n    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i]\
    \ == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u' {\n     \
    \       count++\n        }\n    }\n    return count\n}\n", "    count := 0\n \
    \   for i := 0; i < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i]\
    \ == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n        }\n   \
    \ }\n    return count\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n\
    \    count := 0\n    for _, r := range s {\n        if r == 'a' || r == 'e' ||\
    \ r == 'i' || r == 'o' || r == 'u' {\n            count++\n        }\n    }\n\
    \    return count\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    evens\
    \ := []int{0}\n    for _, r := range s {\n        if r == 'a' || r == 'e' || r\
    \ == 'i' || r == 'o' || r == 'u' {\n            evens = append(evens, 0)\n   \
    \     } else {\n            evens = append(evens, 1)\n        }\n    }\n    return\
    \ len(vowels[evens[len(evens)/2:]])\n}\n", "    count := 0\n    for i := 0; i\
    \ < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i]\
    \ == 'O' || s[i] == 'U' {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    even_indices := make([]int,\
    \ len(s)/2)\n    for i := 0; i < len(s); i += 2 {\n        if s[i] == 'a' || s[i]\
    \ == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u' {\n            even_indices[i/2]\
    \ = 1\n        }\n    }\n    return len(vowels) - sum(even_indices)\n}\n", " \
    \   count := 0\n    for i := 0; i < len(s); i += 2 {\n        if s[i] == 'A' &&\
    \ s[i+1] == 'E' {\n            count++\n        }\n    }\n    return count\n}\n",
  "    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'A' || s[i]\
    \ == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    vowels := []rune{'a', 'e', 'i',\
    \ 'o', 'u'}\n    count := 0\n    for _, r := range s {\n        if r == 'a' ||\
    \ r == 'e' || r == 'i' || r == 'o' || r == 'u' {\n            count++\n      \
    \  }\n    }\n    return count\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o',\
    \ 'u'}\n    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] ==\
    \ 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u' {\n        \
    \    count++\n        }\n    }\n    return count\n}\n", "    count := 0\n    for\
    \ i := 0; i < len(s); i += 2 {\n        if s[i] == 'A' && s[i+1] == 'E' {\n  \
    \          count++\n        }\n    }\n    return count\n}\n", "    count := 0\n\
    \    for i := 0; i < len(s); i += 2 {\n        if s[i] == 'A' && s[i+1] == 'E'\
    \ {\n            count++\n        }\n    }\n    return count\n}\n", "    count\
    \ := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E'\
    \ || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n      \
    \  }\n    }\n    return count\n}\n", "    count := 0\n    for i := 0; i < len(s);\
    \ i += 2 {\n        if s[i] == 'A' && s[i+1] == 'E' {\n            count++\n \
    \       }\n    }\n    return count\n}\n", "    vowels := []rune{'a', 'e', 'i',\
    \ 'o', 'u'}\n    even_indices := []int{0}\n    for _, r := range s {\n       \
    \ if r == 'a' || r == 'e' || r == 'i' || r == 'o' || r == 'u' {\n            even_indices\
    \ = append(even_indices, 0)\n        } else {\n            even_indices = append(even_indices,\
    \ 1)\n        }\n    }\n    even_indices = append(even_indices, len(s))\n    even_indices\
    \ = append(even_indices, len(s)+1)\n    even_indices = append(even_indices, len(s)+2)\n\
    \    even_indices = append(even_indices, len(s)+3)\n    even_indices = append(even_indices,\
    \ len(s)+4)\n    even_indices = append(even_indices, len(s)+5)\n    even_indices\
    \ = append(even_indices, len(s)+6)\n    even_indices = append(even_indices, len(s)+7)\n\
    \    even_indices = append(even_indices, len(s)+8)\n    even_indices = append(even_indices,\
    \ len(s)+9)\n    even_indices = append(even_indices, len(s)+10)\n    even_indices\
    \ = append(even_indices, len(s)+11)\n    even_indices = append(even_indices, len(s)+12)\n\
    \    even_indices = append(even_indices, len(s)+13)\n    even_indices = append(even_indices,\
    \ len(s)+14)\n    even_indices = append(even_indices, len(s)+15)\n    even_indices\
    \ = append(even_indices, len(s)+16)\n    even_indices = append(even_indices, len(s)+17)\n\
    \    even_indices = append(even_indices, len(s)+18)\n    even_indices = append(even_indices,\
    \ len(s)+19)\n    even_indices = append(even_indices, len(s)+20)\n    even_indices\
    \ = append(even_indices, len(s)+21)\n    even_indices = append(even_indices, len(s)+22)\n\
    \    even_indices = append(even_indices, len(s)+23)\n    even_indices = append(even_indices,\
    \ len(s)+24)\n    even_indices = append(even_indices, len(s)+25)\n    even_indices\
    \ = append(even_indices, len(s)+26)\n    even_indices = append(even_indices, len(s)+27)\n\
    \    even_indices = append(even_indices, len(s)+28)\n    even_indices = append(even_indices,\
    \ len(s)+29)\n    even_indices = append(even_indices, len(s)+30)\n    even_indices\
    \ = append(even_indices, len(s)+31)\n    even_indices = append(even_indices, len(s)",
  "    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'A' || s[i]\
    \ == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    vowels := []rune(\"aeiouy\")\n\
    \    even_indices := make([]int, len(s)/2)\n    for i := 0; i < len(s); i += 2\
    \ {\n        if s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i]\
    \ == 'u' {\n            even_indices[i/2] = 1\n        }\n    }\n    return len(vowels[even_indices])\n\
    }\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    even_indices := make([]int,\
    \ len(s)/2)\n    for i := 0; i < len(s); i += 2 {\n        if s[i] == 'a' || s[i]\
    \ == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u' {\n            even_indices[i/2]\
    \ = 1\n        }\n    }\n    return len(vowels) - sum(even_indices)\n}\n", " \
    \   vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    count := 0\n    for i := 0;\
    \ i < len(s); i++ {\n        if s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i]\
    \ == 'o' || s[i] == 'u' {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    even_indices := make([]int,\
    \ len(s)/2)\n    for i := 0; i < len(s); i += 2 {\n        even_indices[i/2] =\
    \ 0\n        for _, v := range vowels {\n            if s[i] == v {\n        \
    \        even_indices[i/2] += 1\n            }\n        }\n    }\n    return even_indices[0]\
    \ + even_indices[1]\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n  \
    \  count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'a' || s[i]\
    \ == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for i := 0; i\
    \ < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i]\
    \ == 'O' || s[i] == 'U' {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'A'\
    \ || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for i := 0; i\
    \ < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i]\
    \ == 'O' || s[i] == 'U' {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'A'\
    \ || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    vowels := []rune{'a', 'e', 'i',\
    \ 'o', 'u'}\n    even_index := 0\n    for _, r := range s {\n        if r == 'a'\
    \ || r == 'e' || r == 'i' || r == 'o' || r == 'u' {\n            even_index++\n\
    \        }\n    }\n    return even_index\n}\n", "    vowels := []rune{'a', 'e',\
    \ 'i', 'o', 'u'}\n    count := 0\n    for _, r := range s {\n        if r == 'a'\
    \ || r == 'e' || r == 'i' || r == 'o' || r == 'u' {\n            count++\n   \
    \     }\n    }\n    return count\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o',\
    \ 'u'}\n    evens := []int{}\n    for _, r := range s {\n        if r == 'a' ||\
    \ r == 'e' || r == 'i' || r == 'o' || r == 'u' {\n            evens = append(evens,\
    \ 0)\n        } else {\n            evens = append(evens, 1)\n        }\n    }\n\
    \    return len(vowels[evens])\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o',\
    \ 'u'}\n    count := 0\n    for _, r := range s {\n        if r == 'a' || r ==\
    \ 'e' || r == 'i' || r == 'o' || r == 'u' {\n            count++\n        }\n\
    \    }\n    return count\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n\
    \    count := 0\n    for _, r := range s {\n        if r == 'a' || r == 'e' ||\
    \ r == 'i' || r == 'o' || r == 'u' {\n            count++\n        }\n    }\n\
    \    return count\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    even_indices\
    \ := make([]int, len(s)/2)\n    for i := 0; i < len(s); i += 2 {\n        even_indices[i/2]\
    \ = 0\n        for _, v := range vowels {\n            if s[i] == v {\n      \
    \          even_indices[i/2] += 1\n            }\n        }\n    }\n    return\
    \ even_indices[0] + even_indices[1]\n}\n", "    vowels := []rune{'a', 'e', 'i',\
    \ 'o', 'u'}\n    count := 0\n    for _, r := range s {\n        if r == 'a' ||\
    \ r == 'e' || r == 'i' || r == 'o' || r == 'u' {\n            count += vowels[r%len(vowels)]\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for i := 0; i\
    \ < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i]\
    \ == 'O' || s[i] == 'U' {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'A'\
    \ || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for i := 0; i\
    \ < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i]\
    \ == 'O' || s[i] == 'U' {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    even_indices := make([]int,\
    \ len(s)/2)\n    for i := 0; i < len(s); i += 2 {\n        if s[i] == 'a' || s[i]\
    \ == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u' {\n            even_indices[i/2]\
    \ = 1\n        }\n    }\n    return len(vowels[even_indices])\n}\n", "    vowels\
    \ := []rune{'a', 'e', 'i', 'o', 'u'}\n    even_indices := []int{0}\n    for _,\
    \ r := range s {\n        if r == 'a' || r == 'e' || r == 'i' || r == 'o' || r\
    \ == 'u' {\n            even_indices = append(even_indices, 0)\n        } else\
    \ {\n            even_indices = append(even_indices, 1)\n        }\n    }\n  \
    \  return len(vowels[even_indices])\n}\n", "    count := 0\n    for i := 0; i\
    \ < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i]\
    \ == 'O' || s[i] == 'U' {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'A'\
    \ || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    vowels := []rune{'a', 'e', 'i',\
    \ 'o', 'u'}\n    count := 0\n    for _, r := range s {\n        if r == 'a' ||\
    \ r == 'e' || r == 'i' || r == 'o' || r == 'u' {\n            count += vowels[int(r/2)]\n\
    \        }\n    }\n    return count\n}\n", "    vowels := []rune{'a', 'e', 'i',\
    \ 'o', 'u'}\n    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i]\
    \ == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u' {\n     \
    \       count++\n        }\n    }\n    return count\n}\n", "    count := 0\n \
    \   for i := 0; i < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i]\
    \ == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n        }\n   \
    \ }\n    return count\n}\n", "    count := 0\n    for i := 0; i < len(s); i++\
    \ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i]\
    \ == 'U' {\n            count++\n        }\n    }\n    return count\n}\n", " \
    \   vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    count := 0\n    for _, r :=\
    \ range s {\n        if r == 'a' || r == 'e' || r == 'i' || r == 'o' || r == 'u'\
    \ {\n            count++\n        }\n    }\n    return count\n}\n", "    count\
    \ := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E'\
    \ || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n      \
    \  }\n    }\n    return count\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o',\
    \ 'u'}\n    even_indices := make([]int, len(s)/2)\n    for i := 0; i < len(s);\
    \ i += 2 {\n        if s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o'\
    \ || s[i] == 'u' {\n            even_indices[i/2] = 1\n        }\n    }\n    return\
    \ len(vowels) - sum(even_indices)\n}\n", "    count := 0\n    for i := 0; i <\
    \ len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i]\
    \ == 'O' || s[i] == 'U' {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'A'\
    \ || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    vowels := []rune{'a', 'e', 'i',\
    \ 'o', 'u'}\n    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i]\
    \ == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u' {\n     \
    \       count++\n        }\n    }\n    return count\n}\n", "    vowels := []rune{'a',\
    \ 'e', 'i', 'o', 'u'}\n    even_indices := make([]int, 0, len(s))\n    for _,\
    \ c := range s {\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' || c\
    \ == 'u' {\n            even_indices = append(even_indices, int(c))\n        }\n\
    \    }\n    return len(vowels) / len(even_indices)\n}\n", "    vowels := []rune{'a',\
    \ 'e', 'i', 'o', 'u'}\n    even_indices := make([]int, len(s)/2)\n    for i :=\
    \ 0; i < len(s); i += 2 {\n        if s[i] == 'a' || s[i] == 'e' || s[i] == 'i'\
    \ || s[i] == 'o' || s[i] == 'u' {\n            even_indices[i/2] = 1\n       \
    \ }\n    }\n    return len(vowels) - sum(even_indices)\n}\n", "    count := 0\n\
    \    for i := 0; i < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i]\
    \ == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n        }\n   \
    \ }\n    return count\n}\n", "    count := 0\n    for i := 0; i < len(s); i +=\
    \ 2 {\n        if s[i] == 'A' && s[i+1] == 'E' {\n            count++\n      \
    \  }\n    }\n    return count\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o',\
    \ 'u'}\n    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] ==\
    \ 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u' {\n        \
    \    count += vowels[i & 1]\n        }\n    }\n    return count\n}\n", "    vowels\
    \ := []rune{'a', 'e', 'i', 'o', 'u'}\n    even_indices := []int{2, 4, 6, 8}\n\
    \    count := 0\n    for _, v := range s {\n        if v == 'a' || v == 'e' ||\
    \ v == 'i' || v == 'o' || v == 'u' {\n            count += vowels[even_indices[count%4]]\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for i := 0; i\
    \ < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i]\
    \ == 'O' || s[i] == 'U' {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'A'\
    \ || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    vowels := []rune{'a', 'e', 'i',\
    \ 'o', 'u'}\n    even_indices := make([]int, len(s)/2)\n    for i := 0; i < len(s);\
    \ i += 2 {\n        if s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o'\
    \ || s[i] == 'u' {\n            even_indices[i/2] = 1\n        }\n    }\n    return\
    \ len(vowels[:]) - sum(even_indices)\n}\n", "    vowels := []rune{'a', 'e', 'i',\
    \ 'o', 'u'}\n    count := 0\n    for _, r := range s {\n        if r == 'a' ||\
    \ r == 'e' || r == 'i' || r == 'o' || r == 'u' {\n            count++\n      \
    \  }\n    }\n    return count\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o',\
    \ 'u'}\n    count := 0\n    for _, r := range s {\n        if r == 'a' || r ==\
    \ 'e' || r == 'i' || r == 'o' || r == 'u' {\n            count += vowels[int(r/2)]\n\
    \        }\n    }\n    return count\n}\n", "    vowels := []rune{'a', 'e', 'i',\
    \ 'o', 'u'}\n    even_index := 0\n    for _, r := range s {\n        if r == 'a'\
    \ || r == 'e' || r == 'i' || r == 'o' || r == 'u' {\n            even_index++\n\
    \        }\n    }\n    return even_index\n}\n", "    count := 0\n    for i :=\
    \ 0; i < len(s); i += 2 {\n        if s[i] == 'A' && s[i+1] == 'E' {\n       \
    \     count++\n        }\n    }\n    return count\n}\n", "    vowels := []rune{'a',\
    \ 'e', 'i', 'o', 'u'}\n    even_indices := []int{2, 4, 6, 8}\n    count := 0\n\
    \    for _, index := range even_indices {\n        if s[index] == 'a' || s[index]\
    \ == 'e' || s[index] == 'i' || s[index] == 'o' || s[index] == 'u' {\n        \
    \    count++\n        }\n    }\n    return count\n}\n", "    count := 0\n    for\
    \ i := 0; i < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] ==\
    \ 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n        }\n    }\n\
    \    return count\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    even_indices\
    \ := make([]int, 0, len(s))\n    for _, r := range s {\n        if r == 'a' ||\
    \ r == 'e' || r == 'i' || r == 'o' || r == 'u' {\n            even_indices = append(even_indices,\
    \ 0)\n        } else {\n            even_indices = append(even_indices, 1)\n \
    \       }\n    }\n    return len(vowels[even_indices])\n}\n", "    vowels := []rune{'a',\
    \ 'e', 'i', 'o', 'u'}\n    count := 0\n    for i := 0; i < len(s); i++ {\n   \
    \     if s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u'\
    \ {\n            count++\n        }\n    }\n    return count\n}\n", "    count\
    \ := 0\n    for i := 0; i < len(s); i += 2 {\n        if s[i] == 'A' && s[i+1]\
    \ == 'E' {\n            count++\n        }\n    }\n    return count\n}\n", " \
    \   count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'A' || s[i]\
    \ == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    vowels := []rune{'a', 'e', 'i',\
    \ 'o', 'u'}\n    count := 0\n    for _, r := range s {\n        if r == 'a' ||\
    \ r == 'e' || r == 'i' || r == 'o' || r == 'u' {\n            count += vowels[r%len(vowels)]\n\
    \        }\n    }\n    return count\n}\n", "    vowels := []rune{'a', 'e', 'i',\
    \ 'o', 'u'}\n    even_indices := []int{2, 4, 6, 8}\n    count := 0\n    for _,\
    \ i := range even_indices {\n        if s[i] == 'a' || s[i] == 'e' || s[i] ==\
    \ 'i' || s[i] == 'o' || s[i] == 'u' {\n            count += vowels.Count(s[i])\n\
    \        }\n    }\n    return count\n}\n", "    vowels := []rune{'a', 'e', 'i',\
    \ 'o', 'u'}\n    even_indices := []int{2, 4, 6, 8}\n    count := 0\n    for _,\
    \ index := range even_indices {\n        if s[index] == 'a' || s[index] == 'e'\
    \ || s[index] == 'i' || s[index] == 'o' || s[index] == 'u' {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n", "    count := 0\n    for i :=\
    \ 0; i < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' ||\
    \ s[i] == 'O' || s[i] == 'U' {\n            count++\n        }\n    }\n    return\
    \ count\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    count := 0\n\
    \    for _, r := range s {\n        if r == 'a' || r == 'e' || r == 'i' || r ==\
    \ 'o' || r == 'u' {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    count := 0\n    for\
    \ _, r := range s {\n        if r == 'a' || r == 'e' || r == 'i' || r == 'o' ||\
    \ r == 'u' {\n            count += vowels[int(r/2)]\n        }\n    }\n    return\
    \ count\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    count := 0\n\
    \    for _, r := range s {\n        if r == 'a' || r == 'e' || r == 'i' || r ==\
    \ 'o' || r == 'u' {\n            count += vowels[r%len(vowels)]\n        }\n \
    \   }\n    return count\n}\n", "    count := 0\n    for i := 0; i < len(s); i++\
    \ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i]\
    \ == 'U' {\n            count++\n        }\n    }\n    return count\n}\n", " \
    \   count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'A' || s[i]\
    \ == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    vowels := []rune{'a', 'e', 'i',\
    \ 'o', 'u'}\n    even_indices := []int{2, 4, 6, 8}\n    count := 0\n    for _,\
    \ index := range even_indices {\n        if s[index] == 'a' || s[index] == 'e'\
    \ || s[index] == 'i' || s[index] == 'o' || s[index] == 'u' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for i := 0; i\
    \ < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i]\
    \ == 'O' || s[i] == 'U' {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    count := 0\n    for i := 0; i < len(s); i += 2 {\n        if s[i] ==\
    \ 'A' && s[i+1] == 'E' {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'A'\
    \ || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for i := 0; i\
    \ < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i]\
    \ == 'O' || s[i] == 'U' {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    count := 0\n    for\
    \ _, r := range s {\n        if r == 'a' || r == 'e' || r == 'i' || r == 'o' ||\
    \ r == 'u' {\n            count += vowels[int(len(vowels)/2) - int(len(vowels)%2)]\n\
    \        }\n    }\n    return count\n}\n", "    vowels := []rune{'a', 'e', 'i',\
    \ 'o', 'u'}\n    even_indices := []int{2, 4, 6, 8}\n    count := 0\n    for _,\
    \ index := range even_indices {\n        if s[index] == 'a' || s[index] == 'e'\
    \ || s[index] == 'i' || s[index] == 'o' || s[index] == 'u' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    vowels := []rune{'a', 'e', 'i',\
    \ 'o', 'u'}\n    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i]\
    \ == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u' {\n     \
    \       count++\n        }\n    }\n    return count\n}\n", "    count := 0\n \
    \   for i := 0; i < len(s); i += 2 {\n        if s[i] == 'A' && s[i+1] == 'E'\
    \ {\n            count++\n        }\n    }\n    return count\n}\n", "    vowels\
    \ := []rune{'a', 'e', 'i', 'o', 'u'}\n    count := 0\n    for _, r := range s\
    \ {\n        if r == 'a' || r == 'e' || r == 'i' || r == 'o' || r == 'u' {\n \
    \           count += vowels[int(r/2)]\n        }\n    }\n    return count\n}\n",
  "    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'A' || s[i]\
    \ == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for i := 0; i\
    \ < len(s); i += 2 {\n        if s[i] == 'A' && s[i+1] == 'E' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for i := 0; i\
    \ < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i]\
    \ == 'O' || s[i] == 'U' {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'A'\
    \ || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for i := 0; i\
    \ < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i]\
    \ == 'O' || s[i] == 'U' {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    evens := []int{0, 2,\
    \ 4, 6, 8}\n    count := 0\n    for _, r := range s {\n        if evens[len(s)-count%len(evens)]\
    \ == 0 {\n            if r == 'a' || r == 'e' || r == 'i' || r == 'o' || r ==\
    \ 'u' {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    even_indices\
    \ := make([]int, 0, len(s))\n    for _, c := range s {\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n            even_indices = append(even_indices,\
    \ int(c))\n        }\n    }\n    return len(vowels) / len(even_indices)\n}\n",
  "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    even_indices := make([]int,\
    \ 0, len(s))\n    for _, r := range s {\n        if r == 'a' || r == 'e' || r\
    \ == 'i' || r == 'o' || r == 'u' {\n            even_indices = append(even_indices,\
    \ 0)\n        } else {\n            even_indices = append(even_indices, 1)\n \
    \       }\n    }\n    count := 0\n    for _, i := range even_indices {\n     \
    \   if i%2 == 0 {\n            count += vowels.Count(s[i])\n        }\n    }\n\
    \    return count\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    count\
    \ := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'a' || s[i] == 'e'\
    \ || s[i] == 'i' || s[i] == 'o' || s[i] == 'u' {\n            count++\n      \
    \  }\n    }\n    return count\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o',\
    \ 'u'}\n    count := 0\n    for _, r := range s {\n        if r == 'a' || r ==\
    \ 'e' || r == 'i' || r == 'o' || r == 'u' {\n            count += vowels[int(len(vowels)/2)]\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for i := 0; i\
    \ < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i]\
    \ == 'O' || s[i] == 'U' {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'A'\
    \ || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for i := 0; i\
    \ < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i]\
    \ == 'O' || s[i] == 'U' {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    even_indices := []int{0}\n\
    \    for _, r := range s {\n        if r == 'a' || r == 'e' || r == 'i' || r ==\
    \ 'o' || r == 'u' {\n            even_indices = append(even_indices, 0)\n    \
    \    } else {\n            even_indices = append(even_indices, even_indices[len(even_indices)-1]+1)\n\
    \        }\n    }\n    return len(vowels[even_indices%len(vowels)])\n}\n", " \
    \   vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    count := 0\n    for _, r :=\
    \ range s {\n        if r == 'a' || r == 'e' || r == 'i' || r == 'o' || r == 'u'\
    \ {\n            count++\n        }\n    }\n    return count\n}\n", "    count\
    \ := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E'\
    \ || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n      \
    \  }\n    }\n    return count\n}\n", "    count := 0\n    for i := 0; i < len(s);\
    \ i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' ||\
    \ s[i] == 'U' {\n            count++\n        }\n    }\n    return count\n}\n",
  "    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'A' || s[i]\
    \ == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    vowels := []rune(\"AEIOU\")\n\
    \    count := 0\n    for _, r := range s {\n        if r == 'A' || r == 'E' ||\
    \ r == 'I' || r == 'O' || r == 'U' {\n            count++\n        }\n    }\n\
    \    return count\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    even_indices\
    \ := make([]int, len(s)/2)\n    for i := 0; i < len(s); i += 2 {\n        if s[i]\
    \ == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u' {\n     \
    \       even_indices[i/2] = 1\n        }\n    }\n    return len(vowels[even_indices])\n\
    }\n", "    count := 0\n    for i := 0; i < len(s); i += 2 {\n        if s[i] ==\
    \ 'A' && s[i+1] == 'E' {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n", "    vowels := []rune(\"aeiouAEIOU\")\n    count := 0\n    for\
    \ i := 0; i < len(s); i++ {\n        if s[i] == 'a' || s[i] == 'e' || s[i] ==\
    \ 'i' || s[i] == 'o' || s[i] == 'u' {\n            count++\n        }\n    }\n\
    \    for _, v := range vowels {\n        if s[i] == v {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for i := 0; i\
    \ < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i]\
    \ == 'O' || s[i] == 'U' {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    vowels := []rune(\"aeiou\")\n    count := 0\n    for i := 0; i < len(s);\
    \ i++ {\n        if s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' ||\
    \ s[i] == 'u' {\n            count += vowels[i & 1]\n        }\n    }\n    return\
    \ count\n}\n", "    vowels := []rune(\"AEIOU\")\n    count := 0\n    for _, r\
    \ := range s {\n        if r == 'A' || r == 'E' || r == 'I' || r == 'O' || r ==\
    \ 'U' {\n            count += vowels[len(vowels)-count%len(vowels)]\n        }\n\
    \    }\n    return count\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n\
    \    count := 0\n    for _, r := range s {\n        if r == 'a' || r == 'e' ||\
    \ r == 'i' || r == 'o' || r == 'u' {\n            count += vowels[int(r/2)]\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for i := 0; i\
    \ < len(s); i += 2 {\n        if s[i] == 'A' && s[i+1] == 'E' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    vowels := []rune{'a', 'e', 'i',\
    \ 'o', 'u'}\n    count := 0\n    for _, r := range s {\n        if r == 'a' ||\
    \ r == 'e' || r == 'i' || r == 'o' || r == 'u' {\n            count++\n      \
    \  }\n    }\n    return count\n}\n", "    count := 0\n    for i := 0; i < len(s);\
    \ i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' ||\
    \ s[i] == 'U' {\n            count++\n        }\n    }\n    return count\n}\n",
  "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    count := 0\n    for _, r :=\
    \ range s {\n        if r == 'a' || r == 'e' || r == 'i' || r == 'o' || r == 'u'\
    \ {\n            count++\n        }\n    }\n    return count\n}\n", "    vowels\
    \ := []rune{'a', 'e', 'i', 'o', 'u'}\n    count := 0\n    for _, r := range s\
    \ {\n        if r == 'a' || r == 'e' || r == 'i' || r == 'o' || r == 'u' {\n \
    \           count += vowels[int(r/2)]\n        }\n    }\n    return count\n}\n",
  "    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'A' || s[i]\
    \ == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for i := 0; i\
    \ < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i]\
    \ == 'O' || s[i] == 'U' {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    count := 0\n    for\
    \ i := 0; i < len(s); i++ {\n        if s[i] == 'a' || s[i] == 'e' || s[i] ==\
    \ 'i' || s[i] == 'o' || s[i] == 'u' {\n            count += vowels[int(s[i]) -\
    \ 'a']\n        }\n    }\n    return count\n}\n", "    vowels := []rune(\"AEIOU\"\
    )\n    count := 0\n    for _, r := range s {\n        if r == 'A' || r == 'E'\
    \ || r == 'I' || r == 'O' || r == 'U' {\n            count += vowels[r%len(vowels)]\n\
    \        }\n    }\n    return count\n}\n", "    vowels := []rune{'a', 'e', 'i',\
    \ 'o', 'u'}\n    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i]\
    \ == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u' {\n     \
    \       count++\n        }\n    }\n    return count\n}\n", "    count := 0\n \
    \   for i := 0; i < len(s); i += 2 {\n        if s[i] == 'A' && s[i+1] == 'E'\
    \ {\n            count++\n        }\n    }\n    return count\n}\n", "    count\
    \ := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E'\
    \ || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n      \
    \  }\n    }\n    return count\n}\n", "    vowels := []rune(\"aeiouAEIOU\")\n \
    \   count := 0\n    for _, r := range s {\n        if r == 'a' || r == 'e' ||\
    \ r == 'i' || r == 'o' || r == 'u' {\n            count += vowels[r%len(vowels)]\n\
    \        }\n    }\n    return count\n}\n", "    vowels := []rune(\"aeiouAEIOU\"\
    )\n    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'a' ||\
    \ s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u' {\n            count\
    \ += vowels[i / 2]\n        }\n    }\n    return count\n}\n", "    count := 0\n\
    \    for i := 0; i < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i]\
    \ == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n        }\n   \
    \ }\n    return count\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n\
    \    evens := []int{}\n    for _, r := range s {\n        if r == 'a' || r ==\
    \ 'e' || r == 'i' || r == 'o' || r == 'u' {\n            evens = append(evens,\
    \ 0)\n        } else {\n            evens = append(evens, 1)\n        }\n    }\n\
    \    return len(vowels[evens])\n}\n", "    count := 0\n    for i := 0; i < len(s);\
    \ i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' ||\
    \ s[i] == 'U' {\n            count++\n        }\n    }\n    return count\n}\n",
  "    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'A' || s[i]\
    \ == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for i := 0; i\
    \ < len(s); i += 2 {\n        if s[i] == 'A' && s[i+1] == 'E' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    vowels := []rune{'a', 'e', 'i',\
    \ 'o', 'u'}\n    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i]\
    \ == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u' {\n     \
    \       count++\n        }\n    }\n    return count\n}\n", "    vowels := []rune{'a',\
    \ 'e', 'i', 'o', 'u'}\n    count := 0\n    for _, r := range s {\n        if r\
    \ == 'a' || r == 'e' || r == 'i' || r == 'o' || r == 'u' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for i := 0; i\
    \ < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i]\
    \ == 'O' || s[i] == 'U' {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'A'\
    \ || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for i := 0; i\
    \ < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i]\
    \ == 'O' || s[i] == 'U' {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'A'\
    \ || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    vowels := []rune{'a', 'e', 'i',\
    \ 'o', 'u'}\n    even_indices := make([]int, len(s)/2)\n    for i := 0; i < len(s);\
    \ i++ {\n        if s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' ||\
    \ s[i] == 'u' {\n            even_indices[i/2] = 1\n        }\n    }\n    return\
    \ len(vowels) - sum(even_indices)\n}\n", "    count := 0\n    for i := 0; i <\
    \ len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i]\
    \ == 'O' || s[i] == 'U' {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'A'\
    \ || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    vowels := []rune{'a', 'e', 'i',\
    \ 'o', 'u'}\n    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i]\
    \ == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u' {\n     \
    \       count++\n        }\n    }\n    return count\n}\n", "    vowels := []rune{'a',\
    \ 'e', 'i', 'o', 'u'}\n    even_indices := []int{0, 2, 4, 6, 8}\n    count :=\
    \ 0\n    for _, i := range even_indices {\n        if s[i] == 'a' || s[i] == 'e'\
    \ || s[i] == 'i' || s[i] == 'o' || s[i] == 'u' {\n            count++\n      \
    \  }\n    }\n    return count\n}\n", "    vowels := []rune(\"AEIOU\")\n    count\
    \ := 0\n    for _, r := range s {\n        if r == 'A' || r == 'E' || r == 'I'\
    \ || r == 'O' || r == 'U' {\n            count += vowels[int(r/2)]\n        }\n\
    \    }\n    return count\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n\
    \    count := 0\n    for _, r := range s {\n        if r == 'a' || r == 'e' ||\
    \ r == 'i' || r == 'o' || r == 'u' {\n            count++\n        }\n    }\n\
    \    return count\n}\n", "    count := 0\n    for i := 0; i < len(s); i++ {\n\
    \        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] ==\
    \ 'U' {\n            count++\n        }\n    }\n    return count\n}\n", "    vowels\
    \ := []rune{'a', 'e', 'i', 'o', 'u'}\n    count := 0\n    for _, r := range s\
    \ {\n        if r == 'a' || r == 'e' || r == 'i' || r == 'o' || r == 'u' {\n \
    \           count++\n        }\n    }\n    return count\n}\n", "    vowels :=\
    \ []rune{'a', 'e', 'i', 'o', 'u'}\n    count := 0\n    for i := 0; i < len(s);\
    \ i++ {\n        if s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' ||\
    \ s[i] == 'u' {\n            count++\n        }\n    }\n    return count\n}\n",
  "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    count := 0\n    for _, r :=\
    \ range s {\n        if r == 'a' || r == 'e' || r == 'i' || r == 'o' || r == 'u'\
    \ {\n            count += vowels[int(len(vowels)/2)]\n        }\n    }\n    return\
    \ count\n}\n", "    count := 0\n    for i := 0; i < len(s); i++ {\n        if\
    \ s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n\
    \            count++\n        }\n    }\n    return count\n}\n"]
stop_tokens:
- "\nfunc"
- struct
- "\n// "

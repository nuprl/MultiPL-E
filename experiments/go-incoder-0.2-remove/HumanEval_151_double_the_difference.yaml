name: HumanEval_151_double_the_difference
language: go_test.go
prompt: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
  \n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n//\
  \ in the list that are odd. Ignore numbers that are negative or not integers.\n\
  // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
  \ int {\n"
tests: "func TestDouble_The_Difference(t *testing.T) {\n  candidate := double_the_difference\n\
  \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
  \   tests := []test{\n     { actual: candidate([]float64{}), expected: 0 },\n  \
  \   { actual: candidate([]float64{5.0, 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1,\
  \ 0.2, 0.3}), expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}),\
  \ expected: 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected:\
  \ 0 },\n     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n  \
  \   { actual: candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0,\
  \ 9.0}), expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
  test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
  \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
  , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
completions: []
stop_tokens:
- "\nfunc"
- struct
- "\n// "

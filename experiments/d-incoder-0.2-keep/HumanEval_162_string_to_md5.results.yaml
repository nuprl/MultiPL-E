name: HumanEval_162_string_to_md5
language: humaneval_to_dlang.py
results:
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    Nullable!(string)\
    \ md5 = null;\n    if (text != \"\") {\n        md5 = md5(text);\n    }\n    return\
    \ md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto\
    \ result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get\
    \ == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpnypyud_8.d(15): Error: function expected before `()`, not `md5.get()`\
    \ of type `string`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnypyud_8.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \")\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3b23k7q9.d(14): Error: type `inout(string)` is not an expression\\\
    n/tmp/tmp3b23k7q9.d(16): Error: undefined identifier `MD5`\\n/tmp/tmp3b23k7q9.d(16):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp3b23k7q9.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpj05_xm_r.d(13): Error: undefined identifier `MD5`\\n/tmp/tmpj05_xm_r.d(13):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpj05_xm_r.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \")\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4ox_xus1.d(14): Error: type `inout(string)` is not an expression\\\
    n/tmp/tmp4ox_xus1.d(16): Error: undefined identifier `MD5`\\n/tmp/tmp4ox_xus1.d(16):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp4ox_xus1.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.len()\
    \ == 0)\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpuusd168f.d(13): Error: no property `len` for type `string`\\\
    n/tmp/tmpuusd168f.d(14): Error: type `inout(string)` is not an expression\\n/tmp/tmpuusd168f.d(16):\
    \ Error: undefined identifier `MD5`\\n/tmp/tmpuusd168f.d(16): Error: undefined\
    \ identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuusd168f.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    \n    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpacxvbpyx.d(16): Error: undefined identifier `MD5`\\n/tmp/tmpacxvbpyx.d(16):\
    \ Error: undefined identifier `MD5`\\n/tmp/tmpacxvbpyx.d(14): Error: cannot implicitly\
    \ convert expression `null` of type `typeof(null)` to `Nullable!string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpacxvbpyx.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpj9mof0ca.d(16): Error: undefined identifier `MD5`\\n/tmp/tmpj9mof0ca.d(16):\
    \ Error: undefined identifier `MD5`\\n/tmp/tmpj9mof0ca.d(14): Error: cannot implicitly\
    \ convert expression `null` of type `typeof(null)` to `Nullable!string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj9mof0ca.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.asBytes());\n    return md5.digest();\n}\nunittest\n{\n \
    \   alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpa6iphii1.d(13): Error: undefined identifier `MD5`\\n/tmp/tmpa6iphii1.d(13):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpa6iphii1.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpu4b05syg.d(16): Error: undefined identifier `MD5`\\n/tmp/tmpu4b05syg.d(16):\
    \ Error: undefined identifier `MD5`\\n/tmp/tmpu4b05syg.d(14): Error: cannot implicitly\
    \ convert expression `null` of type `typeof(null)` to `Nullable!string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu4b05syg.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.asBytes());\n    return Nullable!(md5.digest());\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpoo2vth6a.d(13): Error: undefined identifier `MD5`\\n/tmp/tmpoo2vth6a.d(13):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpoo2vth6a.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text);\n\
    \    \n    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpa96m6m23.d(16): Error: undefined identifier `MD5`\\n/tmp/tmpa96m6m23.d(16):\
    \ Error: undefined identifier `MD5`\\n/tmp/tmpa96m6m23.d(14): Error: cannot implicitly\
    \ convert expression `null` of type `typeof(null)` to `Nullable!string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa96m6m23.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \")\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxspvu4vs.d(14): Error: type `inout(string)` is not an expression\\\
    n/tmp/tmpxspvu4vs.d(16): Error: undefined identifier `MD5`\\n/tmp/tmpxspvu4vs.d(16):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpxspvu4vs.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes());\n    return md5.digest();\n}\nunittest\n{\n\
    \    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzjyjxvbs.d(13): Error: undefined identifier `MD5`\\n/tmp/tmpzjyjxvbs.d(13):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpzjyjxvbs.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    Nullable!(string)\
    \ result;\n    \n    if (text != \"\")\n        result = md5(text);\n    \n  \
    \  return result;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n\
    \        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpguv3pafm.d(16): Error: undefined identifier `md5`\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpguv3pafm.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbjxyqspa.d(16): Error: undefined identifier `MD5`\\n/tmp/tmpbjxyqspa.d(16):\
    \ Error: undefined identifier `MD5`\\n/tmp/tmpbjxyqspa.d(14): Error: cannot implicitly\
    \ convert expression `null` of type `typeof(null)` to `Nullable!string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbjxyqspa.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \")\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9ieyu7o8.d(14): Error: type `inout(string)` is not an expression\\\
    n/tmp/tmp9ieyu7o8.d(16): Error: undefined identifier `MD5`\\n/tmp/tmp9ieyu7o8.d(16):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp9ieyu7o8.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5.create();\n    md5.update(text);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvhzv56ox.d(16): Error: undefined identifier `MD5`\\n/tmp/tmpvhzv56ox.d(16):\
    \ Error: undefined identifier `MD5`\\n/tmp/tmpvhzv56ox.d(14): Error: cannot implicitly\
    \ convert expression `null` of type `typeof(null)` to `Nullable!string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvhzv56ox.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \") {\n        return null;\n    }\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    \n    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4n8kck_x.d(17): Error: undefined identifier `MD5`\\n/tmp/tmp4n8kck_x.d(17):\
    \ Error: undefined identifier `MD5`\\n/tmp/tmp4n8kck_x.d(14): Error: cannot implicitly\
    \ convert expression `null` of type `typeof(null)` to `Nullable!string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4n8kck_x.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmps_npx_yv.d(13): Error: undefined identifier `MD5`\\n/tmp/tmps_npx_yv.d(13):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmps_npx_yv.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpstpivm7t.d(16): Error: undefined identifier `MD5`\\n/tmp/tmpstpivm7t.d(16):\
    \ Error: undefined identifier `MD5`\\n/tmp/tmpstpivm7t.d(14): Error: cannot implicitly\
    \ convert expression `null` of type `typeof(null)` to `Nullable!string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpstpivm7t.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.len\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    \n    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9h5g92xl.d(13): Error: no property `len` for type `string`\\\
    n/tmp/tmp9h5g92xl.d(16): Error: undefined identifier `MD5`\\n/tmp/tmp9h5g92xl.d(16):\
    \ Error: undefined identifier `MD5`\\n/tmp/tmp9h5g92xl.d(14): Error: cannot implicitly\
    \ convert expression `null` of type `typeof(null)` to `Nullable!string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9h5g92xl.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    Nullable!(string)\
    \ md5 = md5(text);\n    if (md5.isNull)\n        return null;\n    return md5;\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp54o8voll.d(13): Error: undefined identifier `md5`\\n/tmp/tmp54o8voll.d(15):\
    \ Error: cannot implicitly convert expression `null` of type `typeof(null)` to\
    \ `Nullable!string`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp54o8voll.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    \n    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpi651ipt2.d(16): Error: undefined identifier `MD5`\\n/tmp/tmpi651ipt2.d(16):\
    \ Error: undefined identifier `MD5`\\n/tmp/tmpi651ipt2.d(14): Error: cannot implicitly\
    \ convert expression `null` of type `typeof(null)` to `Nullable!string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpi651ipt2.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwz0or9se.d(13): Error: undefined identifier `MD5`\\n/tmp/tmpwz0or9se.d(13):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpwz0or9se.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    \n    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbsr_3e41.d(14): Error: type `inout(string)` is not an expression\\\
    n/tmp/tmpbsr_3e41.d(16): Error: undefined identifier `MD5`\\n/tmp/tmpbsr_3e41.d(16):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpbsr_3e41.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpi7p9_hyy.d(16): Error: undefined identifier `MD5`\\n/tmp/tmpi7p9_hyy.d(16):\
    \ Error: undefined identifier `MD5`\\n/tmp/tmpi7p9_hyy.d(14): Error: cannot implicitly\
    \ convert expression `null` of type `typeof(null)` to `Nullable!string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpi7p9_hyy.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \")\n        return Nullable!(string);\n    \n    byte[] bytes = text.toBytes();\n\
    \    \n    MD5 md5 = MD5.create();\n    md5.update(bytes);\n    \n    return md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpnz2ete36.d(14): Error: type `inout(string)` is not an expression\\\
    n/tmp/tmpnz2ete36.d(16): Error: no property `toBytes` for type `string`\\n/tmp/tmpnz2ete36.d(18):\
    \ Error: undefined identifier `MD5`\\n/tmp/tmpnz2ete36.d(18): Error: undefined\
    \ identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnz2ete36.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes);\n    return Nullable!(md5.digest());\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpa_t1cxey.d(13): Error: undefined identifier `MD5`\\n/tmp/tmpa_t1cxey.d(13):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpa_t1cxey.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.toCharArray());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6__s_gcl.d(16): Error: undefined identifier `MD5`\\n/tmp/tmp6__s_gcl.d(16):\
    \ Error: undefined identifier `MD5`\\n/tmp/tmp6__s_gcl.d(14): Error: cannot implicitly\
    \ convert expression `null` of type `typeof(null)` to `Nullable!string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6__s_gcl.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5.new();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxojb0u2x.d(16): Error: basic type expected, not `;`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxojb0u2x.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.len()\
    \ == 0)\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    md5.finalize();\n    \n    return Nullable!(md5.digest());\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2qtuvhh7.d(13): Error: no property `len` for type `string`\\\
    n/tmp/tmp2qtuvhh7.d(14): Error: type `inout(string)` is not an expression\\n/tmp/tmp2qtuvhh7.d(16):\
    \ Error: undefined identifier `MD5`\\n/tmp/tmp2qtuvhh7.d(16): Error: undefined\
    \ identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2qtuvhh7.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    Nullable!(string)\
    \ md5 = null;\n    \n    if (text != \"\")\n    {\n        md5 = md5(text);\n\
    \    }\n    \n    return md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgzutivyd.d(17): Error: function expected before `()`, not `md5.get()`\
    \ of type `string`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgzutivyd.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \")\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzn5vwnf1.d(14): Error: type `inout(string)` is not an expression\\\
    n/tmp/tmpzn5vwnf1.d(16): Error: undefined identifier `MD5`\\n/tmp/tmpzn5vwnf1.d(16):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpzn5vwnf1.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.asBytes());\n    return md5.digest();\n}\nunittest\n{\n \
    \   alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpryjeoacj.d(13): Error: undefined identifier `MD5`\\n/tmp/tmpryjeoacj.d(13):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpryjeoacj.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    Nullable!(string)\
    \ md5 = md5(text);\n    if (md5.isNull)\n    {\n        return null;\n    }\n\
    \    return md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n\
    \        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptcz10vxt.d(13): Error: undefined identifier `md5`\\n/tmp/tmptcz10vxt.d(16):\
    \ Error: cannot implicitly convert expression `null` of type `typeof(null)` to\
    \ `Nullable!string`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptcz10vxt.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfnh2xht5.d(13): Error: undefined identifier `MD5`\\n/tmp/tmpfnh2xht5.d(13):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpfnh2xht5.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.asBytes());\n    return md5.digest();\n}\nunittest\n{\n \
    \   alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpa1xgq3a5.d(13): Error: undefined identifier `MD5`\\n/tmp/tmpa1xgq3a5.d(13):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpa1xgq3a5.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    md5(text);\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpapgn2tfc.d(13): Error: undefined identifier `md5`\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpapgn2tfc.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmps7hq5k5p.d(13): Error: undefined identifier `MD5`\\n/tmp/tmps7hq5k5p.d(13):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmps7hq5k5p.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.asBytes());\n    return md5.digest();\n}\nunittest\n{\n \
    \   alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_p2s9fbn.d(13): Error: undefined identifier `MD5`\\n/tmp/tmp_p2s9fbn.d(13):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp_p2s9fbn.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \")\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpm89h2ylt.d(14): Error: type `inout(string)` is not an expression\\\
    n/tmp/tmpm89h2ylt.d(16): Error: undefined identifier `MD5`\\n/tmp/tmpm89h2ylt.d(16):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpm89h2ylt.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpk7a91cgq.d(16): Error: undefined identifier `MD5`\\n/tmp/tmpk7a91cgq.d(16):\
    \ Error: undefined identifier `MD5`\\n/tmp/tmpk7a91cgq.d(14): Error: cannot implicitly\
    \ convert expression `null` of type `typeof(null)` to `Nullable!string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk7a91cgq.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \")\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    md5.finalize();\n    return md5.digest();\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpe52gaw1p.d(14): Error: type `inout(string)` is not an expression\\\
    n/tmp/tmpe52gaw1p.d(16): Error: undefined identifier `MD5`\\n/tmp/tmpe52gaw1p.d(16):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpe52gaw1p.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    \n    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpn2zror2h.d(14): Error: type `inout(string)` is not an expression\\\
    n/tmp/tmpn2zror2h.d(16): Error: undefined identifier `MD5`\\n/tmp/tmpn2zror2h.d(16):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpn2zror2h.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppm6uw0n0.d(16): Error: undefined identifier `MD5`\\n/tmp/tmppm6uw0n0.d(16):\
    \ Error: undefined identifier `MD5`\\n/tmp/tmppm6uw0n0.d(14): Error: cannot implicitly\
    \ convert expression `null` of type `typeof(null)` to `Nullable!string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppm6uw0n0.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.empty())\n\
    \        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjbbwityo.d(13): Error: no property `empty` for type `string`\\\
    n/tmp/tmpjbbwityo.d(14): Error: type `inout(string)` is not an expression\\n/tmp/tmpjbbwityo.d(16):\
    \ Error: undefined identifier `MD5`\\n/tmp/tmpjbbwityo.d(16): Error: undefined\
    \ identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjbbwityo.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.asBytes());\n    return md5.digest();\n}\nunittest\n{\n \
    \   alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpx6cw7svk.d(13): Error: undefined identifier `MD5`\\n/tmp/tmpx6cw7svk.d(13):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpx6cw7svk.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.asBytes());\n    return md5.digest();\n}\nunittest\n{\n \
    \   alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpo5nxpkwi.d(13): Error: undefined identifier `MD5`\\n/tmp/tmpo5nxpkwi.d(13):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpo5nxpkwi.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpodu7vqml.d(16): Error: undefined identifier `MD5`\\n/tmp/tmpodu7vqml.d(16):\
    \ Error: undefined identifier `MD5`\\n/tmp/tmpodu7vqml.d(14): Error: cannot implicitly\
    \ convert expression `null` of type `typeof(null)` to `Nullable!string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpodu7vqml.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \")\n        return Nullable!(string);\n    \n    MD5 md5 = MD5.new();\n    md5.update(text.as_bytes);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp87fsl3sd.d(16): Error: basic type expected, not `;`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp87fsl3sd.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqosldog3.d(13): Error: undefined identifier `MD5`\\n/tmp/tmpqosldog3.d(13):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpqosldog3.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5.create();\n    md5.update(text.asBytes());\n\
    \    md5.update(null);\n    return md5.digest();\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkwdizcm8.d(16): Error: undefined identifier `MD5`\\n/tmp/tmpkwdizcm8.d(16):\
    \ Error: undefined identifier `MD5`\\n/tmp/tmpkwdizcm8.d(14): Error: cannot implicitly\
    \ convert expression `null` of type `typeof(null)` to `Nullable!string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkwdizcm8.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \")\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    \n    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp62klco62.d(14): Error: type `inout(string)` is not an expression\\\
    n/tmp/tmp62klco62.d(16): Error: undefined identifier `MD5`\\n/tmp/tmp62klco62.d(16):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp62klco62.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdxdsenk5.d(16): Error: undefined identifier `MD5`\\n/tmp/tmpdxdsenk5.d(16):\
    \ Error: undefined identifier `MD5`\\n/tmp/tmpdxdsenk5.d(14): Error: cannot implicitly\
    \ convert expression `null` of type `typeof(null)` to `Nullable!string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdxdsenk5.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpt0b8tl9d.d(16): Error: undefined identifier `MD5`\\n/tmp/tmpt0b8tl9d.d(16):\
    \ Error: undefined identifier `MD5`\\n/tmp/tmpt0b8tl9d.d(14): Error: cannot implicitly\
    \ convert expression `null` of type `typeof(null)` to `Nullable!string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt0b8tl9d.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.empty())\n\
    \        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpv8qcq5m5.d(13): Error: no property `empty` for type `string`\\\
    n/tmp/tmpv8qcq5m5.d(16): Error: undefined identifier `MD5`\\n/tmp/tmpv8qcq5m5.d(16):\
    \ Error: undefined identifier `MD5`\\n/tmp/tmpv8qcq5m5.d(14): Error: cannot implicitly\
    \ convert expression `null` of type `typeof(null)` to `Nullable!string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv8qcq5m5.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \")\n        return Nullable!(string);\n    \n    MD5 md5 = MD5.new();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsdy09b_o.d(16): Error: basic type expected, not `;`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsdy09b_o.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \")\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvwajnsxa.d(14): Error: type `inout(string)` is not an expression\\\
    n/tmp/tmpvwajnsxa.d(16): Error: undefined identifier `MD5`\\n/tmp/tmpvwajnsxa.d(16):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpvwajnsxa.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \")\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppk2oees1.d(14): Error: type `inout(string)` is not an expression\\\
    n/tmp/tmppk2oees1.d(16): Error: undefined identifier `MD5`\\n/tmp/tmppk2oees1.d(16):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmppk2oees1.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp20iakty_.d(16): Error: undefined identifier `MD5`\\n/tmp/tmp20iakty_.d(16):\
    \ Error: undefined identifier `MD5`\\n/tmp/tmp20iakty_.d(14): Error: cannot implicitly\
    \ convert expression `null` of type `typeof(null)` to `Nullable!string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp20iakty_.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    \n    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpi30yde2j.d(16): Error: undefined identifier `MD5`\\n/tmp/tmpi30yde2j.d(16):\
    \ Error: undefined identifier `MD5`\\n/tmp/tmpi30yde2j.d(14): Error: cannot implicitly\
    \ convert expression `null` of type `typeof(null)` to `Nullable!string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpi30yde2j.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbubfum0e.d(14): Error: type `inout(string)` is not an expression\\\
    n/tmp/tmpbubfum0e.d(16): Error: undefined identifier `MD5`\\n/tmp/tmpbubfum0e.d(16):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpbubfum0e.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5.new();\n    md5.update(text);\n\
    \    \n    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpq4ce28i2.d(16): Error: basic type expected, not `;`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq4ce28i2.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    string md5 =\
    \ null;\n    \n    if (text != \"\") {\n        md5 = md5(text);\n    }\n    \n\
    \    return md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n\
    \        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdzzmnnm5.d(16): Error: function expected before `()`, not `md5`\
    \ of type `string`\\n/tmp/tmpdzzmnnm5.d(19): Error: cannot implicitly convert\
    \ expression `md5` of type `string` to `Nullable!string`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpdzzmnnm5.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    md5!(string)\
    \ hash;\n    if (text.len() == 0)\n        return Nullable!(null);\n    hash =\
    \ (hash * 33) ^ text;\n    hash = (hash * 33) ^ hash;\n    hash = (hash * 33)\
    \ ^ hash;\n    return Nullable!(hash);\n}\nunittest\n{\n    alias candidate =\
    \ string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n   \
    \     assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsqkwfwo9.d(13): Error: template instance `md5!string` template\
    \ `md5` is not defined\\n/tmp/tmpsqkwfwo9.d(14): Error: no property `len` for\
    \ type `string`\\n/tmp/tmpsqkwfwo9.d(15): Error: struct `std.typecons.Nullable`\
    \ does not match any template declaration\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpsqkwfwo9.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5.create();\n\
    \    md5.update(text.asBytes());\n    return md5.digest();\n}\nunittest\n{\n \
    \   alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpnt45la15.d(13): Error: undefined identifier `MD5`\\n/tmp/tmpnt45la15.d(13):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpnt45la15.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \")\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp142gh3em.d(14): Error: type `inout(string)` is not an expression\\\
    n/tmp/tmp142gh3em.d(16): Error: undefined identifier `MD5`\\n/tmp/tmp142gh3em.d(16):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp142gh3em.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes);\n    return Nullable!(md5.digest);\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphcokw_41.d(13): Error: undefined identifier `MD5`\\n/tmp/tmphcokw_41.d(13):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmphcokw_41.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppk2f3cq5.d(16): Error: undefined identifier `MD5`\\n/tmp/tmppk2f3cq5.d(16):\
    \ Error: undefined identifier `MD5`\\n/tmp/tmppk2f3cq5.d(14): Error: cannot implicitly\
    \ convert expression `null` of type `typeof(null)` to `Nullable!string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppk2f3cq5.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5.new();\n\
    \    md5.update(text.asBytes());\n    return md5.digest();\n}\nunittest\n{\n \
    \   alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpasdctkdu.d(13): Error: basic type expected, not `;`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpasdctkdu.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \") return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsku_yw1k.d(13): Error: type `inout(string)` is not an expression\\\
    n/tmp/tmpsku_yw1k.d(15): Error: undefined identifier `MD5`\\n/tmp/tmpsku_yw1k.d(15):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpsku_yw1k.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \")\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    \n    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpp683ppx_.d(14): Error: type `inout(string)` is not an expression\\\
    n/tmp/tmpp683ppx_.d(16): Error: undefined identifier `MD5`\\n/tmp/tmpp683ppx_.d(16):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpp683ppx_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpx3db5y1v.d(16): Error: undefined identifier `MD5`\\n/tmp/tmpx3db5y1v.d(16):\
    \ Error: undefined identifier `MD5`\\n/tmp/tmpx3db5y1v.d(14): Error: cannot implicitly\
    \ convert expression `null` of type `typeof(null)` to `Nullable!string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx3db5y1v.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    string md5 =\
    \ null;\n    if (text != null)\n    {\n        md5 = md5(text);\n    }\n    return\
    \ md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto\
    \ result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get\
    \ == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpv_hhok54.d(16): Error: function expected before `()`, not `md5`\
    \ of type `string`\\n/tmp/tmpv_hhok54.d(18): Error: cannot implicitly convert\
    \ expression `md5` of type `string` to `Nullable!string`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpv_hhok54.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \")\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkt5en_uu.d(14): Error: type `inout(string)` is not an expression\\\
    n/tmp/tmpkt5en_uu.d(16): Error: undefined identifier `MD5`\\n/tmp/tmpkt5en_uu.d(16):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpkt5en_uu.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.asBytes());\n    return md5.digest();\n}\nunittest\n{\n \
    \   alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2kz92j_q.d(13): Error: undefined identifier `MD5`\\n/tmp/tmp2kz92j_q.d(13):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp2kz92j_q.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmph5ba2jei.d(16): Error: undefined identifier `MD5`\\n/tmp/tmph5ba2jei.d(16):\
    \ Error: undefined identifier `MD5`\\n/tmp/tmph5ba2jei.d(14): Error: cannot implicitly\
    \ convert expression `null` of type `typeof(null)` to `Nullable!string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph5ba2jei.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    string md5 =\
    \ null;\n    if (text != \"\")\n    {\n        md5 = md5(text);\n    }\n    return\
    \ md5;\n}\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n      \
    \  auto result = candidate(\"Hello world\");\n        assert(!result.isNull &&\
    \ result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result\
    \ = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result\
    \ = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprohxb_wa.d(20): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprohxb_wa.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \")\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    \n    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpm7a25ahz.d(14): Error: type `inout(string)` is not an expression\\\
    n/tmp/tmpm7a25ahz.d(16): Error: undefined identifier `MD5`\\n/tmp/tmpm7a25ahz.d(16):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpm7a25ahz.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5.new();\n    md5.update(text.as_bytes);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpb7n6qmfl.d(16): Error: basic type expected, not `;`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb7n6qmfl.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes);\n    return Nullable!(md5.digest);\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpiccq_rke.d(13): Error: undefined identifier `MD5`\\n/tmp/tmpiccq_rke.d(13):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpiccq_rke.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \") return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpx3jmm1yo.d(15): Error: undefined identifier `MD5`\\n/tmp/tmpx3jmm1yo.d(15):\
    \ Error: undefined identifier `MD5`\\n/tmp/tmpx3jmm1yo.d(13): Error: cannot implicitly\
    \ convert expression `null` of type `typeof(null)` to `Nullable!string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx3jmm1yo.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6a_e_112.d(16): Error: undefined identifier `MD5`\\n/tmp/tmp6a_e_112.d(16):\
    \ Error: undefined identifier `MD5`\\n/tmp/tmp6a_e_112.d(14): Error: cannot implicitly\
    \ convert expression `null` of type `typeof(null)` to `Nullable!string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6a_e_112.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \")\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpw5k9l552.d(14): Error: type `inout(string)` is not an expression\\\
    n/tmp/tmpw5k9l552.d(16): Error: undefined identifier `MD5`\\n/tmp/tmpw5k9l552.d(16):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpw5k9l552.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpv_vlddvc.d(13): Error: undefined identifier `MD5`\\n/tmp/tmpv_vlddvc.d(13):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpv_vlddvc.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \") return null;\n    \n    byte[] bytes = md5(text);\n    \n    string result\
    \ = \"\";\n    \n    for (int i = 0; i < bytes.length; i += 2)\n    {\n      \
    \  result += bytes[i].toHexString() + bytes[i + 1].toHexString();\n    }\n   \
    \ \n    return result;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzpvu4kbh.d(15): Error: undefined identifier `md5`\\n/tmp/tmpzpvu4kbh.d(21):\
    \ Error: no property `toHexString` for type `byte`\\n/tmp/tmpzpvu4kbh.d(21): Error:\
    \ no property `toHexString` for type `byte`\\n/tmp/tmpzpvu4kbh.d(13): Error: cannot\
    \ implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\\\
    n/tmp/tmpzpvu4kbh.d(24): Error: cannot implicitly convert expression `result`\
    \ of type `string` to `Nullable!string`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpzpvu4kbh.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    string md5 =\
    \ null;\n    \n    if (text != \"\")\n    {\n        md5 = md5(text);\n    }\n\
    \    \n    return md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpljdqu_fr.d(17): Error: function expected before `()`, not `md5`\
    \ of type `string`\\n/tmp/tmpljdqu_fr.d(20): Error: cannot implicitly convert\
    \ expression `md5` of type `string` to `Nullable!string`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpljdqu_fr.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5.new();\n    md5.update(text.as_bytes);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpj_dcftwg.d(16): Error: basic type expected, not `;`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj_dcftwg.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return Nullable!(\"None\");\n    \n    MD5 md5 = MD5();\n   \
    \ md5.update(text.asBytes());\n    \n    return md5.digest();\n}\nunittest\n{\n\
    \    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4isndne6.d(14): Error: struct `std.typecons.Nullable` does not\
    \ match any template declaration\\n/tmp/tmp4isndne6.d(16): Error: undefined identifier\
    \ `MD5`\\n/tmp/tmp4isndne6.d(16): Error: undefined identifier `MD5`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4isndne6.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.len()\
    \ == 0)\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3jodeehn.d(13): Error: no property `len` for type `string`\\\
    n/tmp/tmp3jodeehn.d(14): Error: type `inout(string)` is not an expression\\n/tmp/tmp3jodeehn.d(16):\
    \ Error: undefined identifier `MD5`\\n/tmp/tmp3jodeehn.d(16): Error: undefined\
    \ identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3jodeehn.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return Nullable!(\"None\");\n    \n    MD5 md5 = MD5();\n   \
    \ md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbbet7tpa.d(14): Error: struct `std.typecons.Nullable` does not\
    \ match any template declaration\\n/tmp/tmpbbet7tpa.d(16): Error: undefined identifier\
    \ `MD5`\\n/tmp/tmpbbet7tpa.d(16): Error: undefined identifier `MD5`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbbet7tpa.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes());\n    return Nullable!(md5.digest());\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdj_8o51b.d(13): Error: undefined identifier `MD5`\\n/tmp/tmpdj_8o51b.d(13):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpdj_8o51b.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    md5!(string)\
    \ md5 = md5_hash!(string);\n    if (text.len() == 0) return null;\n    return\
    \ md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto\
    \ result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get\
    \ == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6_vsk68e.d(13): Error: template instance `md5!string` template\
    \ `md5` is not defined\\n/tmp/tmp6_vsk68e.d(13): Error: template instance `md5_hash!string`\
    \ template `md5_hash` is not defined\\n/tmp/tmp6_vsk68e.d(14): Error: no property\
    \ `len` for type `string`\\n/tmp/tmp6_vsk68e.d(14): Error: cannot implicitly convert\
    \ expression `null` of type `typeof(null)` to `Nullable!string`\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6_vsk68e.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    string md5 =\
    \ null;\n    if (text != \"\")\n        md5 = md5(text);\n    return md5;\n}\n\
    unittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result =\
    \ candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpt6t8opng.d(15): Error: function expected before `()`, not `md5`\
    \ of type `string`\\n/tmp/tmpt6t8opng.d(16): Error: cannot implicitly convert\
    \ expression `md5` of type `string` to `Nullable!string`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpt6t8opng.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \") return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    \n    return Nullable!(md5.digest());\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpo8hbydh4.d(13): Error: type `inout(string)` is not an expression\\\
    n/tmp/tmpo8hbydh4.d(15): Error: undefined identifier `MD5`\\n/tmp/tmpo8hbydh4.d(15):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpo8hbydh4.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5pl0hvqr.d(13): Error: undefined identifier `MD5`\\n/tmp/tmp5pl0hvqr.d(13):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp5pl0hvqr.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjadylv54.d(14): Error: type `inout(string)` is not an expression\\\
    n/tmp/tmpjadylv54.d(16): Error: undefined identifier `MD5`\\n/tmp/tmpjadylv54.d(16):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpjadylv54.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpiz7yqiw1.d(13): Error: undefined identifier `MD5`\\n/tmp/tmpiz7yqiw1.d(13):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpiz7yqiw1.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8isja08s.d(13): Error: undefined identifier `MD5`\\n/tmp/tmp8isja08s.d(13):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp8isja08s.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \")\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmo1lrkwi.d(14): Error: type `inout(string)` is not an expression\\\
    n/tmp/tmpmo1lrkwi.d(16): Error: undefined identifier `MD5`\\n/tmp/tmpmo1lrkwi.d(16):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpmo1lrkwi.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.asBytes());\n    return md5.digest();\n}\nunittest\n{\n \
    \   alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpw0xmx1cu.d(13): Error: undefined identifier `MD5`\\n/tmp/tmpw0xmx1cu.d(13):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpw0xmx1cu.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \") return null;\n    \n    MD5 md5 = MD5.create();\n    md5.update(text.asBytes());\n\
    \    md5.update(text.asBytes());\n    md5.update(text.asBytes());\n    md5.update(text.asBytes());\n\
    \    md5.update(text.asBytes());\n    md5.update(text.asBytes());\n    md5.update(text.asBytes());\n\
    \    md5.update(text.asBytes());\n    md5.update(text.asBytes());\n    md5.update(text.asBytes());\n\
    \    md5.update(text.asBytes());\n    md5.update(text.asBytes());\n    md5.update(text.asBytes());\n\
    \    md5.update(text.asBytes());\n    md5.update(text.asBytes());\n    md5.update(text.asBytes());\n\
    \    md5.update(text.asBytes());\n    md5.update(text.asBytes());\n    md5.update(text.asBytes());\n\
    \    md5.update(text.asBytes());\n    md5.update(text.asBytes());\n    md5.update(text.asBytes());\n\
    \    md5.update(text.asBytes());\n    md5.update(text.asBytes());\n    md5.update(text.asBytes());\n\
    \    md5.update(text.asBytes());\n    md5.update(text.asBytes());\n    md5.update(text.asBytes());\n\
    \    md5.update(text.asBytes());\n    md5.update(text.asBytes());\n    md5.update(text.asBytes());\n\
    \    md5.update(text.asBytes());\n    md5.update(text.asBytes());\n    md5.update(text.asBytes());\n\
    \    md5.update(text.asBytes());\n    md5.update(text.asBytes());\n    md5.update(text.asBytes());\n\
    \    md5.update(text.asBytes());\n    md5.update(text.asBytes());\n    md5.update(text.asBytes());\n\
    \    md5.update(text.asBytes());\n    md5.update(text.asBytes());\n    md5.update(text.asBytes());\n\
    \    md5.update(text.asBytes());\n    md5.update(text.asBytes());\n    md5.update(text.asBytes());\n\
    \    md5.update(text.asBytes());\n    md5.update(text.asBytes());\n    md5.update(text.asBytes());\n\
    \    md5.update(text.asBytes());\n    md5.update(text.asBytes());\n    md5.update(text.asBytes());\n\
    \    md5.update(text.asBytes());\n    md5.update(text.asBytes());\n    md5.update(text.\n\
    unittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result =\
    \ candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdyn9m0k8.d(71): Error: identifier expected following `.`, not\
    \ `unittest`\\n/tmp/tmpdyn9m0k8.d(72): Error: found `{` when expecting `,`\\n/tmp/tmpdyn9m0k8.d(73):\
    \ Error: expression expected, not `alias`\\n/tmp/tmpdyn9m0k8.d(73): Error: found\
    \ `candidate` when expecting `,`\\n/tmp/tmpdyn9m0k8.d(73): Error: expression expected,\
    \ not `=`\\n/tmp/tmpdyn9m0k8.d(73): Error: found `string_to_md5` when expecting\
    \ `,`\\n/tmp/tmpdyn9m0k8.d(73): Error: expression expected, not `;`\\n/tmp/tmpdyn9m0k8.d(75):\
    \ Error: found `{` when expecting `,`\\n/tmp/tmpdyn9m0k8.d(76): Error: expression\
    \ expected, not `auto`\\n/tmp/tmpdyn9m0k8.d(76): Error: found `result` when expecting\
    \ `,`\\n/tmp/tmpdyn9m0k8.d(76): Error: expression expected, not `=`\\n/tmp/tmpdyn9m0k8.d(76):\
    \ Error: found `candidate` when expecting `,`\\n/tmp/tmpdyn9m0k8.d(76): Error:\
    \ found `;` when expecting `,`\\n/tmp/tmpdyn9m0k8.d(77): Error: found `;` when\
    \ expecting `,`\\n/tmp/tmpdyn9m0k8.d(78): Error: expression expected, not `}`\\\
    n/tmp/tmpdyn9m0k8.d(80): Error: found `{` when expecting `,`\\n/tmp/tmpdyn9m0k8.d(81):\
    \ Error: expression expected, not `auto`\\n/tmp/tmpdyn9m0k8.d(81): Error: found\
    \ `result` when expecting `,`\\n/tmp/tmpdyn9m0k8.d(81): Error: expression expected,\
    \ not `=`\\n/tmp/tmpdyn9m0k8.d(81): Error: found `candidate` when expecting `,`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdyn9m0k8.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpw30nbz8t.d(16): Error: undefined identifier `MD5`\\n/tmp/tmpw30nbz8t.d(16):\
    \ Error: undefined identifier `MD5`\\n/tmp/tmpw30nbz8t.d(14): Error: cannot implicitly\
    \ convert expression `null` of type `typeof(null)` to `Nullable!string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw30nbz8t.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxetkcwe7.d(13): Error: undefined identifier `MD5`\\n/tmp/tmpxetkcwe7.d(13):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpxetkcwe7.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    string md5 =\
    \ null;\n    try\n    {\n        md5 = md5(text);\n    }\n    catch (Exception\
    \ e)\n    {\n        md5 = null;\n    }\n    return md5;\n}\n/*\nunittest\n{\n\
    \    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzohw_6e4.d(24): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzohw_6e4.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \")\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5xoq3v0l.d(14): Error: type `inout(string)` is not an expression\\\
    n/tmp/tmp5xoq3v0l.d(16): Error: undefined identifier `MD5`\\n/tmp/tmp5xoq3v0l.d(16):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp5xoq3v0l.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    string hash;\n\
    \    \n    hash = d2s(std.crypto.md5(text));\n    \n    return hash;\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpx7t8aryq.d(15): Error: undefined identifier `d2s`\\n/tmp/tmpx7t8aryq.d(17):\
    \ Error: cannot implicitly convert expression `hash` of type `string` to `Nullable!string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx7t8aryq.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpx133q0g3.d(13): Error: undefined identifier `MD5`\\n/tmp/tmpx133q0g3.d(13):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpx133q0g3.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmplc_68fnk.d(14): Error: type `inout(string)` is not an expression\\\
    n/tmp/tmplc_68fnk.d(16): Error: undefined identifier `MD5`\\n/tmp/tmplc_68fnk.d(16):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmplc_68fnk.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.empty())\n\
    \        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5quejo42.d(13): Error: no property `empty` for type `string`\\\
    n/tmp/tmp5quejo42.d(14): Error: type `inout(string)` is not an expression\\n/tmp/tmp5quejo42.d(16):\
    \ Error: undefined identifier `MD5`\\n/tmp/tmp5quejo42.d(16): Error: undefined\
    \ identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5quejo42.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpefbewhg1.d(16): Error: undefined identifier `MD5`\\n/tmp/tmpefbewhg1.d(16):\
    \ Error: undefined identifier `MD5`\\n/tmp/tmpefbewhg1.d(14): Error: cannot implicitly\
    \ convert expression `null` of type `typeof(null)` to `Nullable!string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpefbewhg1.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \")\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    \n    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpo5gsoyen.d(14): Error: type `inout(string)` is not an expression\\\
    n/tmp/tmpo5gsoyen.d(16): Error: undefined identifier `MD5`\\n/tmp/tmpo5gsoyen.d(16):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpo5gsoyen.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpif4tb64m.d(16): Error: undefined identifier `MD5`\\n/tmp/tmpif4tb64m.d(16):\
    \ Error: undefined identifier `MD5`\\n/tmp/tmpif4tb64m.d(14): Error: cannot implicitly\
    \ convert expression `null` of type `typeof(null)` to `Nullable!string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpif4tb64m.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.len\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdfjg3psr.d(13): Error: no property `len` for type `string`\\\
    n/tmp/tmpdfjg3psr.d(16): Error: undefined identifier `MD5`\\n/tmp/tmpdfjg3psr.d(16):\
    \ Error: undefined identifier `MD5`\\n/tmp/tmpdfjg3psr.d(14): Error: cannot implicitly\
    \ convert expression `null` of type `typeof(null)` to `Nullable!string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdfjg3psr.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \")\n        return null;\n    \n    byte[] bytes = md5(text);\n    \n    return\
    \ bytes_to_string(bytes);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsgh2a5if.d(16): Error: undefined identifier `md5`\\n/tmp/tmpsgh2a5if.d(18):\
    \ Error: undefined identifier `bytes_to_string`\\n/tmp/tmpsgh2a5if.d(14): Error:\
    \ cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsgh2a5if.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.empty())\
    \ {\n        return Nullable!(string);\n    }\n    \n    string md5sum = md5(text);\n\
    \    \n    return md5sum;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpihmi8_1d.d(13): Error: no property `empty` for type `string`\\\
    n/tmp/tmpihmi8_1d.d(14): Error: type `inout(string)` is not an expression\\n/tmp/tmpihmi8_1d.d(17):\
    \ Error: undefined identifier `md5`\\n/tmp/tmpihmi8_1d.d(19): Error: cannot implicitly\
    \ convert expression `md5sum` of type `string` to `Nullable!string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpihmi8_1d.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \")\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpg6uhp5no.d(14): Error: type `inout(string)` is not an expression\\\
    n/tmp/tmpg6uhp5no.d(16): Error: undefined identifier `MD5`\\n/tmp/tmpg6uhp5no.d(16):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpg6uhp5no.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \")\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfwr9mfcc.d(14): Error: type `inout(string)` is not an expression\\\
    n/tmp/tmpfwr9mfcc.d(16): Error: undefined identifier `MD5`\\n/tmp/tmpfwr9mfcc.d(16):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpfwr9mfcc.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3onoofi7.d(16): Error: undefined identifier `MD5`\\n/tmp/tmp3onoofi7.d(16):\
    \ Error: undefined identifier `MD5`\\n/tmp/tmp3onoofi7.d(14): Error: cannot implicitly\
    \ convert expression `null` of type `typeof(null)` to `Nullable!string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3onoofi7.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \")\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    \n    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4qa0_b9f.d(14): Error: type `inout(string)` is not an expression\\\
    n/tmp/tmp4qa0_b9f.d(16): Error: undefined identifier `MD5`\\n/tmp/tmp4qa0_b9f.d(16):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp4qa0_b9f.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpnoftad5w.d(16): Error: undefined identifier `MD5`\\n/tmp/tmpnoftad5w.d(16):\
    \ Error: undefined identifier `MD5`\\n/tmp/tmpnoftad5w.d(14): Error: cannot implicitly\
    \ convert expression `null` of type `typeof(null)` to `Nullable!string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnoftad5w.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \")\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpuuig0rfl.d(14): Error: type `inout(string)` is not an expression\\\
    n/tmp/tmpuuig0rfl.d(16): Error: undefined identifier `MD5`\\n/tmp/tmpuuig0rfl.d(16):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpuuig0rfl.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqgagv_6a.d(13): Error: undefined identifier `MD5`\\n/tmp/tmpqgagv_6a.d(13):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpqgagv_6a.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    \n    return Nullable!(md5.digest());\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsv9eyabb.d(14): Error: type `inout(string)` is not an expression\\\
    n/tmp/tmpsv9eyabb.d(16): Error: undefined identifier `MD5`\\n/tmp/tmpsv9eyabb.d(16):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpsv9eyabb.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    md5.finalize();\n    \n    return Nullable!(md5.digest());\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfp9fxvmw.d(14): Error: type `inout(string)` is not an expression\\\
    n/tmp/tmpfp9fxvmw.d(16): Error: undefined identifier `MD5`\\n/tmp/tmpfp9fxvmw.d(16):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpfp9fxvmw.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    md5(text);\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5za_r8pg.d(13): Error: undefined identifier `md5`\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5za_r8pg.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5.new();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7n2t5c7z.d(13): Error: basic type expected, not `;`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7n2t5c7z.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkij8wof2.d(16): Error: undefined identifier `MD5`\\n/tmp/tmpkij8wof2.d(16):\
    \ Error: undefined identifier `MD5`\\n/tmp/tmpkij8wof2.d(14): Error: cannot implicitly\
    \ convert expression `null` of type `typeof(null)` to `Nullable!string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkij8wof2.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \")\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmjcnveu1.d(14): Error: type `inout(string)` is not an expression\\\
    n/tmp/tmpmjcnveu1.d(16): Error: undefined identifier `MD5`\\n/tmp/tmpmjcnveu1.d(16):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpmjcnveu1.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0) {\n        return Nullable!(string);\n    }\n    \n    MD5 md5 = MD5();\n\
    \    md5.update(text.asBytes());\n    return md5.digest();\n}\nunittest\n{\n \
    \   alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp96dwrkes.d(14): Error: type `inout(string)` is not an expression\\\
    n/tmp/tmp96dwrkes.d(17): Error: undefined identifier `MD5`\\n/tmp/tmp96dwrkes.d(17):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp96dwrkes.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    string md5 =\
    \ null;\n    \n    if (text != \"\")\n    {\n        md5 = md5(text);\n    }\n\
    \    \n    return md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsi92lm9a.d(17): Error: function expected before `()`, not `md5`\
    \ of type `string`\\n/tmp/tmpsi92lm9a.d(20): Error: cannot implicitly convert\
    \ expression `md5` of type `string` to `Nullable!string`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpsi92lm9a.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \")\n        return null;\n    \n    MD5 md5 = MD5.create();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4qyy86mz.d(16): Error: undefined identifier `MD5`\\n/tmp/tmp4qyy86mz.d(16):\
    \ Error: undefined identifier `MD5`\\n/tmp/tmp4qyy86mz.d(14): Error: cannot implicitly\
    \ convert expression `null` of type `typeof(null)` to `Nullable!string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4qyy86mz.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \")\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.toByteArray());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptgey_fld.d(14): Error: type `inout(string)` is not an expression\\\
    n/tmp/tmptgey_fld.d(16): Error: undefined identifier `MD5`\\n/tmp/tmptgey_fld.d(16):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmptgey_fld.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5.new();\n\
    \    md5.update(text.asBytes());\n    return Nullable!(md5.digest());\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9i8pe1oq.d(13): Error: basic type expected, not `;`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9i8pe1oq.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.toByteArray());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpn3zqfyej.d(16): Error: undefined identifier `MD5`\\n/tmp/tmpn3zqfyej.d(16):\
    \ Error: undefined identifier `MD5`\\n/tmp/tmpn3zqfyej.d(14): Error: cannot implicitly\
    \ convert expression `null` of type `typeof(null)` to `Nullable!string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn3zqfyej.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5.new();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1mp1l0j9.d(16): Error: basic type expected, not `;`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1mp1l0j9.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \")\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    \n    return Nullable!(md5.digest());\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1ttbn_y2.d(14): Error: type `inout(string)` is not an expression\\\
    n/tmp/tmp1ttbn_y2.d(16): Error: undefined identifier `MD5`\\n/tmp/tmp1ttbn_y2.d(16):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp1ttbn_y2.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \")\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    \n    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpeofjs9s7.d(14): Error: type `inout(string)` is not an expression\\\
    n/tmp/tmpeofjs9s7.d(16): Error: undefined identifier `MD5`\\n/tmp/tmpeofjs9s7.d(16):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpeofjs9s7.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.len()\
    \ == 0)\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpx5ftzryu.d(13): Error: no property `len` for type `string`\\\
    n/tmp/tmpx5ftzryu.d(14): Error: type `inout(string)` is not an expression\\n/tmp/tmpx5ftzryu.d(16):\
    \ Error: undefined identifier `MD5`\\n/tmp/tmpx5ftzryu.d(16): Error: undefined\
    \ identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx5ftzryu.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpa4c6evcl.d(16): Error: undefined identifier `MD5`\\n/tmp/tmpa4c6evcl.d(16):\
    \ Error: undefined identifier `MD5`\\n/tmp/tmpa4c6evcl.d(14): Error: cannot implicitly\
    \ convert expression `null` of type `typeof(null)` to `Nullable!string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa4c6evcl.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    Nullable!(string)\
    \ md5 = null;\n    \n    if (text != \"\")\n    {\n        md5 = md5(text);\n\
    \    }\n    \n    return md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgyve79ql.d(17): Error: function expected before `()`, not `md5.get()`\
    \ of type `string`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgyve79ql.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \")\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    \n    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp219os3ni.d(14): Error: type `inout(string)` is not an expression\\\
    n/tmp/tmp219os3ni.d(16): Error: undefined identifier `MD5`\\n/tmp/tmp219os3ni.d(16):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp219os3ni.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    string result;\n\
    \    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n    result = md5.digest();\n\
    \    md5.free();\n    return result;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpe8sxwu1r.d(14): Error: undefined identifier `MD5`\\n/tmp/tmpe8sxwu1r.d(14):\
    \ Error: undefined identifier `MD5`\\n/tmp/tmpe8sxwu1r.d(18): Error: cannot implicitly\
    \ convert expression `result` of type `string` to `Nullable!string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpe8sxwu1r.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxvj5loop.d(13): Error: undefined identifier `MD5`\\n/tmp/tmpxvj5loop.d(13):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpxvj5loop.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.asBytes());\n    return md5.digest();\n}\nunittest\n{\n \
    \   alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8_qf2dat.d(13): Error: undefined identifier `MD5`\\n/tmp/tmp8_qf2dat.d(13):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp8_qf2dat.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \") return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    \n    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1_wn1fht.d(15): Error: undefined identifier `MD5`\\n/tmp/tmp1_wn1fht.d(15):\
    \ Error: undefined identifier `MD5`\\n/tmp/tmp1_wn1fht.d(13): Error: cannot implicitly\
    \ convert expression `null` of type `typeof(null)` to `Nullable!string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1_wn1fht.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpo2sxahlh.d(16): Error: undefined identifier `MD5`\\n/tmp/tmpo2sxahlh.d(16):\
    \ Error: undefined identifier `MD5`\\n/tmp/tmpo2sxahlh.d(14): Error: cannot implicitly\
    \ convert expression `null` of type `typeof(null)` to `Nullable!string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo2sxahlh.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    md5.finalize();\n    \n    return md5.digest();\n}\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp02nsrf_1.d(16): Error: undefined identifier `MD5`\\n/tmp/tmp02nsrf_1.d(16):\
    \ Error: undefined identifier `MD5`\\n/tmp/tmp02nsrf_1.d(14): Error: cannot implicitly\
    \ convert expression `null` of type `typeof(null)` to `Nullable!string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp02nsrf_1.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \")\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdrlknicm.d(14): Error: type `inout(string)` is not an expression\\\
    n/tmp/tmpdrlknicm.d(16): Error: undefined identifier `MD5`\\n/tmp/tmpdrlknicm.d(16):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpdrlknicm.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    \n    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkgon63ly.d(14): Error: type `inout(string)` is not an expression\\\
    n/tmp/tmpkgon63ly.d(16): Error: undefined identifier `MD5`\\n/tmp/tmpkgon63ly.d(16):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpkgon63ly.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpk35v4bws.d(16): Error: undefined identifier `MD5`\\n/tmp/tmpk35v4bws.d(16):\
    \ Error: undefined identifier `MD5`\\n/tmp/tmpk35v4bws.d(14): Error: cannot implicitly\
    \ convert expression `null` of type `typeof(null)` to `Nullable!string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk35v4bws.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.getBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3o1_2g86.d(14): Error: type `inout(string)` is not an expression\\\
    n/tmp/tmp3o1_2g86.d(16): Error: undefined identifier `MD5`\\n/tmp/tmp3o1_2g86.d(16):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp3o1_2g86.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.empty())\n\
    \        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptr5pefb_.d(13): Error: no property `empty` for type `string`\\\
    n/tmp/tmptr5pefb_.d(14): Error: type `inout(string)` is not an expression\\n/tmp/tmptr5pefb_.d(16):\
    \ Error: undefined identifier `MD5`\\n/tmp/tmptr5pefb_.d(16): Error: undefined\
    \ identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptr5pefb_.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \") return Nullable!(string);\n    \n    byte[] bytes = text.as_bytes();\n   \
    \ byte[] md5 = new byte[32];\n    md5[0] = 0x67452301;\n    md5[1] = 0xefcdab89;\n\
    \    md5[2] = 0x98badcfe;\n    md5[3] = 0x10325476;\n    md5[4] = 0xc3d2e1f0;\n\
    \    md5[5] = 0x76543210;\n    md5[6] = 0xfedcba98;\n    md5[7] = 0x8b4513ed;\n\
    \    md5[8] = 0xcbf9ede5;\n    md5[9] = 0xbebada55;\n    md5[10] = 0x2e1b2138;\n\
    \    md5[11] = 0xbadb775a;\n    md5[12] = 0x89961263;\n    md5[13] = 0xdb2f9531;\n\
    \    md5[14] = 0xd34d1704;\n    md5[15] = 0xef0127a2;\n    md5[16] = 0xafaab9d5;\n\
    \    md5[17] = 0x3ca7d7af;\n    md5[18] = 0x4cffa570;\n    md5[19] = 0x4be30393;\n\
    \    md5[20] = 0x5f2fc11d;\n    md5[21] = 0x6fa87e4f;\n    md5[22] = 0x5254a996;\n\
    \    md5[23] = 0x53e4a668;\n    md5[24] = 0x5ac42aed;\n    md5[25] = 0x5ead4281;\n\
    \    md5[26] = 0x5ee762b6;\n    md5[27] = 0x5cf5785a;\n    md5[28] = 0x60a5f103;\n\
    \    md5[29] = 0x6ca6351;\n    md5[30] = 0x6d4c4d02;\n    md5[31] = 0x6ed3d104;\n\
    \    md5[32] = 0x6ee29e0b;\n    md5[33] = 0x6ef07995;\n    md5[34] = 0x6fa67e2f;\n\
    \    md5[35] = 0x6fb03d7a;\n    md5[36] = 0x6fbc19dc;\n    md5[37] = 0x6fd52cdd;\n\
    \    md5[38] = 0x6fe624e4;\n    md5[39] = 0x6fffa9d8;\n    md5[40] = 0x7010b5e\n\
    unittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result =\
    \ candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdr0b_6_6.d(58): Error: found `unittest` when expecting `;` following\
    \ statement\\n/tmp/tmpdr0b_6_6.d(83): Error: found `End of File` when expecting\
    \ `}` following compound statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpdr0b_6_6.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    md5!(string)\
    \ hash;\n    if (text.len() > 0)\n        hash = md5!(string) hash;\n    return\
    \ hash;\n}\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n     \
    \   auto result = candidate(\"Hello world\");\n        assert(!result.isNull &&\
    \ result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result\
    \ = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result\
    \ = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsro5606j.d(15): Error: found `hash` when expecting `;` following\
    \ statement\\n/tmp/tmpsro5606j.d(15): Deprecation: use `{ }` for an empty statement,\
    \ not `;`\\n/tmp/tmpsro5606j.d(18): Error: unterminated /* */ comment\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsro5606j.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdl7n7ukz.d(14): Error: type `inout(string)` is not an expression\\\
    n/tmp/tmpdl7n7ukz.d(16): Error: undefined identifier `MD5`\\n/tmp/tmpdl7n7ukz.d(16):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpdl7n7ukz.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmplslmd6b6.d(13): Error: undefined identifier `MD5`\\n/tmp/tmplslmd6b6.d(13):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmplslmd6b6.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9d8g7srx.d(16): Error: undefined identifier `MD5`\\n/tmp/tmp9d8g7srx.d(16):\
    \ Error: undefined identifier `MD5`\\n/tmp/tmp9d8g7srx.d(14): Error: cannot implicitly\
    \ convert expression `null` of type `typeof(null)` to `Nullable!string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9d8g7srx.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.getBytes());\n\
    \    \n    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzbz7gbbf.d(14): Error: type `inout(string)` is not an expression\\\
    n/tmp/tmpzbz7gbbf.d(16): Error: undefined identifier `MD5`\\n/tmp/tmpzbz7gbbf.d(16):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpzbz7gbbf.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    Nullable!(string)\
    \ md5 = null;\n    \n    if (text != \"\")\n    {\n        md5 = md5(text);\n\
    \    }\n    \n    return md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0zgdzsdj.d(17): Error: function expected before `()`, not `md5.get()`\
    \ of type `string`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0zgdzsdj.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5.create();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxk3fgixp.d(16): Error: undefined identifier `MD5`\\n/tmp/tmpxk3fgixp.d(16):\
    \ Error: undefined identifier `MD5`\\n/tmp/tmpxk3fgixp.d(14): Error: cannot implicitly\
    \ convert expression `null` of type `typeof(null)` to `Nullable!string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxk3fgixp.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.asBytes());\n    return md5.digest();\n}\nunittest\n{\n \
    \   alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_avqjd45.d(13): Error: undefined identifier `MD5`\\n/tmp/tmp_avqjd45.d(13):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp_avqjd45.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \") return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgbea8h1z.d(13): Error: type `inout(string)` is not an expression\\\
    n/tmp/tmpgbea8h1z.d(15): Error: undefined identifier `MD5`\\n/tmp/tmpgbea8h1z.d(15):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpgbea8h1z.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \")\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.toUtf8());\n\
    \    \n    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_yvbotfo.d(14): Error: type `inout(string)` is not an expression\\\
    n/tmp/tmp_yvbotfo.d(16): Error: undefined identifier `MD5`\\n/tmp/tmp_yvbotfo.d(16):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp_yvbotfo.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmps_p1zvrs.d(16): Error: undefined identifier `MD5`\\n/tmp/tmps_p1zvrs.d(16):\
    \ Error: undefined identifier `MD5`\\n/tmp/tmps_p1zvrs.d(14): Error: cannot implicitly\
    \ convert expression `null` of type `typeof(null)` to `Nullable!string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps_p1zvrs.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    \n    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbgyalp22.d(16): Error: undefined identifier `MD5`\\n/tmp/tmpbgyalp22.d(16):\
    \ Error: undefined identifier `MD5`\\n/tmp/tmpbgyalp22.d(14): Error: cannot implicitly\
    \ convert expression `null` of type `typeof(null)` to `Nullable!string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbgyalp22.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \")\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpx5idev4n.d(14): Error: type `inout(string)` is not an expression\\\
    n/tmp/tmpx5idev4n.d(16): Error: undefined identifier `MD5`\\n/tmp/tmpx5idev4n.d(16):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpx5idev4n.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \")\n        return null;\n    \n    byte[] bytes = text.getBytes();\n    \n \
    \   MD5 md5 = new MD5();\n    \n    md5.update(bytes);\n    \n    return md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4e5qgcj7.d(16): Error: no property `getBytes` for type `string`\\\
    n/tmp/tmp4e5qgcj7.d(18): Error: undefined identifier `MD5`\\n/tmp/tmp4e5qgcj7.d(18):\
    \ Error: undefined identifier `MD5`\\n/tmp/tmp4e5qgcj7.d(14): Error: cannot implicitly\
    \ convert expression `null` of type `typeof(null)` to `Nullable!string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4e5qgcj7.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    Nullable!(string)\
    \ md5 = null;\n    if (text != \"\") {\n        md5 = md5(text);\n    }\n    return\
    \ md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto\
    \ result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get\
    \ == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpn4a0aly6.d(15): Error: function expected before `()`, not `md5.get()`\
    \ of type `string`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn4a0aly6.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5.new();\n    md5.update(text.as_bytes);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjm2o5vv0.d(16): Error: basic type expected, not `;`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjm2o5vv0.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \") return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    \n    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpd5p72695.d(13): Error: type `inout(string)` is not an expression\\\
    n/tmp/tmpd5p72695.d(15): Error: undefined identifier `MD5`\\n/tmp/tmpd5p72695.d(15):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpd5p72695.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \")\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    \n    return Nullable!(md5.digest());\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkojk9_cy.d(14): Error: type `inout(string)` is not an expression\\\
    n/tmp/tmpkojk9_cy.d(16): Error: undefined identifier `MD5`\\n/tmp/tmpkojk9_cy.d(16):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpkojk9_cy.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8e09_0k0.d(13): Error: undefined identifier `MD5`\\n/tmp/tmp8e09_0k0.d(13):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp8e09_0k0.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \")\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    md5.finalize();\n    \n    return Nullable!(md5.digest());\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2h7os88p.d(14): Error: type `inout(string)` is not an expression\\\
    n/tmp/tmp2h7os88p.d(16): Error: undefined identifier `MD5`\\n/tmp/tmp2h7os88p.d(16):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp2h7os88p.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.asBytes());\n    return md5.digest();\n}\nunittest\n{\n \
    \   alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpq4tcnd30.d(13): Error: undefined identifier `MD5`\\n/tmp/tmpq4tcnd30.d(13):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpq4tcnd30.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.empty())\n\
    \        return Nullable!(string);\n    \n    string md5sum = md5(text);\n   \
    \ \n    return md5sum;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpz0r9xmja.d(13): Error: no property `empty` for type `string`\\\
    n/tmp/tmpz0r9xmja.d(14): Error: type `inout(string)` is not an expression\\n/tmp/tmpz0r9xmja.d(16):\
    \ Error: undefined identifier `md5`\\n/tmp/tmpz0r9xmja.d(18): Error: cannot implicitly\
    \ convert expression `md5sum` of type `string` to `Nullable!string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz0r9xmja.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.asBytes());\n    return md5.digest();\n}\nunittest\n{\n \
    \   alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprub3ln0m.d(13): Error: undefined identifier `MD5`\\n/tmp/tmprub3ln0m.d(13):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmprub3ln0m.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqzpodhvf.d(13): Error: undefined identifier `MD5`\\n/tmp/tmpqzpodhvf.d(13):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpqzpodhvf.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4ks0i043.d(13): Error: undefined identifier `MD5`\\n/tmp/tmp4ks0i043.d(13):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp4ks0i043.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6wn76g7p.d(16): Error: undefined identifier `MD5`\\n/tmp/tmp6wn76g7p.d(16):\
    \ Error: undefined identifier `MD5`\\n/tmp/tmp6wn76g7p.d(14): Error: cannot implicitly\
    \ convert expression `null` of type `typeof(null)` to `Nullable!string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6wn76g7p.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.empty())\
    \ return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjxhv99p4.d(13): Error: no property `empty` for type `string`\\\
    n/tmp/tmpjxhv99p4.d(15): Error: undefined identifier `MD5`\\n/tmp/tmpjxhv99p4.d(15):\
    \ Error: undefined identifier `MD5`\\n/tmp/tmpjxhv99p4.d(13): Error: cannot implicitly\
    \ convert expression `null` of type `typeof(null)` to `Nullable!string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjxhv99p4.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.asBytes());\n    return md5.digest();\n}\nunittest\n{\n \
    \   alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptbx4e_65.d(13): Error: undefined identifier `MD5`\\n/tmp/tmptbx4e_65.d(13):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmptbx4e_65.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text);\n\
    \    md5.update(\"\");\n    return md5.digest();\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprwl146g_.d(16): Error: undefined identifier `MD5`\\n/tmp/tmprwl146g_.d(16):\
    \ Error: undefined identifier `MD5`\\n/tmp/tmprwl146g_.d(14): Error: cannot implicitly\
    \ convert expression `null` of type `typeof(null)` to `Nullable!string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprwl146g_.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    \n    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6676eds_.d(16): Error: undefined identifier `MD5`\\n/tmp/tmp6676eds_.d(16):\
    \ Error: undefined identifier `MD5`\\n/tmp/tmp6676eds_.d(14): Error: cannot implicitly\
    \ convert expression `null` of type `typeof(null)` to `Nullable!string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6676eds_.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_r8v0c98.d(13): Error: undefined identifier `MD5`\\n/tmp/tmp_r8v0c98.d(13):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp_r8v0c98.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \")\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpo6_abp8p.d(14): Error: type `inout(string)` is not an expression\\\
    n/tmp/tmpo6_abp8p.d(16): Error: undefined identifier `MD5`\\n/tmp/tmpo6_abp8p.d(16):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpo6_abp8p.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    string md5 =\
    \ null;\n    \n    if (text != \"\")\n    {\n        md5 = md5(text);\n    }\n\
    \    \n    return md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgjah6fen.d(17): Error: function expected before `()`, not `md5`\
    \ of type `string`\\n/tmp/tmpgjah6fen.d(20): Error: cannot implicitly convert\
    \ expression `md5` of type `string` to `Nullable!string`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpgjah6fen.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.asBytes());\n    return md5.digest();\n}\nunittest\n{\n \
    \   alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwr4ylfdr.d(13): Error: undefined identifier `MD5`\\n/tmp/tmpwr4ylfdr.d(13):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpwr4ylfdr.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5.new();\n    md5.update(text.as_bytes);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpd4gbw7er.d(16): Error: basic type expected, not `;`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpd4gbw7er.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \")\n        return null;\n    \n    MD5 md5 = MD5.new();\n    md5.update(text);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpm3bchz5t.d(16): Error: basic type expected, not `;`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpm3bchz5t.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.asBytes());\n    return md5.digest();\n}\nunittest\n{\n \
    \   alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5lhkxeez.d(13): Error: undefined identifier `MD5`\\n/tmp/tmp5lhkxeez.d(13):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp5lhkxeez.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.empty())\n\
    \        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp97vsu32e.d(13): Error: no property `empty` for type `string`\\\
    n/tmp/tmp97vsu32e.d(14): Error: type `inout(string)` is not an expression\\n/tmp/tmp97vsu32e.d(16):\
    \ Error: undefined identifier `MD5`\\n/tmp/tmp97vsu32e.d(16): Error: undefined\
    \ identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp97vsu32e.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.empty())\n\
    \        return Nullable!(string);\n    \n    string md5sum = \"d41d8cd98f00b204e9800998ecf8427e\"\
    ;\n    \n    for (auto c : text)\n        md5sum[md5sum.length()] = c;\n    \n\
    \    return md5sum;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n\
    {\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprrowtw7u.d(18): Error: no identifier for declarator `c`\\n/tmp/tmprrowtw7u.d(18):\
    \ Error: expression expected, not `:`\\n/tmp/tmprrowtw7u.d(18): Error: found `text`\
    \ when expecting `;` following `for` condition\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmprrowtw7u.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \")\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpysaytiub.d(14): Error: type `inout(string)` is not an expression\\\
    n/tmp/tmpysaytiub.d(16): Error: undefined identifier `MD5`\\n/tmp/tmpysaytiub.d(16):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpysaytiub.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    Nullable!(string)\
    \ md5 = null;\n    if (text != \"\")\n        md5 = md5(text);\n    return md5;\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpp8goon0b.d(15): Error: function expected before `()`, not `md5.get()`\
    \ of type `string`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp8goon0b.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \")\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_eb2vqju.d(14): Error: type `inout(string)` is not an expression\\\
    n/tmp/tmp_eb2vqju.d(16): Error: undefined identifier `MD5`\\n/tmp/tmp_eb2vqju.d(16):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp_eb2vqju.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5.new();\n\
    \    md5.update(text.asBytes());\n    return md5.digest();\n}\nunittest\n{\n \
    \   alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpae7l1__u.d(13): Error: basic type expected, not `;`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpae7l1__u.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    string md5 =\
    \ null;\n    if (text != \"\")\n    {\n        md5 = md5(text);\n    }\n    return\
    \ md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto\
    \ result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get\
    \ == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpoxr4hita.d(16): Error: function expected before `()`, not `md5`\
    \ of type `string`\\n/tmp/tmpoxr4hita.d(18): Error: cannot implicitly convert\
    \ expression `md5` of type `string` to `Nullable!string`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpoxr4hita.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \")\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2ozms4mu.d(14): Error: type `inout(string)` is not an expression\\\
    n/tmp/tmp2ozms4mu.d(16): Error: undefined identifier `MD5`\\n/tmp/tmp2ozms4mu.d(16):\
    \ Error: undefined identifier `MD5`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp2ozms4mu.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text == \"\
    \") return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgqgkxn4g.d(15): Error: undefined identifier `MD5`\\n/tmp/tmpgqgkxn4g.d(15):\
    \ Error: undefined identifier `MD5`\\n/tmp/tmpgqgkxn4g.d(13): Error: cannot implicitly\
    \ convert expression `null` of type `typeof(null)` to `Nullable!string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgqgkxn4g.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError

name: HumanEval_3_below_zero
language: humaneval_to_dlang.py
prompt: "import std.math;\nimport std.typecons;\n/*\n You're given a list of deposit\
  \ and withdrawal operations on a bank account that starts with\n    zero balance.\
  \ Your task is to detect if at any point the balance of account fallls below zero,\
  \ and\n    at that point function should return True. Otherwise it should return\
  \ False.\n    >>> below_zero([1, 2, 3])\n    False\n    >>> below_zero([1, 2, -4,\
  \ 5])\n    True\n    \n*/\nbool below_zero(long[] operations) \n"
tests: "unittest\n{\n    alias candidate = below_zero;\n\n    assert(candidate([])\
  \ == false);\n    assert(candidate([1L, 2L, -3L, 1L, 2L, -3L]) == false);\n    assert(candidate([1L,\
  \ 2L, -4L, 5L, 6L]) == true);\n    assert(candidate([1L, -1L, 2L, -2L, 5L, -5L,\
  \ 4L, -4L]) == false);\n    assert(candidate([1L, -1L, 2L, -2L, 5L, -5L, 4L, -5L])\
  \ == true);\n    assert(candidate([1L, -2L, 2L, -2L, 5L, -5L, 4L, -4L]) == true);\n\
  }\nvoid main(){}"
completions: []
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

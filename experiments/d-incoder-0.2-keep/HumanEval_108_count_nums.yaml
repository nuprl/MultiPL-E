name: HumanEval_108_count_nums
language: humaneval_to_dlang.py
prompt: "import std.math;\nimport std.typecons;\n/*\n\n    Write a function count_nums\
  \ which takes an array of integers and returns\n    the number of elements which\
  \ has a sum of digits > 0.\n    If a number is negative, then its first signed digit\
  \ will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\
  \ == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) ==\
  \ 3\n    \n*/\nlong count_nums(long[] arr) \n"
tests: "unittest\n{\n    alias candidate = count_nums;\n\n    assert(candidate([])\
  \ == 0L);\n    assert(candidate([-1L, -2L, 0L]) == 0L);\n    assert(candidate([1L,\
  \ 1L, 2L, -2L, 3L, 4L, 5L]) == 6L);\n    assert(candidate([1L, 6L, 9L, -6L, 0L,\
  \ 1L, 5L]) == 5L);\n    assert(candidate([1L, 100L, 98L, -7L, 1L, -1L]) == 4L);\n\
  \    assert(candidate([12L, 23L, 34L, -45L, -56L, 0L]) == 5L);\n    assert(candidate([0L,\
  \ 1L]) == 1L);\n    assert(candidate([1L]) == 1L);\n}\nvoid main(){}"
completions: ["{\n    long sum = 0;\n    for(int i = 0; i < arr.length; i++){\n  \
    \      sum += arr[i];\n    }\n    return sum;\n}\n</code>\n<|/ a dscore=0 |>\n\
    <| c |>\nThis doesn't work. Try it with `count_nums([-1, 11, -11])`\n<|/ c |>\n\
    <| c |>\nYes, it does. I tested it before posting. Try it yourself.\n<|/ c |>\n\
    <| c |>\nYes, it does. I tested it before posting. Try it yourself.\n<|/ c |>\n\
    <| c |>\nI tested it before posting. Try it yourself.\n<|/ c |>\n<| c |>\nI tested\
    \ it before posting. Try it yourself.\n<|/ c |>\n<| a dscore=0 |>\n<code>\nimport\
    \ java.util.Arrays;\nimport java.util.List;\nimport java.util.stream.Collectors;",
  "{\n    long count = 0;\n    for(int i = 0; i < arr.length; i++)\n    {\n      \
    \  if(arr[i] > 0)\n        {\n            count += arr[i];\n        }\n    }\n\
    \    return count;\n}\n</code>\n<|/ a tags=c++,algorithm,arrays |>\n<| c |>\n\
    This doesn't work. Try it with `count_nums([-1, 11, -11])`.\n<|/ c |>\n<| c |>\n\
    I didn't downvote, but I suspect it's because you didn't explain what was wrong\
    \ with your code. Also, your code is O(n^2), which is very inefficient.\n<|/ c\
    \ |>\n<| c |>\nI added a description of my solution. Thanks for your feedback.\n\
    <|/ c |>\n<| c |>\nI didn't downvote either, but I think it's because you didn't\
    \ explain what was wrong with your code. Also, your code is O(n^2), which is very\
    \ inefficient.\n<|/ c |>\n<| c |>\nI added a description of my solution. Thanks\
    \ for your feedback.\n<|/ c |>\n<| a tags=c++,algorithm,arrays |>\n<code>\n#include\
    \ <iostream>\n#include <vector>\n#include <algorithm>\n#include <numeric>\nusing\
    \ namespace std;", "{\n    long count = 0;\n    long sum = 0;\n    for(int i =\
    \ 0; i < arr.length; i++)\n    {\n        sum += arr[i];\n        if(sum > 0)\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}\n</code>\n\
    <|/ a |>\n<| c |>\nThis doesn't work. `count_nums([-1, 11, -11]) == 1` should\
    \ be `2`.\n<|/ c |>\n<| c |>\nIt does work. `count_nums([-1, 11, -11]) == 2`\n\
    <|/ c |>\n<| c |>\nI tested it and it works. I even tested it on `count_nums([-1,\
    \ 11, -11])` which should return `2`.\n<|/ c |>\n<| c |>\nI tested it on `count_nums([-1,\
    \ 11, -11])` which should return `2`. But it returns `1`.\n<|/ c |>\n<| c |>\n\
    I tested it on `count_nums([-1, 11, -11])` which should return `2`. But it returns\
    \ `1`.\n<|/ c |>\n<| a dscore=0 |>\n<code>\npublic int countDigits(int n) {\n\
    \    int count = 0;\n    while (n > 0) {\n        count += n % 10;\n        n\
    \ /= 10;\n    }\n    return count;\n}\n</code>\n<|/ a tags=java,algorithm |>\n\
    <| c |>\nThis doesn't work. `count_nums([-1, 11, -11]) == 1` should be `2`.\n\
    <|/ c |>\n<| c |>\nI tested it and it works. I even tested it on `count_nums([-1,\
    \ 11, -11])` which should return `2`.\n<|/ c |>\n<| c |>\nI tested it on `count_nums([-1,\
    \ 11, -11])` which should return `2`. But it returns `1`.\n<|/ c |>\n<| c |>\n\
    I tested it on `count_nums([-1, 11, -11])` which should return `2`. But it returns\
    \ `1`.\n<|/ c |>\n<| c |>\nI tested it on `count_nums([-1, 11, -11])` which should\
    \ return `2`. But it returns `1`.\n<|/ c |>\n<| a tags=java,algorithm |>\n<code>\n\
    public int countDigits(int n) {\n    int count = 0;\n    while (n > 0) {\n   \
    \     count += n % 10;\n        n /= 10;\n    }\n    return count;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nThis doesn't work. `count_nums([-1, 11, -11", "{\n\
    \    long count = 0;\n    for(int i = 0; i < arr.length; i++){\n        if(arr[i]\
    \ > 0){\n            count += arr[i];\n        }\n    }\n    return count;\n}\n\
    </code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't work. Try it with `count_nums([-1,\
    \ 11, -11])`.\n<|/ c |>\n<| c |>\nIt does work. `count_nums([-1, 11, -11])` returns\
    \ `1` as expected.\n<|/ c |>\n<| c |>\nIt doesn't work. Try it with `count_nums([-1,\
    \ 11, -11])`.\n<|/ c |>\n<| c |>\nIt does work. `count_nums([-1, 11, -11])` returns\
    \ `1` as expected.\n<|/ c |>\n<| c |>\nIt doesn't work. Try it with `count_nums([-1,\
    \ 11, -11])`.\n<|/ c |>\n<| a dscore=0 |>\n<code>\nimport java.util.Arrays;\n\
    import java.util.List;", "{\n    long count = 0;\n    for(int i = 0; i < arr.length;\
    \ i++) \n    {\n        if(arr[i] > 0) \n        {\n            count += arr[i]\
    \ % 10;\n        }\n    }\n    return count;\n}\n</code>\n<|/ a |>\n<| a dscore=0\
    \ |>\n<code>\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Scanner;",
  "{\n    long result = 0;\n    for(int i = 0; i < arr.length; i++) \n    {\n    \
    \    if(arr[i] > 0) \n        {\n            result += arr[i] % 10;\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThis doesn't\
    \ seem to work for negative numbers. Try `count_nums([-1,11,-11])`.\n<|/ c |>\n\
    <| c |>\nI see what you mean. I've edited my answer to include a solution for\
    \ negative numbers.\n<|/ c |>\n<| c |>\nThanks for the solution. I've edited my\
    \ question to include a solution for negative numbers as well.\n<|/ c |>\n<| a\
    \ dscore=1 |>\n<code>\npublic static int countDigits(int n) {\n    int count =\
    \ 0;\n    while (n > 0) {\n        n /= 10;\n        count++;\n    }\n    return\
    \ count;\n}\n</code>\n<|/ a tags=java |>\n<| a |>\n<code>\npublic static int countDigits(int\
    \ n) {\n    int count = 0;\n    while (n > 0) {\n        n /= 10;\n        count++;\n\
    \    }\n    return count;\n}\n</code>\n<|/ a tags=java dscore=0 |>\n<| a tags=java\
    \ |>\n<code>\npublic static int countDigits(int n) {\n    int count = 0;\n   \
    \ while (n > 0) {\n        n /= 10;\n        count++;\n    }\n    return count;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a tags=java |>\n<code>\npublic static int countDigits(int\
    \ n) {\n    int count = 0;\n    while (n > 0) {\n        n /= 10;\n        count++;\n\
    \    }\n    return count;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=java |>\n\
    <code>\npublic static int countDigits(int n) {\n    int count = 0;\n    while\
    \ (n > 0) {\n        n /= 10;\n        count++;\n    }\n    return count;\n}\n\
    </code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\npublic static int countDigits(int\
    \ n) {\n    int count = 0;\n    while (n > 0) {\n        n /= 10;\n        count++;\n\
    \    }\n    return count;\n}\n</code>\n<|/ a tags=java |>\n<| a dscore=0 |>\n\
    <code>\npublic static int countDigits(int n) {\n    int count = 0;\n    while\
    \ (n > 0) {\n        n /= 10;\n        count++;\n    }\n    return count;\n}\n\
    </code>\n<|/ a tags=java |>\n<| a tags=java |>\n<code>\npublic static int countDigits(int\
    \ n) {\n    int count = 0;\n    while (n > 0) {\n        n /= 10;\n        count++;\n\
    \    }", "{\n    long sum = 0;\n    for(int i = 0; i < arr.length; i++) \n   \
    \ {\n        sum += arr[i];\n    }\n    return sum;\n}\n</code>\n<|/ a tags=c++,arrays\
    \ |>\n<| c |>\nThis doesn't work if you have a negative number in the array. For\
    \ example, `count_nums([-1, 11, -11]) == 1` should be `count_nums([-1, 11, -3])\
    \ == 1`.\n<|/ c |>\n<| c |>\nI see what you mean. Thanks for pointing that out.\
    \ I've updated my answer to account for negative numbers.\n<|/ c |>\n<| a |>\n\
    <code>", "{\n    long count = 0;\n    for(int i = 0; i < arr.length; i++){\n \
    \       if(arr[i] > 0){\n            count += arr[i];\n        }\n    }\n    return\
    \ count;\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThis doesn't work. Try `count_nums([-1,\
    \ 11, -11])`.\n<|/ c |>\n<| c |>\nI see what you mean. Thanks for pointing that\
    \ out. I edited my answer to fix it.\n<|/ c |>\n<| a tags=algorithm,c++ |>\n<code>\n\
    #include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace\
    \ std;", "{\n    long sum = 0;\n    for(int i = 0; i < arr.length; i++){\n   \
    \     sum += arr[i];\n    }\n    return sum;\n}\n</code>\n<|/ a dscore=0 |>\n\
    <| a dscore=0 |>\n<code>\nimport java.util.Arrays;\nimport java.util.List;\nimport\
    \ java.util.stream.Collectors;", "{\n    int count = 0;\n    for(int i = 0; i\
    \ < arr.length; i++) \n    {\n        if(arr[i] > 0) \n        {\n           \
    \ count += arr[i] % 10;\n            arr[i] /= 10;\n        }\n    }\n    return\
    \ count;\n}\n</code>\n<|/ a tags=c#,arrays |>\n<| a tags=c#,arrays |>\n<code>\n\
    public int CountDigits(int[] arr)\n{\n    int count = 0;\n    foreach (int i in\
    \ arr)\n    {\n        if (i > 0)\n        {\n            count += i % 10;\n \
    \           i /= 10;\n        }\n    }\n    return count;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| a dscore=0 |>\n<code>\npublic int CountDigits(int[] arr)\n{\n    int\
    \ count = 0;\n    foreach (int i in arr)\n    {\n        if (i > 0)\n        {\n\
    \            count += i % 10;\n            i /= 10;\n        }\n    }\n    return\
    \ count;\n}\n</code>\n<|/ a tags=c#,arrays |>\n<| a dscore=0 |>\n<code>\npublic\
    \ int CountDigits(int[] arr)\n{\n    int count = 0;\n    foreach (int i in arr)\n\
    \    {\n        if (i > 0)\n        {\n            count += i % 10;\n        \
    \    i /= 10;\n        }\n    }\n    return count;\n}\n</code>\n<|/ a tags=c#,arrays\
    \ |>\n<| a dscore=0 |>\n<code>\npublic int CountDigits(int[] arr)\n{\n    int\
    \ count = 0;\n    foreach (int i in arr)\n    {\n        if (i > 0)\n        {\n\
    \            count += i % 10;\n            i /= 10;\n        }\n    }\n    return\
    \ count;\n}\n</code>\n<|/ a tags=c#,arrays |>\n<| c |>\nPlease add some explanation\
    \ to your answer such that others can learn from it\n<|/ c |>\n<| a dscore=0 |>\n\
    <code>\npublic int CountDigits(int[] arr)\n{\n    int count = 0;\n    foreach\
    \ (int i in arr)\n    {\n        if (i > 0)\n        {\n            count += i\
    \ % 10;\n            i /= 10;\n        }\n    }\n    return count;\n}\n</code>\n\
    <|/ a tags=c#,arrays |>\n<| a tags=c#,arrays |>\n<code>\npublic int CountDigits(int[]\
    \ arr)\n{\n    int count = 0;\n    foreach (int i in arr)\n    {\n        if (i\
    \ > 0)\n        {\n            count += i % 10;\n            i /= 10;\n      \
    \  }\n    }\n    return count;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=c#,arrays\
    \ |>\n", "{\n    long count = 0;\n    for(int i = 0; i < arr.length; i++) \n \
    \   {\n        if(arr[i] > 0) \n        {\n            count += arr[i] % 10;\n\
    \        }\n    }\n    return count;\n}\n</code>\n<|/ a tags=algorithm,arrays,java\
    \ |>\n<| c |>\nThis solution does not work if the array is empty or has only negative\
    \ numbers. I suggest you add an if statement to check if arr is empty or has only\
    \ negative numbers. Also the return type should be long.\n<|/ c |>\n<| c |>\n\
    I added the if statement to check if arr is empty or has only negative numbers.\
    \ Also the return type should be long.\n<|/ c |>\n<| c |>\nThis solution does\
    \ not work if the array is empty or has only negative numbers. I suggest you add\
    \ an if statement to check if arr is empty or has only negative numbers. Also\
    \ the return type should be long.\n<|/ c |>\n<| c |>\nI added the if statement\
    \ to check if arr is empty or has only negative numbers. Also the return type\
    \ should be long.\n<|/ c |>\n<| c |>\nThis solution does not work if the array\
    \ is empty or has only negative numbers. I suggest you add an if statement to\
    \ check if arr is empty or has only negative numbers. Also the return type should\
    \ be long.\n<|/ c |>\n<| a dscore=0 |>\n<code>\npublic int countDigits(int[] arr)\
    \ {\n    int count = 0;\n    for(int i = 0; i < arr.length; i++) {\n        if(arr[i]\
    \ > 0) {\n            count += arr[i] % 10;\n        }\n    }\n    return count;\n\
    }\n</code>\n<|/ a tags=algorithm,arrays,java |>\n<| c |>\nThis solution does not\
    \ work if the array is empty or has only negative numbers. I suggest you add an\
    \ if statement to check if arr is empty or has only negative numbers. Also the\
    \ return type should be int.\n<|/ c |>\n<| a tags=algorithm,arrays,java |>\n<code>\n\
    public int countDigits(int[] arr) {\n    int count = 0;\n    for(int i = 0; i\
    \ < arr.length; i++) {\n        if(arr[i] > 0) {\n            count += arr[i]\
    \ % 10;\n        }\n    }\n    return count;\n}\n</code>\n<|/ a dscore=0 |>\n\
    <| c |>\nThis solution does not work if the array is empty or has only negative\
    \ numbers. I suggest you add an if statement to check if arr is empty or has only\
    \ negative numbers. Also the return type should be int.\n<|/ c |>\n<| a |>\n<code>\n\
    public int countDigits(int[] arr", "{\n    int count = 0;\n    for(int i = 0;\
    \ i < arr.length; i++){\n        if(arr[i] > 0){\n            count += arr[i];\n\
    \        }\n    }\n    return count;\n}\n</code>\n<|/ a tags=java,arrays |>\n\
    <| c |>\nThis code doesn't work if you input negative numbers. For example, `count_nums([-1,\
    \ 11, -11])` returns `3` instead of `2`.\n<|/ c |>\n<| c |>\nThanks for pointing\
    \ that out. I fixed the code so it now works with negative numbers.\n<|/ c |>\n\
    <| a dscore=0 |>\n<code>\nimport java.util.ArrayList;\nimport java.util.List;",
  "{\n    long count = 0;\n    for(int i = 0; i < arr.length; i++) \n    {\n     \
    \   if(arr[i] > 0) \n        {\n            count += arr[i] % 10;\n        }\n\
    \    }\n    return count;\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n\
    public static int countDigits(int n) {\n    int count = 0;\n    while (n > 0)\
    \ {\n        n /= 10;\n        count++;\n    }\n    return count;\n}\n</code>\n\
    <|/ a tags=java,algorithm |>\n<| a tags=java,algorithm |>\n<code>\npublic static\
    \ int countDigits(int n) {\n    int count = 0;\n    while (n > 0) {\n        n\
    \ /= 10;\n        count++;\n    }\n    return count;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| a tags=java,algorithm |>\n<code>\npublic static int countDigits(int n)\
    \ {\n    int count = 0;\n    while (n > 0) {\n        n /= 10;\n        count++;\n\
    \    }\n    return count;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=java,algorithm\
    \ |>\n<code>\npublic static int countDigits(int n) {\n    int count = 0;\n   \
    \ while (n > 0) {\n        n /= 10;\n        count++;\n    }\n    return count;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a |>\n<code>\npublic static int countDigits(int\
    \ n) {\n    int count = 0;\n    while (n > 0) {\n        n /= 10;\n        count++;\n\
    \    }\n    return count;\n}\n</code>\n<|/ a tags=java,algorithm dscore=0 |>\n\
    <| a tags=java,algorithm |>\n<code>\npublic static int countDigits(int n) {\n\
    \    int count = 0;\n    while (n > 0) {\n        n /= 10;\n        count++;\n\
    \    }\n    return count;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n\
    public static int countDigits(int n) {\n    int count = 0;\n    while (n > 0)\
    \ {\n        n /= 10;\n        count++;\n    }\n    return count;\n}\n</code>\n\
    <|/ a tags=java,algorithm |>\n<| a tags=java,algorithm |>\n<code>\npublic static\
    \ int countDigits(int n) {\n    int count = 0;\n    while (n > 0) {\n        n\
    \ /= 10;\n        count++;\n    }\n    return count;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| a tags=java,algorithm |>\n<code>\npublic static int countDigits(int n)\
    \ {\n    int count = 0;\n    while (n > 0) {\n        n /= 10;\n        count++;\n\
    \    }\n    return count;\n}\n</code>\n<|/ a dscore=0 |>\n<| a ", "{\n    long\
    \ sum = 0;\n    for(int i = 0; i < arr.length; i++){\n        sum += arr[i];\n\
    \    }\n    return sum;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nI believe this\
    \ would work, but I believe it would be much more efficient to just use an `ArrayList`\
    \ instead of an array. Also, you should probably use `long` instead of `int` for\
    \ the sum.\n<|/ c |>\n<| c |>\nI agree with you that an ArrayList would be more\
    \ efficient, but I wanted to keep it simple for OP. Also, I believe that using\
    \ long for the sum would be more efficient than using int for the sum.\n<|/ c\
    \ |>\n<| c |>\nI believe that using long for the sum would be more efficient than\
    \ using int for the sum. - Yes, but why would you use int for the sum? The sum\
    \ would never be negative, so using int would just waste space. Using long for\
    \ the sum would also waste space. Using long for the sum would also waste space.\
    \ Using long for the sum would also waste space. Using long for the sum would\
    \ also waste space. Using long for the sum would also waste space. Using long\
    \ for the sum would also waste space. Using long for the sum would also waste\
    \ space. Using long for the sum would also waste space.\n<|/ c |>\n<| c |>\nI\
    \ agree with you that using long for the sum would be more efficient than using\
    \ int for the sum. - Yes, but why would you use int for the sum? The sum would\
    \ never be negative, so using int would just waste space. Using long for the sum\
    \ would also waste space. Using long for the sum would also waste space. Using\
    \ long for the sum would also waste space. Using long for the sum would also waste\
    \ space. Using long for the sum would also waste space. Using long for the sum\
    \ would also waste space. Using long for the sum would also waste space. Using\
    \ long for the sum would also waste space.\n<|/ c |>\n<| c |>\nI agree with you\
    \ that using long for the sum would be more efficient than using int for the sum.\
    \ - Yes, but why would you use int for the sum? The sum would never be negative,\
    \ so using int would just waste space. Using long for the sum would also waste\
    \ space. Using long for the sum would also waste space. Using long for the sum\
    \ would also waste space. Using long for the ", "{\n    long count = 0;\n    for(int\
    \ i = 0; i < arr.length; i++)\n    {\n        if(arr[i] > 0)\n        {\n    \
    \        count += arr[i];\n        }\n    }\n    return count;\n}", "{\n    int\
    \ count = 0;\n    long sum = 0;\n    for(int i = 0; i < arr.length; i++)\n   \
    \ {\n        sum += arr[i];\n        if(sum > 0)\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}\n</code>\n<|/ a tags=c++,arrays |>\n<|\
    \ c |>\nThis code doesn't work. Try it with `count_nums([-1, 11, -11])`.\n<|/\
    \ c |>\n<| c |>\nThanks for pointing that out. I've fixed the code now.\n<|/ c\
    \ |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\nusing namespace std;", "{\n\
    \    long count = 0;\n    long sum = 0;\n    for(int i = 0; i < arr.length; i++)\n\
    \    {\n        sum += arr[i];\n        if(sum > 0)\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}\n</code>\n<|/ a tags=algorithm,arrays,java\
    \ |>\n<| a tags=algorithm,arrays,java |>\n<code>\npublic static void main(String[]\
    \ args) {\n    int[] arr = {-12, -13, -14, -15, -16, -17, 18, 19, 20, 21, 22,\
    \ 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41,\
    \ 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\
    \ 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,\
    \ 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98,\
    \ 99, 100};\n    System.out.println(count_nums(arr));\n}", "{\n    long count\
    \ = 0;\n    for(int i = 0; i < arr.length; i++){\n        if(arr[i] > 0){\n  \
    \          count += arr[i];\n        }\n    }\n    return count;\n}\n</code>\n\
    <|/ a dscore=1 |>\n<| a tags=c++,algorithm |>\n<code>\n#include <iostream>\n#include\
    \ <vector>\n#include <algorithm>", "{\n    long count = 0;\n    for(int i = 0;\
    \ i < arr.length; i++)\n    {\n        if(arr[i] > 0)\n        {\n           \
    \ count += arr[i];\n        }\n    }\n    return count;\n}\n</code>\n<|/ a tags=c#,algorithm,arrays\
    \ |>\n<| c |>\nThis doesn't work. Try it with `count_nums([-1, 11, -11])`\n<|/\
    \ c |>\n<| c |>\nThanks for pointing that out. I fixed the code.\n<|/ c |>\n<|\
    \ c |>\nThanks for your answer. Can you please explain me why you used the variable\
    \ `count` instead of `sum`?\n<|/ c |>\n<| c |>\nI used `sum` because I thought\
    \ it would be easier to understand what I was doing. I could have used `count`\
    \ as well, but I thought it would be more confusing to see `sum` instead of `count`.\n\
    <|/ c |>\n<| c |>\nI understand now. Thanks for your help.\n<|/ c |>\n<| a dscore=0\
    \ |>\n<code>\npublic int CountDigits(int[] arr)\n{\n    int count = 0;\n    foreach\
    \ (int i in arr)\n    {\n        if (i > 0)\n        {\n            count += i;\n\
    \        }\n    }\n    return count;\n}\n</code>\n<|/ a tags=c#,algorithm,arrays\
    \ |>\n<| c |>\nThis doesn't work. Try it with `CountDigits([-1, 11, -11])`\n<|/\
    \ c |>\n<| c |>\nThanks for your answer. Can you please explain me why you used\
    \ the variable `count` instead of `sum`?\n<|/ c |>\n<| c |>\nI used `sum` because\
    \ I thought it would be easier to understand what I was doing. I could have used\
    \ `count` as well, but I thought it would be more confusing to see `sum` instead\
    \ of `count`.\n<|/ c |>\n<| a tags=c#,algorithm,arrays |>\n<code>\npublic int\
    \ CountDigits(int[] arr)\n{\n    int sum = 0;\n    foreach (int i in arr)\n  \
    \  {\n        if (i > 0)\n        {\n            sum += i;\n        }\n    }\n\
    \    return sum;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't work. Try\
    \ it with `CountDigits([-1, 11, -11])`\n<|/ c |>\n<| c |>\nThanks for your answer.\
    \ Can you please explain me why you used the variable `sum` instead of `count`?\n\
    <|/ c |>\n<|", "{\n    long count = 0;\n    long sum = 0;\n    for(int i = 0;\
    \ i < arr.length; i++){\n        sum += arr[i];\n        if(sum > 0){\n      \
    \      count++;\n        }\n    }\n    return count;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| a tags=c++,algorithm |>\n<code>\n#include <iostream>\n#include <vector>\n\
    #include <algorithm>\nusing namespace std;", "{\n    long count = 0;\n    for(int\
    \ i = 0; i < arr.length; i++) \n    {\n        if(arr[i] > 0) \n        {\n  \
    \          count += arr[i] % 10;\n        }\n    }\n    return count;\n}\n</code>\n\
    <|/ a tags=c++,arrays |>\n<| c |>\nThis code doesn't work. Try it with `count_nums([-1,\
    \ 11, -11])`.\n<|/ c |>\n<| c |>\nIt works fine for me. Try it yourself.\n<|/\
    \ c |>\n<| c |>\nIt doesn't work for `count_nums([-1, 11, -11])`.\n<|/ c |>\n\
    <| c |>\nIt works for me too. Try it yourself.\n<|/ c |>\n<| c |>\nIt works for\
    \ me too. Try it yourself.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n\
    using namespace std;", "{\n    long sum = 0;\n    for(int i = 0; i < arr.length;\
    \ i++) \n    {\n        if(arr[i] > 0) \n        {\n            sum += arr[i];\n\
    \        }\n    }\n    return sum;\n}\n</code>\n<|/ a |>\n<| c |>\nThis code doesn't\
    \ work. `count_nums([-1, 11, -11]) == 1` should be `count_nums([-1, 11, -11])\
    \ == 3`\n<|/ c |>\n<| c |>\nI believe this code is correct. `count_nums([-1, 11,\
    \ -11]) == 3` because `-11` has 3 digits and `-1` has 2 digits. `count_nums([1,\
    \ 1, 2]) == 3` because `1` has 3 digits and `2` has 2 digits.\n<|/ c |>\n<| c\
    \ |>\nI believe this code is correct. `count_nums([-1, 11, -11]) == 3` because\
    \ `-11` has 3 digits and `-1` has 2 digits. `count_nums([1, 1, 2]) == 3` because\
    \ `1` has 3 digits and `2` has 2 digits.\n<|/ c |>\n<| c |>\nI believe this code\
    \ is correct. `count_nums([-1, 11, -11]) == 3` because `-11` has 3 digits and\
    \ `-1` has 2 digits. `count_nums([1, 1, 2]) == 3` because `1` has 3 digits and\
    \ `2` has 2 digits.\n<|/ c |>\n<| c |>\nI believe this code is correct. `count_nums([-1,\
    \ 11, -11]) == 3` because `-11` has 3 digits and `-1` has 2 digits. `count_nums([1,\
    \ 1, 2]) == 3` because `1` has 3 digits and `2` has 2 digits.\n<|/ c |>\n<| a\
    \ tags=arrays,algorithm,c++ |>\n<code>", "{\n    long count = 0;\n    for(int\
    \ i = 0; i < arr.length; i++) \n    {\n        if(arr[i] > 0) \n        {\n  \
    \          count += arr[i] % 10;\n        }\n    }\n    return count;\n}\n</code>\n\
    <|/ a tags=arrays,c++,algorithm |>\n<| c |>\nI didn't downvote, but I suspect\
    \ that your answer was downvoted because you didn't explain what was wrong with\
    \ OP's code. Also, your answer doesn't explain what was wrong with OP's code.\
    \ Finally, your answer doesn't explain what was wrong with OP's code. Finally,\
    \ your answer doesn't explain what was wrong with OP's code. Finally, your answer\
    \ doesn't explain what was wrong with OP's code. Finally, your answer doesn't\
    \ explain what was wrong with OP's code. Finally, your answer doesn't explain\
    \ what was wrong with OP's code. Finally, your answer doesn't explain what was\
    \ wrong with OP's code. Finally, your answer doesn't explain what was wrong with\
    \ OP's code. Finally, your answer doesn't explain what was wrong with OP's code.\
    \ Finally, your answer doesn't explain what was wrong with OP's code. Finally,\
    \ your answer doesn't explain what was wrong with OP's code. Finally, your answer\
    \ doesn't explain what was wrong with OP's code. Finally, your answer doesn't\
    \ explain what was wrong with OP's code. Finally, your answer doesn't explain\
    \ what was wrong with OP's code. Finally, your answer doesn't explain what was\
    \ wrong with OP's code. Finally, your answer doesn't explain what was wrong with\
    \ OP's code. Finally, your answer doesn't explain what was wrong with OP's code.\
    \ Finally, your answer doesn't explain what was wrong with OP's code. Finally,\
    \ your answer doesn't explain what was wrong with OP's code. Finally, your answer\
    \ doesn't explain what was wrong with OP's code. Finally, your answer doesn't\
    \ explain what was wrong with OP's code. Finally, your answer doesn't explain\
    \ what was wrong with OP's code. Finally, your answer doesn't explain what was\
    \ wrong with OP's code. Finally, your answer doesn't explain what was wrong with\
    \ OP's code. Finally, your answer doesn't explain what was wrong with OP's code.\
    \ Finally, your answer doesn't explain what was wrong with OP's code. Finally,\
    \ your answer doesn't explain what was wrong with OP's code. Finally, your answer\
    \ doesn't explain what was wrong with OP's code. Finally, your answer doesn't\
    \ explain what was wrong with OP's code. Finally, your answer doesn't explain\
    \ what was wrong with OP's code. Finally, your answer ", "{\n    long count =\
    \ 0;\n    for(int i = 0; i < arr.length; i++) \n    {\n        if(arr[i] > 0)\
    \ \n        {\n            count += arr[i];\n        }\n    }\n    return count;\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| a tags=algorithm,c++,arrays |>\n<code>\n#include\
    \ <iostream>\nusing namespace std;", "{\n    long count = 0;\n    for(int i =\
    \ 0; i < arr.length; i++)\n    {\n        if(arr[i] > 0)\n        {\n        \
    \    count += arr[i];\n        }\n    }\n    return count;\n}\n</code>\n<|/ a\
    \ dscore=0 |>\n<| c |>\nThe question was about a solution that doesn't use any\
    \ loops. Your solution uses loops.\n<|/ c |>\n<| c |>\nThe question was about\
    \ a solution that doesn't use any loops. Your solution uses loops.\n<|/ c |>\n\
    <| c |>\nThe question was about a solution that doesn't use any loops. Your solution\
    \ uses loops.\n<|/ c |>\n<| c |>\nThe question was about a solution that doesn't\
    \ use any loops. Your solution uses loops.\n<|/ c |>\n<| c |>\nThe question was\
    \ about a solution that doesn't use any loops. Your solution uses loops.\n<|/\
    \ c |>\n<| a tags=algorithm,c#,arrays |>\n<code>\npublic int CountNums(int[] nums)\n\
    {\n    int count = 0;\n    bool isNegative = false;\n    for(int i = 0; i < nums.Length;\
    \ i++)\n    {\n        if(nums[i] < 0)\n        {\n            isNegative = true;\n\
    \        }\n        else if(isNegative)\n        {\n            count += nums[i];\n\
    \        }\n        else\n        {\n            count += nums[i] + 1;\n     \
    \   }\n    }\n    return count;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThe question\
    \ was about a solution that doesn't use any loops. Your solution uses loops.\n\
    <|/ c |>\n<| c |>\nThe question was about a solution that doesn't use any loops.\
    \ Your solution uses loops.\n<|/ c |>\n<| c |>\nThe question was about a solution\
    \ that doesn't use any loops. Your solution uses loops.\n<|/ c |>\n<| c |>\nThe\
    \ question was about a solution that doesn't use any loops. Your solution uses\
    \ loops.\n<|/ c |>\n<| c |>\nThe question was about a solution that doesn't use\
    \ any loops. Your solution uses loops.\n<|/ c |>\n<| a tags=algorithm,c#,arrays\
    \ |>\n<code>\npublic int CountNums(int[] nums)\n{\n    int count = 0;\n    bool\
    \ isNegative = false;\n    for(int i = 0; i < nums.Length; i++)\n    {\n     \
    \   if(nums[i] < 0)\n        {\n            isNegative = true;\n        }\n  \
    \      else if(isNegative)\n        {\n            count += nums[i];\n       \
    \ }\n        else\n", "{\n    long count = 0;\n    for(int i = 0; i < arr.length;\
    \ i++) \n    {\n        if(arr[i] > 0)\n        {\n            count += arr[i];\n\
    \        }\n    }\n    return count;\n}\n</code>\n<|/ a tags=java,arrays,algorithm\
    \ |>\n<| a dscore=0 |>\n<code>\nimport java.util.Arrays;", "{\n    long count\
    \ = 0;\n    for(int i = 0; i < arr.length; i++) \n    {\n        long sum = 0;\n\
    \        for(int j = 0; j < arr[i]; j++) \n        {\n            sum += arr[i]\
    \ % 10;\n            arr[i] /= 10;\n        }\n        if(sum > 0) \n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}\n</code>\n<|/ a\
    \ dscore=1 |>\n<| c |>\nThanks for your answer. Can you please explain why you\
    \ used `long sum = 0;` instead of `int sum = 0;`?\n<|/ c |>\n<| c |>\nBecause\
    \ `int` can only hold numbers up to `2147483647`, whereas `long` can hold numbers\
    \ up to `9223372036854775807`. So `int` will overflow the number when `arr[i]\
    \ % 10` returns `0`, whereas `long` will not. `int` will also overflow when `arr[i]\
    \ / 10` returns `0`, whereas `long` will not. `int` will also overflow when `sum\
    \ > 0` returns `true`, whereas `long` will not. `int` will also overflow when\
    \ `arr[i] / 10` returns `0`, whereas `long` will not. `int` will also overflow\
    \ when `arr[i] % 10` returns `0`, whereas `long` will not. `int` will also overflow\
    \ when `arr[i] / 10` returns `0`, whereas `long` will not.\n<|/ c |>\n<| c |>\n\
    Thanks for your explanation. Can you please explain why you used `long sum = 0;`\
    \ instead of `int sum = 0;`?\n<|/ c |>\n<| c |>\nBecause `int` can only hold numbers\
    \ up to `2147483647`, whereas `long` can hold numbers up to `9223372036854775807`.\
    \ So `int` will overflow the number when `arr[i] % 10` returns `0`, whereas `long`\
    \ will not. `int` will also overflow when `arr[i] / 10` returns `0`, whereas `long`\
    \ will not. `int` will also overflow when `sum > 0` returns `true`, whereas `long`\
    \ will not. `int` will also overflow when `arr[i] / 10` returns `0`, whereas `long`\
    \ will not. `int` will also overflow when `arr[i] % 10` returns `0`, whereas `long`\
    \ will not. `int` ", "{\n    long count = 0;\n    for(int i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] > 0){\n            count += arr[i];\n        }\n  \
    \  }\n    return count;\n}\n</code>\n<|/ a tags=algorithm,java |>\n<| a dscore=0\
    \ |>\n<code>\npublic static int countDigits(int n) {\n    int count = 0;\n   \
    \ while (n > 0) {\n        count += n % 10;\n        n /= 10;\n    }\n    return\
    \ count;\n}\n</code>\n<|/ a tags=algorithm,java |>\n<| c |>\nThis doesn't work\
    \ if the number is negative.\n<|/ c |>\n<| c |>\nThis doesn't work if the number\
    \ is negative.\n<|/ c |>\n<| a tags=algorithm,java |>\n<code>\npublic int countDigits(int\
    \ n) {\n    int count = 0;\n    while (n > 0) {\n        count += n % 10;\n  \
    \      n /= 10;\n    }\n    return count;\n}\n</code>\n<|/ a dscore=0 |>\n<| c\
    \ |>\nThis doesn't work if the number is negative.\n<|/ c |>\n<| c |>\nThis doesn't\
    \ work if the number is negative.\n<|/ c |>\n<| a |>\n<code>\npublic int countDigits(int\
    \ n) {\n    int count = 0;\n    while (n > 0) {\n        count += n % 10;\n  \
    \      n /= 10;\n    }\n    return count;\n}\n</code>\n<|/ a tags=algorithm,java\
    \ dscore=0 |>\n<| c |>\nThis doesn't work if the number is negative.\n<|/ c |>\n\
    <| a tags=algorithm,java |>\n<code>\npublic int countDigits(int n) {\n    int\
    \ count = 0;\n    while (n > 0) {\n        count += n % 10;\n        n /= 10;\n\
    \    }\n    return count;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't\
    \ work if the number is negative.\n<|/ c |>\n<| a dscore=0 |>\n<code>\npublic\
    \ int countDigits(int n) {\n    int count = 0;\n    while (n > 0) {\n        count\
    \ += n % 10;\n        n /= 10;\n    }\n    return count;\n}\n</code>\n<|/ a tags=algorithm,java\
    \ |>\n<| c |>\nThis doesn't work if the number is negative.\n<|/ c |>\n<| a |>\n\
    <code>\npublic int countDigits(int n) {\n    int count = 0;\n    while (n > 0)\
    \ {\n        count += n % 10;\n        n /= 10;\n    }\n    return count;\n}\n\
    </code>\n<|/ a tags=algorithm,java dscore=0 |>\n<| c |>\nThis doesn't work if\
    \ the number is negative.\n<|/ ", "{\n    long count = 0;\n    for(int i = 0;\
    \ i < arr.length; i++)\n    {\n        if(arr[i] > 0)\n        {\n           \
    \ count += arr[i];\n        }\n    }\n    return count;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nThis doesn't work. Try it with `count_nums([-1, 11, -11])`.\n<|/\
    \ c |>\n<| c |>\nI tested it and it works fine. Did you try it?\n<|/ c |>\n<|\
    \ c |>\nYes, I did. `count_nums([-1, 11, -11])` returns `1`, not `3`.\n<|/ c |>\n\
    <| c |>\nOh I see what you mean. Yeah I see what you mean. I'll fix it.\n<|/ c\
    \ |>\n<| c |>\nI fixed it now. Sorry about that.\n<|/ c |>\n<| a dscore=0 |>\n\
    <code>\nimport java.util.Arrays;", "{\n    long count = 0;\n    for(int i = 0;\
    \ i < arr.length; i++){\n        if(arr[i] > 0){\n            count += arr[i];\n\
    \        }\n    }\n    return count;\n}", "{\n    int sum = 0;\n    for(int i\
    \ = 0; i < arr.length; i++) \n    {\n        sum += arr[i];\n    }\n    return\
    \ sum;\n}\n</code>\n<|/ a tags=arrays,c#,algorithm |>\n<| c |>\nThis doesn't work.\
    \ `count_nums([-1, 11, -11]) == 1` should be `2`.\n<|/ c |>\n<| c |>\nI missed\
    \ that one. Thanks for pointing it out. I've edited the answer to fix it.\n<|/\
    \ c |>\n<| a dscore=0 |>\n<code>\npublic int CountNums(int[] arr)\n{\n    int\
    \ sum = 0;\n    for(int i = 0; i < arr.Length; i++)\n    {\n        sum += arr[i];\n\
    \    }\n    return sum;\n}\n</code>\n<|/ a tags=arrays,c#,algorithm |>\n<| a tags=arrays,c#,algorithm\
    \ |>\n<code>\npublic int CountNums(int[] arr)\n{\n    int sum = 0;\n    for(int\
    \ i = 0; i < arr.Length; i++)\n    {\n        sum += arr[i];\n    }\n    return\
    \ sum;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=arrays,c#,algorithm |>\n<code>\n\
    public int CountNums(int[] arr)\n{\n    int sum = 0;\n    for(int i = 0; i < arr.Length;\
    \ i++)\n    {\n        sum += arr[i];\n    }\n    return sum;\n}\n</code>\n<|/\
    \ a dscore=0 |>\n<| a tags=arrays,c#,algorithm |>\n<code>\npublic int CountNums(int[]\
    \ arr)\n{\n    int sum = 0;\n    for(int i = 0; i < arr.Length; i++)\n    {\n\
    \        sum += arr[i];\n    }\n    return sum;\n}\n</code>\n<|/ a dscore=0 |>\n\
    <| a dscore=0 |>\n<code>\npublic int CountNums(int[] arr)\n{\n    int sum = 0;\n\
    \    for(int i = 0; i < arr.Length; i++)\n    {\n        sum += arr[i];\n    }\n\
    \    return sum;\n}\n</code>\n<|/ a tags=arrays,c#,algorithm |>\n<| a tags=arrays,c#,algorithm\
    \ |>\n<code>\npublic int CountNums(int[] arr)\n{\n    int sum = 0;\n    for(int\
    \ i = 0; i < arr.Length; i++)\n    {\n        sum += arr[i];\n    }\n    return\
    \ sum;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\npublic int CountNums(int[]\
    \ arr)\n{\n    int sum = 0;\n    for(int i = 0; i < arr.Length; i++)\n    {\n\
    \        sum += arr[i];\n    }\n    return sum", "{\n    long count = 0;\n   \
    \ for(int i = 0; i < arr.length; i++)\n    {\n        if(arr[i] > 0)\n       \
    \ {\n            count += arr[i];\n        }\n    }\n    return count;\n}\n</code>\n\
    <|/ a tags=c++,algorithm,arrays |>\n<| a tags=c++,algorithm,arrays |>\n<code>\n\
    #include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace\
    \ std;", "{\n    long count = 0;\n    for(int i = 0; i < arr.length; i++) \n \
    \   {\n        if(arr[i] > 0) \n        {\n            count += arr[i] % 10;\n\
    \        }\n    }\n    return count;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\n\
    This does not provide an answer to the question. To critique or request clarification\
    \ from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/11302783)\n\
    <|/ c |>\n<| c |>\nIt does provide an answer to the question. He asked how to\
    \ count the number of positive numbers in a given array. He also asked how to\
    \ count the number of negative numbers in a given array. He also asked how to\
    \ count the number of positive and negative numbers in a given array. He also\
    \ asked how to count the number of positive and negative numbers in a given array.\
    \ He also asked how to count the number of positive and negative numbers in a\
    \ given array. He also asked how to count the number of positive and negative\
    \ numbers in a given array. He also asked how to count the number of positive\
    \ and negative numbers in a given array. He also asked how to count the number\
    \ of positive and negative numbers in a given array. He also asked how to count\
    \ the number of positive and negative numbers in a given array. He also asked\
    \ how to count the number of positive and negative numbers in a given array. He\
    \ also asked how to count the number of positive and negative numbers in a given\
    \ array. He also asked how to count the number of positive and negative numbers\
    \ in a given array. He also asked how to count the number of positive and negative\
    \ numbers in a given array. He also asked how to count the number of positive\
    \ and negative numbers in a given array. He also asked how to count the number\
    \ of positive and negative numbers in a given array. He also asked how to count\
    \ the number of positive and negative numbers in a given array. He also asked\
    \ how to count the number of positive and negative numbers in a given array. He\
    \ also asked how to count the number of positive and negative numbers in a given\
    \ array. He also asked how to count the number of positive and negative numbers\
    \ in a given array. He also asked how to count the number of positive and negative\
    \ numbers in a given array. He also asked how to count the number of positive\
    \ and negative numbers in a given array. He also asked how to count the number\
    \ of positive and negative numbers in a given array. He also asked how to count\
    \ the number of positive and negative numbers in a given array. He also asked\
    \ how to count the number of positive and negative numbers in a given array. He\
    \ also asked how to count the number of positive and negative number", "{\n  \
    \  long count = 0;\n    for (int i = 0; i < arr.length; i++) \n    {\n       \
    \ if (arr[i] > 0) \n        {\n            count += arr[i] % 10;\n        }\n\
    \    }\n    return count;\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=algorithm,c++\
    \ |>\n<code>\n#include <iostream>\nusing namespace std;", "{\n    long result\
    \ = 0;\n    for(int i = 0; i < arr.length; i++)\n    {\n        if(arr[i] > 0)\n\
    \        {\n            result += arr[i];\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=c++,algorithm |>\n<| c |>\nThe question was tagged C++,\
    \ so why not use STL?\n<|/ c |>\n<| c |>\nI agree with you, but I thought that\
    \ STL would be more readable and easier to understand for beginners. I agree that\
    \ STL would be more efficient, but I thought that OP would learn something from\
    \ his own code.\n<|/ c |>\n<| c |>\nI agree with you, but I thought that STL would\
    \ be more readable and easier to understand for beginners. I agree that STL would\
    \ be more efficient, but I thought that OP would learn something from his own\
    \ code.\n<|/ c |>\n<| c |>\nI agree with you, but I thought that STL would be\
    \ more readable and easier to understand for beginners. I agree that STL would\
    \ be more efficient, but I thought that OP would learn something from his own\
    \ code.\n<|/ c |>\n<| c |>\nI agree with you, but I thought that STL would be\
    \ more readable and easier to understand for beginners. I agree that STL would\
    \ be more efficient, but I thought that OP would learn something from his own\
    \ code.\n<|/ c |>\n<| a tags=c++,algorithm |>\n<code>\n#include <iostream>\n#include\
    \ <vector>\n#include <algorithm>\nusing namespace std;", "{\n    long count =\
    \ 0;\n    for(int i = 0; i < arr.length; i++){\n        if(arr[i] > 0){\n    \
    \        count += arr[i];\n        }\n    }\n    return count;\n}\n</code>\n<|/\
    \ a tags=java,arrays,algorithm |>\n<| a tags=java,arrays,algorithm |>\n<code>\n\
    public int countDigits(int[] arr) {\n    int count = 0;\n    for (int i = 0; i\
    \ < arr.length; i++) {\n        if (arr[i] > 0) {\n            count += arr[i];\n\
    \        }\n    }\n    return count;\n}\n</code>\n<|/ a dscore=0 |>\n<| a |>\n\
    <code>\npublic int countDigits(int[] arr) {\n    int count = 0;\n    for (int\
    \ i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            count\
    \ += arr[i];\n        }\n    }\n    return count;\n}\n</code>\n<|/ a tags=java,arrays,algorithm\
    \ dscore=0 |>\n<| a dscore=0 |>\n<code>\npublic int countDigits(int[] arr) {\n\
    \    int count = 0;\n    for (int i = 0; i < arr.length; i++) {\n        if (arr[i]\
    \ > 0) {\n            count += arr[i];\n        }\n    }\n    return count;\n\
    }\n</code>\n<|/ a tags=java,arrays,algorithm |>\n<| a tags=java,arrays,algorithm\
    \ |>\n<code>\npublic int countDigits(int[] arr) {\n    int count = 0;\n    for\
    \ (int i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            count\
    \ += arr[i];\n        }\n    }\n    return count;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| a tags=java,arrays,algorithm |>\n<code>\npublic int countDigits(int[]\
    \ arr) {\n    int count = 0;\n    for (int i = 0; i < arr.length; i++) {\n   \
    \     if (arr[i] > 0) {\n            count += arr[i];\n        }\n    }\n    return\
    \ count;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\npublic int\
    \ countDigits(int[] arr) {\n    int count = 0;\n    for (int i = 0; i < arr.length;\
    \ i++) {\n        if (arr[i] > 0) {\n            count += arr[i];\n        }\n\
    \    }\n    return count;\n}\n</code>\n<|/ a tags=java,arrays,algorithm |>\n<|\
    \ a tags=java,arrays,algorithm |>\n<code>\npublic int countDigits(int[] arr) {\n\
    \    int count = 0;\n    for (int i = 0; i < arr.length; i++) {\n        if (arr[i]\
    \ > 0) {\n            count += arr[i];\n        }\n    }\n    return count;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\npublic int countDigits(int[]\
    \ arr) {\n    int count = 0;\n    for (int i = 0; i < arr.length; i++) {\n   \
    \     if (arr[i] > 0) {\n            count += ", "{\n    long result = 0;\n  \
    \  for(int i = 0; i < arr.length; i++){\n        if(arr[i] > 0){\n           \
    \ result += arr[i];\n        }\n    }\n    return result;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nThis doesn't work. `count_nums([1, 1, 2]) == 3` should be `count_nums([1,\
    \ 2, 1]) == 3`.\n<|/ c |>\n<| c |>\nI missed that case. Thanks for pointing it\
    \ out. I've updated the answer.\n<|/ c |>\n<| c |>\nI still don't think this works.\
    \ `count_nums([-1, 11, -11]) == 1` should be `count_nums([-1, 11, -10, -11]) ==\
    \ 3`.\n<|/ c |>\n<| c |>\nI missed that case as well. Thanks for pointing it out.\
    \ I've updated the answer.\n<|/ c |>\n<| a dscore=0 |>\n<code>\nimport java.util.Arrays;\n\
    import java.util.List;", "{\n    long count = 0;\n    for(int i = 0; i < arr.length;\
    \ i++) \n    {\n        if(arr[i] > 0) \n        {\n            count += arr[i]\
    \ % 10;\n        }\n    }\n    return count;\n}\n</code>\n<|/ a tags=c++,arrays\
    \ |>\n<| c |>\n`count_nums(arr) == count_nums(arr) + count_nums(arr) - count_nums(arr)\
    \ % 10` should be `count_nums(arr) == count_nums(arr) + count_nums(arr) - count_nums(arr)\
    \ % 10`\n<|/ c |>\n<| c |>\nThanks, I fixed it.\n<|/ c |>\n<| c |>\n`count_nums(arr)\
    \ == count_nums(arr) + count_nums(arr) - count_nums(arr) % 10` should be `count_nums(arr)\
    \ == count_nums(arr) + count_nums(arr) - count_nums(arr) % 10`\n<|/ c |>\n<| c\
    \ |>\nThanks, I fixed it.\n<|/ c |>\n<| c |>\n`count_nums(arr) == count_nums(arr)\
    \ + count_nums(arr) - count_nums(arr) % 10` should be `count_nums(arr) == count_nums(arr)\
    \ + count_nums(arr) - count_nums(arr) % 10`\n<|/ c |>\n<| a tags=c++,arrays |>\n\
    <code>\n#include <iostream>\n#include <vector>\n#include <algorithm>\n#include\
    \ <numeric>", "{\n    long sum = 0;\n    for(long i = 0; i < arr.length; i++)\n\
    \    {\n        sum += arr[i];\n    }\n    return sum;\n}\n</code>\n<|/ a tags=c#,algorithm,arrays\
    \ |>\n<| c |>\nThis doesn't work. Try it with `count_nums([-1, 11, -11])`.\n<|/\
    \ c |>\n<| c |>\nI believe it does. I tested it with `count_nums([-1, 11, -11])`\
    \ and it returned `1`.\n<|/ c |>\n<| c |>\nYes, it does. I tested it with `count_nums([-1,\
    \ 11, -11])` and it returned `1`.\n<|/ c |>\n<| c |>\nI tested it with `count_nums([-1,\
    \ 11, -11])` and it returned `1`.\n<|/ c |>\n<| c |>\nI tested it with `count_nums([-1,\
    \ 11, -11])` and it returned `1`.\n<|/ c |>\n<| a |>\n<code>", "{\n    long count\
    \ = 0;\n    for(int i = 0; i < arr.length; i++) \n    {\n        if(arr[i] > 0)\
    \ \n        {\n            count += arr[i] % 10;\n        }\n    }\n    return\
    \ count;\n}\n</code>\n<|/ a tags=c++,arrays,algorithm |>\n<| c |>\nThis doesn't\
    \ work. Try it with `count_nums([-1, 1, -10, -100, -1000, -1000000000])`\n<|/\
    \ c |>\n<| c |>\nYes, it does. Try it with `count_nums([-1, 1, -10, -100, -1000,\
    \ -1000000000])`\n<|/ c |>\n<| c |>\nIt doesn't work. Try it with `count_nums([-1,\
    \ 1, -10, -100, -1000, -1000000000])`\n<|/ c |>\n<| c |>\nIt does work. Try it\
    \ with `count_nums([-1, 1, -10, -100, -1000, -1000000000])`\n<|/ c |>\n<| c |>\n\
    It doesn't work. Try it with `count_nums([-1, 1, -10, -100, -1000, -1000000000])`\n\
    <|/ c |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\nusing namespace std;",
  "{\n    long sum = 0;\n    for(int i = 0; i < arr.length; i++) \n    {\n       \
    \ sum += arr[i];\n    }\n    return sum;\n}", "{\n    long sum = 0;\n    for(int\
    \ i = 0; i < arr.length; i++){\n        sum += arr[i];\n    }\n    return sum;\n\
    }\n</code>\n<|/ a tags=c++,algorithm,arrays |>\n<| c |>\nThis doesn't work. Try\
    \ it with `count_nums([-1, 11, -11])`.\n<|/ c |>\n<| c |>\nI missed that case.\
    \ Thanks for pointing it out.\n<|/ c |>\n<| c |>\nI added a solution that doesn't\
    \ require any additional libraries.\n<|/ c |>\n<| a dscore=0 |>\n<code>", "{\n\
    \    long count = 0;\n    long sum = 0;\n    for(int i = 0; i < arr.length; i++)\n\
    \    {\n        sum += arr[i];\n        if(sum > 0)\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}\n</code>\n<|/ a tags=c++,arrays |>\n<|\
    \ c |>\nThis code does not work if you input negative numbers. For example, `count_nums([-1,11,-11])`\
    \ returns `1` instead of `3`.\n<|/ c |>\n<| c |>\nI tested it and it works fine.\
    \ Can you give an example where it fails?\n<|/ c |>\n<| c |>\nI tested it and\
    \ it works fine. Can you give an example where it fails?\n<|/ c |>\n<| c |>\n\
    I tested it and it works fine. Can you give an example where it fails?\n<|/ c\
    \ |>\n<| c |>\nI tested it and it works fine. Can you give an example where it\
    \ fails?\n<|/ c |>\n<| a tags=c++,arrays |>\n<code>\n#include <iostream>\n#include\
    \ <vector>\n#include <algorithm>\nusing namespace std;", "{\n    long sum = 0;\n\
    \    for(int i = 0; i < arr.length; i++){\n        if(arr[i] > 0){\n         \
    \   sum += arr[i];\n        }\n    }\n    return sum;\n}\n</code>\n<|/ a tags=c++,arrays\
    \ |>\n<| c |>\nThe question was about C++, not C. `std::array` doesn't exist in\
    \ C++.\n<|/ c |>\n<| c |>\nI didn't realize that std::array was a c++ thing. Thanks\
    \ for pointing that out.\n<|/ c |>\n<| c |>\n`std::array` exists in C++, it's\
    \ just not part of the standard library.\n<|/ c |>\n<| c |>\n`std::array` is part\
    \ of the C++ standard library, but it's not part of the language itself. It's\
    \ a library of templates and classes that is part of the C++ standard library.\n\
    <|/ c |>\n<| c |>\nI see. Thanks for the clarification.\n<|/ c |>\n<| a dscore=0\
    \ |>\n<code>\n#include <iostream>\nusing namespace std;", "{\n    int count =\
    \ 0;\n    for(int i = 0; i < arr.length; i++) \n    {\n        if(arr[i] > 0)\
    \ \n        {\n            count += arr[i] % 10;\n        }\n    }\n    return\
    \ count;\n}\n</code>\n<|/ a tags=c++,arrays |>\n<| c |>\nThis doesn't work if\
    \ you have a negative number in the array. Try it with `count_nums([-1, 11, -11])`\n\
    <|/ c |>\n<| c |>\nI didn't test it but I think it should work. Try it yourself.\n\
    <|/ c |>\n<| c |>\nI tested it and it doesn't work. Try it with `count_nums([-1,\
    \ 11, -11])`\n<|/ c |>\n<| c |>\nI tested it and it works fine. Try it yourself.\n\
    <|/ c |>\n<| c |>\nI tested it and it works fine. Try it yourself.\n<|/ c |>\n\
    <| a dscore=0 |>\n<code>\n#include <iostream>\n#include <vector>\n#include <algorithm>\n\
    #include <numeric>\nusing namespace std;", "{\n    long result = 0;\n    for(int\
    \ i = 0; i < arr.length; i++)\n    {\n        if(arr[i] > 0)\n        {\n    \
    \        result += arr[i];\n        }\n    }\n    return result;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nThis doesn't work. Try it with `count_nums([-1, 11,\
    \ -11])`.\n<|/ c |>\n<| c |>\nIt works, I tested it before posting it. The only\
    \ thing I changed was the return type from long to int and I added a return 0\
    \ at the end. Try it now.\n<|/ c |>\n<| c |>\nIt doesn't work. Try it with `count_nums([-1,\
    \ 11, -11])`.\n<|/ c |>\n<| c |>\nIt works, I tested it before posting it. The\
    \ only thing I changed was the return type from long to int and I added a return\
    \ 0 at the end. Try it now.\n<|/ c |>\n<| c |>\nIt doesn't work. Try it with `count_nums([-1,\
    \ 11, -11])`.\n<|/ c |>\n<| a dscore=0 |>\n<code>\npublic int countDigits(int\
    \ n) {\n    int count = 0;\n    while (n > 0) {\n        n /= 10;\n        count++;\n\
    \    }\n    return count;\n}\n</code>\n<|/ a tags=java,algorithm |>\n<| c |>\n\
    This doesn't work. Try it with `countDigits(-1)`.\n<|/ c |>\n<| c |>\nIt works,\
    \ I tested it before posting it. The only thing I changed was the return type\
    \ from int to long and I added a return 0 at the end. Try it now.\n<|/ c |>\n\
    <| c |>\nIt doesn't work. Try it with `countDigits(-1)`.\n<|/ c |>\n<| c |>\n\
    It works, I tested it before posting it. The only thing I changed was the return\
    \ type from int to long and I added a return 0 at the end. Try it now.\n<|/ c\
    \ |>\n<| c |>\nIt doesn't work. Try it with `countDigits(-1)`.\n<|/ c |>\n<| a\
    \ dscore=0 |>\n<code>\npublic int countDigits(int n) {\n    int count = 0;\n \
    \   while (n > 0) {\n        n /= 10;\n        count++;\n    }\n    return count;\n\
    }\n</code>\n<|/ a tags=java,algorithm |>\n<| c |>\nThis doesn't work. Try it with\
    \ `countDigits(-1)`.\n<|/ c |>\n<| c |>\nIt works, I ", "{\n    long count = 0;\n\
    \    for (int i = 0; i < arr.length; i++) \n    {\n        long num = arr[i];\n\
    \        if (num < 0) \n        {\n            num = -num;\n        }\n      \
    \  long sum = 0;\n        while (num /= 10) \n        {\n            sum += num\
    \ % 10;\n            num /= 10;\n        }\n        if (sum > 0) \n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}\n</code>\n<|/ a\
    \ dscore=1 |>\n<| c |>\nThanks for your answer. Can you please explain me why\
    \ you used the while loop?\n<|/ c |>\n<| c |>\nThe while loop iterates through\
    \ the digits of the number until it finds a digit that is greater than 0. The\
    \ `num` variable is initialized to the first element of the array and each time\
    \ through the loop it takes the next digit and adds it to the sum.\n<|/ c |>\n\
    <| c |>\nI understand now. Thanks a lot\n<|/ c |>\n<| a tags=java,arrays |>\n\
    <code>\nimport java.util.Arrays;", "{\n    long count = 0;\n    for(long i : arr)\
    \ \n    {\n        if(i >= 0) \n        {\n            count += std.math.mod(i,\
    \ 10);\n        }\n    }\n    return count;\n}\n</code>\n<|/ a dscore=1 |>\n<|\
    \ a tags=c++,algorithm |>\n<code>\n#include <iostream>\n#include <vector>\n#include\
    \ <algorithm>\nusing namespace std;", "{\n    long result = 0;\n    for(int i\
    \ = 0; i < arr.length; i++)\n    {\n        if(arr[i] > 0)\n        {\n      \
    \      result += arr[i];\n        }\n    }\n    return result;\n}\n</code>\n<|/\
    \ a |>\n<| a tags=c++,algorithm |>\n<code>\n#include <iostream>\n#include <vector>\n\
    #include <algorithm>\nusing namespace std;", "{\n    long count = 0;\n    for(int\
    \ i = 0; i < arr.length; i++) \n    {\n        if(arr[i] > 0)\n        {\n   \
    \         count += arr[i] / 10;\n            count += arr[i] % 10;\n        }\n\
    \    }\n    return count;\n}\n</code>\n<|/ a tags=java,arrays,algorithm,c++ |>\n\
    <| c |>\nThis doesn't work. Try it with `count_nums([-1, 11, -11])`\n<|/ c |>\n\
    <| c |>\nIt works fine for me. Try it yourself.\n<|/ c |>\n<| c |>\nIt doesn't\
    \ work for me. Try it with `count_nums([-1, 11, -11])`\n<|/ c |>\n<| c |>\nIt\
    \ works fine for me. Try it yourself.\n<|/ c |>\n<| c |>\nIt doesn't work for\
    \ me. Try it with `count_nums([-1, 11, -11])`\n<|/ c |>\n<| a tags=java,arrays,algorithm,c++\
    \ |>\n<code>\npublic static int count_nums(int[] arr) {\n    int count = 0;\n\
    \    for (int i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n     \
    \       count += arr[i] / 10;\n            count += arr[i] % 10;\n        }\n\
    \    }\n    return count;\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThis doesn't\
    \ work. Try it with `count_nums([-1, 11, -11])`\n<|/ c |>\n<| c |>\nIt works fine\
    \ for me. Try it yourself.\n<|/ c |>\n<| c |>\nIt doesn't work for me. Try it\
    \ with `count_nums([-1, 11, -11])`\n<|/ c |>\n<| c |>\nIt works fine for me. Try\
    \ it yourself.\n<|/ c |>\n<| c |>\nIt doesn't work for me. Try it with `count_nums([-1,\
    \ 11, -11])`\n<|/ c |>\n<| a tags=java,arrays,algorithm,c++ |>\n<code>\npublic\
    \ static int count_nums(int[] arr) {\n    int count = 0;\n    for (int i = 0;\
    \ i < arr.length; i++) {\n        if (arr[i] > 0) {\n            count += arr[i]\
    \ / 10;\n            count += arr[i] % 10;\n        }\n    }\n    return count;\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThis doesn't work. Try it with `count_nums([-1,\
    \ 11, -11])`\n<|/ c |>\n<| c |>\nIt works fine for me. Try it yourself.\n<|/ c\
    \ |>\n<| c |>\nIt doesn't work for ", "{\n    long count = 0;\n    for(int i =\
    \ 0; i < arr.length; i++){\n        if(arr[i] > 0){\n            count += arr[i];\n\
    \        }\n    }\n    return count;\n}\n</code>\n<|/ a tags=c++,arrays |>\n<|\
    \ c |>\nThis doesn't work. Try it with `count_nums([-1, 11, -11])`.\n<|/ c |>\n\
    <| c |>\nI didn't see that requirement in the question. I'll update my answer\
    \ to account for that requirement.\n<|/ c |>\n<| c |>\nI updated my answer to\
    \ account for negative numbers. Thanks for pointing that out.\n<|/ c |>\n<| a\
    \ tags=c++,arrays |>\n<code>\n#include <iostream>\n#include <vector>\n#include\
    \ <algorithm>", "{\n    long sum = 0;\n    long sign = 1;\n    for(int i = 0;\
    \ i < arr.length; i++)\n    {\n        sum += sign * arr[i];\n        sign *=\
    \ -1;\n    }\n    return sum;\n}\n</code>\n<|/ a tags=c++,algorithm,arrays |>\n\
    <| c |>\nThis doesn't work. Try it with `count_nums([-1, 11, -11])`.\n<|/ c |>\n\
    <| c |>\nYeah, I missed that case. Thanks for pointing it out. I'll edit my answer.\n\
    <|/ c |>\n<| c |>\nI edited my answer to include a solution that works with negative\
    \ numbers as well.\n<|/ c |>\n<| c |>\nI edited my answer to include a solution\
    \ that works with negative numbers as well.\n<|/ c |>\n<| c |>\nI edited my answer\
    \ to include a solution that works with negative numbers as well.\n<|/ c |>\n\
    <| a dscore=0 |>\n<code>\n#include <iostream>\n#include <vector>\n#include <algorithm>\n\
    using namespace std;", "{\n    long sum = 0;\n    for(int i = 0; i < arr.length;\
    \ i++){\n        sum += arr[i];\n    }\n    return sum;\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| a tags=c#,algorithm,arrays |>\n<code>\npublic int CountDigits(int[] arr)\n\
    {\n    int sum = 0;\n    foreach (int i in arr)\n    {\n        sum += i;\n  \
    \  }\n    return sum;\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n\
    public int CountDigits(int[] arr)\n{\n    int sum = 0;\n    foreach (int i in\
    \ arr)\n    {\n        sum += i;\n    }\n    return sum;\n}\n</code>\n<|/ a tags=c#,algorithm,arrays\
    \ |>\n<| a |>\n<code>\npublic int CountDigits(int[] arr)\n{\n    int sum = 0;\n\
    \    foreach (int i in arr)\n    {\n        sum += i;\n    }\n    return sum;\n\
    }\n</code>\n<|/ a dscore=1 tags=c#,algorithm,arrays |>\n<| a tags=c#,algorithm,arrays\
    \ |>\n<code>\npublic int CountDigits(int[] arr)\n{\n    int sum = 0;\n    foreach\
    \ (int i in arr)\n    {\n        sum += i;\n    }\n    return sum;\n}\n</code>\n\
    <|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\npublic int CountDigits(int[] arr)\n\
    {\n    int sum = 0;\n    foreach (int i in arr)\n    {\n        sum += i;\n  \
    \  }\n    return sum;\n}\n</code>\n<|/ a tags=c#,algorithm,arrays |>\n<| a dscore=1\
    \ |>\n<code>\npublic int CountDigits(int[] arr)\n{\n    int sum = 0;\n    foreach\
    \ (int i in arr)\n    {\n        sum += i;\n    }\n    return sum;\n}\n</code>\n\
    <|/ a tags=c#,algorithm,arrays |>\n<| a tags=c#,algorithm,arrays |>\n<code>\n\
    public int CountDigits(int[] arr)\n{\n    int sum = 0;\n    foreach (int i in\
    \ arr)\n    {\n        sum += i;\n    }\n    return sum;\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| a tags=c#,algorithm,arrays |>\n<code>\npublic int CountDigits(int[] arr)\n\
    {\n    int sum = 0;\n    foreach (int i in arr)\n    {\n        sum += i;\n  \
    \  }\n    return sum;\n}\n</code>\n<|/ a dscore=1 |>\n<| a ", "{\n    long count\
    \ = 0;\n    for(int i = 0; i < arr.length; i++){\n        if(arr[i] > 0){\n  \
    \          count += arr[i];\n        }\n    }\n    return count;\n}\n</code>\n\
    <|/ a tags=algorithm,arrays,c++,c |>\n<| c |>\nThis is not an answer, but a comment.\
    \ Try to explain why you think this works.\n<|/ c |>\n<| c |>\nI added some explanation.\n\
    <|/ c |>\n<| c |>\nThis doesn't work. Try it with `count_nums([-1, 11, -11])`\n\
    <|/ c |>\n<| c |>\nI added a test case for count_nums([-1, 11, -11])\n<|/ c |>\n\
    <| c |>\nI added a test case for count_nums([-1, 11, -11])\n<|/ c |>\n<| a dscore=0\
    \ |>\n<code>\n#include <iostream>\n#include <vector>\n#include <algorithm>\nusing\
    \ namespace std;", "{\n    int count = 0;\n    for(int i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] > 0){\n            count += arr[i] % 10;\n        }\n\
    \    }\n    return count;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't\
    \ work. `count_nums([-1, 11, -11]) == 1` should be `2`.\n<|/ c |>\n<| c |>\nI\
    \ didn't see that requirement in the question. I'll update my answer accordingly.\n\
    <|/ c |>\n<| a dscore=0 |>\n<code>\npublic int countDigits(int[] arr) {\n    int\
    \ count = 0;\n    for(int i = 0; i < arr.length; i++){\n        if(arr[i] > 0){\n\
    \            count += arr[i] % 10;\n        }\n    }\n    return count;\n}\n</code>\n\
    <|/ a tags=java,arrays |>\n<| c |>\nThis doesn't work. `count_nums([-1, 11, -11])\
    \ == 1` should be `2`.\n<|/ c |>\n<| a tags=java,arrays |>\n<code>\npublic int\
    \ countDigits(int[] arr) {\n    int count = 0;\n    for(int i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] > 0){\n            count += arr[i] % 10;\n        }\n\
    \    }\n    return count;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't\
    \ work. `count_nums([-1, 11, -11]) == 1` should be `2`.\n<|/ c |>\n<| c |>\nThis\
    \ doesn't work. `count_nums([-1, 11, -11]) == 1` should be `2`.\n<|/ c |>\n<|\
    \ a tags=java,arrays |>\n<code>\npublic int countDigits(int[] arr) {\n    int\
    \ count = 0;\n    for(int i = 0; i < arr.length; i++){\n        if(arr[i] > 0){\n\
    \            count += arr[i] % 10;\n        }\n    }\n    return count;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nThis doesn't work. `count_nums([-1, 11, -11]) == 1`\
    \ should be `2`.\n<|/ c |>\n<| a tags=java,arrays |>\n<code>\npublic int countDigits(int[]\
    \ arr) {\n    int count = 0;\n    for(int i = 0; i < arr.length; i++){\n     \
    \   if(arr[i] > 0){\n            count += arr[i] % 10;\n        }\n    }\n   \
    \ return count;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't work. `count_nums([-1,\
    \ 11, -11]) == 1` should be `2`.\n<|/ c |>\n<|", "{\n    long count = 0;\n   \
    \ for(int i = 0; i < arr.length; i++)\n    {\n        if(arr[i] > 0)\n       \
    \ {\n            count += arr[i];\n        }\n    }\n    return count;\n}\n</code>\n\
    <|/ a tags=c++,arrays |>\n<| c |>\nThis code doesn't work. Try it with `count_nums([-1,\
    \ 11, -11])`.\n<|/ c |>\n<| c |>\nThanks for pointing that out. I've updated the\
    \ code to handle negative numbers.\n<|/ c |>\n<| c |>\nThanks for your efforts.\
    \ But I guess you misunderstood my question. My question was to find the number\
    \ of positive numbers in an array. Your code will give me the total number of\
    \ positive numbers in the array. I need to find the number of positive numbers\
    \ in the array which has sum of digits > 0.\n<|/ c |>\n<| c |>\nOh, I see. Sorry\
    \ about that. I'll update my answer in a bit.\n<|/ c |>\n<| c |>\nThanks for your\
    \ efforts. But I guess you misunderstood my question. My question was to find\
    \ the number of positive numbers in an array. Your code will give me the total\
    \ number of positive numbers in the array. I need to find the number of positive\
    \ numbers in the array which has sum of digits > 0.\n<|/ c |>\n<| a tags=c++,arrays\
    \ |>\n<code>\n#include <iostream>\n#include <vector>\n#include <algorithm>\nusing\
    \ namespace std;", "{\n    long sum = 0;\n    for(int i = 0; i < arr.length; i++){\n\
    \        sum += arr[i];\n    }\n    return sum;\n}\n</code>\n<|/ a tags=c#,algorithm\
    \ |>\n<| a tags=c#,algorithm |>\n<code>\npublic int CountDigits(int number)\n\
    {\n    int count = 0;\n    while (number > 0)\n    {\n        count += number\
    \ % 10;\n        number /= 10;\n    }\n    return count;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| a tags=c#,algorithm |>\n<code>\npublic int CountDigits(int number)\n\
    {\n    int count = 0;\n    while (number > 0)\n    {\n        count += number\
    \ % 10;\n        number /= 10;\n    }\n    return count;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| a dscore=0 |>\n<code>\npublic int CountDigits(int number)\n{\n    int\
    \ count = 0;\n    while (number > 0)\n    {\n        count += number % 10;\n \
    \       number /= 10;\n    }\n    return count;\n}\n</code>\n<|/ a tags=c#,algorithm\
    \ |>\n<| a tags=c#,algorithm |>\n<code>\npublic int CountDigits(int number)\n\
    {\n    int count = 0;\n    while (number > 0)\n    {\n        count += number\
    \ % 10;\n        number /= 10;\n    }\n    return count;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| a dscore=0 |>\n<code>\npublic int CountDigits(int number)\n{\n    int\
    \ count = 0;\n    while (number > 0)\n    {\n        count += number % 10;\n \
    \       number /= 10;\n    }\n    return count;\n}\n</code>\n<|/ a tags=c#,algorithm\
    \ |>\n<| a dscore=0 |>\n<code>\npublic int CountDigits(int number)\n{\n    int\
    \ count = 0;\n    while (number > 0)\n    {\n        count += number % 10;\n \
    \       number /= 10;\n    }\n    return count;\n}\n</code>\n<|/ a tags=c#,algorithm\
    \ |>\n<| a dscore=0 |>\n<code>\npublic int CountDigits(int number)\n{\n    int\
    \ count = 0;\n    while (number > 0)\n    {\n        count += number % 10;\n \
    \       number /= 10;\n    }\n    return count;\n}\n</code>\n<|/ a tags=c#,algorithm\
    \ |>\n<| a tags=c#,algorithm |>\n<code>\npublic int CountDigits(int number)\n\
    {\n    int count = 0;\n    while (number > 0)\n    {\n        count += number\
    \ % 10;\n        number /= 10;\n    }", "{\n    long sum = 0;\n    for(int i =\
    \ 0; i < arr.length; i++) \n    {\n        sum += arr[i];\n    }\n    return sum;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\nimport java.util.ArrayList;\n\
    import java.util.Arrays;\nimport java.util.List;", "{\n    long count = 0;\n \
    \   for(int i = 0; i < arr.length; i++)\n    {\n        if(arr[i] > 0)\n     \
    \   {\n            count += arr[i];\n        }\n    }\n    return count;\n}",
  "{\n    long sum = 0;\n    for(int i = 0; i < arr.length; i++) \n    {\n       \
    \ sum += arr[i];\n    }\n    return sum;\n}\n</code>\n<|/ a dscore=0 |>\n<| a\
    \ dscore=0 |>\n<code>\nimport java.util.ArrayList;\nimport java.util.Arrays;\n\
    import java.util.List;", "{\n    long count = 0;\n    for(int i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] > 0){\n            count += arr[i];\n        }\n  \
    \  }\n    return count;\n}\n</code>\n<|/ a tags=c++,algorithm,arrays |>\n<| c\
    \ |>\nThis doesn't work. `count_nums([-1, 11, -11]) == 1` should be `count_nums([-1,\
    \ 11, -11]) == 3`\n<|/ c |>\n<| c |>\nI missed that one. Thanks for pointing it\
    \ out. Fixed it now.\n<|/ c |>\n<| c |>\n`count_nums([-1, 11, -11]) == 3` should\
    \ be `count_nums([-1, 11, -11]) == 2`\n<|/ c |>\n<| c |>\nI missed that one. Thanks\
    \ for pointing it out. Fixed it now.\n<|/ c |>\n<| c |>\nThis doesn't work. `count_nums([-1,\
    \ 11, -11]) == 1` should be `count_nums([-1, 11, -11]) == 3`\n<|/ c |>\n<| a |>\n\
    <code>\n#include <iostream>\n#include <vector>\n#include <algorithm>\n#include\
    \ <numeric>", "{\n    int count = 0;\n    for(int i = 0; i < arr.length; i++){\n\
    \        if(arr[i] > 0){\n            count += arr[i];\n        }\n    }\n   \
    \ return count;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't work. `count_nums([-1,\
    \ 11, -11]) == 1` should be `2` not `1`.\n<|/ c |>\n<| c |>\nI fixed the bug.\
    \ Thanks for pointing it out.\n<|/ c |>\n<| a dscore=0 |>\n<code>\npublic int\
    \ countNums(int[] nums) {\n    int count = 0;\n    for (int i = 0; i < nums.length;\
    \ i++) {\n        if (nums[i] > 0) {\n            count += nums[i];\n        }\n\
    \    }\n    return count;\n}\n</code>\n<|/ a tags=java,arrays |>\n<| a dscore=0\
    \ |>\n<code>\npublic int countNums(int[] nums) {\n    int count = 0;\n    for\
    \ (int i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n          \
    \  count += nums[i];\n        }\n    }\n    return count;\n}\n</code>\n<|/ a tags=java,arrays\
    \ |>\n<| a |>\n<code>\npublic int countNums(int[] nums) {\n    int count = 0;\n\
    \    for (int i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n   \
    \         count += nums[i];\n        }\n    }\n    return count;\n}\n</code>\n\
    <|/ a dscore=0 tags=java,arrays |>\n<| a tags=java,arrays |>\n<code>\npublic int\
    \ countNums(int[] nums) {\n    int count = 0;\n    for (int i = 0; i < nums.length;\
    \ i++) {\n        if (nums[i] > 0) {\n            count += nums[i];\n        }\n\
    \    }\n    return count;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n\
    public int countNums(int[] nums) {\n    int count = 0;\n    for (int i = 0; i\
    \ < nums.length; i++) {\n        if (nums[i] > 0) {\n            count += nums[i];\n\
    \        }\n    }\n    return count;\n}\n</code>\n<|/ a tags=java,arrays |>\n\
    <| a dscore=0 |>\n<code>\npublic int countNums(int[] nums) {\n    int count =\
    \ 0;\n    for (int i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n\
    \            count += nums[i];\n        }\n    }\n    return count;\n}\n</code>\n\
    <|/ a tags=java,arrays |>\n<| a tags=java,arrays |>\n<code>\npublic int countNums(int[]\
    \ nums) {\n    int count = 0;\n    for (int i = 0; i < nums.length; i++) {\n \
    \       if (nums[i] > 0) {\n            count += nums[i];\n        }\n    }\n\
    \    return count;\n}\n</code>\n<|/", "{\n    long count = 0;\n    for (int i\
    \ = 0; i < arr.length; i++)\n    {\n        if (arr[i] > 0)\n        {\n     \
    \       count += arr[i] % 10;\n        }\n    }\n    return count;\n}", "{\n \
    \   long count = 0;\n    for(int i = 0; i < arr.length; i++)\n    {\n        if(arr[i]\
    \ > 0)\n        {\n            count += arr[i];\n        }\n    }\n    return\
    \ count;\n}\n</code>\n<|/ a tags=c++,algorithm,arrays |>\n<| c |>\nI believe this\
    \ would work, but I believe it would be more efficient to iterate through the\
    \ array once and count the numbers that have a sum of digits > 0.\n<|/ c |>\n\
    <| c |>\nYes, I believe that would be more efficient. I'll edit my answer to include\
    \ that approach.\n<|/ c |>\n<| a tags=c++,algorithm,arrays |>\n<code>\n#include\
    \ <iostream>\n#include <vector>\n#include <algorithm>\n#include <numeric>\n#include\
    \ <iterator>", "{\n    int count = 0;\n    for (int i = 0; i < arr.length; i++)\
    \ \n    {\n        if (arr[i] > 0) \n        {\n            count += arr[i] %\
    \ 10;\n        }\n    }\n    return count;\n}\n</code>\n<|/ a dscore=0 |>\n<|\
    \ a dscore=0 |>\n<code>\nimport java.util.*;\nimport java.lang.*;\nimport java.io.*;",
  "{\n    long count = 0;\n    for(int i = 0; i < arr.length; i++) \n    {\n     \
    \   if(arr[i] > 0) \n        {\n            count += arr[i];\n        }\n    }\n\
    \    return count;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis does not provide\
    \ an answer to the question. To critique or request clarification from an author,\
    \ leave a comment below their post. - [From Review](/review/low-quality-posts/11889444)\n\
    <|/ c |>\n<| c |>\nThis does provide an answer to the question. He asked how to\
    \ count the numbers with digits > 0, and I provided a solution. He also asked\
    \ how to count the numbers with digits > 0, and I provided a solution. He also\
    \ asked how to count the numbers with digits > 0, and I provided a solution. He\
    \ also asked how to count the numbers with digits > 0, and I provided a solution.\
    \ He also asked how to count the numbers with digits > 0, and I provided a solution.\
    \ He also asked how to count the numbers with digits > 0, and I provided a solution.\
    \ He also asked how to count the numbers with digits > 0, and I provided a solution.\
    \ He also asked how to count the numbers with digits > 0, and I provided a solution.\
    \ He also asked how to count the numbers with digits > 0, and I provided a solution.\
    \ He also asked how to count the numbers with digits > 0, and I provided a solution.\
    \ He also asked how to count the numbers with digits > 0, and I provided a solution.\
    \ He also asked how to count the numbers with digits > 0, and I provided a solution.\
    \ He also asked how to count the numbers with digits > 0, and I provided a solution.\
    \ He also asked how to count the numbers with digits > 0, and I provided a solution.\
    \ He also asked how to count the numbers with digits > 0, and I provided a solution.\
    \ He also asked how to count the numbers with digits > 0, and I provided a solution.\
    \ He also asked how to count the numbers with digits > 0, and I provided a solution.\
    \ He also asked how to count the numbers with digits > 0, and I provided a solution.\
    \ He also asked how to count the numbers with digits > 0, and I provided a solution.\
    \ He also asked how to count the numbers with digits > 0, and I provided a solution.\
    \ He also asked how to count the numbers with digits > 0, and ", "{\n    long\
    \ sum = 0;\n    for(int i = 0; i < arr.length; i++){\n        sum += arr[i];\n\
    \    }\n    return sum;\n}\n</code>\n<|/ a tags=c++,algorithm |>\n<| c |>\nThis\
    \ solution doesn't work if you have a negative number with more than 2 digits.\
    \ For example, `count_nums([-1, 11, -11])` returns `1` instead of `3`.\n<|/ c\
    \ |>\n<| c |>\nYes, I missed that case. Thanks for pointing out. I've updated\
    \ the answer.\n<|/ c |>\n<| c |>\nI believe this solution will fail for `count_nums([-1,\
    \ 11, -11])` because `sum` will end up being `-11 + 11 + -11` which is `-22` instead\
    \ of `3`.\n<|/ c |>\n<| c |>\nYes, you are right. I missed that case. Thanks for\
    \ pointing out. I've updated the answer.\n<|/ c |>\n<| a tags=c++,algorithm |>\n\
    <code>", "{\n    long count = 0;\n    for(int i = 0; i < arr.length; i++){\n \
    \       if(arr[i] > 0){\n            count += arr[i];\n        }\n    }\n    return\
    \ count;\n}\n</code>\n<|/ a tags=arrays,java |>\n<| a dscore=0 |>\n<code>\nimport\
    \ java.util.Arrays;", "{\n    long count = 0;\n    for(int i = 0; i < arr.length;\
    \ i++)\n    {\n        if(arr[i] > 0)\n        {\n            count += arr[i];\n\
    \        }\n    }\n    return count;\n}\n</code>\n<|/ a tags=c++,algorithm |>\n\
    <| c |>\nThis doesn't seem to work. `count_nums([1, 1, 2]) == 3` should be `count_nums([1,\
    \ 2, 1]) == 3`.\n<|/ c |>\n<| c |>\nYes, you're right. I've fixed the code. Thanks.\n\
    <|/ c |>\n<| c |>\nThis doesn't work. `count_nums([1, 1, 2]) == 3` should be `count_nums([1,\
    \ 2, 1]) == 3`.\n<|/ c |>\n<| c |>\nYes, you're right. I've fixed the code. Thanks.\n\
    <|/ c |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\nusing namespace std;",
  "{\n    int count = 0;\n    long sum = 0;\n    for(int i = 0; i < arr.length; i++){\n\
    \        sum += arr[i];\n        if(sum > 0){\n            count++;\n        }\n\
    \    }\n    return count;\n}", "{\n    long count = 0;\n    for(int i = 0; i <\
    \ arr.length; i++)\n    {\n        if(arr[i] > 0)\n        {\n            count\
    \ += arr[i];\n        }\n    }\n    return count;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nThis doesn't work if you have a negative number with more than\
    \ 1 digit.\n<|/ c |>\n<| c |>\nI didn't get you. Can you please elaborate more?\n\
    <|/ c |>\n<| c |>\n`count_nums([-1, 11, -11]) == 1` should be `count_nums([-1,\
    \ 11, -11]) == 2`\n<|/ c |>\n<| c |>\nYes, I got it. Thanks for pointing it out.\n\
    <|/ c |>\n<| a tags=c++,arrays |>\n<code>\n#include <iostream>\n#include <vector>\n\
    #include <algorithm>\nusing namespace std;", "{\n    long result = 0;\n    for(int\
    \ i = 0; i < arr.length; i++)\n    {\n        if(arr[i] > 0)\n        {\n    \
    \        result += arr[i];\n        }\n    }\n    return result;\n}\n</code>\n\
    <|/ a tags=c++,arrays |>\n<| c |>\nI didn't downvote you, but I suspect that your\
    \ answer was downvoted because you didn't explain what was wrong with OP's code.\
    \ Also, your answer doesn't explain how you arrived at the solution. Finally,\
    \ your answer doesn't explain what was wrong with OP's code. Finally, your answer\
    \ doesn't explain why you think your solution works.\n<|/ c |>\n<| c |>\nI didn't\
    \ downvote you, but I suspect that your answer was downvoted because you didn't\
    \ explain what was wrong with OP's code. Also, your answer doesn't explain how\
    \ you arrived at the solution. Finally, your answer doesn't explain what was wrong\
    \ with OP's code. Finally, your answer doesn't explain why you think your solution\
    \ works.\n<|/ c |>\n<| c |>\nI didn't downvote you, but I suspect that your answer\
    \ was downvoted because you didn't explain what was wrong with OP's code. Also,\
    \ your answer doesn't explain how you arrived at the solution. Finally, your answer\
    \ doesn't explain what was wrong with OP's code. Finally, your answer doesn't\
    \ explain why you think your solution works.\n<|/ c |>\n<| c |>\nI didn't downvote\
    \ you, but I suspect that your answer was downvoted because you didn't explain\
    \ what was wrong with OP's code. Also, your answer doesn't explain how you arrived\
    \ at the solution. Finally, your answer doesn't explain what was wrong with OP's\
    \ code. Finally, your answer doesn't explain why you think your solution works.\n\
    <|/ c |>\n<| c |>\nI didn't downvote you, but I suspect that your answer was downvoted\
    \ because you didn't explain what was wrong with OP's code. Also, your answer\
    \ doesn't explain how you arrived at the solution. Finally, your answer doesn't\
    \ explain what was wrong with OP's code. Finally, your answer doesn't explain\
    \ why you think your solution works.\n<|/ c |>\n<| a tags=c++,arrays |>\n<code>\n\
    #include <iostream>\nusing namespace std;", "{\n    long count = 0;\n    long\
    \ sum = 0;\n    for(long i : arr) {\n        sum += i;\n        if(sum > 0) {\n\
    \            count++;\n        }\n    }\n    return count;\n}\n</code>\n<|/ a\
    \ tags=java,arrays,algorithm |>\n<| c |>\nThis solution doesn't work if you have\
    \ a negative number with more than 1 digit.\n<|/ c |>\n<| c |>\nI added a solution\
    \ that works with negative numbers with more than 1 digit.\n<|/ c |>\n<| a dscore=0\
    \ |>\n<code>\npublic int countDigits(int[] arr) {\n    int count = 0;\n    int\
    \ sum = 0;\n    for(int i : arr) {\n        sum += i;\n        if(sum > 0) {\n\
    \            count++;\n        }\n    }\n    return count;\n}\n</code>\n<|/ a\
    \ tags=java,arrays,algorithm |>\n<| c |>\nThis solution doesn't work if you have\
    \ a negative number with more than 1 digit.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n\
    public int countDigits(int[] arr) {\n    int count = 0;\n    int sum = 0;\n  \
    \  for(int i : arr) {\n        sum += i;\n        if(sum > 0) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\n</code>\n<|/ a tags=java,arrays,algorithm\
    \ |>\n<| c |>\nThis solution doesn't work if you have a negative number with more\
    \ than 1 digit.\n<|/ c |>\n<| a dscore=0 |>\n<code>\npublic int countDigits(int[]\
    \ arr) {\n    int count = 0;\n    int sum = 0;\n    for(int i : arr) {\n     \
    \   sum += i;\n        if(sum > 0) {\n            count++;\n        }\n    }\n\
    \    return count;\n}\n</code>\n<|/ a tags=java,arrays,algorithm |>\n<| c |>\n\
    This solution doesn't work if you have a negative number with more than 1 digit.\n\
    <|/ c |>\n<| a tags=java,arrays,algorithm |>\n<code>\npublic int countDigits(int[]\
    \ arr) {\n    int count = 0;\n    int sum = 0;\n    for(int i : arr) {\n     \
    \   sum += i;\n        if(sum > 0) {\n            count++;\n        }\n    }\n\
    \    return count;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=java,arrays,algorithm\
    \ |>\n<code>\npublic int countDigits(int[] arr) {\n    int count = 0;\n    int\
    \ sum = 0;\n    for(int i : arr) {\n        sum += i;\n        if(sum > 0) {\n\
    \            count++;\n        }\n    }\n    return count;\n", "{\n    long count\
    \ = 0;\n    long sum = 0;\n    for(long i : arr) \n    {\n        sum += i;\n\
    \        if(sum > 0) \n        {\n            count++;\n            sum -= i;\n\
    \        }\n    }\n    return count;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\n\
    This does not provide an answer to the question. To critique or request clarification\
    \ from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/18178053)\n\
    <|/ c |>\n<| c |>\nI believe this does answer the question. He wants to count\
    \ the number of positive integers whose digits are greater than 0.\n<|/ c |>\n\
    <| c |>\nThis does not provide an answer to the question. To critique or request\
    \ clarification from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/18178053)\n\
    <|/ c |>\n<| c |>\nI believe this does answer the question. He wants to count\
    \ the number of positive integers whose digits are greater than 0.\n<|/ c |>\n\
    <| c |>\nThis does not provide an answer to the question. To critique or request\
    \ clarification from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/18178053)\n\
    <|/ c |>\n<| a tags=java,algorithm |>\n<code>\npublic static int countPositiveIntegers(int[]\
    \ arr) {\n    int count = 0;\n    for (int i = 0; i < arr.length; i++) {\n   \
    \     int sum = 0;\n        for (int j = 0; j < arr[i].length; j++) {\n      \
    \      sum += arr[i][j];\n        }\n        if (sum > 0) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\n\
    This does not provide an answer to the question. To critique or request clarification\
    \ from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/18178053)\n\
    <|/ c |>\n<| a tags=java,algorithm |>\n<code>\npublic int countPositiveIntegers(int[]\
    \ arr) {\n    int count = 0;\n    for (int i = 0; i < arr.length; i++) {\n   \
    \     int sum = 0;\n        for (int j = 0; j < arr[i].length; j++) {\n      \
    \      sum += arr[i][j];\n        }\n        if (sum > 0) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\n</code>\n<|/ a dscore=0 |>\n<| ", "{\n\
    \    long count = 0;\n    long sum = 0;\n    for(int i = 0; i < arr.length; i++)\n\
    \    {\n        sum += arr[i];\n        if(sum > 0)\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}\n</code>\n<|/ a tags=algorithm,c#,arrays\
    \ |>\n<| a |>\n<code>\npublic int CountDigits(int[] arr)\n{\n    int count = 0;\n\
    \    for(int i = 0; i < arr.Length; i++)\n    {\n        if(arr[i] > 0)\n    \
    \    {\n            count++;\n        }\n    }\n    return count;\n}\n</code>\n\
    <|/ a dscore=0 tags=algorithm,c#,arrays |>\n<| a tags=algorithm,c#,arrays |>\n\
    <code>\npublic int CountDigits(int[] arr)\n{\n    int count = 0;\n    for(int\
    \ i = 0; i < arr.Length; i++)\n    {\n        if(arr[i] > 0)\n        {\n    \
    \        count++;\n        }\n    }\n    return count;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| a tags=algorithm,c#,arrays |>\n<code>\npublic int CountDigits(int[] arr)\n\
    {\n    int count = 0;\n    for(int i = 0; i < arr.Length; i++)\n    {\n      \
    \  if(arr[i] > 0)\n        {\n            count++;\n        }\n    }\n    return\
    \ count;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=algorithm,c#,arrays |>\n<code>\n\
    public int CountDigits(int[] arr)\n{\n    int count = 0;\n    for(int i = 0; i\
    \ < arr.Length; i++)\n    {\n        if(arr[i] > 0)\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=algorithm,c#,arrays\
    \ |>\n<code>\npublic int CountDigits(int[] arr)\n{\n    int count = 0;\n    for(int\
    \ i = 0; i < arr.Length; i++)\n    {\n        if(arr[i] > 0)\n        {\n    \
    \        count++;\n        }\n    }\n    return count;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| a tags=algorithm,c#,arrays |>\n<code>\npublic int CountDigits(int[] arr)\n\
    {\n    int count = 0;\n    for(int i = 0; i < arr.Length; i++)\n    {\n      \
    \  if(arr[i] > 0)\n        {\n            count++;\n        }\n    }\n    return\
    \ count;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\npublic int\
    \ CountDigits(int[] arr)\n{\n    int count = 0;\n    for(int i = 0; i < arr.Length;\
    \ i++)\n    {\n        if(arr[i] > 0)\n        {\n            count++;\n", "{\n\
    \    long result = 0;\n    for(int i = 0; i < arr.length; i++)\n    {\n      \
    \  if(arr[i] > 0)\n        {\n            result += arr[i];\n        }\n    }\n\
    \    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't work.\
    \ Try it with `count_nums([-1, 1, -2, 2, -3, 3, -4, 4])`.\n<|/ c |>\n<| c |>\n\
    I see what you mean. Thanks for pointing that out. I will update my answer accordingly.\n\
    <|/ c |>\n<| c |>\nI updated my answer accordingly. Thanks for pointing that out.\n\
    <|/ c |>\n<| c |>\nI updated my answer accordingly. Thanks for pointing that out.\n\
    <|/ c |>\n<| a dscore=0 |>\n<code>\npublic int countNums(int[] nums) {\n    int\
    \ count = 0;\n    for (int i = 0; i < nums.length; i++) {\n        if (nums[i]\
    \ > 0)\n            count += nums[i];\n    }\n    return count;\n}\n</code>\n\
    <|/ a tags=java,arrays |>\n<| c |>\nThis doesn't work. Try it with `countNums([-1,\
    \ 1, -2, 2, -3, 3, -4, 4])`.\n<|/ c |>\n<| c |>\nI see what you mean. Thanks for\
    \ pointing that out. I will update my answer accordingly.\n<|/ c |>\n<| a |>\n\
    <code>\npublic int countNums(int[] nums) {\n    int count = 0;\n    for (int i\
    \ = 0; i < nums.length; i++) {\n        if (nums[i] > 0)\n            count +=\
    \ nums[i];\n    }\n    return count;\n}\n</code>\n<|/ a tags=java,arrays dscore=0\
    \ |>\n<| c |>\nThis doesn't work. Try it with `countNums([-1, 1, -2, 2, -3, 3,\
    \ -4, 4])`.\n<|/ c |>\n<| c |>\nI see what you mean. Thanks for pointing that\
    \ out. I will update my answer accordingly.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n\
    public int countNums(int[] nums) {\n    int count = 0;\n    for (int i = 0; i\
    \ < nums.length; i++) {\n        if (nums[i] > 0)\n            count += nums[i];\n\
    \    }\n    return count;\n}\n</code>\n<|/ a tags=java,arrays |>\n<| c |>\nThis\
    \ doesn't work. Try it with `countNums([-1, 1, -2, 2, -3, 3, -4, 4])`.\n<|/ c\
    \ |>\n<| a tags=java,arrays |>\n<code>\npublic int countNums(int[] nums) {\n \
    \   int count = 0;\n    for (int i = 0; i < nums.length; i++) {\n        if (nums[i]\
    \ > 0)\n            count ", "{\n    long count = 0;\n    for(int i = 0; i < arr.length;\
    \ i++)\n    {\n        if(arr[i] > 0)\n        {\n            count += arr[i];\n\
    \        }\n    }\n    return count;\n}", "{\n    long count = 0;\n    for(int\
    \ i = 0; i < arr.length; i++) \n    {\n        if(arr[i] > 0) \n        {\n  \
    \          count += arr[i];\n        }\n    }\n    return count;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nThis doesn't work. `count_nums([-1, 11, -11]) == 1`\
    \ should be `2`.\n<|/ c |>\n<| c |>\nThanks for pointing that out. I fixed the\
    \ code accordingly.\n<|/ c |>\n<| a dscore=0 |>\n<code>\nimport java.util.ArrayList;\n\
    import java.util.Arrays;\nimport java.util.List;", "{\n    long count = 0;\n \
    \   for(int i = 0; i < arr.length; i++){\n        if(arr[i] > 0){\n          \
    \  count += arr[i] % 10;\n        }\n    }\n    return count;\n}\n</code>\n<|/\
    \ a tags=java,arrays,algorithm |>\n<| c |>\nThis doesn't work. Try it with `count_nums([-1,\
    \ 11, -11])`.\n<|/ c |>\n<| c |>\nThanks for pointing that out. I edited the answer\
    \ to fix it.\n<|/ c |>\n<| a dscore=0 |>\n<code>\nimport java.util.Arrays;\nimport\
    \ java.util.Scanner;", "{\n    int count = 0;\n    for(int i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] > 0){\n            count += arr[i];\n        }\n  \
    \  }\n    return count;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=c++,algorithm,arrays\
    \ |>\n<code>\n#include <iostream>\n#include <vector>\n#include <algorithm>\nusing\
    \ namespace std;", "{\n    long count = 0;\n    long sum = 0;\n    for(int i =\
    \ 0; i < arr.length; i++){\n        sum += arr[i];\n        if(sum > 0){\n   \
    \         count++;\n        }\n    }\n    return count;\n}\n</code>\n<|/ a tags=arrays,algorithm,java\
    \ |>\n<| c |>\nThis doesn't work. Try it with `count_nums([-1, 11, -11])`\n<|/\
    \ c |>\n<| c |>\nI see what you mean. I'll fix it.\n<|/ c |>\n<| c |>\nI fixed\
    \ it. I had a typo.\n<|/ c |>\n<| c |>\nThis still doesn't work. Try it with `count_nums([-1,\
    \ 11, -11])`\n<|/ c |>\n<| c |>\nI fixed it again. I had a typo.\n<|/ c |>\n<|\
    \ a tags=arrays,algorithm,java |>\n<code>\npublic static void main(String[] args)\
    \ {\n    int[] arr = {-1, 11, -11};\n    System.out.println(count_nums(arr));\n\
    }", "{\n    int count = 0;\n    long sum = 0;\n    for(int i = 0; i < arr.length;\
    \ i++)\n    {\n        sum += arr[i];\n        if(sum > 0)\n        {\n      \
    \      count++;\n            sum -= arr[i];\n        }\n    }\n    return count;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\nimport java.util.Arrays;\n\
    import java.util.List;\nimport java.util.stream.Collectors;", "{\n    long sum\
    \ = 0;\n    for(int i = 0; i < arr.length; i++)\n    {\n        sum += arr[i];\n\
    \    }\n    return sum;\n}\n</code>\n<|/ a |>\n<| c |>\nThis doesn't work if you\
    \ have a negative number with more than 2 digits. e.g. `count_nums([-1, 11, -11])\
    \ == 1` should be `2`\n<|/ c |>\n<| c |>\nYes, I agree with you. Thanks for pointing\
    \ out. I will edit my answer.\n<|/ c |>\n<| a dscore=0 |>\n<code>\nimport java.util.Arrays;\n\
    import java.util.List;\nimport java.util.stream.Collectors;", "{\n    long count\
    \ = 0;\n    for(long i : arr) \n    {\n        if(i >= 0) \n        {\n      \
    \      count += std.math.mod(i, 10);\n        }\n    }\n    return count;\n}\n\
    </code>\n<|/ a dscore=0 |>\n<| c |>\nI didn't downvote, but I suspect it's because\
    \ you didn't explain what was wrong with OP's code, and you didn't explain why\
    \ your solution works.\n<|/ c |>\n<| c |>\nI didn't downvote, but I suspect it's\
    \ because you didn't explain what was wrong with OP's code, and you didn't explain\
    \ why your solution works.\n<|/ c |>\n<| c |>\nI didn't downvote, but I suspect\
    \ it's because you didn't explain what was wrong with OP's code, and you didn't\
    \ explain why your solution works.\n<|/ c |>\n<| c |>\nI didn't downvote, but\
    \ I suspect it's because you didn't explain what was wrong with OP's code, and\
    \ you didn't explain why your solution works.\n<|/ c |>\n<| c |>\nI didn't downvote,\
    \ but I suspect it's because you didn't explain what was wrong with OP's code,\
    \ and you didn't explain why your solution works.\n<|/ c |>\n<| a dscore=0 |>\n\
    <code>", "{\n    long sum = 0;\n    for(int i = 0; i < arr.length; i++)\n    {\n\
    \        sum += arr[i];\n    }\n    return sum;\n}\n</code>\n<|/ a tags=c++,arrays\
    \ |>\n<| c |>\nI see you added the C++ tag. My answer was in C#. I'll leave it\
    \ here in case it helps someone else.\n<|/ c |>\n<| c |>\nI added a C++ solution\
    \ as well. Hope it helps.\n<|/ c |>\n<| c |>\nI added a C++ solution as well.\
    \ Hope it helps.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n#include\
    \ <vector>\nusing namespace std;", "{\n    long count = 0;\n    long sum = 0;\n\
    \    for(int i = 0; i < arr.length; i++)\n    {\n        sum += arr[i];\n    \
    \    if(sum > 0)\n        {\n            count++;\n        }\n    }\n    return\
    \ count;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=c++,algorithm |>\n<code>\n\
    #include <iostream>\n#include <vector>\n#include <algorithm>\n#include <numeric>\n\
    using namespace std;", "{\n    long count = 0;\n    for(int i = 0; i < arr.length;\
    \ i++) \n    {\n        if(arr[i] > 0) \n        {\n            count += arr[i]\
    \ / 10;\n            count += arr[i] % 10;\n        }\n    }\n    return count;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a tags=java,algorithm |>\n<code>\nimport java.util.ArrayList;\n\
    import java.util.List;", "{\n    long count = 0;\n    for(int i = 0; i < arr.length;\
    \ i++)\n    {\n        if(arr[i] > 0)\n        {\n            count += arr[i];\n\
    \        }\n    }\n    return count;\n}\n</code>\n<|/ a tags=c++,algorithm |>\n\
    <| c |>\nThis doesn't work. Try it with `count_nums([-1, 11, -11])`.\n<|/ c |>\n\
    <| c |>\nI fixed the bug. Thanks for pointing it out.\n<|/ c |>\n<| c |>\nThis\
    \ doesn't work. Try it with `count_nums([-1, 11, -11])`.\n<|/ c |>\n<| c |>\n\
    I fixed the bug. Thanks for pointing it out.\n<|/ c |>\n<| c |>\nThis doesn't\
    \ work. Try it with `count_nums([-1, 11, -11])`.\n<|/ c |>\n<| a tags=c++,algorithm\
    \ |>\nThe problem is that the number of digits is given by the length of the array.\
    \ \n<code>\nlong count_nums(long[] arr) \n{\n    long count = 0;\n    for(int\
    \ i = 0; i < arr.length; i++)\n    {\n        if(arr[i] > 0)\n        {\n    \
    \        count += arr[i];\n        }\n    }\n    return count;\n}\n</code>\n<|/\
    \ a dscore=0 |>\n<| a tags=c++,algorithm |>\n<code>\n#include <iostream>\n#include\
    \ <vector>\n#include <algorithm>", "{\n    long count = 0;\n    for(int i = 0;\
    \ i < arr.length; i++) \n    {\n        if(arr[i] >= 0) \n        {\n        \
    \    count += arr[i] % 10;\n            arr[i] /= 10;\n        }\n        else\
    \ \n        {\n            count += arr[i] % 10;\n            arr[i] = -arr[i];\n\
    \        }\n    }\n    return count;\n}\n</code>\n<|/ a tags=arrays,c++,algorithm\
    \ |>\n<| a tags=arrays,c++,algorithm |>\n<code>\n#include <iostream>\n#include\
    \ <vector>\n#include <algorithm>", "{\n    long sum = 0;\n    for(long i : arr)\
    \ \n    {\n        if(i >= 0) \n        {\n            sum += i;\n        }\n\
    \    }\n    return sum;\n}\n</code>\n<|/ a tags=c++,arrays |>\n<| c |>\nI guess\
    \ you mean `count_nums(arr) == count_nums(arr) + count_nums(arr) - count_nums(arr)\
    \ / 2;`\n<|/ c |>\n<| c |>\nYes, I meant that. Thanks for pointing it out.\n<|/\
    \ c |>\n<| a tags=c++,arrays |>\n<code>\n#include <iostream>\nusing namespace\
    \ std;", "{\n    long count = 0;\n    for(int i = 0; i < arr.length; i++)\n  \
    \  {\n        if(arr[i] > 0)\n        {\n            count += arr[i] % 10;\n \
    \       }\n    }\n    return count;\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1\
    \ |>\n<code>\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.stream.Collectors;",
  "{\n    long sum = 0;\n    for(int i = 0; i < arr.length; i++) \n    {\n       \
    \ sum += arr[i];\n    }\n    return sum;\n}", "{\n    long sum = 0;\n    for(int\
    \ i = 0; i < arr.length; i++){\n        sum += arr[i];\n    }\n    return sum;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis is not an answer. An answer should\
    \ contain an explanation of what was wrong in the original code and how you fixed\
    \ it.\n<|/ c |>\n<| c |>\nI agree with you. But the OP asked for help and I gave\
    \ him a solution. He also asked for explanation so I gave him an explanation.\
    \ He also asked for help and I gave him a solution. He also asked for explanation\
    \ so I gave him an explanation. He also asked for help and I gave him a solution.\
    \ He also asked for explanation so I gave him an explanation. He also asked for\
    \ help and I gave him a solution. He also asked for explanation so I gave him\
    \ an explanation. He also asked for explanation so I gave him an explanation.\
    \ He also asked for explanation so I gave him an explanation. He also asked for\
    \ explanation so I gave him an explanation. He also asked for explanation so I\
    \ gave him an explanation. He also asked for explanation so I gave him an explanation.\
    \ He also asked for explanation so I gave him an explanation. He also asked for\
    \ explanation so I gave him an explanation. He also asked for explanation so I\
    \ gave him an explanation. He also asked for explanation so I gave him an explanation.\
    \ He also asked for explanation so I gave him an explanation. He also asked for\
    \ explanation so I gave him an explanation. He also asked for explanation so I\
    \ gave him an explanation. He also asked for explanation so I gave him an explanation.\
    \ He also asked for explanation so I gave him an explanation. He also asked for\
    \ explanation so I gave him an explanation. He also asked for explanation so I\
    \ gave him an explanation. He also asked for explanation so I gave him an explanation.\
    \ He also asked for explanation ", "{\n    long count = 0;\n    for(int i = 0;\
    \ i < arr.length; i++){\n        if(arr[i] > 0){\n            count += arr[i];\n\
    \        }\n    }\n    return count;\n}\n</code>\n<|/ a tags=c++,arrays |>\n<|\
    \ c |>\nThis does not provide an answer to the question. To critique or request\
    \ clarification from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/27829184)\n\
    <|/ c |>\n<| c |>\nI added a code example to my answer. Hope it helps.\n<|/ c\
    \ |>\n<| c |>\nThis does not provide an answer to the question. To critique or\
    \ request clarification from an author, leave a comment below their post. - [From\
    \ Review](/review/low-quality-posts/27829184)\n<|/ c |>\n<| c |>\nI added a code\
    \ example to my answer. Hope it helps.\n<|/ c |>\n<| c |>\nThis does not provide\
    \ an answer to the question. To critique or request clarification from an author,\
    \ leave a comment below their post. - [From Review](/review/low-quality-posts/27829184)\n\
    <|/ c |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\nusing namespace std;",
  "{\n    long count = 0;\n    for(int i = 0; i < arr.length; i++) \n    {\n     \
    \   if(arr[i] > 0) \n        {\n            count += arr[i] % 10;\n        }\n\
    \    }\n    return count;\n}\n</code>\n<|/ a tags=c++,arrays |>\n<| a dscore=0\
    \ |>\n<code>\n#include <iostream>\n#include <vector>\n#include <algorithm>", "{\n\
    \    long count = 0;\n    for(int i = 0; i < arr.length; i++){\n        if(arr[i]\
    \ > 0){\n            count += arr[i] % 10;\n        }\n    }\n    return count;\n\
    }\n</code>\n<|/ a |>\n<| a dscore=0 |>\n<code>\npublic int countDigits(int n)\
    \ {\n    int count = 0;\n    while (n > 0) {\n        n /= 10;\n        count++;\n\
    \    }\n    return count;\n}\n</code>\n<|/ a tags=java,arrays |>\n<| c |>\nWhile\
    \ this code may answer the question, providing additional context regarding how\
    \ and/or why it solves the problem would improve the answer's long-term value.\n\
    <|/ c |>\n<| a dscore=0 |>\n<code>\npublic class CountDigits {", "{\n    int count\
    \ = 0;\n    for(int i = 0; i < arr.length; i++) \n    {\n        if(arr[i] > 0)\
    \ \n        {\n            count += arr[i] % 10;\n        }\n    }\n    return\
    \ count;\n}", "{\n    long count = 0;\n    for (int i = 0; i < arr.length; i++)\
    \ \n    {\n        if (arr[i] > 0) \n        {\n            count += arr[i] %\
    \ 10;\n        }\n    }\n    return count;\n}\n</code>\n<|/ a dscore=0 |>\n<|\
    \ a |>\n<code>", "{\n    int count = 0;\n    for(int i = 0; i < arr.length; i++)\n\
    \    {\n        if(arr[i] > 0)\n        {\n            count++;\n        }\n \
    \   }\n    return count;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nI didn't downvote,\
    \ but I suspect it's because you didn't explain what your code does, and how it\
    \ does it.\n<|/ c |>\n<| c |>\nI added some explanation to the code. Hope it helps.\n\
    <|/ c |>\n<| c |>\nI didn't downvote, but I suspect it's because you didn't explain\
    \ what your code does, and how it does it.\n<|/ c |>\n<| c |>\nI added some explanation\
    \ to the code. Hope it helps.\n<|/ c |>\n<| c |>\nI didn't downvote, but I suspect\
    \ it's because you didn't explain what your code does, and how it does it.\n<|/\
    \ c |>\n<| a dscore=0 |>\n<code>\nimport java.util.ArrayList;\nimport java.util.Arrays;\n\
    import java.util.List;", "{\n    long sum = 0;\n    for(int i = 0; i < arr.length;\
    \ i++) \n    {\n        sum += arr[i];\n    }\n    return sum;\n}\n</code>\n<|/\
    \ a tags=algorithm,arrays,c++ |>\n<| c |>\nThis is not an answer, but a comment.\
    \ Please, use comments for such things.\n<|/ c |>\n<| c |>\nThis is not an answer,\
    \ but a comment. Please, use comments for such things.\n<|/ c |>\n<| c |>\nThis\
    \ is not an answer, but a comment. Please, use comments for such things.\n<|/\
    \ c |>\n<| c |>\nThis is not an answer, but a comment. Please, use comments for\
    \ such things.\n<|/ c |>\n<| c |>\nThis is not an answer, but a comment. Please,\
    \ use comments for such things.\n<|/ c |>\n<| a dscore=2 |>\n<code>\n#include\
    \ <iostream>\n#include <vector>\n#include <algorithm>\n#include <numeric>\n#include\
    \ <iterator>", "{\n    long count = 0;\n    long sum = 0;\n    for(int i = 0;\
    \ i < arr.length; i++)\n    {\n        sum += arr[i];\n        if(sum > 0)\n \
    \       {\n            count++;\n        }\n    }\n    return count;\n}\n</code>\n\
    <|/ a tags=c++,arrays,algorithm |>\n<| c |>\nThis doesn't work. Try it with `count_nums([-1,\
    \ 11, -11])`.\n<|/ c |>\n<| c |>\nThanks for pointing that out. I've updated the\
    \ answer accordingly.\n<|/ c |>\n<| a |>\n<code>\n#include <iostream>\nusing namespace\
    \ std;", "{\n    long count = 0;\n    for(int i = 0; i < arr.length; i++){\n \
    \       long sum = 0;\n        for(int j = 0; j < arr[i]; j++){\n            sum\
    \ += arr[j];\n        }\n        if(sum > 0){\n            count++;\n        }\n\
    \    }\n    return count;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=algorithm,c++,arrays\
    \ |>\n<code>\n#include <iostream>\n#include <vector>\n#include <algorithm>\nusing\
    \ namespace std;", "{\n    long count = 0;\n    for(int i = 0; i < arr.length;\
    \ i++)\n    {\n        if(arr[i] > 0)\n        {\n            count += arr[i];\n\
    \        }\n    }\n    return count;\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=0\
    \ |>\n<code>\npublic class Solution {\n    public int countDigits(int n) {\n \
    \       int count = 0;\n        while(n > 0) {\n            count++;\n       \
    \     n = n / 10;\n        }\n        return count;\n    }\n}\n</code>\n<|/ a\
    \ tags=java,algorithm |>\n<| c |>\nWhile this code may answer the question, providing\
    \ additional context regarding how and/or why it solves the problem would improve\
    \ the answer's long-term value.\n<|/ c |>\n<| a dscore=0 |>\n<code>\npublic int\
    \ countDigits(int n) {\n    int count = 0;\n    while(n > 0) {\n        count++;\n\
    \        n = n / 10;\n    }\n    return count;\n}\n</code>\n<|/ a tags=java,algorithm\
    \ |>\n<| a dscore=0 |>\n<code>\npublic int countDigits(int n) {\n    int count\
    \ = 0;\n    while(n > 0) {\n        count++;\n        n = n / 10;\n    }\n   \
    \ return count;\n}\n</code>\n<|/ a tags=java,algorithm |>\n<| a tags=java,algorithm\
    \ |>\n<code>\npublic int countDigits(int n) {\n    int count = 0;\n    while(n\
    \ > 0) {\n        count++;\n        n = n / 10;\n    }\n    return count;\n}\n\
    </code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\npublic int countDigits(int\
    \ n) {\n    int count = 0;\n    while(n > 0) {\n        count++;\n        n =\
    \ n / 10;\n    }\n    return count;\n}\n</code>\n<|/ a tags=java,algorithm |>\n\
    <| a dscore=0 |>\n<code>\npublic int countDigits(int n) {\n    int count = 0;\n\
    \    while(n > 0) {\n        count++;\n        n = n / 10;\n    }\n    return\
    \ count;\n}\n</code>\n<|/ a tags=java,algorithm |>\n<| a tags=java,algorithm |>\n\
    <code>\npublic int countDigits(int n) {\n    int count = 0;\n    while(n > 0)\
    \ {\n        count++;\n        n = n / 10;\n    }\n    return count;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| a tags=java,algorithm |>\n<code>\npublic int countDigits(int\
    \ n) {\n    int count = 0;\n    while(n > 0) {\n        count++;\n        n =\
    \ n / 10;\n    }\n    return count;\n}\n</code>\n<|/ a dscore=0 |>\n<|", "{\n\
    \    long sum = 0;\n    for(long i : arr) \n    {\n        sum += i;\n    }\n\
    \    return sum;\n}\n</code>\n<|/ a tags=c++,algorithm,arrays |>\n<| c |>\nThis\
    \ doesn't work if you have a negative number in the array. For example, `count_nums([-1,\
    \ 11, -11])` returns `1` instead of `3`.\n<|/ c |>\n<| c |>\nI added a solution\
    \ that doesn't require the array to be sorted.\n<|/ c |>\n<| c |>\nThis doesn't\
    \ work if you have a negative number in the array. For example, `count_nums([-1,\
    \ 11, -11])` returns `1` instead of `3`.\n<|/ c |>\n<| c |>\nI added a solution\
    \ that doesn't require the array to be sorted.\n<|/ c |>\n<| c |>\nI added a solution\
    \ that doesn't require the array to be sorted.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n\
    #include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace\
    \ std;", "{\n    long sum = 0;\n    for(long i : arr) \n    {\n        sum +=\
    \ i;\n    }\n    return sum;\n}\n</code>\n<|/ a tags=algorithm,c++,arrays |>\n\
    <| c |>\nThis doesn't work. Try it with `count_nums([-2, -1, 0, 2, -4, -5, -6,\
    \ -7, -8, -9, -10, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23,\
    \ -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38, -39,\
    \ -40, -41, -42, -43, -44, -45])`\n<|/ c |>\n<| c |>\nIt doesn't work. Try it\
    \ with `count_nums([-2, -1, 0, 2, -4, -5, -6, -7, -8, -9, -10, -12, -13, -14,\
    \ -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30,\
    \ -31, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, -42, -43, -44, -45])`\n\
    <|/ c |>\n<| c |>\nI tested it and it works. I added the test case in the answer.\n\
    <|/ c |>\n<| c |>\nIt doesn't work. Try it with `count_nums([-2, -1, 0, 2, -4,\
    \ -5, -6, -7, -8, -9, -10, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22,\
    \ -23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38,\
    \ -39, -40, -41, -42, -43, -44, -45])`\n<|/ c |>\n<| c |>\nIt doesn't work. Try\
    \ it with `count_nums([-2, -1, 0, 2, -4, -5, -6, -7, -8, -9, -10, -12, -13, -14,\
    \ -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30,\
    \ -31, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, -42, -43, -44, -45])`\n\
    <|/ c |>\n<| a tags=algorithm,c++,arrays |>\n<code>", "{\n    long result = 0;\n\
    \    for(int i = 0; i < arr.length; i++)\n    {\n        if(arr[i] > 0)\n    \
    \    {\n            result += arr[i];\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=c++,arrays |>\n<| c |>\nThis solution does not work if\
    \ you have a negative number with more than 1 digit.\n<|/ c |>\n<| c |>\nYes,\
    \ I missed that case. Thanks for pointing out. I've updated the answer.\n<|/ c\
    \ |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n#include <vector>\n#include\
    \ <algorithm>", "{\n    long sum = 0;\n    for(long i : arr)\n    {\n        if(i\
    \ >= 0)\n        {\n            sum += i;\n        }\n        else\n        {\n\
    \            sum += i * -1;\n        }\n    }\n    return sum;\n}\n</code>\n<|/\
    \ a dscore=1 |>\n<| a dscore=1 |>\n<code>\nimport java.util.Arrays;\nimport java.util.List;\n\
    import java.util.stream.Collectors;", "{\n    long sum = 0;\n    for(int i = 0;\
    \ i < arr.length; i++) \n    {\n        sum += arr[i];\n    }\n    return sum;\n\
    }", "{\n    long count = 0;\n    for(int i = 0; i < arr.length; i++){\n      \
    \  long num = arr[i];\n        if(num < 0){\n            num = -num;\n       \
    \ }\n        for(int j = 0; j < num; j++){\n            count += j;\n        }\n\
    \    }\n    return count;\n}\n</code>\n<|/ a |>\n<| c |>\nThis doesn't work. Try\
    \ it on `[-1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1,\
    \ -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1,\
    \ -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1,\
    \ -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1,\
    \ -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1,\
    \ -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1,\
    \ -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1,\
    \ -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1,\
    \ -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1,\
    \ -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1,\
    \ -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1,\
    \ -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1,\
    \ -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1,\
    \ -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1,\
    \ -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1,\
    \ -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1,\
    \ -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1,\
    \ -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1,\
    \ -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1,\
    \ -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, ", "{\n\
    \    long count = 0;\n    for(long i : arr) \n    {\n        if(i >= 0) \n   \
    \     {\n            count += std.math.abs(i);\n        }\n        else\n    \
    \    {\n            count += std.math.floor(i/std.math.abs(i));\n        }\n \
    \   }\n    return count;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n\
    import java.util.*;\nimport java.lang.*;\nimport java.io.*;\nimport java.util.Scanner;",
  "{\n    long sum = 0;\n    for(int i = 0; i < arr.length; i++) \n    {\n       \
    \ if(arr[i] > 0) \n        {\n            sum += arr[i];\n        }\n    }\n \
    \   return sum;\n}\n</code>\n<|/ a tags=c++,arrays,algorithm |>\n<| c |>\nThanks\
    \ for your answer. I am not allowed to use any library functions. I should use\
    \ only basic c++ functions.\n<|/ c |>\n<| c |>\nI added a solution without using\
    \ any library functions. Hope it helps.\n<|/ c |>\n<| c |>\nThanks for your answer.\
    \ I am not allowed to use any library functions. I should use only basic c++ functions.\n\
    <|/ c |>\n<| c |>\nI added a solution without using any library functions. Hope\
    \ it helps.\n<|/ c |>\n<| c |>\nThanks for your answer. I am not allowed to use\
    \ any library functions. I should use only basic c++ functions.\n<|/ c |>\n<|\
    \ a tags=c++,arrays,algorithm |>\n<code>\n#include <iostream>\n#include <vector>\n\
    #include <algorithm>", "{\n    long sum = 0;\n    for(int i = 0; i < arr.length;\
    \ i++)\n    {\n        sum += arr[i];\n    }\n    return sum;\n}\n</code>\n<|/\
    \ a dscore=0 |>\n<| c |>\nThis does not provide an answer to the question. To\
    \ critique or request clarification from an author, leave a comment below their\
    \ post. - [From Review](/review/low-quality-posts/10690272)\n<|/ c |>\n<| c |>\n\
    I believe this does answer the question, since it provides an algorithm to solve\
    \ the problem and also a working implementation. Not sure why you think it doesn't.\n\
    <|/ c |>\n<| c |>\nI believe this does answer the question, since it provides\
    \ an algorithm to solve the problem and also a working implementation. Not sure\
    \ why you think it doesn't.\n<|/ c |>\n<| c |>\nI believe this does answer the\
    \ question, since it provides an algorithm to solve the problem and also a working\
    \ implementation. Not sure why you think it doesn't.\n<|/ c |>\n<| c |>\nI believe\
    \ this does answer the question, since it provides an algorithm to solve the problem\
    \ and also a working implementation. Not sure why you think it doesn't.\n<|/ c\
    \ |>\n<| a dscore=0 |>\n<code>\nimport java.util.ArrayList;\nimport java.util.List;\n\
    import java.util.Scanner;", "{\n    int count = 0;\n    for(int i = 0; i < arr.length;\
    \ i++)\n    {\n        if(arr[i] > 0)\n        {\n            count += arr[i]\
    \ % 10;\n        }\n    }\n    return count;\n}\n</code>\n<|/ a dscore=0 |>\n\
    <| a dscore=0 |>\n<code>", "{\n    long count = 0;\n    for(long i : arr) \n \
    \   {\n        if(i >= 0) \n        {\n            count += std.math.abs(i);\n\
    \        }\n    }\n    return count;\n}\n</code>\n<|/ a tags=c++,arrays,algorithm\
    \ |>\n<| c |>\nThis is not correct. `count_nums([1, 1, 2])` returns 3, not 2.\n\
    <|/ c |>\n<| c |>\nYes, I missed that case. Thanks for pointing it out.\n<|/ c\
    \ |>\n<| c |>\nI believe that `count_nums([1, 1, 2])` should return 2, not 3.\n\
    <|/ c |>\n<| c |>\nYes, I missed that case too. Thanks for pointing it out.\n\
    <|/ c |>\n<| c |>\nI believe that `count_nums([1, 1, 2])` should return 2, not\
    \ 3.\n<|/ c |>\n<| a |>\n<code>\n#include <iostream>\n#include <vector>\n#include\
    \ <algorithm>\nusing namespace std;", "{\n    long sum = 0;\n    for(int i = 0;\
    \ i < arr.length; i++) \n    {\n        sum += arr[i];\n    }\n    return sum;\n\
    }\n</code>\n<|/ a tags=arrays,c++,algorithm |>\n<| c |>\nThis doesn't work. `count_nums([-1,\
    \ 11, -11]) == 1` but `count_nums([1, 1, 2]) == 3`\n<|/ c |>\n<| c |>\nI fixed\
    \ the bug. Thanks.\n<|/ c |>\n<| c |>\nThe bug is still there. `count_nums([-1,\
    \ 11, -11]) == 1` but `count_nums([1, 1, 2]) == 3`\n<|/ c |>\n<| c |>\nI fixed\
    \ the bug. Thanks.\n<|/ c |>\n<| c |>\nI fixed the bug. Thanks.\n<|/ c |>\n<|\
    \ a tags=arrays,c++,algorithm |>\n<code>\n#include <iostream>\n#include <vector>\n\
    #include <algorithm>\nusing namespace std;", "{\n    long count = 0;\n    long\
    \ sum = 0;\n    for(int i = 0; i < arr.length; i++){\n        sum += arr[i];\n\
    \        if(sum > 0){\n            count++;\n        }\n    }\n    return count;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't work. Try it with `count_nums([-1,\
    \ 11, -11])`.\n<|/ c |>\n<| c |>\nIt does work, I've tested it. I've also added\
    \ a test case to the code which shows it works.\n<|/ c |>\n<| c |>\nIt doesn't\
    \ work. Try it with `count_nums([-1, 11, -11])`.\n<|/ c |>\n<| c |>\nIt does work,\
    \ I've tested it. I've also added a test case to the code which shows it works.\n\
    <|/ c |>\n<| c |>\nIt doesn't work. Try it with `count_nums([-1, 11, -11])`.\n\
    <|/ c |>\n<| a dscore=0 |>\n<code>\nimport java.util.*;\npublic class CountDigits\n\
    {\n    public static void main(String[] args)\n    {\n        Scanner sc = new\
    \ Scanner(System.in);\n        System.out.println(\"Enter the number\");\n   \
    \     int n = sc.nextInt();\n        System.out.println(\"Enter the digit\");\n\
    \        int d = sc.nextInt();\n        int count = 0;\n        while(n > 0)\n\
    \        {\n            int temp = n % 10;\n            if(temp > 0)\n       \
    \     {\n                count += temp;\n            }\n            n = n / 10;\n\
    \        }\n        System.out.println(\"The count is\" + count);\n    }\n}\n\
    </code>\n<|/ a tags=java,arrays |>\n<| a dscore=0 |>\n<code>\nimport java.util.*;\n\
    public class CountDigits\n{\n    public static void main(String[] args)\n    {\n\
    \        Scanner sc = new Scanner(System.in);\n        System.out.println(\"Enter\
    \ the number\");\n        int n = sc.nextInt();\n        System.out.println(\"\
    Enter the digit\");\n        int d = sc.nextInt();\n        int count = 0;\n \
    \       while(n > 0)\n        {\n            int temp = n % 10;\n            if(temp\
    \ > 0)\n            {\n                count += temp;\n            }\n       \
    \     n = n / 10;\n        }\n        System.out.println(\"The count is\" + count);\n\
    \    }\n}\n</code>\n<|/ a tags=java,arrays |>\n<| c |>\nPlease add some explanation\
    \ to your answer such that others can learn from it\n<|/ c |>\n<| a tags=java,arrays\
    \ |>\n<code>\nimport java.util.*;\npublic class CountDigits\n{\n    public static\
    \ void main(String[] args)\n    {\n        Scan", "{\n    long count = 0;\n  \
    \  for(long i : arr) {\n        if(i >= 0) {\n            count += i;\n      \
    \  }\n        else {\n            count += i * -1;\n        }\n    }\n    return\
    \ count;\n}\n</code>\n<|/ a tags=arrays,algorithm,c++ |>\n<| c |>\nI like this\
    \ solution, but I wonder if there is a way to do it without looping through the\
    \ array twice?\n<|/ c |>\n<| c |>\nYes, you can do it with a single loop, but\
    \ it's more complicated. I'll post an answer in a few minutes.\n<|/ c |>\n<| c\
    \ |>\nI added a solution without looping through the array twice. Hope it helps.\n\
    <|/ c |>\n<| c |>\nI added a solution without looping through the array twice.\
    \ Hope it helps.\n<|/ c |>\n<| c |>\nI added a solution without looping through\
    \ the array twice. Hope it helps.\n<|/ c |>\n<| a tags=arrays,algorithm,c++ |>\n\
    Here's a solution without looping through the array twice:\n<code>\nlong count_nums(long[]\
    \ arr) {\n    long count = 0;\n    long sum = 0;\n    long last = 0;\n    long\
    \ sign = 1;\n    for(long i : arr) {\n        sum += i;\n        if(sum > 0) {\n\
    \            count += 1;\n        }\n        else {\n            sum += sign *\
    \ last;\n            sign *= -1;\n        }\n        last = sum;\n    }\n    return\
    \ count;\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nI like this solution, but I\
    \ wonder if there is a way to do it without looping through the array twice?\n\
    <|/ c |>\n<| c |>\nI added a solution without looping through the array twice.\
    \ Hope it helps.\n<|/ c |>\n<| a dscore=1 |>\nHere's a solution without looping\
    \ through the array twice:\n<code>\nlong count_nums(long[] arr) {\n    long count\
    \ = 0;\n    long sum = 0;\n    long last = 0;\n    long sign = 1;\n    for(long\
    \ i : arr) {\n        sum += i;\n        if(sum > 0) {\n            count += 1;\n\
    \        }\n        else {\n            sum += sign * last;\n            sign\
    \ *= -1;\n        }\n        last = sum;\n    }\n    return count;\n}\n</code>\n\
    <|/ a tags=arrays,algorithm,c++ |>\n<| a tags=arrays,algorithm,c++ |>\n<code>\n\
    long count_nums(long[] arr) {\n    long count = 0;\n    long sum = 0;\n", "{\n\
    \    long sum = 0;\n    for(int i = 0; i < arr.length; i++){\n        sum += arr[i];\n\
    \    }\n    return sum;\n}", "{\n    long count = 0;\n    for(long i : arr) \n\
    \    {\n        long sum = 0;\n        for(long j : arr) \n        {\n       \
    \     sum += j;\n        }\n        if(sum > 0) \n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\n\
    This does not provide an answer to the question. To critique or request clarification\
    \ from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/26835825)\n\
    <|/ c |>\n<| c |>\nThis does provide an answer to the question. He asked how to\
    \ count the number of positive numbers in a list. He also asked how to count the\
    \ negative numbers in a list. He also asked how to count the numbers with more\
    \ than 1 digit. He also asked how to count the numbers with more than 2 digits.\
    \ He also asked how to count the numbers with more than 3 digits. He also asked\
    \ how to count the numbers with more than 4 digits. He also asked how to count\
    \ the numbers with more than 5 digits. He also asked how to count the numbers\
    \ with more than 6 digits. He also asked how to count the numbers with more than\
    \ 7 digits. He also asked how to count the numbers with more than 8 digits. He\
    \ also asked how to count the numbers with more than 9 digits. He also asked how\
    \ to count the numbers with more than 10 digits. He also asked how to count the\
    \ numbers with more than 11 digits. He also asked how to count the numbers with\
    \ more than 12 digits. He also asked how to count the numbers with more than 13\
    \ digits. He also asked how to count the numbers with more than 14 digits. He\
    \ also asked how to count the numbers with more than 15 digits. He also asked\
    \ how to count the numbers with more than 16 digits. He also asked how to count\
    \ the numbers with more than 17 digits. He also asked how to count the numbers\
    \ with more than 18 digits. He also asked how to count the numbers with more than\
    \ 19 digits. He also asked how to count the numbers with more than 20 digits.\
    \ He also asked how to count the numbers with more than 21 digits. He also asked\
    \ how to count the numbers with more than 22 digits. He also asked how to count\
    \ the numbers with more than 23 digits. He also asked how to count the numbers\
    \ with more than 24 digits. He also asked how to count the numbers with more than\
    \ 25 digit", "{\n    long count = 0;\n    long sum = 0;\n    for(int i = 0; i\
    \ < arr.length; i++){\n        sum += arr[i];\n        if(sum > 0){\n        \
    \    count++;\n        }\n    }\n    return count;\n}", "{\n    long sum = 0;\n\
    \    for(int i = 0; i < arr.length; i++){\n        sum += arr[i];\n    }\n   \
    \ return sum;\n}\n</code>\n<|/ a tags=algorithm,c++,arrays |>\n<| c |>\nThis doesn't\
    \ work. Try it with `count_nums([-1, 11, -11])`.\n<|/ c |>\n<| c |>\nI see what\
    \ you mean. I've edited my answer to account for negative numbers. Thanks for\
    \ pointing that out.\n<|/ c |>\n<| c |>\n`count_nums([-1, 11, -11])` returns `3`\
    \ instead of `1`.\n<|/ c |>\n<| c |>\nI see what you mean. I've edited my answer\
    \ to account for negative numbers. Thanks for pointing that out.\n<|/ c |>\n<|\
    \ c |>\nThe question says \"Write a function count_nums which takes an array of\
    \ integers and returns the number of elements which has a sum of digits > 0\"\
    , so `count_nums([-1, 11, -11])` should return `1`.\n<|/ c |>\n<| a dscore=0 |>\n\
    <code>", "{\n    long count = 0;\n    for(int i = 0; i < arr.length; i++) \n \
    \   {\n        if(arr[i] > 0) \n        {\n            count += arr[i] / 10;\n\
    \            count += arr[i] % 10;\n        }\n    }\n    return count;\n}\n</code>\n\
    <|/ a tags=java,algorithm |>\n<| c |>\nThis doesn't work. Try it with `count_nums([-1,\
    \ 11, -11])`.\n<|/ c |>\n<| c |>\nYes, I forgot about negative numbers. I edited\
    \ my answer. Thanks for pointing out.\n<|/ c |>\n<| a tags=java,algorithm |>\n\
    <code>\npublic int countDigits(int n) {\n    int count = 0;\n    while (n > 0)\
    \ {\n        n /= 10;\n        count++;\n    }\n    return count;\n}\n</code>\n\
    <|/ a dscore=2 |>\n<| a dscore=2 |>\n<code>\npublic int countDigits(int n) {\n\
    \    int count = 0;\n    while (n > 0) {\n        n /= 10;\n        count++;\n\
    \    }\n    return count;\n}\n</code>\n<|/ a tags=java,algorithm |>\n<| a dscore=2\
    \ |>\n<code>\npublic int countDigits(int n) {\n    int count = 0;\n    while (n\
    \ > 0) {\n        n /= 10;\n        count++;\n    }\n    return count;\n}\n</code>\n\
    <|/ a tags=java,algorithm |>\n<| a tags=java,algorithm |>\n<code>\npublic int\
    \ countDigits(int n) {\n    int count = 0;\n    while (n > 0) {\n        n /=\
    \ 10;\n        count++;\n    }\n    return count;\n}\n</code>\n<|/ a dscore=2\
    \ |>\n<| a dscore=2 |>\n<code>\npublic int countDigits(int n) {\n    int count\
    \ = 0;\n    while (n > 0) {\n        n /= 10;\n        count++;\n    }\n    return\
    \ count;\n}\n</code>\n<|/ a tags=java,algorithm |>\n<| a dscore=2 |>\n<code>\n\
    public int countDigits(int n) {\n    int count = 0;\n    while (n > 0) {\n   \
    \     n /= 10;\n        count++;\n    }\n    return count;\n}\n</code>\n<|/ a\
    \ tags=java,algorithm |>\n<| a |>\n<code>\npublic int countDigits(int n) {\n \
    \   int count = 0;\n    while (n > 0) {\n        n /= 10;\n        count++;\n\
    \    }\n    return count;\n}\n</code>\n<|/ a tags=java,algorithm dscore=2 |>\n\
    <| a dscore=2 |>\n<code>\npublic int countDigits(int n) {\n    int count = 0;\n\
    \    while (n > 0) {\n        n /= 10;\n        count++;\n    }\n    return count;\n",
  "{\n    long count = 0;\n    for(int i = 0; i < arr.length; i++)\n    {\n      \
    \  if(arr[i] > 0)\n        {\n            count += arr[i];\n        }\n    }\n\
    \    return count;\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=c++,algorithm |>\n\
    <code>\n#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace\
    \ std;", "{\n    int count = 0;\n    for(int i = 0; i < arr.length; i++){\n  \
    \      if(arr[i] > 0){\n            count += arr[i];\n        }\n    }\n    return\
    \ count;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=c#,algorithm |>\n<code>\npublic\
    \ int CountDigits(int number)\n{\n    int count = 0;\n    while (number > 0)\n\
    \    {\n        number /= 10;\n        count++;\n    }\n    return count;\n}\n\
    </code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\npublic int CountDigits(int\
    \ number)\n{\n    int count = 0;\n    while (number > 0)\n    {\n        number\
    \ /= 10;\n        count++;\n    }\n    return count;\n}\n</code>\n<|/ a tags=c#,algorithm\
    \ |>\n<| a dscore=0 |>\n<code>\npublic int CountDigits(int number)\n{\n    int\
    \ count = 0;\n    while (number > 0)\n    {\n        number /= 10;\n        count++;\n\
    \    }\n    return count;\n}\n</code>\n<|/ a tags=c#,algorithm |>\n<| a tags=c#,algorithm\
    \ |>\n<code>\npublic int CountDigits(int number)\n{\n    int count = 0;\n    while\
    \ (number > 0)\n    {\n        number /= 10;\n        count++;\n    }\n    return\
    \ count;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=c#,algorithm |>\n<code>\npublic\
    \ int CountDigits(int number)\n{\n    int count = 0;\n    while (number > 0)\n\
    \    {\n        number /= 10;\n        count++;\n    }\n    return count;\n}\n\
    </code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\npublic int CountDigits(int\
    \ number)\n{\n    int count = 0;\n    while (number > 0)\n    {\n        number\
    \ /= 10;\n        count++;\n    }\n    return count;\n}\n</code>\n<|/ a tags=c#,algorithm\
    \ |>\n<| a dscore=0 |>\n<code>\npublic int CountDigits(int number)\n{\n    int\
    \ count = 0;\n    while (number > 0)\n    {\n        number /= 10;\n        count++;\n\
    \    }\n    return count;\n}\n</code>\n<|/ a tags=c#,algorithm |>\n<| a tags=c#,algorithm\
    \ |>\n<code>\npublic int CountDigits(int number)\n{\n    int count = 0;\n    while\
    \ (number > 0)\n    {\n        number /= 10;\n        count++;\n    }\n    return\
    \ count;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=c#,algorithm |>\n<code>", "{\n\
    \    long count = 0;\n    for(int i = 0; i < arr.length; i++)\n    {\n       \
    \ if(arr[i] > 0)\n        {\n            count += arr[i] % 10;\n        }\n  \
    \  }\n    return count;\n}\n</code>\n<|/ a tags=c++,arrays |>\n<| c |>\nThis code\
    \ doesn't work if you pass it `[1,2,-3]` because `arr[i] % 10` will give `3` instead\
    \ of `-1`.\n<|/ c |>\n<| c |>\nYes, you are right. I missed that case. Thanks\
    \ for pointing it out.\n<|/ c |>\n<| a tags=c++,arrays |>\n<code>\n#include <iostream>\n\
    using namespace std;", "{\n    long count = 0;\n    for(int i = 0; i < arr.length;\
    \ i++) \n    {\n        if(arr[i] > 0) \n        {\n            count += arr[i]\
    \ % 10;\n        }\n    }\n    return count;\n}\n</code>\n<|/ a dscore=0 |>\n\
    <| c |>\nThis code doesn't work. Try it for [1, 1, 2]. Your code returns 3, but\
    \ should be 2.\n<|/ c |>\n<| c |>\nI tested it and it works. I tested it on [1,\
    \ 1, 2] and it returns 2.\n<|/ c |>\n<| c |>\nI tested it on [1, 1, 2] and it\
    \ returns 2. What is the problem?\n<|/ c |>\n<| c |>\nI tested it on [1, 1, 2]\
    \ and it returns 2. What is the problem?\n<|/ c |>\n<| c |>\nI tested it on [1,\
    \ 1, 2] and it returns 2. What is the problem?\n<|/ c |>\n<| a dscore=0 |>\n<code>\n\
    public int countDigits(int n) {\n    int count = 0;\n    while (n > 0) {\n   \
    \     count += n % 10;\n        n /= 10;\n    }\n    return count;\n}\n</code>\n\
    <|/ a tags=java |>\n<| c |>\nThis code doesn't work. Try it for [1, 1, 2]. Your\
    \ code returns 3, but should be 2.\n<|/ c |>\n<| c |>\nI tested it and it works.\
    \ I tested it on [1, 1, 2] and it returns 2.\n<|/ c |>\n<| c |>\nI tested it on\
    \ [1, 1, 2] and it returns 2. What is the problem?\n<|/ c |>\n<| c |>\nI tested\
    \ it on [1, 1, 2] and it returns 2. What is the problem?\n<|/ c |>\n<| c |>\n\
    I tested it on [1, 1, 2] and it returns 2. What is the problem?\n<|/ c |>\n<|\
    \ a tags=java |>\n<code>\npublic int countDigits(int n) {\n    int count = 0;\n\
    \    while (n > 0) {\n        count += n % 10;\n        n /= 10;\n    }\n    return\
    \ count;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis code doesn't work. Try\
    \ it for [1, 1, 2]. Your code returns 3, but should be 2.\n<|/ c |>\n<| c |>\n\
    I tested it and it works. I tested it on [1, 1, 2] and it returns 2.\n<|/ c |>\n\
    <| c |>\nI tested it on [1, 1, 2] and it returns 2. What is the problem?\n<|/\
    \ c |>\n<| c |>\nI tested it on [1, 1, ", "{\n    long sum = 0;\n    for(int i\
    \ = 0; i < arr.length; i++)\n    {\n        sum += arr[i];\n    }\n    return\
    \ sum;\n}\n</code>\n<|/ a tags=c++,arrays,algorithm,c |>\n<| c |>\nI believe this\
    \ solution is O(n^2) since it iterates over all numbers. A better solution would\
    \ be to iterate over all numbers and count the numbers that have a sum of digits\
    \ > 0.\n<|/ c |>\n<| c |>\nYes, you are right. My solution was O(n^2) because\
    \ I didn't think of that. Thanks for pointing it out.\n<|/ c |>\n<| c |>\nI believe\
    \ this solution is O(n^2) since it iterates over all numbers. A better solution\
    \ would be to iterate over all numbers and count the numbers that have a sum of\
    \ digits > 0.\n<|/ c |>\n<| c |>\nI believe this solution is O(n^2) since it iterates\
    \ over all numbers. A better solution would be to iterate over all numbers and\
    \ count the numbers that have a sum of digits > 0.\n<|/ c |>\n<| c |>\nI believe\
    \ this solution is O(n^2) since it iterates over all numbers. A better solution\
    \ would be to iterate over all numbers and count the numbers that have a sum of\
    \ digits > 0.\n<|/ c |>\n<| a tags=c++,arrays,algorithm,c |>\nI believe this solution\
    \ is O(n^2) since it iterates over all numbers. A better solution would be to\
    \ iterate over all numbers and count the numbers that have a sum of digits > 0.\n\
    <code>", "{\n    long sum = 0;\n    for(int i = 0; i < arr.length; i++)\n    {\n\
    \        sum += arr[i];\n    }\n    return sum;\n}\n</code>\n<|/ a tags=c++,arrays\
    \ |>\n<| c |>\nI didn't downvote, but I suspect it's because you didn't explain\
    \ what was wrong with OP's code. Also, your code is more verbose than it needs\
    \ to be.\n<|/ c |>\n<| c |>\nI didn't downvote either, but I think it's because\
    \ you didn't explain what was wrong with OP's code. Also, your code is more verbose\
    \ than it needs to be.\n<|/ c |>\n<| c |>\nI didn't downvote either, but I think\
    \ it's because you didn't explain what was wrong with OP's code. Also, your code\
    \ is more verbose than it needs to be.\n<|/ c |>\n<| c |>\nI didn't downvote either,\
    \ but I think it's because you didn't explain what was wrong with OP's code. Also,\
    \ your code is more verbose than it needs to be.\n<|/ c |>\n<| c |>\nI didn't\
    \ downvote either, but I think it's because you didn't explain what was wrong\
    \ with OP's code. Also, your code is more verbose than it needs to be.\n<|/ c\
    \ |>\n<| a |>\n<code>\n#include <iostream>\nusing namespace std;", "{\n    int\
    \ count = 0;\n    long sum = 0;\n    for(int i = 0; i < arr.length; i++){\n  \
    \      sum += arr[i];\n        if(sum > 0){\n            count++;\n        }\n\
    \    }\n    return count;\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>",
  "{\n    long sum = 0;\n    for(int i = 0; i < arr.length; i++){\n        sum +=\
    \ arr[i];\n    }\n    return sum;\n}\n</code>\n<|/ a tags=c++,algorithm,arrays\
    \ |>\n<| c |>\nThis code does not work. `count_nums([-1,11,-11]) == 3` should\
    \ be `1`.\n<|/ c |>\n<| c |>\nThe code works. I tested it before posting it. I\
    \ just added the comment to explain why it works.\n<|/ c |>\n<| c |>\nI tested\
    \ it again and it works. I added the comment to explain why it works.\n<|/ c |>\n\
    <| c |>\nI tested it again and it works. I added the comment to explain why it\
    \ works.\n<|/ c |>\n<| c |>\nI tested it again and it works. I added the comment\
    \ to explain why it works.\n<|/ c |>\n<| a dscore=1 |>\n<code>\n#include <iostream>\n\
    #include <vector>\n#include <algorithm>\nusing namespace std;", "{\n    long count\
    \ = 0;\n    for(int i = 0; i < arr.length; i++)\n    {\n        if(arr[i] > 0)\n\
    \        {\n            count += arr[i];\n        }\n    }\n    return count;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't work if you have a negative\
    \ number with more than one digit.\n<|/ c |>\n<| c |>\nYes, I missed that case.\
    \ Thanks for pointing it out.\n<|/ c |>\n<| a tags=c++,algorithm |>\n<code>\n\
    #include <iostream>\n#include <vector>\n#include <algorithm>\n#include <numeric>\n\
    #include <iterator>\n#include <iomanip>\n#include <cmath>\n#include <cstdlib>\n\
    #include <ctime>", "{\n    long result = 0;\n    for(int i = 0; i < arr.length;\
    \ i++)\n    {\n        if(arr[i] > 0)\n        {\n            result += arr[i];\n\
    \        }\n    }\n    return result;\n}", "{\n    long count = 0;\n    for(int\
    \ i = 0; i < arr.length; i++){\n        if(arr[i] > 0){\n            count +=\
    \ arr[i];\n        }\n    }\n    return count;\n}\n</code>\n<|/ a tags=c++,arrays,algorithm\
    \ |>\n<| c |>\nThis doesn't work. Try it with `count_nums([-1, 11, -11])`\n<|/\
    \ c |>\n<| c |>\nIt doesn't work. Try it with `count_nums([-1, 11, -11])`\n<|/\
    \ c |>\n<| c |>\nIt doesn't work. Try it with `count_nums([-1, 11, -11])`\n<|/\
    \ c |>\n<| c |>\nIt doesn't work. Try it with `count_nums([-1, 11, -11])`\n<|/\
    \ c |>\n<| c |>\nIt doesn't work. Try it with `count_nums([-1, 11, -11])`\n<|/\
    \ c |>\n<| a tags=c++,arrays,algorithm |>\n<code>\n#include <iostream>\n#include\
    \ <vector>\n#include <algorithm>\nusing namespace std;", "{\n    long count =\
    \ 0;\n    for(int i = 0; i < arr.length; i++)\n    {\n        if(arr[i] > 0)\n\
    \        {\n            count += arr[i];\n        }\n    }\n    return count;\n\
    }\n</code>\n<|/ a tags=c++,algorithm,arrays |>\n<| c |>\nThis doesn't work. `count_nums([-1,\
    \ 11, -11]) == 1` should be `count_nums([-1, 11, -3]) == 1`.\n<|/ c |>\n<| c |>\n\
    Yes, you are right. Thanks for pointing out. I've corrected the answer.\n<|/ c\
    \ |>\n<| c |>\nThis doesn't work. `count_nums([-1, 11, -11]) == 1` should be `count_nums([-1,\
    \ 11, -3]) == 1`.\n<|/ c |>\n<| c |>\nThanks for pointing out. I've corrected\
    \ the answer.\n<|/ c |>\n<| a tags=c++,algorithm,arrays |>\n<code>\n#include <iostream>\n\
    #include <vector>\n#include <algorithm>\nusing namespace std;", "{\n    long count\
    \ = 0;\n    for(int i = 0; i < arr.length; i++) \n    {\n        if(arr[i] > 0)\
    \ \n        {\n            count += arr[i] % 10;\n        }\n    }\n    return\
    \ count;\n}\n</code>\n<|/ a tags=algorithm,c++,arrays |>\n<| c |>\nThis doesn't\
    \ work. Try it with `count_nums([-1, 11, -11])`.\n<|/ c |>\n<| c |>\nYeah, I missed\
    \ that case. Thanks for pointing it out.\n<|/ c |>\n<| c |>\nI updated my answer\
    \ to include a solution that works with negative numbers.\n<|/ c |>\n<| a dscore=0\
    \ |>\n<code>\n#include <iostream>\nusing namespace std;", "{\n    long count =\
    \ 0;\n    for(int i = 0; i < arr.length; i++) \n    {\n        if(arr[i] > 0)\
    \ \n        {\n            count += arr[i] % 10;\n        }\n    }\n    return\
    \ count;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis does not provide an answer\
    \ to the question. To critique or request clarification from an author, leave\
    \ a comment below their post. - [From Review](/review/low-quality-posts/11108743)\n\
    <|/ c |>\n<| c |>\nI believe this does answer the question. He wants to count\
    \ the number of positive numbers that have a sum of digits > 0.\n<|/ c |>\n<|\
    \ c |>\nThis does not provide an answer to the question. To critique or request\
    \ clarification from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/11108743)\n\
    <|/ c |>\n<| c |>\nI believe this does answer the question. He wants to count\
    \ the number of positive numbers that have a sum of digits > 0.\n<|/ c |>\n<|\
    \ c |>\nThis does not provide an answer to the question. To critique or request\
    \ clarification from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/11108743)\n\
    <|/ c |>\n<| a tags=c++,algorithm |>\n<code>\n#include <iostream>\n#include <vector>\n\
    #include <algorithm>\nusing namespace std;", "{\n    long sum = 0;\n    for(int\
    \ i = 0; i < arr.length; i++){\n        sum += arr[i];\n    }\n    return sum;\n\
    }\n</code>\n<|/ a tags=arrays,algorithm,java |>\n<| c |>\nThis is not an answer,\
    \ but a comment. Can you please edit your question and add this as a comment?\n\
    <|/ c |>\n<| c |>\nI agree with you. I am not able to comment on the question.\
    \ I am not able to comment on the answer either. I am not able to comment on the\
    \ question either. I am not able to comment on the answer either. I am not able\
    \ to comment on the question either. I am not able to comment on the answer either.\
    \ I am not able to comment on the question either. I am not able to comment on\
    \ the answer either. I am not able to comment on the question either. I am not\
    \ able to comment on the answer either. I am not able to comment on the question\
    \ either. I am not able to comment on the answer either. I am not able to comment\
    \ on the question either. I am not able to comment on the answer either. I am\
    \ not able to comment on the question either. I am not able to comment on the\
    \ answer either. I am not able to comment on the question either. I am not able\
    \ to comment on the answer either. I am not able to comment on the question either.\
    \ I am not able to comment on the answer either. I am not able to comment on the\
    \ question either. I am not able to comment on the answer either. I am not able\
    \ to comment on the question either. I am not able to comment on the answer either.\
    \ I am not able to comment on the question either. I am not able to comment on\
    \ the answer either. I am not able to comment on the question either. I am not\
    \ able to comment on the answer either. I am not able to comment on the question\
    \ either. I am not able to comment on the answer either. I am not able to comment\
    \ on the question either. I am not able to comment on the answer either. I am\
    \ not able to comment on the question either. I am not able to comment on the\
    \ answer either. I am not able to comment on the question either. I am not able\
    \ to comment on the answer either. I am not able to comment on the question either.\
    \ I am not able to comment on the answer either. I am not able to comment on the\
    \ question either. I am not able to comment on the answer either. I am not able\
    \ to comment on the question either. I am not able to comment on the answer either.\
    \ I am not able to comment on the question either. I am not able to comment on\
    \ the answer either. I am not able to comment on the question either. I am not\
    \ able to comment on the answer either. I am not able to comment on the question\
    \ either. I am not able to comment on the answer either. I am not able to comment\
    \ on the question either. I am not able to comment on the answer either. I am\
    \ not able to comment on the question either. I am not able to comment on the\
    \ answer either. I am not able to comment on the question either. I am not able\
    \ to comment on the ", "{\n    long count = 0;\n    for(int i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] > 0){\n            count += arr[i] % 10;\n        }\n\
    \    }\n    return count;\n}\n</code>\n<|/ a tags=c++,arrays |>\n<| c |>\nI guess\
    \ you meant `count_nums(arr) == count_nums(arr) - count_nums(arr) % 10`\n<|/ c\
    \ |>\n<| c |>\nYes, I meant that. Thanks.\n<|/ c |>\n<| c |>\nI guess you meant\
    \ `count_nums(arr) == count_nums(arr) - count_nums(arr) % 10`\n<|/ c |>\n<| c\
    \ |>\nYes, I meant that. Thanks.\n<|/ c |>\n<| c |>\nI guess you meant `count_nums(arr)\
    \ == count_nums(arr) - count_nums(arr) % 10`\n<|/ c |>\n<| a tags=c++,arrays |>\n\
    <code>\n#include <iostream>\nusing namespace std;", "{\n    long result = 0;\n\
    \    for(int i = 0; i < arr.length; i++){\n        if(arr[i] > 0){\n         \
    \   result += arr[i];\n        }\n    }\n    return result;\n}\n</code>\n<|/ a\
    \ dscore=1 |>\n<| c |>\nThis doesn't work. `count_nums([-1, 11, -11]) == 1` should\
    \ be `count_nums([-1, 11, -3]) == 1`\n<|/ c |>\n<| c |>\nI see what you mean.\
    \ I'll fix it now.\n<|/ c |>\n<| c |>\nI fixed it now. Thanks for pointing that\
    \ out.\n<|/ c |>\n<| c |>\nI fixed it now. Thanks for pointing that out.\n<|/\
    \ c |>\n<| c |>\nI fixed it now. Thanks for pointing that out.\n<|/ c |>\n<| a\
    \ dscore=1 |>\n<code>\npublic int countNums(int[] arr) {\n    int result = 0;\n\
    \    for (int i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n     \
    \       result += arr[i];\n        }\n    }\n    return result;\n}\n</code>\n\
    <|/ a tags=java,arrays |>\n<| a tags=java,arrays |>\n<code>\npublic int countNums(int[]\
    \ arr) {\n    int result = 0;\n    for (int i = 0; i < arr.length; i++) {\n  \
    \      if (arr[i] > 0) {\n            result += arr[i];\n        }\n    }\n  \
    \  return result;\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=java,arrays |>\n<code>\n\
    public int countNums(int[] arr) {\n    int result = 0;\n    for (int i = 0; i\
    \ < arr.length; i++) {\n        if (arr[i] > 0) {\n            result += arr[i];\n\
    \        }\n    }\n    return result;\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=java,arrays\
    \ |>\n<code>\npublic int countNums(int[] arr) {\n    int result = 0;\n    for\
    \ (int i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            result\
    \ += arr[i];\n        }\n    }\n    return result;\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| a tags=java,arrays |>\n<code>\npublic int countNums(int[] arr) {\n  \
    \  int result = 0;\n    for (int i = 0; i < arr.length; i++) {\n        if (arr[i]\
    \ > 0) {\n            result += arr[i];\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| a tags=java,arrays |>\n<code>\npublic int countNums(int[]\
    \ arr) {\n    int result = 0;\n    for (int i = 0; i < arr.length; i++) {\n  \
    \      if (arr[i] > 0) {\n            result += arr[i];\n        }\n    }\n  \
    \  return result;\n}\n</code>\n<|/ a dscore=1 |>\n", "{\n    long sum = 0;\n \
    \   for(int i = 0; i < arr.length; i++)\n    {\n        sum += arr[i];\n    }\n\
    \    return sum;\n}\n</code>\n<|/ a tags=c++,algorithm |>\n<| c |>\nThis code\
    \ doesn't work. Try it on `[1, 1, 2]`.\n<|/ c |>\n<| c |>\n: It does work. Try\
    \ it on `[1, 1, 2]`.\n<|/ c |>\n<| c |>\n: It does work. Try it on `[1, 1, 2]`.\n\
    <|/ c |>\n<| c |>\n: It does work. Try it on `[1, 1, 2]`.\n<|/ c |>\n<| c |>\n\
    : It does work. Try it on `[1, 1, 2]`.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n#include\
    \ <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;",
  "{\n    long count = 0;\n    for(int i = 0; i < arr.length; i++)\n    {\n      \
    \  if(arr[i] > 0)\n        {\n            count += arr[i];\n        }\n    }\n\
    \    return count;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n\
    public class Solution {", "{\n    long count = 0;\n    for(int i = 0; i < arr.length;\
    \ i++)\n    {\n        if(arr[i] > 0)\n        {\n            count += arr[i]\
    \ % 10;\n            arr[i] /= 10;\n        }\n        else\n        {\n     \
    \       arr[i] = -arr[i];\n            count += arr[i] % 10;\n            arr[i]\
    \ /= 10;\n        }\n    }\n    return count;\n}\n</code>\n<|/ a tags=c++,arrays\
    \ |>\n<| c |>\nThis doesn't work. `count_nums([-1, 11, -11]) == 1` should be `count_nums([-1,\
    \ 11, -3]) == 1`\n<|/ c |>\n<| c |>\nIt works. I tested it before posting. `count_nums([-1,\
    \ 11, -3]) == 1`\n<|/ c |>\n<| c |>\nIt works. I tested it before posting. `count_nums([-1,\
    \ 11, -3]) == 1`\n<|/ c |>\n<| c |>\nIt works. I tested it before posting. `count_nums([-1,\
    \ 11, -3]) == 1`\n<|/ c |>\n<| c |>\nIt works. I tested it before posting. `count_nums([-1,\
    \ 11, -3]) == 1`\n<|/ c |>\n<| a tags=c++,arrays |>\n<code>\n#include <iostream>\n\
    #include <vector>\n#include <algorithm>\nusing namespace std;", "{\n    long count\
    \ = 0;\n    for(long i : arr) \n    {\n        if(i>0) \n        {\n         \
    \   if(i%10==0) \n            {\n                count++;\n            }\n   \
    \     }\n    }\n    return count;\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=algorithm,c++,arrays\
    \ |>\n<code>\n#include <iostream>\nusing namespace std;", "{\n    long count =\
    \ 0;\n    for(int i = 0; i < arr.length; i++)\n    {\n        if(arr[i] > 0)\n\
    \        {\n            count += arr[i] / 10;\n            count += arr[i] % 10;\n\
    \        }\n    }\n    return count;\n}\n</code>\n<|/ a tags=c++,algorithm |>\n\
    <| c |>\nThe `count_nums` function doesn't work if you pass it `[-2, -1, -3]`.\n\
    <|/ c |>\n<| c |>\nI fixed the bug. Thanks for pointing it out.\n<|/ c |>\n<|\
    \ a tags=c++,algorithm |>\n<code>", "{\n    long sum = 0;\n    for(int i = 0;\
    \ i < arr.length; i++) \n    {\n        sum += arr[i];\n    }\n    return sum;\n\
    }\n</code>\n<|/ a tags=arrays,c++,algorithm,c |>\n<| c |>\nThis is not an answer,\
    \ but a comment. Try to improve your answer by explaining what your code does,\
    \ and why it works.\n<|/ c |>\n<| c |>\nI believe this answer is the best one\
    \ so far. Although I believe it can be improved by explaining why it works.\n\
    <|/ c |>\n<| c |>\nI believe this answer is the best one so far. Although I believe\
    \ it can be improved by explaining why it works.\n<|/ c |>\n<| c |>\nI believe\
    \ this answer is the best one so far. Although I believe it can be improved by\
    \ explaining why it works.\n<|/ c |>\n<| c |>\nI believe this answer is the best\
    \ one so far. Although I believe it can be improved by explaining why it works.\n\
    <|/ c |>\n<| a dscore=5 |>\nThe algorithm is simple:", "{\n    long sum = 0;\n\
    \    for(int i = 0; i < arr.length; i++)\n    {\n        sum += arr[i];\n    }\n\
    \    return sum;\n}\n</code>\n<|/ a tags=algorithm,c++,arrays |>\n<| c |>\nThis\
    \ doesn't work. `count_nums([-1, 11, -11]) == 1` should be `count_nums([-1, 11,\
    \ -3]) == 1`\n<|/ c |>\n<| c |>\nI fixed the bug. Thanks.\n<|/ c |>\n<| c |>\n\
    This doesn't work. `count_nums([-1, 11, -11]) == 1` should be `count_nums([-1,\
    \ 11, -3]) == 1`\n<|/ c |>\n<| c |>\nI fixed the bug. Thanks.\n<|/ c |>\n<| c\
    \ |>\nThis doesn't work. `count_nums([-1, 11, -11]) == 1` should be `count_nums([-1,\
    \ 11, -3]) == 1`\n<|/ c |>\n<| a tags=algorithm,c++,arrays |>\n<code>\n#include\
    \ <iostream>\nusing namespace std;", "{\n    long count = 0;\n    for (int i =\
    \ 0; i < arr.length; i++) \n    {\n        if (arr[i] > 0) \n        {\n     \
    \       count += arr[i] % 10;\n        }\n    }\n    return count;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nThis doesn't work. Try it with `count_nums([-1, 11,\
    \ -11])`.\n<|/ c |>\n<| c |>\nIt does work. Try it with `count_nums([-1, 11, -11])`.\n\
    <|/ c |>\n<| c |>\nIt doesn't work. Try it with `count_nums([-1, 11, -11])`.\n\
    <|/ c |>\n<| c |>\nIt does work. Try it with `count_nums([-1, 11, -11])`.\n<|/\
    \ c |>\n<| c |>\nIt does work. Try it with `count_nums([-1, 11, -11])`.\n<|/ c\
    \ |>\n<| a tags=java,arrays |>\n<code>\nimport java.util.Arrays;", "{\n    int\
    \ count = 0;\n    for(int i = 0; i < arr.length; i++){\n        if(arr[i] > 0){\n\
    \            count += arr[i];\n        }\n    }\n    return count;\n}\n</code>\n\
    <|/ a tags=arrays,c++,algorithm |>\n<| c |>\nThis code doesn't work. Try it on\
    \ `[1, 1, 2]`.\n<|/ c |>\n<| c |>\nIt does work. Try it on `[1, 1, 2]`.\n<|/ c\
    \ |>\n<| c |>\nIt does work. Try it on `[1, 1, 2]`.\n<|/ c |>\n<| c |>\nIt does\
    \ work. Try it on `[1, 1, 2]`.\n<|/ c |>\n<| c |>\nIt does work. Try it on `[1,\
    \ 1, 2]`.\n<|/ c |>\n<| a tags=arrays,c++,algorithm |>\n<code>\n#include <iostream>\n\
    #include <vector>\n#include <algorithm>\nusing namespace std;", "{\n    long sum\
    \ = 0;\n    for(int i = 0; i < arr.length; i++) \n    {\n        sum += arr[i];\n\
    \    }\n    return sum;\n}\n</code>\n<|/ a |>\n<| c |>\nThis doesn't work. Try\
    \ it with `count_nums([-1, 11, -11])`.\n<|/ c |>\n<| c |>\nIt does work. Try it\
    \ with `count_nums([-1, 11, -11])`.\n<|/ c |>\n<| c |>\nIt doesn't work. Try it\
    \ with `count_nums([-1, 11, -11])`.\n<|/ c |>\n<| c |>\nIt does work. Try it with\
    \ `count_nums([-1, 11, -11])`.\n<|/ c |>\n<| c |>\nIt does work. Try it with `count_nums([-1,\
    \ 11, -11])`.\n<|/ c |>\n<| a tags=c#,algorithm |>\n<code>\npublic int CountDigits(int\
    \ number)\n{\n    int count = 0;\n    while (number > 0)\n    {\n        number\
    \ /= 10;\n        count++;\n    }\n    return count;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nThis doesn't work. Try it with `CountDigits(-10)`.\n<|/ c |>\n\
    <| c |>\nIt does work. Try it with `CountDigits(-10)`.\n<|/ c |>\n<| c |>\nIt\
    \ does work. Try it with `CountDigits(-10)`.\n<|/ c |>\n<| c |>\nIt does work.\
    \ Try it with `CountDigits(-10)`.\n<|/ c |>\n<| c |>\nIt does work. Try it with\
    \ `CountDigits(-10)`.\n<|/ c |>\n<| a dscore=0 |>\n<code>\npublic int CountDigits(int\
    \ number)\n{\n    int count = 0;\n    while (number > 0)\n    {\n        number\
    \ /= 10;\n        count++;\n    }\n    return count;\n}\n</code>\n<|/ a tags=c#,algorithm\
    \ |>\n<| c |>\nThis doesn't work. Try it with `CountDigits(-10)`.\n<|/ c |>\n\
    <| c |>\nIt does work. Try it with `CountDigits(-10)`.\n<|/ c |>\n<| c |>\nIt\
    \ does work. Try it with `CountDigits(-10)`.\n<|/ c |>\n<| c |>\nIt does work.\
    \ Try it with `CountDigits(-10)`.\n<|/ c |>\n<| c |>\nIt does work. Try it with\
    \ `CountDigits(-", "{\n    long count = 0;\n    long sum = 0;\n    for(int i =\
    \ 0; i < arr.length; i++)\n    {\n        sum += arr[i];\n        if(sum > 0)\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}\n</code>\n\
    <|/ a dscore=1 |>\n<| c |>\nThank you so much for helping me out. I really appreciate\
    \ it!\n<|/ c |>\n<| a tags=c++,arrays |>\n<code>\n#include <iostream>\nusing namespace\
    \ std;", "{\n    long count = 0;\n    for(int i = 0; i < arr.length; i++){\n \
    \       count += std.math.abs(arr[i]);\n    }\n    return count;\n}\n</code>\n\
    <|/ a dscore=1 |>\n<| c |>\nThis doesn't work. `count_nums([-1, 11, -11]) == 1`\
    \ should be `2`.\n<|/ c |>\n<| c |>\nIt does work. `count_nums([-1, 11, -11])\
    \ == 2`. `count_nums([1, 1, 2]) == 3`.\n<|/ c |>\n<| c |>\nIt does work. `count_nums([-1,\
    \ 11, -11]) == 2`. `count_nums([1, 1, 2]) == 3`.\n<|/ c |>\n<| c |>\nIt does work.\
    \ `count_nums([-1, 11, -11]) == 2`. `count_nums([1, 1, 2]) == 3`.\n<|/ c |>\n\
    <| c |>\nIt does work. `count_nums([-1, 11, -11]) == 2`. `count_nums([1, 1, 2])\
    \ == 3`.\n<|/ c |>\n<| a dscore=1 |>\n<code>", "{\n    long count = 0;\n    for(int\
    \ i = 0; i < arr.length; i++){\n        if(arr[i] > 0){\n            count +=\
    \ arr[i];\n        }\n    }\n    return count;\n}", "{\n    long count = 0;\n\
    \    for (int i = 0; i < arr.length; i++) \n    {\n        long sum = 0;\n   \
    \     for (int j = 0; j < arr[i]; j++) \n        {\n            sum += arr[i]\
    \ % 10;\n            arr[i] /= 10;\n        }\n        if (sum > 0) \n       \
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n</code>\n<|/\
    \ a tags=algorithm,c++,arrays |>\n<| c |>\nThis doesn't work. Try it with `count_nums([-1,\
    \ 11, -11])`.\n<|/ c |>\n<| c |>\nThanks for pointing out. I've fixed the bug\
    \ and added a test case for it.\n<|/ c |>\n<| c |>\nThis doesn't work. Try it\
    \ with `count_nums([-1, 11, -11])`.\n<|/ c |>\n<| c |>\nThanks for pointing out.\
    \ I've fixed the bug and added a test case for it.\n<|/ c |>\n<| c |>\nThis doesn't\
    \ work. Try it with `count_nums([-1, 11, -11])`.\n<|/ c |>\n<| a dscore=0 |>\n\
    <code>\n#include <iostream>\n#include <vector>\n#include <algorithm>\n#include\
    \ <numeric>\nusing namespace std;", "{\n    long count = 0;\n    long sum = 0;\n\
    \    for(int i = 0; i < arr.length; i++)\n    {\n        sum += arr[i];\n    \
    \    if(sum > 0)\n        {\n            count++;\n            sum = 0;\n    \
    \    }\n    }\n    return count;\n}\n</code>\n<|/ a tags=c++,arrays,algorithm\
    \ |>\n<| c |>\nThis doesn't work if the array is empty or has only negative numbers.\
    \ You will get an out of bounds exception. Also the sum variable is unnecessary.\n\
    <|/ c |>\n<| c |>\nI agree with you. My code was just to give an idea of how to\
    \ solve the problem. Thanks for pointing out my mistakes.\n<|/ c |>\n<| c |>\n\
    This code doesn't work if the array is empty or has only negative numbers. You\
    \ will get an out of bounds exception. Also the sum variable is unnecessary.\n\
    <|/ c |>\n<| c |>\nI agree with you. My code was just to give an idea of how to\
    \ solve the problem. Thanks for pointing out my mistakes.\n<|/ c |>\n<| a dscore=1\
    \ |>\n<code>\n#include <iostream>\n#include <vector>\n#include <algorithm>", "{\n\
    \    long sum = 0;\n    for(int i = 0; i < arr.length; i++){\n        sum += arr[i];\n\
    \    }\n    return sum;\n}\n</code>\n<|/ a |>\n<| c |>\nThis doesn't work. `count_nums([-1,\
    \ 11, -11]) == 1` should be `count_nums([-1, 11, -3]) == 1`.\n<|/ c |>\n<| c |>\n\
    I fixed the bug. Thanks for pointing it out.\n<|/ c |>\n<| c |>\nThis doesn't\
    \ work either. `count_nums([-1, 11, -11]) == 1` should be `count_nums([-1, 11,\
    \ -3]) == 1`.\n<|/ c |>\n<| c |>\nI fixed the bug. Thanks for pointing it out.\n\
    <|/ c |>\n<| a dscore=0 |>\n<code>\nimport java.util.ArrayList;\nimport java.util.List;",
  "{\n    long count = 0;\n    long sum = 0;\n    for(int i = 0; i < arr.length; i++){\n\
    \        sum += arr[i];\n        if(sum > 0){\n            count++;\n        }\n\
    \    }\n    return count;\n}\n</code>\n<|/ a tags=c++,arrays |>\n<| c |>\nI believe\
    \ this answer is wrong. `count_nums([1, 1, 2]) == 3` should be `count_nums([1,\
    \ 1, -3]) == 3`\n<|/ c |>\n<| c |>\nYes, you are right. I missed that case. Thanks\
    \ for pointing out. Fixed now.\n<|/ c |>\n<| a tags=c++,arrays |>\n<code>\n#include\
    \ <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;",
  "{\n    long count = 0;\n    for (int i = 0; i < arr.length; i++) \n    {\n    \
    \    if (arr[i] > 0) \n        {\n            count += arr[i] % 10;\n        }\n\
    \    }\n    return count;\n}", "{\n    long count = 0;\n    for(int i = 0; i <\
    \ arr.length; i++){\n        if(arr[i] > 0){\n            count += arr[i];\n \
    \       }\n    }\n    return count;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\n\
    This doesn't answer the question at all. OP wants to count the number of positive\
    \ integers whose digits sum to more than 0.\n<|/ c |>\n<| c |>\nI did answer it\
    \ by saying \"Write a function count_nums which takes an array of integers and\
    \ returns the number of elements which has a sum of digits > 0.\" I did it by\
    \ saying \"Write a function count_nums which takes an array of integers and returns\
    \ the number of elements which has a sum of digits > 0.\" I did it by saying \"\
    Write a function count_nums which takes an array of integers and returns the number\
    \ of elements which has a sum of digits > 0.\" I did it by saying \"Write a function\
    \ count_nums which takes an array of integers and returns the number of elements\
    \ which has a sum of digits > 0.\" I did it by saying \"Write a function count_nums\
    \ which takes an array of integers and returns the number of elements which has\
    \ a sum of digits > 0.\" I did it by saying \"Write a function count_nums which\
    \ takes an array of integers and returns the number of elements which has a sum\
    \ of digits > 0.\" I did it by saying \"Write a function count_nums which takes\
    \ an array of integers and returns the number of elements which has a sum of digits\
    \ > 0.\" I did it by saying \"Write a function count_nums which takes an array\
    \ of integers and returns the number of elements which has a sum of digits > 0.\"\
    \ I did it by saying \"Write a function count_nums which takes an array of integers\
    \ and returns the number of elements which has a sum of digits > 0.\" I did it\
    \ by saying \"Write a function count_nums which takes an array of integers and\
    \ returns the number of elements which has a sum of digits > 0.\" I did it by\
    \ saying \"Write a function count_nums which takes an array of integers and returns\
    \ the number of elements which has a sum of digits > 0.\" I did it by saying \"\
    Write a function count_nums which takes an array of integers and returns the number\
    \ of elements which has a sum of digits > 0.\" I did it by saying \"Write a function\
    \ count_nums which takes an array of integers and returns the number of elements\
    \ which has a sum of digits > 0.\" I did it by saying \"Write a function count_nums\
    \ which takes an array of integers and returns the number of elements which has\
    \ a sum of digits > 0.\" I did it by saying \"Write a function count_nums which\
    \ takes an array of integers and returns the number of elements which has a sum\
    \ of digits > 0.\" I did it by saying \"Write a function count_nums which takes\
    \ an array of integers and returns the number of elements which has a ", "{\n\
    \    long count = 0;\n    for(int i = 0; i < arr.length; i++) \n    {\n      \
    \  if(arr[i] > 0) \n        {\n            count += arr[i] % 10;\n        }\n\
    \    }\n    return count;\n}\n</code>\n<|/ a tags=c++,arrays |>\n<| c |>\nThis\
    \ does not provide an answer to the question. To critique or request clarification\
    \ from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/11709444)\n\
    <|/ c |>\n<| c |>\nI believe this does answer the question. He wants to count\
    \ how many numbers have the sum of digits > 0.\n<|/ c |>\n<| c |>\nThis does not\
    \ provide an answer to the question. To critique or request clarification from\
    \ an author, leave a comment below their post. - [From Review](/review/low-quality-posts/11709444)\n\
    <|/ c |>\n<| c |>\nThis does not provide an answer to the question. To critique\
    \ or request clarification from an author, leave a comment below their post. -\
    \ [From Review](/review/low-quality-posts/11709444)\n<|/ c |>\n<| c |>\nThis does\
    \ not provide an answer to the question. To critique or request clarification\
    \ from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/11709444)\n\
    <|/ c |>\n<| a tags=c++,arrays |>\n<code>\n#include <iostream>\nusing namespace\
    \ std;", "{\n    long count = 0;\n    for(int i = 0; i < arr.length; i++){\n \
    \       if(arr[i] > 0){\n            count += arr[i];\n        }\n    }\n    return\
    \ count;\n}\n</code>\n<|/ a tags=c++,arrays |>\n<| c |>\nThis doesn't answer the\
    \ question. OP wants to count the number of positive numbers in the array.\n<|/\
    \ c |>\n<| c |>\nI believe that OP wants to count the number of positive numbers\
    \ in the array. He wants to count the number of positive numbers in the array\
    \ which has at least one digit greater than 0.\n<|/ c |>\n<| c |>\nYes, I believe\
    \ that OP wants to count the number of positive numbers in the array. He wants\
    \ to count the number of positive numbers in the array which has at least one\
    \ digit greater than 0.\n<|/ c |>\n<| c |>\nYes, I believe that OP wants to count\
    \ the number of positive numbers in the array. He wants to count the number of\
    \ positive numbers in the array which has at least one digit greater than 0.\n\
    <|/ c |>\n<| c |>\nI believe that OP wants to count the number of positive numbers\
    \ in the array. He wants to count the number of positive numbers in the array\
    \ which has at least one digit greater than 0.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n\
    #include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace\
    \ std;", "{\n    int count = 0;\n    for(int i = 0; i < arr.length; i++){\n  \
    \      if(arr[i] > 0){\n            count += arr[i] % 10;\n        }\n    }\n\
    \    return count;\n}\n</code>\n<|/ a tags=java,arrays,algorithm |>\n<| c |>\n\
    This doesn't work if the first element of the array is negative.\n<|/ c |>\n<|\
    \ c |>\nI didn't see that requirement. Updated my answer.\n<|/ c |>\n<| c |>\n\
    This doesn't work if the first element of the array is negative.\n<|/ c |>\n<|\
    \ c |>\nI didn't see that requirement. Updated my answer.\n<|/ c |>\n<| a tags=java,arrays,algorithm\
    \ |>\n<code>\npublic static void main(String[] args) {\n    int[] arr = {-1, 11,\
    \ -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27,\
    \ -28, -29, -30};\n    int count = 0;\n    for(int i = 0; i < arr.length; i++){\n\
    \        if(arr[i] > 0){\n            count += arr[i] % 10;\n        }\n    }\n\
    \    System.out.println(count);\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis\
    \ doesn't work if the first element of the array is negative.\n<|/ c |>\n<| c\
    \ |>\nI didn't see that requirement. Updated my answer.\n<|/ c |>\n<| a tags=java,arrays,algorithm\
    \ |>\n<code>\npublic static void main(String[] args) {\n    int[] arr = {-1, 11,\
    \ -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27,\
    \ -28, -29, -30};\n    int count = 0;\n    for(int i = 0; i < arr.length; i++){\n\
    \        if(arr[i] > 0){\n            count += arr[i] % 10;\n        }\n    }\n\
    \    System.out.println(count);\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis\
    \ doesn't work if the first element of the array is negative.\n<|/ c |>\n<| a\
    \ tags=java,arrays,algorithm |>\n<code>\npublic static void main(String[] args)\
    \ {\n    int[] arr = {-1, 11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21,\
    \ -22, -23, -24, -25, -26, -27, -28, -29, -30};\n    int count = 0;\n    for(int\
    \ i = 0; i < arr.length; i++){\n        if(arr[i] > 0){\n            count +=\
    \ arr[i] % ", "{\n    long result = 0;\n    for(int i = 0; i < arr.length; i++)\
    \ \n    {\n        if(arr[i] > 0) \n        {\n            result += arr[i] %\
    \ 10;\n        }\n    }\n    return result;\n}\n</code>\n<|/ a tags=c++,algorithm\
    \ |>\n<| c |>\nThis doesn't work. Try it with `count_nums([-1, 11, -11])`.\n<|/\
    \ c |>\n<| c |>\nIt works fine for me. Can you please elaborate on how it fails?\n\
    <|/ c |>\n<| c |>\nIt doesn't work for `count_nums([-1, 11, -11])`.\n<|/ c |>\n\
    <| c |>\nIt works fine for me. Can you please elaborate on how it fails?\n<|/\
    \ c |>\n<| c |>\nIt doesn't work for `count_nums([-1, 11, -11])`. Try it with\
    \ `count_nums([-1, 11, -11])`.\n<|/ c |>\n<| a tags=c++,algorithm |>\n<code>",
  "{\n    long count = 0;\n    long sum = 0;\n    for(long i = 0; i < arr.length;\
    \ i++){\n        sum += arr[i];\n        if(sum > 0){\n            count++;\n\
    \        }\n    }\n    return count;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\n\
    This code doesn't work. Try it for [1, 1, 2]. It returns 3 instead of 2.\n<|/\
    \ c |>\n<| c |>\nYeah, I noticed that and fixed it. I was testing with negative\
    \ numbers and forgot to remove that part. Thanks for pointing it out.\n<|/ c |>\n\
    <| a tags=algorithm,c++ |>\n<code>\n#include <iostream>\n#include <vector>\nusing\
    \ namespace std;", "{\n    long count = 0;\n    for(int i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] > 0){\n            count += arr[i];\n        }\n  \
    \  }\n    return count;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n\
    import java.util.*;\nimport java.lang.*;\nimport java.io.*;\nclass GFG\n{\n  \
    \  public static void main (String[] args) throws java.lang.Exception\n    {\n\
    \        Scanner sc=new Scanner(System.in);\n        int t=sc.nextInt();\n   \
    \     while(t-->0)\n        {\n            int n=sc.nextInt();\n            int\
    \ sum=0;\n            for(int i=0;i<n;i++)\n            {\n                sum+=sc.nextInt();\n\
    \            }\n            System.out.println(sum);\n        }\n    }\n}\n</code>\n\
    <|/ a tags=java,arrays,sum |>\n<| a dscore=0 |>\n<code>\nimport java.util.Scanner;",
  "{\n    long result = 0;\n    for(int i = 0; i < arr.length; i++)\n    {\n     \
    \   if(arr[i] > 0)\n        {\n            result += arr[i];\n        }\n    }\n\
    \    return result;\n}\n</code>\n<|/ a tags=c++,algorithm,arrays |>\n<| c |>\n\
    This doesn't work. Try it on `[-10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\
    \ -10, -10, -10, -10, -10, -10, ", "{\n    long sum = 0;\n    for(int i = 0; i\
    \ < arr.length; i++)\n    {\n        sum += arr[i];\n    }\n    return sum;\n\
    }\n</code>\n<|/ a tags=c++,arrays |>\n<| c |>\nI guess you meant `return sum;`\
    \ instead of `return count;`\n<|/ c |>\n<| c |>\nYes, I meant `return sum;` instead\
    \ of `return count;`\n<|/ c |>\n<| a tags=c++,arrays |>\n<code>\n#include <iostream>\n\
    using namespace std;", "{\n    long count = 0;\n    long sum = 0;\n    for(long\
    \ i : arr) \n    {\n        sum += i;\n        if(sum > 0) \n        {\n     \
    \       count++;\n        }\n    }\n    return count;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nThis doesn't work. Try it on `[1, 1, 2]`.\n<|/ c |>\n<| c |>\n\
    It does work. Try it on `[1, 1, 2]`.\n<|/ c |>\n<| c |>\nIt doesn't work. Try\
    \ it on `[1, 1, 2]`.\n<|/ c |>\n<| c |>\nIt does work. Try it on `[1, 1, 2]`.\n\
    <|/ c |>\n<| c |>\nIt doesn't work. Try it on `[1, 1, 2]`.\n<|/ c |>\n<| a |>\n\
    <code>\npublic int countDigits(int n) {\n    int count = 0;\n    while (n > 0)\
    \ {\n        n /= 10;\n        count++;\n    }\n    return count;\n}\n</code>\n\
    <|/ a tags=java dscore=0 |>\n<| c |>\nThis doesn't work. Try it on `[1, 1, 2]`.\n\
    <|/ c |>\n<| c |>\nIt does work. Try it on `[1, 1, 2]`.\n<|/ c |>\n<| c |>\nIt\
    \ doesn't work. Try it on `[1, 1, 2]`.\n<|/ c |>\n<| c |>\nIt does work. Try it\
    \ on `[1, 1, 2]`.\n<|/ c |>\n<| c |>\nIt doesn't work. Try it on `[1, 1, 2]`.\n\
    <|/ c |>\n<| a dscore=0 |>\n<code>\npublic int countDigits(int n) {\n    int count\
    \ = 0;\n    while (n > 0) {\n        n /= 10;\n        count++;\n    }\n    return\
    \ count;\n}\n</code>\n<|/ a tags=java |>\n<| c |>\nThis doesn't work. Try it on\
    \ `[1, 1, 2]`.\n<|/ c |>\n<| c |>\nIt does work. Try it on `[1, 1, 2]`.\n<|/ c\
    \ |>\n<| c |>\nIt doesn't work. Try it on `[1, 1, 2]`.\n<|/ c |>\n<| c |>\nIt\
    \ does work. Try it on `[1, 1, 2]`.\n<|/ c |>\n<| a tags=java |>\n<code>\npublic\
    \ int countDigits(int n) {\n    int count = 0;\n    while (n > 0) {\n        n\
    \ /= 10;\n        count++;\n    }\n    return count;\n", "{\n    long count =\
    \ 0;\n    long sum = 0;\n    for(int i = 0; i < arr.length; i++)\n    {\n    \
    \    sum += arr[i];\n        if(sum > 0)\n        {\n            count++;\n  \
    \      }\n    }\n    return count;\n}\n</code>\n<|/ a tags=arrays,c++,algorithm\
    \ |>\n<| a tags=arrays,c++,algorithm |>\n<code>\n#include <iostream>\n#include\
    \ <vector>\n#include <algorithm>\nusing namespace std;", "{\n    int count = 0;\n\
    \    for(int i = 0; i < arr.length; i++){\n        if(arr[i] > 0){\n         \
    \   count += arr[i];\n        }\n    }\n    return count;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nThis is not an answer. Just a bunch of code. Explain what it does\
    \ and how it does it.\n<|/ c |>\n<| c |>\nI added some explanation to the answer.\
    \ Hope it helps.\n<|/ c |>\n<| a |>\n<code>\nimport java.util.*;\npublic class\
    \ Solution {\n    public static void main(String[] args) {\n        Scanner sc\
    \ = new Scanner(System.in);\n        int n = sc.nextInt();\n        int[] arr\
    \ = new int[n];\n        for(int i=0;i<n;i++){\n            arr[i] = sc.nextInt();\n\
    \        }\n        long ans = count_nums(arr);\n        System.out.println(ans);\n\
    \    }\n    \n    public static long count_nums(int[] arr) {\n        int count\
    \ = 0;\n        for(int i=0;i<arr.length;i++){\n            int sum = 0;\n   \
    \         for(int j=0;j<arr[i];j++){\n                sum += arr[j];\n       \
    \     }\n            if(sum>0){\n                count++;\n            }\n   \
    \     }\n        return count;\n    }\n}\n</code>\n<|/ a tags=arrays,java dscore=0\
    \ |>\n<| a tags=arrays,java |>\n<code>\nimport java.util.*;\npublic class Solution\
    \ {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n\
    \        int n = sc.nextInt();\n        int[] arr = new int[n];\n        for(int\
    \ i=0;i<n;i++){\n            arr[i] = sc.nextInt();\n        }\n        long ans\
    \ = count_nums(arr);\n        System.out.println(ans);\n    }\n    \n    public\
    \ static long count_nums(int[] arr) {\n        int count = 0;\n        for(int\
    \ i=0;i<arr.length;i++){\n            int sum = 0;\n            for(int j=0;j<arr[i];j++){\n\
    \                sum += arr[j];\n            }\n            if(sum>0){\n     \
    \           count++;\n            }\n        }\n        return count;\n    }\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| c |>\nPlease don't post only code as an answer,\
    \ but also provide an explanation of what your code does and how it solves the\
    \ problem of the question. Answers with an explanation are usually more helpful\
    \ and of better quality, and are more likely to attract upvotes.\n<|/ c |>\n<|\
    \ a dscore=0 |>\n", "{\n    long count = 0;\n    long sum = 0;\n    for(long i\
    \ = 0; i < arr.length; ++i)\n    {\n        sum += arr[i];\n        if(sum > 0)\n\
    \        {\n            ++count;\n        }\n    }\n    return count;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nThis doesn't work. Try it with `count_nums([-1, 11,\
    \ -11])`.\n<|/ c |>\n<| c |>\nIt works fine for me. `count_nums([-1, 11, -11])\
    \ == 1`\n<|/ c |>\n<| c |>\nIt doesn't work for me. Try it with `count_nums([-1,\
    \ 11, -11])`.\n<|/ c |>\n<| c |>\nIt works for me too. `count_nums([-1, 11, -11])\
    \ == 1`\n<|/ c |>\n<| c |>\nIt works for me too. `count_nums([-1, 11, -11]) ==\
    \ 1`\n<|/ c |>\n<| a dscore=0 |>\n<code>\npublic int countDigits(int[] arr) {\n\
    \    int count = 0;\n    int sum = 0;\n    for (int i = 0; i < arr.length; i++)\
    \ {\n        sum += arr[i];\n        if (sum > 0) {\n            count++;\n  \
    \      }\n    }\n    return count;\n}\n</code>\n<|/ a tags=java,arrays |>\n<|\
    \ c |>\nThis doesn't work. Try it with `countDigits([-1, 11, -11])`.\n<|/ c |>\n\
    <| c |>\nIt works for me too. `countDigits([-1, 11, -11]) == 1`\n<|/ c |>\n<|\
    \ c |>\nIt works for me too. `countDigits([-1, 11, -11]) == 1`\n<|/ c |>\n<| c\
    \ |>\nIt works for me too. `countDigits([-1, 11, -11]) == 1`\n<|/ c |>\n<| c |>\n\
    It works for me too. `countDigits([-1, 11, -11]) == 1`\n<|/ c |>\n<| a dscore=0\
    \ |>\n<code>\npublic int countDigits(int[] arr) {\n    int count = 0;\n    int\
    \ sum = 0;\n    for (int i = 0; i < arr.length; i++) {\n        sum += arr[i];\n\
    \        if (sum > 0) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n</code>\n<|/ a tags=java,arrays |>\n<| c |>\nThis doesn't work. Try it with\
    \ `countDigits([-1, 11, -11])`.\n<|/ c |>\n<| c |>\nIt works for me too. `countDigits([-1,\
    \ 11, -11]) == 1`\n<|/ c |>\n<| c |>\nIt works for me too", "{\n    long count\
    \ = 0;\n    for(int i = 0; i < arr.length; i++) \n    {\n        if(arr[i] > 0)\
    \ \n        {\n            count += arr[i] % 10;\n        }\n    }\n    return\
    \ count;\n}\n</code>\n<|/ a tags=c++,arrays |>\n<| c |>\nThis code does not work.\
    \ Try it on `[1, 1, 2]`.\n<|/ c |>\n<| c |>\nThe code works. I tested it on `[1,\
    \ 1, 2]`\n<|/ c |>\n<| c |>\nIt doesn't work. Try it on `[1, 1, 2]`.\n<|/ c |>\n\
    <| c |>\nIt works fine for me. Did you try it on `[1, 1, 2]`?\n<|/ c |>\n<| c\
    \ |>\nYes, I did. `count_nums([1, 1, 2]) == 3`.\n<|/ c |>\n<| a |>\n<code>\n#include\
    \ <iostream>\nusing namespace std;", "{\n    long count = 0;\n    for (int i =\
    \ 0; i < arr.length; i++)\n    {\n        if (arr[i] > 0)\n        {\n       \
    \     count += arr[i] % 10;\n        }\n    }\n    return count;\n}", "{\n   \
    \ long count = 0;\n    for(int i = 0; i < arr.length; i++){\n        if(arr[i]\
    \ > 0){\n            count += arr[i];\n        }\n    }\n    return count;\n}\n\
    </code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\nimport java.util.ArrayList;\n\
    import java.util.List;", "{\n    long count = 0;\n    for(int i = 0; i < arr.length;\
    \ i++) \n    {\n        if(arr[i] > 0) \n        {\n            count += arr[i]\
    \ % 10;\n        }\n    }\n    return count;\n}\n</code>\n<|/ a dscore=0 |>\n\
    <| c |>\nThis doesn't work. `count_nums([-1, 11, -11]) == 1` should be `2`\n<|/\
    \ c |>\n<| c |>\nI thought that would be the case, but I tested it and it returned\
    \ 2\n<|/ c |>\n<| c |>\nI tested it and it returned 2\n<|/ c |>\n<| c |>\nI tested\
    \ it and it returned 2\n<|/ c |>\n<| c |>\nI tested it and it returned 2\n<|/\
    \ c |>\n<| a dscore=0 |>\n<code>\nimport java.util.Arrays;", "{\n    long count\
    \ = 0;\n    for(int i = 0; i < arr.length; i++) \n    {\n        if(arr[i] > 0)\
    \ \n        {\n            count += arr[i] % 10;\n        }\n    }\n    return\
    \ count;\n}", "{\n    long count = 0;\n    for(int i = 0; i < arr.length; i++){\n\
    \        if(arr[i] > 0){\n            count += arr[i] % 10;\n        }\n    }\n\
    \    return count;\n}\n</code>\n<|/ a tags=java,arrays,algorithm |>\n<| a tags=java,arrays,algorithm\
    \ |>\n<code>\nimport java.util.Arrays;", "{\n    long count = 0;\n    for(int\
    \ i = 0; i < arr.length; i++)\n    {\n        if(arr[i] > 0)\n        {\n    \
    \        count += arr[i] % 10;\n        }\n    }\n    return count;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nThis code doesn't work. Try it with `count_nums([-1,\
    \ 11, -11])`\n<|/ c |>\n<| c |>\nI tested it and it works. I even tested it with\
    \ `count_nums([-1, 11, -11])` and it returned `1`\n<|/ c |>\n<| c |>\nI tested\
    \ it with `count_nums([-1, 11, -11])` and it returned `1`\n<|/ c |>\n<| c |>\n\
    I tested it with `count_nums([-1, 11, -11])` and it returned `1`\n<|/ c |>\n<|\
    \ c |>\nI tested it with `count_nums([-1, 11, -11])` and it returned `1`\n<|/\
    \ c |>\n<| a dscore=0 |>\n<code>\npublic int countDigits(int[] nums) {\n    int\
    \ count = 0;\n    for(int i = 0; i < nums.length; i++) {\n        if(nums[i] >\
    \ 0) {\n            count += nums[i] % 10;\n        }\n    }\n    return count;\n\
    }\n</code>\n<|/ a tags=java,arrays |>\n<| c |>\nThis code doesn't work. Try it\
    \ with `countDigits([-1, 11, -11])`\n<|/ c |>\n<| c |>\nI tested it and it works.\
    \ I even tested it with `countDigits([-1, 11, -11])` and it returned `1`\n<|/\
    \ c |>\n<| c |>\nI tested it with `countDigits([-1, 11, -11])` and it returned\
    \ `1`\n<|/ c |>\n<| c |>\nI tested it with `countDigits([-1, 11, -11])` and it\
    \ returned `1`\n<|/ c |>\n<| c |>\nI tested it with `countDigits([-1, 11, -11])`\
    \ and it returned `1`\n<|/ c |>\n<| a tags=java,arrays |>\n<code>\npublic int\
    \ countDigits(int[] nums) {\n    int count = 0;\n    for(int i = 0; i < nums.length;\
    \ i++) {\n        if(nums[i] > 0) {\n            count += nums[i] % 10;\n    \
    \    }\n    }\n    return count;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis\
    \ code doesn't work. Try it with `countDigits([-1, 11, -11])`\n<|/ c |>\n<| c\
    \ |>\nI tested it and it works. I even tested it with `countDigits([", "{\n  \
    \  int count = 0;\n    long sum = 0;\n    for(int i = 0; i < arr.length; i++){\n\
    \        sum += arr[i];\n        if(sum > 0){\n            count++;\n        }\n\
    \    }\n    return count;\n}\n</code>\n<|/ a tags=arrays,c++,algorithm |>\n<|\
    \ c |>\nThis does not answer the question. OP wants to count the number of positive\
    \ integers whose digits sum to more than 0.\n<|/ c |>\n<| c |>\nI missed that\
    \ part. Thanks for pointing it out. I've edited my answer.\n<|/ c |>\n<| c |>\n\
    This answer does not work. Try it with `count_nums([-1, 11, -11])`\n<|/ c |>\n\
    <| c |>\nI tested it and it works. Please check my updated answer.\n<|/ c |>\n\
    <| c |>\nI tested it and it works. Please check my updated answer.\n<|/ c |>\n\
    <| a tags=arrays,c++,algorithm |>\nThe algorithm is simple: ", "{\n    long count\
    \ = 0;\n    for(int i = 0; i < arr.length; i++){\n        count += std.math.abs(arr[i]);\n\
    \    }\n    return count;\n}\n</code>\n<|/ a tags=arrays,c++,algorithm |>\n<|\
    \ c |>\nI like this solution, but I wonder if there is a way to do this without\
    \ using std.math?\n<|/ c |>\n<| c |>\nI added a solution without using std.math\n\
    <|/ c |>\n<| c |>\nI added a solution without using std.math\n<|/ c |>\n<| a dscore=1\
    \ |>\n<code>\n#include <iostream>\n#include <vector>\n#include <algorithm>\nusing\
    \ namespace std;", "{\n    long count = 0;\n    for(long i : arr) \n    {\n  \
    \      count += std.math.mod(i, 10);\n    }\n    return count;\n}", "{\n    long\
    \ count = 0;\n    for(int i = 0; i < arr.length; i++)\n    {\n        if(arr[i]\
    \ > 0)\n        {\n            count += arr[i];\n        }\n    }\n    return\
    \ count;\n}\n</code>\n<|/ a tags=c++,arrays |>\n<| c |>\nThanks for your answer.\
    \ Can you please explain how you used the std library?\n<|/ c |>\n<| c |>\nI used\
    \ the std library to import the math library and to import the typecons library.\
    \ These are libraries that are part of the standard C++ library and are available\
    \ on most platforms.\n<|/ c |>\n<| c |>\nThanks for your answer. Can you please\
    \ explain how you used the std library?\n<|/ c |>\n<| c |>\nI used the std library\
    \ to import the math library and to import the typecons library. These are libraries\
    \ that are part of the standard C++ library and are available on most platforms.\n\
    <|/ c |>\n<| c |>\nI used the std library to import the math library and to import\
    \ the typecons library. These are libraries that are part of the standard C++\
    \ library and are available on most platforms.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n\
    #include <iostream>\nusing namespace std;", "{\n    long result = 0;\n    for(int\
    \ i = 0; i < arr.length; i++)\n    {\n        result += arr[i] > 0 ? arr[i] :\
    \ -arr[i];\n    }\n    return result;\n}\n</code>\n<|/ a tags=c++,arrays,algorithm\
    \ |>\n<| c |>\nThis doesn't work if there are negative numbers in the array. For\
    \ example, `count_nums([-1, 11, -11])` returns `1` instead of `3`.\n<|/ c |>\n\
    <| c |>\nYes, it does. I tested it before posting it. The OP didn't specify that\
    \ negative numbers should be counted. I'll edit my answer to include a solution\
    \ for negative numbers.\n<|/ c |>\n<| c |>\nI didn't downvote, but I suspect it's\
    \ because you didn't test your code. `count_nums([-1, 11, -11])` returns `1` instead\
    \ of `3`.\n<|/ c |>\n<| c |>\nI tested it before posting it. The OP didn't specify\
    \ that negative numbers should be counted. I'll edit my answer to include a solution\
    \ for negative numbers.\n<|/ c |>\n<| c |>\nI tested it before posting it. The\
    \ OP didn't specify that negative numbers should be counted. I'll edit my answer\
    \ to include a solution for negative numbers.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n\
    #include <iostream>\nusing namespace std;", "{\n    long count = 0;\n    for(int\
    \ i = 0; i < arr.length; i++){\n        if(arr[i] > 0){\n            count +=\
    \ arr[i];\n        }\n    }\n    return count;\n}\n</code>\n<|/ a dscore=0 |>\n\
    <| c |>\nI appreciate your efforts, but this doesn't answer the question. Your\
    \ code doesn't even compile.\n<|/ c |>\n<| c |>\nI edited the code a little bit\
    \ to make it compile. Also I added a comment to the code explaining what it does.\n\
    <|/ c |>\n<| c |>\nI appreciate your efforts, but this doesn't answer the question.\
    \ Your code doesn't even compile.\n<|/ c |>\n<| c |>\nI edited the code a little\
    \ bit to make it compile. Also I added a comment to the code explaining what it\
    \ does.\n<|/ c |>\n<| c |>\nI appreciate your efforts, but this doesn't answer\
    \ the question. Your code doesn't even compile.\n<|/ c |>\n<| a |>\n<code>\nimport\
    \ java.util.ArrayList;\nimport java.util.List;", "{\n    long sum = 0;\n    for(int\
    \ i = 0; i < arr.length; i++)\n    {\n        sum += arr[i];\n    }\n    return\
    \ sum;\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\nimport java.util.Arrays;\n\
    import java.util.Collections;\nimport java.util.List;\nimport java.util.stream.Collectors;",
  "{\n    long count = 0;\n    for (int i = 0; i < arr.length; i++) \n    {\n    \
    \    if (arr[i] > 0) \n        {\n            count += arr[i] / 10;\n        \
    \    count += arr[i] % 10;\n        }\n    }\n    return count;\n}\n</code>\n\
    <|/ a tags=c++,algorithm,arrays |>\n<| a tags=c++,algorithm,arrays |>\n<code>\n\
    #include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace\
    \ std;", "{\n    long count = 0;\n    for(int i = 0; i < arr.length; i++){\n \
    \       if(arr[i] > 0){\n            count += arr[i];\n        }\n    }\n    return\
    \ count;\n}\n</code>\n<|/ a |>\n<| c |>\nThis does not provide an answer to the\
    \ question. To critique or request clarification from an author, leave a comment\
    \ below their post. - [From Review](/review/low-quality-posts/11874158)\n<|/ c\
    \ |>\n<| c |>\nI believe this does answer the question. He asked how to count\
    \ the number of positive integers whose digits sum to more than 0. The code he\
    \ posted does exactly that.\n<|/ c |>\n<| c |>\nThis does not provide an answer\
    \ to the question. To critique or request clarification from an author, leave\
    \ a comment below their post. - [From Review](/review/low-quality-posts/11874158)\n\
    <|/ c |>\n<| c |>\nI believe this does answer the question. He asked how to count\
    \ the number of positive integers whose digits sum to more than 0. The code he\
    \ posted does exactly that.\n<|/ c |>\n<| c |>\nThis does not provide an answer\
    \ to the question. To critique or request clarification from an author, leave\
    \ a comment below their post. - [From Review](/review/low-quality-posts/11874158)\n\
    <|/ c |>\n<| a tags=java,arrays |>\n<code>\nimport java.util.*;\npublic class\
    \ Solution {\n    public static void main(String[] args) {\n        Scanner sc\
    \ = new Scanner(System.in);\n        int n = sc.nextInt();\n        int[] arr\
    \ = new int[n];\n        for(int i = 0; i < n; i++){\n            arr[i] = sc.nextInt();\n\
    \        }\n        int count = 0;\n        for(int i = 0; i < arr.length; i++){\n\
    \            int sum = 0;\n            for(int j = 0; j < arr[i]; j++){\n    \
    \            sum += arr[j];\n            }\n            if(sum > 0){\n       \
    \         count++;\n            }\n        }\n        System.out.println(count);\n\
    \    }\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis does not provide an answer\
    \ to the question. To critique or request clarification from an author, leave\
    \ a comment below their post. - [From Review](/review/low-quality-posts/11874158)\n\
    <|/ c |>\n<| c |>\nThis does not provide an answer to the question. To critique\
    \ or request clarifi", "{\n    long sum = 0;\n    for(int i = 0; i < arr.length;\
    \ i++)\n    {\n        if(arr[i] > 0)\n        {\n            sum += arr[i];\n\
    \        }\n    }\n    return sum;\n}\n</code>\n<|/ a tags=c++,arrays |>\n<| c\
    \ |>\nThis doesn't work. `count_nums([-1, 11, -11]) == 1` should be `2`.\n<|/\
    \ c |>\n<| c |>\nThanks for pointing that out. I've fixed the code. Thanks again.\n\
    <|/ c |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\nusing namespace std;",
  "{\n    long count = 0;\n    for(int i = 0; i < arr.length; i++)\n    {\n      \
    \  if(arr[i] > 0)\n        {\n            count += arr[i] % 10;\n            arr[i]\
    \ /= 10;\n        }\n    }\n    return count;\n}\n</code>\n<|/ a tags=c++,algorithm\
    \ |>\n<| c |>\nThis doesn't work. Try it with `count_nums([-1, 11, -11])`.\n<|/\
    \ c |>\n<| c |>\nIt does work. Try it with `count_nums([-1, 11, -11])`.\n<|/ c\
    \ |>\n<| c |>\nIt doesn't work. Try it with `count_nums([-1, 11, -11])`.\n<|/\
    \ c |>\n<| c |>\nIt does work. Try it with `count_nums([-1, 11, -11])`.\n<|/ c\
    \ |>\n<| c |>\nIt does work. Try it with `count_nums([-1, 11, -11])`.\n<|/ c |>\n\
    <| a dscore=0 |>\n<code>", "{\n    long count = 0;\n    for(int i = 0; i < arr.length;\
    \ i++) \n    {\n        if(arr[i] > 0) \n        {\n            count += arr[i]\
    \ % 10;\n        }\n    }\n    return count;\n}\n</code>\n<|/ a tags=c++,arrays\
    \ |>\n<| c |>\nThis doesn't work if you have a negative number in the array. For\
    \ example, `count_nums([-1, 11, -11])` returns `1` instead of `3`.\n<|/ c |>\n\
    <| c |>\nI added a solution that doesn't require the array to be sorted.\n<|/\
    \ c |>\n<| c |>\nThis doesn't work if you have a negative number in the array.\
    \ For example, `count_nums([-1, 11, -11])` returns `1` instead of `3`.\n<|/ c\
    \ |>\n<| c |>\nI added a solution that doesn't require the array to be sorted.\n\
    <|/ c |>\n<| a dscore=0 |>\n<code>", "{\n    long result = 0;\n    for(int i =\
    \ 0; i < arr.length; i++)\n    {\n        long num = arr[i];\n        if(num <\
    \ 0)\n        {\n            num = -num;\n            result -= num;\n       \
    \ }\n        else\n        {\n            result += num;\n        }\n    }\n \
    \   return result;\n}", "{\n    long count = 0;\n    for(int i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] > 0){\n            count += arr[i];\n        }\n  \
    \  }\n    return count;\n}\n</code>\n<|/ a dscore=0 |>\n<| a |>\n<code>\nimport\
    \ java.util.ArrayList;\nimport java.util.List;", "{\n    long count = 0;\n   \
    \ for(int i = 0; i < arr.length; i++) \n    {\n        if(arr[i] > 0) \n     \
    \   {\n            count += arr[i] % 10;\n        }\n    }\n    return count;\n\
    }\n</code>\n<|/ a tags=c++,arrays |>\n<| c |>\nThis doesn't seem to work. `count_nums([-1,\
    \ 11, -11]) == 1` should be `count_nums([-1, 11, -11]) == 3`\n<|/ c |>\n<| c |>\n\
    I believe this should work. Can you please explain why it doesn't?\n<|/ c |>\n\
    <| c |>\n`count_nums([-1, 11, -11]) == 1` should be `count_nums([-1, 11, -11])\
    \ == 3`\n<|/ c |>\n<| c |>\nI believe this should work. Can you please explain\
    \ why it doesn't?\n<|/ c |>\n<| c |>\nThis doesn't work. `count_nums([-1, 11,\
    \ -11]) == 1` should be `count_nums([-1, 11, -11]) == 3`\n<|/ c |>\n<| a dscore=0\
    \ |>\n<code>", "{\n    long sum = 0;\n    for(int i = 0; i < arr.length; i++)\n\
    \    {\n        if(arr[i] > 0)\n        {\n            sum += arr[i];\n      \
    \  }\n    }\n    return sum;\n}\n</code>\n<|/ a tags=arrays,algorithm,java |>\n\
    <| c |>\nThis doesn't seem to work. `count_nums([-1, 11, -11]) == 1` should be\
    \ `2` but this returns `1`.\n<|/ c |>\n<| c |>\nI tested it and it returns 2\n\
    <|/ c |>\n<| c |>\nI tested it and it returns 2\n<|/ c |>\n<| c |>\nI tested it\
    \ and it returns 2\n<|/ c |>\n<| c |>\nI tested it and it returns 2\n<|/ c |>\n\
    <| a tags=arrays,algorithm,java |>\n<code>\nimport java.util.Arrays;\nimport java.util.List;",
  "{\n    int count = 0;\n    for (int i = 0; i < arr.length; i++) \n    {\n     \
    \   if (arr[i] > 0) \n        {\n            int sum = 0;\n            while (arr[i]\
    \ > 0) \n            {\n                sum += arr[i] % 10;\n                arr[i]\
    \ /= 10;\n            }\n            if (sum > 0) \n            {\n          \
    \      count++;\n            }\n        }\n    }\n    return count;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nThis does not provide an answer to the question. To\
    \ critique or request clarification from an author, leave a comment below their\
    \ post. - [From Review](/review/low-quality-posts/26839524)\n<|/ c |>\n<| c |>\n\
    The question was \"Write a function count_nums which takes an array of integers\
    \ and returns the number of elements which has a sum of digits > 0.\" The code\
    \ I posted does exactly that. Why do you think it doesn't?\n<|/ c |>\n<| c |>\n\
    The question was \"Write a function count_nums which takes an array of integers\
    \ and returns the number of elements which has a sum of digits > 0.\" The code\
    \ I posted does exactly that. Why do you think it doesn't?\n<|/ c |>\n<| c |>\n\
    The question was \"Write a function count_nums which takes an array of integers\
    \ and returns the number of elements which has a sum of digits > 0.\" The code\
    \ I posted does exactly that. Why do you think it doesn't?\n<|/ c |>\n<| c |>\n\
    The question was \"Write a function count_nums which takes an array of integers\
    \ and returns the number of elements which has a sum of digits > 0.\" The code\
    \ I posted does exactly that. Why do you think it doesn't?\n<|/ c |>\n<| a tags=c#,arrays\
    \ |>\n<code>\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\n\
    using System.Text;\nusing System.Threading.Tasks;", "{\n    long result = 0;\n\
    \    for(int i = 0; i < arr.length; i++)\n    {\n        if(arr[i] > 0)\n    \
    \    {\n            result += arr[i];\n        }\n    }\n    return result;\n}",
  "{\n    long sum = 0;\n    long digit;\n    for(int i = 0; i < arr.length; i++){\n\
    \        digit = arr[i];\n        if(digit > 0){\n            sum += digit;\n\
    \        }\n    }\n    return sum;\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThis\
    \ doesn't work if you have a negative number with leading zeros, e.g. `count_nums([-1,\
    \ 11, -11]) == 1`\n<|/ c |>\n<| c |>\nYes, I noticed that after I posted my answer.\
    \ Thanks for pointing it out.\n<|/ c |>\n<| a tags=algorithm,c++ |>\n<code>\n\
    #include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace\
    \ std;", "{\n    int count = 0;\n    long sum = 0;\n    for(int i = 0; i < arr.length;\
    \ i++)\n    {\n        sum += arr[i];\n        if(sum > 0)\n        {\n      \
    \      count++;\n        }\n    }\n    return count;\n}\n</code>\n<|/ a tags=c++,arrays,algorithm\
    \ |>\n<| c |>\nThis doesn't work. Try it with `count_nums([-1, 11, -11])`\n<|/\
    \ c |>\n<| c |>\nThanks for pointing that out. I've fixed the code now.\n<|/ c\
    \ |>\n<| c |>\nThanks for your answer. I think it works but I'm still trying to\
    \ understand it. Can you please explain how it works?\n<|/ c |>\n<| c |>\nI've\
    \ added some comments to the code. Hope it helps.\n<|/ c |>\n<| c |>\nThanks for\
    \ your answer. I think it works but I'm still trying to understand it. Can you\
    \ please explain how it works?\n<|/ c |>\n<| a tags=c++,arrays,algorithm |>\n\
    <code>\n#include <iostream>\nusing namespace std;", "{\n    long count = 0;\n\
    \    for(int i = 0; i < arr.length; i++) \n    {\n        if(arr[i] > 0) \n  \
    \      {\n            count += arr[i] % 10;\n        }\n    }\n    return count;\n\
    }\n</code>\n<|/ a tags=c++,algorithm,arrays |>\n<| c |>\nThis does not work. Try\
    \ it with `[1,2,3]`.\n<|/ c |>\n<| c |>\nI tested it and it works. I added a test\
    \ case to my answer.\n<|/ c |>\n<| c |>\nI tested it and it works. I added a test\
    \ case to my answer.\n<|/ c |>\n<| c |>\nI tested it and it works. I added a test\
    \ case to my answer.\n<|/ c |>\n<| c |>\nI tested it and it works. I added a test\
    \ case to my answer.\n<|/ c |>\n<| a tags=c++,algorithm,arrays |>\n<code>", "{\n\
    \    long count = 0;\n    for(int i = 0; i < arr.length; i++) \n    {\n      \
    \  if(arr[i] > 0) \n        {\n            count += arr[i] % 10;\n        }\n\
    \    }\n    return count;\n}\n</code>\n<|/ a tags=c++,algorithm,arrays |>\n<|\
    \ c |>\nThanks for your answer. Can you please explain how this works?\n<|/ c\
    \ |>\n<| c |>\nI added some comments to the code. Hope it helps.\n<|/ c |>\n<|\
    \ c |>\nThanks a lot. Can you please explain how this works?\n<|/ c |>\n<| c |>\n\
    I added some comments to the code. Hope it helps.\n<|/ c |>\n<| c |>\nThanks a\
    \ lot. Can you please explain how this works?\n<|/ c |>\n<| a dscore=0 |>\n<code>\n\
    #include <iostream>\nusing namespace std;", "{\n    long sum = 0;\n    for(int\
    \ i = 0; i < arr.length; i++) \n    {\n        sum += arr[i];\n    }\n    return\
    \ sum;\n}"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

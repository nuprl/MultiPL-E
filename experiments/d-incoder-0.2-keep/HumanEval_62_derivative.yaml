name: HumanEval_62_derivative
language: humaneval_to_dlang.py
prompt: "import std.math;\nimport std.typecons;\n/*\n xs represent coefficients of\
  \ a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
  \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n  \
  \  [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nlong[] derivative(long[]\
  \ xs) \n"
tests: "unittest\n{\n    alias candidate = derivative;\n\n    assert(candidate([3L,\
  \ 1L, 2L, 4L, 5L]) == [1L, 4L, 12L, 20L]);\n    assert(candidate([1L, 2L, 3L]) ==\
  \ [2L, 6L]);\n    assert(candidate([3L, 2L, 1L]) == [2L, 2L]);\n    assert(candidate([3L,\
  \ 2L, 1L, 0L, 4L]) == [2L, 2L, 0L, 16L]);\n    assert(candidate([1L]) == []);\n\
  }\nvoid main(){}"
completions: ["{\n    long[] result = new long[(xs.length)+1];\n    for(int i = 0;\
    \ i < xs.length; i++)\n        result[i] = xs[i+1] - xs[i] * xs[i+1];\n    result[xs.length]\
    \ = 1;\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[]\
    \ xs) \n{\n    double[] result = new double[(xs.length)+1];\n    for(int i = 0;\
    \ i < xs.length; i++)\n        result[i] = xs[i+1] - xs[i] * xs[i+1];\n    result[xs.length]\
    \ = 1;\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[]\
    \ xs) \n{\n    float[] result = new float[(xs.length)+1];\n    for(int i = 0;\
    \ i < xs.length; i++)\n        result[i] = xs[i+1] - xs[i] * xs[i+1];\n    result[xs.length]\
    \ = 1;\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n    long[] result =\
    \ new long[(xs.length - 1)];\n    long x = 0;\n    long y = 0;\n    for(int i\
    \ = 0; i < xs.length; i++)\n    {\n        y = xs[i + 1];\n        result[i] =\
    \ 1;\n        for(int j = i; j < xs.length; j++)\n        {\n            x +=\
    \ (j - i) * xs[j];\n            result[i] += (j - i) * y;\n        }\n    }\n\
    \    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[]\
    \ xs) \n{\n    double[] result = new double[(xs.length - 1)];\n    double x =\
    \ 0;\n    double y = 0;\n    for(int i = 0; i < xs.length; i++)\n    {\n     \
    \   y = xs[i + 1];\n        result[i] = 1;\n        for(int j = i; j < xs.length;\
    \ j++)\n        {\n            x += (j - i) * xs[j];\n            result[i] +=\
    \ (j - i) * y;\n        }\n    }\n    return result;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[]\
    \ derivative(float[] xs) \n{\n    float[] result = new float[(xs.length - 1)];\n\
    \    float x = 0;\n    float y = 0;\n    for(int i = 0; i < xs.length; i++)\n\
    \    {\n        y = xs[i + 1];\n        result[i] = 1;\n        for(int j = i;\
    \ j < xs.length; j++)\n        {\n            x += (j - i) * xs[j];\n        \
    \    result[i] += (j - i) * y;\n        }\n    }\n    return result;\n}\n/*\n\
    \ xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] *\
    \ x^2 + ....\n     Return derivative of this polynomial in the same form.\n  \
    \  >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/", "{\n    long[] result = new long[xs.length];\n\
    \    for(int i = 0; i < xs.length; i++)\n    {\n        result[i] = xs[i + 1];\n\
    \    }\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[]\
    \ xs) \n{\n    double[] result = new double[xs.length];\n    for(int i = 0; i\
    \ < xs.length; i++)\n    {\n        result[i] = xs[i + 1];\n    }\n    return\
    \ result;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[] xs) \n{\n    float[]\
    \ result = new float[xs.length];\n    for(int i = 0; i < xs.length; i++)\n   \
    \ {\n        result[i] = xs[i + 1];\n    }\n    return result;\n}\n/*\n xs represent\
    \ coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n\
    \     Return derivative of this polynomial in the same form.\n    >>> derivative([3,\
    \ 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n\
    \    \n*/", "{\n    long[] result = new long[xs.length + 1];\n    result[0] =\
    \ xs[0];\n    for (int i = 1; i < xs.length; i++)\n        result[i] = result[i-1]\
    \ * xs[i];\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[]\
    \ xs) \n{\n    double[] result = new double[xs.length + 1];\n    result[0] = xs[0];\n\
    \    for (int i = 1; i < xs.length; i++)\n        result[i] = result[i-1] * xs[i];\n\
    \    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[]\
    \ xs) \n{\n    float[] result = new float[xs.length + 1];\n    result[0] = xs[0];\n\
    \    for (int i = 1; i < xs.length; i++)\n        result[i] = result[i-1] * xs[i];\n\
    \    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n    long[] result =\
    \ new long[xs.length];\n    for(int i = 0; i < xs.length; i++)\n        result[i]\
    \ = xs[i + 1] - xs[i];\n    return result;\n}", "{\n    long[] result = new long[xs.length\
    \ + 1];\n    \n    result[0] = xs[0];\n    for (int i = 1; i < xs.length; i++)\n\
    \        result[i] = result[i-1] + xs[i] * xs[i];\n    \n    return result;\n\
    }\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[] xs) \n{\n    double[]\
    \ result = new double[xs.length + 1];\n    \n    result[0] = xs[0];\n    for (int\
    \ i = 1; i < xs.length; i++)\n        result[i] = result[i-1] + xs[i] * xs[i];\n\
    \    \n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[]\
    \ xs) \n{\n    float[] result = new float[xs.length + 1];\n    \n    result[0]\
    \ = xs[0];\n    for (int i = 1; i < xs.length; i++)\n        result[i] = result[i-1]\
    \ + xs[i] * xs[i];\n    \n    return result;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n\
    \    long result = 0;\n    for(int i = 0; i < xs.length; i++)\n    {\n       \
    \ result *= xs[i];\n        result += 1;\n    }\n    long[] result = new long[result];\n\
    \    for(int i = 0; i < xs.length; i++)\n    {\n        result[i] = xs[i] - 1;\n\
    \    }\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[]\
    \ xs) \n{\n    double result = 0;\n    for(int i = 0; i < xs.length; i++)\n  \
    \  {\n        result *= xs[i];\n        result += 1;\n    }\n    double[] result\
    \ = new double[result];\n    for(int i = 0; i < xs.length; i++)\n    {\n     \
    \   result[i] = xs[i] - 1;\n    }\n    return result;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[]\
    \ derivative(float[] xs) \n{\n    float result = 0;\n    for(int i = 0; i < xs.length;\
    \ i++)\n    {\n        result *= xs[i];\n        result += 1;\n    }\n    float[]\
    \ result = new float[result];\n    for(int i = 0; i < xs.length; i++)\n    {\n\
    \        result[i] = xs[i] - 1;\n    }\n    return result;\n}\n/*\n xs represent\
    \ coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n\
    \     Return derivative of this polynomial in the same form.\n    >>> derivative([3,\
    \ 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n\
    \    \n*/", "{\n    long d = 1;\n    for(int i = 0; i < xs.length; i++)\n    {\n\
    \        d *= xs[i];\n    }\n    long[] result = new long[xs.length + 1];\n  \
    \  for(int i = 0; i < xs.length; i++)\n    {\n        result[i] = d;\n       \
    \ d *= xs[i];\n    }\n    result[xs.length] = 1;\n    return result;\n}", "{\n\
    \    int n = xs.length;\n    long[] ys = new long[n];\n    long x = 0;\n    long\
    \ y = 0;\n    for (int i = 0; i < n; i++) {\n        x = xs[i];\n        y = x\
    \ * y;\n        ys[i] = y;\n    }\n    return ys;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[]\
    \ derivative(double[] xs) \n{\n    int n = xs.length;\n    double[] ys = new double[n];\n\
    \    double x = 0;\n    double y = 0;\n    for (int i = 0; i < n; i++) {\n   \
    \     x = xs[i];\n        y = x * y;\n        ys[i] = y;\n    }\n    return ys;\n\
    }\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[] xs) \n{\n    int n\
    \ = xs.length;\n    float[] ys = new float[n];\n    float x = 0;\n    float y\
    \ = 0;\n    for (int i = 0; i < n; i++) {\n        x = xs[i];\n        y = x *\
    \ y;\n        ys[i] = y;\n    }\n    return ys;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n\
    \    long[] result = new long[xs.length + 1];\n    long x = 0;\n    for(int i\
    \ = 0; i < xs.length; i++)\n    {\n        result[i] = xs[i] - x;\n        x =\
    \ xs[i];\n    }\n    result[xs.length] = 1;\n    return result;\n}\n/*\n xs represent\
    \ coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n\
    \     Return derivative of this polynomial in the same form.\n    >>> derivative([3,\
    \ 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n\
    \    \n*/\ndouble[] derivative(double[] xs) \n{\n    double[] result = new double[xs.length\
    \ + 1];\n    double x = 0;\n    for(int i = 0; i < xs.length; i++)\n    {\n  \
    \      result[i] = xs[i] - x;\n        x = xs[i];\n    }\n    result[xs.length]\
    \ = 1;\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[]\
    \ xs) \n{\n    float[] result = new float[xs.length + 1];\n    float x = 0;\n\
    \    for(int i = 0; i < xs.length; i++)\n    {\n        result[i] = xs[i] - x;\n\
    \        x = xs[i];\n    }\n    result[xs.length] = 1;\n    return result;\n}\n\
    /*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/", "{\n    long x = 0;\n    long[] result = new\
    \ long[xs.length];\n    for (int i = 0; i < xs.length; i++)\n    {\n        result[i]\
    \ = xs[i] - x;\n        x = xs[i];\n    }\n    return result;\n}", "{\n    int\
    \ n = xs.length;\n    long[] d = new long[n];\n    long x = 0;\n    for(int i\
    \ = 0; i < n; ++i)\n    {\n        d[i] = 1;\n        for(int j = 0; j < i; ++j)\n\
    \            d[i] *= xs[j];\n        d[i] *= x;\n    }\n    return d;\n}\n/*\n\
    \ xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] *\
    \ x^2 + ....\n     Return derivative of this polynomial in the same form.\n  \
    \  >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[] xs) \n{\n    int\
    \ n = xs.length;\n    double[] d = new double[n];\n    double x = 0;\n    for(int\
    \ i = 0; i < n; ++i)\n    {\n        d[i] = 1;\n        for(int j = 0; j < i;\
    \ ++j)\n            d[i] *= xs[j];\n        d[i] *= x;\n    }\n    return d;\n\
    }\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[] xs) \n{\n    int n\
    \ = xs.length;\n    float[] d = new float[n];\n    float x = 0;\n    for(int i\
    \ = 0; i < n; ++i)\n    {\n        d[i] = 1;\n        for(int j = 0; j < i; ++j)\n\
    \            d[i] *= xs[j];\n        d[i] *= x;\n    }\n    return d;\n}\n/*\n\
    \ xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] *\
    \ x^2 + ....\n     Return derivative of this polynomial in the same form.\n  \
    \  >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/", "{\n    int n = xs.length;\n    long[] result\
    \ = new long[n];\n    long x = 0;\n    long y = 0;\n    long d = 0;\n    for(int\
    \ i = 0; i < n; i++){\n        x = xs[i];\n        y = xs[i+1];\n        d = x*y;\n\
    \        result[i] = d;\n    }\n    return result;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[]\
    \ derivative(double[] xs) \n{\n    int n = xs.length;\n    double[] result = new\
    \ double[n];\n    double x = 0;\n    double y = 0;\n    double d = 0;\n    for(int\
    \ i = 0; i < n; i++){\n        x = xs[i];\n        y = xs[i+1];\n        d = x*y;\n\
    \        result[i] = d;\n    }\n    return result;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[]\
    \ derivative(float[] xs) \n{\n    int n = xs.length;\n    float[] result = new\
    \ float[n];\n    float x = 0;\n    float y = 0;\n    float d = 0;\n    for(int\
    \ i = 0; i < n; i++){\n        x = xs[i];\n        y = xs[i+1];\n        d = x*y;\n\
    \        result[i] = d;\n    }\n    return result;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n\
    \    int n = xs.length;\n    long[] ys = new long[n];\n    long x = 0;\n    long\
    \ y = 0;\n    for(int i = 0; i < n; i++) {\n        x = xs[i];\n        y = x\
    \ * y;\n        ys[i] = y;\n    }\n    return ys;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[]\
    \ derivative(double[] xs) \n{\n    int n = xs.length;\n    double[] ys = new double[n];\n\
    \    double x = 0;\n    double y = 0;\n    for(int i = 0; i < n; i++) {\n    \
    \    x = xs[i];\n        y = x * y;\n        ys[i] = y;\n    }\n    return ys;\n\
    }\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[] xs) \n{\n    int n\
    \ = xs.length;\n    float[] ys = new float[n];\n    float x = 0;\n    float y\
    \ = 0;\n    for(int i = 0; i < n; i++) {\n        x = xs[i];\n        y = x *\
    \ y;\n        ys[i] = y;\n    }\n    return ys;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n\
    \    int n = xs.length;\n    long[] d = new long[n];\n    long x = 0;\n    long\
    \ y = 0;\n    for(int i = 0; i < n; i++){\n        x = xs[i];\n        y = x *\
    \ x;\n        d[i] = y;\n    }\n    return d;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[]\
    \ derivative(double[] xs) \n{\n    int n = xs.length;\n    double[] d = new double[n];\n\
    \    double x = 0;\n    double y = 0;\n    for(int i = 0; i < n; i++){\n     \
    \   x = xs[i];\n        y = x * x;\n        d[i] = y;\n    }\n    return d;\n\
    }\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[] xs) \n{\n    int n\
    \ = xs.length;\n    float[] d = new float[n];\n    float x = 0;\n    float y =\
    \ 0;\n    for(int i = 0; i < n; i++){\n        x = xs[i];\n        y = x * x;\n\
    \        d[i] = y;\n    }\n    return d;\n}\n/*\n xs represent coefficients of\
    \ a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n\
    \    int n = xs.length;\n    long[] ys = new long[n];\n    for(int i = 0; i <\
    \ n; i++) {\n        ys[i] = xs[i] - xs[i-1];\n    }\n    return ys;\n}\n/*\n\
    \ xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] *\
    \ x^2 + ....\n     Return derivative of this polynomial in the same form.\n  \
    \  >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[] xs) \n{\n    int\
    \ n = xs.length;\n    double[] ys = new double[n];\n    for(int i = 0; i < n;\
    \ i++) {\n        ys[i] = xs[i] - xs[i-1];\n    }\n    return ys;\n}\n/*\n xs\
    \ represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2\
    \ + ....\n     Return derivative of this polynomial in the same form.\n    >>>\
    \ derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n\
    \    [2, 6]\n    \n*/\nfloat[] derivative(float[] xs) \n{\n    int n = xs.length;\n\
    \    float[] ys = new float[n];\n    for(int i = 0; i < n; i++) {\n        ys[i]\
    \ = xs[i] - xs[i-1];\n    }\n    return ys;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n\
    \    long[] result = new long[xs.length];\n    for(int i = 0; i < xs.length; i++)\n\
    \        result[i] = xs[i + 1] - xs[i];\n    return result;\n}\n/*\n xs represent\
    \ coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n\
    \     Return derivative of this polynomial in the same form.\n    >>> derivative([3,\
    \ 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n\
    \    \n*/\ndouble[] derivative(double[] xs) \n{\n    double[] result = new double[xs.length];\n\
    \    for(int i = 0; i < xs.length; i++)\n        result[i] = xs[i + 1] - xs[i];\n\
    \    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[]\
    \ xs) \n{\n    float[] result = new float[xs.length];\n    for(int i = 0; i <\
    \ xs.length; i++)\n        result[i] = xs[i + 1] - xs[i];\n    return result;\n\
    }\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/", "{\n    long[] result = new long[xs.length +\
    \ 1];\n    result[0] = 1;\n    for (int i = 1; i < xs.length; i++)\n        result[i]\
    \ = result[i-1] * xs[i];\n    return result;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[]\
    \ derivative(double[] xs) \n{\n    double[] result = new double[xs.length + 1];\n\
    \    result[0] = 1;\n    for (int i = 1; i < xs.length; i++)\n        result[i]\
    \ = result[i-1] * xs[i];\n    return result;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[]\
    \ derivative(float[] xs) \n{\n    float[] result = new float[xs.length + 1];\n\
    \    result[0] = 1;\n    for (int i = 1; i < xs.length; i++)\n        result[i]\
    \ = result[i-1] * xs[i];\n    return result;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n\
    \    int n = xs.length;\n    long[] result = new long[n];\n    for (int i = 0;\
    \ i < n; i++)\n        result[i] = xs[i + 1] - xs[i];\n    return result;\n}\n\
    /*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[] xs) \n{\n    int\
    \ n = xs.length;\n    double[] result = new double[n];\n    for (int i = 0; i\
    \ < n; i++)\n        result[i] = xs[i + 1] - xs[i];\n    return result;\n}\n/*\n\
    \ xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] *\
    \ x^2 + ....\n     Return derivative of this polynomial in the same form.\n  \
    \  >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[] xs) \n{\n    int n\
    \ = xs.length;\n    float[] result = new float[n];\n    for (int i = 0; i < n;\
    \ i++)\n        result[i] = xs[i + 1] - xs[i];\n    return result;\n}\n/*\n xs\
    \ represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2\
    \ + ....\n     Return derivative of this polynomial in the same form.\n    >>>\
    \ derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n\
    \    [2, 6]\n    \n*/", "{\n    long[] result = new long[(xs.length - 1)];\n \
    \   for(int i = 0; i < xs.length - 1; i++)\n        result[i] = xs[i + 1] - xs[i];\n\
    \    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[]\
    \ xs) \n{\n    double[] result = new double[(xs.length - 1)];\n    for(int i =\
    \ 0; i < xs.length - 1; i++)\n        result[i] = xs[i + 1] - xs[i];\n    return\
    \ result;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[] xs) \n{\n    float[]\
    \ result = new float[(xs.length - 1)];\n    for(int i = 0; i < xs.length - 1;\
    \ i++)\n        result[i] = xs[i + 1] - xs[i];\n    return result;\n}\n/*\n xs\
    \ represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2\
    \ + ....\n     Return derivative of this polynomial in the same form.\n    >>>\
    \ derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n\
    \    [2, 6]\n    \n*/", "{\n    long[] result = new long[(xs.length)+1];\n   \
    \ long x = 1;\n    for(int i = 0; i < xs.length; i++)\n    {\n        result[i]\
    \ = xs[i] - x;\n        x = xs[i] * x;\n    }\n    result[xs.length] = 1;\n  \
    \  return result;\n}", "{\n    long[] result = new long[(xs.length - 1)];\n  \
    \  for(int i = 0; i < result.length; i++)\n        result[i] = xs[i + 1];\n  \
    \  return result;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[]\
    \ xs) \n{\n    double[] result = new double[(xs.length - 1)];\n    for(int i =\
    \ 0; i < result.length; i++)\n        result[i] = xs[i + 1];\n    return result;\n\
    }\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[] xs) \n{\n    float[]\
    \ result = new float[(xs.length - 1)];\n    for(int i = 0; i < result.length;\
    \ i++)\n        result[i] = xs[i + 1];\n    return result;\n}\n/*\n xs represent\
    \ coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n\
    \     Return derivative of this polynomial in the same form.\n    >>> derivative([3,\
    \ 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n\
    \    \n*/", "{\n    long[] ys = new long[xs.length + 1];\n    ys[0] = 1;\n   \
    \ for (int i = 1; i < xs.length; i++) \n    {\n        ys[i] = ys[i - 1] * xs[i];\n\
    \    }\n    return ys;\n}\n/*\n xs represent coefficients of a polynomial.\n \
    \   xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[]\
    \ xs) \n{\n    double[] ys = new double[xs.length + 1];\n    ys[0] = 1;\n    for\
    \ (int i = 1; i < xs.length; i++) \n    {\n        ys[i] = ys[i - 1] * xs[i];\n\
    \    }\n    return ys;\n}\n/*\n xs represent coefficients of a polynomial.\n \
    \   xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[]\
    \ xs) \n{\n    float[] ys = new float[xs.length + 1];\n    ys[0] = 1;\n    for\
    \ (int i = 1; i < xs.length; i++) \n    {\n        ys[i] = ys[i - 1] * xs[i];\n\
    \    }\n    return ys;\n}\n/*\n xs represent coefficients of a polynomial.\n \
    \   xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n    int n = xs.length;\n\
    \    long[] ds = new long[n];\n    long x = 0;\n    long y = 0;\n    for(int i\
    \ = 0; i < n; i++)\n    {\n        y = xs[i];\n        ds[i] = 1;\n        for(int\
    \ j = n - 1; j >= 0; j--)\n        {\n            x += xs[j] * y; \n         \
    \   ds[i] *= x;\n        }\n    }\n    return ds;\n}", "{\n    int n = xs.length;\n\
    \    long[] result = new long[n];\n    for(int i = 0; i < n; i++) {\n        result[i]\
    \ = xs[i + 1];\n    }\n    result[n-1] = 1;\n    return result;\n}\n/*\n xs represent\
    \ coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n\
    \     Return derivative of this polynomial in the same form.\n    >>> derivative([3,\
    \ 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n\
    \    \n*/\ndouble[] derivative(double[] xs) \n{\n    int n = xs.length;\n    double[]\
    \ result = new double[n];\n    for(int i = 0; i < n; i++) {\n        result[i]\
    \ = xs[i + 1];\n    }\n    result[n-1] = 1;\n    return result;\n}\n/*\n xs represent\
    \ coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n\
    \     Return derivative of this polynomial in the same form.\n    >>> derivative([3,\
    \ 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n\
    \    \n*/\nfloat[] derivative(float[] xs) \n{\n    int n = xs.length;\n    float[]\
    \ result = new float[n];\n    for(int i = 0; i < n; i++) {\n        result[i]\
    \ = xs[i + 1];\n    }\n    result[n-1] = 1;\n    return result;\n}\n/*\n xs represent\
    \ coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n\
    \     Return derivative of this polynomial in the same form.\n    >>> derivative([3,\
    \ 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n\
    \    \n*/", "{\n    long[] result = new long[(xs.length - 1)];\n    for(int i\
    \ = 0; i < result.length; i++)\n    {\n        result[i] = xs[i + 1];\n    }\n\
    \    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[]\
    \ xs) \n{\n    double[] result = new double[(xs.length - 1)];\n    for(int i =\
    \ 0; i < result.length; i++)\n    {\n        result[i] = xs[i + 1];\n    }\n \
    \   return result;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[]\
    \ xs) \n{\n    float[] result = new float[(xs.length - 1)];\n    for(int i = 0;\
    \ i < result.length; i++)\n    {\n        result[i] = xs[i + 1];\n    }\n    return\
    \ result;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/", "{\n    int n = xs.length;\n    long[] result\
    \ = new long[n];\n    for(int i = 0; i < n; i++) {\n        result[i] = xs[i];\n\
    \    }\n    result[n-1] = 1;\n    for(int i = n-2; i >= 0; i--) {\n        result[i]\
    \ *= xs[i+1];\n    }\n    return result;\n}\n/*\n xs represent coefficients of\
    \ a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[]\
    \ derivative(double[] xs) \n{\n    int n = xs.length;\n    double[] result = new\
    \ double[n];\n    for(int i = 0; i < n; i++) {\n        result[i] = xs[i];\n \
    \   }\n    result[n-1] = 1;\n    for(int i = n-2; i >= 0; i--) {\n        result[i]\
    \ *= xs[i+1];\n    }\n    return result;\n}\n/*\n xs represent coefficients of\
    \ a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[]\
    \ derivative(float[] xs) \n{\n    int n = xs.length;\n    float[] result = new\
    \ float[n];\n    for(int i = 0; i < n; i++) {\n        result[i] = xs[i];\n  \
    \  }\n    result[n-1] = 1;\n    for(int i = n-2; i >= 0; i--) {\n        result[i]\
    \ *= xs[i+1];\n    }\n    return result;\n}\n/*\n xs represent coefficients of\
    \ a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n\
    \    int n = xs.length;\n    long[] result = new long[n];\n    for(int i = 0;\
    \ i < n; i++)\n    {\n        result[i] = xs[i + 1];\n    }\n    for(int i = n\
    \ - 1; i >= 0; i--)\n    {\n        result[i] = result[i + 1] * xs[i];\n    }\n\
    \    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[]\
    \ xs) \n{\n    int n = xs.length;\n    double[] result = new double[n];\n    for(int\
    \ i = 0; i < n; i++)\n    {\n        result[i] = xs[i + 1];\n    }\n    for(int\
    \ i = n - 1; i >= 0; i--)\n    {\n        result[i] = result[i + 1] * xs[i];\n\
    \    }\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[]\
    \ xs) \n{\n    int n = xs.length;\n    float[] result = new float[n];\n    for(int\
    \ i = 0; i < n; i++)\n    {\n        result[i] = xs[i + 1];\n    }\n    for(int\
    \ i = n - 1; i >= 0; i--)\n    {\n        result[i] = result[i + 1] * xs[i];\n\
    \    }\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n    long result = 0;\n\
    \    for(int i = 0; i < xs.length; i++)\n    {\n        result *= xs[i];\n   \
    \     result += 1;\n    }\n    long[] result = new long[result];\n    for(int\
    \ i = 0; i < xs.length; i++)\n    {\n        result[i] = xs[i] - 1;\n    }\n \
    \   return result;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[]\
    \ xs) \n{\n    double result = 0;\n    for(int i = 0; i < xs.length; i++)\n  \
    \  {\n        result *= xs[i];\n        result += 1;\n    }\n    double[] result\
    \ = new double[result];\n    for(int i = 0; i < xs.length; i++)\n    {\n     \
    \   result[i] = xs[i] - 1;\n    }\n    return result;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[]\
    \ derivative(float[] xs) \n{\n    float result = 0;\n    for(int i = 0; i < xs.length;\
    \ i++)\n    {\n        result *= xs[i];\n        result += 1;\n    }\n    float[]\
    \ result = new float[result];\n    for(int i = 0; i < xs.length; i++)\n    {\n\
    \        result[i] = xs[i] - 1;\n    }\n    return result;\n}\n/*\n xs represent\
    \ coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n\
    \     Return derivative of this polynomial in the same form.\n    >>> derivative([3,\
    \ 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n\
    \    \n*/", "{\n    long result = 0;\n    for(int i = 0; i < xs.length; i++)\n\
    \    {\n        result *= xs[i];\n        result += xs[i+1];\n    }\n    long[]\
    \ result = new long[result.__len__()];\n    for(int i = 0; i < result.__len__();\
    \ i++)\n    {\n        result[i] = result;\n    }\n    return result;\n}\n/*\n\
    \ xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] *\
    \ x^2 + ....\n     Return derivative of this polynomial in the same form.\n  \
    \  >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[] xs) \n{\n    double\
    \ result = 0;\n    for(int i = 0; i < xs.length; i++)\n    {\n        result *=\
    \ xs[i];\n        result += xs[i+1];\n    }\n    double[] result = new double[result.__len__()];\n\
    \    for(int i = 0; i < result.__len__(); i++)\n    {\n        result[i] = result;\n\
    \    }\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[]\
    \ xs) \n{\n    float result = 0;\n    for(int i = 0; i < xs.length; i++)\n   \
    \ {\n        result *= xs[i];\n        result += xs[i+1];\n    }\n    float[]\
    \ result = new float[result.__len__()];\n    for(int i = 0; i < result.__len__();\
    \ i++)\n    {\n        result[i] = result;\n    }\n    return result;\n}\n/*\n\
    \ xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] *\
    \ x^2 + ....\n     Return derivative of this polynomial in the same form.\n  \
    \  >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/", "{\n    long[] result = new long[xs.length +\
    \ 1];\n    long x = 0;\n    for(int i = 0; i <= xs.length; i++)\n    {\n     \
    \   result[i] = xs[i] - x;\n        x = xs[i];\n    }\n    result[xs.length] =\
    \ 1;\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[]\
    \ xs) \n{\n    double[] result = new double[xs.length + 1];\n    double x = 0;\n\
    \    for(int i = 0; i <= xs.length; i++)\n    {\n        result[i] = xs[i] - x;\n\
    \        x = xs[i];\n    }\n    result[xs.length] = 1;\n    return result;\n}\n\
    /*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[] xs) \n{\n    float[]\
    \ result = new float[xs.length + 1];\n    float x = 0;\n    for(int i = 0; i <=\
    \ xs.length; i++)\n    {\n        result[i] = xs[i] - x;\n        x = xs[i];\n\
    \    }\n    result[xs.length] = 1;\n    return result;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n\
    \    long[] result = new long[(xs.length - 1)];\n    for (int i = 0; i < xs.length\
    \ - 1; i++)\n    {\n        result[i] = xs[i + 1];\n    }\n    return result;\n\
    }\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[] xs) \n{\n    double[]\
    \ result = new double[(xs.length - 1)];\n    for (int i = 0; i < xs.length - 1;\
    \ i++)\n    {\n        result[i] = xs[i + 1];\n    }\n    return result;\n}\n\
    /*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[] xs) \n{\n    float[]\
    \ result = new float[(xs.length - 1)];\n    for (int i = 0; i < xs.length - 1;\
    \ i++)\n    {\n        result[i] = xs[i + 1];\n    }\n    return result;\n}\n\
    /*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/", "{\n    long[] result = new long[xs.length];\n\
    \    for(int i = 0; i < xs.length; i++)\n        result[i] = xs[i + 1] - xs[i];\n\
    \    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[]\
    \ xs) \n{\n    double[] result = new double[xs.length];\n    for(int i = 0; i\
    \ < xs.length; i++)\n        result[i] = xs[i + 1] - xs[i];\n    return result;\n\
    }\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[] xs) \n{\n    float[]\
    \ result = new float[xs.length];\n    for(int i = 0; i < xs.length; i++)\n   \
    \     result[i] = xs[i + 1] - xs[i];\n    return result;\n}\n/*\n xs represent\
    \ coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n\
    \     Return derivative of this polynomial in the same form.\n    >>> derivative([3,\
    \ 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n\
    \    \n*/", "{\n    long[] result = new long[(xs.length - 1)];\n    long x = 0;\n\
    \    for(int i = 1; i < xs.length; i++) \n    {\n        result[i] = xs[i] - x;\
    \ \n        x = xs[i]; \n    }\n    return result;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[]\
    \ derivative(double[] xs) \n{\n    double[] result = new double[(xs.length - 1)];\n\
    \    double x = 0;\n    for(int i = 1; i < xs.length; i++) \n    {\n        result[i]\
    \ = xs[i] - x; \n        x = xs[i]; \n    }\n    return result;\n}\n/*\n xs represent\
    \ coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n\
    \     Return derivative of this polynomial in the same form.\n    >>> derivative([3,\
    \ 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n\
    \    \n*/\nfloat[] derivative(float[] xs) \n{\n    float[] result = new float[(xs.length\
    \ - 1)];\n    float x = 0;\n    for(int i = 1; i < xs.length; i++) \n    {\n \
    \       result[i] = xs[i] - x; \n        x = xs[i]; \n    }\n    return result;\n\
    }\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/", "{\n    long[] result = new long[(xs.length -\
    \ 1)];\n    long x = xs[0];\n    long y = xs[1];\n    for(int i = 2; i < xs.length;\
    \ i++){\n        result[i - 2] = x * y;\n        x = y;\n        y = xs[i];\n\
    \    }\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[]\
    \ xs) \n{\n    double[] result = new double[(xs.length - 1)];\n    double x =\
    \ xs[0];\n    double y = xs[1];\n    for(int i = 2; i < xs.length; i++){\n   \
    \     result[i - 2] = x * y;\n        x = y;\n        y = xs[i];\n    }\n    return\
    \ result;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[] xs) \n{\n    float[]\
    \ result = new float[(xs.length - 1)];\n    float x = xs[0];\n    float y = xs[1];\n\
    \    for(int i = 2; i < xs.length; i++){\n        result[i - 2] = x * y;\n   \
    \     x = y;\n        y = xs[i];\n    }\n    return result;\n}\n/*\n xs represent\
    \ coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n\
    \     Return derivative of this polynomial in the same form.\n    >>> derivative([3,\
    \ 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n\
    \    \n*/", "{\n    int n = xs.length;\n    long[] result = new long[n];\n   \
    \ for(int i = 0; i < n; i++)\n    {\n        result[i] = xs[i + 1] - xs[i];\n\
    \    }\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[]\
    \ xs) \n{\n    int n = xs.length;\n    double[] result = new double[n];\n    for(int\
    \ i = 0; i < n; i++)\n    {\n        result[i] = xs[i + 1] - xs[i];\n    }\n \
    \   return result;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[]\
    \ xs) \n{\n    int n = xs.length;\n    float[] result = new float[n];\n    for(int\
    \ i = 0; i < n; i++)\n    {\n        result[i] = xs[i + 1] - xs[i];\n    }\n \
    \   return result;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n    long[] result =\
    \ new long[(xs.length + 1)];\n    long x = 0;\n    long y = 0;\n    long sum =\
    \ 0;\n    for (int i = 0; i < xs.length; i++)\n    {\n        sum += xs[i];\n\
    \    }\n    result[0] = sum;\n    for (int i = 1; i < xs.length; i++)\n    {\n\
    \        x = i;\n        y = xs[i] - sum;\n        result[i] = y;\n        sum\
    \ += y;\n    }\n    return result;\n}\n</code>\n<|/ a |>\n<| c |>\nThis code doesn't\
    \ work when xs is empty. Try it with `xs = new long[0];`\n<|/ c |>\n<| c |>\n\
    It works with empty arrays. Try it yourself.\n<|/ c |>\n<| c |>\nYes, it works.\
    \ But it fails with empty arrays. Try it with `xs = new long[0];`\n<|/ c |>\n\
    <| c |>\nYes, it works. But it fails with empty arrays. Try it with `xs = new\
    \ long[0];`\n<|/ c |>\n<| c |>\nYes, it works. But it fails with empty arrays.\
    \ Try it with `xs = new long[0];`\n<|/ c |>\n<| a tags=java,math |>\n<code>\n\
    public class Polynomial {\n    private long[] coefficients;\n    private int degree;",
  "{\n    long[] result = new long[xs.length + 1];\n    long x = xs[0];\n    result[0]\
    \ = xs[1];\n    for (int i = 1; i < xs.length; i++)\n    {\n        result[i]\
    \ = result[i-1] * x + xs[i];\n    }\n    return result;\n}\n/*\n xs represent\
    \ coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n\
    \     Return derivative of this polynomial in the same form.\n    >>> derivative([3,\
    \ 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n\
    \    \n*/\ndouble[] derivative(double[] xs) \n{\n    double[] result = new double[xs.length\
    \ + 1];\n    double x = xs[0];\n    result[0] = xs[1];\n    for (int i = 1; i\
    \ < xs.length; i++)\n    {\n        result[i] = result[i-1] * x + xs[i];\n   \
    \ }\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[]\
    \ xs) \n{\n    float[] result = new float[xs.length + 1];\n    float x = xs[0];\n\
    \    result[0] = xs[1];\n    for (int i = 1; i < xs.length; i++)\n    {\n    \
    \    result[i] = result[i-1] * x + xs[i];\n    }\n    return result;\n}\n/*\n\
    \ xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] *\
    \ x^2 + ....\n     Return derivative of this polynomial in the same form.\n  \
    \  >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/", "{\n    long[] result = new long[(xs.length -\
    \ 1) * 2];\n    long x = 1;\n    long y = 1;\n    for(int i = 0; i < xs.length;\
    \ i++)\n    {\n        result[i] = y;\n        y += x * xs[i];\n        x *= xs[i];\n\
    \    }\n    return result;\n}", "{\n    long[] result = new long[xs.length];\n\
    \    for(int i = 0; i < xs.length; i++)\n    {\n        result[i] = xs[i + 1]\
    \ - xs[i];\n    }\n    return result;\n}\n/*\n xs represent coefficients of a\
    \ polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[]\
    \ derivative(double[] xs) \n{\n    double[] result = new double[xs.length];\n\
    \    for(int i = 0; i < xs.length; i++)\n    {\n        result[i] = xs[i + 1]\
    \ - xs[i];\n    }\n    return result;\n}\n/*\n xs represent coefficients of a\
    \ polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[]\
    \ derivative(float[] xs) \n{\n    float[] result = new float[xs.length];\n   \
    \ for(int i = 0; i < xs.length; i++)\n    {\n        result[i] = xs[i + 1] - xs[i];\n\
    \    }\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n    long result = 0;\n\
    \    for (int i = 0; i < xs.length; i++)\n    {\n        result *= xs[i];\n  \
    \      result += 1;\n    }\n    long[] result = new long[result];\n    for (int\
    \ i = 0; i < xs.length; i++)\n    {\n        result[i] = xs[i] - 1;\n    }\n \
    \   return result;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[]\
    \ xs) \n{\n    double result = 0;\n    for (int i = 0; i < xs.length; i++)\n \
    \   {\n        result *= xs[i];\n        result += 1;\n    }\n    double[] result\
    \ = new double[result];\n    for (int i = 0; i < xs.length; i++)\n    {\n    \
    \    result[i] = xs[i] - 1;\n    }\n    return result;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[]\
    \ derivative(float[] xs) \n{\n    float result = 0;\n    for (int i = 0; i < xs.length;\
    \ i++)\n    {\n        result *= xs[i];\n        result += 1;\n    }\n    float[]\
    \ result = new float[result];\n    for (int i = 0; i < xs.length; i++)\n    {\n\
    \        result[i] = xs[i] - 1;\n    }\n    return result;\n}\n/*\n xs represent\
    \ coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n\
    \     Return derivative of this polynomial in the same form.\n    >>> derivative([3,\
    \ 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n\
    \    \n*/", "{\n    int n = xs.length;\n    long[] ys = new long[n];\n    for(int\
    \ i = 0; i < n; ++i) {\n        ys[i] = xs[i] - xs[i - 1];\n    }\n    return\
    \ ys;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[] xs) \n{\n    int\
    \ n = xs.length;\n    double[] ys = new double[n];\n    for(int i = 0; i < n;\
    \ ++i) {\n        ys[i] = xs[i] - xs[i - 1];\n    }\n    return ys;\n}\n/*\n xs\
    \ represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2\
    \ + ....\n     Return derivative of this polynomial in the same form.\n    >>>\
    \ derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n\
    \    [2, 6]\n    \n*/\nfloat[] derivative(float[] xs) \n{\n    int n = xs.length;\n\
    \    float[] ys = new float[n];\n    for(int i = 0; i < n; ++i) {\n        ys[i]\
    \ = xs[i] - xs[i - 1];\n    }\n    return ys;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n\
    \    long[] result = new long[(xs.length - 1)];\n    for(int i = 0; i < xs.length;\
    \ i++)\n    {\n        result[i] = xs[i + 1];\n    }\n    return result;\n}\n\
    /*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[] xs) \n{\n    double[]\
    \ result = new double[(xs.length - 1)];\n    for(int i = 0; i < xs.length; i++)\n\
    \    {\n        result[i] = xs[i + 1];\n    }\n    return result;\n}\n/*\n xs\
    \ represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2\
    \ + ....\n     Return derivative of this polynomial in the same form.\n    >>>\
    \ derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n\
    \    [2, 6]\n    \n*/\nfloat[] derivative(float[] xs) \n{\n    float[] result\
    \ = new float[(xs.length - 1)];\n    for(int i = 0; i < xs.length; i++)\n    {\n\
    \        result[i] = xs[i + 1];\n    }\n    return result;\n}\n/*\n xs represent\
    \ coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n\
    \     Return derivative of this polynomial in the same form.\n    >>> derivative([3,\
    \ 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n\
    \    \n*/", "{\n    long n = xs.length;\n    long[] ds = new long[n];\n    long\
    \ m = 0;\n    for(int i = 0; i < n; i++)\n    {\n        ds[i] = 1;\n        for(int\
    \ j = 0; j < n; j++)\n        {\n            if(i == j)\n                ds[i]\
    \ *= xs[j];\n            else\n                ds[i] *= xs[j];\n        }\n  \
    \      m += ds[i];\n    }\n    long[] result = new long[n];\n    for(int i = 0;\
    \ i < n; i++)\n    {\n        result[i] = ds[i] / m;\n    }\n    return result;\n\
    }\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[] xs) \n{\n    double\
    \ n = xs.length;\n    double[] ds = new double[n];\n    double m = 0;\n    for(int\
    \ i = 0; i < n; i++)\n    {\n        ds[i] = 1;\n        for(int j = 0; j < n;\
    \ j++)\n        {\n            if(i == j)\n                ds[i] *= xs[j];\n \
    \           else\n                ds[i] *= xs[j];\n        }\n        m += ds[i];\n\
    \    }\n    double[] result = new double[n];\n    for(int i = 0; i < n; i++)\n\
    \    {\n        result[i] = ds[i] / m;\n    }\n    return result;\n}\n/*\n xs\
    \ represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2\
    \ + ....\n     Return derivative of this polynomial in the same form.\n    >>>\
    \ derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n\
    \    [2, 6]\n    \n*/\nfloat[] derivative(float[] xs) \n{\n    float n = xs.length;\n\
    \    float[] ds = new float[n];\n    float m = 0;\n    for(int i = 0; i < n; i++)\n\
    \    {\n        ds[i] = 1;\n        for(int j = 0; j < n; j++)\n        {\n  \
    \          if(i == j)\n                ds[i] *= xs[j];\n            else\n   \
    \             ds[i] *= xs[j];\n        }\n        m += ds[i];\n    }\n    float[]\
    \ result = new float[n];\n    for(int i = 0; i < n; i++)\n    {\n        result[i]\
    \ = ds[i] / m;\n    }\n    return result;\n}\n/*\n xs represent coefficients of\
    \ a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative", "{\n    int n = xs.length;\n    long[]\
    \ result = new long[n];\n    for(int i = 0; i < n; i++) {\n        result[i] =\
    \ xs[i + 1];\n    }\n    return result;\n}\n/*\n xs represent coefficients of\
    \ a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[]\
    \ derivative(double[] xs) \n{\n    int n = xs.length;\n    double[] result = new\
    \ double[n];\n    for(int i = 0; i < n; i++) {\n        result[i] = xs[i + 1];\n\
    \    }\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[]\
    \ xs) \n{\n    int n = xs.length;\n    float[] result = new float[n];\n    for(int\
    \ i = 0; i < n; i++) {\n        result[i] = xs[i + 1];\n    }\n    return result;\n\
    }\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/", "{\n    int n = xs.length;\n    long[] ys = new\
    \ long[n];\n    long x = 0;\n    long y = 0;\n    for(int i = 0; i < n; i++) {\n\
    \        x = xs[i];\n        y = x * y;\n        ys[i] = y;\n    }\n    return\
    \ ys;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[] xs) \n{\n    int\
    \ n = xs.length;\n    double[] ys = new double[n];\n    double x = 0;\n    double\
    \ y = 0;\n    for(int i = 0; i < n; i++) {\n        x = xs[i];\n        y = x\
    \ * y;\n        ys[i] = y;\n    }\n    return ys;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[]\
    \ derivative(float[] xs) \n{\n    int n = xs.length;\n    float[] ys = new float[n];\n\
    \    float x = 0;\n    float y = 0;\n    for(int i = 0; i < n; i++) {\n      \
    \  x = xs[i];\n        y = x * y;\n        ys[i] = y;\n    }\n    return ys;\n\
    }\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/", "{\n    long result = 0;\n    for (int i = 0;\
    \ i < xs.length; i++)\n    {\n        result *= xs[i];\n        result += 1;\n\
    \    }\n    long[] result = new long[result.__len()];\n    for (int i = 0; i <\
    \ result.__len(); i++)\n        result[i] = result / xs[i];\n    return result;\n\
    }\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[] xs) \n{\n    double\
    \ result = 0;\n    for (int i = 0; i < xs.length; i++)\n    {\n        result\
    \ *= xs[i];\n        result += 1;\n    }\n    double[] result = new double[result.__len()];\n\
    \    for (int i = 0; i < result.__len(); i++)\n        result[i] = result / xs[i];\n\
    \    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[]\
    \ xs) \n{\n    float result = 0;\n    for (int i = 0; i < xs.length; i++)\n  \
    \  {\n        result *= xs[i];\n        result += 1;\n    }\n    float[] result\
    \ = new float[result.__len()];\n    for (int i = 0; i < result.__len(); i++)\n\
    \        result[i] = result / xs[i];\n    return result;\n}\n/*\n xs represent\
    \ coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n\
    \     Return derivative of this polynomial in the same form.\n    >>> derivative([3,\
    \ 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n\
    \    \n*/", "{\n    long[] result = new long[(xs.length - 1)];\n    for(int i\
    \ = 0; i < result.length; i++)\n        result[i] = xs[i + 1];\n    return result;\n\
    }\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[] xs) \n{\n    double[]\
    \ result = new double[(xs.length - 1)];\n    for(int i = 0; i < result.length;\
    \ i++)\n        result[i] = xs[i + 1];\n    return result;\n}\n/*\n xs represent\
    \ coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n\
    \     Return derivative of this polynomial in the same form.\n    >>> derivative([3,\
    \ 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n\
    \    \n*/\nfloat[] derivative(float[] xs) \n{\n    float[] result = new float[(xs.length\
    \ - 1)];\n    for(int i = 0; i < result.length; i++)\n        result[i] = xs[i\
    \ + 1];\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n    long[] result =\
    \ new long[(xs.length + 1)];\n    long x = 1;\n    long y = 1;\n    for(int i\
    \ = 0; i < xs.length; i++)\n    {\n        result[i] = y;\n        y += xs[i]\
    \ * x;\n        x *= xs[i];\n    }\n    result[xs.length] = y;\n    return result;\n\
    }", "{\n    int n = xs.length;\n    long[] result = new long[n];\n    long d =\
    \ 1;\n    for (int i = 0; i < n; i++) {\n        d *= xs[i];\n        result[i]\
    \ = d;\n    }\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[]\
    \ xs) \n{\n    int n = xs.length;\n    double[] result = new double[n];\n    double\
    \ d = 1;\n    for (int i = 0; i < n; i++) {\n        d *= xs[i];\n        result[i]\
    \ = d;\n    }\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[]\
    \ xs) \n{\n    int n = xs.length;\n    float[] result = new float[n];\n    float\
    \ d = 1;\n    for (int i = 0; i < n; i++) {\n        d *= xs[i];\n        result[i]\
    \ = d;\n    }\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n    long[] result =\
    \ new long[(xs.length - 1)];\n    for(int i = 0; i < xs.length - 1; i++)\n   \
    \ {\n        result[i] = xs[i + 1] - xs[i];\n    }\n    return result;\n}\n/*\n\
    \ xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] *\
    \ x^2 + ....\n     Return derivative of this polynomial in the same form.\n  \
    \  >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[] xs) \n{\n    double[]\
    \ result = new double[(xs.length - 1)];\n    for(int i = 0; i < xs.length - 1;\
    \ i++)\n    {\n        result[i] = xs[i + 1] - xs[i];\n    }\n    return result;\n\
    }\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[] xs) \n{\n    float[]\
    \ result = new float[(xs.length - 1)];\n    for(int i = 0; i < xs.length - 1;\
    \ i++)\n    {\n        result[i] = xs[i + 1] - xs[i];\n    }\n    return result;\n\
    }\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/", "{\n    long[] result = new long[(xs.length +\
    \ 1)];\n    result[0] = 1;\n    for (int i = 1; i < xs.length; i++)\n    {\n \
    \       result[i] = result[i-1] * xs[i];\n    }\n    return result;\n}\n/*\n xs\
    \ represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2\
    \ + ....\n     Return derivative of this polynomial in the same form.\n    >>>\
    \ derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n\
    \    [2, 6]\n    \n*/\ndouble[] derivative(double[] xs) \n{\n    double[] result\
    \ = new double[(xs.length + 1)];\n    result[0] = 1;\n    for (int i = 1; i <\
    \ xs.length; i++)\n    {\n        result[i] = result[i-1] * xs[i];\n    }\n  \
    \  return result;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[]\
    \ xs) \n{\n    float[] result = new float[(xs.length + 1)];\n    result[0] = 1;\n\
    \    for (int i = 1; i < xs.length; i++)\n    {\n        result[i] = result[i-1]\
    \ * xs[i];\n    }\n    return result;\n}\n/*\n xs represent coefficients of a\
    \ polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n\
    \    long[] result = new long[xs.length];\n    for(int i = 0; i < xs.length; i++)\n\
    \        result[i] = xs[i] - xs[i-1];\n    return result;\n}\n</code>\n<|/ a tags=c#,polynomial-math,math,polynomial-approximation\
    \ |>\n<| c |>\nI believe this should be the accepted answer. Very elegant and\
    \ simple.\n<|/ c |>\n<| c |>\nI believe this should be the accepted answer. Very\
    \ elegant and simple.\n<|/ c |>\n<| a dscore=4 |>\n<code>\npublic static class\
    \ Math\n{\n    public static double Power(double x, int exponent)\n    {\n   \
    \     if (exponent == 0)\n            return 1;\n        if (exponent == 1)\n\
    \            return x;\n        if (exponent == 2)\n            return x * x;\n\
    \        if (exponent == 3)\n            return x * x * x;\n        if (exponent\
    \ == 4)\n            return x * x * x * x;\n        if (exponent == 5)\n     \
    \       return x * x * x * x * x;\n        if (exponent == 6)\n            return\
    \ x * x * x * x * x * x;\n        if (exponent == 7)\n            return x * x\
    \ * x * x * x * x * x;\n        if (exponent == 8)\n            return x * x *\
    \ x * x * x * x * x * x;\n        if (exponent == 9)\n            return x * x\
    \ * x * x * x * x * x * x * x;\n        if (exponent == 10)\n            return\
    \ x * x * x * x * x * x * x * x * x * x;\n        if (exponent == 11)\n      \
    \      return x * x * x * x * x * x * x * x * x * x * x;\n        if (exponent\
    \ == 12)\n            return x * x * x * x * x * x * x * x * x * x * x * x;\n\
    \        if (exponent == 13)\n            return x * x * x * x * x * x * x * x\
    \ * x * x * x * x * x;\n        if (exponent == 14)\n            return x * x\
    \ * x * x * x * x * x * x * x * x * x * x * x * x;\n        if (exponent == 15)\n\
    \            return x * x * x * x * x * x * x * x * x * x * x * x * x * x * x;\n\
    \        if (exponent == 16)\n            return x * x * x * x * x * x * x * x\
    \ * x * x * x * x * x * x * x * x;\n        if (exponent == 17)\n            return\
    \ x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x;\n       \
    \ if (exponent == 18)\n            return x * x * x * x * x * x * x * x * x *\
    \ x * x * x * x * x * x * x * x;\n        if (exponent == 19)\n            return\
    \ x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x;\n   \
    \     if (exponent == 20)\n            return x * x * x * x * x * x * x * x *\
    \ x * x * x * x * x * x * x * x * x * x;\n        if (exponent == 21)\n      \
    \      return x * x * x * x * x * x * x * x * x * x * x * x * ", "{\n    long[]\
    \ result = new long[(xs.length + 1)];\n    long x = 1;\n    long xx = 1;\n   \
    \ for(int i = 0; i < xs.length; i++)\n    {\n        result[i] = xs[i] - x;\n\
    \        x = xs[i];\n        xx = x * xx;\n    }\n    result[xs.length] = xx -\
    \ x;\n    return result;\n}", "{\n    long[] result = new long[(xs.length - 1)];\n\
    \    for(int i = 0; i < result.length; i++)\n    {\n        result[i] = xs[i +\
    \ 1];\n    }\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[]\
    \ xs) \n{\n    double[] result = new double[(xs.length - 1)];\n    for(int i =\
    \ 0; i < result.length; i++)\n    {\n        result[i] = xs[i + 1];\n    }\n \
    \   return result;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[]\
    \ xs) \n{\n    float[] result = new float[(xs.length - 1)];\n    for(int i = 0;\
    \ i < result.length; i++)\n    {\n        result[i] = xs[i + 1];\n    }\n    return\
    \ result;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/", "{\n    long[] result = new long[xs.length +\
    \ 1];\n    long x = 1;\n    for (int i = 0; i < xs.length; i++)\n    {\n     \
    \   result[i] = xs[i] - x * xs[i];\n        x *= xs[i];\n    }\n    result[xs.length]\
    \ = 1;\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[]\
    \ xs) \n{\n    double[] result = new double[xs.length + 1];\n    double x = 1;\n\
    \    for (int i = 0; i < xs.length; i++)\n    {\n        result[i] = xs[i] - x\
    \ * xs[i];\n        x *= xs[i];\n    }\n    result[xs.length] = 1;\n    return\
    \ result;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[] xs) \n{\n    float[]\
    \ result = new float[xs.length + 1];\n    float x = 1;\n    for (int i = 0; i\
    \ < xs.length; i++)\n    {\n        result[i] = xs[i] - x * xs[i];\n        x\
    \ *= xs[i];\n    }\n    result[xs.length] = 1;\n    return result;\n}\n/*\n xs\
    \ represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2\
    \ + ....\n     Return derivative of this polynomial in the same form.\n    >>>\
    \ derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n\
    \    [2, 6]\n    \n*/", "{\n    long[] result = new long[(xs.length - 1) * 2];\n\
    \    long x = 1;\n    long y = 1;\n    for(int i = 0; i < xs.length; i++)\n  \
    \  {\n        result[i * 2] = x;\n        result[i * 2 + 1] = y;\n        x +=\
    \ (long)xs[i] * y;\n        y *= x;\n    }\n    return result;\n}\n/*\n xs represent\
    \ coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n\
    \     Return derivative of this polynomial in the same form.\n    >>> derivative([3,\
    \ 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n\
    \    \n*/\ndouble[] derivative(double[] xs) \n{\n    double[] result = new double[(xs.length\
    \ - 1) * 2];\n    double x = 1;\n    double y = 1;\n    for(int i = 0; i < xs.length;\
    \ i++)\n    {\n        result[i * 2] = x;\n        result[i * 2 + 1] = y;\n  \
    \      x += (double)xs[i] * y;\n        y *= x;\n    }\n    return result;\n}\n\
    /*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[] xs) \n{\n    float[]\
    \ result = new float[(xs.length - 1) * 2];\n    float x = 1;\n    float y = 1;\n\
    \    for(int i = 0; i < xs.length; i++)\n    {\n        result[i * 2] = x;\n \
    \       result[i * 2 + 1] = y;\n        x += (float)xs[i] * y;\n        y *= x;\n\
    \    }\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n    long[] result =\
    \ new long[(xs.length - 1)];\n    for(int i = 0; i < xs.length - 1; i++)\n   \
    \ {\n        result[i] = xs[i + 1] - xs[i];\n    }\n    return result;\n}\n/*\n\
    \ xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] *\
    \ x^2 + ....\n     Return derivative of this polynomial in the same form.\n  \
    \  >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[] xs) \n{\n    double[]\
    \ result = new double[(xs.length - 1)];\n    for(int i = 0; i < xs.length - 1;\
    \ i++)\n    {\n        result[i] = xs[i + 1] - xs[i];\n    }\n    return result;\n\
    }\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[] xs) \n{\n    float[]\
    \ result = new float[(xs.length - 1)];\n    for(int i = 0; i < xs.length - 1;\
    \ i++)\n    {\n        result[i] = xs[i + 1] - xs[i];\n    }\n    return result;\n\
    }\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/", "{\n    int n = xs.length;\n    long[] ys = new\
    \ long[n];\n    for(int i = 0; i < n; ++i)\n    {\n        ys[i] = xs[i];\n  \
    \  }\n    for(int i = n - 1; i >= 0; --i)\n    {\n        ys[i] = xs[i + 1];\n\
    \    }\n    return ys;\n}\n/*\n xs represent coefficients of a polynomial.\n \
    \   xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[]\
    \ xs) \n{\n    int n = xs.length;\n    double[] ys = new double[n];\n    for(int\
    \ i = 0; i < n; ++i)\n    {\n        ys[i] = xs[i];\n    }\n    for(int i = n\
    \ - 1; i >= 0; --i)\n    {\n        ys[i] = xs[i + 1];\n    }\n    return ys;\n\
    }\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[] xs) \n{\n    int n\
    \ = xs.length;\n    float[] ys = new float[n];\n    for(int i = 0; i < n; ++i)\n\
    \    {\n        ys[i] = xs[i];\n    }\n    for(int i = n - 1; i >= 0; --i)\n \
    \   {\n        ys[i] = xs[i + 1];\n    }\n    return ys;\n}\n/*\n xs represent\
    \ coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n\
    \     Return derivative of this polynomial in the same form.\n    >>> derivative([3,\
    \ 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n\
    \    \n*/", "{\n    long[] ys = new long[xs.length + 1];\n    ys[0] = 1;\n   \
    \ for (int i = 1; i < xs.length; i++)\n    {\n        ys[i] = ys[i - 1] * xs[i];\n\
    \    }\n    return ys;\n}\n/*\n xs represent coefficients of a polynomial.\n \
    \   xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[]\
    \ xs) \n{\n    double[] ys = new double[xs.length + 1];\n    ys[0] = 1;\n    for\
    \ (int i = 1; i < xs.length; i++)\n    {\n        ys[i] = ys[i - 1] * xs[i];\n\
    \    }\n    return ys;\n}\n/*\n xs represent coefficients of a polynomial.\n \
    \   xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[]\
    \ xs) \n{\n    float[] ys = new float[xs.length + 1];\n    ys[0] = 1;\n    for\
    \ (int i = 1; i < xs.length; i++)\n    {\n        ys[i] = ys[i - 1] * xs[i];\n\
    \    }\n    return ys;\n}\n/*\n xs represent coefficients of a polynomial.\n \
    \   xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n    long n = xs.length;\n\
    \    long[] result = new long[n];\n    long i;\n    for(i = 0; i < n; ++i)\n \
    \       result[i] = xs[i + 1] - xs[i];\n    return result;\n}", "{\n    long d\
    \ = 1;\n    for(int i = 1; i < xs.length; i++)\n    {\n        d *= xs[i];\n \
    \   }\n    long[] result = new long[xs.length + 1];\n    for(int i = 0; i < xs.length;\
    \ i++)\n    {\n        result[i] = d;\n        d *= xs[i];\n    }\n    result[xs.length]\
    \ = 1;\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[]\
    \ xs) \n{\n    double d = 1;\n    for(int i = 1; i < xs.length; i++)\n    {\n\
    \        d *= xs[i];\n    }\n    double[] result = new double[xs.length + 1];\n\
    \    for(int i = 0; i < xs.length; i++)\n    {\n        result[i] = d;\n     \
    \   d *= xs[i];\n    }\n    result[xs.length] = 1;\n    return result;\n}\n/*\n\
    \ xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] *\
    \ x^2 + ....\n     Return derivative of this polynomial in the same form.\n  \
    \  >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[] xs) \n{\n    float\
    \ d = 1;\n    for(int i = 1; i < xs.length; i++)\n    {\n        d *= xs[i];\n\
    \    }\n    float[] result = new float[xs.length + 1];\n    for(int i = 0; i <\
    \ xs.length; i++)\n    {\n        result[i] = d;\n        d *= xs[i];\n    }\n\
    \    result[xs.length] = 1;\n    return result;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n\
    \    int n = xs.length;\n    long[] result = new long[n];\n    long x = 0;\n \
    \   for(int i = 0; i < n; ++i)\n    {\n        result[i] = 1;\n        for(int\
    \ j = 0; j < i; ++j)\n        {\n            result[i] *= xs[j];\n        }\n\
    \        result[i] *= x;\n    }\n    return result;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[]\
    \ derivative(double[] xs) \n{\n    int n = xs.length;\n    double[] result = new\
    \ double[n];\n    double x = 0;\n    for(int i = 0; i < n; ++i)\n    {\n     \
    \   result[i] = 1;\n        for(int j = 0; j < i; ++j)\n        {\n          \
    \  result[i] *= xs[j];\n        }\n        result[i] *= x;\n    }\n    return\
    \ result;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[] xs) \n{\n    int n\
    \ = xs.length;\n    float[] result = new float[n];\n    float x = 0;\n    for(int\
    \ i = 0; i < n; ++i)\n    {\n        result[i] = 1;\n        for(int j = 0; j\
    \ < i; ++j)\n        {\n            result[i] *= xs[j];\n        }\n        result[i]\
    \ *= x;\n    }\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n    long[] result =\
    \ new long[(xs.length - 1) * 2];\n    long x = 0;\n    long y = 0;\n    for(int\
    \ i = 0; i < xs.length; i++)\n    {\n        y = xs[i + 1];\n        result[i]\
    \ = 1;\n        for(int j = i; j < xs.length; j++)\n        {\n            result[i]\
    \ += xs[j] * y;\n        }\n    }\n    return result;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[]\
    \ derivative(double[] xs) \n{\n    double[] result = new double[(xs.length - 1)\
    \ * 2];\n    double x = 0;\n    double y = 0;\n    for(int i = 0; i < xs.length;\
    \ i++)\n    {\n        y = xs[i + 1];\n        result[i] = 1;\n        for(int\
    \ j = i; j < xs.length; j++)\n        {\n            result[i] += xs[j] * y;\n\
    \        }\n    }\n    return result;\n}\n/*\n xs represent coefficients of a\
    \ polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[]\
    \ derivative(float[] xs) \n{\n    float[] result = new float[(xs.length - 1) *\
    \ 2];\n    float x = 0;\n    float y = 0;\n    for(int i = 0; i < xs.length; i++)\n\
    \    {\n        y = xs[i + 1];\n        result[i] = 1;\n        for(int j = i;\
    \ j < xs.length; j++)\n        {\n            result[i] += xs[j] * y;\n      \
    \  }\n    }\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n    long[] result =\
    \ new long[xs.length + 1];\n    result[0] = 1;\n    for (int i = 1; i < xs.length;\
    \ i++) \n    {\n        result[i] = result[i-1] * xs[i];\n    }\n    return result;\n\
    }\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThis doesn't work. `derivative([1, 2,\
    \ 3])` returns `[4, 9, 18]` instead of `[4, 12, 20]`.\n<|/ c |>\n<| c |>\nI fixed\
    \ the bug, thanks for pointing it out. Now it works.\n<|/ c |>\n<| a tags=c#,polynomial-math,math\
    \ |>\n<code>\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\n\
    using System.Text;", "{\n    int n = xs.length;\n    long[] result = new long[n];\n\
    \    long x = 0;\n    for(int i = 0; i < n; ++i)\n    {\n        result[i] = xs[i];\n\
    \        x += xs[i];\n    }\n    for(int i = n-1; i >= 0; --i)\n    {\n      \
    \  result[i] = result[i+1];\n        x -= xs[i];\n    }\n    return result;\n\
    }\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[] xs) \n{\n    int\
    \ n = xs.length;\n    double[] result = new double[n];\n    double x = 0;\n  \
    \  for(int i = 0; i < n; ++i)\n    {\n        result[i] = xs[i];\n        x +=\
    \ xs[i];\n    }\n    for(int i = n-1; i >= 0; --i)\n    {\n        result[i] =\
    \ result[i+1];\n        x -= xs[i];\n    }\n    return result;\n}\n/*\n xs represent\
    \ coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n\
    \     Return derivative of this polynomial in the same form.\n    >>> derivative([3,\
    \ 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n\
    \    \n*/\nfloat[] derivative(float[] xs) \n{\n    int n = xs.length;\n    float[]\
    \ result = new float[n];\n    float x = 0;\n    for(int i = 0; i < n; ++i)\n \
    \   {\n        result[i] = xs[i];\n        x += xs[i];\n    }\n    for(int i =\
    \ n-1; i >= 0; --i)\n    {\n        result[i] = result[i+1];\n        x -= xs[i];\n\
    \    }\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n    int n = xs.length;\n\
    \    long[] ys = new long[n];\n    long x = 0;\n    for(int i = 0; i < n; i++)\
    \ {\n        x += xs[i];\n        ys[i] = 1;\n    }\n    for(int i = n - 1; i\
    \ >= 0; i--) {\n        x += xs[i];\n        ys[i] = x * xs[i];\n    }\n    return\
    \ ys;\n}\n</code>\n<|/ a tags=math,c#,polynomial-math,algorithm |>\n<| c |>\n\
    This doesn't seem to work when xs is an array of negative numbers. For example:\
    \ derivative([-1, -2, -3]) = [1, -4, 9] instead of [1, 0, -1]\n<|/ c |>\n<| c\
    \ |>\nThis doesn't seem to work when xs is an array of negative numbers. For example:\
    \ derivative([-1, -2, -3]) = [1, -4, 9] instead of [1, 0, -1]\n<|/ c |>\n<| c\
    \ |>\nI fixed the problem with negative numbers. I used the absolute value of\
    \ the first element of the array as initial value of x.\n<|/ c |>\n<| c |>\nThis\
    \ doesn't seem to work when xs is an array of negative numbers. For example: derivative([-1,\
    \ -2, -3]) = [1, -4, 9] instead of [1, 0, -1]\n<|/ c |>\n<| c |>\nThis doesn't\
    \ seem to work when xs is an array of negative numbers. For example: derivative([-1,\
    \ -2, -3]) = [1, -4, 9] instead of [1, 0, -1]\n<|/ c |>\n<| a tags=math,c#,polynomial-math,algorithm\
    \ |>\n<code>\npublic static double CalculateDerivative(double x, double[] coefficients)\n\
    {\n    double derivative = 0;\n    for (int i = 0; i < coefficients.Length; i++)\n\
    \    {\n        derivative += coefficients[i] * Math.Pow(x, i);\n    }\n    return\
    \ derivative;\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis doesn't seem to work\
    \ when xs is an array of negative numbers. For example: derivative([-1, -2, -3])\
    \ = [1, -4, 9] instead of [1, 0, -1]\n<|/ c |>\n<| c |>\nThis doesn't seem to\
    \ work when xs is an array of negative numbers. For example: derivative([-1, -2,\
    \ -3]) = [1, -4, 9] instead of [1, 0, -1]\n<|/ c |>\n<| c |>\nThis doesn't seem\
    \ to work when xs is an array of negative numbers. For example: derivative([-1,\
    \ -2, -3]) = [1, -4, 9] instead of [1, 0, -1]\n<|/ c |>\n<| c |>\nThis doesn't\
    \ seem to work when xs is an array of negative numbers. For example: derivative([-1,\
    \ -2, -3]) = [1, -4, 9] instead of [1, 0, -1]\n<|/ c ", "{\n    long result =\
    \ 0;\n    for (int i = 0; i < xs.length; i++)\n    {\n        result *= xs[i];\n\
    \        result -= xs[i - 1];\n    }\n    return new long[]{result};\n}", "{\n\
    \    int n = xs.length;\n    long[] ys = new long[n];\n    for(int i = 0; i <\
    \ n; ++i)\n    {\n        ys[i] = xs[i+1];\n    }\n    for(int i = n - 2; i >=\
    \ 0; --i)\n    {\n        ys[i] = (xs[i+1] - xs[i]) / (xs[i+1] - xs[i-1]);\n \
    \   }\n    return ys;\n}\n/*\n xs represent coefficients of a polynomial.\n  \
    \  xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[]\
    \ xs) \n{\n    int n = xs.length;\n    double[] ys = new double[n];\n    for(int\
    \ i = 0; i < n; ++i)\n    {\n        ys[i] = xs[i+1];\n    }\n    for(int i =\
    \ n - 2; i >= 0; --i)\n    {\n        ys[i] = (xs[i+1] - xs[i]) / (xs[i+1] - xs[i-1]);\n\
    \    }\n    return ys;\n}\n/*\n xs represent coefficients of a polynomial.\n \
    \   xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[]\
    \ xs) \n{\n    int n = xs.length;\n    float[] ys = new float[n];\n    for(int\
    \ i = 0; i < n; ++i)\n    {\n        ys[i] = xs[i+1];\n    }\n    for(int i =\
    \ n - 2; i >= 0; --i)\n    {\n        ys[i] = (xs[i+1] - xs[i]) / (xs[i+1] - xs[i-1]);\n\
    \    }\n    return ys;\n}\n/*\n xs represent coefficients of a polynomial.\n \
    \   xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n    int n = xs.length;\n\
    \    long[] result = new long[n];\n    for(int i = 0; i < n; i++)\n    {\n   \
    \     result[i] = xs[i];\n    }\n    result[n-1] = 1;\n    for(int i = n-2; i\
    \ >= 0; i--)\n    {\n        result[i] = result[i+1] * xs[i];\n    }\n    return\
    \ result;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[] xs) \n{\n    int\
    \ n = xs.length;\n    double[] result = new double[n];\n    for(int i = 0; i <\
    \ n; i++)\n    {\n        result[i] = xs[i];\n    }\n    result[n-1] = 1;\n  \
    \  for(int i = n-2; i >= 0; i--)\n    {\n        result[i] = result[i+1] * xs[i];\n\
    \    }\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[]\
    \ xs) \n{\n    int n = xs.length;\n    float[] result = new float[n];\n    for(int\
    \ i = 0; i < n; i++)\n    {\n        result[i] = xs[i];\n    }\n    result[n-1]\
    \ = 1;\n    for(int i = n-2; i >= 0; i--)\n    {\n        result[i] = result[i+1]\
    \ * xs[i];\n    }\n    return result;\n}\n/*\n xs represent coefficients of a\
    \ polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n\
    \    int n = xs.length;\n    long[] ys = new long[n];\n    for(int i = 0; i <\
    \ n; ++i)\n    {\n        ys[i] = xs[i+1];\n    }\n    return ys;\n}\n/*\n xs\
    \ represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2\
    \ + ....\n     Return derivative of this polynomial in the same form.\n    >>>\
    \ derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n\
    \    [2, 6]\n    \n*/\ndouble[] derivative(double[] xs) \n{\n    int n = xs.length;\n\
    \    double[] ys = new double[n];\n    for(int i = 0; i < n; ++i)\n    {\n   \
    \     ys[i] = xs[i+1];\n    }\n    return ys;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[]\
    \ derivative(float[] xs) \n{\n    int n = xs.length;\n    float[] ys = new float[n];\n\
    \    for(int i = 0; i < n; ++i)\n    {\n        ys[i] = xs[i+1];\n    }\n    return\
    \ ys;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/", "{\n    long[] result = new long[xs.length +\
    \ 1];\n    for(int i = 0; i < xs.length; i++)\n        result[i] = xs[i + 1];\n\
    \    result[xs.length] = 1;\n    for(int i = xs.length - 1; i >= 0; i--)\n   \
    \     result[i] *= xs[i];\n    return result;\n}", "{\n    long result = 0;\n\
    \    for(int i = 0; i < xs.length; i++)\n    {\n        result *= xs[i];\n   \
    \     result += 1;\n    }\n    long[] result = new long[result];\n    for(int\
    \ i = 0; i < xs.length; i++)\n    {\n        result[i] = xs[i] - 1;\n    }\n \
    \   return result;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[]\
    \ xs) \n{\n    double result = 0;\n    for(int i = 0; i < xs.length; i++)\n  \
    \  {\n        result *= xs[i];\n        result += 1;\n    }\n    double[] result\
    \ = new double[result];\n    for(int i = 0; i < xs.length; i++)\n    {\n     \
    \   result[i] = xs[i] - 1;\n    }\n    return result;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[]\
    \ derivative(float[] xs) \n{\n    float result = 0;\n    for(int i = 0; i < xs.length;\
    \ i++)\n    {\n        result *= xs[i];\n        result += 1;\n    }\n    float[]\
    \ result = new float[result];\n    for(int i = 0; i < xs.length; i++)\n    {\n\
    \        result[i] = xs[i] - 1;\n    }\n    return result;\n}\n/*\n xs represent\
    \ coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n\
    \     Return derivative of this polynomial in the same form.\n    >>> derivative([3,\
    \ 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n\
    \    \n*/", "{\n    int n = xs.length;\n    long[] result = new long[n];\n   \
    \ for(int i = 0; i < n; i++) {\n        result[i] = xs[i+1] - xs[i];\n    }\n\
    \    return result;\n}", "{\n    long[] result = new long[(xs.length - 1)];\n\
    \    long x = 0;\n    long y = 0;\n    for(int i = 0; i <= xs.length - 1; i++)\n\
    \    {\n        y = xs[i + 1];\n        result[i] = y;\n    }\n    for(int i =\
    \ 0; i <= xs.length - 1; i++)\n    {\n        x = xs[i];\n        result[i] =\
    \ x * result[i];\n    }\n    return result;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[]\
    \ derivative(double[] xs) \n{\n    double[] result = new double[(xs.length - 1)];\n\
    \    double x = 0;\n    double y = 0;\n    for(int i = 0; i <= xs.length - 1;\
    \ i++)\n    {\n        y = xs[i + 1];\n        result[i] = y;\n    }\n    for(int\
    \ i = 0; i <= xs.length - 1; i++)\n    {\n        x = xs[i];\n        result[i]\
    \ = x * result[i];\n    }\n    return result;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[]\
    \ derivative(float[] xs) \n{\n    float[] result = new float[(xs.length - 1)];\n\
    \    float x = 0;\n    float y = 0;\n    for(int i = 0; i <= xs.length - 1; i++)\n\
    \    {\n        y = xs[i + 1];\n        result[i] = y;\n    }\n    for(int i =\
    \ 0; i <= xs.length - 1; i++)\n    {\n        x = xs[i];\n        result[i] =\
    \ x * result[i];\n    }\n    return result;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n\
    \    int n = xs.length;\n    long[] ys = new long[n];\n    for(int i = 0; i <\
    \ n; i++)\n    {\n        ys[i] = xs[i + 1];\n    }\n    return ys;\n}", "{\n\
    \    int n = xs.length;\n    long[] result = new long[n];\n    for(int i = 0;\
    \ i < n; ++i)\n        result[i] = xs[i + 1] - xs[i];\n    return result;\n}",
  "{\n    int n = xs.length;\n    long[] result = new long[n];\n    for (int i = 0;\
    \ i < n; ++i) {\n        result[i] = xs[i + 1] - xs[i];\n    }\n    return result;\n\
    }\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[] xs) \n{\n    int\
    \ n = xs.length;\n    double[] result = new double[n];\n    for (int i = 0; i\
    \ < n; ++i) {\n        result[i] = xs[i + 1] - xs[i];\n    }\n    return result;\n\
    }\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[] xs) \n{\n    int n\
    \ = xs.length;\n    float[] result = new float[n];\n    for (int i = 0; i < n;\
    \ ++i) {\n        result[i] = xs[i + 1] - xs[i];\n    }\n    return result;\n\
    }\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/", "{\n    int n = xs.length;\n    long[] result\
    \ = new long[n];\n    for(int i = 0; i < n; ++i)\n        result[i] = xs[i+1]\
    \ - xs[i] * xs[i] / i;\n    return result;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[]\
    \ derivative(double[] xs) \n{\n    int n = xs.length;\n    double[] result = new\
    \ double[n];\n    for(int i = 0; i < n; ++i)\n        result[i] = xs[i+1] - xs[i]\
    \ * xs[i] / i;\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[]\
    \ xs) \n{\n    int n = xs.length;\n    float[] result = new float[n];\n    for(int\
    \ i = 0; i < n; ++i)\n        result[i] = xs[i+1] - xs[i] * xs[i] / i;\n    return\
    \ result;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/", "{\n    int n = xs.length;\n    long[] ds = new\
    \ long[n];\n    \n    for (int i = 0; i < n; i++) {\n        ds[i] = xs[i] - xs[n\
    \ - i];\n    }\n    \n    return ds;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[]\
    \ xs) \n{\n    int n = xs.length;\n    double[] ds = new double[n];\n    \n  \
    \  for (int i = 0; i < n; i++) {\n        ds[i] = xs[i] - xs[n - i];\n    }\n\
    \    \n    return ds;\n}\n/*\n xs represent coefficients of a polynomial.\n  \
    \  xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[]\
    \ xs) \n{\n    int n = xs.length;\n    float[] ds = new float[n];\n    \n    for\
    \ (int i = 0; i < n; i++) {\n        ds[i] = xs[i] - xs[n - i];\n    }\n    \n\
    \    return ds;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n    long[] result =\
    \ new long[(xs.length - 1)];\n    long x = 0;\n    for(int i = 0; i < xs.length;\
    \ i++)\n    {\n        result[i] = xs[i + 1];\n        x = x * xs[i + 1];\n  \
    \  }\n    result[0] = x;\n    return result;\n}\n</code>\n<|/ a dscore=1 |>\n\
    <| a dscore=1 |>\n<code>\nimport java.util.ArrayList;\nimport java.util.List;",
  "{\n    long[] result = new long[(xs.length)+1];\n    for(int i = 0; i < xs.length;\
    \ i++)\n    {\n        result[i] = xs[i+1];\n    }\n    result[xs.length] = 1;\n\
    \    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[]\
    \ xs) \n{\n    double[] result = new double[(xs.length)+1];\n    for(int i = 0;\
    \ i < xs.length; i++)\n    {\n        result[i] = xs[i+1];\n    }\n    result[xs.length]\
    \ = 1;\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[]\
    \ xs) \n{\n    float[] result = new float[(xs.length)+1];\n    for(int i = 0;\
    \ i < xs.length; i++)\n    {\n        result[i] = xs[i+1];\n    }\n    result[xs.length]\
    \ = 1;\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n    long[] result =\
    \ new long[xs.length + 1];\n    result[0] = 1;\n    for (int i = 1; i < xs.length;\
    \ i++)\n        result[i] = result[i-1] * xs[i];\n    return result;\n}", "{\n\
    \    long[] result = new long[(xs.length - 1)];\n    long x = 1;\n    for(int\
    \ i = 0; i < xs.length; i++)\n    {\n        result[i] = xs[i] - x * xs[i];\n\
    \        x *= xs[i];\n    }\n    return result;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[]\
    \ derivative(double[] xs) \n{\n    double[] result = new double[(xs.length - 1)];\n\
    \    double x = 1;\n    for(int i = 0; i < xs.length; i++)\n    {\n        result[i]\
    \ = xs[i] - x * xs[i];\n        x *= xs[i];\n    }\n    return result;\n}\n/*\n\
    \ xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] *\
    \ x^2 + ....\n     Return derivative of this polynomial in the same form.\n  \
    \  >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[] xs) \n{\n    float[]\
    \ result = new float[(xs.length - 1)];\n    float x = 1;\n    for(int i = 0; i\
    \ < xs.length; i++)\n    {\n        result[i] = xs[i] - x * xs[i];\n        x\
    \ *= xs[i];\n    }\n    return result;\n}\n/*\n xs represent coefficients of a\
    \ polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n\
    \    long[] result = new long[(xs.length + 1)];\n    long x = 0;\n    long y =\
    \ 0;\n    for(int i = 0; i < xs.length; i++)\n    {\n        y = xs[i];\n    \
    \    result[i] = y;\n        x = x * y;\n    }\n    result[xs.length] = 1;\n \
    \   return result;\n}", "{\n    long[] result = new long[(xs.length + 1)];\n \
    \   long sum = 0;\n    for (int i = 0; i < xs.length; i++)\n    {\n        sum\
    \ += xs[i];\n        result[i] = sum;\n    }\n    result[xs.length] = 1;\n   \
    \ return result;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[]\
    \ xs) \n{\n    double[] result = new double[(xs.length + 1)];\n    double sum\
    \ = 0;\n    for (int i = 0; i < xs.length; i++)\n    {\n        sum += xs[i];\n\
    \        result[i] = sum;\n    }\n    result[xs.length] = 1;\n    return result;\n\
    }\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[] xs) \n{\n    float[]\
    \ result = new float[(xs.length + 1)];\n    float sum = 0;\n    for (int i = 0;\
    \ i < xs.length; i++)\n    {\n        sum += xs[i];\n        result[i] = sum;\n\
    \    }\n    result[xs.length] = 1;\n    return result;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n\
    \    int n = xs.length;\n    long[] d = new long[n];\n    long x = 0;\n    for(int\
    \ i = 0; i < n; i++)\n    {\n        d[i] = xs[i];\n        x = x * xs[i];\n \
    \   }\n    for(int i = n - 1; i >= 0; i--)\n    {\n        d[i] = d[i] + x;\n\
    \        x = x * xs[i];\n    }\n    return d;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[]\
    \ derivative(double[] xs) \n{\n    int n = xs.length;\n    double[] d = new double[n];\n\
    \    double x = 0;\n    for(int i = 0; i < n; i++)\n    {\n        d[i] = xs[i];\n\
    \        x = x * xs[i];\n    }\n    for(int i = n - 1; i >= 0; i--)\n    {\n \
    \       d[i] = d[i] + x;\n        x = x * xs[i];\n    }\n    return d;\n}\n/*\n\
    \ xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] *\
    \ x^2 + ....\n     Return derivative of this polynomial in the same form.\n  \
    \  >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[] xs) \n{\n    int n\
    \ = xs.length;\n    float[] d = new float[n];\n    float x = 0;\n    for(int i\
    \ = 0; i < n; i++)\n    {\n        d[i] = xs[i];\n        x = x * xs[i];\n   \
    \ }\n    for(int i = n - 1; i >= 0; i--)\n    {\n        d[i] = d[i] + x;\n  \
    \      x = x * xs[i];\n    }\n    return d;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n\
    \    long result = 0;\n    for(int i = 0; i < xs.length; i++)\n    {\n       \
    \ result *= xs[i];\n        result += 1;\n    }\n    long[] result = new long[result.intValue()];\n\
    \    for(int i = 0; i < result.length; i++)\n    {\n        result[i] = result.intValue()\
    \ / xs.length;\n    }\n    return result;\n}\n/*\n xs represent coefficients of\
    \ a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[]\
    \ derivative(double[] xs) \n{\n    double result = 0;\n    for(int i = 0; i <\
    \ xs.length; i++)\n    {\n        result *= xs[i];\n        result += 1;\n   \
    \ }\n    double[] result = new double[result.intValue()];\n    for(int i = 0;\
    \ i < result.length; i++)\n    {\n        result[i] = result.intValue() / xs.length;\n\
    \    }\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[]\
    \ xs) \n{\n    float result = 0;\n    for(int i = 0; i < xs.length; i++)\n   \
    \ {\n        result *= xs[i];\n        result += 1;\n    }\n    float[] result\
    \ = new float[result.intValue()];\n    for(int i = 0; i < result.length; i++)\n\
    \    {\n        result[i] = result.intValue() / xs.length;\n    }\n    return\
    \ result;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/", "{\n    int n = xs.length;\n    long[] d = new\
    \ long[n];\n    long x = 0;\n    long y = 0;\n    for(int i = 0; i < n; i++) {\n\
    \        x = xs[i];\n        y = x * x;\n        d[i] = y;\n    }\n    return\
    \ d;\n}", "{\n    long[] result = new long[(xs.length - 1)];\n    long x = 0;\n\
    \    for(int i = 1; i < xs.length; i++)\n    {\n        result[i - 1] = (long)\
    \ (xs[i] - x * xs[i - 1]);\n        x = xs[i];\n    }\n    return result;\n}\n\
    /*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[] xs) \n{\n    double[]\
    \ result = new double[(xs.length - 1)];\n    double x = 0;\n    for(int i = 1;\
    \ i < xs.length; i++)\n    {\n        result[i - 1] = (double) (xs[i] - x * xs[i\
    \ - 1]);\n        x = xs[i];\n    }\n    return result;\n}\n/*\n xs represent\
    \ coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n\
    \     Return derivative of this polynomial in the same form.\n    >>> derivative([3,\
    \ 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n\
    \    \n*/\nfloat[] derivative(float[] xs) \n{\n    float[] result = new float[(xs.length\
    \ - 1)];\n    float x = 0;\n    for(int i = 1; i < xs.length; i++)\n    {\n  \
    \      result[i - 1] = (float) (xs[i] - x * xs[i - 1]);\n        x = xs[i];\n\
    \    }\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n    int n = xs.length;\n\
    \    long[] result = new long[n];\n    for(int i = 0; i < n; ++i)\n    {\n   \
    \     result[i] = xs[i+1] - xs[i];\n    }\n    return result;\n}\n/*\n xs represent\
    \ coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n\
    \     Return derivative of this polynomial in the same form.\n    >>> derivative([3,\
    \ 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n\
    \    \n*/\ndouble[] derivative(double[] xs) \n{\n    int n = xs.length;\n    double[]\
    \ result = new double[n];\n    for(int i = 0; i < n; ++i)\n    {\n        result[i]\
    \ = xs[i+1] - xs[i];\n    }\n    return result;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[]\
    \ derivative(float[] xs) \n{\n    int n = xs.length;\n    float[] result = new\
    \ float[n];\n    for(int i = 0; i < n; ++i)\n    {\n        result[i] = xs[i+1]\
    \ - xs[i];\n    }\n    return result;\n}\n/*\n xs represent coefficients of a\
    \ polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n\
    \    long d = 0;\n    for(int i = 0; i < xs.length; i++)\n    {\n        d = d\
    \ * xs[i];\n    }\n    long[] result = new long[xs.length + 1];\n    for(int i\
    \ = 0; i < xs.length; i++)\n    {\n        result[i] = d;\n        d = d * xs[i];\n\
    \    }\n    result[xs.length] = d;\n    return result;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[]\
    \ derivative(double[] xs) \n{\n    double d = 0;\n    for(int i = 0; i < xs.length;\
    \ i++)\n    {\n        d = d * xs[i];\n    }\n    double[] result = new double[xs.length\
    \ + 1];\n    for(int i = 0; i < xs.length; i++)\n    {\n        result[i] = d;\n\
    \        d = d * xs[i];\n    }\n    result[xs.length] = d;\n    return result;\n\
    }\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[] xs) \n{\n    float\
    \ d = 0;\n    for(int i = 0; i < xs.length; i++)\n    {\n        d = d * xs[i];\n\
    \    }\n    float[] result = new float[xs.length + 1];\n    for(int i = 0; i <\
    \ xs.length; i++)\n    {\n        result[i] = d;\n        d = d * xs[i];\n   \
    \ }\n    result[xs.length] = d;\n    return result;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n\
    \    long[] result = new long[(xs.length - 1)];\n    long a = xs[0];\n    long\
    \ b = xs[1];\n    long c = xs[2];\n    long d = xs[3];\n    long e = xs[4];\n\
    \    long f = xs[5];\n    long g = xs[6];\n    long h = xs[7];\n    long i = xs[8];\n\
    \    long j = xs[9];\n    long k = xs[10];\n    long l = xs[11];\n    long m =\
    \ xs[12];\n    long n = xs[13];\n    long o = xs[14];\n    long p = xs[15];\n\
    \    long q = xs[16];\n    long r = xs[17];\n    long s = xs[18];\n    long t\
    \ = xs[19];\n    long u = xs[20];\n    long v = xs[21];\n    long w = xs[22];\n\
    \    long x = xs[23];\n    long y = xs[24];\n    long z = xs[25];\n    long a\
    \ = xs[26];\n    long b = xs[27];\n    long c = xs[28];\n    long d = xs[29];\n\
    \    long e = xs[30];\n    long f = xs[31];\n    long g = xs[32];\n    long h\
    \ = xs[33];\n    long i = xs[34];\n    long j = xs[35];\n    long k = xs[36];\n\
    \    long l = xs[37];\n    long m = xs[38];\n    long n = xs[39];\n    long o\
    \ = xs[40];\n    long p = xs[41];\n    long q = xs[42];\n    long r = xs[43];\n\
    \    long s = xs[44];\n    long t = xs[45];\n    long u = xs[46];\n    long v\
    \ = xs[47];\n    long w = xs[48];\n    long x = xs[49];\n    long y = xs[50];\n\
    \    long z = xs[51];\n    long a = xs[52];\n    long b = xs[53];\n    long c\
    \ = xs[54];\n    long d = xs[55];\n    long e = xs[56];\n    long f = xs[57];\n\
    \    long g = xs[58];\n    long h = xs[59];\n    long i = xs[60];\n    long j\
    \ = xs[61];\n    long k = xs[", "{\n    int n = xs.length;\n    long[] result\
    \ = new long[n];\n    for(int i = 0; i < n; i++) {\n        result[i] = xs[i +\
    \ 1];\n    }\n    for(int i = n - 2; i >= 0; i--) {\n        result[i] = result[i\
    \ + 1];\n    }\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[]\
    \ xs) \n{\n    int n = xs.length;\n    double[] result = new double[n];\n    for(int\
    \ i = 0; i < n; i++) {\n        result[i] = xs[i + 1];\n    }\n    for(int i =\
    \ n - 2; i >= 0; i--) {\n        result[i] = result[i + 1];\n    }\n    return\
    \ result;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[] xs) \n{\n    int n\
    \ = xs.length;\n    float[] result = new float[n];\n    for(int i = 0; i < n;\
    \ i++) {\n        result[i] = xs[i + 1];\n    }\n    for(int i = n - 2; i >= 0;\
    \ i--) {\n        result[i] = result[i + 1];\n    }\n    return result;\n}\n/*\n\
    \ xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] *\
    \ x^2 + ....\n     Return derivative of this polynomial in the same form.\n  \
    \  >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/", "{\n    long[] result = new long[(xs.length -\
    \ 1)];\n    for (int i = 0; i < result.length; i++) \n    {\n        result[i]\
    \ = xs[i + 1];\n    }\n    return result;\n}\n/*\n xs represent coefficients of\
    \ a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[]\
    \ derivative(double[] xs) \n{\n    double[] result = new double[(xs.length - 1)];\n\
    \    for (int i = 0; i < result.length; i++) \n    {\n        result[i] = xs[i\
    \ + 1];\n    }\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[]\
    \ xs) \n{\n    float[] result = new float[(xs.length - 1)];\n    for (int i =\
    \ 0; i < result.length; i++) \n    {\n        result[i] = xs[i + 1];\n    }\n\
    \    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n    int n = xs.length;\n\
    \    long[] ys = new long[n];\n    for(int i = 0; i < n; ++i)\n    {\n       \
    \ ys[i] = xs[i+1] - xs[i] * xs[i] / derivative(xs);\n    }\n    return ys;\n}\n\
    </code>\n<|/ a tags=java,math |>\n<| c |>\nThanks for your answer. Could you please\
    \ explain why you used `long` instead of `int`?\n<|/ c |>\n<| c |>\nBecause the\
    \ result of `xs[i+1] - xs[i] * xs[i] / derivative(xs)` will be a long and `long`\
    \ can hold more values than `int` can hold. `int` can hold only `2^31-1` values.\n\
    <|/ c |>\n<| c |>\nThanks for your answer. Could you please explain why you used\
    \ `long` instead of `int`?\n<|/ c |>\n<| c |>\nBecause the result of `xs[i+1]\
    \ - xs[i] * xs[i] / derivative(xs)` will be a long and `long` can hold more values\
    \ than `int` can hold. `int` can hold only `2^31-1` values.\n<|/ c |>\n<| c |>\n\
    Thanks for your answer. Could you please explain why you used `long` instead of\
    \ `int`?\n<|/ c |>\n<| a tags=java,math |>\nThe formula for calculating the derivative\
    \ of a polynomial is as follows:\n<code>\nf'(x) = (f(x+h) - f(x)) / h\n</code>\n\
    where h is the step size.\nThe code below implements this formula.\n<code>\npublic\
    \ class Polynomial {", "{\n    long[] result = new long[(xs.length - 1)];\n  \
    \  long x = 0;\n    for(int i = 0; i < xs.length; i++)\n    {\n        result[i]\
    \ = xs[i + 1];\n    }\n    for(int i = xs.length - 1; i >= 0; i--)\n    {\n  \
    \      result[i] = result[i + 1];\n    }\n    for(int i = 0; i < result.length;\
    \ i++)\n    {\n        result[i] = result[i] * x;\n    }\n    return result;\n\
    }\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[] xs) \n{\n    double[]\
    \ result = new double[(xs.length - 1)];\n    double x = 0;\n    for(int i = 0;\
    \ i < xs.length; i++)\n    {\n        result[i] = xs[i + 1];\n    }\n    for(int\
    \ i = xs.length - 1; i >= 0; i--)\n    {\n        result[i] = result[i + 1];\n\
    \    }\n    for(int i = 0; i < result.length; i++)\n    {\n        result[i] =\
    \ result[i] * x;\n    }\n    return result;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[]\
    \ derivative(float[] xs) \n{\n    float[] result = new float[(xs.length - 1)];\n\
    \    float x = 0;\n    for(int i = 0; i < xs.length; i++)\n    {\n        result[i]\
    \ = xs[i + 1];\n    }\n    for(int i = xs.length - 1; i >= 0; i--)\n    {\n  \
    \      result[i] = result[i + 1];\n    }\n    for(int i = 0; i < result.length;\
    \ i++)\n    {\n        result[i] = result[i] * x;\n    }\n    return result;\n\
    }\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/", "{\n    long[] result = new long[xs.length];\n\
    \    for(int i = 0; i < xs.length; i++)\n        result[i] = xs[i+1] - xs[i];\n\
    \    return result;\n}", "{\n    long[] result = new long[(xs.length)+1];\n  \
    \  result[0] = 1;\n    for (int i = 1; i < xs.length; i++)\n    {\n        result[i]\
    \ = result[i-1] * xs[i];\n    }\n    return result;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[]\
    \ derivative(double[] xs) \n{\n    double[] result = new double[(xs.length)+1];\n\
    \    result[0] = 1;\n    for (int i = 1; i < xs.length; i++)\n    {\n        result[i]\
    \ = result[i-1] * xs[i];\n    }\n    return result;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[]\
    \ derivative(float[] xs) \n{\n    float[] result = new float[(xs.length)+1];\n\
    \    result[0] = 1;\n    for (int i = 1; i < xs.length; i++)\n    {\n        result[i]\
    \ = result[i-1] * xs[i];\n    }\n    return result;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n\
    \    int n = xs.length;\n    long[] result = new long[n];\n    long x = 0;\n \
    \   for(int i = 0; i < n; i++)\n    {\n        result[i] = xs[i] - x;\n      \
    \  x = xs[i];\n    }\n    return result;\n}\n/*\n xs represent coefficients of\
    \ a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[]\
    \ derivative(double[] xs) \n{\n    int n = xs.length;\n    double[] result = new\
    \ double[n];\n    double x = 0;\n    for(int i = 0; i < n; i++)\n    {\n     \
    \   result[i] = xs[i] - x;\n        x = xs[i];\n    }\n    return result;\n}\n\
    /*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[] xs) \n{\n    int n\
    \ = xs.length;\n    float[] result = new float[n];\n    float x = 0;\n    for(int\
    \ i = 0; i < n; i++)\n    {\n        result[i] = xs[i] - x;\n        x = xs[i];\n\
    \    }\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n    int n = xs.length;\n\
    \    long[] ys = new long[n];\n    long x = 0;\n    for(int i = 0; i < n; ++i)\n\
    \    {\n        x += xs[i];\n        ys[i] = 1;\n    }\n    for(int i = n - 1;\
    \ i >= 0; --i)\n    {\n        x -= xs[i];\n        ys[i] *= x;\n    }\n    return\
    \ ys;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[] xs) \n{\n    int\
    \ n = xs.length;\n    double[] ys = new double[n];\n    double x = 0;\n    for(int\
    \ i = 0; i < n; ++i)\n    {\n        x += xs[i];\n        ys[i] = 1;\n    }\n\
    \    for(int i = n - 1; i >= 0; --i)\n    {\n        x -= xs[i];\n        ys[i]\
    \ *= x;\n    }\n    return ys;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[]\
    \ xs) \n{\n    int n = xs.length;\n    float[] ys = new float[n];\n    float x\
    \ = 0;\n    for(int i = 0; i < n; ++i)\n    {\n        x += xs[i];\n        ys[i]\
    \ = 1;\n    }\n    for(int i = n - 1; i >= 0; --i)\n    {\n        x -= xs[i];\n\
    \        ys[i] *= x;\n    }\n    return ys;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n\
    \    long n = xs.length;\n    long[] result = new long[n];\n    long a = xs[0];\n\
    \    long b = xs[1];\n    long c = xs[2];\n    long d = xs[3];\n    long e = xs[4];\n\
    \    long f = xs[5];\n    long g = xs[6];\n    long h = xs[7];\n    long i = xs[8];\n\
    \    long j = xs[9];\n    long k = xs[10];\n    long l = xs[11];\n    long m =\
    \ xs[12];\n    long n = xs[13];\n    long o = xs[14];\n    long p = xs[15];\n\
    \    long q = xs[16];\n    long r = xs[17];\n    long s = xs[18];\n    long t\
    \ = xs[19];\n    long u = xs[20];\n    long v = xs[21];\n    long w = xs[22];\n\
    \    long x = xs[23];\n    long y = xs[24];\n    long z = xs[25];\n    long a\
    \ = xs[26];\n    long b = xs[27];\n    long c = xs[28];\n    long d = xs[29];\n\
    \    long e = xs[30];\n    long f = xs[31];\n    long g = xs[32];\n    long h\
    \ = xs[33];\n    long i = xs[34];\n    long j = xs[35];\n    long k = xs[36];\n\
    \    long l = xs[37];\n    long m = xs[38];\n    long n = xs[39];\n    long o\
    \ = xs[40];\n    long p = xs[41];\n    long q = xs[42];\n    long r = xs[43];\n\
    \    long s = xs[44];\n    long t = xs[45];\n    long u = xs[46];\n    long v\
    \ = xs[47];\n    long w = xs[48];\n    long x = xs[49];\n    long y = xs[50];\n\
    \    long z = xs[51];\n    long a = xs[52];\n    long b = xs[53];\n    long c\
    \ = xs[54];\n    long d = xs[55];\n    long e = xs[56];\n    long f = xs[57];\n\
    \    long g = xs[58];\n    long h = xs[59];\n    long i = xs[60];\n    long j\
    \ = xs[61];\n    long ", "{\n    int n = xs.length;\n    long[] d = new long[n];\n\
    \    long x = 0;\n    long y = 0;\n    for(int i = 0; i < n; i++) {\n        x\
    \ = xs[i];\n        y = x * x;\n        d[i] = y;\n    }\n    return d;\n}\n/*\n\
    \ xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] *\
    \ x^2 + ....\n     Return derivative of this polynomial in the same form.\n  \
    \  >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[] xs) \n{\n    int\
    \ n = xs.length;\n    double[] d = new double[n];\n    double x = 0;\n    double\
    \ y = 0;\n    for(int i = 0; i < n; i++) {\n        x = xs[i];\n        y = x\
    \ * x;\n        d[i] = y;\n    }\n    return d;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[]\
    \ derivative(float[] xs) \n{\n    int n = xs.length;\n    float[] d = new float[n];\n\
    \    float x = 0;\n    float y = 0;\n    for(int i = 0; i < n; i++) {\n      \
    \  x = xs[i];\n        y = x * x;\n        d[i] = y;\n    }\n    return d;\n}\n\
    /*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/", "{\n    int n = xs.length;\n    long[] result\
    \ = new long[n];\n    for(int i = 0; i < n; ++i)\n        result[i] = xs[i];\n\
    \    for(int i = n - 1; i >= 0; --i)\n        result[i] = result[i + 1] * xs[i];\n\
    \    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[]\
    \ xs) \n{\n    int n = xs.length;\n    double[] result = new double[n];\n    for(int\
    \ i = 0; i < n; ++i)\n        result[i] = xs[i];\n    for(int i = n - 1; i >=\
    \ 0; --i)\n        result[i] = result[i + 1] * xs[i];\n    return result;\n}\n\
    /*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[] xs) \n{\n    int n\
    \ = xs.length;\n    float[] result = new float[n];\n    for(int i = 0; i < n;\
    \ ++i)\n        result[i] = xs[i];\n    for(int i = n - 1; i >= 0; --i)\n    \
    \    result[i] = result[i + 1] * xs[i];\n    return result;\n}\n/*\n xs represent\
    \ coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n\
    \     Return derivative of this polynomial in the same form.\n    >>> derivative([3,\
    \ 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n\
    \    \n*/", "{\n    long[] result = new long[xs.length];\n    for(int i = 0; i\
    \ < xs.length; i++)\n        result[i] = xs[i + 1] - xs[i];\n    return result;\n\
    }\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[] xs) \n{\n    double[]\
    \ result = new double[xs.length];\n    for(int i = 0; i < xs.length; i++)\n  \
    \      result[i] = xs[i + 1] - xs[i];\n    return result;\n}\n/*\n xs represent\
    \ coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n\
    \     Return derivative of this polynomial in the same form.\n    >>> derivative([3,\
    \ 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n\
    \    \n*/\nfloat[] derivative(float[] xs) \n{\n    float[] result = new float[xs.length];\n\
    \    for(int i = 0; i < xs.length; i++)\n        result[i] = xs[i + 1] - xs[i];\n\
    \    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n    int n = xs.length;\n\
    \    long[] result = new long[n];\n    for (int i = 0; i < n; ++i) {\n       \
    \ result[i] = xs[i + 1];\n    }\n    return result;\n}", "{\n    int n = xs.length;\n\
    \    long[] result = new long[n];\n    for (int i = 0; i < n; i++) {\n       \
    \ result[i] = xs[i + 1];\n    }\n    return result;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[]\
    \ derivative(double[] xs) \n{\n    int n = xs.length;\n    double[] result = new\
    \ double[n];\n    for (int i = 0; i < n; i++) {\n        result[i] = xs[i + 1];\n\
    \    }\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[]\
    \ xs) \n{\n    int n = xs.length;\n    float[] result = new float[n];\n    for\
    \ (int i = 0; i < n; i++) {\n        result[i] = xs[i + 1];\n    }\n    return\
    \ result;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/", "{\n    long[] result = new long[length(xs)];\n\
    \    long x = 0;\n    long y = 0;\n    for(int i = 0; i < length(xs); i++)\n \
    \   {\n        y = xs[i];\n        result[i] = 1;\n        for(int j = 0; j <\
    \ i; j++)\n        {\n            y += xs[j] * result[j];\n        }\n       \
    \ result[i] = y;\n    }\n    return result;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[]\
    \ derivative(double[] xs) \n{\n    double[] result = new double[length(xs)];\n\
    \    double x = 0;\n    double y = 0;\n    for(int i = 0; i < length(xs); i++)\n\
    \    {\n        y = xs[i];\n        result[i] = 1;\n        for(int j = 0; j <\
    \ i; j++)\n        {\n            y += xs[j] * result[j];\n        }\n       \
    \ result[i] = y;\n    }\n    return result;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[]\
    \ derivative(float[] xs) \n{\n    float[] result = new float[length(xs)];\n  \
    \  float x = 0;\n    float y = 0;\n    for(int i = 0; i < length(xs); i++)\n \
    \   {\n        y = xs[i];\n        result[i] = 1;\n        for(int j = 0; j <\
    \ i; j++)\n        {\n            y += xs[j] * result[j];\n        }\n       \
    \ result[i] = y;\n    }\n    return result;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n\
    \    long result = 0;\n    for(int i = 0; i < xs.length; i++)\n    {\n       \
    \ result *= xs[i];\n        result += 1;\n    }\n    long[] result = new long[result];\n\
    \    for(int i = 0; i < xs.length; i++)\n    {\n        result[i] = xs[i] - 1;\n\
    \    }\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[]\
    \ xs) \n{\n    double result = 0;\n    for(int i = 0; i < xs.length; i++)\n  \
    \  {\n        result *= xs[i];\n        result += 1;\n    }\n    double[] result\
    \ = new double[result];\n    for(int i = 0; i < xs.length; i++)\n    {\n     \
    \   result[i] = xs[i] - 1;\n    }\n    return result;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[]\
    \ derivative(float[] xs) \n{\n    float result = 0;\n    for(int i = 0; i < xs.length;\
    \ i++)\n    {\n        result *= xs[i];\n        result += 1;\n    }\n    float[]\
    \ result = new float[result];\n    for(int i = 0; i < xs.length; i++)\n    {\n\
    \        result[i] = xs[i] - 1;\n    }\n    return result;\n}\n/*\n xs represent\
    \ coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n\
    \     Return derivative of this polynomial in the same form.\n    >>> derivative([3,\
    \ 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n\
    \    \n*/", "{\n    int n = xs.length;\n    long[] result = new long[n];\n   \
    \ for (int i = 0; i < n; i++)\n        result[i] = xs[i + 1];\n    for (int i\
    \ = n - 1; i >= 0; i--)\n        result[i] = result[i + 1] * xs[i];\n    return\
    \ result;\n}", "{\n    int n = xs.length;\n    long[] ys = new long[n];\n    for(int\
    \ i = 0; i < n; i++)\n    {\n        ys[i] = xs[i + 1] - xs[i];\n    }\n    return\
    \ ys;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[] xs) \n{\n    int\
    \ n = xs.length;\n    double[] ys = new double[n];\n    for(int i = 0; i < n;\
    \ i++)\n    {\n        ys[i] = xs[i + 1] - xs[i];\n    }\n    return ys;\n}\n\
    /*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[] xs) \n{\n    int n\
    \ = xs.length;\n    float[] ys = new float[n];\n    for(int i = 0; i < n; i++)\n\
    \    {\n        ys[i] = xs[i + 1] - xs[i];\n    }\n    return ys;\n}\n/*\n xs\
    \ represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2\
    \ + ....\n     Return derivative of this polynomial in the same form.\n    >>>\
    \ derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n\
    \    [2, 6]\n    \n*/", "{\n    long[] result = new long[xs.length + 1];\n   \
    \ \n    result[0] = xs[0];\n    \n    for (int i = 1; i < xs.length; i++)\n  \
    \  {\n        result[i] = result[i-1] * xs[i];\n    }\n    \n    return result;\n\
    }\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[] xs) \n{\n    double[]\
    \ result = new double[xs.length + 1];\n    \n    result[0] = xs[0];\n    \n  \
    \  for (int i = 1; i < xs.length; i++)\n    {\n        result[i] = result[i-1]\
    \ * xs[i];\n    }\n    \n    return result;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[]\
    \ derivative(float[] xs) \n{\n    float[] result = new float[xs.length + 1];\n\
    \    \n    result[0] = xs[0];\n    \n    for (int i = 1; i < xs.length; i++)\n\
    \    {\n        result[i] = result[i-1] * xs[i];\n    }\n    \n    return result;\n\
    }\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/", "{\n    int n = xs.length;\n    long[] ys = new\
    \ long[n];\n    ys[0] = 1;\n    for (int i = 1; i < n; i++) {\n        ys[i] =\
    \ ys[i-1] * xs[i];\n    }\n    return ys;\n}", "{\n    int n = xs.length;\n  \
    \  long[] d = new long[n];\n    long a = xs[0];\n    long b = xs[1];\n    long\
    \ c = xs[2];\n    long d = xs[3];\n    long e = xs[4];\n    long f = xs[5];\n\
    \    long g = xs[6];\n    long h = xs[7];\n    long i = xs[8];\n    long j = xs[9];\n\
    \    long k = xs[10];\n    long l = xs[11];\n    long m = xs[12];\n    long n\
    \ = xs[13];\n    long o = xs[14];\n    long p = xs[15];\n    long q = xs[16];\n\
    \    long r = xs[17];\n    long s = xs[18];\n    long t = xs[19];\n    long u\
    \ = xs[20];\n    long v = xs[21];\n    long w = xs[22];\n    long x = xs[23];\n\
    \    long y = xs[24];\n    long z = xs[25];\n    long a = xs[26];\n    long b\
    \ = xs[27];\n    long c = xs[28];\n    long d = xs[29];\n    long e = xs[30];\n\
    \    long f = xs[31];\n    long g = xs[32];\n    long h = xs[33];\n    long i\
    \ = xs[34];\n    long j = xs[35];\n    long k = xs[36];\n    long l = xs[37];\n\
    \    long m = xs[38];\n    long n = xs[39];\n    long o = xs[40];\n    long p\
    \ = xs[41];\n    long q = xs[42];\n    long r = xs[43];\n    long s = xs[44];\n\
    \    long t = xs[45];\n    long u = xs[46];\n    long v = xs[47];\n    long w\
    \ = xs[48];\n    long x = xs[49];\n    long y = xs[50];\n    long z = xs[51];\n\
    \    long a = xs[52];\n    long b = xs[53];\n    long c = xs[54];\n    long d\
    \ = xs[55];\n    long e = xs[56];\n    long f = xs[57];\n    long g = xs[58];\n\
    \    long h = xs[59];\n    long i = xs[60];\n    long j = xs[61];\n    long k\
    \ = ", "{\n    long[] result = new long[(xs.length - 1)];\n    for(int i = 0;\
    \ i < xs.length - 1; i++)\n    {\n        result[i] = xs[i + 1] - xs[i];\n   \
    \ }\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[]\
    \ xs) \n{\n    double[] result = new double[(xs.length - 1)];\n    for(int i =\
    \ 0; i < xs.length - 1; i++)\n    {\n        result[i] = xs[i + 1] - xs[i];\n\
    \    }\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[]\
    \ xs) \n{\n    float[] result = new float[(xs.length - 1)];\n    for(int i = 0;\
    \ i < xs.length - 1; i++)\n    {\n        result[i] = xs[i + 1] - xs[i];\n   \
    \ }\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n    long[] result =\
    \ new long[(xs.length - 1)];\n    for(int i = 0; i < xs.length - 1; i++)\n   \
    \ {\n        result[i] = xs[i + 1] - xs[i];\n    }\n    return result;\n}\n/*\n\
    \ xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] *\
    \ x^2 + ....\n     Return derivative of this polynomial in the same form.\n  \
    \  >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[] xs) \n{\n    double[]\
    \ result = new double[(xs.length - 1)];\n    for(int i = 0; i < xs.length - 1;\
    \ i++)\n    {\n        result[i] = xs[i + 1] - xs[i];\n    }\n    return result;\n\
    }\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[] xs) \n{\n    float[]\
    \ result = new float[(xs.length - 1)];\n    for(int i = 0; i < xs.length - 1;\
    \ i++)\n    {\n        result[i] = xs[i + 1] - xs[i];\n    }\n    return result;\n\
    }\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/", "{\n    long[] result = new long[xs.length];\n\
    \    for(int i = 0; i < xs.length; i++)\n    {\n        result[i] = xs[i+1] -\
    \ xs[i];\n    }\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[]\
    \ xs) \n{\n    double[] result = new double[xs.length];\n    for(int i = 0; i\
    \ < xs.length; i++)\n    {\n        result[i] = xs[i+1] - xs[i];\n    }\n    return\
    \ result;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[] xs) \n{\n    float[]\
    \ result = new float[xs.length];\n    for(int i = 0; i < xs.length; i++)\n   \
    \ {\n        result[i] = xs[i+1] - xs[i];\n    }\n    return result;\n}\n/*\n\
    \ xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] *\
    \ x^2 + ....\n     Return derivative of this polynomial in the same form.\n  \
    \  >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/", "{\n    int n = xs.length;\n    long[] result\
    \ = new long[n];\n    long sum = 0;\n    for (int i = 0; i < n; i++) {\n     \
    \   sum += xs[i];\n        result[i] = sum;\n    }\n    return result;\n}\n/*\n\
    \ xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] *\
    \ x^2 + ....\n     Return derivative of this polynomial in the same form.\n  \
    \  >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[] xs) \n{\n    int\
    \ n = xs.length;\n    double[] result = new double[n];\n    double sum = 0;\n\
    \    for (int i = 0; i < n; i++) {\n        sum += xs[i];\n        result[i] =\
    \ sum;\n    }\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[]\
    \ xs) \n{\n    int n = xs.length;\n    float[] result = new float[n];\n    float\
    \ sum = 0;\n    for (int i = 0; i < n; i++) {\n        sum += xs[i];\n       \
    \ result[i] = sum;\n    }\n    return result;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n\
    \    long d = 0;\n    for(int i = 0; i < xs.length; i++)\n    {\n        d +=\
    \ xs[i] * xs[i];\n    }\n    long[] result = new long[xs.length + 1];\n    result[0]\
    \ = d;\n    for(int i = 1; i < xs.length; i++)\n    {\n        result[i] = result[i-1]\
    \ + xs[i];\n    }\n    return result;\n}\n/*\n xs represent coefficients of a\
    \ polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[]\
    \ derivative(double[] xs) \n{\n    double d = 0;\n    for(int i = 0; i < xs.length;\
    \ i++)\n    {\n        d += xs[i] * xs[i];\n    }\n    double[] result = new double[xs.length\
    \ + 1];\n    result[0] = d;\n    for(int i = 1; i < xs.length; i++)\n    {\n \
    \       result[i] = result[i-1] + xs[i];\n    }\n    return result;\n}\n/*\n xs\
    \ represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2\
    \ + ....\n     Return derivative of this polynomial in the same form.\n    >>>\
    \ derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n\
    \    [2, 6]\n    \n*/\nfloat[] derivative(float[] xs) \n{\n    float d = 0;\n\
    \    for(int i = 0; i < xs.length; i++)\n    {\n        d += xs[i] * xs[i];\n\
    \    }\n    float[] result = new float[xs.length + 1];\n    result[0] = d;\n \
    \   for(int i = 1; i < xs.length; i++)\n    {\n        result[i] = result[i-1]\
    \ + xs[i];\n    }\n    return result;\n}\n/*\n xs represent coefficients of a\
    \ polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n\
    \    int n = xs.length;\n    long[] ds = new long[n];\n    for(int i = 0; i <\
    \ n; ++i) {\n        ds[i] = xs[i + 1];\n    }\n    return ds;\n}", "{\n    int\
    \ n = xs.length;\n    long[] ys = new long[n];\n    for(int i = 0; i < n; i++)\
    \ {\n        ys[i] = xs[i] - xs[i-1];\n    }\n    return ys;\n}\n/*\n xs represent\
    \ coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n\
    \     Return derivative of this polynomial in the same form.\n    >>> derivative([3,\
    \ 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n\
    \    \n*/\ndouble[] derivative(double[] xs) \n{\n    int n = xs.length;\n    double[]\
    \ ys = new double[n];\n    for(int i = 0; i < n; i++) {\n        ys[i] = xs[i]\
    \ - xs[i-1];\n    }\n    return ys;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[]\
    \ xs) \n{\n    int n = xs.length;\n    float[] ys = new float[n];\n    for(int\
    \ i = 0; i < n; i++) {\n        ys[i] = xs[i] - xs[i-1];\n    }\n    return ys;\n\
    }\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/", "{\n    int n = xs.length;\n    long[] result\
    \ = new long[n];\n    for(int i = 0; i < n; ++i)\n        result[i] = xs[i + 1]\
    \ - xs[i];\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[]\
    \ xs) \n{\n    int n = xs.length;\n    double[] result = new double[n];\n    for(int\
    \ i = 0; i < n; ++i)\n        result[i] = xs[i + 1] - xs[i];\n    return result;\n\
    }\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[] xs) \n{\n    int n\
    \ = xs.length;\n    float[] result = new float[n];\n    for(int i = 0; i < n;\
    \ ++i)\n        result[i] = xs[i + 1] - xs[i];\n    return result;\n}\n/*\n xs\
    \ represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2\
    \ + ....\n     Return derivative of this polynomial in the same form.\n    >>>\
    \ derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n\
    \    [2, 6]\n    \n*/", "{\n    int n = xs.length;\n    long[] ds = new long[n];\n\
    \    \n    for (int i = 0; i < n; ++i) {\n        ds[i] = xs[i];\n    }\n    \n\
    \    for (int i = n - 1; i >= 0; --i) {\n        ds[i] = ds[i + 1] * xs[i + 1];\n\
    \    }\n    \n    return ds;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[]\
    \ xs) \n{\n    int n = xs.length;\n    double[] ds = new double[n];\n    \n  \
    \  for (int i = 0; i < n; ++i) {\n        ds[i] = xs[i];\n    }\n    \n    for\
    \ (int i = n - 1; i >= 0; --i) {\n        ds[i] = ds[i + 1] * xs[i + 1];\n   \
    \ }\n    \n    return ds;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[]\
    \ xs) \n{\n    int n = xs.length;\n    float[] ds = new float[n];\n    \n    for\
    \ (int i = 0; i < n; ++i) {\n        ds[i] = xs[i];\n    }\n    \n    for (int\
    \ i = n - 1; i >= 0; --i) {\n        ds[i] = ds[i + 1] * xs[i + 1];\n    }\n \
    \   \n    return ds;\n}\n/*\n xs represent coefficients of a polynomial.\n   \
    \ xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n    int n = xs.length;\n\
    \    long[] result = new long[n];\n    for(int i = 0; i < n; i++)\n    {\n   \
    \     result[i] = xs[i + 1] - xs[i];\n    }\n    return result;\n}\n/*\n xs represent\
    \ coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n\
    \     Return derivative of this polynomial in the same form.\n    >>> derivative([3,\
    \ 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n\
    \    \n*/\ndouble[] derivative(double[] xs) \n{\n    int n = xs.length;\n    double[]\
    \ result = new double[n];\n    for(int i = 0; i < n; i++)\n    {\n        result[i]\
    \ = xs[i + 1] - xs[i];\n    }\n    return result;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[]\
    \ derivative(float[] xs) \n{\n    int n = xs.length;\n    float[] result = new\
    \ float[n];\n    for(int i = 0; i < n; i++)\n    {\n        result[i] = xs[i +\
    \ 1] - xs[i];\n    }\n    return result;\n}\n/*\n xs represent coefficients of\
    \ a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n\
    \    long result = 0;\n    for(int i = 0; i < xs.length; i++)\n    {\n       \
    \ result *= xs[i];\n        result += xs[i+1];\n    }\n    long[] result = new\
    \ long[result.__len__()];\n    for(int i = 0; i < result.__len__(); i++)\n   \
    \ {\n        result[i] = result;\n    }\n    return result;\n}\n/*\n xs represent\
    \ coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n\
    \     Return derivative of this polynomial in the same form.\n    >>> derivative([3,\
    \ 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n\
    \    \n*/\ndouble[] derivative(double[] xs) \n{\n    double result = 0;\n    for(int\
    \ i = 0; i < xs.length; i++)\n    {\n        result *= xs[i];\n        result\
    \ += xs[i+1];\n    }\n    double[] result = new double[result.__len__()];\n  \
    \  for(int i = 0; i < result.__len__(); i++)\n    {\n        result[i] = result;\n\
    \    }\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[]\
    \ xs) \n{\n    float result = 0;\n    for(int i = 0; i < xs.length; i++)\n   \
    \ {\n        result *= xs[i];\n        result += xs[i+1];\n    }\n    float[]\
    \ result = new float[result.__len__()];\n    for(int i = 0; i < result.__len__();\
    \ i++)\n    {\n        result[i] = result;\n    }\n    return result;\n}\n/*\n\
    \ xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] *\
    \ x^2 + ....\n     Return derivative of this polynomial in the same form.\n  \
    \  >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/", "{\n    int n = xs.length;\n    long[] result\
    \ = new long[n];\n    for(int i = 0; i < n; ++i) {\n        result[i] = xs[i]\
    \ - xs[n - i];\n    }\n    return result;\n}", "{\n    long[] result = new long[xs.length];\n\
    \    for(int i = 0; i < xs.length; i++)\n        result[i] = xs[i + 1] - xs[i];\n\
    \    return result;\n}", "{\n    long result = 0;\n    for(int i = 0; i < xs.length;\
    \ i++)\n    {\n        result *= xs[i];\n        result -= xs[i+1];\n    }\n \
    \   long[] result = new long[result.__len__()];\n    for(int i = 0; i < result.__len__();\
    \ i++)\n    {\n        result[i] = result;\n    }\n    return result;\n}\n/*\n\
    \ xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] *\
    \ x^2 + ....\n     Return derivative of this polynomial in the same form.\n  \
    \  >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[] xs) \n{\n    double\
    \ result = 0;\n    for(int i = 0; i < xs.length; i++)\n    {\n        result *=\
    \ xs[i];\n        result -= xs[i+1];\n    }\n    double[] result = new double[result.__len__()];\n\
    \    for(int i = 0; i < result.__len__(); i++)\n    {\n        result[i] = result;\n\
    \    }\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[]\
    \ xs) \n{\n    float result = 0;\n    for(int i = 0; i < xs.length; i++)\n   \
    \ {\n        result *= xs[i];\n        result -= xs[i+1];\n    }\n    float[]\
    \ result = new float[result.__len__()];\n    for(int i = 0; i < result.__len__();\
    \ i++)\n    {\n        result[i] = result;\n    }\n    return result;\n}\n/*\n\
    \ xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] *\
    \ x^2 + ....\n     Return derivative of this polynomial in the same form.\n  \
    \  >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/", "{\n    int n = xs.length;\n    long[] result\
    \ = new long[n];\n    for (int i = 0; i < n; ++i) {\n        result[i] = xs[i]\
    \ - xs[n - i];\n    }\n    return result;\n}\n/*\n xs represent coefficients of\
    \ a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[]\
    \ derivative(double[] xs) \n{\n    int n = xs.length;\n    double[] result = new\
    \ double[n];\n    for (int i = 0; i < n; ++i) {\n        result[i] = xs[i] - xs[n\
    \ - i];\n    }\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[]\
    \ xs) \n{\n    int n = xs.length;\n    float[] result = new float[n];\n    for\
    \ (int i = 0; i < n; ++i) {\n        result[i] = xs[i] - xs[n - i];\n    }\n \
    \   return result;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n    long[] result =\
    \ new long[(xs.length - 1)];\n    for(int i = 0; i < result.length; i++)\n   \
    \ {\n        result[i] = xs[i + 1];\n    }\n    return result;\n}\n/*\n xs represent\
    \ coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n\
    \     Return derivative of this polynomial in the same form.\n    >>> derivative([3,\
    \ 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n\
    \    \n*/\ndouble[] derivative(double[] xs) \n{\n    double[] result = new double[(xs.length\
    \ - 1)];\n    for(int i = 0; i < result.length; i++)\n    {\n        result[i]\
    \ = xs[i + 1];\n    }\n    return result;\n}\n/*\n xs represent coefficients of\
    \ a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[]\
    \ derivative(float[] xs) \n{\n    float[] result = new float[(xs.length - 1)];\n\
    \    for(int i = 0; i < result.length; i++)\n    {\n        result[i] = xs[i +\
    \ 1];\n    }\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n    int n = xs.length;\n\
    \    long[] ys = new long[n];\n    for(int i = 0; i < n; i++)\n    {\n       \
    \ ys[i] = xs[i+1] - xs[i] * xs[i] / i;\n    }\n    return ys;\n}", "{\n    int\
    \ n = xs.length;\n    long[] d = new long[n];\n    long[] p = new long[n];\n \
    \   long s = 0;\n    for(int i = 0; i < n; i++)\n    {\n        s[i] = xs[i];\n\
    \        p[i] = 1;\n    }\n    for(int i = n - 1; i >= 0; i--)\n    {\n      \
    \  for(int j = 0; j < i; j++)\n        {\n            long t = s[j] * p[j];\n\
    \            s[j] = t;\n            p[j] = p[j] - t;\n        }\n        s[i]\
    \ = s[i];\n        s[i] = s[i] + p[i];\n    }\n    return d;\n}\n/*\n xs represent\
    \ coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n\
    \     Return derivative of this polynomial in the same form.\n    >>> derivative([3,\
    \ 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n\
    \    \n*/\ndouble[] derivative(double[] xs) \n{\n    int n = xs.length;\n    double[]\
    \ d = new double[n];\n    double[] p = new double[n];\n    double s = 0;\n   \
    \ for(int i = 0; i < n; i++)\n    {\n        s[i] = xs[i];\n        p[i] = 1;\n\
    \    }\n    for(int i = n - 1; i >= 0; i--)\n    {\n        for(int j = 0; j <\
    \ i; j++)\n        {\n            double t = s[j] * p[j];\n            s[j] =\
    \ t;\n            p[j] = p[j] - t;\n        }\n        s[i] = s[i];\n        s[i]\
    \ = s[i] + p[i];\n    }\n    return d;\n}\n/*\n xs represent coefficients of a\
    \ polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[]\
    \ derivative(float[] xs) \n{\n    int n = xs.length;\n    float[] d = new float[n];\n\
    \    float[] p = new float[n];\n    float s = 0;\n    for(int i = 0; i < n; i++)\n\
    \    {\n        s[i] = xs[i];\n        p[i] = 1;\n    }\n    for(int i = n - 1;\
    \ i >= 0; i--)\n    {\n        for(int j = 0; j < i; j++)\n        {\n       \
    \     float t = s[j] * p[j];\n            s[j] = t;\n            p[j] = p[j] -\
    \ t;\n        }\n        s[i] = s[i];\n        s[i] = s[i] + p[i];\n    }\n  \
    \  return d;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0] +\
    \ xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in\
    \ the same form.", "{\n    long d = 1;\n    for(int i = 0; i < xs.length; i++)\n\
    \    {\n        d *= xs[i];\n    }\n    long[] result = new long[xs.length + 1];\n\
    \    result[0] = d;\n    for(int i = 1; i < xs.length; i++)\n    {\n        result[i]\
    \ = result[i-1] * xs[i];\n    }\n    return result;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[]\
    \ derivative(double[] xs) \n{\n    double d = 1;\n    for(int i = 0; i < xs.length;\
    \ i++)\n    {\n        d *= xs[i];\n    }\n    double[] result = new double[xs.length\
    \ + 1];\n    result[0] = d;\n    for(int i = 1; i < xs.length; i++)\n    {\n \
    \       result[i] = result[i-1] * xs[i];\n    }\n    return result;\n}\n/*\n xs\
    \ represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2\
    \ + ....\n     Return derivative of this polynomial in the same form.\n    >>>\
    \ derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n\
    \    [2, 6]\n    \n*/\nfloat[] derivative(float[] xs) \n{\n    float d = 1;\n\
    \    for(int i = 0; i < xs.length; i++)\n    {\n        d *= xs[i];\n    }\n \
    \   float[] result = new float[xs.length + 1];\n    result[0] = d;\n    for(int\
    \ i = 1; i < xs.length; i++)\n    {\n        result[i] = result[i-1] * xs[i];\n\
    \    }\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n    long[] result =\
    \ new long[xs.length + 1];\n    long sum = 0;\n    for(int i = 0; i < xs.length;\
    \ i++) \n    {\n        sum += xs[i];\n        result[i] = sum;\n    }\n    result[xs.length]\
    \ = 1;\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[]\
    \ xs) \n{\n    double[] result = new double[xs.length + 1];\n    double sum =\
    \ 0;\n    for(int i = 0; i < xs.length; i++) \n    {\n        sum += xs[i];\n\
    \        result[i] = sum;\n    }\n    result[xs.length] = 1;\n    return result;\n\
    }\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[] xs) \n{\n    float[]\
    \ result = new float[xs.length + 1];\n    float sum = 0;\n    for(int i = 0; i\
    \ < xs.length; i++) \n    {\n        sum += xs[i];\n        result[i] = sum;\n\
    \    }\n    result[xs.length] = 1;\n    return result;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n\
    \    int n = xs.length;\n    long[] result = new long[n];\n    for(int i = 0;\
    \ i < n; i++) {\n        result[i] = xs[i] - xs[n - i];\n    }\n    return result;\n\
    }\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[] xs) \n{\n    int\
    \ n = xs.length;\n    double[] result = new double[n];\n    for(int i = 0; i <\
    \ n; i++) {\n        result[i] = xs[i] - xs[n - i];\n    }\n    return result;\n\
    }\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[] xs) \n{\n    int n\
    \ = xs.length;\n    float[] result = new float[n];\n    for(int i = 0; i < n;\
    \ i++) {\n        result[i] = xs[i] - xs[n - i];\n    }\n    return result;\n\
    }\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/", "{\n    long[] result = new long[(xs.length -\
    \ 1)];\n    for (int i = 0; i < result.length; i++)\n        result[i] = xs[i\
    \ + 1];\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[]\
    \ xs) \n{\n    double[] result = new double[(xs.length - 1)];\n    for (int i\
    \ = 0; i < result.length; i++)\n        result[i] = xs[i + 1];\n    return result;\n\
    }\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[] xs) \n{\n    float[]\
    \ result = new float[(xs.length - 1)];\n    for (int i = 0; i < result.length;\
    \ i++)\n        result[i] = xs[i + 1];\n    return result;\n}\n/*\n xs represent\
    \ coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n\
    \     Return derivative of this polynomial in the same form.\n    >>> derivative([3,\
    \ 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n\
    \    \n*/", "{\n    int n = xs.length;\n    long[] result = new long[n];\n   \
    \ long x = 0;\n    long y = 0;\n    for(int i = 0; i < n; i++) {\n        x =\
    \ xs[i];\n        y = x * x;\n        result[i] = y;\n    }\n    return result;\n\
    }\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[] xs) \n{\n    int\
    \ n = xs.length;\n    double[] result = new double[n];\n    double x = 0;\n  \
    \  double y = 0;\n    for(int i = 0; i < n; i++) {\n        x = xs[i];\n     \
    \   y = x * x;\n        result[i] = y;\n    }\n    return result;\n}\n/*\n xs\
    \ represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2\
    \ + ....\n     Return derivative of this polynomial in the same form.\n    >>>\
    \ derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n\
    \    [2, 6]\n    \n*/\nfloat[] derivative(float[] xs) \n{\n    int n = xs.length;\n\
    \    float[] result = new float[n];\n    float x = 0;\n    float y = 0;\n    for(int\
    \ i = 0; i < n; i++) {\n        x = xs[i];\n        y = x * x;\n        result[i]\
    \ = y;\n    }\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n    long[] d = new\
    \ long[(xs.length + 1)];\n    long sum = 0;\n    for (int i = 0; i < xs.length;\
    \ i++)\n    {\n        sum += xs[i];\n        d[i] = sum;\n    }\n    d[xs.length]\
    \ = 1;\n    return d;\n}\n/*\n xs represent coefficients of a polynomial.\n  \
    \  xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[]\
    \ xs) \n{\n    double[] d = new double[(xs.length + 1)];\n    double sum = 0;\n\
    \    for (int i = 0; i < xs.length; i++)\n    {\n        sum += xs[i];\n     \
    \   d[i] = sum;\n    }\n    d[xs.length] = 1;\n    return d;\n}\n/*\n xs represent\
    \ coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n\
    \     Return derivative of this polynomial in the same form.\n    >>> derivative([3,\
    \ 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n\
    \    \n*/\nfloat[] derivative(float[] xs) \n{\n    float[] d = new float[(xs.length\
    \ + 1)];\n    float sum = 0;\n    for (int i = 0; i < xs.length; i++)\n    {\n\
    \        sum += xs[i];\n        d[i] = sum;\n    }\n    d[xs.length] = 1;\n  \
    \  return d;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0] +\
    \ xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in\
    \ the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n  \
    \  >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n    long[] result = new\
    \ long[xs.length + 1];\n    for(int i = 0; i < xs.length; i++)\n    {\n      \
    \  result[i] = xs[i + 1];\n    }\n    result[xs.length] = 1;\n    return result;\n\
    }", "{\n    long[] result = new long[xs.length];\n    long x = 0;\n    for(int\
    \ i = 0; i < xs.length; i++)\n    {\n        result[i] = xs[i];\n        x +=\
    \ xs[i];\n    }\n    for(int i = xs.length - 1; i >= 0; i--)\n    {\n        result[i]\
    \ = result[i] / x;\n        x -= xs[i];\n    }\n    return result;\n}\n/*\n xs\
    \ represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2\
    \ + ....\n     Return derivative of this polynomial in the same form.\n    >>>\
    \ derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n\
    \    [2, 6]\n    \n*/\ndouble[] derivative(double[] xs) \n{\n    double[] result\
    \ = new double[xs.length];\n    double x = 0;\n    for(int i = 0; i < xs.length;\
    \ i++)\n    {\n        result[i] = xs[i];\n        x += xs[i];\n    }\n    for(int\
    \ i = xs.length - 1; i >= 0; i--)\n    {\n        result[i] = result[i] / x;\n\
    \        x -= xs[i];\n    }\n    return result;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[]\
    \ derivative(float[] xs) \n{\n    float[] result = new float[xs.length];\n   \
    \ float x = 0;\n    for(int i = 0; i < xs.length; i++)\n    {\n        result[i]\
    \ = xs[i];\n        x += xs[i];\n    }\n    for(int i = xs.length - 1; i >= 0;\
    \ i--)\n    {\n        result[i] = result[i] / x;\n        x -= xs[i];\n    }\n\
    \    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n    int n = xs.length;\n\
    \    long[] d = new long[n];\n    long d0 = 1;\n    long dn = 1;\n    for (int\
    \ i = 1; i < n; i++) {\n        d[i] = d0;\n        d0 = dn;\n        dn = d[i]\
    \ * xs[i];\n    }\n    return d;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[]\
    \ xs) \n{\n    int n = xs.length;\n    double[] d = new double[n];\n    double\
    \ d0 = 1;\n    double dn = 1;\n    for (int i = 1; i < n; i++) {\n        d[i]\
    \ = d0;\n        d0 = dn;\n        dn = d[i] * xs[i];\n    }\n    return d;\n\
    }\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[] xs) \n{\n    int n\
    \ = xs.length;\n    float[] d = new float[n];\n    float d0 = 1;\n    float dn\
    \ = 1;\n    for (int i = 1; i < n; i++) {\n        d[i] = d0;\n        d0 = dn;\n\
    \        dn = d[i] * xs[i];\n    }\n    return d;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n\
    \    long[] result = new long[(xs.length - 1)];\n    long x = 0;\n    long y =\
    \ 0;\n    for(int i = 0; i < xs.length; i++)\n    {\n        y = xs[i];\n    \
    \    result[i] = 1;\n        for(int j = i; j < xs.length; j++)\n        {\n \
    \           x += (j - i) * xs[j];\n            result[i] = result[i] * y;\n  \
    \      }\n    }\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[]\
    \ xs) \n{\n    double[] result = new double[(xs.length - 1)];\n    double x =\
    \ 0;\n    double y = 0;\n    for(int i = 0; i < xs.length; i++)\n    {\n     \
    \   y = xs[i];\n        result[i] = 1;\n        for(int j = i; j < xs.length;\
    \ j++)\n        {\n            x += (j - i) * xs[j];\n            result[i] =\
    \ result[i] * y;\n        }\n    }\n    return result;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[]\
    \ derivative(float[] xs) \n{\n    float[] result = new float[(xs.length - 1)];\n\
    \    float x = 0;\n    float y = 0;\n    for(int i = 0; i < xs.length; i++)\n\
    \    {\n        y = xs[i];\n        result[i] = 1;\n        for(int j = i; j <\
    \ xs.length; j++)\n        {\n            x += (j - i) * xs[j];\n            result[i]\
    \ = result[i] * y;\n        }\n    }\n    return result;\n}\n/*\n xs represent\
    \ coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n\
    \     Return derivative of this polynomial in the same form.\n    >>> derivative([3,\
    \ 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n\
    \    \n*/", "{\n    int n = xs.length;\n    long[] result = new long[n];\n   \
    \ long x = 0;\n    long y = 0;\n    for(int i = 0; i < n; i++){\n        x = xs[i];\n\
    \        y = x * x;\n        result[i] = y;\n    }\n    return result;\n}\n/*\n\
    \ xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] *\
    \ x^2 + ....\n     Return derivative of this polynomial in the same form.\n  \
    \  >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[] xs) \n{\n    int\
    \ n = xs.length;\n    double[] result = new double[n];\n    double x = 0;\n  \
    \  double y = 0;\n    for(int i = 0; i < n; i++){\n        x = xs[i];\n      \
    \  y = x * x;\n        result[i] = y;\n    }\n    return result;\n}\n/*\n xs represent\
    \ coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n\
    \     Return derivative of this polynomial in the same form.\n    >>> derivative([3,\
    \ 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n\
    \    \n*/\nfloat[] derivative(float[] xs) \n{\n    int n = xs.length;\n    float[]\
    \ result = new float[n];\n    float x = 0;\n    float y = 0;\n    for(int i =\
    \ 0; i < n; i++){\n        x = xs[i];\n        y = x * x;\n        result[i] =\
    \ y;\n    }\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n    long[] result =\
    \ new long[xs.length + 1];\n    long x = 0;\n    long y = 0;\n    for(int i =\
    \ 0; i < xs.length; i++) \n    {\n        y = xs[i] * x;\n        result[i] =\
    \ y;\n        x = y;\n    }\n    result[xs.length] = x;\n    return result;\n}",
  "{\n    long[] result = new long[xs.length + 1];\n    long x = 0;\n    for(int i\
    \ = 0; i < xs.length; i++){\n        result[i] = xs[i];\n        x += xs[i];\n\
    \    }\n    result[xs.length] = 1;\n    for(int i = xs.length - 1; i >= 0; i--){\n\
    \        result[i] = result[i] * x;\n        x -= xs[i];\n    }\n    return result;\n\
    }\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[] xs) \n{\n    double[]\
    \ result = new double[xs.length + 1];\n    double x = 0;\n    for(int i = 0; i\
    \ < xs.length; i++){\n        result[i] = xs[i];\n        x += xs[i];\n    }\n\
    \    result[xs.length] = 1;\n    for(int i = xs.length - 1; i >= 0; i--){\n  \
    \      result[i] = result[i] * x;\n        x -= xs[i];\n    }\n    return result;\n\
    }\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[] xs) \n{\n    float[]\
    \ result = new float[xs.length + 1];\n    float x = 0;\n    for(int i = 0; i <\
    \ xs.length; i++){\n        result[i] = xs[i];\n        x += xs[i];\n    }\n \
    \   result[xs.length] = 1;\n    for(int i = xs.length - 1; i >= 0; i--){\n   \
    \     result[i] = result[i] * x;\n        x -= xs[i];\n    }\n    return result;\n\
    }\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/", "{\n    int n = xs.length;\n    long[] result\
    \ = new long[n];\n    long a = xs[0];\n    long b = xs[1];\n    long c = xs[2];\n\
    \    long d = xs[3];\n    long e = xs[4];\n    long f = xs[5];\n    long g = xs[6];\n\
    \    long h = xs[7];\n    long i = xs[8];\n    long j = xs[9];\n    long k = xs[10];\n\
    \    long l = xs[11];\n    long m = xs[12];\n    long n = xs[13];\n    long o\
    \ = xs[14];\n    long p = xs[15];\n    long q = xs[16];\n    long r = xs[17];\n\
    \    long s = xs[18];\n    long t = xs[19];\n    long u = xs[20];\n    long v\
    \ = xs[21];\n    long w = xs[22];\n    long x = xs[23];\n    long y = xs[24];\n\
    \    long z = xs[25];\n    long a = xs[26];\n    long b = xs[27];\n    long c\
    \ = xs[28];\n    long d = xs[29];\n    long e = xs[30];\n    long f = xs[31];\n\
    \    long g = xs[32];\n    long h = xs[33];\n    long i = xs[34];\n    long j\
    \ = xs[35];\n    long k = xs[36];\n    long l = xs[37];\n    long m = xs[38];\n\
    \    long n = xs[39];\n    long o = xs[40];\n    long p = xs[41];\n    long q\
    \ = xs[42];\n    long r = xs[43];\n    long s = xs[44];\n    long t = xs[45];\n\
    \    long u = xs[46];\n    long v = xs[47];\n    long w = xs[48];\n    long x\
    \ = xs[49];\n    long y = xs[50];\n    long z = xs[51];\n    long a = xs[52];\n\
    \    long b = xs[53];\n    long c = xs[54];\n    long d = xs[55];\n    long e\
    \ = xs[56];\n    long f = xs[57];\n    long g = xs[58];\n    long h = xs[59];\n\
    \    long i = xs[60];\n    long j = xs[61];\n    long k = ", "{\n    int n = xs.length;\n\
    \    long[] d = new long[n];\n    long x = 0;\n    for(int i = 0; i < n; i++)\
    \ {\n        d[i] = 1;\n        for(int j = 0; j < n; j++) {\n            x +=\
    \ xs[j] * d[j];\n        }\n    }\n    return d;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[]\
    \ derivative(double[] xs) \n{\n    int n = xs.length;\n    double[] d = new double[n];\n\
    \    double x = 0;\n    for(int i = 0; i < n; i++) {\n        d[i] = 1;\n    \
    \    for(int j = 0; j < n; j++) {\n            x += xs[j] * d[j];\n        }\n\
    \    }\n    return d;\n}\n/*\n xs represent coefficients of a polynomial.\n  \
    \  xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[]\
    \ xs) \n{\n    int n = xs.length;\n    float[] d = new float[n];\n    float x\
    \ = 0;\n    for(int i = 0; i < n; i++) {\n        d[i] = 1;\n        for(int j\
    \ = 0; j < n; j++) {\n            x += xs[j] * d[j];\n        }\n    }\n    return\
    \ d;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/", "{\n    long n = xs.length;\n    long[] ys =\
    \ new long[n];\n    long k = 0;\n    for(int i = 0; i < n; ++i)\n    {\n     \
    \   long x = xs[i];\n        long y = 1;\n        for(int j = i; j < n; ++j)\n\
    \        {\n            y += xs[j] * ys[j];\n        }\n        ys[k] = y;\n \
    \       ++k;\n    }\n    return ys;\n}\n</code>\n<|/ a tags=c++,algorithm |>\n\
    <| c |>\nThis is not the correct answer to the question. He wants to find the\
    \ derivative of a polynomial given its coefficients.\n<|/ c |>\n<| c |>\nThe question\
    \ was \"how do I find the derivative of a polynomial given its coefficients?\"\
    \ The answer was \"use the derivative function\". The code I posted is just a\
    \ demonstration of how to find the derivative of a polynomial given its coefficients.\n\
    <|/ c |>\n<| c |>\nThe question was \"how do I find the derivative of a polynomial\
    \ given its coefficients?\" The answer was \"use the derivative function\". The\
    \ code I posted is just a demonstration of how to find the derivative of a polynomial\
    \ given its coefficients.\n<|/ c |>\n<| c |>\nThe question was \"how do I find\
    \ the derivative of a polynomial given its coefficients?\" The answer was \"use\
    \ the derivative function\". The code I posted is just a demonstration of how\
    \ to find the derivative of a polynomial given its coefficients.\n<|/ c |>\n<|\
    \ c |>\nThe question was \"how do I find the derivative of a polynomial given\
    \ its coefficients?\" The answer was \"use the derivative function\". The code\
    \ I posted is just a demonstration of how to find the derivative of a polynomial\
    \ given its coefficients.\n<|/ c |>\n<| a tags=c++,algorithm |>\nI wrote a program\
    \ to find the derivative of a polynomial given its coefficients. I used the derivative\
    \ function from my previous answer to this question. \n<code>\n#include <iostream>\n\
    #include <vector>\n#include <cmath>\n#include <algorithm>\nusing namespace std;",
  "{\n    long[] result = new long[xs.length + 1];\n    for(int i = 0; i < xs.length;\
    \ i++)\n        result[i] = xs[i + 1];\n    result[xs.length] = 1;\n    return\
    \ result;\n}", "{\n    long[] result = new long[xs.length + 1];\n    long x =\
    \ 1;\n    for(int i = 0; i < xs.length; i++)\n    {\n        result[i] = xs[i]\
    \ - x;\n        x *= xs[i];\n    }\n    result[xs.length] = 1;\n    return result;\n\
    }\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[] xs) \n{\n    double[]\
    \ result = new double[xs.length + 1];\n    double x = 1;\n    for(int i = 0; i\
    \ < xs.length; i++)\n    {\n        result[i] = xs[i] - x;\n        x *= xs[i];\n\
    \    }\n    result[xs.length] = 1;\n    return result;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[]\
    \ derivative(float[] xs) \n{\n    float[] result = new float[xs.length + 1];\n\
    \    float x = 1;\n    for(int i = 0; i < xs.length; i++)\n    {\n        result[i]\
    \ = xs[i] - x;\n        x *= xs[i];\n    }\n    result[xs.length] = 1;\n    return\
    \ result;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/", "{\n    int n = xs.length;\n    long[] result\
    \ = new long[n];\n    long x = 0;\n    for(int i = 0; i < n; i++) {\n        x\
    \ = xs[i];\n        result[i] = 1;\n        for(int j = 1; j < n; j++) {\n   \
    \         result[i] += xs[j] * result[j - 1];\n        }\n    }\n    return result;\n\
    }\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[] xs) \n{\n    int\
    \ n = xs.length;\n    double[] result = new double[n];\n    double x = 0;\n  \
    \  for(int i = 0; i < n; i++) {\n        x = xs[i];\n        result[i] = 1;\n\
    \        for(int j = 1; j < n; j++) {\n            result[i] += xs[j] * result[j\
    \ - 1];\n        }\n    }\n    return result;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[]\
    \ derivative(float[] xs) \n{\n    int n = xs.length;\n    float[] result = new\
    \ float[n];\n    float x = 0;\n    for(int i = 0; i < n; i++) {\n        x = xs[i];\n\
    \        result[i] = 1;\n        for(int j = 1; j < n; j++) {\n            result[i]\
    \ += xs[j] * result[j - 1];\n        }\n    }\n    return result;\n}\n/*\n xs\
    \ represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2\
    \ + ....\n     Return derivative of this polynomial in the same form.\n    >>>\
    \ derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n\
    \    [2, 6]\n    \n*/", "{\n    long[] result = new long[(xs.length - 1)];\n \
    \   for(int i = 0; i < xs.length - 1; i++)\n        result[i] = xs[i + 1] - xs[i];\n\
    \    return result;\n}", "{\n    long[] result = new long[xs.length + 1];\n  \
    \  long sum = 0;\n    for (int i = 0; i < xs.length; i++)\n    {\n        sum\
    \ += xs[i];\n        result[i] = sum;\n    }\n    result[xs.length] = 1;\n   \
    \ return result;\n}\n</code>\n<|/ a |>\n<| c |>\nThe `derivative` function does\
    \ not work as intended. `derivative([3, 1, 2, 4, 5])` returns `[1, 4, 12, 20]`\
    \ instead of `[1, 4, 12, 20]`.\n<|/ c |>\n<| c |>\nI fixed the bug. Thanks for\
    \ pointing it out.\n<|/ c |>\n<| a tags=java,polynomial-math,math |>\n<code>\n\
    public class Polynomial {\n    private int[] coefficients;\n    private int degree;",
  "{\n    long x = 0;\n    long y = 0;\n    long z = 0;\n    long d = 0;\n    long\
    \ result = 0;\n    for(int i = 0; i < xs.length; i++)\n    {\n        y = xs[i];\n\
    \        z = i;\n        d = 1;\n        while(y != 0)\n        {\n          \
    \  d *= z;\n            y /= z;\n            z--;\n        }\n        result +=\
    \ d;\n    }\n    long[] result = new long[result.intValue()];\n    for(int i =\
    \ 0; i < result.length; i++)\n    {\n        result[i] = result.intValue() * i;\n\
    \    }\n    return result;\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThis code\
    \ doesn't work. `derivative([1, 2, 3])` returns `[4, 3, 0]` instead of `[4, 6,\
    \ 3]`.\n<|/ c |>\n<| c |>\nI fixed the bug. Thanks for pointing it out.\n<|/ c\
    \ |>\n<| a tags=math,algorithm,java |>\n<code>\npublic static void main(String[]\
    \ args) {\n    int[] a = {1, 2, 3, 4, 5};\n    int[] b = {1, 2, 3, 4, 5};\n  \
    \  int[] c = {1, 2, 3, 4, 5};\n    int[] d = {1, 2, 3, 4, 5};\n    int[] e = {1,\
    \ 2, 3, 4, 5};\n    int[] f = {1, 2, 3, 4, 5};\n    int[] g = {1, 2, 3, 4, 5};\n\
    \    int[] h = {1, 2, 3, 4, 5};\n    int[] i = {1, 2, 3, 4, 5};\n    int[] j =\
    \ {1, 2, 3, 4, 5};\n    int[] k = {1, 2, 3, 4, 5};\n    int[] l = {1, 2, 3, 4,\
    \ 5};\n    int[] m = {1, 2, 3, 4, 5};\n    int[] n = {1, 2, 3, 4, 5};\n    int[]\
    \ o = {1, 2, 3, 4, 5};\n    int[] p = {1, 2, 3, 4, 5};\n    int[] q = {1, 2, 3,\
    \ 4, 5};\n    int[] r = {1, 2, 3, 4, 5};\n    int[] s = {1, 2, 3, 4, 5};\n   \
    \ int[] t = {1, 2, 3, 4, 5};\n    int[] u = {1, 2, 3, 4, 5};\n    int[] v = {1,\
    \ 2, 3, 4, 5};\n    int[] w = {1, 2, 3, 4, 5};\n    int[] x = {1, 2, 3, 4, 5};\n\
    \    int[] y = {1, 2, 3, 4, 5};\n    int[] z = {1, 2, 3, 4, 5};\n    int[] a1\
    \ = {1, 2, 3, 4, 5};\n    int[] b1 = {1, 2, 3, 4, 5};\n    int[] c1 = {1, 2, 3,\
    \ 4, 5};\n    int[] d1 = {1, 2, 3, 4, 5};\n    int[] e1 = {1, 2, 3, 4, 5};\n \
    \   int[] ", "{\n    int n = xs.length;\n    long[] ds = new long[n];\n    long\
    \ d = 0;\n    for (int i = 0; i < n; i++)\n    {\n        ds[i] = 1;\n       \
    \ d += xs[i];\n        for (int j = i; j < n; j++)\n        {\n            ds[i]\
    \ *= xs[j];\n            d += xs[j];\n        }\n    }\n    return ds;\n}\n/*\n\
    \ xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] *\
    \ x^2 + ....\n     Return derivative of this polynomial in the same form.\n  \
    \  >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[] xs) \n{\n    int\
    \ n = xs.length;\n    double[] ds = new double[n];\n    double d = 0;\n    for\
    \ (int i = 0; i < n; i++)\n    {\n        ds[i] = 1;\n        d += xs[i];\n  \
    \      for (int j = i; j < n; j++)\n        {\n            ds[i] *= xs[j];\n \
    \           d += xs[j];\n        }\n    }\n    return ds;\n}\n/*\n xs represent\
    \ coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n\
    \     Return derivative of this polynomial in the same form.\n    >>> derivative([3,\
    \ 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n\
    \    \n*/\nfloat[] derivative(float[] xs) \n{\n    int n = xs.length;\n    float[]\
    \ ds = new float[n];\n    float d = 0;\n    for (int i = 0; i < n; i++)\n    {\n\
    \        ds[i] = 1;\n        d += xs[i];\n        for (int j = i; j < n; j++)\n\
    \        {\n            ds[i] *= xs[j];\n            d += xs[j];\n        }\n\
    \    }\n    return ds;\n}\n/*\n xs represent coefficients of a polynomial.\n \
    \   xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n    long[] result =\
    \ new long[(xs.length + 1)];\n    long x = 1;\n    long xx = 1;\n    long xxx\
    \ = 1;\n    long xxxxx = 1;\n    long xxxx = 1;\n    long xxxxx = 1;\n    long\
    \ xxxxxxx = 1;\n    long xxxxxxx = 1;\n    long xxxxxxxx = 1;\n    long xxxxxxxxx\
    \ = 1;\n    long xxxxxxxxxx = 1;\n    long xxxxxxxxxxx = 1;\n    long xxxxxxxxxxxx\
    \ = 1;\n    long xxxxxxxxxxxxx = 1;\n    long xxxxxxxxxxxxxx = 1;\n    long xxxxxxxxxxxxxxx\
    \ = 1;\n    long xxxxxxxxxxxxxxxx = 1;\n    long xxxxxxxxxxxxxxxxx = 1;\n    long\
    \ xxxxxxxxxxxxxxxxxx = 1;\n    long xxxxxxxxxxxxxxxxxxx = 1;\n    long xxxxxxxxxxxxxxxxxxxx\
    \ = 1;\n    long xxxxxxxxxxxxxxxxxxxxx = 1;\n    long xxxxxxxxxxxxxxxxxxxxxx =\
    \ 1;\n    long xxxxxxxxxxxxxxxxxxxxxxx = 1;\n    long xxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 1;\n    long xxxxxxxxxxxxxxxxxxxxxxxxx = 1;\n    long xxxxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 1;\n    long xxxxxxxxxxxxxxxxxxxxxxxxxxx = 1;\n    long xxxxxxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 1;\n    long xxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 1;\n    long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 1;\n    long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 1;\n    long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 1;\n    long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 1;\n    long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 1;\n    long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 1;\n    long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 1;\n    long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 1;\n    long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 1;\n    long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 1;\n    long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 1;\n    long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 1;\n    long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 1;\n    long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 1;\n    long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 1;\n    long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 1;\n    long ",
  "{\n    int n = xs.length;\n    long[] result = new long[n];\n    for(int i = 0;\
    \ i < n; i++)\n    {\n        result[i] = xs[i+1] - xs[i];\n    }\n    return\
    \ result;\n}", "{\n    long[] result = new long[(xs.length - 1)];\n    long x\
    \ = 0;\n    long y = 0;\n    for(int i = 0; i < xs.length; i++)\n    {\n     \
    \   y = xs[i + 1];\n        result[i] = 1;\n        for(int j = i; j < xs.length;\
    \ j++)\n        {\n            x += xs[j];\n            result[i] = result[i]\
    \ * x / (j + 1);\n        }\n    }\n    return result;\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| c |>\nThanks for your answer. I tried your code, but I got this error\
    \ \"Exception in thread \"main\" java.lang.ArrayIndexOutOfBoundsException: -1\"\
    \ at line \"result[i] = result[i] * x / (j + 1);\"\n<|/ c |>\n<| c |>\nI edited\
    \ my answer, I forgot to add one line in the for loop. Now it should work.\n<|/\
    \ c |>\n<| c |>\nThanks for your answer. I tried your code, but I got this error\
    \ \"Exception in thread \"main\" java.lang.ArrayIndexOutOfBoundsException: -1\"\
    \ at line \"result[i] = result[i] * x / (j + 1);\"\n<|/ c |>\n<| c |>\nI edited\
    \ my answer, I forgot to add one line in the for loop. Now it should work.\n<|/\
    \ c |>\n<| c |>\nThanks for your answer. I tried your code, but I got this error\
    \ \"Exception in thread \"main\" java.lang.ArrayIndexOutOfBoundsException: -1\"\
    \ at line \"result[i] = result[i] * x / (j + 1);\"\n<|/ c |>\n<| a dscore=1 |>\n\
    I wrote a Java program to solve this problem. Hope it helps.\n<code>\nimport java.util.ArrayList;\n\
    import java.util.Arrays;\nimport java.util.List;", "{\n    int n = xs.length;\n\
    \    long[] result = new long[n];\n    for(int i = 0; i < n; i++)\n    {\n   \
    \     result[i] = xs[i+1] - xs[i];\n    }\n    return result;\n}\n/*\n xs represent\
    \ coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n\
    \     Return derivative of this polynomial in the same form.\n    >>> derivative([3,\
    \ 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n\
    \    \n*/\ndouble[] derivative(double[] xs) \n{\n    int n = xs.length;\n    double[]\
    \ result = new double[n];\n    for(int i = 0; i < n; i++)\n    {\n        result[i]\
    \ = xs[i+1] - xs[i];\n    }\n    return result;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[]\
    \ derivative(float[] xs) \n{\n    int n = xs.length;\n    float[] result = new\
    \ float[n];\n    for(int i = 0; i < n; i++)\n    {\n        result[i] = xs[i+1]\
    \ - xs[i];\n    }\n    return result;\n}\n/*\n xs represent coefficients of a\
    \ polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n\
    \    long result = 0;\n    for(int i = 0; i < xs.length; i++)\n    {\n       \
    \ result *= xs[i];\n        result += 1;\n    }\n    long[] result = new long[result];\n\
    \    for(int i = 0; i < xs.length; i++)\n    {\n        result[i] = xs[i] - 1;\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=java,math |>\n<| c |>\nI like\
    \ your answer, but I think it would be better to explain why this works.\n<|/\
    \ c |>\n<| c |>\nI added some explanation.\n<|/ c |>\n<| c |>\nI like your answer,\
    \ but I think it would be better to explain why this works.\n<|/ c |>\n<| c |>\n\
    I added some explanation.\n<|/ c |>\n<| a tags=java,math |>\n<code>\nimport java.util.Scanner;",
  "{\n    long[] result = new long[(xs.length + 1)];\n    long x = 1;\n    for (int\
    \ i = 0; i < xs.length; i++)\n    {\n        result[i] = xs[i] - x;\n        x\
    \ = xs[i] * x;\n    }\n    result[xs.length] = 1;\n    return result;\n}\n/*\n\
    \ xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] *\
    \ x^2 + ....\n     Return derivative of this polynomial in the same form.\n  \
    \  >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[] xs) \n{\n    double[]\
    \ result = new double[(xs.length + 1)];\n    double x = 1;\n    for (int i = 0;\
    \ i < xs.length; i++)\n    {\n        result[i] = xs[i] - x;\n        x = xs[i]\
    \ * x;\n    }\n    result[xs.length] = 1;\n    return result;\n}\n/*\n xs represent\
    \ coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n\
    \     Return derivative of this polynomial in the same form.\n    >>> derivative([3,\
    \ 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n\
    \    \n*/\nfloat[] derivative(float[] xs) \n{\n    float[] result = new float[(xs.length\
    \ + 1)];\n    float x = 1;\n    for (int i = 0; i < xs.length; i++)\n    {\n \
    \       result[i] = xs[i] - x;\n        x = xs[i] * x;\n    }\n    result[xs.length]\
    \ = 1;\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n    int n = xs.length;\n\
    \    long[] result = new long[n];\n    for(int i = 0; i < n; ++i)\n    {\n   \
    \     result[i] = xs[i + 1];\n    }\n    result[n-1] = 1;\n    return result;\n\
    }\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[] xs) \n{\n    int\
    \ n = xs.length;\n    double[] result = new double[n];\n    for(int i = 0; i <\
    \ n; ++i)\n    {\n        result[i] = xs[i + 1];\n    }\n    result[n-1] = 1;\n\
    \    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[]\
    \ xs) \n{\n    int n = xs.length;\n    float[] result = new float[n];\n    for(int\
    \ i = 0; i < n; ++i)\n    {\n        result[i] = xs[i + 1];\n    }\n    result[n-1]\
    \ = 1;\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n    long[] result =\
    \ new long[xs.length];\n    for(int i = 0; i < xs.length; i++)\n    {\n      \
    \  result[i] = xs[i + 1];\n    }\n    return result;\n}", "{\n    long[] result\
    \ = new long[(xs.length - 1)];\n    long x = 1;\n    for (int i = 0; i < xs.length;\
    \ i++)\n    {\n        result[i] = xs[i];\n        x += (long)xs[i];\n    }\n\
    \    result[xs.length - 1] = 1;\n    return result;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[]\
    \ derivative(double[] xs) \n{\n    double[] result = new double[(xs.length - 1)];\n\
    \    double x = 1;\n    for (int i = 0; i < xs.length; i++)\n    {\n        result[i]\
    \ = xs[i];\n        x += (double)xs[i];\n    }\n    result[xs.length - 1] = 1;\n\
    \    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[]\
    \ xs) \n{\n    float[] result = new float[(xs.length - 1)];\n    float x = 1;\n\
    \    for (int i = 0; i < xs.length; i++)\n    {\n        result[i] = xs[i];\n\
    \        x += (float)xs[i];\n    }\n    result[xs.length - 1] = 1;\n    return\
    \ result;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/", "{\n    long[] result = new long[xs.length];\n\
    \    for(int i = 0; i < xs.length; i++)\n        result[i] = xs[i + 1] - xs[i];\n\
    \    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[]\
    \ xs) \n{\n    double[] result = new double[xs.length];\n    for(int i = 0; i\
    \ < xs.length; i++)\n        result[i] = xs[i + 1] - xs[i];\n    return result;\n\
    }\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[] xs) \n{\n    float[]\
    \ result = new float[xs.length];\n    for(int i = 0; i < xs.length; i++)\n   \
    \     result[i] = xs[i + 1] - xs[i];\n    return result;\n}\n/*\n xs represent\
    \ coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n\
    \     Return derivative of this polynomial in the same form.\n    >>> derivative([3,\
    \ 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n\
    \    \n*/", "{\n    int n = xs.length;\n    long[] result = new long[n];\n   \
    \ for (int i = 0; i < n; i++)\n    {\n        result[i] = xs[i + 1];\n    }\n\
    \    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[]\
    \ xs) \n{\n    int n = xs.length;\n    double[] result = new double[n];\n    for\
    \ (int i = 0; i < n; i++)\n    {\n        result[i] = xs[i + 1];\n    }\n    return\
    \ result;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[] xs) \n{\n    int n\
    \ = xs.length;\n    float[] result = new float[n];\n    for (int i = 0; i < n;\
    \ i++)\n    {\n        result[i] = xs[i + 1];\n    }\n    return result;\n}\n\
    /*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/", "{\n    long result = 0;\n    for(int i = 0;\
    \ i < xs.length; i++)\n    {\n        result *= xs[i];\n        result += 1;\n\
    \    }\n    long[] result = new long[result];\n    for(int i = 0; i < xs.length;\
    \ i++)\n    {\n        result[i] = xs[i] - 1;\n    }\n    return result;\n}\n\
    /*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[] xs) \n{\n    double\
    \ result = 0;\n    for(int i = 0; i < xs.length; i++)\n    {\n        result *=\
    \ xs[i];\n        result += 1;\n    }\n    double[] result = new double[result];\n\
    \    for(int i = 0; i < xs.length; i++)\n    {\n        result[i] = xs[i] - 1;\n\
    \    }\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[]\
    \ xs) \n{\n    float result = 0;\n    for(int i = 0; i < xs.length; i++)\n   \
    \ {\n        result *= xs[i];\n        result += 1;\n    }\n    float[] result\
    \ = new float[result];\n    for(int i = 0; i < xs.length; i++)\n    {\n      \
    \  result[i] = xs[i] - 1;\n    }\n    return result;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n\
    \    int n = xs.length;\n    long[] ys = new long[n];\n    for(int i = 0; i <\
    \ n; i++)\n    {\n        ys[i] = 1;\n        for(int j = i; j < n; j++)\n   \
    \     {\n            ys[i] *= xs[j];\n        }\n    }\n    return ys;\n}", "{\n\
    \    long[] result = new long[(xs.length + 1)];\n    long x = 1;\n    long y =\
    \ 1;\n    for(int i = 0; i < xs.length; i++)\n    {\n        result[i] = y;\n\
    \        y += xs[i] * x;\n        x *= xs[i];\n    }\n    result[xs.length] =\
    \ y;\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[]\
    \ xs) \n{\n    double[] result = new double[(xs.length + 1)];\n    double x =\
    \ 1;\n    double y = 1;\n    for(int i = 0; i < xs.length; i++)\n    {\n     \
    \   result[i] = y;\n        y += xs[i] * x;\n        x *= xs[i];\n    }\n    result[xs.length]\
    \ = y;\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[]\
    \ xs) \n{\n    float[] result = new float[(xs.length + 1)];\n    float x = 1;\n\
    \    float y = 1;\n    for(int i = 0; i < xs.length; i++)\n    {\n        result[i]\
    \ = y;\n        y += xs[i] * x;\n        x *= xs[i];\n    }\n    result[xs.length]\
    \ = y;\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n    long[] result =\
    \ new long[xs.length + 1];\n    for(int i = 0; i <= xs.length; i++)\n    {\n \
    \       result[i] = xs[i + 1];\n    }\n    result[xs.length] = 1;\n    return\
    \ result;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[] xs) \n{\n    double[]\
    \ result = new double[xs.length + 1];\n    for(int i = 0; i <= xs.length; i++)\n\
    \    {\n        result[i] = xs[i + 1];\n    }\n    result[xs.length] = 1;\n  \
    \  return result;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[]\
    \ xs) \n{\n    float[] result = new float[xs.length + 1];\n    for(int i = 0;\
    \ i <= xs.length; i++)\n    {\n        result[i] = xs[i + 1];\n    }\n    result[xs.length]\
    \ = 1;\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n    int n = xs.length;\n\
    \    long[] result = new long[n];\n    for(int i = 0; i < n; i++) {\n        result[i]\
    \ = xs[i + 1];\n    }\n    return result;\n}", "{\n    long[] result = new long[xs.length\
    \ + 1];\n    long x = 0;\n    long y = 0;\n    for(int i = 0; i < xs.length; i++)\n\
    \    {\n        y = xs[i];\n        result[i] = 1;\n        for(int j = 0; j <\
    \ i; j++)\n        {\n            y += xs[j] * result[j];\n        }\n       \
    \ result[i] = y;\n    }\n    result[xs.length] = 1;\n    return result;\n}\n/*\n\
    \ xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] *\
    \ x^2 + ....\n     Return derivative of this polynomial in the same form.\n  \
    \  >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[] xs) \n{\n    double[]\
    \ result = new double[xs.length + 1];\n    double x = 0;\n    double y = 0;\n\
    \    for(int i = 0; i < xs.length; i++)\n    {\n        y = xs[i];\n        result[i]\
    \ = 1;\n        for(int j = 0; j < i; j++)\n        {\n            y += xs[j]\
    \ * result[j];\n        }\n        result[i] = y;\n    }\n    result[xs.length]\
    \ = 1;\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[]\
    \ xs) \n{\n    float[] result = new float[xs.length + 1];\n    float x = 0;\n\
    \    float y = 0;\n    for(int i = 0; i < xs.length; i++)\n    {\n        y =\
    \ xs[i];\n        result[i] = 1;\n        for(int j = 0; j < i; j++)\n       \
    \ {\n            y += xs[j] * result[j];\n        }\n        result[i] = y;\n\
    \    }\n    result[xs.length] = 1;\n    return result;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n\
    \    int n = xs.length;\n    long[] ys = new long[n];\n    long x = 0;\n    long\
    \ y = 0;\n    for(int i = 0; i < n; i++)\n    {\n        x = xs[i];\n        y\
    \ = x * y;\n        ys[i] = y;\n    }\n    return ys;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[]\
    \ derivative(double[] xs) \n{\n    int n = xs.length;\n    double[] ys = new double[n];\n\
    \    double x = 0;\n    double y = 0;\n    for(int i = 0; i < n; i++)\n    {\n\
    \        x = xs[i];\n        y = x * y;\n        ys[i] = y;\n    }\n    return\
    \ ys;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[] xs) \n{\n    int n\
    \ = xs.length;\n    float[] ys = new float[n];\n    float x = 0;\n    float y\
    \ = 0;\n    for(int i = 0; i < n; i++)\n    {\n        x = xs[i];\n        y =\
    \ x * y;\n        ys[i] = y;\n    }\n    return ys;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n\
    \    long[] result = new long[xs.length + 1];\n    result[0] = 1;\n    for (int\
    \ i = 1; i < xs.length; i++)\n        result[i] = result[i-1] * xs[i];\n    return\
    \ result;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[] xs) \n{\n    double[]\
    \ result = new double[xs.length + 1];\n    result[0] = 1;\n    for (int i = 1;\
    \ i < xs.length; i++)\n        result[i] = result[i-1] * xs[i];\n    return result;\n\
    }\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[] xs) \n{\n    float[]\
    \ result = new float[xs.length + 1];\n    result[0] = 1;\n    for (int i = 1;\
    \ i < xs.length; i++)\n        result[i] = result[i-1] * xs[i];\n    return result;\n\
    }\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/", "{\n    long[] result = new long[(xs.length -\
    \ 1)];\n    long x = 0;\n    for(int i = 1; i < xs.length; i++)\n    {\n     \
    \   x = x * xs[i] - xs[i - 1];\n        result[i - 1] += x;\n    }\n    return\
    \ result;\n}\n</code>\n<|/ a dscore=0 |>\n<| a |>\n<code>\nimport java.util.ArrayList;\n\
    import java.util.List;", "{\n    long[] result = new long[xs.length + 1];\n  \
    \  long x = 1;\n    for (int i = 0; i <= xs.length; i++)\n    {\n        result[i]\
    \ = xs[i] - x;\n        x = result[i];\n    }\n    return result;\n}\n/*\n xs\
    \ represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2\
    \ + ....\n     Return derivative of this polynomial in the same form.\n    >>>\
    \ derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n\
    \    [2, 6]\n    \n*/\ndouble[] derivative(double[] xs) \n{\n    double[] result\
    \ = new double[xs.length + 1];\n    double x = 1;\n    for (int i = 0; i <= xs.length;\
    \ i++)\n    {\n        result[i] = xs[i] - x;\n        x = result[i];\n    }\n\
    \    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[]\
    \ xs) \n{\n    float[] result = new float[xs.length + 1];\n    float x = 1;\n\
    \    for (int i = 0; i <= xs.length; i++)\n    {\n        result[i] = xs[i] -\
    \ x;\n        x = result[i];\n    }\n    return result;\n}\n/*\n xs represent\
    \ coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n\
    \     Return derivative of this polynomial in the same form.\n    >>> derivative([3,\
    \ 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n\
    \    \n*/", "{\n    int n = xs.length;\n    long[] result = new long[n];\n   \
    \ for(int i = 0; i < n; ++i) {\n        result[i] = xs[i + 1] - xs[i];\n    }\n\
    \    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[]\
    \ xs) \n{\n    int n = xs.length;\n    double[] result = new double[n];\n    for(int\
    \ i = 0; i < n; ++i) {\n        result[i] = xs[i + 1] - xs[i];\n    }\n    return\
    \ result;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[] xs) \n{\n    int n\
    \ = xs.length;\n    float[] result = new float[n];\n    for(int i = 0; i < n;\
    \ ++i) {\n        result[i] = xs[i + 1] - xs[i];\n    }\n    return result;\n\
    }\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/", "{\n    int n = xs.length;\n    long[] ys = new\
    \ long[n];\n    for(int i = 0; i < n; i++)\n    {\n        ys[i] = xs[i+1];\n\
    \    }\n    return ys;\n}", "{\n    int n = xs.length;\n    long[] result = new\
    \ long[n];\n    for(int i = 0; i < n; i++)\n        result[i] = xs[i + 1];\n \
    \   for(int i = n - 2; i >= 0; i--)\n        result[i] = result[i + 1];\n    return\
    \ result;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[] xs) \n{\n    int\
    \ n = xs.length;\n    double[] result = new double[n];\n    for(int i = 0; i <\
    \ n; i++)\n        result[i] = xs[i + 1];\n    for(int i = n - 2; i >= 0; i--)\n\
    \        result[i] = result[i + 1];\n    return result;\n}\n/*\n xs represent\
    \ coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n\
    \     Return derivative of this polynomial in the same form.\n    >>> derivative([3,\
    \ 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n\
    \    \n*/\nfloat[] derivative(float[] xs) \n{\n    int n = xs.length;\n    float[]\
    \ result = new float[n];\n    for(int i = 0; i < n; i++)\n        result[i] =\
    \ xs[i + 1];\n    for(int i = n - 2; i >= 0; i--)\n        result[i] = result[i\
    \ + 1];\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n    int n = xs.length;\n\
    \    long[] result = new long[n];\n    for(int i = 0; i < n; i++) {\n        result[i]\
    \ = xs[i+1] - xs[i];\n    }\n    return result;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[]\
    \ derivative(double[] xs) \n{\n    int n = xs.length;\n    double[] result = new\
    \ double[n];\n    for(int i = 0; i < n; i++) {\n        result[i] = xs[i+1] -\
    \ xs[i];\n    }\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[]\
    \ xs) \n{\n    int n = xs.length;\n    float[] result = new float[n];\n    for(int\
    \ i = 0; i < n; i++) {\n        result[i] = xs[i+1] - xs[i];\n    }\n    return\
    \ result;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/", "{\n    long[] result = new long[xs.length];\n\
    \    for(int i = 0; i < xs.length; i++)\n    {\n        result[i] = xs[i + 1]\
    \ - xs[i];\n    }\n    return result;\n}\n/*\n xs represent coefficients of a\
    \ polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[]\
    \ derivative(double[] xs) \n{\n    double[] result = new double[xs.length];\n\
    \    for(int i = 0; i < xs.length; i++)\n    {\n        result[i] = xs[i + 1]\
    \ - xs[i];\n    }\n    return result;\n}\n/*\n xs represent coefficients of a\
    \ polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[]\
    \ derivative(float[] xs) \n{\n    float[] result = new float[xs.length];\n   \
    \ for(int i = 0; i < xs.length; i++)\n    {\n        result[i] = xs[i + 1] - xs[i];\n\
    \    }\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n    long[] result =\
    \ new long[xs.length + 1];\n    long x = 0;\n    for(int i = 0; i < xs.length;\
    \ i++) \n    {\n        result[i] = xs[i] - x;\n        x = xs[i];\n    }\n  \
    \  result[xs.length] = 1;\n    return result;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[]\
    \ derivative(double[] xs) \n{\n    double[] result = new double[xs.length + 1];\n\
    \    double x = 0;\n    for(int i = 0; i < xs.length; i++) \n    {\n        result[i]\
    \ = xs[i] - x;\n        x = xs[i];\n    }\n    result[xs.length] = 1;\n    return\
    \ result;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[] xs) \n{\n    float[]\
    \ result = new float[xs.length + 1];\n    float x = 0;\n    for(int i = 0; i <\
    \ xs.length; i++) \n    {\n        result[i] = xs[i] - x;\n        x = xs[i];\n\
    \    }\n    result[xs.length] = 1;\n    return result;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n\
    \    long result = 0;\n    for(int i = 0; i < xs.length; i++)\n    {\n       \
    \ result *= xs[i];\n        result += 1;\n    }\n    long[] result = new long[result];\n\
    \    for(int i = 0; i < xs.length; i++)\n    {\n        result[i] = xs[i] - 1;\n\
    \    }\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[]\
    \ xs) \n{\n    double result = 0;\n    for(int i = 0; i < xs.length; i++)\n  \
    \  {\n        result *= xs[i];\n        result += 1;\n    }\n    double[] result\
    \ = new double[result];\n    for(int i = 0; i < xs.length; i++)\n    {\n     \
    \   result[i] = xs[i] - 1;\n    }\n    return result;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[]\
    \ derivative(float[] xs) \n{\n    float result = 0;\n    for(int i = 0; i < xs.length;\
    \ i++)\n    {\n        result *= xs[i];\n        result += 1;\n    }\n    float[]\
    \ result = new float[result];\n    for(int i = 0; i < xs.length; i++)\n    {\n\
    \        result[i] = xs[i] - 1;\n    }\n    return result;\n}\n/*\n xs represent\
    \ coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n\
    \     Return derivative of this polynomial in the same form.\n    >>> derivative([3,\
    \ 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n\
    \    \n*/", "{\n    int n = xs.length;\n    long[] result = new long[n];\n   \
    \ for(int i = 0; i < n; ++i)\n        result[i] = xs[i+1] - xs[i] * xs[i] / i;\n\
    \    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[]\
    \ xs) \n{\n    int n = xs.length;\n    double[] result = new double[n];\n    for(int\
    \ i = 0; i < n; ++i)\n        result[i] = xs[i+1] - xs[i] * xs[i] / i;\n    return\
    \ result;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[] xs) \n{\n    int n\
    \ = xs.length;\n    float[] result = new float[n];\n    for(int i = 0; i < n;\
    \ ++i)\n        result[i] = xs[i+1] - xs[i] * xs[i] / i;\n    return result;\n\
    }\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/", "{\n    long[] result = new long[xs.length];\n\
    \    for(int i = 0; i < xs.length; i++)\n        result[i] = xs[i] - xs[i - 1];\n\
    \    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[]\
    \ xs) \n{\n    double[] result = new double[xs.length];\n    for(int i = 0; i\
    \ < xs.length; i++)\n        result[i] = xs[i] - xs[i - 1];\n    return result;\n\
    }\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[] xs) \n{\n    float[]\
    \ result = new float[xs.length];\n    for(int i = 0; i < xs.length; i++)\n   \
    \     result[i] = xs[i] - xs[i - 1];\n    return result;\n}\n/*\n xs represent\
    \ coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n\
    \     Return derivative of this polynomial in the same form.\n    >>> derivative([3,\
    \ 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n\
    \    \n*/", "{\n    long[] result = new long[xs.length + 1];\n    result[0] =\
    \ 1;\n    for (int i = 1; i < xs.length; i++)\n        result[i] = result[i-1]\
    \ * xs[i];\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[]\
    \ xs) \n{\n    double[] result = new double[xs.length + 1];\n    result[0] = 1;\n\
    \    for (int i = 1; i < xs.length; i++)\n        result[i] = result[i-1] * xs[i];\n\
    \    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[]\
    \ xs) \n{\n    float[] result = new float[xs.length + 1];\n    result[0] = 1;\n\
    \    for (int i = 1; i < xs.length; i++)\n        result[i] = result[i-1] * xs[i];\n\
    \    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n    int n = xs.length;\n\
    \    long[] result = new long[n];\n    for(int i = 0; i < n; ++i)\n        result[i]\
    \ = xs[i + 1] - xs[i];\n    return result;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[]\
    \ derivative(double[] xs) \n{\n    int n = xs.length;\n    double[] result = new\
    \ double[n];\n    for(int i = 0; i < n; ++i)\n        result[i] = xs[i + 1] -\
    \ xs[i];\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[]\
    \ xs) \n{\n    int n = xs.length;\n    float[] result = new float[n];\n    for(int\
    \ i = 0; i < n; ++i)\n        result[i] = xs[i + 1] - xs[i];\n    return result;\n\
    }\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/", "{\n    long result = 0;\n    for(int i = 0;\
    \ i < xs.length; i++)\n    {\n        result *= xs[i];\n        result -= xs[i+1];\n\
    \    }\n    long[] result = new long[result.intValue()];\n    for(int i = 0; i\
    \ < result.length; i++)\n    {\n        result[i] = result.intValue();\n    }\n\
    \    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[]\
    \ xs) \n{\n    double result = 0;\n    for(int i = 0; i < xs.length; i++)\n  \
    \  {\n        result *= xs[i];\n        result -= xs[i+1];\n    }\n    double[]\
    \ result = new double[result.intValue()];\n    for(int i = 0; i < result.length;\
    \ i++)\n    {\n        result[i] = result.intValue();\n    }\n    return result;\n\
    }\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[] xs) \n{\n    float\
    \ result = 0;\n    for(int i = 0; i < xs.length; i++)\n    {\n        result *=\
    \ xs[i];\n        result -= xs[i+1];\n    }\n    float[] result = new float[result.intValue()];\n\
    \    for(int i = 0; i < result.length; i++)\n    {\n        result[i] = result.intValue();\n\
    \    }\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n    long[] result =\
    \ new long[(xs.length - 1)];\n    for(int i = 0; i < result.length; i++)\n   \
    \     result[i] = xs[i + 1];\n    return result;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[]\
    \ derivative(double[] xs) \n{\n    double[] result = new double[(xs.length - 1)];\n\
    \    for(int i = 0; i < result.length; i++)\n        result[i] = xs[i + 1];\n\
    \    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[]\
    \ xs) \n{\n    float[] result = new float[(xs.length - 1)];\n    for(int i = 0;\
    \ i < result.length; i++)\n        result[i] = xs[i + 1];\n    return result;\n\
    }\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/", "{\n    long[] result = new long[xs.length +\
    \ 1];\n    long x = 0;\n    for(int i = 0; i < xs.length; i++)\n    {\n      \
    \  result[i] = xs[i] - x;\n        x = xs[i];\n    }\n    result[xs.length] =\
    \ 1;\n    return result;\n}\n</code>\n<|/ a tags=math,java,polynomial-math,algorithm\
    \ |>\n<| c |>\nThis is not correct. `derivative([1, 2, 3])` returns `[3, 6, 9]`\
    \ instead of `[1, 4, 12, 20]`.\n<|/ c |>\n<| c |>\nThanks for pointing that out.\
    \ I've corrected the answer.\n<|/ c |>\n<| a dscore=2 |>\n<code>\nimport java.util.ArrayList;\n\
    import java.util.List;", "{\n    int n = xs.length;\n    long[] result = new long[n];\n\
    \    for(int i = 0; i < n; i++)\n    {\n        result[i] = xs[i+1] - xs[i];\n\
    \    }\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[]\
    \ xs) \n{\n    int n = xs.length;\n    double[] result = new double[n];\n    for(int\
    \ i = 0; i < n; i++)\n    {\n        result[i] = xs[i+1] - xs[i];\n    }\n   \
    \ return result;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[]\
    \ xs) \n{\n    int n = xs.length;\n    float[] result = new float[n];\n    for(int\
    \ i = 0; i < n; i++)\n    {\n        result[i] = xs[i+1] - xs[i];\n    }\n   \
    \ return result;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n    long n = xs.length;\n\
    \    long[] ys = new long[n];\n    long i;\n    long j;\n    long k;\n    long\
    \ sum = 0;\n    for(i = 0; i < n; i++)\n    {\n        for(j = 0; j < n; j++)\n\
    \        {\n            if(i == j)\n                ys[i] = 0;\n            else\n\
    \                ys[i] = ys[i] + xs[i] * xs[j];\n        }\n    }\n    for(i =\
    \ 0; i < n; i++)\n    {\n        for(j = 0; j < n; j++)\n        {\n         \
    \   if(i == j)\n                ys[i] = 0;\n            else\n               \
    \ ys[i] = ys[i] + xs[i] * xs[j];\n        }\n    }\n    for(i = 0; i < n; i++)\n\
    \    {\n        for(j = 0; j < n; j++)\n        {\n            if(i == j)\n  \
    \              ys[i] = 0;\n            else\n                ys[i] = ys[i] + xs[i]\
    \ * xs[j];\n        }\n    }\n    for(i = 0; i < n; i++)\n    {\n        for(j\
    \ = 0; j < n; j++)\n        {\n            if(i == j)\n                ys[i] =\
    \ 0;\n            else\n                ys[i] = ys[i] + xs[i] * xs[j];\n     \
    \   }\n    }\n    for(i = 0; i < n; i++)\n    {\n        for(j = 0; j < n; j++)\n\
    \        {\n            if(i == j)\n                ys[i] = 0;\n            else\n\
    \                ys[i] = ys[i] + xs[i] * xs[j];\n        }\n    }\n    for(i =\
    \ 0; i < n; i++)\n    {\n        for(j = 0; j < n; j++)\n        {\n         \
    \   if(i == j)\n                ys[i] = 0;\n            else\n               \
    \ ys[i] = ys[i] + xs[i] * xs[j];\n        }\n    }\n    for(i = 0; i < n; i++)\n\
    \    {\n        for(j = 0; j < n; j++)\n        {\n            if(i == j)\n  \
    \              ys[i] = 0;\n            else\n                ys[i] = ys[i] + xs[i]\
    \ * xs[j];\n        }\n    }\n    for(i = 0; i < n; i++)\n    {\n        for(j\
    \ = 0; j < n; j++)\n        {\n            if(i == j)\n                ys[i] =\
    \ 0;\n            else\n                ys[i] = ys[i] + xs[i] * xs[j];\n     \
    \   }\n    }\n    for(i = 0; i < n; i++)\n    {\n        for(j = 0; j < n; j++)\n\
    \        {\n            if(i == j)\n                ys[i] = 0;\n            else\n\
    \                ys[i] = ys[i] + xs[i] * xs[j];\n        }\n    }\n    for(i =\
    \ 0; i < n; i++)\n    {\n        for(j = 0; j < n; j++)\n        {\n         \
    \   if(i == j)\n                ys[i] = 0;\n            else\n               \
    \ ys[i] = ys[i] + xs[i] * xs[j];\n        }\n    }\n    for(i = 0; i < n; i++)\n\
    \    {\n        for(j = 0; j < n; j++)\n        {\n", "{\n    int n = xs.length;\n\
    \    long[] result = new long[n];\n    for(int i = 0; i < n; ++i)\n        result[i]\
    \ = xs[i];\n    for(int i = n - 1; i >= 0; --i)\n        result[i] = result[i\
    \ + 1] * xs[i];\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[]\
    \ xs) \n{\n    int n = xs.length;\n    double[] result = new double[n];\n    for(int\
    \ i = 0; i < n; ++i)\n        result[i] = xs[i];\n    for(int i = n - 1; i >=\
    \ 0; --i)\n        result[i] = result[i + 1] * xs[i];\n    return result;\n}\n\
    /*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[] xs) \n{\n    int n\
    \ = xs.length;\n    float[] result = new float[n];\n    for(int i = 0; i < n;\
    \ ++i)\n        result[i] = xs[i];\n    for(int i = n - 1; i >= 0; --i)\n    \
    \    result[i] = result[i + 1] * xs[i];\n    return result;\n}\n/*\n xs represent\
    \ coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n\
    \     Return derivative of this polynomial in the same form.\n    >>> derivative([3,\
    \ 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n\
    \    \n*/", "{\n    long d = 1;\n    for(int i = 0; i < xs.length; i++)\n    {\n\
    \        d *= xs[i];\n    }\n    long[] result = new long[xs.length + 1];\n  \
    \  for(int i = 0; i < xs.length; i++)\n    {\n        result[i] = d;\n       \
    \ d *= xs[i];\n    }\n    result[xs.length] = 1;\n    return result;\n}\n/*\n\
    \ xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] *\
    \ x^2 + ....\n     Return derivative of this polynomial in the same form.\n  \
    \  >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[] xs) \n{\n    double\
    \ d = 1;\n    for(int i = 0; i < xs.length; i++)\n    {\n        d *= xs[i];\n\
    \    }\n    double[] result = new double[xs.length + 1];\n    for(int i = 0; i\
    \ < xs.length; i++)\n    {\n        result[i] = d;\n        d *= xs[i];\n    }\n\
    \    result[xs.length] = 1;\n    return result;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[]\
    \ derivative(float[] xs) \n{\n    float d = 1;\n    for(int i = 0; i < xs.length;\
    \ i++)\n    {\n        d *= xs[i];\n    }\n    float[] result = new float[xs.length\
    \ + 1];\n    for(int i = 0; i < xs.length; i++)\n    {\n        result[i] = d;\n\
    \        d *= xs[i];\n    }\n    result[xs.length] = 1;\n    return result;\n\
    }\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/", "{\n    int n = xs.length;\n    long[] result\
    \ = new long[n];\n    long sum = 0;\n    for (int i = 0; i < n; ++i)\n    {\n\
    \        sum += xs[i];\n        result[i] = sum;\n    }\n    return result;\n\
    }\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[] xs) \n{\n    int\
    \ n = xs.length;\n    double[] result = new double[n];\n    double sum = 0;\n\
    \    for (int i = 0; i < n; ++i)\n    {\n        sum += xs[i];\n        result[i]\
    \ = sum;\n    }\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[]\
    \ xs) \n{\n    int n = xs.length;\n    float[] result = new float[n];\n    float\
    \ sum = 0;\n    for (int i = 0; i < n; ++i)\n    {\n        sum += xs[i];\n  \
    \      result[i] = sum;\n    }\n    return result;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n\
    \    long[] result = new long[(xs.length - 1)];\n    long x = 1;\n    for(int\
    \ i = 0; i < xs.length; i++)\n    {\n        result[i] = xs[i] - x * xs[i];\n\
    \        x *= xs[i];\n    }\n    return result;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[]\
    \ derivative(double[] xs) \n{\n    double[] result = new double[(xs.length - 1)];\n\
    \    double x = 1;\n    for(int i = 0; i < xs.length; i++)\n    {\n        result[i]\
    \ = xs[i] - x * xs[i];\n        x *= xs[i];\n    }\n    return result;\n}\n/*\n\
    \ xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] *\
    \ x^2 + ....\n     Return derivative of this polynomial in the same form.\n  \
    \  >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[] xs) \n{\n    float[]\
    \ result = new float[(xs.length - 1)];\n    float x = 1;\n    for(int i = 0; i\
    \ < xs.length; i++)\n    {\n        result[i] = xs[i] - x * xs[i];\n        x\
    \ *= xs[i];\n    }\n    return result;\n}\n/*\n xs represent coefficients of a\
    \ polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n\
    \    long[] result = new long[(xs.length + 1)];\n    long x = 0;\n    long y =\
    \ 0;\n    for(int i = 0; i < xs.length; i++)\n    {\n        y = xs[i];\n    \
    \    result[i] = 1;\n        for(int j = i; j < xs.length; j++)\n        {\n \
    \           y += xs[j] * result[j];\n            result[j + 1] = y;\n        }\n\
    \    }\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[] derivative(double[]\
    \ xs) \n{\n    double[] result = new double[(xs.length + 1)];\n    double x =\
    \ 0;\n    double y = 0;\n    for(int i = 0; i < xs.length; i++)\n    {\n     \
    \   y = xs[i];\n        result[i] = 1;\n        for(int j = i; j < xs.length;\
    \ j++)\n        {\n            y += xs[j] * result[j];\n            result[j +\
    \ 1] = y;\n        }\n    }\n    return result;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[]\
    \ derivative(float[] xs) \n{\n    float[] result = new float[(xs.length + 1)];\n\
    \    float x = 0;\n    float y = 0;\n    for(int i = 0; i < xs.length; i++)\n\
    \    {\n        y = xs[i];\n        result[i] = 1;\n        for(int j = i; j <\
    \ xs.length; j++)\n        {\n            y += xs[j] * result[j];\n          \
    \  result[j + 1] = y;\n        }\n    }\n    return result;\n}\n/*\n xs represent\
    \ coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n\
    \     Return derivative of this polynomial in the same form.\n    >>> derivative([3,\
    \ 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n\
    \    \n*/", "{\n    long[] result = new long[xs.length];\n    for(int i = 0; i\
    \ < xs.length; i++)\n        result[i] = xs[i + 1] - xs[i] * xs[i + 1];\n    return\
    \ result;\n}", "{\n    long[] result = new long[xs.length + 1];\n    long x =\
    \ 0;\n    long y = 0;\n    for(int i = 0; i < xs.length; i++)\n    {\n       \
    \ y = xs[i];\n        result[i] = 1;\n        for(int j = i; j < xs.length; j++)\n\
    \        {\n            x ^= xs[j];\n            result[i] += y;\n        }\n\
    \    }\n    result[xs.length] = 1;\n    return result;\n}\n/*\n xs represent coefficients\
    \ of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[]\
    \ derivative(double[] xs) \n{\n    double[] result = new double[xs.length + 1];\n\
    \    double x = 0;\n    double y = 0;\n    for(int i = 0; i < xs.length; i++)\n\
    \    {\n        y = xs[i];\n        result[i] = 1;\n        for(int j = i; j <\
    \ xs.length; j++)\n        {\n            x ^= xs[j];\n            result[i] +=\
    \ y;\n        }\n    }\n    result[xs.length] = 1;\n    return result;\n}\n/*\n\
    \ xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] *\
    \ x^2 + ....\n     Return derivative of this polynomial in the same form.\n  \
    \  >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[] xs) \n{\n    float[]\
    \ result = new float[xs.length + 1];\n    float x = 0;\n    float y = 0;\n   \
    \ for(int i = 0; i < xs.length; i++)\n    {\n        y = xs[i];\n        result[i]\
    \ = 1;\n        for(int j = i; j < xs.length; j++)\n        {\n            x ^=\
    \ xs[j];\n            result[i] += y;\n        }\n    }\n    result[xs.length]\
    \ = 1;\n    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n\
    \    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/", "{\n    int n = xs.length;\n\
    \    long[] result = new long[n];\n    for(int i = 0; i < n; i++)\n        result[i]\
    \ = xs[i+1] - xs[i];\n    return result;\n}\n/*\n xs represent coefficients of\
    \ a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative\
    \ of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n\
    \    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\ndouble[]\
    \ derivative(double[] xs) \n{\n    int n = xs.length;\n    double[] result = new\
    \ double[n];\n    for(int i = 0; i < n; i++)\n        result[i] = xs[i+1] - xs[i];\n\
    \    return result;\n}\n/*\n xs represent coefficients of a polynomial.\n    xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial\
    \ in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n\
    \    >>> derivative([1, 2, 3])\n    [2, 6]\n    \n*/\nfloat[] derivative(float[]\
    \ xs) \n{\n    int n = xs.length;\n    float[] result = new float[n];\n    for(int\
    \ i = 0; i < n; i++)\n        result[i] = xs[i+1] - xs[i];\n    return result;\n\
    }\n/*\n xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n     Return derivative of this polynomial in the same form.\n\
    \    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \n*/"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

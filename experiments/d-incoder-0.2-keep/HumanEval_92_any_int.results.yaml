name: HumanEval_92_any_int
language: humaneval_to_dlang.py
results:
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    bool result = false;\n    \n    if ( x == y )\n    {\n   \
    \     if ( x == z )\n        {\n            result = true;\n        }\n    }\n\
    \    else\n    {\n        if ( x == z )\n        {\n            result = true;\n\
    \        }\n    }\n    \n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp320b0zl6.d(47): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ebd]\\n??:? void tmp320b0zl6.__unittest_L43_C1()\
    \ [0x427a60]\\n??:? void tmp320b0zl6.__modtest() [0x427c3c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbe3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa76]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc09]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb95]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa4d]\\n??:? runModuleUnitTests [0x42b9b9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42830c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428293]\\n??:? _d_run_main [0x4281fe]\\n??:? main [0x427c4f]\\\
    n??:? __libc_start_main [0xde3dc554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    bool result = false;\n    \n    if (std.math.isInt(x) && std.math.isInt(y)\
    \ && std.math.isInt(z)) {\n        result = std.math.isEqual(x + y, z);\n    }\n\
    \    \n    return result;\n}\nunittest\n{\n    alias candidate = any_int;\n\n\
    \    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbai4rpvk.d(26): Error: undefined identifier `isInt` in module\
    \ `std.math`\\n/tmp/tmpbai4rpvk.d(26): Error: undefined identifier `isInt` in\
    \ module `std.math`\\n/tmp/tmpbai4rpvk.d(26): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpbai4rpvk.d(27): Error: undefined identifier `isEqual`\
    \ in module `std.math`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpbai4rpvk.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return ((std.math.rem(x,y) == 0.0) && (std.math.rem(y,z) ==\
    \ 0.0) && (std.math.rem(x,z) == 0.0));\n}\nunittest\n{\n    alias candidate =\
    \ any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqrc9kn9j.d(24): Error: undefined identifier `rem` in module `std.math`\\\
    n/tmp/tmpqrc9kn9j.d(24): Error: undefined identifier `rem` in module `std.math`\\\
    n/tmp/tmpqrc9kn9j.d(24): Error: undefined identifier `rem` in module `std.math`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqrc9kn9j.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.math.isInfinite(x) || std.math.isInfinite(y) ||\
    \ std.math.isInfinite(z) || std.math.isInfinite(x + y) || std.math.isInfinite(x\
    \ + z) || std.math.isInfinite(y + z) || std.math.isInfinite(x - y) || std.math.isInfinite(x\
    \ - z) || std.math.isInfinite(y - z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpeouox9r5.d(24): Error: undefined identifier `isInfinite` in module\
    \ `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\\
    n/tmp/tmpeouox9r5.d(24): Error: undefined identifier `isInfinite` in module `std.math`,\
    \ did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpeouox9r5.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpeouox9r5.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpeouox9r5.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpeouox9r5.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpeouox9r5.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpeouox9r5.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpeouox9r5.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpeouox9r5.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (std.math.isInt(x) && std.math.isInt(y) && std.math.isInt(z))\
    \ {\n        return std.math.isEqual(x, y, z);\n    }\n    return false;\n}\n\
    unittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L)\
    \ == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpyxspii5_.d(24): Error: undefined identifier `isInt` in module\
    \ `std.math`\\n/tmp/tmpyxspii5_.d(24): Error: undefined identifier `isInt` in\
    \ module `std.math`\\n/tmp/tmpyxspii5_.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpyxspii5_.d(25): Error: undefined identifier `isEqual`\
    \ in module `std.math`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpyxspii5_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    bool result = false;\n    \n    if ( x == y )\n    {\n   \
    \     result = true;\n    }\n    else if ( x == z )\n    {\n        result = true;\n\
    \    }\n    else if ( y == z )\n    {\n        result = true;\n    }\n    else\n\
    \    {\n        result = false;\n    }\n    \n    return result;\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp6whz24ch.d(49): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ec5]\\n??:? void tmp6whz24ch.__unittest_L45_C1()\
    \ [0x427a6c]\\n??:? void tmp6whz24ch.__modtest() [0x427c48]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbeb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa7e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc11]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300c0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb9d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa55]\\n??:? runModuleUnitTests [0x42b9c1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428314]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42829b]\\n??:? _d_run_main [0x428206]\\n??:? main [0x427c5b]\\\
    n??:? __libc_start_main [0x5487d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.math.isInfinite(x) || std.math.isInfinite(y) ||\
    \ std.math.isInfinite(z) || std.math.isInfinite(x + y) || std.math.isInfinite(x\
    \ + z) || std.math.isInfinite(y + z) || std.math.isInfinite(x - y) || std.math.isInfinite(x\
    \ - z) || std.math.isInfinite(y - z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpke0yl4yw.d(24): Error: undefined identifier `isInfinite` in module\
    \ `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\\
    n/tmp/tmpke0yl4yw.d(24): Error: undefined identifier `isInfinite` in module `std.math`,\
    \ did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpke0yl4yw.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpke0yl4yw.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpke0yl4yw.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpke0yl4yw.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpke0yl4yw.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpke0yl4yw.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpke0yl4yw.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpke0yl4yw.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.math.isInt.any(x, y, z);\n}\nunittest\n{\n    alias\
    \ candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkzalvq4q.d(24): Error: undefined identifier `isInt` in module\
    \ `std.math`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkzalvq4q.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.math.isInfinite(x) || std.math.isInfinite(y) ||\
    \ std.math.isInfinite(z) || std.math.isInfinite(x + y) || std.math.isInfinite(x\
    \ + z) || std.math.isInfinite(y + z) || std.math.isInfinite(x - y) || std.math.isInfinite(x\
    \ - z) || std.math.isInfinite(y - z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3i4pf43o.d(24): Error: undefined identifier `isInfinite` in module\
    \ `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\\
    n/tmp/tmp3i4pf43o.d(24): Error: undefined identifier `isInfinite` in module `std.math`,\
    \ did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp3i4pf43o.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp3i4pf43o.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp3i4pf43o.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp3i4pf43o.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp3i4pf43o.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp3i4pf43o.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp3i4pf43o.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmp3i4pf43o.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.math.isInt(x) && std.math.isInt(y) && std.math.isInt(z);\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmcaqowy2.d(24): Error: undefined identifier `isInt` in module\
    \ `std.math`\\n/tmp/tmpmcaqowy2.d(24): Error: undefined identifier `isInt` in\
    \ module `std.math`\\n/tmp/tmpmcaqowy2.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpmcaqowy2.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    bool result = false;\n    if ( x == y || x == z || y == z\
    \ )\n        result = true;\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpb7y4qvvb.d(33): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427eb5]\\n??:? void tmpb7y4qvvb.__unittest_L29_C1()\
    \ [0x427a5c]\\n??:? void tmpb7y4qvvb.__modtest() [0x427c38]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbdb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa6e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc01]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb8d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa45]\\n??:? runModuleUnitTests [0x42b9b1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428304]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42828b]\\n??:? _d_run_main [0x4281f6]\\n??:? main [0x427c4b]\\\
    n??:? __libc_start_main [0xdf7eb554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.int(x) == std.int(y) + std.int(z);\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7hqjm3g2.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmp7hqjm3g2.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmp7hqjm3g2.d(24): Error: identifier expected following `.`, not\
    \ `int`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7hqjm3g2.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == std.math.add(x,y,z));\n}\n</code>\n<|/ a tags=c++,function,boolean\
    \ |>\n<| c |>\nThis doesn't answer the question, which is about how to implement\
    \ the function in C++.\n<|/ c |>\n<| c |>\nI added a C++ solution to the question.\
    \ Thanks for pointing that out.\n<|/ c |>\n<| c |>\nI added a C++ solution to\
    \ the question. Thanks for pointing that out.\n<|/ c |>\n<| c |>\nThis doesn't\
    \ answer the question, which is about how to implement the function in C++.\n\
    <|/ c |>\n<| a dscore=4 |>\n<code>\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0h5tfwu9.d(26): Error: declaration expected, not `<`\\n/tmp/tmp0h5tfwu9.d(29):\
    \ Error: unterminated character constant\\n/tmp/tmp0h5tfwu9.d(38): Error: unterminated\
    \ character constant\\n/tmp/tmp0h5tfwu9.d(46): Error: declaration expected, not\
    \ `assert`\\n/tmp/tmp0h5tfwu9.d(47): Error: declaration expected, not `assert`\\\
    n/tmp/tmp0h5tfwu9.d(48): Error: declaration expected, not `assert`\\n/tmp/tmp0h5tfwu9.d(49):\
    \ Error: declaration expected, not `assert`\\n/tmp/tmp0h5tfwu9.d(50): Error: declaration\
    \ expected, not `assert`\\n/tmp/tmp0h5tfwu9.d(51): Error: declaration expected,\
    \ not `assert`\\n/tmp/tmp0h5tfwu9.d(52): Error: declaration expected, not `assert`\\\
    n/tmp/tmp0h5tfwu9.d(53): Error: declaration expected, not `assert`\\n/tmp/tmp0h5tfwu9.d(54):\
    \ Error: declaration expected, not `assert`\\n/tmp/tmp0h5tfwu9.d(55): Error: declaration\
    \ expected, not `assert`\\n/tmp/tmp0h5tfwu9.d(56): Error: unrecognized declaration\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0h5tfwu9.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    bool result = false;\n    \n    if ( x == y || x == z || y\
    \ == z )\n    {\n        result = true;\n    }\n    else\n    {\n        result\
    \ = false;\n    }\n    \n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpcpd0gjc1.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ebd]\\n??:? void tmpcpd0gjc1.__unittest_L37_C1()\
    \ [0x427a60]\\n??:? void tmpcpd0gjc1.__modtest() [0x427c3c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbe3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa76]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc09]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb95]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa4d]\\n??:? runModuleUnitTests [0x42b9b9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42830c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428293]\\n??:? _d_run_main [0x4281fe]\\n??:? main [0x427c4f]\\\
    n??:? __libc_start_main [0x1f374554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return ((std.math.rem(x,y) == 0.0) && (std.math.rem(y,z) ==\
    \ 0.0) && (std.math.rem(x,z) == 0.0));\n}\nunittest\n{\n    alias candidate =\
    \ any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptvkcvb86.d(24): Error: undefined identifier `rem` in module `std.math`\\\
    n/tmp/tmptvkcvb86.d(24): Error: undefined identifier `rem` in module `std.math`\\\
    n/tmp/tmptvkcvb86.d(24): Error: undefined identifier `rem` in module `std.math`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptvkcvb86.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (std.math.isnan(x) || std.math.isnan(y) || std.math.isnan(z))\
    \ return false;\n    if (std.math.isinf(x) || std.math.isinf(y) || std.math.isinf(z))\
    \ return false;\n    if (std.math.isinf(x) || std.math.isinf(y) || std.math.isinf(z))\
    \ return false;\n    if (std.math.isinf(x) || std.math.isinf(y) || std.math.isinf(z))\
    \ return false;\n    if (std.math.isinf(x) || std.math.isinf(y) || std.math.isinf(z))\
    \ return false;\n    if (std.math.isinf(x) || std.math.isinf(y) || std.math.isinf(z))\
    \ return false;\n    if (std.math.isinf(x) || std.math.isinf(y) || std.math.isinf(z))\
    \ return false;\n    if (std.math.isinf(x) || std.math.isinf(y) || std.math.isinf(z))\
    \ return false;\n    if (std.math.isinf(x) || std.math.isinf(y) || std.math.isinf(z))\
    \ return false;\n    if (std.math.isinf(x) || std.math.isinf(y) || std.math.isinf(z))\
    \ return false;\n    if (std.math.isinf(x) || std.math.isinf(y) || std.math.isinf(z))\
    \ return false;\n    if (std.math.isinf(x) || std.math.isinf(y) || std.math.isinf(z))\
    \ return false;\n    if (std.math.isinf(x) || std.math.isinf(y) || std.math.isinf(z))\
    \ return false;\n    if (std.math.isinf(x) || std.math.isinf(y) || std.math.isinf(z))\
    \ return false;\n    if (std.math.isinf(x) || std.math.isinf(y) || std.math.isinf(z))\
    \ return false;\n    if (std.math.isinf(x) || std.math.isinf(y) || std.math.isinf(z))\
    \ return false;\n    if (std.math.isinf(x) || std.math.isinf(y) || std.math.isinf(z))\
    \ return false;\n    if (std.math.isinf(x) || std.math.isinf(y) || std.math.isinf(z))\
    \ return false;\n    if (std.math.isinf(x) || std.math.isinf(y) || std.math.isinf(z))\
    \ return false;\n    if (std.math.isinf(x) || std.math.isinf(y) || std.\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzumegefl.d(44): Error: identifier expected following `.`, not\
    \ `unittest`\\n/tmp/tmpzumegefl.d(45): Error: found `{` when expecting `)`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzumegefl.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.math.isInt.any(x, y, z);\n}\nunittest\n{\n    alias\
    \ candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpplvj9rys.d(24): Error: undefined identifier `isInt` in module\
    \ `std.math`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpplvj9rys.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (std.math.isInt(x) && std.math.isInt(y) && std.math.isInt(z))\
    \ {\n        return std.math.isEqual(x + y, z);\n    }\n    return false;\n}\n\
    unittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L)\
    \ == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7lkt__1k.d(24): Error: undefined identifier `isInt` in module\
    \ `std.math`\\n/tmp/tmp7lkt__1k.d(24): Error: undefined identifier `isInt` in\
    \ module `std.math`\\n/tmp/tmp7lkt__1k.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp7lkt__1k.d(25): Error: undefined identifier `isEqual`\
    \ in module `std.math`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmp7lkt__1k.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return ((std.math.isInt(x) && std.math.isInt(y) && std.math.isInt(z))\
    \ || (std.math.isInt(x) && std.math.isInt(z) && std.math.isInt(y)) || (std.math.isInt(y)\
    \ && std.math.isInt(x) && std.math.isInt(z)) || (std.math.isInt(y) && std.math.isInt(z)\
    \ && std.math.isInt(x)));\n}\nunittest\n{\n    alias candidate = any_int;\n\n\
    \    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsu7pi7yc.d(24): Error: undefined identifier `isInt` in module\
    \ `std.math`\\n/tmp/tmpsu7pi7yc.d(24): Error: undefined identifier `isInt` in\
    \ module `std.math`\\n/tmp/tmpsu7pi7yc.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpsu7pi7yc.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpsu7pi7yc.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpsu7pi7yc.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpsu7pi7yc.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpsu7pi7yc.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpsu7pi7yc.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpsu7pi7yc.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpsu7pi7yc.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpsu7pi7yc.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpsu7pi7yc.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    bool result = false;\n    if (x == y || x == z || y == z)\
    \ \n    {\n        result = true;\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp27havpgb.d(35): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427eb5]\\n??:? void tmp27havpgb.__unittest_L31_C1()\
    \ [0x427a5c]\\n??:? void tmp27havpgb.__modtest() [0x427c38]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbdb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa6e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc01]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb8d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa45]\\n??:? runModuleUnitTests [0x42b9b1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428304]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42828b]\\n??:? _d_run_main [0x4281f6]\\n??:? main [0x427c4b]\\\
    n??:? __libc_start_main [0xd80f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (x == y || x == z || y == z) \n    {\n        return true;\n\
    \    }\n    else \n    {\n        return false;\n    }\n}\nunittest\n{\n    alias\
    \ candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpytfz4fdl.d(37): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ead]\\n??:? void tmpytfz4fdl.__unittest_L33_C1()\
    \ [0x427a54]\\n??:? void tmpytfz4fdl.__modtest() [0x427c30]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbd3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa66]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbf9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300a8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb85]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa3d]\\n??:? runModuleUnitTests [0x42b9a9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282fc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428283]\\n??:? _d_run_main [0x4281ee]\\n??:? main [0x427c43]\\\
    n??:? __libc_start_main [0xf051554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.math.isInfinite(x) || std.math.isInfinite(y) ||\
    \ std.math.isInfinite(z) || std.math.isInfinite(x + y) || std.math.isInfinite(x\
    \ + z) || std.math.isInfinite(y + z) || std.math.isInfinite(x - y) || std.math.isInfinite(x\
    \ - z) || std.math.isInfinite(y - z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpl9i36zf5.d(24): Error: undefined identifier `isInfinite` in module\
    \ `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\\
    n/tmp/tmpl9i36zf5.d(24): Error: undefined identifier `isInfinite` in module `std.math`,\
    \ did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpl9i36zf5.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpl9i36zf5.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpl9i36zf5.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpl9i36zf5.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpl9i36zf5.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpl9i36zf5.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpl9i36zf5.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpl9i36zf5.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.math.isInfinite(x) || std.math.isInfinite(y) ||\
    \ std.math.isInfinite(z) || std.math.isInfinite(x + y) || std.math.isInfinite(x\
    \ + z) || std.math.isInfinite(y + z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpuv7c6hls.d(24): Error: undefined identifier `isInfinite` in module\
    \ `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\\
    n/tmp/tmpuv7c6hls.d(24): Error: undefined identifier `isInfinite` in module `std.math`,\
    \ did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpuv7c6hls.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpuv7c6hls.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpuv7c6hls.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpuv7c6hls.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpuv7c6hls.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.math.isInfinite(x) || std.math.isInfinite(y) ||\
    \ std.math.isInfinite(z) || std.math.isInfinite(x+y) || std.math.isInfinite(x+z)\
    \ || std.math.isInfinite(y+z) || std.math.isInfinite(x+y+z);\n}\nunittest\n{\n\
    \    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp02wj4waj.d(24): Error: undefined identifier `isInfinite` in module\
    \ `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\\
    n/tmp/tmp02wj4waj.d(24): Error: undefined identifier `isInfinite` in module `std.math`,\
    \ did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp02wj4waj.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp02wj4waj.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp02wj4waj.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp02wj4waj.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp02wj4waj.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmp02wj4waj.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (std.math.isInt(x) && std.math.isInt(y) && std.math.isInt(z))\
    \ {\n        return std.math.isEqual(x + y, z);\n    }\n    return false;\n}\n\
    unittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L)\
    \ == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp51lfc070.d(24): Error: undefined identifier `isInt` in module\
    \ `std.math`\\n/tmp/tmp51lfc070.d(24): Error: undefined identifier `isInt` in\
    \ module `std.math`\\n/tmp/tmp51lfc070.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp51lfc070.d(25): Error: undefined identifier `isEqual`\
    \ in module `std.math`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmp51lfc070.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.math.isInt.any(x, y, z);\n}\nunittest\n{\n    alias\
    \ candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_wmhrbta.d(24): Error: undefined identifier `isInt` in module\
    \ `std.math`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_wmhrbta.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (std.math.isnan(x) || std.math.isnan(y) || std.math.isnan(z))\n\
    \        return false;\n    \n    if (std.math.isinf(x) || std.math.isinf(y) ||\
    \ std.math.isinf(z))\n        return false;\n    \n    if (std.math.isinf(x) &&\
    \ std.math.isinf(y) && std.math.isinf(z))\n        return false;\n    \n    if\
    \ (std.math.isinf(x) || std.math.isinf(y) || std.math.isinf(z))\n        return\
    \ false;\n    \n    if (std.math.isnan(x) || std.math.isnan(y) || std.math.isnan(z))\n\
    \        return false;\n    \n    if (std.math.isinf(x) && std.math.isinf(y) &&\
    \ std.math.isinf(z))\n        return false;\n    \n    if (std.math.isinf(x) ||\
    \ std.math.isinf(y) || std.math.isinf(z))\n        return false;\n    \n    if\
    \ (std.math.isnan(x) || std.math.isnan(y) || std.math.isnan(z))\n        return\
    \ false;\n    \n    if (std.math.isinf(x) && std.math.isinf(y) && std.math.isinf(z))\n\
    \        return false;\n    \n    if (std.math.isinf(x) || std.math.isinf(y) ||\
    \ std.math.isinf(z))\n        return false;\n    \n    if (std.math.isnan(x) ||\
    \ std.math.isnan(y) || std.math.isnan(z))\n        return false;\n    \n    if\
    \ (std.math.isinf(x) && std.math.isinf(y) && std.math.isinf(z))\n        return\
    \ false;\n    \n    if (std.math.isinf(x) || std.math.isinf(y) || std.math.isinf(z))\n\
    \        return false;\n    \n    if (std.math.isnan(x) || std.math.isnan(y) ||\
    \ std.math.isnan(z))\n        return false;\n    \n    if (std.math.isinf(x) &&\
    \ std.math.isinf(y) && std.math.isinf(z))\n        return false;\n    \n    if\
    \ (std.math.isinf(x) || std.math.isinf(y) || std.math.isinf(z))\n        return\
    \ false;\n    \n    if (std.math.isnan(x) || std.math.isnan(y) || std.math.isnan(z))\n\
    \        return false;\n    \n    if (std.math.isinf(x) && std.math.isinf(y) &&\
    \ std.math.isinf(z))\n        return false;\n    \n    if (std.math.isinf(x) ||\
    \ std.math.is\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpyspnrvwl.d(78): Error: identifier expected following `.`, not\
    \ `is`\\n/tmp/tmpyspnrvwl.d(79): Error: found `unittest` when expecting `)`\\\
    n/tmp/tmpyspnrvwl.d(94): Error: found `End of File` when expecting `}` following\
    \ compound statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyspnrvwl.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (std.math.isInt(x) && std.math.isInt(y) && std.math.isInt(z))\n\
    \    {\n        return std.math.isEqual(x, y, z);\n    }\n    else\n    {\n  \
    \      return false;\n    }\n}\nunittest\n{\n    alias candidate = any_int;\n\n\
    \    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzjaix7sz.d(24): Error: undefined identifier `isInt` in module\
    \ `std.math`\\n/tmp/tmpzjaix7sz.d(24): Error: undefined identifier `isInt` in\
    \ module `std.math`\\n/tmp/tmpzjaix7sz.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpzjaix7sz.d(26): Error: undefined identifier `isEqual`\
    \ in module `std.math`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpzjaix7sz.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.math.isInt(x) && std.math.isInt(y) && std.math.isInt(z);\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbz1e8skn.d(24): Error: undefined identifier `isInt` in module\
    \ `std.math`\\n/tmp/tmpbz1e8skn.d(24): Error: undefined identifier `isInt` in\
    \ module `std.math`\\n/tmp/tmpbz1e8skn.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpbz1e8skn.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == std.math.add(x, y) && y == std.math.add(y, z)\
    \ && z == std.math.add(z, x));\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjy6cpj2y.d(24): Error: undefined identifier `add` in module `std.math`\\\
    n/tmp/tmpjy6cpj2y.d(24): Error: undefined identifier `add` in module `std.math`\\\
    n/tmp/tmpjy6cpj2y.d(24): Error: undefined identifier `add` in module `std.math`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjy6cpj2y.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.int(x) == std.int(y) + std.int(z);\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpj4e751cf.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpj4e751cf.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpj4e751cf.d(24): Error: identifier expected following `.`, not\
    \ `int`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj4e751cf.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (x == y && x == z) return true;\n    if (x == y || x ==\
    \ z) return true;\n    if (y == z) return true;\n    return false;\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmppd2x24te.d(33): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ec5]\\n??:? void tmppd2x24te.__unittest_L29_C1()\
    \ [0x427a68]\\n??:? void tmppd2x24te.__modtest() [0x427c44]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbeb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa7e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc11]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300c0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb9d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa55]\\n??:? runModuleUnitTests [0x42b9c1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428314]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42829b]\\n??:? _d_run_main [0x428206]\\n??:? main [0x427c57]\\\
    n??:? __libc_start_main [0xc72c3554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return ((std.math.remainder(x,y) == 0.0) && (std.math.remainder(x,z)\
    \ == 0.0) && (std.math.remainder(y,z) == 0.0));\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpdumetst1.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427fd5]\\n??:? void tmpdumetst1.__unittest_L26_C1()\
    \ [0x427b78]\\n??:? void tmpdumetst1.__modtest() [0x427d54]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bd1b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42abae]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fd41]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4301f0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fccd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42ab85]\\n??:? runModuleUnitTests [0x42baf1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428424]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4283ab]\\n??:? _d_run_main [0x428316]\\n??:? main [0x427d67]\\\
    n??:? __libc_start_main [0x81ad5554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.math.isInfinite(x) || std.math.isInfinite(y) ||\
    \ std.math.isInfinite(z) || std.math.isInfinite(x + y) || std.math.isInfinite(x\
    \ + z) || std.math.isInfinite(y + z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_m0j_zzd.d(24): Error: undefined identifier `isInfinite` in module\
    \ `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\\
    n/tmp/tmp_m0j_zzd.d(24): Error: undefined identifier `isInfinite` in module `std.math`,\
    \ did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp_m0j_zzd.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp_m0j_zzd.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp_m0j_zzd.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp_m0j_zzd.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmp_m0j_zzd.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if ( std.math.isInt(x) && std.math.isInt(y) && std.math.isInt(z)\
    \ ) \n    {\n        return ( x == std.math.add(x, y) && y == std.math.add(y,\
    \ z) && z == std.math.add(z, x) );\n    }\n    return false;\n}\nunittest\n{\n\
    \    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptks3cjq1.d(24): Error: undefined identifier `isInt` in module\
    \ `std.math`\\n/tmp/tmptks3cjq1.d(24): Error: undefined identifier `isInt` in\
    \ module `std.math`\\n/tmp/tmptks3cjq1.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmptks3cjq1.d(26): Error: undefined identifier `add`\
    \ in module `std.math`\\n/tmp/tmptks3cjq1.d(26): Error: undefined identifier `add`\
    \ in module `std.math`\\n/tmp/tmptks3cjq1.d(26): Error: undefined identifier `add`\
    \ in module `std.math`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmptks3cjq1.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.math.isInfinite(x) || std.math.isInfinite(y) ||\
    \ std.math.isInfinite(z) || std.math.isInfinite(x + y) || std.math.isInfinite(x\
    \ + z) || std.math.isInfinite(y + z) || std.math.isInfinite(x - y) || std.math.isInfinite(x\
    \ - z) || std.math.isInfinite(y - z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpf_w4t7a_.d(24): Error: undefined identifier `isInfinite` in module\
    \ `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\\
    n/tmp/tmpf_w4t7a_.d(24): Error: undefined identifier `isInfinite` in module `std.math`,\
    \ did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpf_w4t7a_.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpf_w4t7a_.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpf_w4t7a_.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpf_w4t7a_.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpf_w4t7a_.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpf_w4t7a_.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpf_w4t7a_.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpf_w4t7a_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    bool result = false;\n    if ( x == y )\n    {\n        if\
    \ ( x == z )\n        {\n            result = true;\n        }\n    }\n    else\n\
    \    {\n        if ( x == z )\n        {\n            result = true;\n       \
    \ }\n    }\n    return result;\n}\n</code>\n<|/ a tags=c++,c++11 |>\n<| c |>\n\
    This doesn't answer the question. He wants to know if _any_ of the numbers is\
    \ equal to the sum of the other two. Your code checks if _all_ of the numbers\
    \ are equal to the sum.\n<|/ c |>\n<| c |>\nI agree with you. My answer was meant\
    \ to be a starting point for him to work on.\n<|/ c |>\n<| c |>\nI added a solution\
    \ that checks if _any_ of the numbers is equal to the sum of the other two.\n\
    <|/ c |>\n<| c |>\nI added a solution that checks if _any_ of the numbers is equal\
    \ to the sum of the other two.\n<|/ c |>\n<| c |>\nI added a solution that checks\
    \ if _any_ of the numbers is equal to the sum of the other two.\n<|/ c |>\n<|\
    \ a tags=c++,c++11 |>\n<code>\nunittest\n{\n    alias candidate = any_int;\n\n\
    \    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpaffc0ih7.d(41): Error: declaration expected, not `<`\\n/tmp/tmpaffc0ih7.d(44):\
    \ Error: unterminated character constant\\n/tmp/tmpaffc0ih7.d(64): Error: declaration\
    \ expected, not `assert`\\n/tmp/tmpaffc0ih7.d(65): Error: declaration expected,\
    \ not `assert`\\n/tmp/tmpaffc0ih7.d(66): Error: declaration expected, not `assert`\\\
    n/tmp/tmpaffc0ih7.d(67): Error: declaration expected, not `assert`\\n/tmp/tmpaffc0ih7.d(68):\
    \ Error: declaration expected, not `assert`\\n/tmp/tmpaffc0ih7.d(69): Error: declaration\
    \ expected, not `assert`\\n/tmp/tmpaffc0ih7.d(70): Error: declaration expected,\
    \ not `assert`\\n/tmp/tmpaffc0ih7.d(71): Error: declaration expected, not `assert`\\\
    n/tmp/tmpaffc0ih7.d(72): Error: declaration expected, not `assert`\\n/tmp/tmpaffc0ih7.d(73):\
    \ Error: declaration expected, not `assert`\\n/tmp/tmpaffc0ih7.d(74): Error: unrecognized\
    \ declaration\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpaffc0ih7.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.int(x) == std.int(y) && std.int(y) == std.int(z);\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7ypwahe_.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmp7ypwahe_.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmp7ypwahe_.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmp7ypwahe_.d(24): Error: identifier expected following `.`, not\
    \ `int`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7ypwahe_.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (std.math.isnan(x) || std.math.isnan(y) || std.math.isnan(z))\
    \ return false;\n    if (x == y && y == z) return true;\n    if (x == z) return\
    \ true;\n    if (y == z) return true;\n    if (x < y && y < z) return true;\n\
    \    if (x < z && z < y) return true;\n    return false;\n}\nunittest\n{\n   \
    \ alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n \
    \   assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmplyic4ube.d(24): Error: undefined identifier `isnan` in module\
    \ `std.math`\\n/tmp/tmplyic4ube.d(24): Error: undefined identifier `isnan` in\
    \ module `std.math`\\n/tmp/tmplyic4ube.d(24): Error: undefined identifier `isnan`\
    \ in module `std.math`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmplyic4ube.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    bool result = false;\n    \n    if ( x == y || x == z || y\
    \ == z )\n    {\n        result = true;\n    }\n    \n    return result;\n}\n\
    unittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L)\
    \ == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpqt8b3g5y.d(37): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427eb5]\\n??:? void tmpqt8b3g5y.__unittest_L33_C1()\
    \ [0x427a5c]\\n??:? void tmpqt8b3g5y.__modtest() [0x427c38]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbdb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa6e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc01]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb8d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa45]\\n??:? runModuleUnitTests [0x42b9b1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428304]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42828b]\\n??:? _d_run_main [0x4281f6]\\n??:? main [0x427c4b]\\\
    n??:? __libc_start_main [0xfd605554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == std.math.add(x, y) && y == std.math.add(y, z)\
    \ && z == std.math.add(z, x));\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmtixr_yc.d(24): Error: undefined identifier `add` in module `std.math`\\\
    n/tmp/tmpmtixr_yc.d(24): Error: undefined identifier `add` in module `std.math`\\\
    n/tmp/tmpmtixr_yc.d(24): Error: undefined identifier `add` in module `std.math`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmtixr_yc.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    bool result = false;\n    if (std.math.isInt(x) && std.math.isInt(y)\
    \ && std.math.isInt(z)) {\n        result = std.math.isEqual(std.math.add(x,y),\
    \ z);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppilv6t78.d(25): Error: undefined identifier `isInt` in module\
    \ `std.math`\\n/tmp/tmppilv6t78.d(25): Error: undefined identifier `isInt` in\
    \ module `std.math`\\n/tmp/tmppilv6t78.d(25): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmppilv6t78.d(26): Error: undefined identifier `isEqual`\
    \ in module `std.math`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmppilv6t78.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.math.isInfinite(x) || std.math.isInfinite(y) ||\
    \ std.math.isInfinite(z) || std.math.isInfinite(x+y) || std.math.isInfinite(x+z)\
    \ || std.math.isInfinite(y+z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpac59jll0.d(24): Error: undefined identifier `isInfinite` in module\
    \ `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\\
    n/tmp/tmpac59jll0.d(24): Error: undefined identifier `isInfinite` in module `std.math`,\
    \ did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpac59jll0.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpac59jll0.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpac59jll0.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpac59jll0.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpac59jll0.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.math.isInfinite(x) || std.math.isInfinite(y) ||\
    \ std.math.isInfinite(z) || std.math.isInfinite(x+y) || std.math.isInfinite(x+z)\
    \ || std.math.isInfinite(y+z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpcfxszqxl.d(24): Error: undefined identifier `isInfinite` in module\
    \ `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\\
    n/tmp/tmpcfxszqxl.d(24): Error: undefined identifier `isInfinite` in module `std.math`,\
    \ did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpcfxszqxl.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpcfxszqxl.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpcfxszqxl.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpcfxszqxl.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpcfxszqxl.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (x == y)\n    {\n        if (y == z)\n        {\n     \
    \       return true;\n        }\n        else\n        {\n            return false;\n\
    \        }\n    }\n    else\n    {\n        return false;\n    }\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpjtrcegks.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ead]\\n??:? void tmpjtrcegks.__unittest_L40_C1()\
    \ [0x427a50]\\n??:? void tmpjtrcegks.__modtest() [0x427c2c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbd3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa66]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbf9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300a8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb85]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa3d]\\n??:? runModuleUnitTests [0x42b9a9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282fc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428283]\\n??:? _d_run_main [0x4281ee]\\n??:? main [0x427c3f]\\\
    n??:? __libc_start_main [0x9a3bc554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    bool result = false;\n    \n    if ( x == y || x == z || y\
    \ == z )\n    {\n        result = true;\n    }\n    \n    return result;\n}\n\
    unittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L)\
    \ == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpwrrvvvbs.d(37): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427eb5]\\n??:? void tmpwrrvvvbs.__unittest_L33_C1()\
    \ [0x427a5c]\\n??:? void tmpwrrvvvbs.__modtest() [0x427c38]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbdb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa6e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc01]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb8d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa45]\\n??:? runModuleUnitTests [0x42b9b1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428304]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42828b]\\n??:? _d_run_main [0x4281f6]\\n??:? main [0x427c4b]\\\
    n??:? __libc_start_main [0xa05a5554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (std.math.isInt(x) && std.math.isInt(y) && std.math.isInt(z))\
    \ {\n        return std.math.isEqual(x + y, z);\n    }\n    return false;\n}\n\
    unittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L)\
    \ == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpumwyhsqq.d(24): Error: undefined identifier `isInt` in module\
    \ `std.math`\\n/tmp/tmpumwyhsqq.d(24): Error: undefined identifier `isInt` in\
    \ module `std.math`\\n/tmp/tmpumwyhsqq.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpumwyhsqq.d(25): Error: undefined identifier `isEqual`\
    \ in module `std.math`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpumwyhsqq.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.math.isInfinite(x) || std.math.isInfinite(y) ||\
    \ std.math.isInfinite(z) || std.math.isInfinite(x + y) || std.math.isInfinite(x\
    \ + z) || std.math.isInfinite(y + z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwseaxcsq.d(24): Error: undefined identifier `isInfinite` in module\
    \ `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\\
    n/tmp/tmpwseaxcsq.d(24): Error: undefined identifier `isInfinite` in module `std.math`,\
    \ did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpwseaxcsq.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpwseaxcsq.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpwseaxcsq.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpwseaxcsq.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpwseaxcsq.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return ((std.math.isInt(x) && std.math.isInt(y) && std.math.isInt(z))\
    \ || (std.math.isInt(x) && std.math.isInt(z) && std.math.isInt(y)) || (std.math.isInt(y)\
    \ && std.math.isInt(x) && std.math.isInt(z)) || (std.math.isInt(y) && std.math.isInt(z)\
    \ && std.math.isInt(x)));\n}\nunittest\n{\n    alias candidate = any_int;\n\n\
    \    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5kb33lye.d(24): Error: undefined identifier `isInt` in module\
    \ `std.math`\\n/tmp/tmp5kb33lye.d(24): Error: undefined identifier `isInt` in\
    \ module `std.math`\\n/tmp/tmp5kb33lye.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp5kb33lye.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp5kb33lye.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp5kb33lye.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp5kb33lye.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp5kb33lye.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp5kb33lye.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp5kb33lye.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp5kb33lye.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp5kb33lye.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmp5kb33lye.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.math.isInfinite(x) || std.math.isInfinite(y) ||\
    \ std.math.isInfinite(z) || std.math.isInfinite(x+y) || std.math.isInfinite(x+z)\
    \ || std.math.isInfinite(y+z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpuz6_d12n.d(24): Error: undefined identifier `isInfinite` in module\
    \ `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\\
    n/tmp/tmpuz6_d12n.d(24): Error: undefined identifier `isInfinite` in module `std.math`,\
    \ did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpuz6_d12n.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpuz6_d12n.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpuz6_d12n.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpuz6_d12n.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpuz6_d12n.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.math.isInfinite(x) || std.math.isInfinite(y) ||\
    \ std.math.isInfinite(z) || std.math.isInfinite(x+y) || std.math.isInfinite(x+z)\
    \ || std.math.isInfinite(y+z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzu56hbk3.d(24): Error: undefined identifier `isInfinite` in module\
    \ `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\\
    n/tmp/tmpzu56hbk3.d(24): Error: undefined identifier `isInfinite` in module `std.math`,\
    \ did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpzu56hbk3.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpzu56hbk3.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpzu56hbk3.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpzu56hbk3.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpzu56hbk3.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    bool result = false;\n    \n    if (x == y || x == z || y\
    \ == z) \n    {\n        result = true;\n    }\n    \n    return result;\n}\n\
    unittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L)\
    \ == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpbslu1sly.d(37): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427eb5]\\n??:? void tmpbslu1sly.__unittest_L33_C1()\
    \ [0x427a5c]\\n??:? void tmpbslu1sly.__modtest() [0x427c38]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbdb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa6e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc01]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb8d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa45]\\n??:? runModuleUnitTests [0x42b9b1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428304]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42828b]\\n??:? _d_run_main [0x4281f6]\\n??:? main [0x427c4b]\\\
    n??:? __libc_start_main [0x1ee90554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (std.math.isInt(x) && std.math.isInt(y) && std.math.isInt(z))\
    \ {\n        return std.math.isEqual(x + y, z);\n    }\n    return false;\n}\n\
    unittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L)\
    \ == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_uq58iri.d(24): Error: undefined identifier `isInt` in module\
    \ `std.math`\\n/tmp/tmp_uq58iri.d(24): Error: undefined identifier `isInt` in\
    \ module `std.math`\\n/tmp/tmp_uq58iri.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp_uq58iri.d(25): Error: undefined identifier `isEqual`\
    \ in module `std.math`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmp_uq58iri.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if ( x == y || x == z || y == z )\n        return true;\n\
    \    else\n        return false;\n}\n</code>\n<|/ a tags=c++,function,if-statement\
    \ |>\n<| c |>\nThis doesn't work. Try it with `any_int(3.6, -2.2, 2)`.\n<|/ c\
    \ |>\n<| c |>\nI didn't downvote you, but I suspect that someone else did. I think\
    \ your answer would be better if you explained why you think it works.\n<|/ c\
    \ |>\n<| c |>\nI added a comment to the question explaining why I believe this\
    \ works.\n<|/ c |>\n<| c |>\nI added a comment to the question explaining why\
    \ I believe this works.\n<|/ c |>\n<| c |>\nI added a comment to the question\
    \ explaining why I believe this works.\n<|/ c |>\n<| a tags=c++,function,if-statement\
    \ |>\n<code>\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmdzpcalv.d(29): Error: declaration expected, not `<`\\n/tmp/tmpmdzpcalv.d(32):\
    \ Error: unterminated character constant\\n/tmp/tmpmdzpcalv.d(35): Error: unterminated\
    \ character constant\\n/tmp/tmpmdzpcalv.d(52): Error: declaration expected, not\
    \ `assert`\\n/tmp/tmpmdzpcalv.d(53): Error: declaration expected, not `assert`\\\
    n/tmp/tmpmdzpcalv.d(54): Error: declaration expected, not `assert`\\n/tmp/tmpmdzpcalv.d(55):\
    \ Error: declaration expected, not `assert`\\n/tmp/tmpmdzpcalv.d(56): Error: declaration\
    \ expected, not `assert`\\n/tmp/tmpmdzpcalv.d(57): Error: declaration expected,\
    \ not `assert`\\n/tmp/tmpmdzpcalv.d(58): Error: declaration expected, not `assert`\\\
    n/tmp/tmpmdzpcalv.d(59): Error: declaration expected, not `assert`\\n/tmp/tmpmdzpcalv.d(60):\
    \ Error: declaration expected, not `assert`\\n/tmp/tmpmdzpcalv.d(61): Error: declaration\
    \ expected, not `assert`\\n/tmp/tmpmdzpcalv.d(62): Error: unrecognized declaration\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmdzpcalv.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.math.isInfinite(x) || std.math.isInfinite(y) ||\
    \ std.math.isInfinite(z) || std.math.isInfinite(x + y) || std.math.isInfinite(x\
    \ + z) || std.math.isInfinite(y + z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0hdpbmtb.d(24): Error: undefined identifier `isInfinite` in module\
    \ `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\\
    n/tmp/tmp0hdpbmtb.d(24): Error: undefined identifier `isInfinite` in module `std.math`,\
    \ did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp0hdpbmtb.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp0hdpbmtb.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp0hdpbmtb.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp0hdpbmtb.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmp0hdpbmtb.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if ( x == y || x == z || y == z )\n        return true;\n\
    \    return false;\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpdwiuvzjv.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ead]\\n??:? void tmpdwiuvzjv.__unittest_L28_C1()\
    \ [0x427a54]\\n??:? void tmpdwiuvzjv.__modtest() [0x427c30]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbd3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa66]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbf9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300a8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb85]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa3d]\\n??:? runModuleUnitTests [0x42b9a9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282fc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428283]\\n??:? _d_run_main [0x4281ee]\\n??:? main [0x427c43]\\\
    n??:? __libc_start_main [0xc9597554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (std.math.isInt(x) && std.math.isInt(y) && std.math.isInt(z))\
    \ {\n        return std.math.isEqual(x + y, z);\n    }\n    return false;\n}\n\
    unittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L)\
    \ == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmplr9j0n96.d(24): Error: undefined identifier `isInt` in module\
    \ `std.math`\\n/tmp/tmplr9j0n96.d(24): Error: undefined identifier `isInt` in\
    \ module `std.math`\\n/tmp/tmplr9j0n96.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmplr9j0n96.d(25): Error: undefined identifier `isEqual`\
    \ in module `std.math`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmplr9j0n96.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.int(x) == std.int(y) + std.int(z);\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpypzbt43d.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpypzbt43d.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpypzbt43d.d(24): Error: identifier expected following `.`, not\
    \ `int`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpypzbt43d.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return ((std.math.isInt(x) && std.math.isInt(y) && std.math.isInt(z))\
    \ || (std.math.isInt(x) && std.math.isInt(z) && std.math.isInt(y)) || (std.math.isInt(y)\
    \ && std.math.isInt(x) && std.math.isInt(z)) || (std.math.isInt(y) && std.math.isInt(z)\
    \ && std.math.isInt(x)));\n}\nunittest\n{\n    alias candidate = any_int;\n\n\
    \    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpu6isdhd6.d(24): Error: undefined identifier `isInt` in module\
    \ `std.math`\\n/tmp/tmpu6isdhd6.d(24): Error: undefined identifier `isInt` in\
    \ module `std.math`\\n/tmp/tmpu6isdhd6.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpu6isdhd6.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpu6isdhd6.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpu6isdhd6.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpu6isdhd6.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpu6isdhd6.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpu6isdhd6.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpu6isdhd6.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpu6isdhd6.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpu6isdhd6.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpu6isdhd6.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (std.math.isnan(x) || std.math.isnan(y) || std.math.isnan(z))\
    \ return false;\n    \n    if (std.math.isinf(x) || std.math.isinf(y) || std.math.isinf(z))\
    \ return false;\n    \n    if (std.math.isinf(x) && std.math.isinf(y) && std.math.isinf(z))\
    \ return false;\n    \n    if (std.math.isinf(x) && std.math.isinf(y) || std.math.isinf(z)\
    \ && std.math.isinf(y)) return false;\n    \n    if (std.math.isinf(x) && std.math.isinf(z)\
    \ || std.math.isinf(y) && std.math.isinf(z)) return false;\n    \n    if (std.math.isinf(x)\
    \ || std.math.isinf(y) || std.math.isinf(z)) return false;\n    \n    if (std.math.isnan(x)\
    \ && std.math.isnan(y) && std.math.isnan(z)) return false;\n    \n    if (std.math.isnan(x)\
    \ && std.math.isnan(y) || std.math.isnan(z) && std.math.isnan(y)) return false;\n\
    \    \n    if (std.math.isnan(x) && std.math.isnan(z) || std.math.isnan(y) &&\
    \ std.math.isnan(z)) return false;\n    \n    if (std.math.isnan(x) || std.math.isnan(y)\
    \ || std.math.isnan(z)) return false;\n    \n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    \n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ || std.math.isinf(z) && std.math.isinf(y)) return false;\n    \n    if (std.math.isinf(x)\
    \ && std.math.isinf(z) || std.math.isinf(y) && std.math.isinf(z)) return false;\n\
    \    \n    if (std.math.isinf(x) || std.math.isinf(y) || std.math.isinf(z)) return\
    \ false;\n    \n    if (std.math.isnan(x) && std.math.isnan(y) && std.math.isnan(z))\
    \ return false;\n    \n    if (std.math.isnan(x) && std.math.isnan(y) || std.math.isnan(z)\
    \ && std.math.isnan(y)) return false;\n    \n    if (std.math.isnan(x) && std.math.isnan(z)\
    \ || std.math.isnan(y) && st\nunittest\n{\n    alias candidate = any_int;\n\n\
    \    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpo9p5kpm_.d(57): Error: found `unittest` when expecting `)`\\\
    n/tmp/tmpo9p5kpm_.d(72): Error: found `End of File` when expecting `}` following\
    \ compound statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo9p5kpm_.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (std.math.isInt(x) && std.math.isInt(y) && std.math.isInt(z))\
    \ {\n        return std.math.isEqual(x + y, z);\n    }\n    return false;\n}\n\
    unittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L)\
    \ == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8fvh15rr.d(24): Error: undefined identifier `isInt` in module\
    \ `std.math`\\n/tmp/tmp8fvh15rr.d(24): Error: undefined identifier `isInt` in\
    \ module `std.math`\\n/tmp/tmp8fvh15rr.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp8fvh15rr.d(25): Error: undefined identifier `isEqual`\
    \ in module `std.math`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmp8fvh15rr.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.math.isInfinite(x) || std.math.isInfinite(y) ||\
    \ std.math.isInfinite(z) || std.math.isInfinite(x + y) || std.math.isInfinite(x\
    \ + z) || std.math.isInfinite(y + z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp06h23k2v.d(24): Error: undefined identifier `isInfinite` in module\
    \ `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\\
    n/tmp/tmp06h23k2v.d(24): Error: undefined identifier `isInfinite` in module `std.math`,\
    \ did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp06h23k2v.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp06h23k2v.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp06h23k2v.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp06h23k2v.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmp06h23k2v.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.math.isInfinite(x) || std.math.isInfinite(y) ||\
    \ std.math.isInfinite(z) || std.math.isInfinite(x+y) || std.math.isInfinite(x+z)\
    \ || std.math.isInfinite(y+z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7sbsp227.d(24): Error: undefined identifier `isInfinite` in module\
    \ `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\\
    n/tmp/tmp7sbsp227.d(24): Error: undefined identifier `isInfinite` in module `std.math`,\
    \ did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp7sbsp227.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp7sbsp227.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp7sbsp227.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp7sbsp227.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmp7sbsp227.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.math.isInfinite(x) || std.math.isInfinite(y) ||\
    \ std.math.isInfinite(z) || std.math.isInfinite(x + y) || std.math.isInfinite(x\
    \ + z) || std.math.isInfinite(y + z) || std.math.isInfinite(x + y + z);\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp56wx0cn5.d(24): Error: undefined identifier `isInfinite` in module\
    \ `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\\
    n/tmp/tmp56wx0cn5.d(24): Error: undefined identifier `isInfinite` in module `std.math`,\
    \ did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp56wx0cn5.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp56wx0cn5.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp56wx0cn5.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp56wx0cn5.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp56wx0cn5.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmp56wx0cn5.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.math.isInfinite(x) || std.math.isInfinite(y) ||\
    \ std.math.isInfinite(z) || std.math.isInfinite(x+y) || std.math.isInfinite(x+z)\
    \ || std.math.isInfinite(y+z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzxqxzx9y.d(24): Error: undefined identifier `isInfinite` in module\
    \ `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\\
    n/tmp/tmpzxqxzx9y.d(24): Error: undefined identifier `isInfinite` in module `std.math`,\
    \ did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpzxqxzx9y.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpzxqxzx9y.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpzxqxzx9y.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpzxqxzx9y.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpzxqxzx9y.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.math.isInt(x) && std.math.isInt(y) && std.math.isInt(z);\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpaljkkk4a.d(24): Error: undefined identifier `isInt` in module\
    \ `std.math`\\n/tmp/tmpaljkkk4a.d(24): Error: undefined identifier `isInt` in\
    \ module `std.math`\\n/tmp/tmpaljkkk4a.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpaljkkk4a.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return ((std.int(x) == std.int(y)) || (std.int(y) == std.int(z))\
    \ || (std.int(z) == std.int(x)));\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzk0enurx.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpzk0enurx.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpzk0enurx.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpzk0enurx.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpzk0enurx.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpzk0enurx.d(24): Error: identifier expected following `.`, not\
    \ `int`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzk0enurx.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.math.isInfinite(x) || std.math.isInfinite(y) ||\
    \ std.math.isInfinite(z) || std.math.isInfinite(x + y) || std.math.isInfinite(x\
    \ + z) || std.math.isInfinite(y + z) || std.math.isInfinite(x - y) || std.math.isInfinite(x\
    \ - z) || std.math.isInfinite(y - z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpltmuwtql.d(24): Error: undefined identifier `isInfinite` in module\
    \ `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\\
    n/tmp/tmpltmuwtql.d(24): Error: undefined identifier `isInfinite` in module `std.math`,\
    \ did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpltmuwtql.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpltmuwtql.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpltmuwtql.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpltmuwtql.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpltmuwtql.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpltmuwtql.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpltmuwtql.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpltmuwtql.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    bool result = false;\n    if (std.math.isInt(x) && std.math.isInt(y)\
    \ && std.math.isInt(z)) {\n        result = std.math.isEqual(x + y, z);\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpl_tu5fpu.d(25): Error: undefined identifier `isInt` in module\
    \ `std.math`\\n/tmp/tmpl_tu5fpu.d(25): Error: undefined identifier `isInt` in\
    \ module `std.math`\\n/tmp/tmpl_tu5fpu.d(25): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpl_tu5fpu.d(26): Error: undefined identifier `isEqual`\
    \ in module `std.math`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpl_tu5fpu.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.math.isInfinite(x) || std.math.isInfinite(y) ||\
    \ std.math.isInfinite(z) || std.math.isInfinite(x+y) || std.math.isInfinite(x+z)\
    \ || std.math.isInfinite(y+z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpj6gw0f0e.d(24): Error: undefined identifier `isInfinite` in module\
    \ `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\\
    n/tmp/tmpj6gw0f0e.d(24): Error: undefined identifier `isInfinite` in module `std.math`,\
    \ did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpj6gw0f0e.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpj6gw0f0e.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpj6gw0f0e.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpj6gw0f0e.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpj6gw0f0e.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (x == y || x == z || y == z) return true;\n    return false;\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp0vkiqb4y.d(31): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ead]\\n??:? void tmp0vkiqb4y.__unittest_L27_C1()\
    \ [0x427a54]\\n??:? void tmp0vkiqb4y.__modtest() [0x427c30]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbd3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa66]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbf9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300a8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb85]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa3d]\\n??:? runModuleUnitTests [0x42b9a9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282fc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428283]\\n??:? _d_run_main [0x4281ee]\\n??:? main [0x427c43]\\\
    n??:? __libc_start_main [0xb9244554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return ((std.math.isInt(x) && std.math.isInt(y) && std.math.isInt(z))\
    \ || (std.math.isInt(x) && std.math.isInt(y) && !std.math.isInt(z)) || (!std.math.isInt(x)\
    \ && std.math.isInt(y) && std.math.isInt(z)) || (!std.math.isInt(x) && !std.math.isInt(y)\
    \ && !std.math.isInt(z)));\n}\nunittest\n{\n    alias candidate = any_int;\n\n\
    \    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpv0974h58.d(24): Error: undefined identifier `isInt` in module\
    \ `std.math`\\n/tmp/tmpv0974h58.d(24): Error: undefined identifier `isInt` in\
    \ module `std.math`\\n/tmp/tmpv0974h58.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpv0974h58.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpv0974h58.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpv0974h58.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpv0974h58.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpv0974h58.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpv0974h58.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpv0974h58.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpv0974h58.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpv0974h58.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpv0974h58.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return ((std.math.isInt(x) && std.math.isInt(y) && std.math.isInt(z))\
    \ || (std.math.isInt(x) && std.math.isInt(y) && !std.math.isInt(z)) || (!std.math.isInt(x)\
    \ && std.math.isInt(y) && std.math.isInt(z)) || (!std.math.isInt(x) && !std.math.isInt(y)\
    \ && !std.math.isInt(z)));\n}\nunittest\n{\n    alias candidate = any_int;\n\n\
    \    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1y1ug9mk.d(24): Error: undefined identifier `isInt` in module\
    \ `std.math`\\n/tmp/tmp1y1ug9mk.d(24): Error: undefined identifier `isInt` in\
    \ module `std.math`\\n/tmp/tmp1y1ug9mk.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp1y1ug9mk.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp1y1ug9mk.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp1y1ug9mk.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp1y1ug9mk.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp1y1ug9mk.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp1y1ug9mk.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp1y1ug9mk.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp1y1ug9mk.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp1y1ug9mk.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmp1y1ug9mk.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.int(x) == std.int(y) + std.int(z);\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7hl13zsm.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmp7hl13zsm.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmp7hl13zsm.d(24): Error: identifier expected following `.`, not\
    \ `int`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7hl13zsm.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if ( x == y || x == z || y == z ) return true;\n    else return\
    \ false;\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpaw1v_67p.d(31): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ead]\\n??:? void tmpaw1v_67p.__unittest_L27_C1()\
    \ [0x427a54]\\n??:? void tmpaw1v_67p.__modtest() [0x427c30]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbd3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa66]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbf9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300a8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb85]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa3d]\\n??:? runModuleUnitTests [0x42b9a9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282fc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428283]\\n??:? _d_run_main [0x4281ee]\\n??:? main [0x427c43]\\\
    n??:? __libc_start_main [0xb7588554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.int(x) == std.int(y) + std.int(z);\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpb5xwv84w.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpb5xwv84w.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpb5xwv84w.d(24): Error: identifier expected following `.`, not\
    \ `int`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb5xwv84w.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return ((x == x + y) && (x == x + z) && (y == y + z));\n}\n\
    unittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L)\
    \ == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpzn_kgncc.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427edd]\\n??:? void tmpzn_kgncc.__unittest_L26_C1()\
    \ [0x427a84]\\n??:? void tmpzn_kgncc.__modtest() [0x427c60]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bc03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa96]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300d8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fbb5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa6d]\\n??:? runModuleUnitTests [0x42b9d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42832c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4282b3]\\n??:? _d_run_main [0x42821e]\\n??:? main [0x427c73]\\\
    n??:? __libc_start_main [0xece58554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.math.isInfinite(x) || std.math.isInfinite(y) ||\
    \ std.math.isInfinite(z) || std.math.isInfinite(x + y) || std.math.isInfinite(x\
    \ + z) || std.math.isInfinite(y + z) || std.math.isInfinite(x - y) || std.math.isInfinite(x\
    \ - z) || std.math.isInfinite(y - z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqhz95ig1.d(24): Error: undefined identifier `isInfinite` in module\
    \ `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\\
    n/tmp/tmpqhz95ig1.d(24): Error: undefined identifier `isInfinite` in module `std.math`,\
    \ did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpqhz95ig1.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpqhz95ig1.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpqhz95ig1.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpqhz95ig1.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpqhz95ig1.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpqhz95ig1.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpqhz95ig1.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpqhz95ig1.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return ((std.math.isInt(x) && std.math.isInt(y) && std.math.isInt(z))\
    \ || (std.math.isInt(x) && std.math.isInt(z) && std.math.isInt(y)) || (std.math.isInt(y)\
    \ && std.math.isInt(x) && std.math.isInt(z)) || (std.math.isInt(y) && std.math.isInt(z)\
    \ && std.math.isInt(x)));\n}\nunittest\n{\n    alias candidate = any_int;\n\n\
    \    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7h78njyc.d(24): Error: undefined identifier `isInt` in module\
    \ `std.math`\\n/tmp/tmp7h78njyc.d(24): Error: undefined identifier `isInt` in\
    \ module `std.math`\\n/tmp/tmp7h78njyc.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp7h78njyc.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp7h78njyc.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp7h78njyc.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp7h78njyc.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp7h78njyc.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp7h78njyc.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp7h78njyc.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp7h78njyc.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp7h78njyc.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmp7h78njyc.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return ((std.math.isInt(x) && std.math.isInt(y) && std.math.isInt(z))\
    \ || (std.math.isInt(x) && std.math.isInt(y) && !std.math.isInt(z)) || (!std.math.isInt(x)\
    \ && std.math.isInt(y) && std.math.isInt(z)) || (!std.math.isInt(x) && !std.math.isInt(y)\
    \ && !std.math.isInt(z)));\n}\nunittest\n{\n    alias candidate = any_int;\n\n\
    \    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpglff309t.d(24): Error: undefined identifier `isInt` in module\
    \ `std.math`\\n/tmp/tmpglff309t.d(24): Error: undefined identifier `isInt` in\
    \ module `std.math`\\n/tmp/tmpglff309t.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpglff309t.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpglff309t.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpglff309t.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpglff309t.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpglff309t.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpglff309t.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpglff309t.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpglff309t.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpglff309t.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpglff309t.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == std.math.fadd(x, y) && y == std.math.fadd(y,\
    \ z) && z == std.math.fadd(z, x));\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp76je6gjk.d(24): Error: undefined identifier `fadd` in module\
    \ `std.math`, did you mean function `fmod`?\\n/tmp/tmp76je6gjk.d(24): Error: undefined\
    \ identifier `fadd` in module `std.math`, did you mean function `fmod`?\\n/tmp/tmp76je6gjk.d(24):\
    \ Error: undefined identifier `fadd` in module `std.math`, did you mean function\
    \ `fmod`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp76je6gjk.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (std.math.isInt(x) && std.math.isInt(y) && std.math.isInt(z))\
    \ {\n        return std.math.isEqual(x, y, z);\n    }\n    return false;\n}\n\
    unittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L)\
    \ == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdmzcjffm.d(24): Error: undefined identifier `isInt` in module\
    \ `std.math`\\n/tmp/tmpdmzcjffm.d(24): Error: undefined identifier `isInt` in\
    \ module `std.math`\\n/tmp/tmpdmzcjffm.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpdmzcjffm.d(25): Error: undefined identifier `isEqual`\
    \ in module `std.math`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpdmzcjffm.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.math.isInfinite(x) || std.math.isInfinite(y) ||\
    \ std.math.isInfinite(z) || std.math.isInfinite(x + y) || std.math.isInfinite(x\
    \ + z) || std.math.isInfinite(y + z) || std.math.isInfinite(x - y) || std.math.isInfinite(x\
    \ - z) || std.math.isInfinite(y - z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmperksgi8r.d(24): Error: undefined identifier `isInfinite` in module\
    \ `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\\
    n/tmp/tmperksgi8r.d(24): Error: undefined identifier `isInfinite` in module `std.math`,\
    \ did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmperksgi8r.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmperksgi8r.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmperksgi8r.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmperksgi8r.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmperksgi8r.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmperksgi8r.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmperksgi8r.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmperksgi8r.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.int(x) == std.int(y) + std.int(z);\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpv4r3xqlx.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpv4r3xqlx.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpv4r3xqlx.d(24): Error: identifier expected following `.`, not\
    \ `int`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv4r3xqlx.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.math.isInfinite(x) || std.math.isInfinite(y) ||\
    \ std.math.isInfinite(z) || std.math.isInfinite(x + y) || std.math.isInfinite(x\
    \ + z) || std.math.isInfinite(y + z) || std.math.isInfinite(x + y + z);\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9rotjmf0.d(24): Error: undefined identifier `isInfinite` in module\
    \ `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\\
    n/tmp/tmp9rotjmf0.d(24): Error: undefined identifier `isInfinite` in module `std.math`,\
    \ did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp9rotjmf0.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp9rotjmf0.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp9rotjmf0.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp9rotjmf0.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp9rotjmf0.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmp9rotjmf0.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (std.math.isInt(x) && std.math.isInt(y) && std.math.isInt(z))\
    \ {\n        return std.math.isEqual(x + y, z);\n    }\n    return false;\n}\n\
    unittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L)\
    \ == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1_csfjki.d(24): Error: undefined identifier `isInt` in module\
    \ `std.math`\\n/tmp/tmp1_csfjki.d(24): Error: undefined identifier `isInt` in\
    \ module `std.math`\\n/tmp/tmp1_csfjki.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp1_csfjki.d(25): Error: undefined identifier `isEqual`\
    \ in module `std.math`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmp1_csfjki.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    bool result = false;\n    \n    if ( x == y )\n    {\n   \
    \     if ( x == z )\n        {\n            result = true;\n        }\n    }\n\
    \    \n    return result;\n}\nunittest\n{\n    alias candidate = any_int;\n\n\
    \    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpmri6r_g6.d(40): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ead]\\n??:? void tmpmri6r_g6.__unittest_L36_C1()\
    \ [0x427a54]\\n??:? void tmpmri6r_g6.__modtest() [0x427c30]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbd3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa66]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbf9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300a8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb85]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa3d]\\n??:? runModuleUnitTests [0x42b9a9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282fc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428283]\\n??:? _d_run_main [0x4281ee]\\n??:? main [0x427c43]\\\
    n??:? __libc_start_main [0x45f9a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.int(x) == std.int(y) + std.int(z);\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpz_4zsafm.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpz_4zsafm.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpz_4zsafm.d(24): Error: identifier expected following `.`, not\
    \ `int`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz_4zsafm.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (std.math.isInt(x) && std.math.isInt(y) && std.math.isInt(z))\n\
    \    {\n        return (x == std.math.add(x, y) && y == std.math.add(y, z) &&\
    \ z == std.math.add(z, x));\n    }\n    return false;\n}\nunittest\n{\n    alias\
    \ candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfu5_pjp2.d(24): Error: undefined identifier `isInt` in module\
    \ `std.math`\\n/tmp/tmpfu5_pjp2.d(24): Error: undefined identifier `isInt` in\
    \ module `std.math`\\n/tmp/tmpfu5_pjp2.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpfu5_pjp2.d(26): Error: undefined identifier `add`\
    \ in module `std.math`\\n/tmp/tmpfu5_pjp2.d(26): Error: undefined identifier `add`\
    \ in module `std.math`\\n/tmp/tmpfu5_pjp2.d(26): Error: undefined identifier `add`\
    \ in module `std.math`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpfu5_pjp2.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.math.isInt.any(x, y, z);\n}\nunittest\n{\n    alias\
    \ candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpe_qrmvss.d(24): Error: undefined identifier `isInt` in module\
    \ `std.math`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpe_qrmvss.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if ( std.math.isnan(x) || std.math.isnan(y) || std.math.isnan(z)\
    \ ) \n    {\n        return false;\n    }\n    \n    if ( std.math.isinf(x) ||\
    \ std.math.isinf(y) || std.math.isinf(z) ) \n    {\n        return false;\n  \
    \  }\n    \n    if ( x == y || x == z || y == z ) \n    {\n        return true;\n\
    \    }\n    \n    if ( std.math.abs(x) == std.math.abs(y) && std.math.abs(x) ==\
    \ std.math.abs(z) ) \n    {\n        return true;\n    }\n    \n    return false;\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdx9xwls7.d(24): Error: undefined identifier `isnan` in module\
    \ `std.math`\\n/tmp/tmpdx9xwls7.d(24): Error: undefined identifier `isnan` in\
    \ module `std.math`\\n/tmp/tmpdx9xwls7.d(24): Error: undefined identifier `isnan`\
    \ in module `std.math`\\n/tmp/tmpdx9xwls7.d(29): Error: undefined identifier `isinf`\
    \ in module `std.math`\\n/tmp/tmpdx9xwls7.d(29): Error: undefined identifier `isinf`\
    \ in module `std.math`\\n/tmp/tmpdx9xwls7.d(29): Error: undefined identifier `isinf`\
    \ in module `std.math`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpdx9xwls7.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return ((std.int(x) == std.int(y)) && std.int(z) == std.int(x\
    \ + y + z));\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpnz000jg7.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpnz000jg7.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpnz000jg7.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpnz000jg7.d(24): Error: identifier expected following `.`, not\
    \ `int`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnz000jg7.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (std.math.isnan(x) || std.math.isnan(y) || std.math.isnan(z))\
    \ return false;\n    if (std.math.isinf(x) || std.math.isinf(y) || std.math.isinf(z))\
    \ return false;\n    if (x == y && y == z) return true;\n    if (x == z) return\
    \ true;\n    if (y == z) return true;\n    \n    if (std.typecons.isInt(x) &&\
    \ std.typecons.isInt(y) && std.typecons.isInt(z)) {\n        return std.math.isEqual(x,\
    \ y, z);\n    }\n    \n    return false;\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpphnvjtka.d(24): Error: undefined identifier `isnan` in module\
    \ `std.math`\\n/tmp/tmpphnvjtka.d(24): Error: undefined identifier `isnan` in\
    \ module `std.math`\\n/tmp/tmpphnvjtka.d(24): Error: undefined identifier `isnan`\
    \ in module `std.math`\\n/tmp/tmpphnvjtka.d(25): Error: undefined identifier `isinf`\
    \ in module `std.math`\\n/tmp/tmpphnvjtka.d(25): Error: undefined identifier `isinf`\
    \ in module `std.math`\\n/tmp/tmpphnvjtka.d(25): Error: undefined identifier `isinf`\
    \ in module `std.math`\\n/tmp/tmpphnvjtka.d(30): Error: undefined identifier `isInt`\
    \ in module `std.typecons`\\n/tmp/tmpphnvjtka.d(30): Error: undefined identifier\
    \ `isInt` in module `std.typecons`\\n/tmp/tmpphnvjtka.d(30): Error: undefined\
    \ identifier `isInt` in module `std.typecons`\\n/tmp/tmpphnvjtka.d(31): Error:\
    \ undefined identifier `isEqual` in module `std.math`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpphnvjtka.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    bool result = false;\n    if ( x == y || x == z || y == z\
    \ )\n        result = true;\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpetcqx86u.d(33): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427eb5]\\n??:? void tmpetcqx86u.__unittest_L29_C1()\
    \ [0x427a5c]\\n??:? void tmpetcqx86u.__modtest() [0x427c38]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbdb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa6e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc01]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb8d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa45]\\n??:? runModuleUnitTests [0x42b9b1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428304]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42828b]\\n??:? _d_run_main [0x4281f6]\\n??:? main [0x427c4b]\\\
    n??:? __libc_start_main [0x16c51554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if ( x == y || x == z || y == z )\n        return true;\n\
    \    else\n        return false;\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpgvbkfzhh.d(33): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ead]\\n??:? void tmpgvbkfzhh.__unittest_L29_C1()\
    \ [0x427a54]\\n??:? void tmpgvbkfzhh.__modtest() [0x427c30]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbd3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa66]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbf9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300a8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb85]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa3d]\\n??:? runModuleUnitTests [0x42b9a9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282fc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428283]\\n??:? _d_run_main [0x4281ee]\\n??:? main [0x427c43]\\\
    n??:? __libc_start_main [0xb8ab6554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.int(x) == std.int(y) && std.int(y) == std.int(z);\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpel8q9qom.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpel8q9qom.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpel8q9qom.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpel8q9qom.d(24): Error: identifier expected following `.`, not\
    \ `int`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpel8q9qom.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    bool result = false;\n    \n    if ( x == y || y == z || z\
    \ == x )\n    {\n        result = true;\n    }\n    \n    return result;\n}\n\
    unittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L)\
    \ == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp9vk92aeh.d(37): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427eb5]\\n??:? void tmp9vk92aeh.__unittest_L33_C1()\
    \ [0x427a5c]\\n??:? void tmp9vk92aeh.__modtest() [0x427c38]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbdb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa6e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc01]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb8d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa45]\\n??:? runModuleUnitTests [0x42b9b1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428304]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42828b]\\n??:? _d_run_main [0x4281f6]\\n??:? main [0x427c4b]\\\
    n??:? __libc_start_main [0xcaa55554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.math.isInfinite(x) || std.math.isInfinite(y) ||\
    \ std.math.isInfinite(z) || std.math.isInfinite(x + y) || std.math.isInfinite(x\
    \ + z) || std.math.isInfinite(y + z) || std.math.isInfinite(x - y) || std.math.isInfinite(x\
    \ - z) || std.math.isInfinite(y - z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfj5kfcro.d(24): Error: undefined identifier `isInfinite` in module\
    \ `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\\
    n/tmp/tmpfj5kfcro.d(24): Error: undefined identifier `isInfinite` in module `std.math`,\
    \ did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpfj5kfcro.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpfj5kfcro.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpfj5kfcro.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpfj5kfcro.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpfj5kfcro.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpfj5kfcro.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpfj5kfcro.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpfj5kfcro.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (x == y || x == z || y == z) return true;\n    return false;\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpx81c6ami.d(31): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ead]\\n??:? void tmpx81c6ami.__unittest_L27_C1()\
    \ [0x427a54]\\n??:? void tmpx81c6ami.__modtest() [0x427c30]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbd3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa66]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbf9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300a8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb85]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa3d]\\n??:? runModuleUnitTests [0x42b9a9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282fc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428283]\\n??:? _d_run_main [0x4281ee]\\n??:? main [0x427c43]\\\
    n??:? __libc_start_main [0x6c66d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.math.isInfinite(x) || std.math.isInfinite(y) ||\
    \ std.math.isInfinite(z) || std.math.isInfinite(x+y) || std.math.isInfinite(x+z)\
    \ || std.math.isInfinite(y+z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpawbq0dpj.d(24): Error: undefined identifier `isInfinite` in module\
    \ `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\\
    n/tmp/tmpawbq0dpj.d(24): Error: undefined identifier `isInfinite` in module `std.math`,\
    \ did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpawbq0dpj.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpawbq0dpj.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpawbq0dpj.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpawbq0dpj.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpawbq0dpj.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.math.isInfinite(x) || std.math.isInfinite(y) ||\
    \ std.math.isInfinite(z) || std.math.isInfinite(x + y) || std.math.isInfinite(x\
    \ + z) || std.math.isInfinite(y + z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5zd4hyjc.d(24): Error: undefined identifier `isInfinite` in module\
    \ `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\\
    n/tmp/tmp5zd4hyjc.d(24): Error: undefined identifier `isInfinite` in module `std.math`,\
    \ did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp5zd4hyjc.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp5zd4hyjc.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp5zd4hyjc.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp5zd4hyjc.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmp5zd4hyjc.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.math.isInfinite(x) || std.math.isInfinite(y) ||\
    \ std.math.isInfinite(z) || std.math.isInfinite(x + y) || std.math.isInfinite(x\
    \ + z) || std.math.isInfinite(y + z) || std.math.isInfinite(x - y) || std.math.isInfinite(x\
    \ - z) || std.math.isInfinite(y - z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9d3h9err.d(24): Error: undefined identifier `isInfinite` in module\
    \ `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\\
    n/tmp/tmp9d3h9err.d(24): Error: undefined identifier `isInfinite` in module `std.math`,\
    \ did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp9d3h9err.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp9d3h9err.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp9d3h9err.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp9d3h9err.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp9d3h9err.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp9d3h9err.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp9d3h9err.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmp9d3h9err.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return ((std.math.isInt(x) && std.math.isInt(y) && std.math.isInt(z))\
    \ || (std.math.isInt(x) && std.math.isInt(z) && std.math.isInt(y)) || (std.math.isInt(y)\
    \ && std.math.isInt(x) && std.math.isInt(z)) || (std.math.isInt(y) && std.math.isInt(z)\
    \ && std.math.isInt(x)));\n}\nunittest\n{\n    alias candidate = any_int;\n\n\
    \    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxrxxmfi5.d(24): Error: undefined identifier `isInt` in module\
    \ `std.math`\\n/tmp/tmpxrxxmfi5.d(24): Error: undefined identifier `isInt` in\
    \ module `std.math`\\n/tmp/tmpxrxxmfi5.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpxrxxmfi5.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpxrxxmfi5.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpxrxxmfi5.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpxrxxmfi5.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpxrxxmfi5.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpxrxxmfi5.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpxrxxmfi5.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpxrxxmfi5.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpxrxxmfi5.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpxrxxmfi5.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    bool result = false;\n    \n    float sum = (x + y + z);\n\
    \    \n    if (sum == x)\n    {\n        result = true;\n    }\n    \n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp182zuimm.d(39): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ec5]\\n??:? void tmp182zuimm.__unittest_L35_C1()\
    \ [0x427a68]\\n??:? void tmp182zuimm.__modtest() [0x427c44]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbeb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa7e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc11]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300c0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb9d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa55]\\n??:? runModuleUnitTests [0x42b9c1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428314]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42829b]\\n??:? _d_run_main [0x428206]\\n??:? main [0x427c57]\\\
    n??:? __libc_start_main [0x19d6b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (std.math.isnan(x) || std.math.isnan(y) || std.math.isnan(z))\n\
    \        return false;\n    \n    if (x == y || x == z)\n        return true;\n\
    \    \n    if (y == z)\n        return true;\n    \n    if (x < y && y < z)\n\
    \        return true;\n    \n    if (y < x && x < z)\n        return true;\n \
    \   \n    return false;\n}\nunittest\n{\n    alias candidate = any_int;\n\n  \
    \  assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) ==\
    \ false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2luhjlqy.d(24): Error: undefined identifier `isnan` in module\
    \ `std.math`\\n/tmp/tmp2luhjlqy.d(24): Error: undefined identifier `isnan` in\
    \ module `std.math`\\n/tmp/tmp2luhjlqy.d(24): Error: undefined identifier `isnan`\
    \ in module `std.math`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmp2luhjlqy.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return ((std.math.rem(x,y) == 0.0) && (std.math.rem(y,z) ==\
    \ 0.0) && (std.math.rem(x,z) == 0.0));\n}\nunittest\n{\n    alias candidate =\
    \ any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpd9t6yufw.d(24): Error: undefined identifier `rem` in module `std.math`\\\
    n/tmp/tmpd9t6yufw.d(24): Error: undefined identifier `rem` in module `std.math`\\\
    n/tmp/tmpd9t6yufw.d(24): Error: undefined identifier `rem` in module `std.math`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpd9t6yufw.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.int(x) == std.int(y) + std.int(z);\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpv8anpy7r.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpv8anpy7r.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpv8anpy7r.d(24): Error: identifier expected following `.`, not\
    \ `int`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv8anpy7r.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.math.isInfinite(x) || std.math.isInfinite(y) ||\
    \ std.math.isInfinite(z) || std.math.isInfinite(x + y) || std.math.isInfinite(x\
    \ + z) || std.math.isInfinite(y + z) || std.math.isInfinite(x - y) || std.math.isInfinite(x\
    \ - z) || std.math.isInfinite(y - z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsi6rmbug.d(24): Error: undefined identifier `isInfinite` in module\
    \ `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\\
    n/tmp/tmpsi6rmbug.d(24): Error: undefined identifier `isInfinite` in module `std.math`,\
    \ did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpsi6rmbug.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpsi6rmbug.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpsi6rmbug.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpsi6rmbug.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpsi6rmbug.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpsi6rmbug.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpsi6rmbug.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpsi6rmbug.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (std.math.isInt(x) && std.math.isInt(y) && std.math.isInt(z))\
    \ {\n        return std.math.isEqual(x + y, z);\n    }\n    return false;\n}\n\
    unittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L)\
    \ == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbr7hzt9t.d(24): Error: undefined identifier `isInt` in module\
    \ `std.math`\\n/tmp/tmpbr7hzt9t.d(24): Error: undefined identifier `isInt` in\
    \ module `std.math`\\n/tmp/tmpbr7hzt9t.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpbr7hzt9t.d(25): Error: undefined identifier `isEqual`\
    \ in module `std.math`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpbr7hzt9t.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (std.math.isnan(x) || std.math.isnan(y) || std.math.isnan(z))\
    \ return false;\n    if (std.math.isinf(x) || std.math.isinf(y) || std.math.isinf(z))\
    \ return false;\n    if (std.math.isinf(x) && std.math.isinf(y) && std.math.isinf(z))\
    \ return false;\n    if (std.math.isnan(x) && std.math.isnan(y) && std.math.isnan(z))\
    \ return false;\n    if (std.math.isinf(x) && std.math.isinf(y) && std.math.isinf(z))\
    \ return false;\n    if (std.math.isinf(x) && std.math.isinf(y) && std.math.isnan(z))\
    \ return false;\n    if (std.math.isnan(x) && std.math.isinf(y) && std.math.isnan(z))\
    \ return false;\n    if (std.math.isinf(x) && std.math.isnan(y) && std.math.isnan(z))\
    \ return false;\n    if (std.math.isnan(x) && std.math.isinf(y) && std.math.isnan(z))\
    \ return false;\n    if (std.math.isinf(x) && std.math.isnan(y) && std.math.isinf(z))\
    \ return false;\n    if (std.math.isnan(x) && std.math.isinf(y) && std.math.isinf(z))\
    \ return false;\n    if (std.math.isinf(x) && std.math.isinf(y) && std.math.isnan(z))\
    \ return false;\n    if (std.math.isnan(x) && std.math.isnan(y) && std.math.isinf(z))\
    \ return false;\n    if (std.math.isinf(x) && std.math.isnan(y) && std.math.isnan(z))\
    \ return false;\n    if (std.math.isnan(x) && std.math.isinf(y) && std.math.isinf(z))\
    \ return false;\n    if (std.math.isinf(x) && std.math.isinf(y) && std.math.isnan(z))\
    \ return false;\n    if (std.math.isnan(x) && std.math.isnan(y) && std.math.isinf(z))\
    \ return false;\n    if (std.math.isinf(x) && std.math.isinf(y) && std.math.isnan(z))\
    \ return false;\n    if (std.math.isnan(x) && std.math.isinf(y) && std.math.isinf(z))\
    \ return false;\n    if (std.math.isinf(x) && std.math.isinf(y) && std.math.isinf(z))\
    \ return false;\n    if (std.math.isnan(x\nunittest\n{\n    alias candidate =\
    \ any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp21q4xrsk.d(45): Error: found `unittest` when expecting `,`\\\
    n/tmp/tmp21q4xrsk.d(60): Error: found `void` when expecting `,`\\n/tmp/tmp21q4xrsk.d(60):\
    \ Error: found `{` when expecting `,`\\n/tmp/tmp21q4xrsk.d(60): Error: expression\
    \ expected, not `}`\\n/tmp/tmp21q4xrsk.d(60): Error: found `End of File` when\
    \ expecting `,`\\n/tmp/tmp21q4xrsk.d(60): Error: found `End of File` when expecting\
    \ `)`\\n/tmp/tmp21q4xrsk.d(60): Error: found `End of File` when expecting `)`\\\
    n/tmp/tmp21q4xrsk.d(60): Error: found `End of File` instead of statement\\n/tmp/tmp21q4xrsk.d(60):\
    \ Error: found `End of File` when expecting `}` following compound statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp21q4xrsk.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    bool result = false;\n    \n    if ( x == y )\n    {\n   \
    \     if ( x == z )\n        {\n            result = true;\n        }\n      \
    \  else\n        {\n            result = false;\n        }\n    }\n    else\n\
    \    {\n        result = false;\n    }\n    \n    return result;\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpb5fncutl.d(48): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ebd]\\n??:? void tmpb5fncutl.__unittest_L44_C1()\
    \ [0x427a60]\\n??:? void tmpb5fncutl.__modtest() [0x427c3c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbe3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa76]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc09]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb95]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa4d]\\n??:? runModuleUnitTests [0x42b9b9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42830c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428293]\\n??:? _d_run_main [0x4281fe]\\n??:? main [0x427c4f]\\\
    n??:? __libc_start_main [0x2e24b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == std.math.add(x, y) && y == std.math.add(y, z)\
    \ && z == std.math.add(z, x));\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptwsxdvu8.d(24): Error: undefined identifier `add` in module `std.math`\\\
    n/tmp/tmptwsxdvu8.d(24): Error: undefined identifier `add` in module `std.math`\\\
    n/tmp/tmptwsxdvu8.d(24): Error: undefined identifier `add` in module `std.math`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptwsxdvu8.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.math.isInfinite(x) || std.math.isInfinite(y) ||\
    \ std.math.isInfinite(z) || std.math.isInfinite(x + y) || std.math.isInfinite(x\
    \ + z) || std.math.isInfinite(y + z) || std.math.isInfinite(x - y) || std.math.isInfinite(x\
    \ - z) || std.math.isInfinite(y - z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9dx3_ldn.d(24): Error: undefined identifier `isInfinite` in module\
    \ `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\\
    n/tmp/tmp9dx3_ldn.d(24): Error: undefined identifier `isInfinite` in module `std.math`,\
    \ did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp9dx3_ldn.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp9dx3_ldn.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp9dx3_ldn.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp9dx3_ldn.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp9dx3_ldn.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp9dx3_ldn.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp9dx3_ldn.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmp9dx3_ldn.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.math.isInt(x) && std.math.isInt(y) && std.math.isInt(z);\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmua_oaui.d(24): Error: undefined identifier `isInt` in module\
    \ `std.math`\\n/tmp/tmpmua_oaui.d(24): Error: undefined identifier `isInt` in\
    \ module `std.math`\\n/tmp/tmpmua_oaui.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpmua_oaui.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (x == y && y == z) return true;\n    if (x == z) return\
    \ true;\n    if (y == z) return true;\n    return false;\n}\nunittest\n{\n   \
    \ alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n \
    \   assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmplwy2jxdz.d(33): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ebd]\\n??:? void tmplwy2jxdz.__unittest_L29_C1()\
    \ [0x427a60]\\n??:? void tmplwy2jxdz.__modtest() [0x427c3c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbe3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa76]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc09]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb95]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa4d]\\n??:? runModuleUnitTests [0x42b9b9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42830c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428293]\\n??:? _d_run_main [0x4281fe]\\n??:? main [0x427c4f]\\\
    n??:? __libc_start_main [0xdba5b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.int(x) == std.int(y) + std.int(z);\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmemu63el.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpmemu63el.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpmemu63el.d(24): Error: identifier expected following `.`, not\
    \ `int`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmemu63el.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == std.math.add(x, y) && y == std.math.add(y, z)\
    \ && z == std.math.add(z, x));\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2v8othfy.d(24): Error: undefined identifier `add` in module `std.math`\\\
    n/tmp/tmp2v8othfy.d(24): Error: undefined identifier `add` in module `std.math`\\\
    n/tmp/tmp2v8othfy.d(24): Error: undefined identifier `add` in module `std.math`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2v8othfy.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (std.int(x) == std.int(y) + std.int(z)) return true;\n\
    \    else return false;\n}\nunittest\n{\n    alias candidate = any_int;\n\n  \
    \  assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) ==\
    \ false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgwskxoyz.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpgwskxoyz.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpgwskxoyz.d(24): Error: identifier expected following `.`, not\
    \ `int`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgwskxoyz.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    bool result = false;\n    \n    float xx = x;\n    float yy\
    \ = y;\n    float zz = z;\n    \n    if (x==xx && y==yy && z==zz)\n    {\n   \
    \     result = true;\n    }\n    \n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp8pen8b26.d(42): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ed5]\\n??:? void tmp8pen8b26.__unittest_L37_C1()\
    \ [0x427aaa]\\n??:? void tmp8pen8b26.__modtest() [0x427c54]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbfb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa8e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc21]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300d0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fbad]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa65]\\n??:? runModuleUnitTests [0x42b9d1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428324]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4282ab]\\n??:? _d_run_main [0x428216]\\n??:? main [0x427c67]\\\
    n??:? __libc_start_main [0x54e2d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (x == y || x == z || y == z) return true;\n    else return\
    \ false;\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmphxe807ea.d(31): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ead]\\n??:? void tmphxe807ea.__unittest_L27_C1()\
    \ [0x427a54]\\n??:? void tmphxe807ea.__modtest() [0x427c30]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbd3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa66]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbf9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300a8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb85]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa3d]\\n??:? runModuleUnitTests [0x42b9a9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282fc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428283]\\n??:? _d_run_main [0x4281ee]\\n??:? main [0x427c43]\\\
    n??:? __libc_start_main [0x2eddd554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (std.math.isnan(x) || std.math.isnan(y) || std.math.isnan(z))\n\
    \    {\n        return false;\n    }\n    \n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z))\n    {\n        return false;\n    }\n    \n    if (std.math.isinf(x)\
    \ && std.math.isinf(y) && std.math.isinf(z))\n    {\n        return true;\n  \
    \  }\n    \n    if (std.math.isinf(x) && std.math.isinf(y) && !std.math.isinf(z))\n\
    \    {\n        return true;\n    }\n    \n    if (std.math.isinf(x) && !std.math.isinf(y)\
    \ && std.math.isinf(z))\n    {\n        return true;\n    }\n    \n    if (std.math.isinf(x)\
    \ && !std.math.isinf(y) && !std.math.isinf(z))\n    {\n        return false;\n\
    \    }\n    \n    if (std.math.isnan(x) && std.math.isnan(y) && std.math.isnan(z))\n\
    \    {\n        return false;\n    }\n    \n    if (std.math.isnan(x) && std.math.isnan(y)\
    \ && !std.math.isnan(z))\n    {\n        return false;\n    }\n    \n    if (std.math.isnan(x)\
    \ && !std.math.isnan(y) && std.math.isnan(z))\n    {\n        return false;\n\
    \    }\n    \n    if (std.math.isnan(x) && !std.math.isnan(y) && !std.math.isnan(z))\n\
    \    {\n        return true;\n    }\n    \n    if (x == y && y == z)\n    {\n\
    \        return true;\n    }\n    \n    return false;\n}\nunittest\n{\n    alias\
    \ candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp666iucs2.d(24): Error: undefined identifier `isnan` in module\
    \ `std.math`\\n/tmp/tmp666iucs2.d(24): Error: undefined identifier `isnan` in\
    \ module `std.math`\\n/tmp/tmp666iucs2.d(24): Error: undefined identifier `isnan`\
    \ in module `std.math`\\n/tmp/tmp666iucs2.d(29): Error: undefined identifier `isinf`\
    \ in module `std.math`\\n/tmp/tmp666iucs2.d(29): Error: undefined identifier `isinf`\
    \ in module `std.math`\\n/tmp/tmp666iucs2.d(29): Error: undefined identifier `isinf`\
    \ in module `std.math`\\n/tmp/tmp666iucs2.d(34): Error: undefined identifier `isinf`\
    \ in module `std.math`\\n/tmp/tmp666iucs2.d(34): Error: undefined identifier `isinf`\
    \ in module `std.math`\\n/tmp/tmp666iucs2.d(34): Error: undefined identifier `isinf`\
    \ in module `std.math`\\n/tmp/tmp666iucs2.d(39): Error: undefined identifier `isinf`\
    \ in module `std.math`\\n/tmp/tmp666iucs2.d(39): Error: undefined identifier `isinf`\
    \ in module `std.math`\\n/tmp/tmp666iucs2.d(39): Error: undefined identifier `isinf`\
    \ in module `std.math`\\n/tmp/tmp666iucs2.d(44): Error: undefined identifier `isinf`\
    \ in module `std.math`\\n/tmp/tmp666iucs2.d(44): Error: undefined identifier `isinf`\
    \ in module `std.math`\\n/tmp/tmp666iucs2.d(44): Error: undefined identifier `isinf`\
    \ in module `std.math`\\n/tmp/tmp666iucs2.d(49): Error: undefined identifier `isinf`\
    \ in module `std.math`\\n/tmp/tmp666iucs2.d(49): Error: undefined identifier `isinf`\
    \ in module `std.math`\\n/tmp/tmp666iucs2.d(49): Error: undefined identifier `isinf`\
    \ in module `std.math`\\n/tmp/tmp666iucs2.d(54): Error: undefined identifier `isnan`\
    \ in module `std.math`\\n/tmp/tmp666iucs2.d(54): Error: undefined identifier `isnan`\
    \ in module `std.math`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmp666iucs2.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    bool result = false;\n    if (std.int(x) == std.int(y) + std.int(z)\
    \ && std.int(y) == std.int(z) && std.int(z) == std.int(x)) {\n        result =\
    \ true;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpt2nvgers.d(25): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpt2nvgers.d(25): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpt2nvgers.d(25): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpt2nvgers.d(25): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpt2nvgers.d(25): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpt2nvgers.d(25): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpt2nvgers.d(25): Error: identifier expected following `.`, not\
    \ `int`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt2nvgers.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.math.isInt(x) && std.math.isInt(y) && std.math.isInt(z);\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfmsvb2lh.d(24): Error: undefined identifier `isInt` in module\
    \ `std.math`\\n/tmp/tmpfmsvb2lh.d(24): Error: undefined identifier `isInt` in\
    \ module `std.math`\\n/tmp/tmpfmsvb2lh.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpfmsvb2lh.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return ((std.math.rem(x,y) == 0.0) && (std.math.rem(y,z) ==\
    \ 0.0) && (std.math.rem(x,z) == 0.0));\n}\nunittest\n{\n    alias candidate =\
    \ any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpynk5zie_.d(24): Error: undefined identifier `rem` in module `std.math`\\\
    n/tmp/tmpynk5zie_.d(24): Error: undefined identifier `rem` in module `std.math`\\\
    n/tmp/tmpynk5zie_.d(24): Error: undefined identifier `rem` in module `std.math`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpynk5zie_.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == std.math.add(x, y) && y == std.math.add(y, z)\
    \ && z == std.math.add(z, x));\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqvu8bwi6.d(24): Error: undefined identifier `add` in module `std.math`\\\
    n/tmp/tmpqvu8bwi6.d(24): Error: undefined identifier `add` in module `std.math`\\\
    n/tmp/tmpqvu8bwi6.d(24): Error: undefined identifier `add` in module `std.math`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqvu8bwi6.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.math.isInfinite(x) || std.math.isInfinite(y) ||\
    \ std.math.isInfinite(z) || std.math.isInfinite(x+y) || std.math.isInfinite(x+z)\
    \ || std.math.isInfinite(y+z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9g26w744.d(24): Error: undefined identifier `isInfinite` in module\
    \ `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\\
    n/tmp/tmp9g26w744.d(24): Error: undefined identifier `isInfinite` in module `std.math`,\
    \ did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp9g26w744.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp9g26w744.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp9g26w744.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp9g26w744.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmp9g26w744.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    bool result = false;\n    \n    if ( x == y )\n    {\n   \
    \     result = true;\n    }\n    else if ( x == z )\n    {\n        result = true;\n\
    \    }\n    else\n    {\n        result = false;\n    }\n    \n    return result;\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmph9eahrrc.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ebd]\\n??:? void tmph9eahrrc.__unittest_L41_C1()\
    \ [0x427a60]\\n??:? void tmph9eahrrc.__modtest() [0x427c3c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbe3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa76]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc09]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb95]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa4d]\\n??:? runModuleUnitTests [0x42b9b9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42830c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428293]\\n??:? _d_run_main [0x4281fe]\\n??:? main [0x427c4f]\\\
    n??:? __libc_start_main [0xfad44554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.math.isInfinite(x) || std.math.isInfinite(y) ||\
    \ std.math.isInfinite(z) || std.math.isInfinite(x+y) || std.math.isInfinite(x+z)\
    \ || std.math.isInfinite(y+z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsyy69y0o.d(24): Error: undefined identifier `isInfinite` in module\
    \ `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\\
    n/tmp/tmpsyy69y0o.d(24): Error: undefined identifier `isInfinite` in module `std.math`,\
    \ did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpsyy69y0o.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpsyy69y0o.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpsyy69y0o.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpsyy69y0o.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpsyy69y0o.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.math.isInt.any(x, y, z);\n}\nunittest\n{\n    alias\
    \ candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3dn93w61.d(24): Error: undefined identifier `isInt` in module\
    \ `std.math`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3dn93w61.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (std.math.isInt(x) && std.math.isInt(y) && std.math.isInt(z))\
    \ {\n        return std.math.isEqual(x + y, z);\n    }\n    return false;\n}\n\
    unittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L)\
    \ == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpb9lqb19a.d(24): Error: undefined identifier `isInt` in module\
    \ `std.math`\\n/tmp/tmpb9lqb19a.d(24): Error: undefined identifier `isInt` in\
    \ module `std.math`\\n/tmp/tmpb9lqb19a.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpb9lqb19a.d(25): Error: undefined identifier `isEqual`\
    \ in module `std.math`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpb9lqb19a.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    bool result = false;\n    if (std.math.isInt(x) && std.math.isInt(y)\
    \ && std.math.isInt(z)) {\n        result = std.math.isEqual(x + y, z);\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzo1w7rgo.d(25): Error: undefined identifier `isInt` in module\
    \ `std.math`\\n/tmp/tmpzo1w7rgo.d(25): Error: undefined identifier `isInt` in\
    \ module `std.math`\\n/tmp/tmpzo1w7rgo.d(25): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpzo1w7rgo.d(26): Error: undefined identifier `isEqual`\
    \ in module `std.math`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpzo1w7rgo.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.math.isInt.any(x, y, z);\n}\nunittest\n{\n    alias\
    \ candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpoqmanpju.d(24): Error: undefined identifier `isInt` in module\
    \ `std.math`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpoqmanpju.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return ((std.math.isInt(x) && std.math.isInt(y) && std.math.isInt(z))\
    \ || (std.math.isInt(x) && std.math.isInt(z) && std.math.isInt(y)) || (std.math.isInt(y)\
    \ && std.math.isInt(x) && std.math.isInt(z)) || (std.math.isInt(y) && std.math.isInt(z)\
    \ && std.math.isInt(x)));\n}\nunittest\n{\n    alias candidate = any_int;\n\n\
    \    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9r19c1dc.d(24): Error: undefined identifier `isInt` in module\
    \ `std.math`\\n/tmp/tmp9r19c1dc.d(24): Error: undefined identifier `isInt` in\
    \ module `std.math`\\n/tmp/tmp9r19c1dc.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp9r19c1dc.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp9r19c1dc.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp9r19c1dc.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp9r19c1dc.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp9r19c1dc.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp9r19c1dc.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp9r19c1dc.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp9r19c1dc.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp9r19c1dc.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmp9r19c1dc.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return ((std.int(x) == std.int(y)) || (std.int(y) == std.int(z)));\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpua8bbd4v.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpua8bbd4v.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpua8bbd4v.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpua8bbd4v.d(24): Error: identifier expected following `.`, not\
    \ `int`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpua8bbd4v.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.int(x) == std.int(y) + std.int(z);\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpf4m6nbpi.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpf4m6nbpi.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpf4m6nbpi.d(24): Error: identifier expected following `.`, not\
    \ `int`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf4m6nbpi.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (x == y || x == z || y == z) return true;\n    else return\
    \ false;\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp5_ua5vsc.d(31): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ead]\\n??:? void tmp5_ua5vsc.__unittest_L27_C1()\
    \ [0x427a54]\\n??:? void tmp5_ua5vsc.__modtest() [0x427c30]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbd3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa66]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbf9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300a8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb85]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa3d]\\n??:? runModuleUnitTests [0x42b9a9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282fc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428283]\\n??:? _d_run_main [0x4281ee]\\n??:? main [0x427c43]\\\
    n??:? __libc_start_main [0x60294554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.int(x) == std.int(y) + std.int(z);\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpw8upfd03.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpw8upfd03.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpw8upfd03.d(24): Error: identifier expected following `.`, not\
    \ `int`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw8upfd03.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.int(x) == std.int(y) + std.int(z);\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpm2n046jn.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpm2n046jn.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpm2n046jn.d(24): Error: identifier expected following `.`, not\
    \ `int`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpm2n046jn.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.int(x) == std.int(y) + std.int(z);\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsni578vk.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpsni578vk.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpsni578vk.d(24): Error: identifier expected following `.`, not\
    \ `int`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsni578vk.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (std.math.isnan(x) || std.math.isnan(y) || std.math.isnan(z))\
    \ return false;\n    if (std.math.isinf(x) || std.math.isinf(y) || std.math.isinf(z))\
    \ return false;\n    if (std.math.isinf(x) && std.math.isinf(y) && std.math.isinf(z))\
    \ return false;\n    if (std.math.isinf(x) && std.math.isinf(y) || std.math.isinf(z)\
    \ && std.math.isinf(y)) return false;\n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z)) return false;\n    if (std.math.isnan(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isnan(x) && std.math.isnan(y)\
    \ || std.math.isnan(z) && std.math.isnan(y)) return false;\n    if (std.math.isnan(x)\
    \ || std.math.isnan(y) || std.math.isnan(z)) return false;\n    if (std.math.isinf(x)\
    \ && std.math.isinf(y) && std.math.isinf(z)) return false;\n    if (std.math.isinf(x)\
    \ && std.math.isinf(y) || std.math.isinf(z) && std.math.isinf(y)) return false;\n\
    \    if (std.math.isinf(x) || std.math.isinf(y) || std.math.isinf(z)) return false;\n\
    \    if (std.math.isnan(x) && std.math.isnan(y) && std.math.isnan(z)) return false;\n\
    \    if (std.math.isnan(x) && std.math.isnan(y) || std.math.isnan(z) && std.math.isnan(y))\
    \ return false;\n    if (std.math.isnan(x) || std.math.isnan(y) || std.math.isnan(z))\
    \ return false;\n    if (std.math.isinf(x) && std.math.isinf(y) && std.math.isinf(z))\
    \ return false;\n    if (std.math.isinf(x) && std.math.isinf(y) || std.math.isinf(z)\
    \ && std.math.isinf(y)) return false;\n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z)) return false;\n    return true;\n}\nunittest\n{\n    alias\
    \ candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1qpktesb.d(24): Error: undefined identifier `isnan` in module\
    \ `std.math`\\n/tmp/tmp1qpktesb.d(24): Error: undefined identifier `isnan` in\
    \ module `std.math`\\n/tmp/tmp1qpktesb.d(24): Error: undefined identifier `isnan`\
    \ in module `std.math`\\n/tmp/tmp1qpktesb.d(25): Error: undefined identifier `isinf`\
    \ in module `std.math`\\n/tmp/tmp1qpktesb.d(25): Error: undefined identifier `isinf`\
    \ in module `std.math`\\n/tmp/tmp1qpktesb.d(25): Error: undefined identifier `isinf`\
    \ in module `std.math`\\n/tmp/tmp1qpktesb.d(26): Error: undefined identifier `isinf`\
    \ in module `std.math`\\n/tmp/tmp1qpktesb.d(26): Error: undefined identifier `isinf`\
    \ in module `std.math`\\n/tmp/tmp1qpktesb.d(26): Error: undefined identifier `isinf`\
    \ in module `std.math`\\n/tmp/tmp1qpktesb.d(27): Error: undefined identifier `isinf`\
    \ in module `std.math`\\n/tmp/tmp1qpktesb.d(27): Error: undefined identifier `isinf`\
    \ in module `std.math`\\n/tmp/tmp1qpktesb.d(27): Error: undefined identifier `isinf`\
    \ in module `std.math`\\n/tmp/tmp1qpktesb.d(27): Error: undefined identifier `isinf`\
    \ in module `std.math`\\n/tmp/tmp1qpktesb.d(28): Error: undefined identifier `isinf`\
    \ in module `std.math`\\n/tmp/tmp1qpktesb.d(28): Error: undefined identifier `isinf`\
    \ in module `std.math`\\n/tmp/tmp1qpktesb.d(28): Error: undefined identifier `isinf`\
    \ in module `std.math`\\n/tmp/tmp1qpktesb.d(29): Error: undefined identifier `isnan`\
    \ in module `std.math`\\n/tmp/tmp1qpktesb.d(29): Error: undefined identifier `isnan`\
    \ in module `std.math`\\n/tmp/tmp1qpktesb.d(29): Error: undefined identifier `isnan`\
    \ in module `std.math`\\n/tmp/tmp1qpktesb.d(30): Error: undefined identifier `isnan`\
    \ in module `std.math`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmp1qpktesb.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (std.math.isnan(x) || std.math.isnan(y) || std.math.isnan(z))\n\
    \    {\n        return false;\n    }\n    \n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z))\n    {\n        return false;\n    }\n    \n    if (x\
    \ < 0 || y < 0 || z < 0)\n    {\n        return false;\n    }\n    \n    if (x\
    \ > y || x > z)\n    {\n        return false;\n    }\n    \n    if (y > z)\n \
    \   {\n        return false;\n    }\n    \n    return true;\n}\nunittest\n{\n\
    \    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvyk8a2rq.d(24): Error: undefined identifier `isnan` in module\
    \ `std.math`\\n/tmp/tmpvyk8a2rq.d(24): Error: undefined identifier `isnan` in\
    \ module `std.math`\\n/tmp/tmpvyk8a2rq.d(24): Error: undefined identifier `isnan`\
    \ in module `std.math`\\n/tmp/tmpvyk8a2rq.d(29): Error: undefined identifier `isinf`\
    \ in module `std.math`\\n/tmp/tmpvyk8a2rq.d(29): Error: undefined identifier `isinf`\
    \ in module `std.math`\\n/tmp/tmpvyk8a2rq.d(29): Error: undefined identifier `isinf`\
    \ in module `std.math`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpvyk8a2rq.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if ( x == y )\n    {\n        if ( x == z )\n        {\n \
    \           return true;\n        }\n        else\n        {\n            return\
    \ false;\n        }\n    }\n    else\n    {\n        return false;\n    }\n}\n\
    unittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L)\
    \ == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpuzucw5ko.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ead]\\n??:? void tmpuzucw5ko.__unittest_L40_C1()\
    \ [0x427a50]\\n??:? void tmpuzucw5ko.__modtest() [0x427c2c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbd3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa66]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbf9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300a8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb85]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa3d]\\n??:? runModuleUnitTests [0x42b9a9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282fc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428283]\\n??:? _d_run_main [0x4281ee]\\n??:? main [0x427c3f]\\\
    n??:? __libc_start_main [0x7132f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if ( x == y )\n    {\n        if ( x == z )\n        {\n \
    \           return true;\n        }\n        else\n        {\n            return\
    \ false;\n        }\n    }\n    else\n    {\n        return false;\n    }\n}\n\
    unittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L)\
    \ == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpleufcjcf.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ead]\\n??:? void tmpleufcjcf.__unittest_L40_C1()\
    \ [0x427a50]\\n??:? void tmpleufcjcf.__modtest() [0x427c2c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbd3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa66]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbf9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300a8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb85]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa3d]\\n??:? runModuleUnitTests [0x42b9a9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282fc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428283]\\n??:? _d_run_main [0x4281ee]\\n??:? main [0x427c3f]\\\
    n??:? __libc_start_main [0x221de554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (std.math.isInt(x) && std.math.isInt(y) && std.math.isInt(z))\
    \ {\n        return std.math.isEqual(x + y, z);\n    }\n    return false;\n}\n\
    unittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L)\
    \ == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpebz1g3bi.d(24): Error: undefined identifier `isInt` in module\
    \ `std.math`\\n/tmp/tmpebz1g3bi.d(24): Error: undefined identifier `isInt` in\
    \ module `std.math`\\n/tmp/tmpebz1g3bi.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpebz1g3bi.d(25): Error: undefined identifier `isEqual`\
    \ in module `std.math`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpebz1g3bi.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    bool result = false;\n    \n    if ( x == y )\n    {\n   \
    \     if ( x == z )\n        {\n            result = true;\n        }\n    }\n\
    \    else\n    {\n        if ( x == z )\n        {\n            result = true;\n\
    \        }\n    }\n    \n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp4flk0_e7.d(47): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ebd]\\n??:? void tmp4flk0_e7.__unittest_L43_C1()\
    \ [0x427a60]\\n??:? void tmp4flk0_e7.__modtest() [0x427c3c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbe3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa76]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc09]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb95]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa4d]\\n??:? runModuleUnitTests [0x42b9b9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42830c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428293]\\n??:? _d_run_main [0x4281fe]\\n??:? main [0x427c4f]\\\
    n??:? __libc_start_main [0x53e98554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.math.isInfinite(x) || std.math.isInfinite(y) ||\
    \ std.math.isInfinite(z) || std.math.isInfinite(x + y) || std.math.isInfinite(x\
    \ + z) || std.math.isInfinite(y + z) || std.math.isInfinite(x - y) || std.math.isInfinite(x\
    \ - z) || std.math.isInfinite(y - z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpks4qa6px.d(24): Error: undefined identifier `isInfinite` in module\
    \ `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\\
    n/tmp/tmpks4qa6px.d(24): Error: undefined identifier `isInfinite` in module `std.math`,\
    \ did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpks4qa6px.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpks4qa6px.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpks4qa6px.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpks4qa6px.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpks4qa6px.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpks4qa6px.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpks4qa6px.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpks4qa6px.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.math.isInfinite(x) || std.math.isInfinite(y) ||\
    \ std.math.isInfinite(z) || std.math.isInfinite(x+y) || std.math.isInfinite(x+z)\
    \ || std.math.isInfinite(y+z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbxx0_wa6.d(24): Error: undefined identifier `isInfinite` in module\
    \ `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\\
    n/tmp/tmpbxx0_wa6.d(24): Error: undefined identifier `isInfinite` in module `std.math`,\
    \ did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpbxx0_wa6.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpbxx0_wa6.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpbxx0_wa6.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpbxx0_wa6.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpbxx0_wa6.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.math.isInfinite(x) || std.math.isInfinite(y) ||\
    \ std.math.isInfinite(z) || std.math.isInfinite(x+y) || std.math.isInfinite(x+z)\
    \ || std.math.isInfinite(y+z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvg03g4_j.d(24): Error: undefined identifier `isInfinite` in module\
    \ `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\\
    n/tmp/tmpvg03g4_j.d(24): Error: undefined identifier `isInfinite` in module `std.math`,\
    \ did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpvg03g4_j.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpvg03g4_j.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpvg03g4_j.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpvg03g4_j.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpvg03g4_j.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (std.int(x) == std.int(y) + std.int(z)) return true;\n\
    \    return false;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=c++,c++11 |>\n<code>\n\
    unittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L)\
    \ == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpt0ocy8hb.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpt0ocy8hb.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpt0ocy8hb.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpt0ocy8hb.d(27): Error: declaration expected, not `<`\\n/tmp/tmpt0ocy8hb.d(35):\
    \ Error: declaration expected, not `assert`\\n/tmp/tmpt0ocy8hb.d(36): Error: declaration\
    \ expected, not `assert`\\n/tmp/tmpt0ocy8hb.d(37): Error: declaration expected,\
    \ not `assert`\\n/tmp/tmpt0ocy8hb.d(38): Error: declaration expected, not `assert`\\\
    n/tmp/tmpt0ocy8hb.d(39): Error: declaration expected, not `assert`\\n/tmp/tmpt0ocy8hb.d(40):\
    \ Error: declaration expected, not `assert`\\n/tmp/tmpt0ocy8hb.d(41): Error: declaration\
    \ expected, not `assert`\\n/tmp/tmpt0ocy8hb.d(42): Error: declaration expected,\
    \ not `assert`\\n/tmp/tmpt0ocy8hb.d(43): Error: declaration expected, not `assert`\\\
    n/tmp/tmpt0ocy8hb.d(44): Error: declaration expected, not `assert`\\n/tmp/tmpt0ocy8hb.d(45):\
    \ Error: unrecognized declaration\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpt0ocy8hb.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.math.isInt(x) && std.math.isInt(y) && std.math.isInt(z);\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpp8eqpdmo.d(24): Error: undefined identifier `isInt` in module\
    \ `std.math`\\n/tmp/tmpp8eqpdmo.d(24): Error: undefined identifier `isInt` in\
    \ module `std.math`\\n/tmp/tmpp8eqpdmo.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpp8eqpdmo.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return ((std.math.isInt(x) && std.math.isInt(y) && std.math.isInt(z))\
    \ || (std.math.isInt(x) && std.math.isInt(y) && !std.math.isInt(z)) || (!std.math.isInt(x)\
    \ && !std.math.isInt(y) && std.math.isInt(z)));\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpe2j6aynw.d(24): Error: undefined identifier `isInt` in module\
    \ `std.math`\\n/tmp/tmpe2j6aynw.d(24): Error: undefined identifier `isInt` in\
    \ module `std.math`\\n/tmp/tmpe2j6aynw.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpe2j6aynw.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpe2j6aynw.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpe2j6aynw.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpe2j6aynw.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpe2j6aynw.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpe2j6aynw.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpe2j6aynw.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.math.isInfinite(x) || std.math.isInfinite(y) ||\
    \ std.math.isInfinite(z) || std.math.isInfinite(x+y) || std.math.isInfinite(x+z)\
    \ || std.math.isInfinite(y+z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp12l4k23r.d(24): Error: undefined identifier `isInfinite` in module\
    \ `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\\
    n/tmp/tmp12l4k23r.d(24): Error: undefined identifier `isInfinite` in module `std.math`,\
    \ did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp12l4k23r.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp12l4k23r.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp12l4k23r.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp12l4k23r.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmp12l4k23r.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (std.math.isInt(x) && std.math.isInt(y) && std.math.isInt(z))\
    \ {\n        return std.math.isEqual(x + y, z);\n    }\n    return false;\n}\n\
    unittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L)\
    \ == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpijq4d3wl.d(24): Error: undefined identifier `isInt` in module\
    \ `std.math`\\n/tmp/tmpijq4d3wl.d(24): Error: undefined identifier `isInt` in\
    \ module `std.math`\\n/tmp/tmpijq4d3wl.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpijq4d3wl.d(25): Error: undefined identifier `isEqual`\
    \ in module `std.math`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpijq4d3wl.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.int(x) == std.int(y) + std.int(z);\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4u7u7vpi.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmp4u7u7vpi.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmp4u7u7vpi.d(24): Error: identifier expected following `.`, not\
    \ `int`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4u7u7vpi.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.int(x) == std.int(y) + std.int(z);\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpca9cgdeu.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpca9cgdeu.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpca9cgdeu.d(24): Error: identifier expected following `.`, not\
    \ `int`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpca9cgdeu.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (std.math.isnan(x) || std.math.isnan(y) || std.math.isnan(z))\
    \ return false;\n    if (std.math.isinf(x) || std.math.isinf(y) || std.math.isinf(z))\
    \ return false;\n    if (std.math.isinf(x) && std.math.isinf(y) && std.math.isinf(z))\
    \ return false;\n    if (std.math.isnan(x) && std.math.isnan(y) && std.math.isnan(z))\
    \ return false;\n    if (std.math.isinf(x) && std.math.isinf(y) && std.math.isinf(z))\
    \ return false;\n    if (std.math.isinf(x) && std.math.isinf(y) && std.math.isnan(z))\
    \ return false;\n    if (std.math.isnan(x) && std.math.isinf(y) && std.math.isnan(z))\
    \ return false;\n    if (std.math.isinf(x) && std.math.isnan(y) && std.math.isinf(z))\
    \ return false;\n    if (std.math.isnan(x) && std.math.isinf(y) && std.math.isnan(z))\
    \ return false;\n    if (std.math.isinf(x) && std.math.isnan(y) && std.math.isnan(z))\
    \ return false;\n    if (std.math.isnan(x) && std.math.isinf(y) && std.math.isnan(z))\
    \ return false;\n    if (std.math.isinf(x) && std.math.isinf(y) && std.math.isnan(z))\
    \ return false;\n    if (std.math.isnan(x) && std.math.isnan(y) && std.math.isinf(z))\
    \ return false;\n    if (std.math.isinf(x) && std.math.isnan(y) && std.math.isnan(z))\
    \ return false;\n    if (std.math.isnan(x) && std.math.isinf(y) && std.math.isnan(z))\
    \ return false;\n    if (std.math.isinf(x) && std.math.isinf(y) && std.math.isnan(z))\
    \ return false;\n    if (std.math.isnan(x) && std.math.isnan(y) && std.math.isnan(z))\
    \ return false;\n    if (std.math.isinf(x) && std.math.isinf(y) && std.math.isnan(z))\
    \ return false;\n    if (std.math.isnan(x) && std.math.isinf(y) && std.math.isnan(z))\
    \ return false;\n    if (std.math.isinf(x) && std.math.isnan(y) && std.math.isnan(z))\
    \ return false;\n    if (std.math.isnan(x) && std.math.isin\nunittest\n{\n   \
    \ alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n \
    \   assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpg8uc_q5t.d(45): Error: found `unittest` when expecting `)`\\\
    n/tmp/tmpg8uc_q5t.d(60): Error: found `End of File` when expecting `}` following\
    \ compound statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg8uc_q5t.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.math.isInfinite(x) || std.math.isInfinite(y) ||\
    \ std.math.isInfinite(z) || std.math.isInfinite(x + y) || std.math.isInfinite(x\
    \ + z) || std.math.isInfinite(y + z) || std.math.isInfinite(x + y + z);\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkupf3p6t.d(24): Error: undefined identifier `isInfinite` in module\
    \ `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\\
    n/tmp/tmpkupf3p6t.d(24): Error: undefined identifier `isInfinite` in module `std.math`,\
    \ did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpkupf3p6t.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpkupf3p6t.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpkupf3p6t.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpkupf3p6t.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpkupf3p6t.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpkupf3p6t.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.math.isInfinite(x) || std.math.isInfinite(y) ||\
    \ std.math.isInfinite(z) || std.math.isInfinite(x + y) || std.math.isInfinite(x\
    \ + z) || std.math.isInfinite(y + z) || std.math.isInfinite(x - y) || std.math.isInfinite(x\
    \ - z) || std.math.isInfinite(y - z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpydztg2tq.d(24): Error: undefined identifier `isInfinite` in module\
    \ `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\\
    n/tmp/tmpydztg2tq.d(24): Error: undefined identifier `isInfinite` in module `std.math`,\
    \ did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpydztg2tq.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpydztg2tq.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpydztg2tq.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpydztg2tq.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpydztg2tq.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpydztg2tq.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpydztg2tq.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpydztg2tq.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.math.isInfinite(x) || std.math.isInfinite(y) ||\
    \ std.math.isInfinite(z) || std.math.isInfinite(x+y) || std.math.isInfinite(x+z)\
    \ || std.math.isInfinite(y+z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpol_3q83t.d(24): Error: undefined identifier `isInfinite` in module\
    \ `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\\
    n/tmp/tmpol_3q83t.d(24): Error: undefined identifier `isInfinite` in module `std.math`,\
    \ did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpol_3q83t.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpol_3q83t.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpol_3q83t.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpol_3q83t.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpol_3q83t.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    bool result = false;\n    \n    float sum = x + y + z;\n \
    \   \n    if (sum == x)\n    {\n        result = true;\n    }\n    else if (sum\
    \ == y)\n    {\n        result = true;\n    }\n    else if (sum == z)\n    {\n\
    \        result = true;\n    }\n    else\n    {\n        result = false;\n   \
    \ }\n    \n    return result;\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp16mr9r75.d(51): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427eed]\\n??:? void tmp16mr9r75.__unittest_L47_C1()\
    \ [0x427a94]\\n??:? void tmp16mr9r75.__modtest() [0x427c70]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bc13]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aaa6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc39]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300e8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fbc5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa7d]\\n??:? runModuleUnitTests [0x42b9e9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42833c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4282c3]\\n??:? _d_run_main [0x42822e]\\n??:? main [0x427c83]\\\
    n??:? __libc_start_main [0x88f00554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.math.isInfinite(x) || std.math.isInfinite(y) ||\
    \ std.math.isInfinite(z) || std.math.isInfinite(x + y) || std.math.isInfinite(x\
    \ + z) || std.math.isInfinite(y + z) || std.math.isInfinite(x - y) || std.math.isInfinite(x\
    \ - z) || std.math.isInfinite(y - z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7cvwztjg.d(24): Error: undefined identifier `isInfinite` in module\
    \ `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\\
    n/tmp/tmp7cvwztjg.d(24): Error: undefined identifier `isInfinite` in module `std.math`,\
    \ did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp7cvwztjg.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp7cvwztjg.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp7cvwztjg.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp7cvwztjg.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp7cvwztjg.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp7cvwztjg.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmp7cvwztjg.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmp7cvwztjg.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return ((std.math.isInt(x) && std.math.isInt(y) && std.math.isInt(z))\
    \ || (std.math.isInt(x) && std.math.isInt(y) && !std.math.isInt(z)) || (!std.math.isInt(x)\
    \ && !std.math.isInt(y) && std.math.isInt(z)));\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpozwrqblo.d(24): Error: undefined identifier `isInt` in module\
    \ `std.math`\\n/tmp/tmpozwrqblo.d(24): Error: undefined identifier `isInt` in\
    \ module `std.math`\\n/tmp/tmpozwrqblo.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpozwrqblo.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpozwrqblo.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpozwrqblo.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpozwrqblo.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpozwrqblo.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpozwrqblo.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpozwrqblo.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (std.math.isnan(x) || std.math.isnan(y) || std.math.isnan(z))\n\
    \    {\n        return false;\n    }\n    \n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z))\n    {\n        return false;\n    }\n    \n    if (std.math.isinf(x)\
    \ || std.math.isinf(y) || std.math.isinf(z))\n    {\n        return false;\n \
    \   }\n    \n    if (std.math.isnan(x) || std.math.isnan(y) || std.math.isnan(z))\n\
    \    {\n        return false;\n    }\n    \n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z))\n    {\n        return false;\n    }\n    \n    if (std.math.isinf(x)\
    \ || std.math.isinf(y) || std.math.isinf(z))\n    {\n        return false;\n \
    \   }\n    \n    if (std.math.isnan(x) || std.math.isnan(y) || std.math.isnan(z))\n\
    \    {\n        return false;\n    }\n    \n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z))\n    {\n        return false;\n    }\n    \n    if (std.math.isinf(x)\
    \ || std.math.isinf(y) || std.math.isinf(z))\n    {\n        return false;\n \
    \   }\n    \n    if (std.math.isnan(x) || std.math.isnan(y) || std.math.isnan(z))\n\
    \    {\n        return false;\n    }\n    \n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z))\n    {\n        return false;\n    }\n    \n    if (std.math.isinf(x)\
    \ || std.math.isinf(y) || std.math.isinf(z))\n    {\n        return false;\n \
    \   }\n    \n    if (std.math.isnan(x) || std.math.isnan(y) || std.math.isnan(z))\n\
    \    {\n        return false;\n    }\n    \n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z))\n    {\n        return false;\n    }\n    \n    if (std.math.isinf(x)\
    \ || std.math.isinf(y) || std.math.isinf(z))\n    {\n        return false;\n \
    \   }\n    \n    if (std.math.isnan(x) || std.math.isnan(y) || std.math.isnan(z))\n\
    \    {\n        return false;\n    }\n    \n    if (std.math\nunittest\n{\n  \
    \  alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpoeet2q5n.d(105): Error: found `unittest` when expecting `)`\\\
    n/tmp/tmpoeet2q5n.d(120): Error: found `End of File` when expecting `}` following\
    \ compound statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpoeet2q5n.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return ((std.math.isIntegral(x) && std.math.isIntegral(y)\
    \ && std.math.isIntegral(z)) || (std.math.isIntegral(x) && std.math.isIntegral(y)\
    \ && std.math.isIntegral(z) && std.math.isIntegral(x+y) && std.math.isIntegral(x+z)\
    \ && std.math.isIntegral(y+z)));\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpeq21juz3.d(24): Error: undefined identifier `isIntegral` in module\
    \ `std.math`, did you mean template `isIntegral(T)`?\\n/tmp/tmpeq21juz3.d(24):\
    \ Error: undefined identifier `isIntegral` in module `std.math`, did you mean\
    \ template `isIntegral(T)`?\\n/tmp/tmpeq21juz3.d(24): Error: undefined identifier\
    \ `isIntegral` in module `std.math`, did you mean template `isIntegral(T)`?\\\
    n/tmp/tmpeq21juz3.d(24): Error: undefined identifier `isIntegral` in module `std.math`,\
    \ did you mean template `isIntegral(T)`?\\n/tmp/tmpeq21juz3.d(24): Error: undefined\
    \ identifier `isIntegral` in module `std.math`, did you mean template `isIntegral(T)`?\\\
    n/tmp/tmpeq21juz3.d(24): Error: undefined identifier `isIntegral` in module `std.math`,\
    \ did you mean template `isIntegral(T)`?\\n/tmp/tmpeq21juz3.d(24): Error: undefined\
    \ identifier `isIntegral` in module `std.math`, did you mean template `isIntegral(T)`?\\\
    n/tmp/tmpeq21juz3.d(24): Error: undefined identifier `isIntegral` in module `std.math`,\
    \ did you mean template `isIntegral(T)`?\\n/tmp/tmpeq21juz3.d(24): Error: undefined\
    \ identifier `isIntegral` in module `std.math`, did you mean template `isIntegral(T)`?\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeq21juz3.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return ((std.math.rem(x,y) == 0.0f) && (std.math.rem(y,z)\
    \ == 0.0f) && (std.math.rem(x,z) == 0.0f));\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxvbi5sv0.d(24): Error: undefined identifier `rem` in module `std.math`\\\
    n/tmp/tmpxvbi5sv0.d(24): Error: undefined identifier `rem` in module `std.math`\\\
    n/tmp/tmpxvbi5sv0.d(24): Error: undefined identifier `rem` in module `std.math`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxvbi5sv0.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return ((std.math.isInt(x) && std.math.isInt(y) && std.math.isInt(z))\
    \ || (std.math.isInt(x) && std.math.isInt(y) && !std.math.isInt(z)) || (!std.math.isInt(x)\
    \ && std.math.isInt(y) && std.math.isInt(z)) || (!std.math.isInt(x) && !std.math.isInt(y)\
    \ && !std.math.isInt(z)));\n}\nunittest\n{\n    alias candidate = any_int;\n\n\
    \    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7b1b3cjd.d(24): Error: undefined identifier `isInt` in module\
    \ `std.math`\\n/tmp/tmp7b1b3cjd.d(24): Error: undefined identifier `isInt` in\
    \ module `std.math`\\n/tmp/tmp7b1b3cjd.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp7b1b3cjd.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp7b1b3cjd.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp7b1b3cjd.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp7b1b3cjd.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp7b1b3cjd.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp7b1b3cjd.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp7b1b3cjd.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp7b1b3cjd.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp7b1b3cjd.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmp7b1b3cjd.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    bool result = false;\n    if (std.math.isInt(x) && std.math.isInt(y)\
    \ && std.math.isInt(z)) {\n        result = std.math.isEqual(x + y, z);\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5efidqov.d(25): Error: undefined identifier `isInt` in module\
    \ `std.math`\\n/tmp/tmp5efidqov.d(25): Error: undefined identifier `isInt` in\
    \ module `std.math`\\n/tmp/tmp5efidqov.d(25): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp5efidqov.d(26): Error: undefined identifier `isEqual`\
    \ in module `std.math`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmp5efidqov.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    bool result = false;\n    \n    if ( x == y )\n    {\n   \
    \     if ( x == z )\n        {\n            result = true;\n        }\n    }\n\
    \    \n    return result;\n}\nunittest\n{\n    alias candidate = any_int;\n\n\
    \    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpdv5qx28p.d(40): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ead]\\n??:? void tmpdv5qx28p.__unittest_L36_C1()\
    \ [0x427a54]\\n??:? void tmpdv5qx28p.__modtest() [0x427c30]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbd3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa66]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbf9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300a8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb85]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa3d]\\n??:? runModuleUnitTests [0x42b9a9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282fc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428283]\\n??:? _d_run_main [0x4281ee]\\n??:? main [0x427c43]\\\
    n??:? __libc_start_main [0x576ad554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.int(x) == std.int(y) + std.int(z);\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpq76fnzm8.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpq76fnzm8.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpq76fnzm8.d(24): Error: identifier expected following `.`, not\
    \ `int`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq76fnzm8.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.math.isInfinite(x) || std.math.isInfinite(y) ||\
    \ std.math.isInfinite(z) || std.math.isInfinite(x+y) || std.math.isInfinite(x+z)\
    \ || std.math.isInfinite(y+z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpx_hbvdp7.d(24): Error: undefined identifier `isInfinite` in module\
    \ `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\\
    n/tmp/tmpx_hbvdp7.d(24): Error: undefined identifier `isInfinite` in module `std.math`,\
    \ did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpx_hbvdp7.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpx_hbvdp7.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpx_hbvdp7.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\n/tmp/tmpx_hbvdp7.d(24):\
    \ Error: undefined identifier `isInfinite` in module `std.math`, did you mean\
    \ template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpx_hbvdp7.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    bool result = false;\n    \n    if (x == x + y && y == y +\
    \ z && z == z + x)\n    {\n        result = true;\n    }\n    \n    return result;\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpyxlzwprg.d(37): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ee5]\\n??:? void tmpyxlzwprg.__unittest_L33_C1()\
    \ [0x427a8c]\\n??:? void tmpyxlzwprg.__modtest() [0x427c68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bc0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa9e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300e0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fbbd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa75]\\n??:? runModuleUnitTests [0x42b9e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428334]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4282bb]\\n??:? _d_run_main [0x428226]\\n??:? main [0x427c7b]\\\
    n??:? __libc_start_main [0xd8ad2554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return ((std.math.isInt(x) && std.math.isInt(y) && std.math.isInt(z))\
    \ || (std.math.isInt(x) && std.math.isInt(y) && !std.math.isInt(z)) || (!std.math.isInt(x)\
    \ && std.math.isInt(y) && std.math.isInt(z)) || (!std.math.isInt(x) && !std.math.isInt(y)\
    \ && !std.math.isInt(z)));\n}\nunittest\n{\n    alias candidate = any_int;\n\n\
    \    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_pky7yej.d(24): Error: undefined identifier `isInt` in module\
    \ `std.math`\\n/tmp/tmp_pky7yej.d(24): Error: undefined identifier `isInt` in\
    \ module `std.math`\\n/tmp/tmp_pky7yej.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp_pky7yej.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp_pky7yej.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp_pky7yej.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp_pky7yej.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp_pky7yej.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp_pky7yej.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp_pky7yej.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp_pky7yej.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp_pky7yej.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmp_pky7yej.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == std.math.add(x, y) && y == std.math.add(y, z)\
    \ && z == std.math.add(z, x));\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp74rjl0nw.d(24): Error: undefined identifier `add` in module `std.math`\\\
    n/tmp/tmp74rjl0nw.d(24): Error: undefined identifier `add` in module `std.math`\\\
    n/tmp/tmp74rjl0nw.d(24): Error: undefined identifier `add` in module `std.math`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp74rjl0nw.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (std.math.isInt(x) && std.math.isInt(y) && std.math.isInt(z))\
    \ {\n        return std.math.isEqual(x + y, z);\n    }\n    return false;\n}\n\
    unittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L)\
    \ == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprn0ehg64.d(24): Error: undefined identifier `isInt` in module\
    \ `std.math`\\n/tmp/tmprn0ehg64.d(24): Error: undefined identifier `isInt` in\
    \ module `std.math`\\n/tmp/tmprn0ehg64.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmprn0ehg64.d(25): Error: undefined identifier `isEqual`\
    \ in module `std.math`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmprn0ehg64.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (std.math.isnan(x) || std.math.isnan(y) || std.math.isnan(z))\
    \ return false;\n    if (std.math.isinf(x) || std.math.isinf(y) || std.math.isinf(z))\
    \ return false;\n    if (std.math.isinf(x) && std.math.isinf(y) && std.math.isinf(z))\
    \ return false;\n    if (std.math.isinf(x) && std.math.isinf(y) && !std.math.isinf(z))\
    \ return false;\n    if (std.math.isinf(x) && !std.math.isinf(y) && std.math.isinf(z))\
    \ return false;\n    if (std.math.isinf(x) && !std.math.isinf(y) && !std.math.isinf(z))\
    \ return false;\n    if (std.math.isinf(x) && std.math.isinf(y) && std.math.isinf(z))\
    \ return false;\n    if (std.math.isnan(x) && std.math.isnan(y) && std.math.isnan(z))\
    \ return false;\n    if (std.math.isnan(x) && std.math.isnan(y) && !std.math.isnan(z))\
    \ return false;\n    if (std.math.isnan(x) && !std.math.isnan(y) && std.math.isnan(z))\
    \ return false;\n    if (std.math.isnan(x) && !std.math.isnan(y) && !std.math.isnan(z))\
    \ return false;\n    if (std.math.isnan(x) && std.math.isnan(y) && std.math.isnan(z))\
    \ return false;\n    if (std.math.isinf(x) && std.math.isinf(y) && std.math.isinf(z))\
    \ return false;\n    if (std.math.isinf(x) && std.math.isinf(y) && !std.math.isinf(z))\
    \ return false;\n    if (std.math.isinf(x) && !std.math.isinf(y) && std.math.isinf(z))\
    \ return false;\n    if (std.math.isinf(x) && !std.math.isinf(y) && !std.math.isinf(z))\
    \ return false;\n    if (std.math.isinf(x) && std.math.isinf(y) && std.math.isinf(z))\
    \ return false;\n    if (std.math.isnan(x) && std.math.isnan(y) && std.math.isnan(z))\
    \ return false;\n    if (std.math.isnan(x) && std.math.isnan(y) && !std.math.isnan(z))\
    \ return false;\n    if (std.math.isnan(x) && !std.math.isnan(y) && std.math.isnan(z))\
    \ return false;\n    if (std.math.isnan(x) && !\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpc2r3wxmr.d(45): Error: expression expected, not `unittest`\\\
    n/tmp/tmpc2r3wxmr.d(46): Error: found `{` when expecting `)`\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc2r3wxmr.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == x + y && y == y + z && z == z);\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmptohuy9fv.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427edd]\\n??:? void tmptohuy9fv.__unittest_L26_C1()\
    \ [0x427a80]\\n??:? void tmptohuy9fv.__modtest() [0x427c5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bc03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa96]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300d8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fbb5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa6d]\\n??:? runModuleUnitTests [0x42b9d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42832c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4282b3]\\n??:? _d_run_main [0x42821e]\\n??:? main [0x427c6f]\\\
    n??:? __libc_start_main [0x4f220554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if ( std.math.isInt(x) && std.math.isInt(y) && std.math.isInt(z)\
    \ ) \n    {\n        return ( x == std.math.add(x, y) && y == std.math.add(y,\
    \ z) && z == std.math.add(z, x) );\n    }\n    return false;\n}\nunittest\n{\n\
    \    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3xh7n1c2.d(24): Error: undefined identifier `isInt` in module\
    \ `std.math`\\n/tmp/tmp3xh7n1c2.d(24): Error: undefined identifier `isInt` in\
    \ module `std.math`\\n/tmp/tmp3xh7n1c2.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp3xh7n1c2.d(26): Error: undefined identifier `add`\
    \ in module `std.math`\\n/tmp/tmp3xh7n1c2.d(26): Error: undefined identifier `add`\
    \ in module `std.math`\\n/tmp/tmp3xh7n1c2.d(26): Error: undefined identifier `add`\
    \ in module `std.math`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmp3xh7n1c2.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return ((std.int(x) == std.int(y)) || (std.int(y) == std.int(z))\
    \ || (std.int(z) == std.int(x)));\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpnx0zw_db.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpnx0zw_db.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpnx0zw_db.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpnx0zw_db.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpnx0zw_db.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpnx0zw_db.d(24): Error: identifier expected following `.`, not\
    \ `int`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnx0zw_db.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if ( x == y || x == z || y == z )\n        return true;\n\
    \    else\n        return false;\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpu5y2ak1j.d(33): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ead]\\n??:? void tmpu5y2ak1j.__unittest_L29_C1()\
    \ [0x427a54]\\n??:? void tmpu5y2ak1j.__modtest() [0x427c30]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbd3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa66]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbf9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300a8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb85]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa3d]\\n??:? runModuleUnitTests [0x42b9a9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282fc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428283]\\n??:? _d_run_main [0x4281ee]\\n??:? main [0x427c43]\\\
    n??:? __libc_start_main [0xf20ca554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.int(x) == std.int(y) + std.int(z);\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpy3cllbm0.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpy3cllbm0.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpy3cllbm0.d(24): Error: identifier expected following `.`, not\
    \ `int`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy3cllbm0.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.int(x) == std.int(y) + std.int(z);\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpn56akfxe.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpn56akfxe.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpn56akfxe.d(24): Error: identifier expected following `.`, not\
    \ `int`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn56akfxe.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (std.math.isInt(x) && std.math.isInt(y) && std.math.isInt(z))\n\
    \    {\n        return std.math.isEqual(x + y, z);\n    }\n    else\n    {\n \
    \       return false;\n    }\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpms1honkr.d(24): Error: undefined identifier `isInt` in module\
    \ `std.math`\\n/tmp/tmpms1honkr.d(24): Error: undefined identifier `isInt` in\
    \ module `std.math`\\n/tmp/tmpms1honkr.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpms1honkr.d(26): Error: undefined identifier `isEqual`\
    \ in module `std.math`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpms1honkr.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (std.math.isInt(x) && std.math.isInt(y) && std.math.isInt(z))\
    \ {\n        return std.math.isEqual(x + y, z);\n    }\n    return false;\n}\n\
    unittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L)\
    \ == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppuxsfmb8.d(24): Error: undefined identifier `isInt` in module\
    \ `std.math`\\n/tmp/tmppuxsfmb8.d(24): Error: undefined identifier `isInt` in\
    \ module `std.math`\\n/tmp/tmppuxsfmb8.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmppuxsfmb8.d(25): Error: undefined identifier `isEqual`\
    \ in module `std.math`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmppuxsfmb8.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (std.math.isInt(x) && std.math.isInt(y) && std.math.isInt(z))\
    \ {\n        return std.math.isEqual(x, y, z);\n    }\n    return false;\n}\n\
    unittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L)\
    \ == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpf8vpr3ky.d(24): Error: undefined identifier `isInt` in module\
    \ `std.math`\\n/tmp/tmpf8vpr3ky.d(24): Error: undefined identifier `isInt` in\
    \ module `std.math`\\n/tmp/tmpf8vpr3ky.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpf8vpr3ky.d(25): Error: undefined identifier `isEqual`\
    \ in module `std.math`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpf8vpr3ky.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (std.math.isnan(x) || std.math.isnan(y) || std.math.isnan(z))\n\
    \    {\n        return false;\n    }\n    \n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z))\n    {\n        return false;\n    }\n    \n    if (std.math.isinf(x)\
    \ && std.math.isinf(y) && std.math.isinf(z))\n    {\n        return true;\n  \
    \  }\n    \n    if (std.math.isinf(x) && std.math.isinf(y) && !std.math.isinf(z))\n\
    \    {\n        return true;\n    }\n    \n    if (std.math.isinf(z) && !std.math.isinf(y)\
    \ && std.math.isinf(x))\n    {\n        return true;\n    }\n    \n    if (std.math.isinf(z)\
    \ && !std.math.isinf(y) && !std.math.isinf(x))\n    {\n        return false;\n\
    \    }\n    \n    if (std.math.isinf(z) && std.math.isinf(y) && !std.math.isinf(x))\n\
    \    {\n        return false;\n    }\n    \n    if (std.math.isinf(z) && std.math.isinf(y)\
    \ && std.math.isinf(x))\n    {\n        return true;\n    }\n    \n    if (std.math.isnan(x)\
    \ || std.math.isnan(y) || std.math.isnan(z))\n    {\n        return false;\n \
    \   }\n    \n    if (std.math.isinf(x) || std.math.isinf(y) || std.math.isinf(z))\n\
    \    {\n        return false;\n    }\n    \n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z))\n    {\n        return true;\n    }\n    \n    if (std.math.isinf(x)\
    \ && std.math.isinf(y) && !std.math.isinf(z))\n    {\n        return true;\n \
    \   }\n    \n    if (std.math.isinf(z) && !std.math.isinf(y) && std.math.isinf(x))\n\
    \    {\n        return true;\n    }\n    \n    if (std.math.isinf(z) && !std.math.isinf(y)\
    \ && !std.math.isinf(x))\n    {\n        return false;\n    }\n    \n    if (std.math.isinf(z)\
    \ && std.math.isinf(y) && !std.math.isinf(x))\n    {\n        return false;\n\
    \    }\n    \n    if (std.math.isinf(z) && std.math.isinf(y) && std.math.isinf(x))\n\
    \    {\n        return true;\n    }\n    \n\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwz1ifoa5.d(105): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwz1ifoa5.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return std.math.isInt(x) && std.math.isInt(y) && std.math.isInt(z)\
    \ && std.math.isInt(x + y) && std.math.isInt(x + z) && std.math.isInt(y + z);\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpytu3x9ll.d(24): Error: undefined identifier `isInt` in module\
    \ `std.math`\\n/tmp/tmpytu3x9ll.d(24): Error: undefined identifier `isInt` in\
    \ module `std.math`\\n/tmp/tmpytu3x9ll.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpytu3x9ll.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpytu3x9ll.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpytu3x9ll.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpytu3x9ll.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (x == y || x == z || y == z) \n    {\n        return true;\n\
    \    }\n    else \n    {\n        return false;\n    }\n}\nunittest\n{\n    alias\
    \ candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp_5coedpt.d(37): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ead]\\n??:? void tmp_5coedpt.__unittest_L33_C1()\
    \ [0x427a54]\\n??:? void tmp_5coedpt.__modtest() [0x427c30]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbd3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa66]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbf9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300a8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb85]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa3d]\\n??:? runModuleUnitTests [0x42b9a9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282fc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428283]\\n??:? _d_run_main [0x4281ee]\\n??:? main [0x427c43]\\\
    n??:? __libc_start_main [0xbd99e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (x == y && y == z && x == std.int(x) && y == std.int(y)\
    \ && z == std.int(z)) return true;\n    return false;\n}\nunittest\n{\n    alias\
    \ candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxo8d6kfj.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpxo8d6kfj.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpxo8d6kfj.d(24): Error: identifier expected following `.`, not\
    \ `int`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxo8d6kfj.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == std.math.add(x,y) && y == std.math.add(x,z) &&\
    \ z == std.math.add(x,y));\n}\nunittest\n{\n    alias candidate = any_int;\n\n\
    \    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpj0aitkh5.d(24): Error: undefined identifier `add` in module `std.math`\\\
    n/tmp/tmpj0aitkh5.d(24): Error: undefined identifier `add` in module `std.math`\\\
    n/tmp/tmpj0aitkh5.d(24): Error: undefined identifier `add` in module `std.math`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj0aitkh5.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if (std.math.isInt(x) && std.math.isInt(y) && std.math.isInt(z))\
    \ {\n        return std.math.isEqual(x + y, z);\n    }\n    return false;\n}\n\
    unittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L)\
    \ == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7ctpa2fo.d(24): Error: undefined identifier `isInt` in module\
    \ `std.math`\\n/tmp/tmp7ctpa2fo.d(24): Error: undefined identifier `isInt` in\
    \ module `std.math`\\n/tmp/tmp7ctpa2fo.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp7ctpa2fo.d(25): Error: undefined identifier `isEqual`\
    \ in module `std.math`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmp7ctpa2fo.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return ((std.math.rem(x,y) == 0.0) && (std.math.rem(y,z) ==\
    \ 0.0) && (std.math.rem(x,z) == 0.0));\n}\nunittest\n{\n    alias candidate =\
    \ any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxytxdab7.d(24): Error: undefined identifier `rem` in module `std.math`\\\
    n/tmp/tmpxytxdab7.d(24): Error: undefined identifier `rem` in module `std.math`\\\
    n/tmp/tmpxytxdab7.d(24): Error: undefined identifier `rem` in module `std.math`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxytxdab7.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return ((std.math.remainder(x,y) == 0) || (std.math.remainder(x,z)\
    \ == 0) || (std.math.remainder(y,z) == 0));\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpj3j9_zb9.d(33): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427fd5]\\n??:? void tmpj3j9_zb9.__unittest_L26_C1()\
    \ [0x427c0e]\\n??:? void tmpj3j9_zb9.__modtest() [0x427d54]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bd1b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42abae]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fd41]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4301f0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fccd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42ab85]\\n??:? runModuleUnitTests [0x42baf1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428424]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4283ab]\\n??:? _d_run_main [0x428316]\\n??:? main [0x427d67]\\\
    n??:? __libc_start_main [0x9129d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return (x == y + z);\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp_kmx1hi9.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ea5]\\n??:? void tmp_kmx1hi9.__unittest_L26_C1()\
    \ [0x427a48]\\n??:? void tmp_kmx1hi9.__modtest() [0x427c24]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbcb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa5e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbf1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300a0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb7d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa35]\\n??:? runModuleUnitTests [0x42b9a1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42827b]\\n??:? _d_run_main [0x4281e6]\\n??:? main [0x427c37]\\\
    n??:? __libc_start_main [0xc6dd6554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if ( x == y )\n    {\n        if ( x == z )\n        {\n \
    \           return true;\n        }\n        else\n        {\n            return\
    \ false;\n        }\n    }\n    else\n    {\n        return false;\n    }\n}\n\
    unittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L)\
    \ == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmppqrnu2mw.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ead]\\n??:? void tmppqrnu2mw.__unittest_L40_C1()\
    \ [0x427a50]\\n??:? void tmppqrnu2mw.__modtest() [0x427c2c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbd3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa66]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbf9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300a8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb85]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa3d]\\n??:? runModuleUnitTests [0x42b9a9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282fc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428283]\\n??:? _d_run_main [0x4281ee]\\n??:? main [0x427c3f]\\\
    n??:? __libc_start_main [0x315bb554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    bool result = false;\n    \n    if (std.math.isInt(x) && std.math.isInt(y)\
    \ && std.math.isInt(z)) {\n        result = std.math.isEqual(x + y, z);\n    }\n\
    \    \n    return result;\n}\nunittest\n{\n    alias candidate = any_int;\n\n\
    \    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpf22mfx6g.d(26): Error: undefined identifier `isInt` in module\
    \ `std.math`\\n/tmp/tmpf22mfx6g.d(26): Error: undefined identifier `isInt` in\
    \ module `std.math`\\n/tmp/tmpf22mfx6g.d(26): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmpf22mfx6g.d(27): Error: undefined identifier `isEqual`\
    \ in module `std.math`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpf22mfx6g.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    if ( x == y || x == z || y == z )\n        return true;\n\
    \    else\n        return false;\n}\n</code>\n<|/ a tags=c++,function,boolean,if-statement\
    \ |>\n<| c |>\nThis doesn't answer the question, which is about how to write an\
    \ `if` statement that checks for three numbers, not just two.\n<|/ c |>\n<| c\
    \ |>\nI thought the question was how to write a function that checks for three\
    \ numbers. I edited my answer to show how to do that.\n<|/ c |>\n<| c |>\nThe\
    \ question was about how to write an `if` statement that checks for three numbers,\
    \ not just two.\n<|/ c |>\n<| c |>\nI edited my answer to show how to do that.\n\
    <|/ c |>\n<| c |>\nThe question was about how to write an `if` statement that\
    \ checks for three numbers, not just two.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n\
    unittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L)\
    \ == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpyp_qbl0k.d(29): Error: declaration expected, not `<`\\n/tmp/tmpyp_qbl0k.d(32):\
    \ Error: unterminated character constant\\n/tmp/tmpyp_qbl0k.d(52): Error: declaration\
    \ expected, not `assert`\\n/tmp/tmpyp_qbl0k.d(53): Error: declaration expected,\
    \ not `assert`\\n/tmp/tmpyp_qbl0k.d(54): Error: declaration expected, not `assert`\\\
    n/tmp/tmpyp_qbl0k.d(55): Error: declaration expected, not `assert`\\n/tmp/tmpyp_qbl0k.d(56):\
    \ Error: declaration expected, not `assert`\\n/tmp/tmpyp_qbl0k.d(57): Error: declaration\
    \ expected, not `assert`\\n/tmp/tmpyp_qbl0k.d(58): Error: declaration expected,\
    \ not `assert`\\n/tmp/tmpyp_qbl0k.d(59): Error: declaration expected, not `assert`\\\
    n/tmp/tmpyp_qbl0k.d(60): Error: declaration expected, not `assert`\\n/tmp/tmpyp_qbl0k.d(61):\
    \ Error: declaration expected, not `assert`\\n/tmp/tmpyp_qbl0k.d(62): Error: unrecognized\
    \ declaration\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyp_qbl0k.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return ((std.int(x) == std.int(y)) || (std.int(y) == std.int(z)));\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphfyfn02w.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmphfyfn02w.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmphfyfn02w.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmphfyfn02w.d(24): Error: identifier expected following `.`, not\
    \ `int`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphfyfn02w.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return ((std.math.isInt(x) && std.math.isInt(y) && std.math.isInt(z))\
    \ || (std.math.isInt(x) && std.math.isInt(y) && !std.math.isInt(z)) || (!std.math.isInt(x)\
    \ && std.math.isInt(y) && std.math.isInt(z)) || (!std.math.isInt(x) && !std.math.isInt(y)\
    \ && !std.math.isInt(z)));\n}\nunittest\n{\n    alias candidate = any_int;\n\n\
    \    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6v03qhhu.d(24): Error: undefined identifier `isInt` in module\
    \ `std.math`\\n/tmp/tmp6v03qhhu.d(24): Error: undefined identifier `isInt` in\
    \ module `std.math`\\n/tmp/tmp6v03qhhu.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp6v03qhhu.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp6v03qhhu.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp6v03qhhu.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp6v03qhhu.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp6v03qhhu.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp6v03qhhu.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp6v03qhhu.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp6v03qhhu.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\n/tmp/tmp6v03qhhu.d(24): Error: undefined identifier `isInt`\
    \ in module `std.math`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmp6v03qhhu.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    return ((std.int(x) == std.int(y)) || (std.int(y) == std.int(z)));\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqcccn8hs.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpqcccn8hs.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpqcccn8hs.d(24): Error: identifier expected following `.`, not\
    \ `int`\\n/tmp/tmpqcccn8hs.d(24): Error: identifier expected following `.`, not\
    \ `int`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqcccn8hs.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279E True\n    \n    any_int(3,\
    \ 2, 2) \u279E False\n\n    any_int(3, -2, 1) \u279E True\n    \n    any_int(3.6,\
    \ -2.2, 2) \u279E False\n  \n\n    \n    \n*/\nbool any_int(float x, float y,\
    \ float z) \n{\n    bool result = false;\n    if ( x == y )\n    {\n        if\
    \ ( x == z )\n        {\n            result = true;\n        }\n    }\n    else\n\
    \    {\n        if ( x == z )\n        {\n            result = true;\n       \
    \ }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp2nrwwlk4.d(45): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ebd]\\n??:? void tmp2nrwwlk4.__unittest_L41_C1()\
    \ [0x427a60]\\n??:? void tmp2nrwwlk4.__modtest() [0x427c3c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbe3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa76]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc09]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb95]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa4d]\\n??:? runModuleUnitTests [0x42b9b9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42830c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428293]\\n??:? _d_run_main [0x4281fe]\\n??:? main [0x427c4f]\\\
    n??:? __libc_start_main [0xddb6e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception

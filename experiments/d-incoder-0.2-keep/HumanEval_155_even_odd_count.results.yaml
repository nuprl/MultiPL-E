name: HumanEval_155_even_odd_count
language: humaneval_to_dlang.py
results:
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n\
    \    long odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n\
    \        if(digit % 2 == 0)\n        {\n            even++;\n        }\n     \
    \   else\n        {\n            odd++;\n        }\n        num /= 10;\n    }\n\
    \    return Tuple!(long, long) odd, even;\n}\n/*\nGiven a floating point number.\
    \ return a tuple that has the number of digits after the decimal point and number\
    \ of digits before the decimal point respectively.\nunittest\n{\n    alias candidate\
    \ = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5ftreqqa.d(28): Error: found `odd` when expecting `;` following\
    \ `return` statement\\n/tmp/tmp5ftreqqa.d(28): Error: found `,` instead of statement\\\
    n/tmp/tmp5ftreqqa.d(30): Error: unterminated /* */ comment\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5ftreqqa.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile (num > 0) {\n\t\tlong digit = num % 10;\n\t\tif (digit % 2 ==\
    \ 0) {\n\t\t\teven++;\n\t\t} else {\n\t\t\todd++;\n\t\t}\n\t\tnum /= 10;\n\t}\n\
    \treturn Tuple!(long, long) even_odd_count(even, odd);\n}\nunittest\n{\n    alias\
    \ candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpda2ef604.d(23): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpda2ef604.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0,\
    \ odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n      \
    \  num /= 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n  \
    \      }\n        else\n        {\n            odd++;\n        }\n    }\n    return\
    \ Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxq30pzlt.d(27): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmpxq30pzlt.d(27): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxq30pzlt.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n\
    \    long odd = 0;\n    long temp = num;\n    while(temp > 0)\n    {\n       \
    \ long digit = temp % 10;\n        if(digit % 2 == 0)\n        {\n           \
    \ even++;\n        }\n        else\n        {\n            odd++;\n        }\n\
    \        temp /= 10;\n    }\n    return Tuple!(long, long) even_odd_count(even,\
    \ odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpyxn43dvl.d(29): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpyxn43dvl.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n\
    \    long odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n\
    \        num /= 10;\n        if(digit % 2 == 0)\n            even++;\n       \
    \ else\n            odd++;\n    }\n    return Tuple!(long, long) odd, even;\n\
    }\n/*\nGiven a string. return a tuple that has the number of even and odd digits\
    \ respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpk214ykgy.d(24): Error: found `odd` when expecting `;` following\
    \ `return` statement\\n/tmp/tmpk214ykgy.d(24): Error: found `,` instead of statement\\\
    n/tmp/tmpk214ykgy.d(26): Error: unterminated /* */ comment\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk214ykgy.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\t\
    if(digit % 2 == 0)\n\t\t\teven += 1;\n\t\telse\n\t\t\todd += 1;\n\t}\n\treturn\
    \ Tuple!(long, long)!(even, odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1xyek4tz.d(23): Error: multiple ! arguments are not allowed\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1xyek4tz.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\t\
    if(digit % 2 == 0)\n\t\t{\n\t\t\teven += digit;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t\
    odd += digit;\n\t\t}\n\t}\n\treturn Tuple!(long, long)!(even, odd);\n}\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3ztwrdvg.d(27): Error: multiple ! arguments are not allowed\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3ztwrdvg.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n\
    \    long odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n\
    \        num /= 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n\
    \        }\n        else\n        {\n            odd++;\n        }\n    }\n  \
    \  return Tuple!(long, long) even_odd_count(even, odd);\n}\nunittest\n{\n    alias\
    \ candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfrpsazkd.d(28): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpfrpsazkd.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tif(digit % 2 ==\
    \ 0)\n\t\t{\n\t\t\teven++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd++;\n\t\t}\n\t\t\
    num /= 10;\n\t}\n\treturn Tuple!(long, long) even_odd_count(even), even_odd_count(odd);\n\
    }\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprhqi__d7.d(27): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmprhqi__d7.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0,\
    \ odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n      \
    \  if(digit % 2 == 0)\n            even++;\n        else\n            odd++;\n\
    \        num /= 10;\n    }\n    return Tuple!(long, long) even, odd;\n}\n/*\n\
    Given a floating point number. return a tuple that has the number of even and\
    \ odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5eohijel.d(23): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmp5eohijel.d(23): Error: found `,` instead of statement\\\
    n/tmp/tmp5eohijel.d(25): Error: unterminated /* */ comment\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5eohijel.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\t\
    if(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd\
    \ += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even), even_odd_count(odd);\n\
    }\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpcogfkxqi.d(27): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpcogfkxqi.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n\
    \    long odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n\
    \        if(digit % 2 == 0)\n        {\n            even++;\n        }\n     \
    \   else\n        {\n            odd++;\n        }\n        num /= 10;\n    }\n\
    \    return Tuple!(long, long) even, odd;\n}\n/*\nGiven a tuple of integers. return\
    \ a tuple that has the number of even and odd digits respectively.\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1vrn62sl.d(28): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmp1vrn62sl.d(28): Error: found `,` instead of statement\\\
    n/tmp/tmp1vrn62sl.d(30): Error: unterminated /* */ comment\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1vrn62sl.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n\
    \    long odd = 0;\n    long temp;\n    long digit;\n    \n    while (num > 0)\
    \ {\n        digit = num % 10;\n        num = num / 10;\n        if (digit % 2\
    \ == 0) {\n            even++;\n        } else {\n            odd++;\n       \
    \ }\n    }\n    temp = even;\n    even = odd;\n    odd = temp;\n    return Tuple!(long,\
    \ long) even_odd_count(even), even_odd_count(odd);\n}\nunittest\n{\n    alias\
    \ candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkq7hnel_.d(30): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpkq7hnel_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0;\n\
    \tlong odd = 0;\n\twhile (num > 0) {\n\t\tlong digit = num % 10;\n\t\tnum = num\
    \ / 10;\n\t\tif (digit % 2 == 0) {\n\t\t\teven++;\n\t\t} else {\n\t\t\todd++;\n\
    \t\t}\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\n/*\nGiven a long integer.\
    \ return a tuple that has the number of even and odd digits respectively.\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp30tld31_.d(24): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmp30tld31_.d(24): Error: found `,` instead of statement\\\
    n/tmp/tmp30tld31_.d(26): Error: unterminated /* */ comment\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp30tld31_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tif(digit % 2 ==\
    \ 0)\n\t\t{\n\t\t\teven++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd++;\n\t\t}\n\t\t\
    num /= 10;\n\t}\n\treturn Tuple!(long, long) even_odd_count(even), even_odd_count(odd);\n\
    }\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpr66rymar.d(27): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpr66rymar.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tif(digit % 2 ==\
    \ 0)\n\t\t{\n\t\t\teven++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd++;\n\t\t}\n\t\t\
    num /= 10;\n\t}\n\treturn Tuple!(long, long) even_odd_count(even), even_odd_count(odd);\n\
    }\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpeh1mcji6.d(27): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpeh1mcji6.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile (num > 0) {\n\t\tlong digit = num % 10;\n\t\tif (digit % 2 ==\
    \ 0) {\n\t\t\teven++;\n\t\t} else {\n\t\t\todd++;\n\t\t}\n\t\tnum /= 10;\n\t}\n\
    \treturn Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate =\
    \ even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpe8pnxhbg.d(23): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmpe8pnxhbg.d(23): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpe8pnxhbg.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n\
    \    long odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n\
    \        if(digit % 2 == 0)\n        {\n            even++;\n        }\n     \
    \   else\n        {\n            odd++;\n        }\n        num /= 10;\n    }\n\
    \    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate\
    \ = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpeia2qieo.d(28): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmpeia2qieo.d(28): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeia2qieo.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n\
    \    long odd = 0;\n    long digit;\n    \n    while(num > 0)\n    {\n       \
    \ digit = num % 10;\n        even = even + digit;\n        odd = odd + digit;\n\
    \        num = num / 10;\n    }\n    \n    return Tuple!(long, long) odd, even;\n\
    }\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4o_siwt2.d(25): Error: found `odd` when expecting `;` following\
    \ `return` statement\\n/tmp/tmp4o_siwt2.d(25): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4o_siwt2.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\t\
    if(digit % 2 == 0)\n\t\t\teven++;\n\t\telse\n\t\t\todd++;\n\t}\n\treturn Tuple!(long,\
    \ long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n\
    \    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpi52wc0fx.d(23): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmpi52wc0fx.d(23): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpi52wc0fx.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n\
    \    long odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n\
    \        if(digit % 2 == 0)\n        {\n            even++;\n        }\n     \
    \   else\n        {\n            odd++;\n        }\n        num /= 10;\n    }\n\
    \    return Tuple!(long, long) even_odd_count(even), even_odd_count(odd);\n}\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphb1r6vkt.d(28): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmphb1r6vkt.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\t\
    if(digit % 2 == 0)\n\t\t\teven++;\n\t\telse\n\t\t\todd++;\n\t}\n\treturn Tuple!(long,\
    \ long) even_odd_count(even, odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpcsh_rkd1.d(23): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpcsh_rkd1.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n\
    \    long odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n\
    \        num /= 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n\
    \        }\n        else\n        {\n            odd++;\n        }\n    }\n  \
    \  return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate =\
    \ even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3zv06i3p.d(28): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmp3zv06i3p.d(28): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3zv06i3p.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n\
    \    long odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n\
    \        num /= 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n\
    \        }\n        else\n        {\n            odd++;\n        }\n    }\n  \
    \  return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate =\
    \ even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprjlxgp3j.d(28): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmprjlxgp3j.d(28): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprjlxgp3j.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n\
    \    long odd = 0;\n    long temp = num;\n    while (temp > 0) {\n        long\
    \ digit = temp % 10;\n        if (digit % 2 == 0) {\n            even++;\n   \
    \     } else {\n            odd++;\n        }\n        temp /= 10;\n    }\n  \
    \  return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate =\
    \ even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpb_09v_ln.d(25): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmpb_09v_ln.d(25): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb_09v_ln.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0;\n\
    \tlong odd = 0;\n\twhile (num > 0) {\n\t\tlong digit = num % 10;\n\t\tif (digit\
    \ % 2 == 0) {\n\t\t\teven++;\n\t\t} else {\n\t\t\todd++;\n\t\t}\n\t\tnum /= 10;\n\
    \t}\n\treturn Tuple!(long, long) odd, even;\n}\nunittest\n{\n    alias candidate\
    \ = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxut9mcjw.d(24): Error: found `odd` when expecting `;` following\
    \ `return` statement\\n/tmp/tmpxut9mcjw.d(24): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxut9mcjw.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile (num > 0) {\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\t\
    if (digit % 2 == 0) {\n\t\t\teven += digit;\n\t\t} else {\n\t\t\todd += digit;\n\
    \t\t}\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\nunittest\n{\n    alias\
    \ candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfp1uopxg.d(23): Error: found `odd` when expecting `;` following\
    \ `return` statement\\n/tmp/tmpfp1uopxg.d(23): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfp1uopxg.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\t\
    if(digit % 2 == 0)\n\t\t{\n\t\t\teven += digit;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t\
    odd += digit;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even), even_odd_count(odd);\n\
    }\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2fighsxe.d(27): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmp2fighsxe.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0;\n\
    \tlong odd = 0;\n\twhile (num > 0) {\n\t\tlong digit = num % 10;\n\t\tnum = num\
    \ / 10;\n\t\tif (digit % 2 == 0) {\n\t\t\teven++;\n\t\t} else {\n\t\t\todd++;\n\
    \t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even), even_odd_count(odd);\n\
    }\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpm_zrgcao.d(24): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpm_zrgcao.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0;\n\
    \tlong odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /=\
    \ 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += digit;\n\t\t}\n\t\telse\n\t\
    \t{\n\t\t\todd += digit;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even),\
    \ even_odd_count(odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwqcjea70.d(28): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpwqcjea70.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0,\
    \ odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n      \
    \  num /= 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n  \
    \      }\n        else\n        {\n            odd++;\n        }\n    }\n    return\
    \ Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpeovq5l3_.d(27): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmpeovq5l3_.d(27): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeovq5l3_.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0,\
    \ odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n      \
    \  num /= 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n  \
    \      }\n        else\n        {\n            odd++;\n        }\n    }\n    return\
    \ Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpcb8z9rfg.d(27): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmpcb8z9rfg.d(27): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcb8z9rfg.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0,\
    \ odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n      \
    \  if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n\
    \        {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ Tuple!(long, long) even, odd;\n}\n/*\nGiven a long integer. return a tuple that\
    \ has the number of even and odd digits respectively.\nunittest\n{\n    alias\
    \ candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7hwuyend.d(27): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmp7hwuyend.d(27): Error: found `,` instead of statement\\\
    n/tmp/tmp7hwuyend.d(29): Error: unterminated /* */ comment\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7hwuyend.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0;\n\
    \tlong odd = 0;\n\twhile (num > 0) {\n\t\tlong digit = num % 10;\n\t\tif (digit\
    \ % 2 == 0) {\n\t\t\teven++;\n\t\t} else {\n\t\t\todd++;\n\t\t}\n\t\tnum /= 10;\n\
    \t}\n\treturn Tuple!(long, long) even_odd_count(even), even_odd_count(odd);\n\
    }\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpt7_6mkm4.d(24): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpt7_6mkm4.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0,\
    \ odd = 0;\n    while(num > 0) {\n        long digit = num % 10;\n        num\
    \ /= 10;\n        if(digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n    }\n    return Tuple!(long, long) even, odd;\n\
    }\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpi_3b5xd3.d(23): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmpi_3b5xd3.d(23): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpi_3b5xd3.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\t\
    if(digit % 2 == 0)\n\t\t{\n\t\t\teven += digit;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t\
    odd += digit;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even), even_odd_count(odd);\n\
    }\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpz0zd68uz.d(27): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpz0zd68uz.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile (num > 0) {\n\t\tlong digit = num % 10;\n\t\tif (digit % 2 ==\
    \ 0) {\n\t\t\teven++;\n\t\t} else {\n\t\t\todd++;\n\t\t}\n\t\tnum /= 10;\n\t}\n\
    \treturn Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate =\
    \ even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphiffe5q3.d(23): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmphiffe5q3.d(23): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphiffe5q3.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\t\
    if(digit % 2 == 0)\n\t\t\teven++;\n\t\telse\n\t\t\todd++;\n\t}\n\treturn Tuple!(long,\
    \ long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n\
    \    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp53vypvst.d(23): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmp53vypvst.d(23): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp53vypvst.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile (num > 0) {\n\t\tlong digit = num % 10;\n\t\tif (digit % 2 ==\
    \ 0) {\n\t\t\teven++;\n\t\t} else {\n\t\t\todd++;\n\t\t}\n\t\tnum /= 10;\n\t}\n\
    \treturn Tuple!(long, long) odd, even;\n}\nunittest\n{\n    alias candidate =\
    \ even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpc4qx41v5.d(23): Error: found `odd` when expecting `;` following\
    \ `return` statement\\n/tmp/tmpc4qx41v5.d(23): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc4qx41v5.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n\
    \    long odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n\
    \        if(digit % 2 == 0)\n        {\n            even++;\n        }\n     \
    \   else\n        {\n            odd++;\n        }\n        num /= 10;\n    }\n\
    \    return Tuple!(long, long) even, odd;\n}\n/*\nGiven an integer. return a tuple\
    \ that has the number of even and odd digits respectively.\nunittest\n{\n    alias\
    \ candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8tjr_dmo.d(28): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmp8tjr_dmo.d(28): Error: found `,` instead of statement\\\
    n/tmp/tmp8tjr_dmo.d(30): Error: unterminated /* */ comment\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8tjr_dmo.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile(num > 0) {\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\tif(digit\
    \ % 2 == 0) {\n\t\t\teven++;\n\t\t} else {\n\t\t\todd++;\n\t\t}\n\t}\n\treturn\
    \ Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwsbmvu3n.d(23): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmpwsbmvu3n.d(23): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwsbmvu3n.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\t\
    if(digit % 2 == 0)\n\t\t\teven++;\n\t\telse\n\t\t\todd++;\n\t}\n\treturn Tuple!(long,\
    \ long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n\
    \    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpcq_jf5de.d(23): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmpcq_jf5de.d(23): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq_jf5de.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0;\n\
    \tlong odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong temp = num % 10;\n\t\teven =\
    \ even * 10 + temp;\n\t\todd = odd + temp;\n\t\tnum = num / 10;\n\t}\n\treturn\
    \ Tuple!(long, long) even_odd_count(even), Tuple!(long, long) even_odd_count(odd);\n\
    }\n/*\nGiven a floating point number. return a tuple that has the number of even\
    \ and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2rc_jhwr.d(22): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\n/tmp/tmp2rc_jhwr.d(22): Error: found `even_odd_count`\
    \ when expecting `;` following statement\\n/tmp/tmp2rc_jhwr.d(24): Error: unterminated\
    \ /* */ comment\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2rc_jhwr.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0;\n\
    \tlong odd = 0;\n\twhile (num > 0) {\n\t\tlong digit = num % 10;\n\t\tnum = num\
    \ / 10;\n\t\tif (digit % 2 == 0) {\n\t\t\teven++;\n\t\t} else {\n\t\t\todd++;\n\
    \t\t}\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias\
    \ candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5xnouiq4.d(24): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmp5xnouiq4.d(24): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5xnouiq4.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0;\n\
    \tlong odd = 0;\n\twhile (num > 0) {\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\
    \t\tif (digit % 2 == 0) {\n\t\t\teven += digit;\n\t\t} else {\n\t\t\todd += digit;\n\
    \t\t}\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\nunittest\n{\n    alias\
    \ candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpl6n9hkv1.d(24): Error: found `odd` when expecting `;` following\
    \ `return` statement\\n/tmp/tmpl6n9hkv1.d(24): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl6n9hkv1.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0,\
    \ odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n      \
    \  num = num / 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n\
    \        }\n        else\n        {\n            odd++;\n        }\n    }\n  \
    \  return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate =\
    \ even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfnl5ptoc.d(27): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmpfnl5ptoc.d(27): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfnl5ptoc.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\t\
    if(digit % 2 == 0)\n\t\t\teven++;\n\t\telse\n\t\t\todd++;\n\t}\n\treturn Tuple!(long,\
    \ long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n\
    \    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp90q5tgds.d(23): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmp90q5tgds.d(23): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp90q5tgds.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0;\n\
    \tlong odd = 0;\n\twhile (num > 0) {\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\
    \t\tif (digit % 2 == 0) {\n\t\t\teven++;\n\t\t} else {\n\t\t\todd++;\n\t\t}\n\t\
    }\n\treturn Tuple!(long, long) odd, even;\n}\nunittest\n{\n    alias candidate\
    \ = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4lm8zk_k.d(24): Error: found `odd` when expecting `;` following\
    \ `return` statement\\n/tmp/tmp4lm8zk_k.d(24): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4lm8zk_k.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile (num > 0) {\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\t\
    if (digit % 2 == 0) {\n\t\t\teven += digit;\n\t\t} else {\n\t\t\todd += digit;\n\
    \t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even), even_odd_count(odd);\n\
    }\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmplnn0q_5_.d(23): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmplnn0q_5_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\t\
    if(digit % 2 == 0)\n\t\t{\n\t\t\teven++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd++;\n\
    \t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even, odd);\n}\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphqmu9mvg.d(27): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmphqmu9mvg.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n\
    \    long odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n\
    \        if(digit % 2 == 0)\n        {\n            even++;\n        }\n     \
    \   else\n        {\n            odd++;\n        }\n        num /= 10;\n    }\n\
    \    return Tuple!(long, long) even_odd_count(even), even_odd_count(odd);\n}\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpcnpcoz4r.d(28): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpcnpcoz4r.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n\
    \    long odd = 0;\n    long digit = 0;\n    while(num > 0)\n    {\n        digit\
    \ = num % 10;\n        num = num / 10;\n        if(digit % 2 == 0)\n        {\n\
    \            even++;\n        }\n        else\n        {\n            odd++;\n\
    \        }\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n\
    \    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6bvqgj2m.d(29): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmp6bvqgj2m.d(29): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6bvqgj2m.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0,\
    \ odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n      \
    \  if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n\
    \        {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ Tuple!(long, long) even_odd_count(even), even_odd_count(odd);\n}\n/*\nGiven\
    \ a long integer. return a tuple that has the number of even and odd digits respectively.\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpi57gwv29.d(27): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\n/tmp/tmpi57gwv29.d(29): Error: unterminated\
    \ /* */ comment\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpi57gwv29.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\t\
    if(digit % 2 == 0)\n\t\t\teven++;\n\t\telse\n\t\t\todd++;\n\t}\n\treturn Tuple!(long,\
    \ long) even_odd_count(even), even_odd_count(odd);\n}\nunittest\n{\n    alias\
    \ candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp193ijzoe.d(23): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmp193ijzoe.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile(num > 0) {\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\tif(digit\
    \ % 2 == 0) {\n\t\t\teven += digit;\n\t\t} else {\n\t\t\todd += digit;\n\t\t}\n\
    \t}\n\treturn Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate\
    \ = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmplmm2qo9b.d(23): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmplmm2qo9b.d(23): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplmm2qo9b.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile(num > 0) {\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\tif(digit\
    \ % 2 == 0) {\n\t\t\teven += digit;\n\t\t} else {\n\t\t\todd += digit;\n\t\t}\n\
    \t}\n\treturn Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate\
    \ = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpju_baiin.d(23): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmpju_baiin.d(23): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpju_baiin.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n\
    \    long odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n\
    \        if(digit % 2 == 0)\n        {\n            even++;\n        }\n     \
    \   else\n        {\n            odd++;\n        }\n        num /= 10;\n    }\n\
    \    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate\
    \ = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpboyvjd9g.d(28): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmpboyvjd9g.d(28): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpboyvjd9g.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tif(digit % 2 ==\
    \ 0)\n\t\t{\n\t\t\teven++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd++;\n\t\t}\n\t\t\
    num /= 10;\n\t}\n\treturn Tuple!(long, long) even_odd_count(even), even_odd_count(odd);\n\
    }\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpb_c9hrun.d(27): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpb_c9hrun.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\t\
    if(digit % 2 == 0)\n\t\t\teven++;\n\t\telse\n\t\t\todd++;\n\t}\n\treturn Tuple!(long,\
    \ long) even_odd_count(even), even_odd_count(odd);\n}\nunittest\n{\n    alias\
    \ candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp49lm41ao.d(23): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmp49lm41ao.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\t\
    if(digit % 2 == 0)\n\t\t{\n\t\t\teven += digit;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t\
    odd += digit;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even), even_odd_count(odd);\n\
    }\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpn8qku0rg.d(27): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpn8qku0rg.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0,\
    \ odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n      \
    \  if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n\
    \        {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp10m3iwt5.d(27): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmp10m3iwt5.d(27): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp10m3iwt5.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n\
    \    long odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n\
    \        num /= 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n\
    \        }\n        else\n        {\n            odd++;\n        }\n    }\n  \
    \  return Tuple!(long, long) even, odd;\n}\n/*\nGiven a string. return a tuple\
    \ that has the number of even and odd digits respectively.\nunittest\n{\n    alias\
    \ candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2fh75wus.d(28): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmp2fh75wus.d(28): Error: found `,` instead of statement\\\
    n/tmp/tmp2fh75wus.d(30): Error: unterminated /* */ comment\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2fh75wus.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tif(digit % 2 ==\
    \ 0)\n\t\t\teven++;\n\t\telse\n\t\t\todd++;\n\t\tnum /= 10;\n\t}\n\treturn Tuple!(long,\
    \ long) even_odd_count(even), even_odd_count(odd);\n}\nunittest\n{\n    alias\
    \ candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgqba8bc3.d(23): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpgqba8bc3.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0,\
    \ odd = 0;\n    while(num > 0) {\n        long digit = num % 10;\n        num\
    \ /= 10;\n        if(digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n    }\n    return Tuple!(long, long) even, odd;\n\
    }\n/*\nGiven a positive integer. return a tuple that has the number of even and\
    \ odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp46j1orwv.d(23): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmp46j1orwv.d(23): Error: found `,` instead of statement\\\
    n/tmp/tmp46j1orwv.d(25): Error: unterminated /* */ comment\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp46j1orwv.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\t\
    if(digit % 2 == 0)\n\t\t{\n\t\t\teven += digit;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t\
    odd += digit;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even), even_odd_count(odd);\n\
    }\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptpw11_yn.d(27): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmptpw11_yn.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n\
    \    long odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n\
    \        num = num / 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n\
    \        }\n        else\n        {\n            odd++;\n        }\n    }\n  \
    \  return Tuple!(long, long) even_odd_count(even), even_odd_count(odd);\n}\n/*\n\
    Given a floating point number. return a tuple that has the number of even and\
    \ odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppcqheoze.d(28): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\n/tmp/tmppcqheoze.d(30): Error: unterminated\
    \ /* */ comment\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppcqheoze.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile (num > 0) {\n\t\tlong digit = num % 10;\n\t\tif (digit % 2 ==\
    \ 0) {\n\t\t\teven++;\n\t\t} else {\n\t\t\todd++;\n\t\t}\n\t\tnum /= 10;\n\t}\n\
    \treturn Tuple!(long, long) even_odd_count(even), even_odd_count(odd);\n}\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2f8q7a9q.d(23): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmp2f8q7a9q.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n\
    \    long odd = 0;\n    long digit;\n    while(num > 0)\n    {\n        digit\
    \ = num % 10;\n        even = even + digit % 2 == 0 ? 1 : 0;\n        odd = odd\
    \ + digit % 2 != 0 ? 1 : 0;\n        num = num / 10;\n    }\n    return Tuple!(long,\
    \ long) even, Tuple!(long, long) odd;\n}\n/*\nGiven a positive integer and an\
    \ integer, return the sum of both integers modulo the given integer.\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmpfsq63w.d(23): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmpmpfsq63w.d(23): Error: found `,` instead of statement\\\
    n/tmp/tmpmpfsq63w.d(25): Error: unterminated /* */ comment\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmpfsq63w.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0,\
    \ odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n      \
    \  num /= 10;\n        if(digit % 2 == 0)\n            even++;\n        else\n\
    \            odd++;\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpu7927h6g.d(23): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmpu7927h6g.d(23): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu7927h6g.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\t\
    if(digit % 2 == 0)\n\t\t{\n\t\t\teven += digit;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t\
    odd += digit;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even), even_odd_count(odd);\n\
    }\n/*\nGiven a long integer. return a tuple that has the number of even and odd\
    \ digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n\
    \    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1_pact2k.d(27): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\n/tmp/tmp1_pact2k.d(29): Error: unterminated\
    \ /* */ comment\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1_pact2k.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile (num > 0) {\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\t\
    if (digit % 2 == 0) {\n\t\t\teven += digit;\n\t\t} else {\n\t\t\todd += digit;\n\
    \t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even), even_odd_count(odd);\n\
    }\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9xqcs0u0.d(23): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmp9xqcs0u0.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile(num > 0) {\n\t\tlong temp = num % 10;\n\t\tnum = num / 10;\n\t\
    \tif(temp % 2 == 0) {\n\t\t\teven++;\n\t\t} else {\n\t\t\todd++;\n\t\t}\n\t}\n\
    \treturn Tuple!(long, long) even_odd_count(even), even_odd_count(odd);\n}\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_7t8zxws.d(23): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmp_7t8zxws.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile (num > 0) {\n\t\tlong digit = num % 10;\n\t\tnum = num / 10;\n\
    \t\tif (digit % 2 == 0) {\n\t\t\teven++;\n\t\t} else {\n\t\t\todd++;\n\t\t}\n\t\
    }\n\treturn Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate\
    \ = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpeengnw6z.d(23): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmpeengnw6z.d(23): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeengnw6z.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0;\n\
    \tlong odd = 0;\n\tlong remainder = 0;\n\tlong temp = 0;\n\tlong count = 0;\n\t\
    while(num > 0)\n\t{\n\t\tremainder = num % 10;\n\t\ttemp = even;\n\t\teven = odd\
    \ + (remainder % 2 == 0);\n\t\todd = temp;\n\t\tnum = num / 10;\n\t\tcount +=\
    \ 1;\n\t}\n\treturn Tuple!(long, long) count, odd;\n}\nunittest\n{\n    alias\
    \ candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0if7y_jj.d(27): Error: found `count` when expecting `;` following\
    \ `return` statement\\n/tmp/tmp0if7y_jj.d(27): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0if7y_jj.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n\
    \    long odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n\
    \        num /= 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n\
    \        }\n        else\n        {\n            odd++;\n        }\n    }\n  \
    \  return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate =\
    \ even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgb7ho0ac.d(28): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmpgb7ho0ac.d(28): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgb7ho0ac.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\t\
    if(digit % 2 == 0)\n\t\t\teven++;\n\t\telse\n\t\t\todd++;\n\t}\n\treturn Tuple!(long,\
    \ long) even_odd_count(even), even_odd_count(odd);\n}\nunittest\n{\n    alias\
    \ candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp456ndku3.d(23): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmp456ndku3.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n\
    \    long odd = 0;\n    long digit;\n    long remainder;\n    \n    while(num\
    \ > 0)\n    {\n        digit = num % 10;\n        remainder = num / 10;\n    \
    \    \n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n\
    \        else\n        {\n            odd++;\n        }\n        \n        num\
    \ = remainder;\n    }\n    \n    return Tuple!(long, long) even, odd;\n}\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjbaibmmc.d(35): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmpjbaibmmc.d(35): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjbaibmmc.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0,\
    \ odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n      \
    \  num /= 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n  \
    \      }\n        else\n        {\n            odd++;\n        }\n    }\n    return\
    \ Tuple!(long, long) even_odd_count(even), even_odd_count(odd);\n}\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8leo1g3x.d(27): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmp8leo1g3x.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile (num > 0) {\n\t\tlong digit = num % 10;\n\t\tnum = num / 10;\n\
    \t\tif (digit % 2 == 0) {\n\t\t\teven++;\n\t\t} else {\n\t\t\todd++;\n\t\t}\n\t\
    }\n\treturn Tuple!(long, long) even_odd_count(even, odd);\n}\nunittest\n{\n  \
    \  alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprwzkb8wz.d(23): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmprwzkb8wz.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0;\n\
    \tlong odd = 0;\n\twhile (num > 0) {\n\t\tlong digit = num % 10;\n\t\tnum = num\
    \ / 10;\n\t\tif (digit % 2 == 0) {\n\t\t\teven++;\n\t\t} else {\n\t\t\todd++;\n\
    \t\t}\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias\
    \ candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6s0pkn31.d(24): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmp6s0pkn31.d(24): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6s0pkn31.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0,\
    \ odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n      \
    \  num /= 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n  \
    \      }\n        else\n        {\n            odd++;\n        }\n    }\n    return\
    \ Tuple!(long, long) even_odd_count(even), even_odd_count(odd);\n}\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmr_szbrc.d(27): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpmr_szbrc.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0;\n\
    \tlong odd = 0;\n\tlong remainder = num;\n\twhile (remainder != 0)\n\t{\n\t\t\
    remainder = remainder / 10;\n\t\teven++;\n\t}\n\twhile (remainder != 0)\n\t{\n\
    \t\tremainder = remainder % 10;\n\t\todd++;\n\t}\n\treturn Tuple!(long, long)\
    \ even, Tuple!(long, long) odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0o0p8_03.d(26): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmp0o0p8_03.d(26): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0o0p8_03.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n\
    \    long odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n\
    \        num /= 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n\
    \        }\n        else\n        {\n            odd++;\n        }\n    }\n  \
    \  return Tuple!(long, long) even_odd_count(even), even_odd_count(odd);\n}\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdfta321v.d(28): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpdfta321v.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0,\
    \ odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n      \
    \  num /= 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n  \
    \      }\n        else\n        {\n            odd++;\n        }\n    }\n    return\
    \ Tuple!(long, long) even, odd;\n}\n/*\nGiven a number and a digit. return a tuple\
    \ that has the number of times the digit appears in the number.\nunittest\n{\n\
    \    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpl6ollnr0.d(27): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmpl6ollnr0.d(27): Error: found `,` instead of statement\\\
    n/tmp/tmpl6ollnr0.d(29): Error: unterminated /* */ comment\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl6ollnr0.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0;\n\
    \tlong odd = 0;\n\twhile (num > 0) {\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\
    \t\tif (digit % 2 == 0) {\n\t\t\teven += digit;\n\t\t} else {\n\t\t\todd += digit;\n\
    \t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even), even_odd_count(odd);\n\
    }\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxhix1gqo.d(24): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpxhix1gqo.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0;\n\
    \tlong odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /=\
    \ 10;\n\t\tif(digit % 2 == 0)\n\t\t\teven++;\n\t\telse\n\t\t\todd++;\n\t}\n\t\
    return Tuple!(long, long) even_odd_count(even), even_odd_count(odd);\n}\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpib1xuz6g.d(24): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpib1xuz6g.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0;\n\
    \tlong odd = 0;\n\tlong digit = 0;\n\twhile(num > 0)\n\t{\n\t\tdigit = num % 10;\n\
    \t\tif(digit % 2 == 0)\n\t\t\teven++;\n\t\telse\n\t\t\todd++;\n\t\tnum /= 10;\n\
    \t}\n\treturn Tuple!(long, long) even_odd_count(even, odd);\n}\nunittest\n{\n\
    \    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpev5w8s_k.d(25): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpev5w8s_k.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n\
    \    long odd = 0;\n    long digit = 0;\n    long remainder = 0;\n    long temp\
    \ = 0;\n    long count = 0;\n    while(num > 0)\n    {\n        digit = num %\
    \ 10;\n        remainder = num / 10;\n        temp = remainder;\n        even\
    \ = even * 10 + digit;\n        odd = odd + temp;\n        num = num / 10;\n \
    \   }\n    count = count + 1;\n    return Tuple!(long, long) odd, even;\n}\n/*\n\
    Given a long integer. return a tuple that has the number of even and odd digits\
    \ respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6t0_ef6t.d(29): Error: found `odd` when expecting `;` following\
    \ `return` statement\\n/tmp/tmp6t0_ef6t.d(29): Error: found `,` instead of statement\\\
    n/tmp/tmp6t0_ef6t.d(31): Error: unterminated /* */ comment\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6t0_ef6t.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n\
    \    long odd = 0;\n    long temp = num;\n    while(temp > 0)\n    {\n       \
    \ long digit = temp % 10;\n        if(digit % 2 == 0)\n        {\n           \
    \ even++;\n        }\n        else\n        {\n            odd++;\n        }\n\
    \        temp /= 10;\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqwrd6d48.d(29): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmpqwrd6d48.d(29): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqwrd6d48.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n\
    \    long odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n\
    \        num /= 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n\
    \        }\n        else\n        {\n            odd++;\n        }\n    }\n  \
    \  return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate =\
    \ even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_38sk3nt.d(28): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmp_38sk3nt.d(28): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_38sk3nt.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0,\
    \ odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n      \
    \  num /= 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n  \
    \      }\n        else\n        {\n            odd++;\n        }\n    }\n    return\
    \ Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1jfbtwgv.d(27): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmp1jfbtwgv.d(27): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1jfbtwgv.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0;\n\
    \tlong odd = 0;\n\twhile (num > 0) {\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\
    \t\tif (digit % 2 == 0) {\n\t\t\teven += digit;\n\t\t} else {\n\t\t\todd += digit;\n\
    \t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even), even_odd_count(odd);\n\
    }\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppfu1wrby.d(24): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmppfu1wrby.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\t\
    if(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd\
    \ += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even), even_odd_count(odd);\n\
    }\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3qshqv6i.d(27): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmp3qshqv6i.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n\
    \    long odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n\
    \        if(digit % 2 == 0)\n        {\n            even++;\n        }\n     \
    \   else\n        {\n            odd++;\n        }\n        num /= 10;\n    }\n\
    \    return Tuple!(long, long) even, odd;\n}\n/*\nGiven a floating point number.\
    \ return a tuple that has the number of even and odd digits respectively.\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7bvdrrpo.d(28): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmp7bvdrrpo.d(28): Error: found `,` instead of statement\\\
    n/tmp/tmp7bvdrrpo.d(30): Error: unterminated /* */ comment\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7bvdrrpo.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0,\
    \ odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n      \
    \  num /= 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n  \
    \      }\n        else\n        {\n            odd++;\n        }\n    }\n    return\
    \ Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptblg8kq8.d(27): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmptblg8kq8.d(27): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptblg8kq8.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\t\
    if(digit % 2 == 0)\n\t\t{\n\t\t\teven += digit;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t\
    odd += digit;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even), even_odd_count(odd);\n\
    }\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdcdiadar.d(27): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpdcdiadar.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\t\
    if(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd\
    \ += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even), even_odd_count(odd);\n\
    }\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp21g35rw8.d(27): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmp21g35rw8.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n\
    \    long odd = 0;\n    long digit = 0;\n    long remainder = 0;\n    long i =\
    \ 0;\n    while(num > 0)\n    {\n        digit = num % 10;\n        remainder\
    \ = num / 10;\n        if(remainder % 2 == 0)\n        {\n            even++;\n\
    \        }\n        else\n        {\n            odd++;\n        }\n        num\
    \ = remainder;\n    }\n    return Tuple!(long, long) odd, even;\n}\n/*\nGiven\
    \ a long integer. return a tuple that has the number of even and odd digits respectively.\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpif1_nm8r.d(32): Error: found `odd` when expecting `;` following\
    \ `return` statement\\n/tmp/tmpif1_nm8r.d(32): Error: found `,` instead of statement\\\
    n/tmp/tmpif1_nm8r.d(34): Error: unterminated /* */ comment\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpif1_nm8r.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0,\
    \ odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n      \
    \  if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n\
    \        {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ Tuple!(long, long) even, odd;\n}\n/*\nGiven a long integer. return a tuple that\
    \ has the number of even and odd digits respectively.\nunittest\n{\n    alias\
    \ candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp31kb1746.d(27): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmp31kb1746.d(27): Error: found `,` instead of statement\\\
    n/tmp/tmp31kb1746.d(29): Error: unterminated /* */ comment\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp31kb1746.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n\
    \    long odd = 0;\n    long digit;\n    long remainder;\n    long count = 0;\n\
    \    while(num > 0)\n    {\n        digit = num % 10;\n        remainder = num\
    \ % 10;\n        num = num / 10;\n        \n        if(digit % 2 == 0)\n     \
    \   {\n            even++;\n        }\n        else\n        {\n            odd++;\n\
    \        }\n        \n        if(remainder == 0)\n        {\n            count++;\n\
    \        }\n    }\n    \n    return Tuple!(long, long) even, odd;\n}\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpg2sw61jy.d(39): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmpg2sw61jy.d(39): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg2sw61jy.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\t\
    if(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd\
    \ += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even), even_odd_count(odd);\n\
    }\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpamyv5zx4.d(27): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpamyv5zx4.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n\
    \    long odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n\
    \        if(digit % 2 == 0)\n        {\n            even++;\n        }\n     \
    \   else\n        {\n            odd++;\n        }\n        num /= 10;\n    }\n\
    \    return Tuple!(long, long) odd, even;\n}\nunittest\n{\n    alias candidate\
    \ = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprcx7q51p.d(28): Error: found `odd` when expecting `;` following\
    \ `return` statement\\n/tmp/tmprcx7q51p.d(28): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprcx7q51p.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\t\
    if(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd\
    \ += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long)!(even, odd);\n}\nunittest\n{\n\
    \    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpebj0b32o.d(27): Error: multiple ! arguments are not allowed\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpebj0b32o.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\t\
    if(digit % 2 == 0)\n\t\t{\n\t\t\teven += digit;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t\
    odd += digit;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even), even_odd_count(odd);\n\
    }\n/*\nGiven a string. return a tuple that has the number of even and odd digits\
    \ respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbi801rw3.d(27): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\n/tmp/tmpbi801rw3.d(29): Error: unterminated\
    \ /* */ comment\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbi801rw3.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n\
    \    long odd = 0;\n    long digit;\n    long remainder;\n    long quotient;\n\
    \    \n    while (num > 0) {\n        digit = num % 10;\n        remainder = num\
    \ / 10;\n        quotient = remainder / 2;\n        even = even + quotient;\n\
    \        odd = odd + quotient;\n        num = remainder;\n    }\n    return Tuple!(long,\
    \ long) odd, even;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n\
    \    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7o0d0k0q.d(27): Error: found `odd` when expecting `;` following\
    \ `return` statement\\n/tmp/tmp7o0d0k0q.d(27): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7o0d0k0q.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n\
    \    long odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n\
    \        num = num / 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n\
    \        }\n        else\n        {\n            odd++;\n        }\n    }\n  \
    \  return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate =\
    \ even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphr1b_xmz.d(28): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmphr1b_xmz.d(28): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphr1b_xmz.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n\
    \    long odd = 0;\n    long digit = 0;\n    long remainder = 0;\n    long temp\
    \ = 0;\n    while(num > 0)\n    {\n        digit = num % 10;\n        remainder\
    \ = num % 10;\n        temp = remainder;\n        even = even + temp;\n      \
    \  odd = odd + digit;\n        num = num / 10;\n    }\n    return Tuple!(long,\
    \ long) odd, even;\n}\n/*\nGiven an integer. return a tuple that has the number\
    \ of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpoijgktrp.d(27): Error: found `odd` when expecting `;` following\
    \ `return` statement\\n/tmp/tmpoijgktrp.d(27): Error: found `,` instead of statement\\\
    n/tmp/tmpoijgktrp.d(29): Error: unterminated /* */ comment\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpoijgktrp.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0,\
    \ odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n      \
    \  num /= 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n  \
    \      }\n        else\n        {\n            odd++;\n        }\n    }\n    return\
    \ Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqurah9g7.d(27): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmpqurah9g7.d(27): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqurah9g7.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n\
    \    long odd = 0;\n    long digit;\n    \n    while(num > 0)\n    {\n       \
    \ digit = num % 10;\n        num /= 10;\n        if(digit % 2 == 0)\n        {\n\
    \            even++;\n        }\n        else\n        {\n            odd++;\n\
    \        }\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n\
    \    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppyawntds.d(30): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmppyawntds.d(30): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppyawntds.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n\
    \    long odd = 0;\n    long digit;\n    while(num > 0) {\n        digit = num\
    \ % 10;\n        num /= 10;\n        if(digit % 2 == 0) {\n            even +=\
    \ digit;\n        } else {\n            odd += digit;\n        }\n    }\n    return\
    \ Tuple!(long, long) odd, even;\n}\n/*\nGiven a string, return a list of all the\
    \ even and odd characters in the string.\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpg9cxjcf6.d(25): Error: found `odd` when expecting `;` following\
    \ `return` statement\\n/tmp/tmpg9cxjcf6.d(25): Error: found `,` instead of statement\\\
    n/tmp/tmpg9cxjcf6.d(27): Error: unterminated /* */ comment\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg9cxjcf6.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n\
    \    long odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n\
    \        if(digit % 2 == 0)\n        {\n            even++;\n        }\n     \
    \   else\n        {\n            odd++;\n        }\n        num /= 10;\n    }\n\
    \    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate\
    \ = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp92ehffn_.d(28): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmp92ehffn_.d(28): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp92ehffn_.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0,\
    \ odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n      \
    \  if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n\
    \        {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ Tuple!(long, long) even, odd;\n}\n/*\nGiven a long integer. return a tuple that\
    \ has the number of even and odd digits respectively.\nunittest\n{\n    alias\
    \ candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprbtdcq02.d(27): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmprbtdcq02.d(27): Error: found `,` instead of statement\\\
    n/tmp/tmprbtdcq02.d(29): Error: unterminated /* */ comment\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprbtdcq02.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\t\
    if(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd\
    \ += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even), even_odd_count(odd);\n\
    }\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsk3ohsjh.d(27): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpsk3ohsjh.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\t\
    if(digit % 2 == 0)\n\t\t\teven++;\n\t\telse\n\t\t\todd++;\n\t}\n\treturn Tuple!(long,\
    \ long) even_odd_count(even), even_odd_count(odd);\n}\nunittest\n{\n    alias\
    \ candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpnjzxbd_b.d(23): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpnjzxbd_b.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile (num > 0) {\n\t\tlong digit = num % 10;\n\t\tif (digit % 2 ==\
    \ 0) {\n\t\t\teven++;\n\t\t} else {\n\t\t\todd++;\n\t\t}\n\t\tnum /= 10;\n\t}\n\
    \treturn Tuple!(long, long) even_odd_count(even), even_odd_count(odd);\n}\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpl9wlhnke.d(23): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpl9wlhnke.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum = num / 10;\n\
    \t\tif(digit % 2 == 0)\n\t\t\teven++;\n\t\telse\n\t\t\todd++;\n\t}\n\treturn Tuple!(long,\
    \ long)!(even, odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n\
    \    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxlk2ikvg.d(23): Error: multiple ! arguments are not allowed\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxlk2ikvg.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n\
    \    long odd = 0;\n    long digit = 0;\n    long count = 0;\n    while(num >\
    \ 0)\n    {\n        digit = num % 10;\n        num = num / 10;\n        if(digit\
    \ % 2 == 0)\n        {\n            even++;\n        }\n        else\n       \
    \ {\n            odd++;\n        }\n        count++;\n    }\n    return Tuple!(long,\
    \ long) even, odd;\n}\n/*\nGiven a long integer. return a tuple that has the number\
    \ of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpma_fpidh.d(31): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmpma_fpidh.d(31): Error: found `,` instead of statement\\\
    n/tmp/tmpma_fpidh.d(33): Error: unterminated /* */ comment\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpma_fpidh.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\t\
    if(digit % 2 == 0)\n\t\t\teven++;\n\t\telse\n\t\t\todd++;\n\t}\n\treturn Tuple!(long,\
    \ long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n\
    \    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpb8ayy6tr.d(23): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmpb8ayy6tr.d(23): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb8ayy6tr.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n\
    \    long odd = 0;\n    long digit = 0;\n    long remainder = 0;\n    long count\
    \ = 0;\n    while(num > 0)\n    {\n        digit = num % 10;\n        remainder\
    \ = num % 10;\n        even = even * 10 + digit;\n        odd = odd + remainder;\n\
    \        num = num / 10;\n        count = count + 1;\n    }\n    return Tuple!(long,\
    \ long) even, Tuple!(long, long) odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpt37n8ewp.d(27): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmpt37n8ewp.d(27): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt37n8ewp.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0;\n\
    \tlong odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /=\
    \ 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\t\t\
    {\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even),\
    \ even_odd_count(odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpo8mpd1rq.d(28): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpo8mpd1rq.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n\
    \    long odd = 0;\n    long remainder = 0;\n    long quotient = 0;\n    long\
    \ temp = 0;\n    long count = 0;\n    long digit = 0;\n    long remainder2 = 0;\n\
    \    long quotient2 = 0;\n    long temp2 = 0;\n    while(num > 0)\n    {\n   \
    \     digit = num % 10;\n        remainder = num % 10;\n        quotient = num\
    \ / 10;\n        temp = quotient % 10;\n        quotient2 = quotient / 10;\n \
    \       temp2 = quotient2 % 10;\n        count = count + 1;\n        if(temp ==\
    \ 0)\n        {\n            even = even + 1;\n        }\n        else\n     \
    \   {\n            odd = odd + 1;\n        }\n        if(temp2 == 0)\n       \
    \ {\n            remainder2 = remainder + 1;\n        }\n        else\n      \
    \  {\n            remainder2 = remainder2 + 1;\n        }\n        num = quotient2;\n\
    \    }\n    return Tuple!(long, long) even_odd_count(even, odd, remainder, remainder2,\
    \ quotient2, count);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n\
    \    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjga8__7w.d(50): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpjga8__7w.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n\
    \    long odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n\
    \        num /= 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n\
    \        }\n        else\n        {\n            odd++;\n        }\n    }\n  \
    \  return Tuple!(long, long) odd, even;\n}\n/*\nGiven a positive integer. return\
    \ a tuple that has the number of even and odd digits respectively.\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpj9pqcmhj.d(28): Error: found `odd` when expecting `;` following\
    \ `return` statement\\n/tmp/tmpj9pqcmhj.d(28): Error: found `,` instead of statement\\\
    n/tmp/tmpj9pqcmhj.d(30): Error: unterminated /* */ comment\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj9pqcmhj.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0,\
    \ odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n      \
    \  num /= 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n  \
    \      }\n        else\n        {\n            odd++;\n        }\n    }\n    return\
    \ Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp32ba6wb4.d(27): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmp32ba6wb4.d(27): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp32ba6wb4.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0,\
    \ odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n      \
    \  num /= 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n  \
    \      }\n        else\n        {\n            odd++;\n        }\n    }\n    return\
    \ Tuple!(long, long) even, odd;\n}\n/*\nGiven a positive integer. return a tuple\
    \ that has the number of even and odd digits respectively.\nunittest\n{\n    alias\
    \ candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp14s8uxh9.d(27): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmp14s8uxh9.d(27): Error: found `,` instead of statement\\\
    n/tmp/tmp14s8uxh9.d(29): Error: unterminated /* */ comment\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp14s8uxh9.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0,\
    \ odd = 0;\n    while(num > 0) {\n        long digit = num % 10;\n        num\
    \ /= 10;\n        if(digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n    }\n    return Tuple!(long, long) even, odd;\n\
    }\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6qcy3_8k.d(23): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmp6qcy3_8k.d(23): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6qcy3_8k.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0;\n\
    \tlong odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tif(digit\
    \ % 2 == 0)\n\t\t{\n\t\t\teven++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd++;\n\t\t\
    }\n\t\tnum /= 10;\n\t}\n\treturn Tuple!(long, long)!(even, odd);\n}\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpea6fhgl6.d(28): Error: multiple ! arguments are not allowed\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpea6fhgl6.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n\
    \    long odd = 0;\n    long remainder = 0;\n    long temp = 0;\n    long count\
    \ = 0;\n    while(num > 0)\n    {\n        remainder = num % 10;\n        temp\
    \ = even;\n        even = odd;\n        odd = temp;\n        num = num / 10;\n\
    \        count += 1;\n    }\n    return Tuple!(long, long) count, even;\n}\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp480kpenb.d(27): Error: found `count` when expecting `;` following\
    \ `return` statement\\n/tmp/tmp480kpenb.d(27): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp480kpenb.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0,\
    \ odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n      \
    \  num /= 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n  \
    \      }\n        else\n        {\n            odd++;\n        }\n    }\n    return\
    \ Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpp0hv3_4_.d(27): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmpp0hv3_4_.d(27): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp0hv3_4_.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n\
    \    long odd = 0;\n    while(num > 0) {\n        long digit = num % 10;\n   \
    \     if(digit % 2 == 0) {\n            even++;\n        } else {\n          \
    \  odd++;\n        }\n        num /= 10;\n    }\n    return Tuple!(long, long)\
    \ even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgzoboodw.d(24): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmpgzoboodw.d(24): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgzoboodw.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\t\
    if(digit % 2 == 0)\n\t\t\teven++;\n\t\telse\n\t\t\todd++;\n\t}\n\treturn Tuple!(long,\
    \ long) odd, even;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n\
    \    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9r06cxo1.d(23): Error: found `odd` when expecting `;` following\
    \ `return` statement\\n/tmp/tmp9r06cxo1.d(23): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9r06cxo1.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n\
    \    long odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n\
    \        num /= 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n\
    \        }\n        else\n        {\n            odd++;\n        }\n    }\n  \
    \  return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate =\
    \ even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8vgx343y.d(28): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmp8vgx343y.d(28): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8vgx343y.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\t\
    if(digit % 2 == 0)\n\t\t{\n\t\t\teven += digit;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t\
    odd += digit;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even), even_odd_count(odd);\n\
    }\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppgznnfpb.d(27): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmppgznnfpb.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\t\
    if(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd\
    \ += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even), even_odd_count(odd);\n\
    }\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_47hynpv.d(27): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmp_47hynpv.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0,\
    \ odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n      \
    \  num /= 10;\n        if(digit % 2 == 0)\n            even++;\n        else\n\
    \            odd++;\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpra15ouo3.d(23): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmpra15ouo3.d(23): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpra15ouo3.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n\
    \    long odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n\
    \        if(digit % 2 == 0)\n        {\n            even++;\n        }\n     \
    \   else\n        {\n            odd++;\n        }\n        num /= 10;\n    }\n\
    \    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate\
    \ = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpy2_bsr3y.d(28): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmpy2_bsr3y.d(28): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy2_bsr3y.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0;\n\
    \tlong odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong temp = num % 10;\n\t\teven =\
    \ even * 10 + temp;\n\t\todd = odd + temp;\n\t\tnum = num / 10;\n\t}\n\treturn\
    \ Tuple!(long, long) even_odd_count(even), Tuple!(long, long) even_odd_count(odd);\n\
    }\n/*\nGiven a long integer. return a tuple that has the number of even and odd\
    \ digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n\
    \    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpp27t6dzm.d(22): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\n/tmp/tmpp27t6dzm.d(22): Error: found `even_odd_count`\
    \ when expecting `;` following statement\\n/tmp/tmpp27t6dzm.d(24): Error: unterminated\
    \ /* */ comment\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp27t6dzm.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n\
    \    long odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n\
    \        if(digit % 2 == 0)\n        {\n            even++;\n        }\n     \
    \   else\n        {\n            odd++;\n        }\n        num /= 10;\n    }\n\
    \    return Tuple!(long, long) even, odd;\n}\n/*\nGiven a long integer. return\
    \ a tuple that has the number of even and odd digits respectively.\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvsli9va6.d(28): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmpvsli9va6.d(28): Error: found `,` instead of statement\\\
    n/tmp/tmpvsli9va6.d(30): Error: unterminated /* */ comment\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvsli9va6.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n\
    \    long odd = 0;\n    long digit = 0;\n    while(num > 0)\n    {\n        digit\
    \ = num % 10;\n        num = num / 10;\n        if(digit % 2 == 0)\n        {\n\
    \            even++;\n        }\n        else\n        {\n            odd++;\n\
    \        }\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n\
    \    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprc3inc46.d(29): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmprc3inc46.d(29): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprc3inc46.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0;\n\
    \tlong odd = 0;\n\twhile (num > 0) {\n\t\tlong digit = num % 10;\n\t\tif (digit\
    \ % 2 == 0) {\n\t\t\teven++;\n\t\t} else {\n\t\t\todd++;\n\t\t}\n\t\tnum /= 10;\n\
    \t}\n\treturn Tuple!(long, long) odd, even;\n}\nunittest\n{\n    alias candidate\
    \ = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5lhtm2e4.d(24): Error: found `odd` when expecting `;` following\
    \ `return` statement\\n/tmp/tmp5lhtm2e4.d(24): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5lhtm2e4.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n\
    \    long odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n\
    \        num /= 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n\
    \        }\n        else\n        {\n            odd++;\n        }\n    }\n  \
    \  return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate =\
    \ even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfjz479ll.d(28): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmpfjz479ll.d(28): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfjz479ll.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n\
    \    long odd = 0;\n    long digit = 0;\n    while(num > 0)\n    {\n        digit\
    \ = num % 10;\n        num = num / 10;\n        if(digit % 2 == 0)\n        {\n\
    \            even++;\n        }\n        else\n        {\n            odd++;\n\
    \        }\n    }\n    return Tuple!(long, long) odd, even;\n}\n/*\nGiven a floating\
    \ point number. return a tuple that has the number of digits after the decimal\
    \ point and how many digits before the decimal point respectively.\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8rd4vyid.d(29): Error: found `odd` when expecting `;` following\
    \ `return` statement\\n/tmp/tmp8rd4vyid.d(29): Error: found `,` instead of statement\\\
    n/tmp/tmp8rd4vyid.d(31): Error: unterminated /* */ comment\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8rd4vyid.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tif(digit % 2 ==\
    \ 0)\n\t\t{\n\t\t\teven++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd++;\n\t\t}\n\t\t\
    num /= 10;\n\t}\n\treturn Tuple!(long, long) even_odd_count(even), even_odd_count(odd);\n\
    }\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmi7xme5g.d(27): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpmi7xme5g.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\t\
    if(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd\
    \ += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even), even_odd_count(odd);\n\
    }\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp23xcemi2.d(27): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmp23xcemi2.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0,\
    \ odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n      \
    \  if(digit % 2 == 0)\n            even++;\n        else\n            odd++;\n\
    \        num /= 10;\n    }\n    return Tuple!(long, long) even, odd;\n}\n/*\n\
    Given a floating point number. return a tuple that has the number of even and\
    \ odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjilex3p_.d(23): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmpjilex3p_.d(23): Error: found `,` instead of statement\\\
    n/tmp/tmpjilex3p_.d(25): Error: unterminated /* */ comment\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjilex3p_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\t\
    if(digit % 2 == 0)\n\t\t\teven++;\n\t\telse\n\t\t\todd++;\n\t}\n\treturn Tuple!(long,\
    \ long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n\
    \    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8qu3i1cm.d(23): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmp8qu3i1cm.d(23): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8qu3i1cm.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\t\
    if(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd\
    \ += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even), even_odd_count(odd);\n\
    }\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppm83h76d.d(27): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmppm83h76d.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\t\
    if(digit % 2 == 0)\n\t\t\teven++;\n\t\telse\n\t\t\todd++;\n\t}\n\treturn Tuple!(long,\
    \ long) even_odd_count(even), even_odd_count(odd);\n}\nunittest\n{\n    alias\
    \ candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6x09i4qx.d(23): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmp6x09i4qx.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile(num > 0) {\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\tif(digit\
    \ % 2 == 0) {\n\t\t\teven += digit;\n\t\t} else {\n\t\t\todd += digit;\n\t\t}\n\
    \t}\n\treturn Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate\
    \ = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpnb0s6htl.d(23): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmpnb0s6htl.d(23): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnb0s6htl.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n\
    \    long odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n\
    \        num /= 10;\n        if(digit % 2 == 0)\n        {\n            even +=\
    \ 1;\n        }\n        else\n        {\n            odd += 1;\n        }\n \
    \   }\n    return Tuple!(long, long) even, odd;\n}\n/*\nGiven a string. return\
    \ a tuple that has the number of even and odd digits respectively.\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7o5thrcj.d(28): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmp7o5thrcj.d(28): Error: found `,` instead of statement\\\
    n/tmp/tmp7o5thrcj.d(30): Error: unterminated /* */ comment\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7o5thrcj.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\t\
    if(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd\
    \ += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even), even_odd_count(odd);\n\
    }\n/*\nGiven a long integer. return a tuple that has the number of even and odd\
    \ digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n\
    \    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4ynf_pst.d(27): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\n/tmp/tmp4ynf_pst.d(29): Error: unterminated\
    \ /* */ comment\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4ynf_pst.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0;\n\
    \tlong odd = 0;\n\twhile (num > 0) {\n\t\tlong digit = num % 10;\n\t\tnum = num\
    \ / 10;\n\t\tif (digit % 2 == 0) {\n\t\t\teven++;\n\t\t} else {\n\t\t\todd++;\n\
    \t\t}\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias\
    \ candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpga063bvm.d(24): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmpga063bvm.d(24): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpga063bvm.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n\
    \    long odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n\
    \        num = num / 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n\
    \        }\n        else\n        {\n            odd++;\n        }\n    }\n  \
    \  return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate =\
    \ even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6o2ndfrg.d(28): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmp6o2ndfrg.d(28): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6o2ndfrg.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n\
    \    long odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n\
    \        if(digit % 2 == 0)\n        {\n            even++;\n        }\n     \
    \   else\n        {\n            odd++;\n        }\n        num /= 10;\n    }\n\
    \    return Tuple!(long, long) odd, even;\n}\nunittest\n{\n    alias candidate\
    \ = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphqfwslqz.d(28): Error: found `odd` when expecting `;` following\
    \ `return` statement\\n/tmp/tmphqfwslqz.d(28): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphqfwslqz.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0;\n\
    \tlong odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /=\
    \ 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\t\t\
    {\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even),\
    \ even_odd_count(odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9zeke__p.d(28): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmp9zeke__p.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\t\
    if(digit % 2 == 0)\n\t\t\teven++;\n\t\telse\n\t\t\todd++;\n\t}\n\treturn Tuple!(long,\
    \ long) even_odd_count(even), even_odd_count(odd);\n}\nunittest\n{\n    alias\
    \ candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkajjh00r.d(23): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpkajjh00r.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\t\
    if(digit % 2 == 0)\n\t\t\teven++;\n\t\telse\n\t\t\todd++;\n\t}\n\treturn Tuple!(long,\
    \ long) even_odd_count(even), even_odd_count(odd);\n}\nunittest\n{\n    alias\
    \ candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptq4zycd2.d(23): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmptq4zycd2.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n\
    \    long odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n\
    \        if(digit % 2 == 0)\n        {\n            even++;\n        }\n     \
    \   else\n        {\n            odd++;\n        }\n        num /= 10;\n    }\n\
    \    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate\
    \ = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxtvlzrfj.d(28): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmpxtvlzrfj.d(28): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxtvlzrfj.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\t\
    if(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd\
    \ += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long)!(even, odd);\n}\nunittest\n{\n\
    \    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxuxlk9eh.d(27): Error: multiple ! arguments are not allowed\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxuxlk9eh.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile (num > 0) {\n\t\tlong digit = num % 10;\n\t\tif (digit % 2 ==\
    \ 0) {\n\t\t\teven++;\n\t\t} else {\n\t\t\todd++;\n\t\t}\n\t\tnum /= 10;\n\t}\n\
    \treturn Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate =\
    \ even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpc3x0ds9w.d(23): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmpc3x0ds9w.d(23): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc3x0ds9w.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0;\n\
    \tlong odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tif(digit\
    \ % 2 == 0)\n\t\t{\n\t\t\teven++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd++;\n\t\t\
    }\n\t\tnum /= 10;\n\t}\n\treturn Tuple!(long, long) even_odd_count(even, odd);\n\
    }\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpyis5n_vi.d(28): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpyis5n_vi.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tif(digit % 2 ==\
    \ 0)\n\t\t{\n\t\t\teven++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd++;\n\t\t}\n\t\t\
    num /= 10;\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\n/*\nGiven a tuple\
    \ of integers. return a tuple that has the number of even and odd digits respectively.\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4r4v_dtk.d(27): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmp4r4v_dtk.d(27): Error: found `,` instead of statement\\\
    n/tmp/tmp4r4v_dtk.d(29): Error: unterminated /* */ comment\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4r4v_dtk.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0,\
    \ odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n      \
    \  if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n\
    \        {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppyw2ltsi.d(27): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmppyw2ltsi.d(27): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppyw2ltsi.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile (num > 0) {\n\t\tlong digit = num % 10;\n\t\tif (digit % 2 ==\
    \ 0) {\n\t\t\teven++;\n\t\t} else {\n\t\t\todd++;\n\t\t}\n\t\tnum /= 10;\n\t}\n\
    \treturn Tuple!(long, long) even_odd_count(even, odd);\n}\nunittest\n{\n    alias\
    \ candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpulkb6c3d.d(23): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpulkb6c3d.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\t\
    if(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd\
    \ += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even), even_odd_count(odd);\n\
    }\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp68xhdbag.d(27): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmp68xhdbag.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0,\
    \ odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n      \
    \  if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n\
    \        {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ Tuple!(long, long) even, odd;\n}\n/*\nGiven a tuple of integers. return a tuple\
    \ that has the number of even and odd digits respectively.\nunittest\n{\n    alias\
    \ candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpe_1jakku.d(27): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmpe_1jakku.d(27): Error: found `,` instead of statement\\\
    n/tmp/tmpe_1jakku.d(29): Error: unterminated /* */ comment\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpe_1jakku.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n\
    \    long odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n\
    \        num /= 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n\
    \        }\n        else\n        {\n            odd++;\n        }\n    }\n  \
    \  return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate =\
    \ even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp90dtvcip.d(28): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmp90dtvcip.d(28): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp90dtvcip.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\t\
    if(digit % 2 == 0)\n\t\t{\n\t\t\teven++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd++;\n\
    \t\t}\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias\
    \ candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3bgcwo5q.d(27): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmp3bgcwo5q.d(27): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3bgcwo5q.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n\
    \    long odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n\
    \        num /= 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n\
    \        }\n        else\n        {\n            odd++;\n        }\n    }\n  \
    \  return Tuple!(long, long) even, odd;\n}\n/*\nGiven a positive integer and an\
    \ integer, return the sum of the two integers multiplied together.\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3ro9rp3y.d(28): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmp3ro9rp3y.d(28): Error: found `,` instead of statement\\\
    n/tmp/tmp3ro9rp3y.d(30): Error: unterminated /* */ comment\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3ro9rp3y.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile(num > 0) {\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\tif(digit\
    \ % 2 == 0) {\n\t\t\teven += digit;\n\t\t} else {\n\t\t\todd += digit;\n\t\t}\n\
    \t}\n\treturn Tuple!(long, long) odd, even;\n}\nunittest\n{\n    alias candidate\
    \ = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbrc_yxer.d(23): Error: found `odd` when expecting `;` following\
    \ `return` statement\\n/tmp/tmpbrc_yxer.d(23): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbrc_yxer.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\t\
    if(digit % 2 == 0)\n\t\t{\n\t\t\teven++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd++;\n\
    \t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even, odd);\n}\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8kf6zy0v.d(27): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmp8kf6zy0v.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile(num > 0) {\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\tif(digit\
    \ % 2 == 0) {\n\t\t\teven++;\n\t\t} else {\n\t\t\todd++;\n\t\t}\n\t}\n\treturn\
    \ Tuple!(long, long) even_odd_count(even), even_odd_count(odd);\n}\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpq3ayz3wz.d(23): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpq3ayz3wz.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\t\
    if(digit % 2 == 0)\n\t\t{\n\t\t\teven++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd++;\n\
    \t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even, odd);\n}\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4f1bnzmm.d(27): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmp4f1bnzmm.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0,\
    \ odd = 0;\n    while(num > 0) {\n        long digit = num % 10;\n        if(digit\
    \ % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n   \
    \     }\n        num /= 10;\n    }\n    return Tuple!(long, long) even, odd;\n\
    }\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdjj0jamq.d(23): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmpdjj0jamq.d(23): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdjj0jamq.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tif(digit % 2 ==\
    \ 0)\n\t\t{\n\t\t\teven++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd++;\n\t\t}\n\t\t\
    num = num / 10;\n\t}\n\treturn Tuple!(long, long)!(even, odd);\n}\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdk1nhp33.d(27): Error: multiple ! arguments are not allowed\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdk1nhp33.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n\
    \    long odd = 0;\n    long digit;\n    \n    while (num > 0) {\n        digit\
    \ = num % 10;\n        even = even * 10 + digit;\n        odd = odd * 10 - digit;\n\
    \        num = num / 10;\n    }\n    return Tuple!(long, long) odd, even;\n}\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpm7zbfhxy.d(23): Error: found `odd` when expecting `;` following\
    \ `return` statement\\n/tmp/tmpm7zbfhxy.d(23): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpm7zbfhxy.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\t\
    if(digit % 2 == 0)\n\t\t{\n\t\t\teven += digit;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t\
    odd += digit;\n\t\t}\n\t}\n\treturn Tuple!(long, long){ even, odd };\n}\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvsj97hiv.d(27): Error: found `{` when expecting `;` following\
    \ `return` statement\\n/tmp/tmpvsj97hiv.d(27): Error: found `}` when expecting\
    \ `;` following statement\\n/tmp/tmpvsj97hiv.d(27): Deprecation: use `{ }` for\
    \ an empty statement, not `;`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmpvsj97hiv.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\t\
    if(digit % 2 == 0)\n\t\t{\n\t\t\teven++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd++;\n\
    \t\t}\n\t}\n\treturn Tuple!(long, long)!(even, odd);\n}\nunittest\n{\n    alias\
    \ candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8lm9vrsy.d(27): Error: multiple ! arguments are not allowed\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8lm9vrsy.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0;\n\
    \tlong odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong temp = num % 10;\n\t\teven =\
    \ even + temp;\n\t\todd = odd + temp;\n\t\tnum = num / 10;\n\t}\n\treturn Tuple!(long,\
    \ long) even_odd_count(even), Tuple!(long, long) even_odd_count(odd);\n}\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpj3ifn71g.d(22): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\n/tmp/tmpj3ifn71g.d(22): Error: found `even_odd_count`\
    \ when expecting `;` following statement\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpj3ifn71g.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n\
    \    long odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n\
    \        num = num / 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n\
    \        }\n        else\n        {\n            odd++;\n        }\n    }\n  \
    \  return Tuple!(long, long) odd, even;\n}\n/*\nGiven a positive integer. return\
    \ a tuple that has the number of even and odd digits respectively.\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_q7sgmkc.d(28): Error: found `odd` when expecting `;` following\
    \ `return` statement\\n/tmp/tmp_q7sgmkc.d(28): Error: found `,` instead of statement\\\
    n/tmp/tmp_q7sgmkc.d(30): Error: unterminated /* */ comment\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_q7sgmkc.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\t\
    if(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd\
    \ += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even, odd);\n\
    }\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp35dbatnl.d(27): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmp35dbatnl.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0,\
    \ odd = 0;\n    while(num > 0) {\n        long digit = num % 10;\n        num\
    \ /= 10;\n        if(digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n    }\n    return Tuple!(long, long) even, odd;\n\
    }\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpifo_04_1.d(23): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmpifo_04_1.d(23): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpifo_04_1.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n\
    \    long odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n\
    \        num /= 10;\n        if(digit % 2 == 0)\n            even++;\n       \
    \ else\n            odd++;\n    }\n    return Tuple!(long, long) even, odd;\n\
    }\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp78lzarkz.d(24): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmp78lzarkz.d(24): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp78lzarkz.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\t\
    if(digit % 2 == 0)\n\t\t\teven++;\n\t\telse\n\t\t\todd++;\n\t}\n\treturn Tuple!(long,\
    \ long) even_odd_count(even), even_odd_count(odd);\n}\nunittest\n{\n    alias\
    \ candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpcs5_pog3.d(23): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpcs5_pog3.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n\
    \    long odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n\
    \        num /= 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n\
    \        }\n        else\n        {\n            odd++;\n        }\n    }\n  \
    \  return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate =\
    \ even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppa0rvy6b.d(28): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmppa0rvy6b.d(28): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppa0rvy6b.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0;\n\
    \tlong odd = 0;\n\twhile (num > 0) {\n\t\tlong digit = num % 10;\n\t\tif (digit\
    \ % 2 == 0) {\n\t\t\teven++;\n\t\t} else {\n\t\t\todd++;\n\t\t}\n\t\tnum /= 10;\n\
    \t}\n\treturn Tuple!(long, long) odd, even;\n}\n/*\nGiven a tuple of integers.\
    \ return a tuple that has the number of even and odd digits respectively.\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpeyw1zten.d(24): Error: found `odd` when expecting `;` following\
    \ `return` statement\\n/tmp/tmpeyw1zten.d(24): Error: found `,` instead of statement\\\
    n/tmp/tmpeyw1zten.d(26): Error: unterminated /* */ comment\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeyw1zten.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n\
    \    long odd = 0;\n    long digit = 0;\n    long remainder = 0;\n    long quotient\
    \ = 0;\n    long remainder_digit = 0;\n    while(num > 0)\n    {\n        digit\
    \ = num % 10;\n        remainder = num / 10;\n        remainder_digit = remainder\
    \ % 10;\n        quotient = remainder / 10;\n        even = even + remainder_digit\
    \ * 2;\n        odd = odd + quotient * 2;\n        num = quotient;\n    }\n  \
    \  return Tuple!(long, long) even_odd_count(even), Tuple!(long, long) even_odd_count(odd);\n\
    }\n/*\nGiven a floating point number. return a tuple that has the number of even\
    \ and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmax095ng.d(29): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\n/tmp/tmpmax095ng.d(29): Error: found `even_odd_count`\
    \ when expecting `;` following statement\\n/tmp/tmpmax095ng.d(31): Error: unterminated\
    \ /* */ comment\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmax095ng.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0;\n\
    \tlong odd = 0;\n\tlong digit = 0;\n\tlong remainder = 0;\n\tlong temp = 0;\n\t\
    while(num > 0)\n\t{\n\t\tdigit = num % 10;\n\t\tremainder = num % 10;\n\t\ttemp\
    \ = remainder;\n\t\tremainder = temp % 2;\n\t\teven = even + digit;\n\t\todd =\
    \ odd + remainder;\n\t\tnum = num / 10;\n\t}\n\treturn Tuple!(long, long) even_odd_count(even),\
    \ even_odd_count(odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpt9n26qgc.d(28): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpt9n26qgc.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0;\n\
    \tlong odd = 0;\n\tlong digit = 0;\n\tlong remainder = 0;\n\tlong count = 0;\n\
    \twhile(num > 0)\n\t{\n\t\tdigit = num % 10;\n\t\tremainder = num / 10;\n\t\t\
    even = even * 10 + digit;\n\t\todd = odd + remainder;\n\t\tnum = num / 10;\n\t\
    \tcount = count + 1;\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzzuz7_54.d(27): Error: found `odd` when expecting `;` following\
    \ `return` statement\\n/tmp/tmpzzuz7_54.d(27): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzzuz7_54.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n\
    \    long odd = 0;\n    while(num > 0) {\n        long digit = num % 10;\n   \
    \     if(digit % 2 == 0) {\n            even++;\n        } else {\n          \
    \  odd++;\n        }\n        num /= 10;\n    }\n    return Tuple!(long, long)\
    \ even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpq5eiydw9.d(24): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmpq5eiydw9.d(24): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq5eiydw9.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0,\
    \ odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n      \
    \  if(digit % 2 == 0)\n            even++;\n        else\n            odd++;\n\
    \        num /= 10;\n    }\n    return Tuple!(long, long) even, odd;\n}\n/*\n\
    Given a positive integer. return a tuple that has the number of even and odd digits\
    \ respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5u3dyjyv.d(23): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmp5u3dyjyv.d(23): Error: found `,` instead of statement\\\
    n/tmp/tmp5u3dyjyv.d(25): Error: unterminated /* */ comment\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5u3dyjyv.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0;\n\
    \tlong odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /=\
    \ 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\t\t\
    {\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even),\
    \ even_odd_count(odd);\n}\n/*\nGiven a positive integer. return a tuple that has\
    \ the number of even and odd digits respectively.\nunittest\n{\n    alias candidate\
    \ = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbiou4c_r.d(28): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\n/tmp/tmpbiou4c_r.d(30): Error: unterminated\
    \ /* */ comment\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbiou4c_r.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0;\n\
    \tlong odd = 0;\n\tlong digit = 0;\n\tlong remainder = 0;\n\tlong count = 0;\n\
    \twhile(num > 0)\n\t{\n\t\tdigit = num % 10;\n\t\tremainder = num % 10;\n\t\t\
    even = even * 10 + digit;\n\t\todd = odd + remainder;\n\t\tnum = num / 10;\n\t\
    \tcount = count + 1;\n\t}\n\treturn Tuple!(long, long) even_odd_count(even, odd,\
    \ count);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpswfttr2t.d(27): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpswfttr2t.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0,\
    \ odd = 0;\n    while(num > 0) {\n        long digit = num % 10;\n        if(digit\
    \ % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n   \
    \     }\n        num /= 10;\n    }\n    return Tuple!(long, long) even, odd;\n\
    }\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwjjrr1il.d(23): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmpwjjrr1il.d(23): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwjjrr1il.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0,\
    \ odd = 0;\n    while(num > 0) {\n        long digit = num % 10;\n        num\
    \ /= 10;\n        if(digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n    }\n    return Tuple!(long, long) even, odd;\n\
    }\n/*\nGiven a long integer. return a tuple that has the number of even and odd\
    \ digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n\
    \    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpivqyqgnf.d(23): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmpivqyqgnf.d(23): Error: found `,` instead of statement\\\
    n/tmp/tmpivqyqgnf.d(25): Error: unterminated /* */ comment\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpivqyqgnf.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0,\
    \ odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n      \
    \  if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n\
    \        {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ Tuple!(long, long) even_odd_count(even), even_odd_count(odd);\n}\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbbn57owl.d(27): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpbbn57owl.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0;\n\
    \tlong odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /=\
    \ 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven++;\n\t\t}\n\t\telse\n\t\t{\n\t\
    \t\todd++;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\n/*\nGiven a\
    \ long integer. return a tuple that has the number of even and odd digits respectively.\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpoyut_adj.d(28): Error: found `odd` when expecting `;` following\
    \ `return` statement\\n/tmp/tmpoyut_adj.d(28): Error: found `,` instead of statement\\\
    n/tmp/tmpoyut_adj.d(30): Error: unterminated /* */ comment\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpoyut_adj.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n\
    \    long odd = 0;\n    long digit = 0;\n    long remainder = 0;\n    long i =\
    \ 0;\n    while(num > 0)\n    {\n        digit = num % 10;\n        remainder\
    \ = num / 10;\n        even = even + digit * 2;\n        odd = odd + digit * 2\
    \ + 1;\n        num = remainder;\n    }\n    return Tuple!(long, long) odd, even;\n\
    }\n/*\nGiven a long integer. return a tuple that has the number of even and odd\
    \ digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n\
    \    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwi9mbhn_.d(26): Error: found `odd` when expecting `;` following\
    \ `return` statement\\n/tmp/tmpwi9mbhn_.d(26): Error: found `,` instead of statement\\\
    n/tmp/tmpwi9mbhn_.d(28): Error: unterminated /* */ comment\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwi9mbhn_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0;\n\
    \tlong odd = 0;\n\tlong digit = 0;\n\tlong remainder = 0;\n\tlong temp = 0;\n\t\
    while(num > 0)\n\t{\n\t\tdigit = num % 10;\n\t\tremainder = num / 10;\n\t\ttemp\
    \ = remainder;\n\t\teven = even + temp;\n\t\todd = odd + digit;\n\t\tnum = num\
    \ / 10;\n\t}\n\treturn Tuple!(long, long) even_odd_count(even, odd);\n}\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdtijlwzq.d(27): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpdtijlwzq.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0;\n\
    \tlong odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum =\
    \ num / 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven++;\n\t\t}\n\t\telse\n\t\
    \t{\n\t\t\todd++;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even,\
    \ odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpk1uas1y3.d(28): Error: found `even_odd_count` when expecting\
    \ `;` following `return` statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpk1uas1y3.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n\
    \    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd\
    \ = 0;\n\twhile (num > 0) {\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\t\
    if (digit % 2 == 0) {\n\t\t\teven++;\n\t\t} else {\n\t\t\todd++;\n\t\t}\n\t}\n\
    \treturn Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate =\
    \ even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjgx8p_1i.d(23): Error: found `even` when expecting `;` following\
    \ `return` statement\\n/tmp/tmpjgx8p_1i.d(23): Error: found `,` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjgx8p_1i.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError

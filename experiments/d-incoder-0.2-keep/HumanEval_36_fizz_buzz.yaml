name: HumanEval_36_fizz_buzz
language: humaneval_to_dlang.py
prompt: "import std.math;\nimport std.typecons;\n/*\nReturn the number of times the\
  \ digit 7 appears in integers less than n which are divisible by 11 or 13.\n   \
  \ >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n\
  \    3\n    \n*/\nlong fizz_buzz(long n) \n"
tests: "unittest\n{\n    alias candidate = fizz_buzz;\n\n    assert(candidate(50L)\
  \ == 0L);\n    assert(candidate(78L) == 2L);\n    assert(candidate(79L) == 3L);\n\
  \    assert(candidate(100L) == 3L);\n    assert(candidate(200L) == 6L);\n    assert(candidate(4000L)\
  \ == 192L);\n    assert(candidate(10000L) == 639L);\n    assert(candidate(100000L)\
  \ == 8026L);\n}\nvoid main(){}"
completions: ["{\n    long count = 0;\n    long remainder;\n    long i;\n    \n  \
    \  for(i = 1; i <= n; i++) {\n        remainder = i % 11;\n        if (remainder\
    \ == 0 || remainder == 7) {\n            count++;\n        }\n    }\n    return\
    \ count;\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=fizzbuzz,c++,algorithm |>\n\
    <code>\n#include <iostream>\n#include <string>\nusing namespace std;", "{\n  \
    \  long count = 0;\n    for(long i = n; i > 0; i /= 11)\n    {\n        if(i%11\
    \ == 7)\n            count++;\n    }\n    for(long i = n; i > 0; i /= 13)\n  \
    \  {\n        if(i%13 == 7)\n            count++;\n    }\n    return count;\n\
    }\n</code>\n<|/ a tags=c++,fizzbuzz |>\n<| c |>\nThe `count` variable is unnecessary.\
    \ Just use `i%11 == 7 || i%13 == 7` instead.\n<|/ c |>\n<| c |>\nYeah, I know.\
    \ I was just trying to show how to do it in one loop. I'll edit my answer.\n<|/\
    \ c |>\n<| c |>\nI believe that `count` variable is necessary for OP's purpose.\
    \ He wants to count how many times `7` appears in `1..n` which are divisible by\
    \ `11` or `13`.\n<|/ c |>\n<| c |>\nYes, I see that now. Thanks for clarifying.\n\
    <|/ c |>\n<| a tags=c++,fizzbuzz |>\n<code>\n#include <iostream>\nusing namespace\
    \ std;", "{\n\tlong count = 0;\n\tlong remainder;\n\tlong i;\n\tfor(i = 1; i <=\
    \ n; i++)\n\t{\n\t\tremainder = i % 11;\n\t\tif((remainder == 7) || (remainder\
    \ == 13))\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}", "{\n    long\
    \ count = 0;\n    long remainder;\n    long i;\n    \n    for (i = 1; i <= n;\
    \ i++) {\n        remainder = i % 11;\n        if (remainder == 7) {\n       \
    \     count++;\n        }\n    }\n    return count;\n}\n</code>\n<|/ a tags=fizzbuzz,c++\
    \ |>\n<| c |>\nThanks so much! I appreciate it!\n<|/ c |>\n<| a tags=fizzbuzz,c++\
    \ |>\n<code>\n#include <iostream>\nusing namespace std;", "{\n    long count =\
    \ 0;\n    for(long i = n; i > 0; i /= 11)\n    {\n        if((n % i) == 0)\n \
    \       {\n            count += 1;\n        }\n    }\n    for(long i = n; i >\
    \ 0; i /= 13)\n    {\n        if((n % i) == 0)\n        {\n            count +=\
    \ 1;\n        }\n    }\n    return count;\n}\n</code>\n<|/ a dscore=2 |>\n<| a\
    \ tags=algorithm,fizzbuzz,c++,c |>\n<code>\n#include <iostream>\nusing namespace\
    \ std;", "{\n    long count = 0;\n    long div = 11;\n    long mod;\n    \n  \
    \  while(n > div)\n    {\n        mod = n % div;\n        if(mod < 7)\n      \
    \  {\n            count += 1;\n        }\n        div *= 11;\n    }\n    return\
    \ count;\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\npublic int\
    \ fizz_buzz(int n) {\n    int count = 0;\n    int div = 11; \n    int mod = n%div;\n\
    \    while(mod != 0){\n        if(mod%div == 0){\n            count++;\n     \
    \   }\n        div*=11;\n        mod = n%div;\n    }\n    return count;\n}\n</code>\n\
    <|/ a tags=fizzbuzz,java |>\n<| a tags=fizzbuzz,java |>\n<code>\npublic int fizzBuzz(int\
    \ n) {\n    int count = 0;\n    int div = 11; \n    int mod = n%div;\n    while(mod\
    \ != 0){\n        if(mod%div == 0){\n            count++;\n        }\n       \
    \ div*=11;\n        mod = n%div;\n    }\n    return count;\n}\n</code>\n<|/ a\
    \ dscore=1 |>\n<| a tags=fizzbuzz,java |>\n<code>\npublic int fizzBuzz(int n)\
    \ {\n    int count = 0;\n    int div = 11; \n    int mod = n%div;\n    while(mod\
    \ != 0){\n        if(mod%div == 0){\n            count++;\n        }\n       \
    \ div*=11;\n        mod = n%div;\n    }\n    return count;\n}\n</code>\n<|/ a\
    \ dscore=1 |>\n<| a tags=fizzbuzz,java |>\n<code>\npublic class FizzBuzz {", "{\n\
    \    long count = 0;\n    long remainder;\n    \n    while(n > 0)\n    {\n   \
    \     remainder = n % 11;\n        if (remainder == 7)\n        {\n          \
    \  count++;\n        }\n        n /= 11;\n    }\n    return count;\n}\n</code>\n\
    <|/ a dscore=1 |>\n<| c |>\nThis doesn't work. `fizz_buzz(78)` returns `2` instead\
    \ of `3`.\n<|/ c |>\n<| c |>\nIt works fine for me. Are you sure you copied the\
    \ code correctly?\n<|/ c |>\n<| c |>\nYes, I copied it exactly. I'm running it\
    \ on ideone.\n<|/ c |>\n<| c |>\nOkay, I see what you're saying. You're right.\
    \ My apologies. I misread the question and thought you were trying to count the\
    \ numbers that had the digit 7 in them. I'll edit my answer to fix it.\n<|/ c\
    \ |>\n<| c |>\nNo worries. I appreciate your help.\n<|/ c |>\n<| a tags=fizzbuzz,c++\
    \ |>\n<code>\n#include <iostream>\nusing namespace std;", "{\n    long count =\
    \ 0;\n    long i;\n    for(i = 0; i < n; ++i)\n    {\n        if((i % 11) == 0\
    \ || i % 13 == 0)\n        {\n            count += 1;\n        }\n    }\n    return\
    \ count;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThanks for the answer. I'm still\
    \ learning and I appreciate your help. I understand what you're saying but I'm\
    \ having trouble understanding how to implement it. I'm a beginner at programming\
    \ and I'm still trying to learn the basics. I understand what you're saying but\
    \ I'm having trouble understanding how to implement it. I'm a beginner at programming\
    \ and I'm still trying to learn the basics. I understand what you're saying but\
    \ I'm having trouble understanding how to implement it. I'm a beginner at programming\
    \ and I'm still trying to learn the basics. I understand what you're saying but\
    \ I'm having trouble understanding how to implement it. I'm a beginner at programming\
    \ and I'm still trying to learn the basics. I understand what you're saying but\
    \ I'm having trouble understanding how to implement it. I'm a beginner at programming\
    \ and I'm still trying to learn the basics. I understand what you're saying but\
    \ I'm having trouble understanding how to implement it. I'm a beginner at programming\
    \ and I'm still trying to learn the basics.\n<|/ c |>\n<| c |>\nI understand what\
    \ you're saying but I'm having trouble understanding how to implement it. I'm\
    \ a beginner at programming and I'm still trying to learn the basics. I understand\
    \ what you're saying but I'm having trouble understanding how to implement it.\
    \ I'm a beginner at programming and I'm still trying to learn the basics. I understand\
    \ what you're saying but I'm having trouble understanding how to implement it.\
    \ I'm a beginner at programming and I'm still trying to learn the basics. I understand\
    \ what you're saying but I'm having trouble understanding how to implement it.\
    \ I'm a beginner at programming and I'm still trying to learn the basics. I understand\
    \ what you're saying but I'm having trouble understanding how to implement it.\
    \ I'm a beginner at programming and I'm still trying to learn the basics.\n<|/\
    \ c |>\n<| c |>\nI understand what you're saying but I'm having trouble understanding\
    \ how to implement it. I'm a beginner at programming and I'm still trying to learn\
    \ the basics. I understand what you're saying but I'm having trouble understanding\
    \ how to implement it. I'm a beginner at programming and I'm still trying to learn\
    \ the basics. I understand what you're saying but I'm having trouble understanding\
    \ how to implement it. I'm a beginner at programming and I'm still ", "{\n   \
    \ long count = 0;\n    long remainder;\n    long digit;\n    \n    while (n>0)\
    \ {\n        remainder = n%11;\n        if (remainder==7) {\n            count++;\n\
    \        }\n        n = n/11;\n    }\n    return count;\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| a dscore=1 |>\n<code>\npublic static void main(String[] args) {\n   \
    \ long n= Integer.parseInt(args[0]);\n    long count= 0;\n    long remainder;\n\
    \    long digit;\n    \n    while(n>0){\n        remainder=n%11;\n        if(remainder==7){\n\
    \            count++;\n        }\n        n=n/11;\n    }\n    System.out.println(count);\n\
    }\n</code>\n<|/ a tags=java,fizzbuzz |>\n<| a tags=java,fizzbuzz |>\n<code>\n\
    import java.util.Scanner;", "{\n    long count = 0;\n    long temp;\n    long\
    \ i;\n    \n    for(i = 1; i <= n; ++i)\n    {\n        temp = i / 11;\n     \
    \   if(temp % 11 == 7)\n        {\n            ++count;\n        }\n        temp\
    \ = i / 13;\n        if(temp % 13 == 7)\n        {\n            ++count;\n   \
    \     }\n    }\n    return count;\n}", "{\n    long count = 0;\n    long remainder;\n\
    \    long i;\n    \n    for(i = 1; i <= n; i++) {\n        remainder = i % 11;\n\
    \        if(remainder == 7) {\n            count++;\n        }\n    }\n    return\
    \ count;\n}\n</code>\n<|/ a tags=fizzbuzz,c++,algorithm |>\n<| a dscore=0 |>\n\
    <code>\n#include <iostream>\nusing namespace std;", "{\n    long count = 0;\n\
    \    long remainder;\n    long digit;\n    \n    for(long i = n; i > 0; i /= 10)\n\
    \    {\n        remainder = i % 10;\n        digit = remainder / 11;\n       \
    \ if(digit == 7)\n        {\n            count += 1;\n        }\n    }\n    return\
    \ count;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=c++,fizzbuzz,algorithm |>\n\
    <code>\n#include <iostream>\nusing namespace std;", "{\n    long count = 0;\n\
    \    long remainder;\n    \n    while (n>0) {\n        remainder = n%11;\n   \
    \     if (remainder == 7 || remainder == 13) count++;\n        n = n/11;\n   \
    \ }\n    return count;\n}", "{\n    long count = 0;\n    long remainder;\n   \
    \ \n    while (n>0) {\n        remainder = n%11;\n        if (remainder == 7)\
    \ {\n            count++;\n        }\n        n = n/11;\n    }\n    return count;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a tags=fizzbuzz,c++,algorithm |>\n<code>\n#include\
    \ <iostream>\nusing namespace std;", "{\n    long count = 0;\n    for(long i =\
    \ 1; i < n; i+=11) {\n        if((n % i) == 0) {\n            if((n % i) == 7)\
    \ {\n                count++;\n            }\n        }\n    }\n    return count;\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThe OP wants fizz buzz counting up to\
    \ a number divisible by 11 or 13. Your code counts up to a number divisible by\
    \ 11 or 13.\n<|/ c |>\n<| c |>\nThanks for pointing that out. I've updated the\
    \ answer to reflect that.\n<|/ c |>\n<| a |>\n<code>\n#include <iostream>\nusing\
    \ namespace std;", "{\n    long count = 0;\n    for(long i = n; i > 0; i /= 11)\n\
    \    {\n        if(i%11 == 7)\n            count++;\n    }\n    for(long i = n;\
    \ i > 0; i /= 13)\n    {\n        if(i%13 == 7)\n            count++;\n    }\n\
    \    return count;\n}\n</code>\n<|/ a tags=fizzbuzz,c++,algorithm |>\n<| c |>\n\
    I like this solution, but I wonder if it will perform better than the other solutions\
    \ posted so far.\n<|/ c |>\n<| c |>\nI doubt it would be any faster, but it's\
    \ certainly more elegant.\n<|/ c |>\n<| c |>\nI doubt it would be any faster,\
    \ but it's certainly more elegant.\n<|/ c |>\n<| c |>\nI doubt it would be any\
    \ faster, but it's certainly more elegant.\n<|/ c |>\n<| c |>\nI doubt it would\
    \ be any faster, but it's certainly more elegant.\n<|/ c |>\n<| a tags=fizzbuzz,c++,algorithm\
    \ |>\n<code>\n#include <iostream>\nusing namespace std;", "{\n    long count =\
    \ 0;\n    long remainder;\n    \n    while (n>0) {\n        remainder = n%11;\n\
    \        if (remainder == 7 || remainder == 13) count++;\n        n = n/11;\n\
    \    }\n    return count;\n}\n</code>\n<|/ a tags=fizzbuzz,c++,algorithm |>\n\
    <| a tags=fizzbuzz,c++,algorithm |>\n<code>\n#include <iostream>\nusing namespace\
    \ std;", "{\n    long count = 0;\n    long remainder;\n    \n    while (n>0) {\n\
    \        remainder = n%11;\n        if (remainder == 7 || remainder == 13) count++;\n\
    \        n = n/11;\n    }\n    return count;\n}\n</code>\n<|/ a tags=fizzbuzz,c++,algorithm\
    \ |>\n<| c |>\n`long remainder;` should be `int remainder;`\n<|/ c |>\n<| c |>\n\
    : Thanks, I fixed it.\n<|/ c |>\n<| c |>\n: Thanks, I fixed it.\n<|/ c |>\n<|\
    \ c |>\n: Thanks, I fixed it.\n<|/ c |>\n<| c |>\n: Thanks, I fixed it.\n<|/ c\
    \ |>\n<| a dscore=4 |>\n<code>\n#include <iostream>\nusing namespace std;", "{\n\
    \    long count = 0;\n    long remainder;\n    \n    while(n > 0)\n    {\n   \
    \     remainder = n % 10;\n        if(remainder == 7)\n        {\n           \
    \ count++;\n        }\n        n = n / 10;\n    }\n    return count;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\nimport java.util.Scanner;", "{\n\
    \    long count = 0;\n    for(long i = n; i > 0; i /= 11) \n    {\n        for(long\
    \ j = 1; j <= i / 13; j++) \n        {\n            if(i % j == 0)\n         \
    \   {\n                count++;\n                break;\n            }\n     \
    \   }\n    }\n    return count;\n}\n</code>\n<|/ a dscore=0 |>\n<| a |>\n<code>\n\
    public int fizzBuzz(int n) {\n    int count = 0;\n    for(int i = 1; i <= n; i++)\
    \ {\n        if((i % 11) == 0) {\n            count++;\n        }\n        if((i\
    \ % 13) == 0) {\n            count++;\n        }\n        if((i % 15) == 0) {\n\
    \            count++;\n        }\n        if((i % 17) == 0) {\n            count++;\n\
    \        }\n        if((i % 19) == 0) {\n            count++;\n        }\n   \
    \     if((i % 23) == 0) {\n            count++;\n        }\n        if((i % 29)\
    \ == 0) {\n            count++;\n        }\n        if((i % 31) == 0) {\n    \
    \        count++;\n        }\n        if((i % 37) == 0) {\n            count++;\n\
    \        }\n        if((i % 41) == 0) {\n            count++;\n        }\n   \
    \     if((i % 43) == 0) {\n            count++;\n        }\n        if((i % 47)\
    \ == 0) {\n            count++;\n        }\n        if((i % 53) == 0) {\n    \
    \        count++;\n        }\n        if((i % 59) == 0) {\n            count++;\n\
    \        }\n        if((i % 61) == 0) {\n            count++;\n        }\n   \
    \     if((i % 67) == 0) {\n            count++;\n        }\n        if((i % 71)\
    \ == 0) {\n            count++;\n        }\n        if((i % 73) == 0) {\n    \
    \        count++;\n        }\n        if((i % 79) == 0) {\n            count++;\n\
    \        }\n        if((i % 83) == 0) {\n            count++;\n        }\n   \
    \     if((i % 89) == 0) {\n            count++;\n        }\n        if((i % 97)\
    \ == 0) {\n            count++;\n        }\n        if((i % 101) == 0) {\n   \
    \         count++;\n        }\n        if((i % 103) == 0) {\n            count++;\n\
    \        }\n        if((i % 107) == 0) {\n            count++;\n        }\n  \
    \      if((i % 109) == 0) {\n            count++;\n        }\n        if((i %\
    \ 113) == 0) {\n            count++;\n        }\n        if((i % 127) == 0) {\n\
    \            count++;\n        }\n        if((i % 131) == 0) {\n            count++;\n\
    \        }\n        if((i % 137) == 0) {\n            count++;\n        }\n  \
    \      if((i % 141) == 0) {\n            count++;\n        }\n        if((i %\
    \ 147) == 0) {\n            count++;\n", "{\n\tlong count = 0;\n\t\n\twhile (n\
    \ > 0)\n\t{\n\t\tif (n % 11 == 0)\n\t\t{\n\t\t\tcount += 1;\n\t\t}\n\t\telse if\
    \ (n % 13 == 0)\n\t\t{\n\t\t\tcount += 1;\n\t\t}\n\t\tn /= 10;\n\t}\n\treturn\
    \ count;\n}", "{\n    long count = 0;\n    long div = 11L;\n    while (n > div)\
    \ {\n        if (n % div == 0)\n            count++;\n        div = div * 3L;\n\
    \    }\n    return count;\n}\n</code>\n<|/ a tags=fizzbuzz,c++,algorithm |>\n\
    <| c |>\nThis code doesn't work. Try it with `fizz_buzz(78)` which should return\
    \ `2`.\n<|/ c |>\n<| c |>\nIt does work. Try it with `fizz_buzz(79)` which should\
    \ return `3`.\n<|/ c |>\n<| c |>\nIt does work. Try it with `fizz_buzz(79)` which\
    \ should return `3`.\n<|/ c |>\n<| c |>\nIt does work. Try it with `fizz_buzz(79)`\
    \ which should return `3`.\n<|/ c |>\n<| c |>\nIt does work. Try it with `fizz_buzz(79)`\
    \ which should return `3`.\n<|/ c |>\n<| a tags=fizzbuzz,c++,algorithm |>\n<code>\n\
    #include <iostream>\nusing namespace std;", "{\n    long count = 0;\n    long\
    \ remainder;\n    \n    for(long i = 1; i <= n; i++){\n        remainder = i %\
    \ 11;\n        if(remainder == 0 || remainder == 7){\n            count++;\n \
    \       }\n    }\n    return count;\n}", "{\n    long count = 0;\n    long remainder;\n\
    \    \n    for(long i = 1; i <= n; i++)\n    {\n        remainder = i % 11;\n\
    \        if (remainder == 0 || remainder == 7)\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}\n</code>\n<|/ a tags=fizzbuzz,c++,algorithm\
    \ |>\n<| c |>\nThis code doesn't work. Try it with `fizz_buzz(50)` for example.\
    \ `fizz_buzz(50)` should return `0`, but your code returns `1`.\n<|/ c |>\n<|\
    \ c |>\n: I fixed the bug. Thanks.\n<|/ c |>\n<| c |>\nI still don't think this\
    \ works. Try it with `fizz_buzz(50)`. `fizz_buzz(50)` should return `0`, but your\
    \ code returns `1`.\n<|/ c |>\n<| c |>\n: I fixed the bug. Thanks.\n<|/ c |>\n\
    <| c |>\nI still don't think this works. Try it with `fizz_buzz(50)`. `fizz_buzz(50)`\
    \ should return `0`, but your code returns `1`.\n<|/ c |>\n<| a tags=fizzbuzz,c++,algorithm\
    \ |>\n<code>\n#include <iostream>\nusing namespace std;", "{\n\tlong count = 0;\n\
    \tlong i;\n\tfor(i = 0; i < n; ++i)\n\t{\n\t\tif((i % 11) == 0 || i % 13 == 0)\n\
    \t\t{\n\t\t\tif((i % 11) == 0)\n\t\t\t{\n\t\t\t\tif((i % 13) == 0)\n\t\t\t\t{\n\
    \t\t\t\t\t++count;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t++count;\n\t\
    \t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t++count;\n\t\t\t}\n\t\t}\n\t}\n\
    \treturn count;\n}", "{\n    long count = 0;\n    long remainder;\n    long temp;\n\
    \    \n    while(n > 0)\n    {\n        remainder = n % 10;\n        if (remainder\
    \ == 7)\n        {\n            count++;\n        }\n        n = n / 10;\n   \
    \ }\n    \n    if (count == 0)\n    {\n        return 0;\n    }\n    \n    temp\
    \ = count;\n    \n    while (temp > 0)\n    {\n        if (temp % 11 == 0)\n \
    \       {\n            count++;\n        }\n        temp = temp / 11;\n    }\n\
    \    \n    return count;\n}\n</code>\n<|/ a tags=fizzbuzz,c++ |>\n<| a tags=fizzbuzz,c++\
    \ |>\n<code>\n#include <iostream>\nusing namespace std;", "{\n    long count =\
    \ 0;\n    long remainder;\n    long temp;\n    \n    while(n > 0)\n    {\n   \
    \     remainder = n % 11;\n        temp = remainder + remainder + remainder +\
    \ remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remain", "{\n    long count = 0;\n    long remainder;\n\
    \    \n    while(n > 0)\n    {\n        remainder = n % 11;\n        if (remainder\
    \ == 0 || remainder == 7)\n        {\n            count++;\n        }\n      \
    \  n = n / 11;\n    }\n    return count;\n}", "{\n    long count = 0;\n    long\
    \ temp;\n    \n    for(long i=1; i<=n; i++) {\n        if((i % 11) == 0 || (i\
    \ % 13) == 0) {\n            count++;\n        }\n    }\n    \n    return count;\n\
    }\n</code>\n<|/ a tags=fizzbuzz,c++ |>\n<| c |>\nThe `if` statement in the `for`\
    \ loop can be replaced with `if (i % 11 == 0 || i % 13 == 0)`.\n<|/ c |>\n<| c\
    \ |>\nThanks for your suggestion. I will update my answer.\n<|/ c |>\n<| a tags=fizzbuzz,c++\
    \ |>\n<code>\n#include <iostream>\nusing namespace std;", "{\n    long count =\
    \ 0;\n    for(long i = 0; i <= n; ++i)\n    {\n        if((i % 11) == 0 || (i\
    \ % 13) == 0)\n        {\n            ++count;\n        }\n    }\n    return count;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't work. `fizz_buzz(78)` returns\
    \ `2`, but `fizz_buzz(79)` returns `3`.\n<|/ c |>\n<| c |>\nYes, it does. I tested\
    \ it before posting it. I just tested it again to be sure. I'll post the code\
    \ I tested it with.\n<|/ c |>\n<| c |>\nI tested it again to be sure. I'll post\
    \ the code I tested it with.\n<|/ c |>\n<| c |>\nI tested it again to be sure.\
    \ I'll post the code I tested it with.\n<|/ c |>\n<| c |>\nI tested it again to\
    \ be sure. I'll post the code I tested it with.\n<|/ c |>\n<| a dscore=0 |>\n\
    <code>", "{\n    long count = 0;\n    for(long i = 1; i <= n; i++) {\n       \
    \ if((i % 11) == 0 || i % 13 == 0) {\n            count++;\n        }\n    }\n\
    \    return count;\n}\n</code>\n<|/ a tags=fizzbuzz,c++,algorithm |>\n<| c |>\n\
    This is not the most efficient solution. `fizz_buzz(50)` returns `0` while it\
    \ should be `1`.\n<|/ c |>\n<| c |>\n: Thanks for pointing that out. I fixed the\
    \ code accordingly.\n<|/ c |>\n<| a dscore=3 |>\n<code>\n#include <iostream>\n\
    using namespace std;", "{\n    long count = 0;\n    long remainder = n % 11;\n\
    \    long remainder2 = n % 13;\n    long remainder3 = n % 17;\n    long remainder4\
    \ = n % 19;\n    long remainder5 = n % 23;\n    long remainder6 = n % 29;\n  \
    \  long remainder7 = n % 37;\n    long remainder8 = n % 47;\n    long remainder9\
    \ = n % 55;\n    long remainder10 = n % 63;\n    long remainder11 = n % 79;\n\
    \    long remainder12 = n % 87;\n    long remainder13 = n % 97;\n    long remainder14\
    \ = n % 103;\n    long remainder15 = n % 111;\n    long remainder16 = n % 121;\n\
    \    long remainder17 = n % 131;\n    long remainder18 = n % 141;\n    long remainder19\
    \ = n % 151;\n    long remainder20 = n % 161;\n    long remainder21 = n % 171;\n\
    \    long remainder22 = n % 181;\n    long remainder23 = n % 191;\n    long remainder24\
    \ = n % 201;\n    long remainder25 = n % 211;\n    long remainder26 = n % 221;\n\
    \    long remainder27 = n % 231;\n    long remainder28 = n % 241;\n    long remainder29\
    \ = n % 251;\n    long remainder30 = n % 261;\n    long remainder31 = n % 271;\n\
    \    long remainder32 = n % 281;\n    long remainder33 = n % 291;\n    long remainder34\
    \ = n % 301;\n    long remainder35 = n % 311;\n    long remainder36 = n % 321;\n\
    \    long remainder37 = n % 331;\n    long remainder38 = n % 341;\n    long remainder39\
    \ = n % 351;\n    long remainder40 = n % 361;\n    long remainder41 = n % 371;\n\
    \    long remainder42 = n % 381;\n    long remainder43 = n % 391;\n    long remainder44\
    \ = n % 401;\n    long remainder45 = n % 411;\n    long remainder46 = n % 421;\n\
    \    long remainder47 = n % 431;\n    long remainder48 = n % 441;\n    long remainder49\
    \ = n % 451;\n    long remainder50 = n % 461;\n    long remainder51 = n % 471;\n\
    \    long remainder52 = n % 481;\n    long ", "{\n    long count = 0;\n    long\
    \ remainder;\n    long i;\n    \n    for(i = 1; i <= n; i++){\n        remainder\
    \ = n % i;\n        if(remainder == 0 || remainder == 11 || remainder == 13){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n</code>\n<|/ a\
    \ dscore=0 |>\n<| c |>\nThis doesn't work. Try it with `fizz_buzz(78)`\n<|/ c\
    \ |>\n<| c |>\nI fixed the bug. Thanks for pointing it out.\n<|/ c |>\n<| a tags=fizzbuzz,c++,algorithm\
    \ |>\n<code>\n#include <iostream>\nusing namespace std;", "{\n    long count =\
    \ 0;\n    for(long i = n; i > 0; i /= 11) \n    {\n        if((i % 11) == 7)\n\
    \            count++;\n    }\n    for(long i = n; i > 0; i /= 13) \n    {\n  \
    \      if((i % 13) == 7)\n            count++;\n    }\n    return count;\n}",
  "{\n    long count = 0;\n    long remainder;\n    \n    while(n > 0)\n    {\n  \
    \      remainder = n % 11;\n        if (remainder == 7)\n        {\n         \
    \   count++;\n        }\n        n = n / 11;\n    }\n    return count;\n}\n</code>\n\
    <|/ a tags=fizzbuzz,c++,algorithm |>\n<| c |>\nThis doesn't work. Try it with\
    \ fizz_buzz(50).\n<|/ c |>\n<| c |>\n: It works. I tested it on `fizz_buzz(50)`\
    \ which returns `0`.\n<|/ c |>\n<| c |>\nIt doesn't work for fizz_buzz(50). Try\
    \ it with fizz_buzz(78).\n<|/ c |>\n<| c |>\n: It works for `fizz_buzz(78)` which\
    \ returns `2`.\n<|/ c |>\n<| c |>\nIt works for fizz_buzz(78) but fails for fizz_buzz(79).\
    \ Try it with fizz_buzz(79).\n<|/ c |>\n<| a tags=fizzbuzz,c++,algorithm |>\n\
    <code>\n#include <iostream>\nusing namespace std;", "{\n    long count = 0;\n\
    \    for(long i = n; i > 0; i /= 11)\n    {\n        if(i % 11 == 7)\n       \
    \     count++;\n    }\n    for(long i = n; i > 0; i /= 13)\n    {\n        if(i\
    \ % 13 == 7)\n            count++;\n    }\n    return count;\n}\n</code>\n<|/\
    \ a tags=fizzbuzz,c++,algorithm |>\n<| c |>\nI like this one better than my answer,\
    \ but I'm wondering if there's a way to do this without using division.\n<|/ c\
    \ |>\n<| c |>\n: I doubt that there's a way to do this without division. Even\
    \ if you could do it, it's probably not going to be faster than the division version.\
    \ Division is one of the most expensive operations in computer programs.\n<|/\
    \ c |>\n<| c |>\nI agree with you that division is expensive, but I believe that\
    \ it's also the most straightforward way to implement this algorithm.\n<|/ c |>\n\
    <| c |>\n: I agree. Division is one of the most straightforward ways to implement\
    \ this algorithm. But the division version is also the most straightforward way\
    \ to implement this algorithm. Division is one of the most expensive operations\
    \ in computer programs.\n<|/ c |>\n<| c |>\nI agree with you that division is\
    \ expensive, but I believe that it's also the most straightforward way to implement\
    \ this algorithm.\n<|/ c |>\n<| a dscore=4 |>\n<code>\n#include <iostream>\n#include\
    \ <algorithm>\n#include <iterator>\n#include <vector>", "{\n    long count = 0;\n\
    \    long remainder;\n    long i;\n    for(i = n - 1; i >= 0; i--)\n    {\n  \
    \      remainder = n % 10;\n        if(remainder == 7 || remainder == 11)\n  \
    \      {\n            count++;\n        }\n        n = n / 10;\n    }\n    return\
    \ count;\n}\n</code>\n<|/ a tags=fizzbuzz,c++ |>\n<| c |>\nI appreciate your effort,\
    \ but this doesn't answer the question. Your code doesn't use any loops, just\
    \ recursion.\n<|/ c |>\n<| c |>\nI agree with you, my code doesn't use any loops,\
    \ just recursion.\n<|/ c |>\n<| c |>\nI appreciate your effort, but this doesn't\
    \ answer the question. Your code doesn't use any loops, just recursion.\n<|/ c\
    \ |>\n<| c |>\nI appreciate your effort, but this doesn't answer the question.\
    \ Your code doesn't use any loops, just recursion.\n<|/ c |>\n<| c |>\nI appreciate\
    \ your effort, but this doesn't answer the question. Your code doesn't use any\
    \ loops, just recursion.\n<|/ c |>\n<| a tags=fizzbuzz,c++ |>\n<code>\n#include\
    \ <iostream>\nusing namespace std;", "{\n    long count = 0;\n    long div = 11L;\n\
    \    long mod = 13L;\n    long div2 = div;\n    long mod2 = mod;\n    \n    while\
    \ (n > 0)\n    {\n        long remainder = n % div;\n        if (remainder ==\
    \ 0)\n        {\n            count += 1;\n            n /= div2;\n        }\n\
    \        else\n        {\n            div2 /= 10;\n            mod2 /= 10;\n \
    \       }\n    }\n    return count;\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=0\
    \ |>\n<code>\n#include <stdio.h>\n#include <stdlib.h>", "{\n    long count = 0;\n\
    \    long remainder;\n    \n    while (n>0) {\n        remainder = n%11;\n   \
    \     if (remainder == 7) {\n            count++;\n        }\n        n = n/11;\n\
    \    }\n    return count;\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nI like your\
    \ solution, but I wonder if there is a way to do it without using any loops?\n\
    <|/ c |>\n<| c |>\nI added a solution without loops.\n<|/ c |>\n<| c |>\nI like\
    \ your solution, but I wonder if there is a way to do it without using any loops?\n\
    <|/ c |>\n<| c |>\nI added a solution without loops.\n<|/ c |>\n<| c |>\nI like\
    \ your solution, but I wonder if there is a way to do it without using any loops?\n\
    <|/ c |>\n<| a tags=fizzbuzz,c++,algorithm |>\n<code>\n#include <iostream>\n#include\
    \ <string>\nusing namespace std;", "{\n    long count = 0;\n    long remainder;\n\
    \    \n    while (n) {\n        remainder = (n % 10);\n        if (remainder ==\
    \ 7 || remainder == 11 || remainder == 13) {\n            count++;\n        }\n\
    \        n = n / 10;\n    }\n    return count;\n}", "{\n    long count = 0;\n\
    \    long remainder;\n    long temp;\n    \n    while(n > 0)\n    {\n        remainder\
    \ = n % 11;\n        if (remainder == 0 || remainder == 7)\n        {\n      \
    \      count++;\n        }\n        n = n / 11;\n    }\n    return count;\n}\n\
    </code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n#include <stdio.h>\n#include\
    \ <stdlib.h>\n#include <string.h>\n#include <math.h>\n#include <stdbool.h>\n#include\
    \ <stdint.h>\n#include <inttypes.h>", "{\n    long count = 0;\n    long remainder;\n\
    \    long digit;\n    \n    while(n > 0)\n    {\n        remainder = n % 10;\n\
    \        digit = remainder % 11;\n        if(digit == 7)\n        {\n        \
    \    count++;\n        }\n        n = n / 10;\n    }\n    return count;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>", "{\n    long count = 0;\n    for(long\
    \ i = 0; i <= n; i += 11)\n    {\n        if((i % 11) == 0)\n        {\n     \
    \       count += 1;\n        }\n    }\n    for(long i = 0; i <= n; i += 13)\n\
    \    {\n        if((i % 13) == 0)\n        {\n            count += 1;\n      \
    \  }\n    }\n    return count;\n}\n</code>\n<|/ a tags=fizzbuzz,c++,algorithm\
    \ |>\n<| c |>\nThe OP asked for \"algorithm\", not \"code\".  You don't need to\
    \ post a complete solution.  Just a description of the algorithm would be sufficient.\n\
    <|/ c |>\n<| c |>\nI agree with you, but I thought that if he wants to learn how\
    \ to solve this problem he should learn how to solve it by himself. I hope that\
    \ my answer will help him to understand how to solve this problem by himself.\n\
    <|/ c |>\n<| c |>\nI agree with you, but I thought that if he wants to learn how\
    \ to solve this problem he should learn how to solve it by himself. I hope that\
    \ my answer will help him to understand how to solve this problem by himself.\n\
    <|/ c |>\n<| c |>\nI agree with you, but I thought that if he wants to learn how\
    \ to solve this problem he should learn how to solve it by himself. I hope that\
    \ my answer will help him to understand how to solve this problem by himself.\n\
    <|/ c |>\n<| c |>\nI agree with you, but I thought that if he wants to learn how\
    \ to solve this problem he should learn how to solve it by himself. I hope that\
    \ my answer will help him to understand how to solve this problem by himself.\n\
    <|/ c |>\n<| a dscore=4 |>\n<code>\n#include <iostream>\nusing namespace std;",
  "{\n    long count = 0;\n    long remainder;\n    long digit;\n    \n    for(digit\
    \ = n / 11; digit != 0; digit /= 11)\n    {\n        remainder = n % 10;\n   \
    \     if(remainder == 7)\n        {\n            count++;\n        }\n       \
    \ n = remainder;\n    }\n    \n    for(digit = n / 13; digit != 0; digit /= 13)\n\
    \    {\n        remainder = n % 10;\n        if(remainder == 7)\n        {\n \
    \           count++;\n        }\n        n = remainder;\n    }\n    \n    return\
    \ count;\n}\n</code>\n<|/ a tags=fizzbuzz,c++,algorithm |>\n<| c |>\nThis does\
    \ not answer the question. OP wants to know how to use `std::to_string` instead\
    \ of `std::cout`.\n<|/ c |>\n<| c |>\nI believe this answers the question. OP\
    \ wants to know how to use `std::to_string` instead of `std::cout`. OP also wants\
    \ to know how to use `std::to_string` instead of `std::cout`.\n<|/ c |>\n<| c\
    \ |>\nOP wants to know how to use `std::to_string` instead of `std::cout`.\n<|/\
    \ c |>\n<| c |>\nI believe this answers the question. OP wants to know how to\
    \ use `std::to_string` instead of `std::cout`. OP also wants to know how to use\
    \ `std::to_string` instead of `std::cout`.\n<|/ c |>\n<| c |>\nI believe this\
    \ answers the question. OP wants to know how to use `std::to_string` instead of\
    \ `std::cout`. OP also wants to know how to use `std::to_string` instead of `std::cout`.\n\
    <|/ c |>\n<| a tags=fizzbuzz,c++,algorithm |>\n<code>\n#include <iostream>\n#include\
    \ <string>", "{\n    long count = 0;\n    long temp;\n    for(long i = 1; i <=\
    \ n; i++){\n        temp = i % 11;\n        if(temp == 0 || temp == 13){\n   \
    \         count++;\n        }\n    }\n    return count;\n}\n</code>\n<|/ a tags=fizzbuzz,c++,algorithm\
    \ |>\n<| c |>\nThis code does not work. `fizz_buzz(50)` returns `0` instead of\
    \ `2`.\n<|/ c |>\n<| c |>\nI tested it and it works. I used the code from your\
    \ question. Maybe you forgot to add `#include <iostream>` at the top of your file?\n\
    <|/ c |>\n<| c |>\nI tested it and it works. I used the code from your question.\
    \ Maybe you forgot to add `#include <iostream>` at the top of your file?\n<|/\
    \ c |>\n<| c |>\nI tested it and it works. I used the code from your question.\
    \ Maybe you forgot to add `#include <iostream>` at the top of your file?\n<|/\
    \ c |>\n<| c |>\nI tested it and it works. I used the code from your question.\
    \ Maybe you forgot to add `#include <iostream>` at the top of your file?\n<|/\
    \ c |>\n<| a tags=fizzbuzz,c++,algorithm |>\n<code>\n#include <iostream>\nusing\
    \ namespace std;", "{\n    long count = 0;\n    long remainder;\n    \n    for(long\
    \ i = 0; i <= n; i++) {\n        remainder = i % 11;\n        if(remainder ==\
    \ 7) {\n            count++;\n        }\n    }\n    return count;\n}\n</code>\n\
    <|/ a dscore=2 |>\n<| a dscore=1 |>\n<code>", "{\n    long count = 0;\n    long\
    \ remainder;\n    \n    while (n>0) {\n        remainder = n % 11;\n        if\
    \ (remainder == 7 || remainder == 13) count++;\n        n = n / 11;\n    }\n \
    \   return count;\n}", "{\n\tlong count = 0;\n\t\n\twhile (n >= 100) {\n\t\tcount\
    \ += n % 11;\n\t\tn /= 11;\n\t}\n\t\n\twhile (n >= 10) {\n\t\tcount += n % 11;\n\
    \t\tn /= 11;\n\t}\n\t\n\twhile (n >= 1) {\n\t\tcount += n % 11;\n\t\tn /= 11;\n\
    \t}\n\t\n\treturn count;\n}", "{\n    long count = 0;\n    long remainder;\n \
    \   \n    while (n) {\n        remainder = (n % 10);\n        if (remainder ==\
    \ 7 || remainder == 11 || remainder == 13) {\n            count++;\n        }\n\
    \        n = n / 10;\n    }\n    return count;\n}\n</code>\n<|/ a tags=fizzbuzz,c++,algorithm\
    \ |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\nusing namespace std;", "{\n\
    \    long count = 0;\n    for(long i = 0; i <= n; i += 11)\n    {\n        if((i\
    \ % 11) == 0)\n            count += 1;\n        if((i % 13) == 0)\n          \
    \  count += 1;\n    }\n    return count;\n}", "{\n    long count = 0;\n    long\
    \ i;\n    for(i = 1; i <= n; i++)\n    {\n        if((i % 11) == 0 || (i % 13)\
    \ == 0)\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\n</code>\n<|/ a tags=fizzbuzz,c++,algorithm |>\n<| a dscore=0 |>\n<code>\n#include\
    \ <iostream>\nusing namespace std;", "{\n    long count = 0;\n    long remainder;\n\
    \    \n    for(long i = n; i > 0; i /= 11)\n    {\n        remainder = i % 11;\n\
    \        if(remainder == 7)\n        {\n            count++;\n        }\n    }\n\
    \    \n    for(long i = n; i > 0; i /= 13)\n    {\n        remainder = i % 13;\n\
    \        if(remainder == 7)\n        {\n            count++;\n        }\n    }\n\
    \    \n    return count;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis does not\
    \ provide an answer to the question. To critique or request clarification from\
    \ an author, leave a comment below their post. - [From Review](/review/low-quality-posts/27827839)\n\
    <|/ c |>\n<| c |>\nI provided a solution to the question and provided a link to\
    \ the original question. How is this not an answer?\n<|/ c |>\n<| c |>\nThe question\
    \ was \"how do I solve this problem with less code?\" Your answer does not provide\
    \ an answer to the question. Your answer does not provide an explanation as to\
    \ why your solution works. Your answer does not provide an explanation as to why\
    \ your solution works. Your answer does not provide an explanation as to why your\
    \ solution works. Your answer does not provide an explanation as to why your solution\
    \ works. Your answer does not provide an explanation as to why your solution works.\
    \ Your answer does not provide an explanation as to why your solution works. Your\
    \ answer does not provide an explanation as to why your solution works. Your answer\
    \ does not provide an explanation as to why your solution works. Your answer does\
    \ not provide an explanation as to why your solution works. Your answer does not\
    \ provide an explanation as to why your solution works. Your answer does not provide\
    \ an explanation as to why your solution works. Your answer does not provide an\
    \ explanation as to why your solution works. Your answer does not provide an explanation\
    \ as to why your solution works. Your answer does not provide an explanation as\
    \ to why your solution works. Your answer does not provide an explanation as to\
    \ why your solution works. Your answer does not provide an explanation as to why\
    \ your solution works. Your answer does not provide an explanation as to why your\
    \ solution works. Your answer does not provide an explanation as to why your solution\
    \ works. Your answer does not provide an explanation as to why your solution works.\
    \ Your answer does not provide an explanation as to why your solution works. Your\
    \ answer does not provide an explanation as to ", "{\n    long count = 0;\n  \
    \  long remainder;\n    long i;\n    \n    for(i = 1; i <= n; i++){\n        remainder\
    \ = n % i;\n        if(remainder == 0 || remainder == 11 || remainder == 13){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n</code>\n<|/ a\
    \ dscore=0 |>\n<| a dscore=0 |>\n<code>", "{\n    long count = 0;\n    long remainder;\n\
    \    \n    while (n>0) {\n        remainder = n%11;\n        if (remainder ==\
    \ 7 || remainder == 13) count++;\n        n = n/11;\n    }\n    return count;\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThis doesn't work. Try it with `fizz_buzz(79)`\
    \ which returns `3`.\n<|/ c |>\n<| c |>\n: Thanks for pointing that out. I fixed\
    \ it now.\n<|/ c |>\n<| c |>\n: Thanks for pointing that out. I fixed it now.\n\
    <|/ c |>\n<| a tags=fizzbuzz,c++ |>\n<code>\n#include <iostream>\nusing namespace\
    \ std;", "{\n    long count = 0;\n    long remainder;\n    \n    for(long i =\
    \ 1; i <= n; i++) {\n        remainder = i % 11;\n        if (remainder == 0 ||\
    \ remainder == 7) {\n            count++;\n        }\n    }\n    return count;\n\
    }\n</code>\n<|/ a tags=fizzbuzz,c++,algorithm |>\n<| a tags=fizzbuzz,c++,algorithm\
    \ |>\n<code>\n#include <iostream>\nusing namespace std;", "{\n    long count =\
    \ 0;\n    long remainder;\n    long temp;\n    \n    temp = n;\n    \n    while(temp\
    \ > 0)\n    {\n        remainder = temp % 11;\n        \n        if(remainder\
    \ == 7)\n        {\n            count++;\n        }\n        \n        temp /=\
    \ 11;\n    }\n    \n    return count;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\n\
    This does not provide an answer to the question. To critique or request clarification\
    \ from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/26009408)\n\
    <|/ c |>\n<| c |>\nI added the code to the answer because I thought it would be\
    \ helpful to others who come across this question. Thanks for your feedback.\n\
    <|/ c |>\n<| c |>\nI appreciate your efforts, but this does not provide an answer\
    \ to the question. To critique or request clarification from an author, leave\
    \ a comment below their post. - [From Review](/review/low-quality-posts/26009408)\n\
    <|/ c |>\n<| c |>\nI added the code to the answer because I thought it would be\
    \ helpful to others who come across this question. Thanks for your feedback.\n\
    <|/ c |>\n<| c |>\nI appreciate your efforts, but this does not provide an answer\
    \ to the question. To critique or request clarification from an author, leave\
    \ a comment below their post. - [From Review](/review/low-quality-posts/26009408)\n\
    <|/ c |>\n<| a dscore=0 |>\n<code>", "{\n    long count = 0;\n    long temp;\n\
    \    \n    for(long i = 0; i <= n; ++i)\n    {\n        temp = i / 11;\n     \
    \   if(temp % 11 == 7)\n        {\n            ++count;\n        }\n    }\n  \
    \  return count;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't work. Try\
    \ it with `fizz_buzz(79)` - it returns `3` instead of `2`.\n<|/ c |>\n<| c |>\n\
    Yes, it does. I tested it before posting it. I will post the code I tested it\
    \ with.\n<|/ c |>\n<| c |>\nIt doesn't work for `fizz_buzz(79)` - it returns `3`\
    \ instead of `2`.\n<|/ c |>\n<| c |>\nI tested it again and it works now. Thanks\
    \ for pointing that out. I will edit my post to reflect the changes.\n<|/ c |>\n\
    <| c |>\nThe code you posted doesn't work for `fizz_buzz(79)` - it returns `3`\
    \ instead of `2`.\n<|/ c |>\n<| a dscore=0 |>\n<code>", "{\n    long count = 0;\n\
    \    long x = n;\n    long y = x;\n    long z = x;\n    long a = x;\n    long\
    \ b = x;\n    long c = x;\n    long d = x;\n    long e = x;\n    long f = x;\n\
    \    long g = x;\n    long h = x;\n    long i = x;\n    long j = x;\n    long\
    \ k = x;\n    long l = x;\n    long m = x;\n    long n = x;\n    long o = x;\n\
    \    long p = x;\n    long q = x;\n    long r = x;\n    long s = x;\n    long\
    \ t = x;\n    long u = x;\n    long v = x;\n    long w = x;\n    long x = x;\n\
    \    long y = x;\n    long z = x;\n    long a = x;\n    long b = x;\n    long\
    \ c = x;\n    long d = x;\n    long e = x;\n    long f = x;\n    long g = x;\n\
    \    long h = x;\n    long i = x;\n    long j = x;\n    long k = x;\n    long\
    \ l = x;\n    long m = x;\n    long n = x;\n    long o = x;\n    long p = x;\n\
    \    long q = x;\n    long r = x;\n    long s = x;\n    long t = x;\n    long\
    \ u = x;\n    long v = x;\n    long w = x;\n    long x = x;\n    long y = x;\n\
    \    long z = x;\n    long a = x;\n    long b = x;\n    long c = x;\n    long\
    \ d = x;\n    long e = x;\n    long f = x;\n    long g = x;\n    long h = x;\n\
    \    long i = x;\n    long j = x;\n    long k = x;\n    long l = x;\n    long\
    \ m = x;\n    long n = x;\n    long o = x;\n    long p = x;\n    long q = x;\n\
    \    long r = x;\n    long s = x;\n    long t = x;\n    long u = x;\n    long\
    \ v = x;\n    long w = x;\n    long x = x;\n    long y = x;\n    long z = x;\n\
    \    long a = x;\n    long b = x;\n    long c = x;\n    long d = x;\n    long\
    \ e = x;\n    long f = x;\n    long g = x;\n    long h = x;\n    long i = x;\n\
    \    long j = x;\n    long k = x;\n    long l = x;\n    long m = x;\n    long\
    \ n = x;\n    long o = x;\n    long p = x;\n    long q = x;\n    long r = x;\n\
    \    long s = x;\n    long t = x;\n    ", "{\n    long count = 0;\n    long i;\n\
    \    for(i = 1; i <= n; i++)\n    {\n        if((i % 11) == 0 || i % 13 == 0)\n\
    \            count++;\n    }\n    return count;\n}\n</code>\n<|/ a tags=fizzbuzz,c++,algorithm\
    \ |>\n<| c |>\nThe OP wants to count the number of \"FizzBuzz\" strings. Your\
    \ code counts the number of \"Fizz\" strings.\n<|/ c |>\n<| c |>\n: I see that\
    \ now. Thanks for pointing that out. I've updated my answer.\n<|/ c |>\n<| a dscore=2\
    \ |>\n<code>\n#include <iostream>\nusing namespace std;", "{\n    long count =\
    \ 0;\n    for(long i = n; i > 0; i /= 11) {\n        if((i % 11) == 7) {\n   \
    \         count++;\n        }\n    }\n    for(long i = n; i > 0; i /= 13) {\n\
    \        if((i % 13) == 7) {\n            count++;\n        }\n    }\n    return\
    \ count;\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=fizzbuzz,c++ |>\n<code>\n#include\
    \ <iostream>\nusing namespace std;", "{\n    long count = 0;\n    long remainder;\n\
    \    \n    for(long i = 0; i <= n; i++){\n        remainder = i % 11;\n      \
    \  if (remainder == 0 || remainder == 7){\n            count++;\n        }\n \
    \   }\n    return count;\n}\n</code>\n<|/ a tags=fizzbuzz,c++,algorithm |>\n<|\
    \ c |>\nThis doesn't work. Try fizz_buzz(78). You'll get an infinite loop.\n<|/\
    \ c |>\n<| c |>\nI didn't test it but I think it works. I tested it on http://cpp.sh/\
    \ and it works.\n<|/ c |>\n<| c |>\nIt works on cpp.sh but doesn't work on my\
    \ machine. I'm running it on codeblocks IDE.\n<|/ c |>\n<| c |>\nI tested it on\
    \ codeblocks IDE and it works. I edited my answer to show you the code. Maybe\
    \ you didn't copy the code correctly?\n<|/ c |>\n<| c |>\nI copied the code exactly\
    \ as you wrote it. Still doesn't work. I'm running it on codeblocks IDE.\n<|/\
    \ c |>\n<| a tags=fizzbuzz,c++,algorithm |>\n<code>\n#include <iostream>\n#include\
    \ <cmath>\nusing namespace std;", "{\n    long count = 0;\n    long remainder;\n\
    \    \n    for(long i = 1; i < n; i++){\n        remainder = n % i;\n        if(remainder\
    \ == 0 || remainder == 11 || remainder == 13){\n            count++;\n       \
    \ }\n    }\n    return count;\n}\n</code>\n<|/ a tags=fizzbuzz,c++,algorithm |>\n\
    <| a dscore=0 |>\n<code>\n#include <iostream>\nusing namespace std;", "{\n   \
    \ long count = 0;\n    long remainder;\n    \n    while (n>0) {\n        remainder\
    \ = n%11;\n        if (remainder == 0 || remainder == 7) {\n            count++;\n\
    \        }\n        n = n/11;\n    }\n    return count;\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| a tags=fizzbuzz,c++,algorithm |>\n<code>\n#include <iostream>\nusing\
    \ namespace std;", "{\n    long count = 0;\n    long i;\n    for(i = 1; i <= n;\
    \ i++) {\n        if((i % 11) == 0 || i % 13 == 0) {\n            count++;\n \
    \       }\n    }\n    return count;\n}\n</code>\n<|/ a tags=fizzbuzz,c++,algorithm\
    \ |>\n<| c |>\nThis code does not work. Try it for n = 50 and you will see that\
    \ it is wrong.\n<|/ c |>\n<| c |>\n: It does work. Try it for n = 50 and you will\
    \ see that it is correct.\n<|/ c |>\n<| c |>\n: It does work. Try it for n = 50\
    \ and you will see that it is correct.\n<|/ c |>\n<| c |>\n: It does work. Try\
    \ it for n = 50 and you will see that it is correct.\n<|/ c |>\n<| c |>\n: It\
    \ does work. Try it for n = 50 and you will see that it is correct.\n<|/ c |>\n\
    <| a |>\n<code>\n#include <iostream>\nusing namespace std;", "{\n    long count\
    \ = 0;\n    long remainder;\n    \n    for(long i = n; i > 0; i /= 10) {\n   \
    \     remainder = i % 10;\n        if(remainder == 7) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=fizzbuzz,c++\
    \ |>\n<code>\n#include <iostream>\nusing namespace std;", "{\n    long count =\
    \ 0;\n    long i;\n    for(i = 1; i <= n; i++){\n        if((i % 11) == 0 || (i\
    \ % 13) == 0){\n            count++;\n        }\n    }\n    return count;\n}\n\
    </code>\n<|/ a tags=fizzbuzz,c++,algorithm |>\n<| c |>\nI like your solution,\
    \ but I believe it can be optimized a bit. For example, you can replace `if((i\
    \ % 11) == 0 || (i % 13) == 0)` with `if(i % 11 == 0 || i % 13 == 0)`. And you\
    \ can replace `if((i % 11) == 0 || (i % 13) == 0)` with `if(i % 11 == 0 || i %\
    \ 13 == 0)`. And you can replace `if((i % 11) == 0 || (i % 13) == 0)` with `if(i\
    \ % 11 == 0 || i % 13 == 0)`. And you can replace `if((i % 11) == 0 || (i % 13)\
    \ == 0)` with `if(i % 11 == 0 || i % 13 == 0)`. And you can replace `if((i % 11)\
    \ == 0 || (i % 13) == 0)` with `if(i % 11 == 0 || i % 13 == 0)`. And you can replace\
    \ `if((i % 11) == 0 || (i % 13) == 0)` with `if(i % 11 == 0 || i % 13 == 0)`.\
    \ And you can replace `if((i % 11) == 0 || (i % 13) == 0)` with `if(i % 11 ==\
    \ 0 || i % 13 == 0)`. And you can replace `if((i % 11) == 0 || (i % 13) == 0)`\
    \ with `if(i % 11 == 0 || i % 13 == 0)`. And you can replace `if((i % 11) == 0\
    \ || (i % 13) == 0)` with `if(i % 11 == 0 || i % 13 == 0)`. And you can replace\
    \ `if((i % 11) == 0 || (i % 13) == 0)` with `if(i % 11 == 0 || i % 13 == 0)`.\
    \ And you can replace `if((i % 11) == 0 || (i % 13) == 0)` with `if(i % 11 ==\
    \ 0 || i % 13 == 0)`. And you can replace `if((i % 11) == 0 || (i % 13) == 0)`\
    \ with `if(i % 11 == 0 || i % 13 == 0)`. And you can replace `if((i % 11) == 0\
    \ || (i % 13) == 0)` with `if(i % 11 == 0 || i % 13 == 0)`. And you can replace\
    \ `if((i % 11) == 0 || (i % 13) == 0)` with `if(i % 11 == 0 || i % 13 == 0)`.\
    \ And you can replace `if((i % 11) == 0 || (i % 13) == 0)` with `if(i % 11 ==\
    \ 0 || i % 13 == 0)`. And you can replace `if((i % 11) == 0 || (i % 13) == 0)`\
    \ with `if(i % 11 == 0 || i % 13 == 0)`. ", "{\n    long count = 0;\n    long\
    \ i;\n    for(i = 1; i <= n; ++i)\n    {\n        if((i % 11) == 0 || i % 13 ==\
    \ 0)\n            ++count;\n    }\n    return count;\n}\n</code>\n<|/ a tags=fizzbuzz,c++\
    \ |>\n<| c |>\nThis doesn't answer the question of how to do it with std algorithms.\
    \ I guess it would be more efficient to just use a for loop and count the numbers\
    \ that satisfy the conditions.\n<|/ c |>\n<| c |>\nI agree, that would be more\
    \ efficient, but I wanted to show how it could be done with std algorithms. I\
    \ guess I should add that to the answer.\n<|/ c |>\n<| c |>\nI added a solution\
    \ using std algorithms. I hope it helps.\n<|/ c |>\n<| c |>\nI added a solution\
    \ using std algorithms. I hope it helps.\n<|/ c |>\n<| c |>\nThe std algorithms\
    \ solution doesn't work for the case where n is divisible by both 11 and 13. For\
    \ example, fizz_buzz(50) returns 0, but should be 1.\n<|/ c |>\n<| a tags=fizzbuzz,c++\
    \ |>\n<code>\n#include <iostream>\nusing namespace std;", "{\n\tlong count = 0;\n\
    \tlong temp;\n\t\n\twhile (n>0)\n\t{\n\t\ttemp = n % 10;\n\t\tif (temp == 7) count++;\n\
    \t\tn = n / 10;\n\t}\n\treturn count;\n}", "{\n\tlong count = 0;\n\tlong remainder;\n\
    \t\n\twhile (n>0) {\n\t\tremainder = n%11;\n\t\tif (remainder == 7 || remainder\
    \ == 13) {\n\t\t\tcount++;\n\t\t}\n\t\tn = n/11;\n\t}\n\treturn count;\n}\n/*\n\
    Return the number of times the digit 7 appears in integers less than n which are\
    \ divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n\
    \    2\n    >>> fizz_buzz(79)\n    3\n    \n*/\nlong fizz_buzz(long n) \n{\n\t\
    long count = 0;\n\tlong remainder;\n\t\n\twhile (n>0) {\n\t\tremainder = n%11;\n\
    \t\tif (remainder == 7 || remainder == 13) {\n\t\t\tcount++;\n\t\t}\n\t\tn = n/11;\n\
    \t}\n\treturn count;\n}\n/*\nReturn the number of times the digit 7 appears in\
    \ integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n\
    \    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \n*/\n\
    long fizz_buzz(long n) \n{\n\tlong count = 0;\n\tlong remainder;\n\t\n\twhile\
    \ (n>0) {\n\t\tremainder = n%11;\n\t\tif (remainder == 7 || remainder == 13) {\n\
    \t\t\tcount++;\n\t\t}\n\t\tn = n/11;\n\t}\n\treturn count;\n}\n/*\nReturn the\
    \ number of times the digit 7 appears in integers less than n which are divisible\
    \ by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n \
    \   >>> fizz_buzz(79)\n    3\n    \n*/\nlong fizz_buzz(long n) \n{\n\tlong count\
    \ = 0;\n\tlong remainder;\n\t\n\twhile (n>0) {\n\t\tremainder = n%11;\n\t\tif\
    \ (remainder == 7 || remainder == 13) {\n\t\t\tcount++;\n\t\t}\n\t\tn = n/11;\n\
    \t}\n\treturn count;\n}\n/*\nReturn the number of times the digit 7 appears in\
    \ integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n\
    \    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \n*/\n\
    long fiz", "{\n    long count = 0;\n    for(long i = 0; i <= n; ++i)\n    {\n\
    \        if((i % 11) == 0 || i % 13 == 0)\n        {\n            count += 1;\n\
    \        }\n    }\n    return count;\n}\n</code>\n<|/ a |>\n<| c |>\nThis code\
    \ does not work. Try it for n = 50 and you will see that it will return 0 instead\
    \ of 2.\n<|/ c |>\n<| c |>\nThanks for pointing that out. I fixed the bug and\
    \ added a test case.\n<|/ c |>\n<| a dscore=1 |>\n<code>", "{\n    long count\
    \ = 0;\n    long remainder;\n    long i;\n    \n    for(i = 1; i <= n; i++) {\n\
    \        remainder = i % 11;\n        if(remainder == 0 || remainder == 7) {\n\
    \            count++;\n        }\n    }\n    return count;\n}\n</code>\n<|/ a\
    \ dscore=0 |>\n<| a |>\n<code>\nimport java.util.Scanner;", "{\n\tlong count =\
    \ 0;\n\tlong temp;\n\t\n\twhile (n > 0)\n\t{\n\t\ttemp = n % 11;\n\t\tif (temp\
    \ == 7)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t\tn = n / 11;\n\t}\n\treturn count;\n\
    }", "{\n\tlong count = 0;\n\tfor (long i = n; i > 0; i /= 11)\n\t{\n\t\tif (i\
    \ % 11 == 7)\n\t\t\tcount++;\n\t}\n\tfor (long i = n; i > 0; i /= 13)\n\t{\n\t\
    \tif (i % 13 == 7)\n\t\t\tcount++;\n\t}\n\treturn count;\n}", "{\n    long count\
    \ = 0;\n    long remainder;\n    \n    while (n>0) {\n        remainder = n%11;\n\
    \        if (remainder == 7 || remainder == 13) count++;\n        n = n/11;\n\
    \    }\n    return count;\n}\n</code>\n<|/ a |>\n<| c |>\nI didn't downvote, but\
    \ I suspect it's because you didn't explain what was wrong with OP's code. Also,\
    \ your solution doesn't work if `n` is negative.\n<|/ c |>\n<| c |>\nI added some\
    \ explanation to the answer. Thanks for your feedback.\n<|/ c |>\n<| c |>\nI didn't\
    \ downvote, but I suspect it's because you didn't explain what was wrong with\
    \ OP's code. Also, your solution doesn't work if `n` is negative.\n<|/ c |>\n\
    <| c |>\nI added some explanation to the answer. Thanks for your feedback.\n<|/\
    \ c |>\n<| c |>\nI didn't downvote, but I suspect it's because you didn't explain\
    \ what was wrong with OP's code. Also, your solution doesn't work if `n` is negative.\n\
    <|/ c |>\n<| a tags=fizzbuzz,c++,algorithm |>\n<code>\n#include <iostream>\nusing\
    \ namespace std;", "{\n    long count = 0;\n    long remainder;\n    \n    while(n\
    \ > 0)\n    {\n        remainder = n % 11;\n        if (remainder == 7)\n    \
    \    {\n            count++;\n        }\n        n = n / 11;\n    }\n    return\
    \ count;\n}\n</code>\n<|/ a tags=fizzbuzz,c++ |>\n<| c |>\nI like this solution,\
    \ although it would be more efficient to move the remainder calculation out of\
    \ the loop. Also, you could use an `if` statement instead of a `while` loop to\
    \ avoid the unnecessary division.\n<|/ c |>\n<| c |>\nI agree with you, that would\
    \ be more efficient. I'll edit my answer to reflect that.\n<|/ c |>\n<| c |>\n\
    I like your solution, but I feel like it would be more efficient to move the remainder\
    \ calculation out of the loop. Also, you could use an `if` statement instead of\
    \ a `while` loop to avoid the unnecessary division.\n<|/ c |>\n<| c |>\nI agree\
    \ with you, that would be more efficient. I'll edit my answer to reflect that.\n\
    <|/ c |>\n<| c |>\nI like your solution, but I feel like it would be more efficient\
    \ to move the remainder calculation out of the loop. Also, you could use an `if`\
    \ statement instead of a `while` loop to avoid the unnecessary division.\n<|/\
    \ c |>\n<| a tags=fizzbuzz,c++ |>\n<code>\n#include <iostream>\nusing namespace\
    \ std;", "{\n    long count = 0;\n    for(long i = 0; i <= n; i+=11)\n    {\n\
    \        if((i % 11) == 7)\n            count++;\n    }\n    for(long i = 0; i\
    \ <= n; i+=13)\n    {\n        if((i % 13) == 7)\n            count++;\n    }\n\
    \    return count;\n}\n</code>\n<|/ a tags=fizzbuzz,c++,algorithm |>\n<| c |>\n\
    I like your solution, but I believe it can be simplified a bit. `fizz_buzz(50)`\
    \ returns `0`, but `fizz_buzz(78)` returns `2`. `fizz_buzz(79)` returns `3`. `fizz_buzz(100)`\
    \ returns `0`, but `fizz_buzz(101)` returns `1`. `fizz_buzz(102)` returns `2`.\
    \ `fizz_buzz(103)` returns `3`. `fizz_buzz(104)` returns `4`. `fizz_buzz(105)`\
    \ returns `5`. `fizz_buzz(106)` returns `6`. `fizz_buzz(107)` returns `7`. `fizz_buzz(108)`\
    \ returns `8`. `fizz_buzz(109)` returns `9`. `fizz_buzz(110)` returns `10`. `fizz_buzz(111)`\
    \ returns `11`. `fizz_buzz(112)` returns `12`. `fizz_buzz(113)` returns `13`.\
    \ `fizz_buzz(114)` returns `14`. `fizz_buzz(115)` returns `15`. `fizz_buzz(116)`\
    \ returns `16`. `fizz_buzz(117)` returns `17`. `fizz_buzz(118)` returns `18`.\
    \ `fizz_buzz(119)` returns `19`. `fizz_buzz(120)` returns `20`. `fizz_buzz(121)`\
    \ returns `21`. `fizz_buzz(122)` returns `22`. `fizz_buzz(123)` returns `23`.\
    \ `fizz_buzz(124)` returns `24`. `fizz_buzz(125)` returns `25`. `fizz_buzz(",
  "{\n    long count = 0;\n    long remainder;\n    long temp;\n    \n    while(n\
    \ > 0)\n    {\n        remainder = n % 11;\n        temp = remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remain", "{\n    long count = 0;\n   \
    \ long x = n;\n    \n    while (x != 0)\n    {\n        if (x % 11 == 0 || x %\
    \ 13 == 0)\n        {\n            count++;\n        }\n        x /= 10;\n   \
    \ }\n    return count;\n}\n</code>\n<|/ a dscore=0 |>\n<| a |>\n<code>\n#include\
    \ <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <math.h>\n#include\
    \ <stdbool.h>", "{\n    long count = 0;\n    for(long i = n; i > 0; i /= 10)\n\
    \    {\n        if(i % 11 == 0 || i % 13 == 0)\n            count++;\n    }\n\
    \    return count;\n}\n</code>\n<|/ a tags=fizzbuzz,c++ |>\n<| a |>\n<code>\n\
    #include <iostream>\nusing namespace std;", "{\n    long count = 0;\n    long\
    \ div = 11L;\n    long mod;\n    \n    while (n > div) {\n        mod = n % div;\n\
    \        if (mod != 0) {\n            count += 1;\n        }\n        div = div\
    \ * 10L;\n    }\n    return count;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>\nimport java.util.*;\npublic class FizzBuzz {\n    public static\
    \ void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n \
    \       System.out.println(\"Enter a number\");\n        int n = sc.nextInt();\n\
    \        for(int i = 1; i <= n; i++) {\n            if(i%11==0 && i%13==0)\n \
    \               System.out.print(\"FizzBuzz\");\n            else if(i%11==0)\n\
    \                System.out.print(\"Fizz\");\n            else if(i%13==0)\n \
    \               System.out.print(\"Buzz\");\n            else\n              \
    \  System.out.print(i);\n        }\n    }\n}\n</code>\n<|/ a tags=java |>\n<|\
    \ a tags=java |>\n<code>\nimport java.util.Scanner;", "{\n    long count = 0;\n\
    \    long remainder;\n    \n    while (n) {\n        remainder = n % 11;\n   \
    \     if (remainder == 7) {\n            count++;\n        }\n        n /= 11;\n\
    \    }\n    return count;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=fizzbuzz,c++,algorithm\
    \ |>\n<code>\n#include <iostream>\nusing namespace std;", "{\n    long count =\
    \ 0;\n    long i;\n    for(i = 0; i < n; ++i)\n    {\n        if(i % 11 == 0 ||\
    \ i % 13 == 0)\n            count += 1;\n    }\n    return count;\n}\n</code>\n\
    <|/ a dscore=1 |>\n<| c |>\nThis doesn't answer the question at all. OP asked\
    \ for \"the most efficient way\", not \"the most efficient way in terms of lines\
    \ of code\".\n<|/ c |>\n<| c |>\nI agree with you. My answer was more of a \"\
    how do I do it\" type of answer. OP asked for \"the most efficient way\", not\
    \ \"the most efficient way in terms of lines of code\".\n<|/ c |>\n<| c |>\nI\
    \ agree with you. My answer was more of a \"how do I do it\" type of answer. OP\
    \ asked for \"the most efficient way\", not \"the most efficient way in terms\
    \ of lines of code\".\n<|/ c |>\n<| c |>\nI agree with you. My answer was more\
    \ of a \"how do I do it\" type of answer. OP asked for \"the most efficient way\"\
    , not \"the most efficient way in terms of lines of code\".\n<|/ c |>\n<| c |>\n\
    I agree with you. My answer was more of a \"how do I do it\" type of answer. OP\
    \ asked for \"the most efficient way\", not \"the most efficient way in terms\
    \ of lines of code\".\n<|/ c |>\n<| a tags=c++,algorithm |>\n<code>\n#include\
    \ <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include\
    \ <numeric>\n#include <cmath>\n#include <cstdlib>\n#include <ctime>", "{\n   \
    \ long count = 0;\n    long i;\n    for(i = 1; i <= n; i++)\n    {\n        if(i\
    \ % 11 == 0 || i % 13 == 0)\n        {\n            count++;\n        }\n    }\n\
    \    return count;\n}\n</code>\n<|/ a tags=fizzbuzz,c++ |>\n<| c |>\nThis code\
    \ doesn't work. Try it for n = 50 and you'll see it returns 0 instead of 2.\n\
    <|/ c |>\n<| c |>\nI tested it and it works. I even tested it on n = 50 and it\
    \ returned 2. I don't know what you're talking about. Are you sure you copied\
    \ the code correctly?\n<|/ c |>\n<| c |>\nI tested it on n = 50 and it returned\
    \ 2. Are you sure you copied the code correctly?\n<|/ c |>\n<| c |>\nI tested\
    \ it on n = 50 and it returned 2. Are you sure you copied the code correctly?\n\
    <|/ c |>\n<| c |>\nI tested it on n = 50 and it returned 2. Are you sure you copied\
    \ the code correctly?\n<|/ c |>\n<| a dscore=2 |>\n<code>\n#include <iostream>\n\
    using namespace std;", "{\n    long count = 0;\n    long temp;\n    \n    for(long\
    \ i = 1; i <= n; i++)\n    {\n        if((i % 11) == 0)\n        {\n         \
    \   if((i % 13) == 0)\n            {\n                count++;\n            }\n\
    \        }\n        temp = i % 10;\n        if(temp == 7)\n        {\n       \
    \     count++;\n        }\n    }\n    return count;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nI see that you have used the modulus operator to find the remainder\
    \ of the number divided by 11 and 13. How does this work? I thought modulus operator\
    \ was used to find the remainder of a division operation. Can you please explain\
    \ how this works?\n<|/ c |>\n<| c |>\nThe modulus operator is just used to find\
    \ the remainder of a division operation. For example, `5 % 11` returns `5` because\
    \ `5` is divisible by `11`. `5 % 13` returns `3` because `3` is divisible by `13`.\
    \ So `5 % 11 == 0 && 5 % 13 == 0` because `5` is divisible by both `11` and `13`.\n\
    <|/ c |>\n<| c |>\nI see. Thank you so much!\n<|/ c |>\n<| c |>\nI see that you\
    \ have used the modulus operator to find the remainder of the number divided by\
    \ 11 and 13. How does this work? I thought modulus operator was used to find the\
    \ remainder of a division operation. Can you please explain how this works?\n\
    <|/ c |>\n<| c |>\nI added an explanation to my answer.\n<|/ c |>\n<| a tags=fizzbuzz,c++\
    \ |>\n<code>\n#include <iostream>\nusing namespace std;", "{\n    long count =\
    \ 0;\n    long remainder;\n    long digit;\n    \n    while (n>0) {\n        remainder\
    \ = n%11;\n        digit = remainder;\n        if (remainder == 7) {\n       \
    \     count++;\n        }\n        n = n/11;\n    }\n    return count;\n}\n</code>\n\
    <|/ a tags=fizzbuzz,c++,algorithm |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n\
    using namespace std;", "{\n    long count = 0;\n    long remainder;\n    \n  \
    \  for(long i = 1; i <= n; i++) {\n        remainder = i % 11;\n        if (remainder\
    \ == 7) {\n            count++;\n        }\n    }\n    return count;\n}\n</code>\n\
    <|/ a dscore=1 |>\n<| a tags=fizzbuzz,c++,algorithm |>\n<code>\n#include <iostream>\n\
    #include <cmath>\nusing namespace std;", "{\n    long count = 0;\n    long remainder;\n\
    \    \n    while (n) {\n        remainder = n % 11;\n        if (remainder ==\
    \ 7 || remainder == 13) {\n            count++;\n        }\n        n /= 11;\n\
    \    }\n    return count;\n}", "{\n    long count = 0;\n    long i;\n    for(i\
    \ = 0; i < n; i++)\n    {\n        if((i % 11) == 0 || (i % 13) == 0)\n      \
    \  {\n            count++;\n        }\n    }\n    return count;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| a tags=fizzbuzz,c++ |>\n<code>\n#include <iostream>\nusing\
    \ namespace std;", "{\n    long count = 0;\n    long remainder;\n    long i;\n\
    \    \n    for (i = 1; i <= n; i++) {\n        remainder = i % 11;\n        if\
    \ (remainder == 0 || remainder == 7) {\n            count++;\n        }\n    }\n\
    \    return count;\n}\n</code>\n<|/ a tags=fizzbuzz,c++,algorithm |>\n<| a tags=fizzbuzz,c++,algorithm\
    \ |>\n<code>\n#include <iostream>\nusing namespace std;", "{\n    long count =\
    \ 0;\n    long remainder;\n    \n    while (n>0) {\n        remainder = n%11;\n\
    \        if (remainder == 7 || remainder == 13) count++;\n        n = n/11;\n\
    \    }\n    return count;\n}", "{\n    long count = 0;\n    long remainder;\n\
    \    \n    while (n>0) {\n        remainder = n%11;\n        if (remainder ==\
    \ 7) {\n            count++;\n        }\n        n = n/11;\n    }\n    return\
    \ count;\n}\n</code>\n<|/ a |>\n<| c |>\nThis doesn't work. Try fizz_buzz(15).\n\
    <|/ c |>\n<| c |>\nIt does work. Try it yourself. It returns 2 for the input 15.\
    \ Try it yourself.\n<|/ c |>\n<| c |>\nIt returns 1 for the input 15. Try it yourself.\n\
    <|/ c |>\n<| c |>\nIt returns 2 for the input 15. Try it yourself.\n<|/ c |>\n\
    <| c |>\nIt returns 2 for the input 15. Try it yourself.\n<|/ c |>\n<| a |>\n\
    <code>", "{\n    long count = 0;\n    long remainder;\n    long i;\n    \n   \
    \ for(i = 1; i <= n; i++) {\n        remainder = i % 11;\n        if (remainder\
    \ == 7 || remainder == 13) count++;\n    }\n    return count;\n}\n</code>\n<|/\
    \ a dscore=0 |>\n<| c |>\nThe question was about a specific language, not about\
    \ a general solution.\n<|/ c |>\n<| c |>\nI agree with you, but I thought that\
    \ maybe the OP can learn something from my solution. Anyway, I added a solution\
    \ in C#.\n<|/ c |>\n<| a tags=algorithm,fizzbuzz |>\n<code>\npublic class FizzBuzz\
    \ {", "{\n    long count = 0;\n    long x = n;\n    \n    while (x != 0)\n   \
    \ {\n        if (x % 11 == 0 || x % 13 == 0)\n        {\n            count++;\n\
    \        }\n        x /= 10;\n    }\n    return count;\n}", "{\n    long count\
    \ = 0;\n    long div = 11;\n    long mod;\n    \n    while(n > 0)\n    {\n   \
    \     mod = n % div;\n        if (mod == 0 || mod == 7)\n            count++;\n\
    \        div *= 10;\n        n /= div;\n    }\n    return count;\n}\n</code>\n\
    <|/ a tags=fizzbuzz,c++,algorithm |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n\
    using namespace std;", "{\n    long count = 0;\n    long div = 11L;\n    long\
    \ mod = 13L;\n    long div2 = div * div;\n    long mod2 = mod * mod;\n    long\
    \ div3 = div2 * div;\n    long mod3 = mod2 * mod;\n    long div4 = div3 * div;\n\
    \    long mod4 = mod3 * mod;\n    long div5 = div4 * div;\n    long mod5 = mod4\
    \ * mod;\n    long div6 = div5 * div;\n    long mod6 = mod5 * mod;\n    long div7\
    \ = div6 * div;\n    long mod7 = mod6 * mod;\n    long div8 = div7 * div;\n  \
    \  long mod8 = mod7 * mod;\n    long div9 = div8 * div;\n    long mod9 = mod8\
    \ * mod;\n    long div10 = div9 * div;\n    long mod10 = mod9 * mod;\n    long\
    \ div11 = div10 * div;\n    long mod11 = mod10 * mod;\n    long div12 = div11\
    \ * div;\n    long mod12 = mod11 * mod;\n    long div13 = div12 * div;\n    long\
    \ mod13 = mod12 * mod;\n    long div14 = div13 * div;\n    long mod14 = mod13\
    \ * mod;\n    long div15 = div14 * div;\n    long mod15 = mod14 * mod;\n    long\
    \ div16 = div15 * div;\n    long mod16 = mod15 * mod;\n    long div17 = div16\
    \ * div;\n    long mod17 = mod16 * mod;\n    long div18 = div17 * div;\n    long\
    \ mod18 = mod17 * mod;\n    long div19 = div18 * div;\n    long mod19 = mod18\
    \ * mod;\n    long div20 = div19 * div;\n    long mod20 = mod19 * mod;\n    long\
    \ div21 = div20 * div;\n    long mod21 = mod20 * mod;\n    long div22 = div21\
    \ * div;\n    long mod22 = mod21 * mod;\n    long div23 = div22 * div;\n    long\
    \ mod23 = mod22 * mod;\n    long div24 = div23 * div;\n    long mod24 = mod23\
    \ * mod;\n    long div25 = div24 * div;\n    long mod25 = mod24 * mod;", "{\n\
    \    long count = 0;\n    long i;\n    for(i = 1; i <= n; ++i)\n    {\n      \
    \  if((i % 11) == 0 || i % 13 == 0)\n            ++count;\n    }\n    return count;\n\
    }\n</code>\n<|/ a tags=fizzbuzz,c++,algorithm |>\n<| c |>\nThis doesn't work.\
    \ `fizz_buzz(78)` returns `2` when it should be `3`.\n<|/ c |>\n<| c |>\n: I fixed\
    \ the bug. Thanks for pointing it out. :)\n<|/ c |>\n<| c |>\n: Thanks for pointing\
    \ out the bug. Fixed it now.\n<|/ c |>\n<| c |>\n: Thanks for pointing out the\
    \ bug. Fixed it now.\n<|/ c |>\n<| a tags=fizzbuzz,c++,algorithm |>\n<code>\n\
    #include <iostream>\nusing namespace std;", "{\n    long count = 0;\n    long\
    \ i;\n    for(i = 1; i <= n; i++) {\n        if((i % 11) == 0 || (i % 13) == 0)\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n</code>\n<|/\
    \ a tags=fizzbuzz,c++,algorithm |>\n<| c |>\nThis doesn't work. Try it with `fizz_buzz(50)`.\n\
    <|/ c |>\n<| c |>\n: It works fine for me. Try it with `fizz_buzz(50)`.\n<|/ c\
    \ |>\n<| c |>\n: I tested it with `fizz_buzz(50)` and it returns `0`.\n<|/ c |>\n\
    <| c |>\n: I tested it with `fizz_buzz(50)` and it returns `0`.\n<|/ c |>\n<|\
    \ c |>\n: I tested it with `fizz_buzz(50)` and it returns `0`.\n<|/ c |>\n<| a\
    \ dscore=3 |>\n<code>\n#include <iostream>\nusing namespace std;", "{\n    long\
    \ count = 0;\n    long i;\n    for(i = 0; i < n; ++i)\n    {\n        if((i %\
    \ 11) == 0)\n        {\n            if((i % 13) == 0)\n            {\n       \
    \         ++count;\n            }\n        }\n    }\n    return count;\n}\n</code>\n\
    <|/ a tags=fizzbuzz,c++,algorithm |>\n<| a tags=fizzbuzz,c++,algorithm |>\n<code>\n\
    #include <iostream>\nusing namespace std;", "{\n    long count = 0;\n    long\
    \ remainder;\n    \n    while (n>0) {\n        remainder = n%11;\n        if (remainder\
    \ == 7 || remainder == 13) count++;\n        n = n/11;\n    }\n    return count;\n\
    }\n</code>\n<|/ a tags=fizzbuzz,c++,fizzlers |>\n<| c |>\nThis doesn't answer\
    \ the question, which is about how to solve the problem without using loops.\n\
    <|/ c |>\n<| c |>\nThe question was how to solve the problem without using loops.\
    \ I provided a solution that uses loops. I didn't say that loops were not allowed.\
    \ Loops are a solution to many problems. I provided a solution that uses loops.\
    \ I didn't say that loops were not allowed. Loops are a solution to many problems.\
    \ I provided a solution that uses loops. I didn't say that loops were not allowed.\
    \ Loops are a solution to many problems. I provided a solution that uses loops.\
    \ I didn't say that loops were not allowed. Loops are a solution to many problems.\
    \ I provided a solution that uses loops. I didn't say that loops were not allowed.\
    \ Loops are a solution to many problems. I provided a solution that uses loops.\
    \ I didn't say that loops were not allowed. Loops are a solution to many problems.\
    \ I provided a solution that uses loops. I didn't say that loops were not allowed.\
    \ Loops are a solution to many problems. I provided a solution that uses loops.\
    \ I didn't say that loops were not allowed. Loops are a solution to many problems.\
    \ I provided a solution that uses loops. I didn't say that loops were not allowed.\
    \ Loops are a solution to many problems. I provided a solution that uses loops.\
    \ I didn't say that loops were not allowed. Loops are a solution to many problems.\
    \ I provided a solution that uses loops. I didn't say that loops were not allowed.\
    \ Loops are a solution to many problems. I provided a solution that uses loops.\
    \ I didn't say that loops were not allowed. Loops are a solution to many problems.\
    \ I provided a solution that uses loops. I didn't say that loops were not allowed.\
    \ Loops are a solution to many problems. I provided a solution that uses loops.\
    \ I didn't say that loops were not allowed. Loops are a solution to many problems.\
    \ I provided a solution that uses loops. I didn't say that loops were not allowed.\
    \ Loops are a solution to many problems. I provided a solution that uses loops.\
    \ I didn't say that loops were not allowed. Loops are a solution to many ", "{\n\
    \    long count = 0;\n    long remainder;\n    \n    while(n > 0)\n    {\n   \
    \     remainder = n % 11;\n        if (remainder == 7)\n        {\n          \
    \  count++;\n        }\n        n = n / 11;\n    }\n    \n    return count;\n\
    }\n</code>\n<|/ a tags=fizzbuzz,c++,algorithm |>\n<| c |>\nThis doesn't work.\
    \ `fizz_buzz(78)` returns `3` when it should be `2`.\n<|/ c |>\n<| c |>\n: It\
    \ works for me. `fizz_buzz(78)` returns `2`.\n<|/ c |>\n<| c |>\n: I see what\
    \ you mean. Fixed it.\n<|/ c |>\n<| c |>\n: I fixed it again. Thanks for pointing\
    \ that out.\n<|/ c |>\n<| c |>\n: I fixed it again. Thanks for pointing that out.\n\
    <|/ c |>\n<| a tags=fizzbuzz,c++,algorithm |>\n<code>\n#include <iostream>\n#include\
    \ <string>\nusing namespace std;", "{\n    long count = 0;\n    long d = n % 11;\n\
    \    long e = (n - d) / 11;\n    long f = (n - e) / 13;\n    long g = (n - f)\
    \ / 17;\n    long h = (n - g) / 19;\n    long i = (n - h) / 23;\n    long j =\
    \ (n - i) / 27;\n    long k = (n - j) / 31;\n    long l = (n - k) / 37;\n    long\
    \ m = (n - l) / 43;\n    long n = (n - m) / 57;\n    long o = (n - n) / 63;\n\
    \    long p = (n - o) / 67;\n    long q = (n - p) / 71;\n    long r = (n - q)\
    \ / 71;\n    long s = (n - r) / 71;\n    long t = (n - s) / 71;\n    long u =\
    \ (n - t) / 71;\n    long v = (n - u) / 71;\n    long w = (n - v) / 71;\n    long\
    \ x = (n - w) / 71;\n    long y = (n - x) / 71;\n    long z = (n - y) / 71;\n\
    \    long a = (n - z) / 71;\n    long b = (n - a) / 71;\n    long c = (n - b)\
    \ / 71;\n    long d = (n - c) / 71;\n    long e = (n - d) / 71;\n    long f =\
    \ (n - e) / 71;\n    long g = (n - f) / 71;\n    long h = (n - g) / 71;\n    long\
    \ i = (n - h) / 71;\n    long j = (n - i) / 71;\n    long k = (n - j) / 71;\n\
    \    long l = (n - k) / 71;\n    long m = (n - l) / 71;\n    long n = (n - m)\
    \ / 71;\n    long o = (n - n) / 71;\n    long p = (n - o) / 71;\n    long q =\
    \ (n - p) / 71;\n    long r = (n - q) / 71;\n    long s = (n - r) / 71;\n    long\
    \ t = (n - s) / 71;\n    long u = (n - t) / 71;\n    long v = (n - u) / 71;\n\
    \    long w = (n - v) / 71;\n    long x = (n - w) / 71;\n    long y = (n - x)\
    \ / 71;\n    long z = (n - y) / 71;\n    long a = (n - z) / 71;\n    long b =\
    \ (n - a) / 71;\n    long c = (n - b) / 71;", "{\n    long count = 0;\n    long\
    \ remainder;\n    long i;\n    \n    for (i = 1; i <= n; i++) {\n        remainder\
    \ = i % 11;\n        if (remainder == 7 || remainder == 13) count++;\n    }\n\
    \    return count;\n}\n</code>\n<|/ a tags=fizzbuzz,c++,algorithm |>\n<| a |>\n\
    <code>\n#include <iostream>\nusing namespace std;", "{\n    long count = 0;\n\
    \    long div = 11;\n    long mod;\n    \n    while (n > div) {\n        mod =\
    \ n % div;\n        if (mod == 0 || mod == div) {\n            count++;\n    \
    \    }\n        div = div * 10;\n    }\n    return count;\n}\n</code>\n<|/ a tags=fizzbuzz,c++,algorithm\
    \ |>\n<| a tags=fizzbuzz,c++,algorithm |>\n<code>\n#include <iostream>\nusing\
    \ namespace std;", "{\n    long count = 0;\n    long div = 11;\n    long mod;\n\
    \    \n    while (n >= div) {\n        mod = n % div;\n        if (mod != 0 &&\
    \ mod != div) {\n            count++;\n        }\n        div *= 10;\n    }\n\
    \    return count;\n}\n</code>\n<|/ a tags=fizzbuzz,c++,algorithm |>\n<| c |>\n\
    I like your solution, but I wonder why you used `long` instead of `int`?\n<|/\
    \ c |>\n<| c |>\n: I used `long` because I wanted to be sure that `div` was a\
    \ multiple of 10. `int` would have worked just as well.\n<|/ c |>\n<| c |>\n:\
    \ I used `long` because I wanted to be sure that `div` was a multiple of 10. `int`\
    \ would have worked just as well.\n<|/ c |>\n<| c |>\n: I used `long` because\
    \ I wanted to be sure that `div` was a multiple of 10. `int` would have worked\
    \ just as well.\n<|/ c |>\n<| c |>\n: I used `long` because I wanted to be sure\
    \ that `div` was a multiple of 10. `int` would have worked just as well.\n<|/\
    \ c |>\n<| a tags=fizzbuzz,c++,algorithm |>\n<code>\n#include <iostream>\nusing\
    \ namespace std;", "{\n    long count = 0;\n    long remainder;\n    long temp;\n\
    \    \n    while(n > 0)\n    {\n        remainder = n % 11;\n        if (remainder\
    \ == 7)\n        {\n            count++;\n        }\n        n = n / 11;\n   \
    \ }\n    return count;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=fizzbuzz,c++\
    \ |>\n<code>\n#include <iostream>\nusing namespace std;", "{\n    long count =\
    \ 0;\n    long remainder;\n    long i;\n    \n    for (i = 1; i <= n; i++) {\n\
    \        remainder = i % 11;\n        if (remainder == 7 || remainder == 13) count++;\n\
    \    }\n    return count;\n}\n</code>\n<|/ a tags=fizzbuzz,c++,algorithm |>\n\
    <| c |>\nI like this solution, although it can be improved by using an `if` statement\
    \ to check if `remainder` is `7` or `13` before incrementing the counter.\n<|/\
    \ c |>\n<| c |>\nI agree, that is a good improvement. I will add that to the answer.\n\
    <|/ c |>\n<| a tags=fizzbuzz,c++,algorithm |>\n<code>\n#include <iostream>\nusing\
    \ namespace std;", "{\n    long count = 0;\n    long x = n;\n    long y = n;\n\
    \    long z = 0;\n    long w = 0;\n    long v = 0;\n    long u = 0;\n    long\
    \ w = 0;\n    long v = 0;\n    long u = 0;\n    long w = 0;\n    long v = 0;\n\
    \    long u = 0;\n    long w = 0;\n    long v = 0;\n    long u = 0;\n    long\
    \ w = 0;\n    long v = 0;\n    long u = 0;\n    long w = 0;\n    long v = 0;\n\
    \    long u = 0;\n    long w = 0;\n    long v = 0;\n    long u = 0;\n    long\
    \ w = 0;\n    long v = 0;\n    long u = 0;\n    long w = 0;\n    long v = 0;\n\
    \    long u = 0;\n    long w = 0;\n    long v = 0;\n    long u = 0;\n    long\
    \ w = 0;\n    long v = 0;\n    long u = 0;\n    long w = 0;\n    long v = 0;\n\
    \    long u = 0;\n    long w = 0;\n    long v = 0;\n    long u = 0;\n    long\
    \ w = 0;\n    long v = 0;\n    long u = 0;\n    long w = 0;\n    long v = 0;\n\
    \    long u = 0;\n    long w = 0;\n    long v = 0;\n    long u = 0;\n    long\
    \ w = 0;\n    long v = 0;\n    long u = 0;\n    long w = 0;\n    long v = 0;\n\
    \    long u = 0;\n    long w = 0;\n    long v = 0;\n    long u = 0;\n    long\
    \ w = 0;\n    long v = 0;\n    long u = 0;\n    long w = 0;\n    long v = 0;\n\
    \    long u = 0;\n    long w = 0;\n    long v = 0;\n    long u = 0;\n    long\
    \ w = 0;\n    long v = 0;\n    long u = 0;\n    long w = 0;\n    long v = 0;\n\
    \    long u = 0;\n    long w = 0;\n    long v = 0;\n    long u = 0;\n    long\
    \ w = 0;\n    long v = 0;\n    long u = 0;\n    long w = 0;\n    long v = 0;\n\
    \    long u = 0;\n    long w = 0;\n    long v = 0;\n    long u = 0;\n    long\
    \ w = 0;\n    long v = 0;\n    long u = 0;\n    long w = 0;\n    long v = 0;\n\
    \    long u = 0;\n    long w = 0;\n    long v = 0;\n    long u = 0;\n    long\
    \ w = 0;\n    long v = 0;\n    long u = 0;\n    long w = 0;\n    long v = 0;\n\
    \    ", "{\n    long count = 0;\n    long remainder = n % 11;\n    long remainder2\
    \ = n % 13;\n    long remainder3 = n % 17;\n    long remainder4 = n % 19;\n  \
    \  long remainder5 = n % 23;\n    long remainder6 = n % 29;\n    long remainder7\
    \ = n % 37;\n    long remainder8 = n % 47;\n    long remainder9 = n % 55;\n  \
    \  long remainder10 = n % 63;\n    long remainder11 = n % 71;\n    long remainder12\
    \ = n % 79;\n    long remainder13 = n % 87;\n    long remainder14 = n % 97;\n\
    \    long remainder15 = n % 105;\n    long remainder16 = n % 113;\n    long remainder17\
    \ = n % 121;\n    long remainder18 = n % 129;\n    long remainder19 = n % 137;\n\
    \    long remainder20 = n % 145;\n    long remainder21 = n % 153;\n    long remainder22\
    \ = n % 161;\n    long remainder23 = n % 169;\n    long remainder24 = n % 177;\n\
    \    long remainder25 = n % 185;\n    long remainder26 = n % 193;\n    long remainder27\
    \ = n % 201;\n    long remainder28 = n % 210;\n    long remainder29 = n % 219;\n\
    \    long remainder30 = n % 227;\n    long remainder31 = n % 235;\n    long remainder32\
    \ = n % 243;\n    long remainder33 = n % 251;\n    long remainder34 = n % 259;\n\
    \    long remainder35 = n % 267;\n    long remainder36 = n % 275;\n    long remainder37\
    \ = n % 283;\n    long remainder38 = n % 291;\n    long remainder39 = n % 299;\n\
    \    long remainder40 = n % 307;\n    long remainder41 = n % 315;\n    long remainder42\
    \ = n % 323;\n    long remainder43 = n % 331;\n    long remainder44 = n % 339;\n\
    \    long remainder45 = n % 347;\n    long remainder46 = n % 355;\n    long remainder47\
    \ = n % 363;\n    long remainder48 = n % 371;\n    long remainder49 = n % 379;\
    \ \n    long remainder50 = n % 387;\n    long remainder51 = n % 395;\n    long\
    \ remainder52 = n % 403;\n    long ", "{\n    long count = 0;\n    long i;\n \
    \   for(i = 1; i <= n; ++i)\n    {\n        if((i % 11) == 0 || (i % 13) == 0)\n\
    \            ++count;\n    }\n    return count;\n}\n</code>\n<|/ a tags=fizzbuzz,c++\
    \ |>\n<| a tags=fizzbuzz,c++ |>\n<code>\n#include <iostream>\nusing namespace\
    \ std;", "{\n    long count = 0;\n    long temp;\n    \n    temp = n;\n    \n\
    \    while (temp > 0) {\n        if (temp % 11 == 0 || temp % 13 == 0) {\n   \
    \         count++;\n        }\n        temp /= 10;\n    }\n    return count;\n\
    }\n</code>\n<|/ a tags=fizzbuzz,c++ |>\n<| a tags=fizzbuzz,c++ |>\n<code>\n#include\
    \ <iostream>\nusing namespace std;", "{\n    long count = 0;\n    for(long i =\
    \ n; i > 0; i /= 11) \n    {\n        if(i%13 == 0) \n        {\n            count\
    \ += 1;\n        }\n    }\n    return count;\n}\n</code>\n<|/ a dscore=0 |>\n\
    <| c |>\nThanks for your answer! I appreciate it. I was thinking about this problem\
    \ and I thought about a recursive solution, but I wasn't sure how to implement\
    \ it without using loops. I guess I should learn more about recursion.\n<|/ c\
    \ |>\n<| c |>\nRecursion is very powerful and useful.  I recommend you read up\
    \ on it before you start writing any more code.  It's a very powerful tool that\
    \ will make your life easier.\n<|/ c |>\n<| c |>\nI did read up on it, but I didn't\
    \ understand it until I read your answer. Thanks again!\n<|/ c |>\n<| a |>\n<code>\n\
    def fizz_buzz(n):\n    if n%11==0 and n%13==0:\n        return \"FizzBuzz\"\n\
    \    elif n%11==0:\n        return \"Fizz\"\n    elif n%13==0:\n        return\
    \ \"Buzz\"\n    else:\n        return n\n</code>\n<|/ a dscore=0 tags=fizzbuzz,python\
    \ |>\n<| c |>\nWhile this code may answer the question, providing additional context\
    \ regarding why and/or how this code answers the question improves its long-term\
    \ value.\n<|/ c |>\n<| a tags=fizzbuzz,python |>\n<code>\ndef fizz_buzz(n):\n\
    \    if n%11==0 and n%13==0:\n        return \"FizzBuzz\"\n    elif n%11==0:\n\
    \        return \"Fizz\"\n    elif n%13==0:\n        return \"Buzz\"\n    else:\n\
    \        return n\n</code>\n<|/ a dscore=0 |>\n<| c |>\nWhile this code may answer\
    \ the question, providing additional context regarding why and/or how this code\
    \ answers the question improves its long-term value.\n<|/ c |>\n<| a dscore=0\
    \ |>\n<code>\ndef fizz_buzz(n):\n    if n%11==0 and n%13==0:\n        return \"\
    FizzBuzz\"\n    elif n%11==0:\n        return \"Fizz\"\n    elif n%13==0:\n  \
    \      return \"Buzz\"\n    else:\n        return n\n</code>\n<|/ a tags=fizzbuzz,python\
    \ |>\n<| c |>\nWhile this code may answer the question, providing additional context\
    \ regarding why ", "{\n    long count = 0;\n    long remainder;\n    long dividend\
    \ = n;\n    long divisor = 11;\n    long quotient;\n    \n    while(dividend >=\
    \ divisor)\n    {\n        remainder = dividend % divisor;\n        quotient =\
    \ dividend / divisor;\n        \n        if(remainder == 7)\n        {\n     \
    \       count++;\n        }\n        \n        divisor = divisor * 10;\n     \
    \   dividend = quotient;\n    }\n    \n    return count;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nThis does not provide an answer to the question. To critique or\
    \ request clarification from an author, leave a comment below their post. - [From\
    \ Review](/review/low-quality-posts/26839427)\n<|/ c |>\n<| c |>\nI believe this\
    \ does answer the question. He asked how to count the number of times 7 appears\
    \ in integers less than n which are divisible by 11 or 13. He also asked how to\
    \ do this in O(n) time. He also asked how to do this in O(1) space. He also asked\
    \ how to do this in O(1) time. He also asked how to do this in O(1) space. He\
    \ also asked how to do this in O(1) space. He also asked how to do this in O(1)\
    \ space. He also asked how to do this in O(1) space. He also asked how to do this\
    \ in O(1) space. He also asked how to do this in O(1) space. He also asked how\
    \ to do this in O(1) space.\n<|/ c |>\n<| c |>\nI believe this does answer the\
    \ question. He asked how to count the number of times 7 appears in integers less\
    \ than n which are divisible by 11 or 13. He also asked how to do this in O(n)\
    \ time. He also asked how to do this in O(1) space. He also asked how to do this\
    \ in O(1) time. He also asked how to do this in O(1) space. He also asked how\
    \ to do this in O(1) space. He also asked how to do this in O(1) space. He also\
    \ asked how to do this in O(1) space. He also asked how to do this in O(1) space.\
    \ He also asked how to do this in O(1) space. He also asked how to do this in\
    \ O(1) space.\n<|/ c |>\n<| c |>\nI believe this does answer the question. He\
    \ asked how to count ", "{\n    long count = 0;\n    long remainder;\n    long\
    \ temp;\n    \n    while(n > 0)\n    {\n        remainder = n % 11;\n        if\
    \ (remainder == 0 || remainder == 7)\n        {\n            count++;\n      \
    \  }\n        n = n / 11;\n    }\n    return count;\n}\n</code>\n<|/ a tags=fizzbuzz,c++,algorithm\
    \ |>\n<| c |>\nThe question was about how to do this in C++, not C#.\n<|/ c |>\n\
    <| c |>\nI didn't realize that C# was a requirement. I've updated my answer to\
    \ include a C++ solution.\n<|/ c |>\n<| c |>\nThe question was about how to do\
    \ this in C++, not C#.\n<|/ c |>\n<| c |>\nI didn't realize that C# was a requirement.\
    \ I've updated my answer to include a C++ solution.\n<|/ c |>\n<| a dscore=0 |>\n\
    <code>\n#include <iostream>\nusing namespace std;", "{\n    long count = 0;\n\
    \    long remainder;\n    long i;\n    \n    for(i = 1; i <= n; i++)\n    {\n\
    \        remainder = i % 11;\n        if(remainder == 0 || remainder == 7)\n \
    \       {\n            count++;\n        }\n    }\n    return count;\n}\n</code>\n\
    <|/ a tags=fizzbuzz,c++,fizzlers |>\n<| a |>\n<code>\n#include <iostream>\nusing\
    \ namespace std;", "{\n    long count = 0;\n    long remainder;\n    long temp;\n\
    \    \n    while(n > 0)\n    {\n        remainder = n % 11;\n        temp = remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remain", "{\n    long count\
    \ = 0;\n    long remainder;\n    \n    while(n > 0)\n    {\n        remainder\
    \ = n % 10;\n        if(remainder == 7)\n        {\n            count++;\n   \
    \     }\n        n = n / 10;\n    }\n    return count;\n}\n</code>\n<|/ a tags=fizzbuzz,c++,algorithm\
    \ |>\n<| c |>\nThis code does not work. Try it with fizzbuzz(78). You will see\
    \ that it will return 2 instead of 3.\n<|/ c |>\n<| c |>\nIt does work, try it\
    \ yourself. It returns 2 for the input 78.\n<|/ c |>\n<| c |>\nI tested it myself\
    \ and you are right. Sorry about that. I will edit my answer.\n<|/ c |>\n<| c\
    \ |>\nI edited my answer to fix the bug that I mentioned in my comment above.\n\
    <|/ c |>\n<| c |>\nThe code still does not work. Try it with fizzbuzz(78). You\
    \ will see that it will return 2 instead of 3.\n<|/ c |>\n<| a tags=fizzbuzz,c++,algorithm\
    \ |>\n<code>\n#include <iostream>\nusing namespace std;", "{\n    long count =\
    \ 0;\n    for(long i = 1;i <= n;i++)\n    {\n        if((i % 11) == 0 || i % 13\
    \ == 0)\n            count++;\n    }\n    return count;\n}\n</code>\n<|/ a tags=fizzbuzz,c++,algorithm\
    \ |>\n<| c |>\nThis code doesn't work. Try it with `fizz_buzz(50)`.\n<|/ c |>\n\
    <| c |>\nI tested it and it works fine. Did you try it?\n<|/ c |>\n<| c |>\nYes,\
    \ I did. `fizz_buzz(50)` returns `0`, not `2`.\n<|/ c |>\n<| c |>\nI tested it\
    \ again and it works fine. Did you try it?\n<|/ c |>\n<| c |>\nYes, I did. `fizz_buzz(50)`\
    \ returns `0`, not `2`.\n<|/ c |>\n<| a tags=fizzbuzz,c++,algorithm |>\n<code>\n\
    #include <iostream>\nusing namespace std;", "{\n    long count = 0;\n    long\
    \ remainder;\n    \n    while (n>0) {\n        remainder = n%11;\n        if (remainder\
    \ == 7 || remainder == 13) count++;\n        n = n/11;\n    }\n    return count;\n\
    }", "{\n    long count = 0;\n    long remainder;\n    long temp;\n    \n    while\
    \ (n>0)\n    {\n        remainder = n%11;\n        if (remainder == 7)\n     \
    \   {\n            count++;\n        }\n        n = n/11;\n    }\n    return count;\n\
    }\n</code>\n<|/ a tags=fizzbuzz,c++,algorithm |>\n<| c |>\nThis doesn't work.\
    \ `fizz_buzz(78)` returns `2` when it should be `3`.\n<|/ c |>\n<| c |>\nIt works\
    \ fine for me. Can you give an example where it doesn't work?\n<|/ c |>\n<| c\
    \ |>\n`fizz_buzz(78)` returns `2` when it should be `3`.\n<|/ c |>\n<| c |>\n\
    I ran it through my compiler and it works fine. Are you sure you copied it correctly?\n\
    <|/ c |>\n<| c |>\nYes, I copied it correctly. `fizz_buzz(78)` returns `2` when\
    \ it should be `3`.\n<|/ c |>\n<| a tags=fizzbuzz,c++,algorithm |>\n<code>\n#include\
    \ <iostream>\nusing namespace std;", "{\n    long count = 0;\n    long remainder\
    \ = n;\n    \n    while (remainder > 0)\n    {\n        if (remainder % 11 ==\
    \ 0)\n        {\n            count += 1;\n        }\n        if (remainder % 13\
    \ == 0)\n        {\n            count += 1;\n        }\n        remainder = remainder\
    \ / 10;\n    }\n    return count;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>", "{\n    long count = 0;\n    long remainder = n % 11;\n    long\
    \ remainder2 = n % 13;\n    long remainder3 = n % 17;\n    long remainder4 = n\
    \ % 19;\n    long remainder5 = n % 23;\n    long remainder6 = n % 29;\n    long\
    \ remainder7 = n % 37;\n    long remainder8 = n % 41;\n    long remainder9 = n\
    \ % 43;\n    long remainder10 = n % 51;\n    long remainder11 = n % 59;\n    long\
    \ remainder12 = n % 67;\n    long remainder13 = n % 71;\n    long remainder14\
    \ = n % 79;\n    long remainder15 = n % 87;\n    long remainder16 = n % 97;\n\
    \    long remainder17 = n % 103;\n    long remainder18 = n % 111;\n    long remainder19\
    \ = n % 119;\n    long remainder20 = n % 127;\n    long remainder21 = n % 135;\n\
    \    long remainder22 = n % 143;\n    long remainder23 = n % 151;\n    long remainder24\
    \ = n % 159;\n    long remainder25 = n % 167;\n    long remainder26 = n % 175;\n\
    \    long remainder27 = n % 183;\n    long remainder28 = n % 191;\n    long remainder29\
    \ = n % 199;\n    long remainder30 = n % 207;\n    long remainder31 = n % 215;\n\
    \    long remainder32 = n % 223;\n    long remainder33 = n % 231;\n    long remainder34\
    \ = n % 239;\n    long remainder35 = n % 247;\n    long remainder36 = n % 255;\n\
    \    long remainder37 = n % 263;\n    long remainder38 = n % 271;\n    long remainder39\
    \ = n % 279;\n    long remainder40 = n % 287;\n    long remainder41 = n % 295;\n\
    \    long remainder42 = n % 303;\n    long remainder43 = n % 311;\n    long remainder44\
    \ = n % 319;\n    long remainder45 = n % 327;\n    long remainder46 = n % 335;\n\
    \    long remainder47 = n % 343;\n    long remainder48 = n % 351;\n    long remainder49\
    \ = n % 359;\n    long remainder50 = n % 367;\n    long remainder51 = n % 375;\n\
    \    long remainder52 = n % 383;\n    long ", "{\n    long count = 0;\n    for(long\
    \ i = n; i > 0; i /= 11)\n    {\n        if(i%11 == 7)\n            count++;\n\
    \    }\n    for(long i = n; i > 0; i /= 13)\n    {\n        if(i%13 == 7)\n  \
    \          count++;\n    }\n    return count;\n}\n</code>\n<|/ a tags=fizzbuzz,c++,algorithm\
    \ |>\n<| c |>\nThis doesn't work. `fizz_buzz(50)` returns `0`, but `fizz_buzz(78)`\
    \ returns `2`.\n<|/ c |>\n<| c |>\n: I fixed the bug. Thanks for pointing it out.\n\
    <|/ c |>\n<| c |>\n: Thanks for pointing it out. Fixed now.\n<|/ c |>\n<| c |>\n\
    : Thanks for pointing it out. Fixed now.\n<|/ c |>\n<| c |>\n: Thanks for pointing\
    \ it out. Fixed now.\n<|/ c |>\n<| a dscore=2 |>\n<code>\n#include <iostream>\n\
    using namespace std;", "{\n    long count = 0;\n    long x = n;\n    long y =\
    \ n;\n    long z = 0;\n    long t = 0;\n    \n    while(x != 0)\n    {\n     \
    \   z = x % 10;\n        \n        if(z == 7)\n        {\n            count++;\n\
    \        }\n        \n        x = x / 10;\n    }\n    \n    while(y != 0)\n  \
    \  {\n        t = y % 10;\n        \n        if(t == 7)\n        {\n         \
    \   count++;\n        }\n        \n        y = y / 10;\n    }\n    \n    return\
    \ count;\n}", "{\n    long count = 0;\n    long i;\n    for(i = 0; i < n; ++i)\n\
    \    {\n        if((i % 11) == 0 || i % 13 == 0)\n        {\n            ++count;\n\
    \        }\n    }\n    return count;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>", "{\n    long count = 0;\n    long remainder;\n    \n    while (n>0)\
    \ {\n        remainder = n%11;\n        if (remainder == 7 || remainder == 13)\
    \ count++;\n        n = n/11;\n    }\n    return count;\n}\n</code>\n<|/ a |>\n\
    <| c |>\nThe question was about a specific programming language - not about a\
    \ general solution. Your answer does not answer the question.\n<|/ c |>\n<| c\
    \ |>\nI agree with you, however I thought that since this was a programming language\
    \ question it would be appropriate to provide a solution in that language. My\
    \ answer was in C#.\n<|/ c |>\n<| c |>\nI agree with you, but your answer does\
    \ not answer the question. Your answer does not answer the question because you\
    \ did not provide any language specific solution. Your answer does not answer\
    \ the question because you did not provide any language specific solution. Your\
    \ answer does not answer the question because you did not provide any language\
    \ specific solution. Your answer does not answer the question because you did\
    \ not provide any language specific solution. Your answer does not answer the\
    \ question because you did not provide any language specific solution. Your answer\
    \ does not answer the question because you did not provide any language specific\
    \ solution. Your answer does not answer the question because you did not provide\
    \ any language specific solution. Your answer does not answer the question because\
    \ you did not provide any language specific solution. Your answer does not answer\
    \ the question because you did not provide any language specific solution. Your\
    \ answer does not answer the question because you did not provide any language\
    \ specific solution. Your answer does not answer the question because you did\
    \ not provide any language specific solution. Your answer does not answer the\
    \ question because you did not provide any language specific solution. Your answer\
    \ does not answer the question because you did not provide any language specific\
    \ solution. Your answer does not answer the question because you did not provide\
    \ any language specific solution. Your answer does not answer the question because\
    \ you did not provide any language specific solution. Your answer does not answer\
    \ the question because you did not provide any language specific solution. Your\
    \ answer does not answer the question because you did not provide any language\
    \ specific solution. Your answer does not answer the question because you did\
    \ not provide any language specific solution. Your answer does not answer the\
    \ question because you did not provide any language specific solution. Your answer\
    \ does not answer the question because you did not provide any language specific\
    \ solution. Your answer does not answer the question because you did not provide\
    \ any language specific solution. Your answer does not answer the question because\
    \ you did not provide any language specific solution. Your answer does not answer\
    \ the question because you did not provide any language specific solution. Your\
    \ answer does not answer the question because you did not provide any language\
    \ specific ", "{\n    long count = 0;\n    for(long i = 0; i <= n; i += 11)\n\
    \    {\n        if((i % 11) == 0)\n        {\n            count += 1;\n      \
    \  }\n    }\n    for(long i = 0; i <= n; i += 13)\n    {\n        if((i % 13)\
    \ == 0)\n        {\n            count += 1;\n        }\n    }\n    return count;\n\
    }\n</code>\n<|/ a tags=fizzbuzz,c++,algorithm |>\n<| c |>\nThe first for loop\
    \ can be replaced with `count += n % 11;`\n<|/ c |>\n<| c |>\nYes, I agree. Thanks\
    \ for pointing that out.\n<|/ c |>\n<| c |>\nThe second for loop can be replaced\
    \ with `count += n % 13;`\n<|/ c |>\n<| c |>\nYes, I agree. Thanks for pointing\
    \ that out.\n<|/ c |>\n<| c |>\nThe second for loop can be replaced with `count\
    \ += n % 13;`\n<|/ c |>\n<| a tags=fizzbuzz,c++,algorithm |>\n<code>\n#include\
    \ <iostream>\nusing namespace std;", "{\n    long count = 0;\n    for(long i =\
    \ 1;i <= n;i++)\n    {\n        if((i % 11) == 0 || i % 13 == 0)\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}\n</code>\n<|/ a\
    \ dscore=1 |>\n<| a dscore=1 |>\n<code>", "{\n\tlong count = 0;\n\tlong i;\n\t\
    for(i = 1; i <= n; i++)\n\t{\n\t\tif((i % 11) == 0)\n\t\t{\n\t\t\tif((i % 13)\
    \ == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}",
  "{\n    long count = 0;\n    long remainder;\n    \n    while (n) {\n        remainder\
    \ = n % 10;\n        if (remainder == 7 || remainder == 11 || remainder == 13)\
    \ {\n            count++;\n        }\n        n = n / 10;\n    }\n    return count;\n\
    }\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThe `count` variable is unnecessary. Just\
    \ use `return n % 10 == 7 || n % 10 == 11 || n % 10 == 13;`.\n<|/ c |>\n<| c |>\n\
    Yes, I know, but I wanted to keep it close to the original code as much as possible.\
    \ Also, `count` was a variable I forgot to remove.\n<|/ c |>\n<| a dscore=2 |>\n\
    <code>", "{\n    long count = 0;\n    long remainder;\n    \n    for(long i =\
    \ 1; i <= n; i++) {\n        remainder = i % 11;\n        if (remainder == 0 ||\
    \ remainder == 7) {\n            count++;\n        }\n    }\n    return count;\n\
    }", "{\n    long count = 0;\n    long d = n % 10;\n    long n1 = n / 10;\n   \
    \ long n2 = n1 / 10;\n    long n3 = n2 / 10;\n    long n4 = n3 / 10;\n    long\
    \ n5 = n4 / 10;\n    long n6 = n5 / 10;\n    long n7 = n6 / 10;\n    long n8 =\
    \ n7 / 10;\n    long n9 = n8 / 10;\n    long n10 = n9 / 10;\n    long n11 = n10\
    \ / 10;\n    long n12 = n11 / 10;\n    long n13 = n12 / 10;\n    long n14 = n13\
    \ / 10;\n    long n15 = n14 / 10;\n    long n16 = n15 / 10;\n    long n17 = n16\
    \ / 10;\n    long n18 = n17 / 10;\n    long n19 = n18 / 10;\n    long n20 = n19\
    \ / 10;\n    long n21 = n20 / 10;\n    long n22 = n21 / 10;\n    long n23 = n22\
    \ / 10;\n    long n24 = n23 / 10;\n    long n25 = n24 / 10;\n    long n26 = n25\
    \ / 10;\n    long n27 = n26 / 10;\n    long n28 = n27 / 10;\n    long n29 = n28\
    \ / 10;\n    long n30 = n29 / 10;\n    long n31 = n30 / 10;\n    long n32 = n31\
    \ / 10;\n    long n33 = n32 / 10;\n    long n34 = n33 / 10;\n    long n35 = n34\
    \ / 10;\n    long n36 = n35 / 10;\n    long n37 = n36 / 10;\n    long n38 = n37\
    \ / 10;\n    long n39 = n38 / 10;\n    long n40 = n39 / 10;\n    long n41 = n40\
    \ / 10;\n    long n42 = n41 / 10;\n    long n43 = n42 / 10;\n    long n44 = n43\
    \ / 10;\n    long n45 = n44 / 10;\n    long n46 = n45 / 10;\n    long n47 = n46\
    \ / 10;\n    long n48 = n47 / 10;\n    long n49 = n48 / 10;\n    long n50 = n49\
    \ / 10;\n    long n51 = n50 / 10;\n    long n52 = n51 / 10;\n    long n53 = n52\
    \ / 10;\n    long n54 = n53 / 10;\n    long n55 = n54 / ", "{\n\tlong count =\
    \ 0;\n\tlong i;\n\tfor(i = 1; i <= n; i++){\n\t\tif(i % 11 == 0 || i % 13 == 0){\n\
    \t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}", "{\n    long count = 0;\n   \
    \ long i;\n    for(i = 0; i < n; i++)\n    {\n        if((i % 11) == 0)\n    \
    \    {\n            if((i % 13) == 0)\n            {\n                count++;\n\
    \            }\n        }\n    }\n    return count;\n}\n</code>\n<|/ a |>\n<|\
    \ c |>\nI didn't downvote, but this doesn't answer the question. The OP wants\
    \ to know why his code doesn't work, not how to fix it.\n<|/ c |>\n<| c |>\nI\
    \ agree with you. I just wanted to point out that his code doesn't work because\
    \ he is trying to use modulus operator on long.\n<|/ c |>\n<| c |>\nI didn't downvote\
    \ either, but this doesn't answer the question. The OP wants to know why his code\
    \ doesn't work, not how to fix it.\n<|/ c |>\n<| c |>\nI agree with you. I just\
    \ wanted to point out that his code doesn't work because he is trying to use modulus\
    \ operator on long.\n<|/ c |>\n<| c |>\nI didn't downvote either, but this doesn't\
    \ answer the question. The OP wants to know why his code doesn't work, not how\
    \ to fix it.\n<|/ c |>\n<| a dscore=0 |>\nThe modulus operator % is defined for\
    \ integer types. Long doesn't have an integer type, so you can't use % on it.\n\
    <|/ a tags=c++,modulus |>\n<| c |>\nI didn't downvote, but this doesn't answer\
    \ the question. The OP wants to know why his code doesn't work, not how to fix\
    \ it.\n<|/ c |>\n<| c |>\nI didn't downvote, but this doesn't answer the question.\
    \ The OP wants to know why his code doesn't work, not how to fix it.\n<|/ c |>\n\
    <| c |>\nI didn't downvote, but this doesn't answer the question. The OP wants\
    \ to know why his code doesn't work, not how to fix it.\n<|/ c |>\n<| a tags=c++,modulus\
    \ |>\nThe modulus operator % is defined for integer types. Long doesn't have an\
    \ integer type, so you can't use % on it.\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n\
    The modulus operator % is defined for integer types. Long doesn't have an integer\
    \ type, so you can't use % on it.\n<|/ a tags=c++,modulus |>\n<| a tags=c++,modulus\
    \ |>\nThe modulus operator % is defined for integer types. Long doesn't have an\
    \ integer type, so ", "{\n    long count = 0;\n    long remainder;\n    \n   \
    \ for(long i = 1; i <= n; i++) {\n        remainder = i % 11;\n        if (remainder\
    \ == 0 || remainder == 7) {\n            count++;\n        }\n    }\n    return\
    \ count;\n}\n</code>\n<|/ a tags=fizzbuzz,c++,algorithm |>\n<| c |>\nThis does\
    \ not answer the question. OP wants to know why his code does not work. Your code\
    \ does not explain why his code does not work.\n<|/ c |>\n<| c |>\nI see your\
    \ point. I'll try to add some explanation later.\n<|/ c |>\n<| c |>\nI added some\
    \ explanation to the answer. Hope it helps.\n<|/ c |>\n<| c |>\nThe explanation\
    \ is good, but I still think your answer does not answer the question. OP wants\
    \ to know why his code does not work. Your code does not explain why his code\
    \ does not work. Your code does not explain why his code does not work. Your code\
    \ does not explain why his code does not work. Your code does not explain why\
    \ his code does not work. Your code does not explain why his code does not work.\
    \ Your code does not explain why his code does not work. Your code does not explain\
    \ why his code does not work. Your code does not explain why his code does not\
    \ work. Your code does not explain why his code does not work. Your code does\
    \ not explain why his code does not work. Your code does not explain why his code\
    \ does not work. Your code does not explain why his code does not work. Your code\
    \ does not explain why his code does not work. Your code does not explain why\
    \ his code does not work. Your code does not explain why his code does not work.\
    \ Your code does not explain why his code does not work. Your code does not explain\
    \ why his code does not work. Your code does not explain why his code does not\
    \ work. Your code does not explain why his code does not work. Your code does\
    \ not explain why his code does not work. Your code does not explain why his code\
    \ does not work. Your code does not explain why his code does not work. Your code\
    \ does not explain why his code does not work. Your code does not explain why\
    \ his code does not work. Your code does not explain why his code does not work.\
    \ Your code does not explain why his code does not work. Your code does not explain\
    \ why his code does not work. Your code does not explain why his code does not\
    \ work. Your code does not explain why his code does not work. Your code does\
    \ not explain why his code does not ", "{\n    long count = 0;\n    long i;\n\
    \    for(i = 1; i <= n; i++) \n    {\n        if((i % 11) == 0 || (i % 13) ==\
    \ 0) \n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\n</code>\n<|/ a tags=fizzbuzz,c++,algorithm |>\n<| c |>\nThe `for` loop should\
    \ be `for(i = 1; i <= n; i++)`\n<|/ c |>\n<| c |>\nThanks, I fixed it.\n<|/ c\
    \ |>\n<| a dscore=2 |>\n<code>\n#include <iostream>\nusing namespace std;", "{\n\
    \    long count = 0;\n    long temp;\n    \n    for(long i = 1; i <= n; i++)\n\
    \    {\n        temp = i / 11;\n        if(temp % 11 == 7)\n            count++;\n\
    \        temp = i / 13;\n        if(temp % 13 == 7)\n            count++;\n  \
    \  }\n    return count;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>",
  "{\n    long count = 0;\n    long remainder;\n    \n    while (n>0)\n    {\n   \
    \     remainder = n%11;\n        if (remainder == 7)\n        {\n            count++;\n\
    \        }\n        n = n/11;\n    }\n    return count;\n}\n</code>\n<|/ a tags=fizzbuzz,c++,algorithm\
    \ |>\n<| c |>\nThe `while` loop can be replaced with `return std::count(std::begin(digits),\
    \ std::end(digits), 7);`\n<|/ c |>\n<| c |>\n: That is true, but I wanted to keep\
    \ it simple.\n<|/ c |>\n<| c |>\n`std::count(std::begin(digits), std::end(digits),\
    \ 7)` would be more efficient than `std::count_if` since it can stop at the first\
    \ match.\n<|/ c |>\n<| c |>\n: I agree, but I wanted to keep it simple for OP.\n\
    <|/ c |>\n<| c |>\n: I agree, but I wanted to keep it simple for OP.\n<|/ c |>\n\
    <| a tags=fizzbuzz,c++,algorithm |>\n<code>\n#include <iostream>\n#include <vector>\n\
    #include <algorithm>", "{\n    long count = 0;\n    long remainder;\n    \n  \
    \  while(n > 0)\n    {\n        remainder = n % 11;\n        if(remainder == 0\
    \ || remainder == 7)\n            count++;\n        n /= 11;\n    }\n    \n  \
    \  return count;\n}", "{\n    long count = 0;\n    for(long i = 1; i <= n; i++)\n\
    \    {\n        if((i % 11) == 0 || (i % 13) == 0)\n            count++;\n   \
    \ }\n    return count;\n}\n</code>\n<|/ a tags=fizzbuzz,c++ |>\n<| a dscore=0\
    \ |>\n<code>\n#include <iostream>\nusing namespace std;", "{\n    long count =\
    \ 0;\n    long remainder;\n    \n    while (n>0) {\n        remainder = n%11;\n\
    \        if (remainder == 7 || remainder == 13) count++;\n        n = n/11;\n\
    \    }\n    return count;\n}\n</code>\n<|/ a tags=fizzbuzz,c++,algorithm |>\n\
    <| a dscore=0 |>\n<code>\n#include <iostream>\nusing namespace std;", "{\n   \
    \ long count = 0;\n    long remainder;\n    \n    while (n>0)\n    {\n       \
    \ remainder = n%11;\n        if (remainder == 7)\n        {\n            count++;\n\
    \        }\n        n = n/11;\n    }\n    return count;\n}\n</code>\n<|/ a |>\n\
    <| a |>\n<code>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>",
  "{\n    long count = 0;\n    long temp;\n    \n    for(long i = 1; i <= n; i++)\
    \ {\n        temp = i / 11;\n        if(temp % 11 == 7)\n            count++;\n\
    \        temp = i / 13;\n        if(temp % 13 == 7)\n            count++;\n  \
    \  }\n    return count;\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThis code is\
    \ not working as expected. Try with input `fizz_buzz(78)` which should return\
    \ `2` but it is returning `0`.\n<|/ c |>\n<| c |>\nI tested it and it works. I\
    \ even tested it with the input `fizz_buzz(78)` which should return `2` but it\
    \ is returning `0`.\n<|/ c |>\n<| c |>\nI tested it and it works. I even tested\
    \ it with the input `fizz_buzz(78)` which should return `2` but it is returning\
    \ `0`.\n<|/ c |>\n<| c |>\nI tested it and it works. I even tested it with the\
    \ input `fizz_buzz(78)` which should return `2` but it is returning `0`.\n<|/\
    \ c |>\n<| c |>\nI tested it and it works. I even tested it with the input `fizz_buzz(78)`\
    \ which should return `2` but it is returning `0`.\n<|/ c |>\n<| a tags=fizzbuzz,c++\
    \ |>\n<code>\n#include <iostream>\nusing namespace std;", "{\n    long count =\
    \ 0;\n    long remainder;\n    \n    while (n) {\n        remainder = n % 11;\n\
    \        if (remainder == 0 || remainder == 7) {\n            count++;\n     \
    \   }\n        n /= 11;\n    }\n    return count;\n}", "{\n    long count = 0;\n\
    \    long i;\n    for(i = 1; i <= n; ++i)\n    {\n        if((i % 11) == 0)\n\
    \        {\n            if((i % 13) == 0)\n            {\n                ++count;\n\
    \            }\n        }\n    }\n    return count;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| a tags=fizzbuzz,c++,algorithm |>\n<code>\n#include <iostream>\nusing\
    \ namespace std;", "{\n    long count = 0;\n    long i;\n    for(i = 1; i <= n;\
    \ ++i)\n    {\n        if((i % 11) == 0 || i % 13 == 0)\n            ++count;\n\
    \    }\n    return count;\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\nI like your\
    \ solution. Very elegant. Thanks.\n<|/ c |>\n<| c |>\nI like your solution. Very\
    \ elegant. Thanks.\n<|/ c |>\n<| a tags=fizzbuzz,c++,algorithm |>\n<code>\n#include\
    \ <iostream>\nusing namespace std;", "{\n    long count = 0;\n    long remainder;\n\
    \    \n    while (n>0)\n    {\n        remainder = n%11;\n        if (remainder\
    \ == 0 || remainder == 7)\n        {\n            count++;\n        }\n      \
    \  n = n/11;\n    }\n    return count;\n}", "{\n    long count = 0;\n    long\
    \ i;\n    for(i=n; i>0; i--)\n    {\n        if((i%11) == 0 || (i%13) == 0)\n\
    \            count++;\n    }\n    return count;\n}\n</code>\n<|/ a |>\n<| c |>\n\
    This is not the most efficient solution. Using `%` operator is very inefficient\
    \ and should be avoided.\n<|/ c |>\n<| c |>\n: I agree, however I wanted to show\
    \ a solution that is easy to understand, easy to modify, and easy to understand.\
    \ Also, `%` operator is very inefficient in most languages, including C and C++.\n\
    <|/ c |>\n<| c |>\n: I agree, however I wanted to show a solution that is easy\
    \ to understand, easy to modify, and easy to understand. Also, % operator is very\
    \ inefficient in most languages, including C and C++.\n<|/ c |>\n<| c |>\n: I\
    \ agree, however I wanted to show a solution that is easy to understand, easy\
    \ to modify, and easy to understand. Also, % operator is very inefficient in most\
    \ languages, including C and C++.\n<|/ c |>\n<| c |>\n: I agree, however I wanted\
    \ to show a solution that is easy to understand, easy to modify, and easy to understand.\
    \ Also, % operator is very inefficient in most languages, including C and C++.\n\
    <|/ c |>\n<| a dscore=2 |>\n<code>", "{\n    long count = 0;\n    long temp;\n\
    \    \n    temp = n % 11;\n    if (temp == 0 || temp == 7)\n        count++;\n\
    \    \n    temp = n % 13;\n    if (temp == 0 || temp == 7)\n        count++;\n\
    \    \n    return count;\n}\n</code>\n<|/ a tags=fizzbuzz,c++,algorithm |>\n<|\
    \ c |>\nThis code doesn't work. Try it with `fizz_buzz(50)`.\n<|/ c |>\n<| c |>\n\
    It does work. Try it with `fizz_buzz(50)`.\n<|/ c |>\n<| c |>\nIt doesn't work.\
    \ Try it with `fizz_buzz(50)`.\n<|/ c |>\n<| c |>\nIt does work. Try it with `fizz_buzz(50)`.\n\
    <|/ c |>\n<| c |>\nIt does work. Try it with `fizz_buzz(50)`.\n<|/ c |>\n<| a\
    \ tags=fizzbuzz,c++,algorithm |>\n<code>\n#include <iostream>\nusing namespace\
    \ std;", "{\n    long count = 0;\n    long remainder = n;\n    long remainder2\
    \ = remainder;\n    long remainder3 = remainder2;\n    long remainder4 = remainder3;\n\
    \    long remainder5 = remainder4;\n    long remainder6 = remainder5;\n    long\
    \ remainder7 = remainder6;\n    long remainder8 = remainder7;\n    long remainder9\
    \ = remainder8;\n    long remainder10 = remainder9;\n    long remainder11 = remainder10;\n\
    \    long remainder12 = remainder11;\n    long remainder13 = remainder12;\n  \
    \  long remainder14 = remainder13;\n    long remainder15 = remainder14;\n    long\
    \ remainder16 = remainder15;\n    long remainder17 = remainder16;\n    long remainder18\
    \ = remainder17;\n    long remainder19 = remainder18;\n    long remainder20 =\
    \ remainder19;\n    long remainder21 = remainder20;\n    long remainder22 = remainder21;\n\
    \    long remainder23 = remainder22;\n    long remainder24 = remainder23;\n  \
    \  long remainder25 = remainder24;\n    long remainder26 = remainder25;\n    long\
    \ remainder27 = remainder26;\n    long remainder28 = remainder27;\n    long remainder29\
    \ = remainder28;\n    long remainder30 = remainder29;\n    long remainder31 =\
    \ remainder30;\n    long remainder32 = remainder31;\n    long remainder33 = remainder32;\n\
    \    long remainder34 = remainder33;\n    long remainder35 = remainder34;\n  \
    \  long remainder36 = remainder35;\n    long remainder37 = remainder36;\n    long\
    \ remainder38 = remainder37;\n    long remainder39 = remainder38;\n    long remainder40\
    \ = remainder39;\n    long remainder41 = remainder40;\n    long remainder42 =\
    \ remainder41;\n    long remainder43 = remainder42;\n    long remainder44 = remainder43;\n\
    \    long remainder45 = remainder44;\n    long remainder46 = remainder45;\n  \
    \  long remainder47 = remainder46;\n    long remainder48 = remainder47;\n    long\
    \ remainder49 = remainder48;\n    long ", "{\n    long count = 0;\n    long remainder;\n\
    \    long digit;\n    \n    for(digit = 1; digit <= 9; digit++)\n    {\n     \
    \   remainder = n % digit;\n        if(remainder == 0 || remainder == 7)\n   \
    \     {\n            count++;\n        }\n        n = n / digit;\n    }\n    return\
    \ count;\n}\n</code>\n<|/ a tags=fizzbuzz,c++ |>\n<| a dscore=0 |>\n<code>\n#include\
    \ <iostream>\nusing namespace std;", "{\n    long count = 0;\n    long remainder;\n\
    \    \n    for(long i = 0; i <= n; i++) {\n        remainder = i % 11;\n     \
    \   if (remainder == 0 || remainder == 7) {\n            count++;\n        }\n\
    \    }\n    return count;\n}\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2 |>\n<code>",
  "{\n    long count = 0;\n    long div = 11L;\n    long remainder;\n    \n    while\
    \ (n) {\n        remainder = n % div;\n        if (remainder == 0 || remainder\
    \ == 7) {\n            count++;\n        }\n        div = div * 10L;\n       \
    \ n = n / div;\n    }\n    return count;\n}", "{\n    long count = 0;\n    for(long\
    \ i = 1; i < n; ++i)\n    {\n        if((i % 11) == 0 || i % 13 == 0)\n      \
    \      ++count;\n    }\n    return count;\n}\n</code>\n<|/ a tags=fizzbuzz,c++,algorithm\
    \ |>\n<| c |>\nThis is not the most efficient solution, since it requires iterating\
    \ over all numbers. A better solution would be to iterate over all numbers, counting\
    \ the number of `i` where `i % 11 == 0 || i % 13 == 0`.\n<|/ c |>\n<| c |>\n:\
    \ I agree, my solution was meant to be a simple example to illustrate the concept.\
    \ Your solution is much more efficient.\n<|/ c |>\n<| a tags=fizzbuzz,c++,algorithm\
    \ |>\n<code>\n#include <iostream>\nusing namespace std;", "{\n    long count =\
    \ 0;\n    long remainder;\n    long div;\n    \n    for(long i = 1; i <= n; i++)\n\
    \    {\n        remainder = i % 11;\n        div = i % 13;\n        \n       \
    \ if(remainder == 7 && div == 0)\n        {\n            count++;\n        }\n\
    \    }\n    \n    return count;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis\
    \ code doesn't work. `fizz_buzz(78)` returns `0` instead of `2`.\n<|/ c |>\n<|\
    \ c |>\nThanks for pointing that out. I fixed the code so it works.\n<|/ c |>\n\
    <| a tags=fizzbuzz,c++ |>\n<code>\n#include <iostream>\nusing namespace std;",
  "{\n\tlong count = 0;\n\tlong remainder;\n\t\n\twhile (n>0) {\n\t\tremainder = n\
    \ % 11;\n\t\tif (remainder == 7)\n\t\t\tcount++;\n\t\tn = n / 11;\n\t}\n\treturn\
    \ count;\n}", "{\n    long count = 0;\n    long i;\n    for(i = 1; i <= n; i++)\
    \ {\n        if(i % 11 == 0 || i % 13 == 0) {\n            count++;\n        }\n\
    \    }\n    return count;\n}", "{\n    long count = 0;\n    long temp;\n    \n\
    \    temp = n;\n    \n    while (temp != 0)\n    {\n        if (temp % 11 == 0\
    \ || temp % 13 == 0)\n        {\n            count++;\n        }\n        temp\
    \ = temp / 10;\n    }\n    \n    return count;\n}", "{\n    long count = 0;\n\
    \    long i;\n    for(i = 1; i <= n; i++){\n        if((i % 11) == 0 || i % 13\
    \ == 0){\n            count++;\n        }\n    }\n    return count;\n}", "{\n\t\
    long count = 0;\n\tlong x = n;\n\twhile (x>0) {\n\t\tif (x%11==0 || x%13==0) {\n\
    \t\t\tcount++;\n\t\t}\n\t\tx = x/10;\n\t}\n\treturn count;\n}\n/*\nReturn the\
    \ number of times the digit 7 appears in integers less than n which are divisible\
    \ by 11 or 13 and are divisible by 3.\n    >>> fizz_buzz_three(50)\n    0\n  \
    \  >>> fizz_buzz_three(78)\n    1\n    >>> fizz_buzz_three(79)\n    1\n    \n\
    */\nlong fizz_buzz_three(long n) \n{\n\tlong count = 0;\n\tlong x = n;\n\twhile\
    \ (x>0) {\n\t\tif (x%11==0 || x%13==0) {\n\t\t\tif (x%3==0) {\n\t\t\t\tcount++;\n\
    \t\t\t}\n\t\t}\n\t\tx = x/10;\n\t}\n\treturn count;\n}\n/*\nReturn the number\
    \ of times the digit 7 appears in integers less than n which are divisible by\
    \ 11 or 13 and are divisible by 3 and are divisible by 5.\n    >>> fizz_buzz_five(50)\n\
    \    0\n    >>> fizz_buzz_five(78)\n    1\n    >>> fizz_buzz_five(79)\n    1\n\
    \    \n*/\nlong fizz_buzz_five(long n) \n{\n\tlong count = 0;\n\tlong x = n;\n\
    \twhile (x>0) {\n\t\tif (x%11==0 || x%13==0) {\n\t\t\tif (x%3==0 && x%5==0) {\n\
    \t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tx = x/10;\n\t}\n\treturn count;\n}\n/*\n\
    Return the number of times the digit 7 appears in integers less than n which are\
    \ divisible by 11 or 13 and are divisible by 3 and are divisible by 5.\n    >>>\
    \ fizz_buzz_five_three(50)\n    0\n    >>> fizz_buzz_five_three(78)\n    1\n \
    \   >>> fizz_buzz_five_three(79)\n    1\n    \n*/\nlong fizz_buzz_five_three(long\
    \ n) \n{\n\tlong count = 0;\n\tlong x = n;\n\twhile (x>0) {\n\t\tif (x%11==0 ||\
    \ x%13==0) {\n\t\t\tif (x%3==0 && x%5==0) {\n\t\t\t\tif (x%7==0) {\n\t\t\t\t\t\
    count++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tx = x/10;\n\t}\n\treturn count;\n}\n\
    /*", "{\n    long count = 0;\n    long remainder;\n    long digit;\n    \n   \
    \ for(digit = 1; digit <= 9; digit++)\n    {\n        remainder = n % 10;\n  \
    \      if(remainder == 7)\n        {\n            count++;\n        }\n      \
    \  n = n / 10;\n    }\n    \n    return count;\n}\n</code>\n<|/ a tags=fizzbuzz,c++,algorithm\
    \ |>\n<| a |>\n<code>\n#include <iostream>\nusing namespace std;", "{\n    long\
    \ count = 0;\n    for(long i = n; i > 0; i /= 11)\n        for(long j = i; j >\
    \ 0; j /= 13)\n            count += j % 11 == 7;\n    return count;\n}\n</code>\n\
    <|/ a dscore=2 |>\n<| c |>\nThis doesn't work for me. `fizz_buzz(78)` returns\
    \ `0` instead of `2`.\n<|/ c |>\n<| c |>\nI tested it on ideone, and it works.\
    \ I suspect that your compiler doesn't support long division.\n<|/ c |>\n<| c\
    \ |>\nI tested it on ideone and it works. I suspect that your compiler doesn't\
    \ support long division.\n<|/ c |>\n<| c |>\nI tested it on ideone and it works.\
    \ I suspect that your compiler doesn't support long division.\n<|/ c |>\n<| c\
    \ |>\nI tested it on ideone and it works. I suspect that your compiler doesn't\
    \ support long division.\n<|/ c |>\n<| a dscore=1 |>\n<code>", "{\n    long count\
    \ = 0;\n    long remainder;\n    \n    for(long i = 0; i <= n; i += 11)\n    {\n\
    \        remainder = i % 11;\n        if(remainder == 7)\n        {\n        \
    \    count++;\n        }\n    }\n    \n    for(long i = 0; i <= n; i += 13)\n\
    \    {\n        remainder = i % 13;\n        if(remainder == 7)\n        {\n \
    \           count++;\n        }\n    }\n    \n    return count;\n}\n</code>\n\
    <|/ a tags=fizzbuzz,c++ |>\n<| c |>\nThanks for your answer. I am not allowed\
    \ to use any libraries other than std.\n<|/ c |>\n<| c |>\nI added a solution\
    \ that doesn't use any libraries.\n<|/ c |>\n<| c |>\nThanks for your answer.\
    \ I am not allowed to use any libraries other than std.\n<|/ c |>\n<| c |>\nI\
    \ added a solution that doesn't use any libraries.\n<|/ c |>\n<| c |>\nThanks\
    \ for your answer. I am not allowed to use any libraries other than std.\n<|/\
    \ c |>\n<| a tags=fizzbuzz,c++ |>\n<code>\n#include <iostream>\nusing namespace\
    \ std;", "{\n    long count = 0;\n    long remainder;\n    \n    while (n>0) {\n\
    \        remainder = n%11;\n        if (remainder == 7 || remainder == 13) count++;\n\
    \        n = n/11;\n    }\n    return count;\n}", "{\n    long count = 0;\n  \
    \  long remainder;\n    \n    while(n > 0)\n    {\n        remainder = n % 11;\n\
    \        if(remainder == 0 || remainder == 7)\n            count++;\n        n\
    \ /= 11;\n    }\n    return count;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis\
    \ doesn't work. Try it with `fizz_buzz(78)` - it returns `2` when it should be\
    \ `3`.\n<|/ c |>\n<| c |>\nIt does work. Try it with `fizz_buzz(79)` - it returns\
    \ `3` when it should be `4`.\n<|/ c |>\n<| c |>\nIt doesn't work for `fizz_buzz(78)`\
    \ - it returns `2` when it should be `3`.\n<|/ c |>\n<| c |>\nIt does work. Try\
    \ it with `fizz_buzz(79)` - it returns `3` when it should be `4`.\n<|/ c |>\n\
    <| c |>\nIt doesn't work for `fizz_buzz(78)` - it returns `2` when it should be\
    \ `3`.\n<|/ c |>\n<| a tags=fizzbuzz,c++ |>\n<code>\n#include <iostream>\nusing\
    \ namespace std;", "{\n    long count = 0;\n    long i;\n    for(i = 1; i <= n;\
    \ ++i)\n    {\n        if((i % 11) == 0 || (i % 13) == 0)\n            ++count;\n\
    \    }\n    return count;\n}", "{\n    long count = 0;\n    long temp;\n    \n\
    \    for(long i = n; i > 0; i /= 10)\n    {\n        temp = i % 10;\n        if(temp\
    \ == 7)\n            count++;\n    }\n    return count;\n}\n</code>\n<|/ a tags=fizzbuzz,c++,algorithm\
    \ |>\n<| c |>\nThis is not the most efficient solution. `fizz_buzz(50)` returns\
    \ `0` but `fizz_buzz(78)` returns `2`.\n<|/ c |>\n<| c |>\n: Yes, I missed that.\
    \ Thanks for pointing that out. I've updated the answer.\n<|/ c |>\n<| a |>\n\
    <code>\n#include <iostream>\nusing namespace std;", "{\n    long count = 0;\n\
    \    long remainder;\n    long i;\n    \n    for (i = 1; i <= n; i++) {\n    \
    \    remainder = i % 11;\n        if (remainder == 0 || remainder == 7) {\n  \
    \          count++;\n        }\n    }\n    return count;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nThanks for your answer. Your code works fine for small numbers\
    \ but for large numbers it gives wrong result. For example: fizz_buzz(78) gives\
    \ 2 instead of 3. Can you please help me to fix this?\n<|/ c |>\n<| c |>\nI fixed\
    \ the bug in my code. Try it now.\n<|/ c |>\n<| c |>\nThanks for your answer.\
    \ Your code works fine for small numbers but for large numbers it gives wrong\
    \ result. For example: fizz_buzz(78) gives 2 instead of 3. Can you please help\
    \ me to fix this?\n<|/ c |>\n<| c |>\nI fixed the bug in my code. Try it now.\n\
    <|/ c |>\n<| a dscore=0 |>\n<code>\npublic int fizz_buzz(int n) {\n    int count\
    \ = 0;\n    for(int i = 1; i <= n; i++) {\n        if((i % 11) == 0) {\n     \
    \       if((i % 13) == 0) {\n                count++;\n            }\n       \
    \ }\n    }\n    return count;\n}\n</code>\n<|/ a tags=fizzbuzz,java |>\n<| c |>\n\
    Thanks for your answer. Your code works fine for small numbers but for large numbers\
    \ it gives wrong result. For example: fizz_buzz(78) gives 2 instead of 3. Can\
    \ you please help me to fix this?\n<|/ c |>\n<| c |>\nI fixed the bug in my code.\
    \ Try it now.\n<|/ c |>\n<| a tags=fizzbuzz,java |>\n<code>\npublic class FizzBuzz\
    \ {\n    public static void main(String[] args) {\n        System.out.println(fizz_buzz(78));\n\
    \    }", "{\n    long count = 0;\n    long remainder;\n    \n    while(n > 0)\n\
    \    {\n        remainder = n % 11;\n        if (remainder == 7)\n        {\n\
    \            count++;\n        }\n        n = n / 11;\n    }\n    return count;\n\
    }\n</code>\n<|/ a tags=fizzbuzz,c++ |>\n<| c |>\nI like your solution, however\
    \ it would be better to use a `while` loop instead of an `if` statement. `while`\
    \ loops are easier to read and more efficient than `if` statements.\n<|/ c |>\n\
    <| c |>\nI agree with you, however I didn't want to change OP's code too much.\
    \ I'll add your suggestion.\n<|/ c |>\n<| c |>\nI agree with you, however I didn't\
    \ want to change OP's code too much. I'll add your suggestion.\n<|/ c |>\n<| c\
    \ |>\nI agree with you, however I didn't want to change OP's code too much. I'll\
    \ add your suggestion.\n<|/ c |>\n<| c |>\nI agree with you, however I didn't\
    \ want to change OP's code too much. I'll add your suggestion.\n<|/ c |>\n<| a\
    \ dscore=0 |>\n<code>\n#include <iostream>\nusing namespace std;", "{\n    long\
    \ count = 0;\n    long div = 11L;\n    long mod = 13L;\n    long temp = n;\n \
    \   \n    while(temp > 0)\n    {\n        long digit = temp % div;\n        if(digit\
    \ == 7L) count++;\n        div = div * 10L;\n        mod = mod * 10L;\n      \
    \  temp /= div;\n    }\n    \n    return count;\n}\n</code>\n<|/ a tags=fizzbuzz,c++,algorithm\
    \ |>\n<| c |>\nThis is not the most efficient solution. `long long` has 64 bits\
    \ and `long` has 32 bits. So the multiplication will take more time than `%` operation.\
    \ Also, `long long` has more bits to represent than `long`, so `long long` multiplication\
    \ will be faster than `long` multiplication. Also, the `%` operation is slower\
    \ than `/` operation. `long long` multiplication will be faster than `long` multiplication.\
    \ Also, `long long` multiplication will be faster than `/` operation. `long long`\
    \ multiplication will be faster than `/` operation. `long long` multiplication\
    \ will be faster than `/` operation. `long long` multiplication will be faster\
    \ than `/` operation. `long long` multiplication will be faster than `/` operation.\
    \ `long long` multiplication will be faster than `/` operation. `long long` multiplication\
    \ will be faster than `/` operation. `long long` multiplication will be faster\
    \ than `/` operation. `long long` multiplication will be faster than `/` operation.\
    \ `long long` multiplication will be faster than `/` operation. `long long` multiplication\
    \ will be faster than `/` operation. `long long` multiplication will be faster\
    \ than `/` operation. `long long` multiplication will be faster than `/` operation.\
    \ `long long` multiplication will be faster than `/` operation. `long long` multiplication\
    \ will be faster than `/` operation. `long long` multiplication will be faster\
    \ than `/` operation. `long long` multiplication will be faster than `/` operation.\
    \ `long long` multiplication will be faster than `/` operation. `long long` multiplication\
    \ will be faster than `/` operation. `long long` multiplication will be faster\
    \ than `/` operation. `long long` multiplication will be faster than `/` operation.\
    \ `long long` multiplication will be faster than `/` operation. `long long` multiplication\
    \ will be faster than `/` operation. `long long` multiplication will be faster\
    \ than `/` operation. ", "{\n    long count = 0;\n    long remainder;\n    long\
    \ i;\n    \n    for (i = 1; i <= n; i++) {\n        remainder = i % 11;\n    \
    \    if (remainder == 7 || remainder == 13) {\n            count++;\n        }\n\
    \    }\n    return count;\n}\n</code>\n<|/ a tags=fizzbuzz,c++,algorithm |>\n\
    <| c |>\nThis code doesn't work. `fizz_buzz(78)` returns `3` instead of `2`.\n\
    <|/ c |>\n<| c |>\n: I fixed the bug. Thanks for pointing it out.\n<|/ c |>\n\
    <| c |>\nThis code doesn't work. `fizz_buzz(78)` returns `3` instead of `2`.\n\
    <|/ c |>\n<| c |>\n: I fixed the bug. Thanks for pointing it out.\n<|/ c |>\n\
    <| a |>\n<code>\n#include <iostream>\nusing namespace std;", "{\n    long count\
    \ = 0;\n    for(long i = 0; i <= n; ++i)\n    {\n        if((i % 11) == 0 || i\
    \ % 13 == 0)\n        {\n            ++count;\n        }\n    }\n    return count;\n\
    }", "{\n    long count = 0;\n    long i;\n    for(i = 1; i <= n; i++)\n    {\n\
    \        if((i % 11) == 0 || (i % 13) == 0)\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1\
    \ |>\n<code>", "{\n    long count = 0;\n    long div = 11L;\n    long mod = 13L;\n\
    \    long tmp;\n    \n    while (tmp = n % div) {\n        if (tmp == mod) {\n\
    \            count++;\n        }\n        div *= 10L;\n        mod *= 10L;\n \
    \   }\n    return count;\n}\n</code>\n<|/ a tags=fizzbuzz,c++,algorithm |>\n<|\
    \ a |>\n<code>\n#include <iostream>\nusing namespace std;", "{\n    long count\
    \ = 0;\n    long i;\n    for(i = 1; i <= n; i++)\n    {\n        if((i % 11) ==\
    \ 0 || i % 13 == 0)\n        {\n            count++;\n        }\n    }\n    return\
    \ count;\n}\n</code>\n<|/ a tags=fizzbuzz,c++ |>\n<| c |>\nThe OP asked for a\
    \ solution in C++.\n<|/ c |>\n<| c |>\nThe OP asked for a solution in C++.\n<|/\
    \ c |>\n<| c |>\nThe OP asked for a solution in C++.\n<|/ c |>\n<| c |>\nThe OP\
    \ asked for a solution in C++.\n<|/ c |>\n<| c |>\nThe OP asked for a solution\
    \ in C++.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\nusing namespace\
    \ std;", "{\n    long count = 0;\n    long remainder;\n    long i;\n    \n   \
    \ for(i = 1; i <= n; i++)\n    {\n        remainder = i % 11;\n        if(remainder\
    \ == 0 || remainder == 7)\n        {\n            count++;\n        }\n    }\n\
    \    return count;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>",
  "{\n    long count = 0;\n    long div = 11L;\n    long mod = 13L;\n    long div2\
    \ = div;\n    long mod2 = mod;\n    long div3 = div2;\n    long mod3 = mod2;\n\
    \    long div4 = div3;\n    long mod4 = mod3;\n    long div5 = div4;\n    long\
    \ mod5 = mod4;\n    long div6 = div5;\n    long mod6 = mod5;\n    long div7 =\
    \ div6;\n    long mod7 = mod6;\n    long div8 = div7;\n    long mod8 = mod7;\n\
    \    long div9 = div8;\n    long mod9 = mod8;\n    long div10 = div9;\n    long\
    \ mod10 = mod9;\n    long div11 = div10;\n    long mod11 = mod10;\n    long div12\
    \ = div11;\n    long mod12 = mod11;\n    long div13 = div12;\n    long mod13 =\
    \ mod12;\n    long div14 = div13;\n    long mod14 = mod13;\n    long div15 = div14;\n\
    \    long mod15 = mod14;\n    long div16 = div15;\n    long mod16 = mod15;\n \
    \   long div17 = div16;\n    long mod17 = mod16;\n    long div18 = div17;\n  \
    \  long mod18 = mod17;\n    long div19 = div18;\n    long mod19 = mod18;\n   \
    \ long div20 = div19;\n    long mod20 = mod19;\n    long div21 = div20;\n    long\
    \ mod21 = mod20;\n    long div22 = div21;\n    long mod22 = mod21;\n    long div23\
    \ = div22;\n    long mod23 = mod22;\n    long div24 = div23;\n    long mod24 =\
    \ mod23;\n    long div25 = div24;\n    long mod25 = mod24;\n    long div26 = div25;\n\
    \    long mod26 = mod25;\n    long div27 = div26;\n    long mod27 = mod26;\n \
    \   long div28 = div27;\n    long mod28 = mod27;\n    long div29 = div28;\n  \
    \  long mod29 = mod28;\n    long div30 = div29;\n    long mod30 = mod29;\n   \
    \ long div31 = div30;\n    long mod31 = mod30;\n    long div32 = div3", "{\n\t\
    long count = 0;\n\tlong div = 11L;\n\tlong mod = 13L;\n\t\n\twhile (n > 0)\n\t\
    {\n\t\tlong remainder = n % div;\n\t\tif (remainder == mod)\n\t\t{\n\t\t\tcount++;\n\
    \t\t}\n\t\tdiv = div * 10L;\n\t\tmod = mod * 10L;\n\t\tn = n / div;\n\t}\n\treturn\
    \ count;\n}", "{\n    long count = 0;\n    long remainder;\n    long temp;\n \
    \   \n    for(long i = 1; i <= n; i++){\n        remainder = i % 11;\n       \
    \ if(remainder == 7){\n            count++;\n        }\n        temp = i % 13;\n\
    \        if(temp == 7){\n            count++;\n        }\n    }\n    return count;\n\
    }\n</code>\n<|/ a tags=fizzbuzz,c++,algorithm |>\n<| c |>\nI like your solution,\
    \ however I believe that `long remainder` should be `int remainder` since `int`\
    \ is guaranteed to be able to hold `7`.\n<|/ c |>\n<| c |>\nI agree with you,\
    \ however I believe that `long remainder` should be `int remainder` since `int`\
    \ is guaranteed to be able to hold `7`.\n<|/ c |>\n<| c |>\n`int` is guaranteed\
    \ to be able to hold `7` but `long` is not. `long` can hold `7` but `int` cannot.\n\
    <|/ c |>\n<| c |>\nI didn't say that `int` is guaranteed to be able to hold `7`,\
    \ I said that `int` is guaranteed to be able to hold `7` but `long` is not. `long`\
    \ can hold `7` but `int` cannot.\n<|/ c |>\n<| c |>\nI see. Thanks for clarifying.\n\
    <|/ c |>\n<| a tags=fizzbuzz,c++,algorithm |>\n<code>\n#include <iostream>\nusing\
    \ namespace std;", "{\n    long count = 0;\n    long remainder;\n    \n    for(long\
    \ i = 1; i <= n; i++) {\n        remainder = i % 11;\n        if(remainder ==\
    \ 7 || remainder == 13) count++;\n    }\n    return count;\n}", "{\n    long count\
    \ = 0;\n    long remainder;\n    long temp;\n    \n    while(n > 0)\n    {\n \
    \       remainder = n % 11;\n        temp = remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remainder + remainder + remainder + remainder + remainder\
    \ + remainder + remainder + remain", "{\n\tlong count = 0;\n\tlong div = 11L;\n\
    \tlong mod;\n\t\n\twhile (n != 0)\n\t{\n\t\tmod = n % div;\n\t\tif (mod == 7L)\
    \ count++;\n\t\tdiv = div * 10L;\n\t\tn = n / div;\n\t}\n\treturn count;\n}",
  "{\n    long count = 0;\n    long i;\n    for(i = 0; i < n; ++i)\n    {\n      \
    \  if((i % 11) == 0 || i % 13 == 0)\n        {\n            ++count;\n       \
    \ }\n    }\n    return count;\n}\n</code>\n<|/ a tags=fizzbuzz,c++ |>\n<| c |>\n\
    This doesn't work. Try it on `n = 50`. It returns `0`.\n<|/ c |>\n<| c |>\n: It\
    \ works on my machine. Try it yourself here: http://ideone.com/3ZQK0\n<|/ c |>\n\
    <| c |>\n: It works on my machine. Try it yourself here: http://ideone.com/3ZQK0\n\
    <|/ c |>\n<| c |>\n: It works on my machine. Try it yourself here: http://ideone.com/3ZQK0\n\
    <|/ c |>\n<| c |>\n: It works on my machine. Try it yourself here: http://ideone.com/3ZQK0\n\
    <|/ c |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\nusing namespace std;",
  "{\n    long count = 0;\n    long remainder;\n    \n    for(long i = 1; i <= n;\
    \ i++)\n    {\n        remainder = i % 11;\n        if(remainder == 0 || remainder\
    \ == 7)\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }", "{\n    long count = 0;\n    long remainder;\n    \n    while (n>0) {\n  \
    \      remainder = n%11;\n        if (remainder == 7 || remainder == 13) count++;\n\
    \        n = n/11;\n    }\n    return count;\n}", "{\n    long count = 0;\n  \
    \  for(long i = 0; i <= n; i++)\n    {\n        if((i % 11) == 0)\n        {\n\
    \            if((i % 13) == 0)\n            {\n                count++;\n    \
    \        }\n        }\n    }\n    return count;\n}\n</code>\n<|/ a dscore=0 |>\n\
    <| c |>\nThis code does not work. `fizz_buzz(78)` returns `2` instead of `3`.\n\
    <|/ c |>\n<| c |>\nI fixed the bug, thanks for pointing it out. :)\n<|/ c |>\n\
    <| a dscore=0 |>\n<code>", "{\n    long count = 0;\n    long x = n;\n    long\
    \ y = n;\n    long z = n;\n    long a = n;\n    long b = n;\n    long c = n;\n\
    \    long d = n;\n    long e = n;\n    long f = n;\n    long g = n;\n    long\
    \ h = n;\n    long i = n;\n    long j = n;\n    long k = n;\n    long l = n;\n\
    \    long m = n;\n    long n = n;\n    long o = n;\n    long p = n;\n    long\
    \ q = n;\n    long r = n;\n    long s = n;\n    long t = n;\n    long u = n;\n\
    \    long v = n;\n    long w = n;\n    long x = n;\n    long y = n;\n    long\
    \ z = n;\n    long a = n;\n    long b = n;\n    long c = n;\n    long d = n;\n\
    \    long e = n;\n    long f = n;\n    long g = n;\n    long h = n;\n    long\
    \ i = n;\n    long j = n;\n    long k = n;\n    long l = n;\n    long m = n;\n\
    \    long n = n;\n    long o = n;\n    long p = n;\n    long q = n;\n    long\
    \ r = n;\n    long s = n;\n    long t = n;\n    long u = n;\n    long v = n;\n\
    \    long w = n;\n    long x = n;\n    long y = n;\n    long z = n;\n    long\
    \ a = n;\n    long b = n;\n    long c = n;\n    long d = n;\n    long e = n;\n\
    \    long f = n;\n    long g = n;\n    long h = n;\n    long i = n;\n    long\
    \ j = n;\n    long k = n;\n    long l = n;\n    long m = n;\n    long n = n;\n\
    \    long o = n;\n    long p = n;\n    long q = n;\n    long r = n;\n    long\
    \ s = n;\n    long t = n;\n    long u = n;\n    long v = n;\n    long w = n;\n\
    \    long x = n;\n    long y = n;\n    long z = n;\n    long a = n;\n    long\
    \ b = n;\n    long c = n;\n    long d = n;\n    long e = n;\n    long f = n;\n\
    \    long g = n;\n    long h = n;\n    long i = n;\n    long j = n;\n    long\
    \ k = n;\n    long l = n;\n    long m = n;\n    long n = n;\n    long o = n;\n\
    \    long p = n;\n    long q = n;\n    long r = n;\n    long s = n;\n    long\
    \ t = n;\n    ", "{\n    long count = 0;\n    long remainder;\n    long temp;\n\
    \    \n    temp = n;\n    \n    while (temp > 0) {\n        remainder = temp %\
    \ 11;\n        if (remainder == 7) {\n            count++;\n        }\n      \
    \  temp /= 11;\n    }\n    \n    return count;\n}\n</code>\n<|/ a dscore=1 |>\n\
    <| c |>\nThanks for your answer. I am not allowed to use any built-in functions.\
    \ I only have to use loops and if statements.\n<|/ c |>\n<| c |>\nI edited my\
    \ answer to include a solution that uses only loops and if statements.\n<|/ c\
    \ |>\n<| c |>\nThanks for your answer. I am not allowed to use any built-in functions.\
    \ I only have to use loops and if statements.\n<|/ c |>\n<| c |>\nI edited my\
    \ answer to include a solution that uses only loops and if statements.\n<|/ c\
    \ |>\n<| a |>\n<code>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\
    #include <math.h>", "{\n\tlong count = 0;\n\twhile (n >= 100) {\n\t\tcount +=\
    \ n % 11;\n\t\tn /= 11;\n\t}\n\twhile (n >= 10) {\n\t\tcount += n % 11;\n\t\t\
    n /= 11;\n\t}\n\twhile (n >= 1) {\n\t\tcount += n % 11;\n\t\tn /= 11;\n\t}\n\t\
    return count;\n}", "{\n    long count = 0;\n    long i;\n    for(i = 1; i <= n;\
    \ i++)\n    {\n        if((i % 11) == 0 || (i % 13) == 0)\n            count++;\n\
    \    }\n    return count;\n}\n</code>\n<|/ a tags=fizzbuzz,c++ |>\n<| c |>\nThis\
    \ doesn't answer the question. He wants to know how to use `std::to_string` with\
    \ FizzBuzz.\n<|/ c |>\n<| c |>\nI didn't realize that he was asking about `to_string`\
    \ specifically. I'll edit my answer to include a solution for `to_string`.\n<|/\
    \ c |>\n<| a tags=fizzbuzz,c++ |>\n<code>\n#include <iostream>\n#include <string>\n\
    using namespace std;", "{\n    long count = 0;\n    long x = n;\n    \n    while\
    \ (x != 0) {\n        if (x % 11 == 0 || x % 13 == 0) {\n            count++;\n\
    \        }\n        x /= 10;\n    }\n    return count;\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| c |>\nI like your solution, but I wonder if there is a way to do it without\
    \ using any loops?\n<|/ c |>\n<| c |>\nI added a solution without loops.\n<|/\
    \ c |>\n<| c |>\nThanks for your solution. I was wondering if there is a way to\
    \ do it without using any loops. I guess there isn't.\n<|/ c |>\n<| c |>\nI added\
    \ a solution without loops.\n<|/ c |>\n<| a dscore=1 |>\nI like your solution,\
    \ but I wonder if there is a way to do it without using any loops?", "{\n    long\
    \ count = 0;\n    long div = 11L;\n    long mod;\n    \n    while (n > div) {\n\
    \        mod = n % div;\n        if (mod != 0 && mod != 7) {\n            count++;\n\
    \        }\n        div = div * 10L;\n    }\n    return count;\n}", "{\n    long\
    \ count = 0;\n    long remainder;\n    \n    for(long i = 1; i <= n; i++){\n \
    \       remainder = i % 11;\n        if(remainder == 0 || remainder == 7){\n \
    \           count++;\n        }\n    }\n    return count;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\nusing namespace std;", "{\n\
    \    long count = 0;\n    long remainder;\n    long dividend = n;\n    long divisor\
    \ = 11;\n    long quotient;\n    \n    while(dividend >= divisor) {\n        remainder\
    \ = dividend % divisor;\n        quotient = dividend / divisor;\n        if(remainder\
    \ == 7) {\n            count++;\n        }\n        divisor = divisor * 10;\n\
    \        dividend = quotient;\n    }\n    return count;\n}\n</code>\n<|/ a tags=fizzbuzz,c++,algorithm\
    \ |>\n<| c |>\nI like this solution. Much more elegant than my solution. Thanks!\n\
    <|/ c |>\n<| a dscore=2 |>\n<code>\n#include <iostream>\nusing namespace std;",
  "{\n    long count = 0;\n    long temp;\n    \n    for(long i = 0; i <= n; i++)\
    \ {\n        if((i % 11) == 0 || (i % 13) == 0) {\n            temp = i;\n   \
    \         while(temp != 0) {\n                temp = temp / 10;\n            \
    \    count++;\n            }\n        }\n    }\n    return count;\n}\n</code>\n\
    <|/ a |>\n<| c |>\nThis code doesn't work. Try it with `fizz_buzz(78)` which returns\
    \ `2`.\n<|/ c |>\n<| c |>\nIt works fine for me. Try it yourself with fizz_buzz(78)\n\
    <|/ c |>\n<| c |>\nIt doesn't work for `fizz_buzz(79)` which returns `3`.\n<|/\
    \ c |>\n<| c |>\nIt works fine for me. Try it yourself with fizz_buzz(79)\n<|/\
    \ c |>\n<| c |>\nIt doesn't work for `fizz_buzz(78)` which returns `2`.\n<|/ c\
    \ |>\n<| a tags=fizzbuzz,c++,algorithm |>\n<code>\n#include <iostream>\nusing\
    \ namespace std;", "{\n    long count = 0;\n    for(long i = n; i > 0; i /= 11)\
    \ \n    {\n        if(i%13 == 0) \n        {\n            count += 1;\n      \
    \  }\n    }\n    return count;\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=fizzbuzz,c++\
    \ |>\n<code>\n#include <iostream>\nusing namespace std;", "{\n    long count =\
    \ 0;\n    for(long i = n; i > 0; i /= 11) \n    {\n        if(i%13 == 0) \n  \
    \      {\n            count += 1;\n        }\n    }\n    return count;\n}\n</code>\n\
    <|/ a dscore=1 |>\n<| a tags=fizzbuzz,c++ |>\n<code>\n#include <iostream>\nusing\
    \ namespace std;", "{\n    long count = 0;\n    long x = n;\n    long y = x;\n\
    \    long z = 0;\n    long w = 0;\n    \n    while(y != 0)\n    {\n        z =\
    \ y % 10;\n        w = x / 10;\n        if(z == 7 && w % 11 == 0 || z == 7 &&\
    \ w % 13 == 0)\n        {\n            count++;\n        }\n        y = x / 10;\n\
    \    }\n    return count;\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>",
  "{\n    long count = 0;\n    long remainder;\n    long digit;\n    \n    while (n)\
    \ {\n        digit = n % 10;\n        remainder = n / 10;\n        if (remainder\
    \ % 11 == 0 || remainder % 13 == 0) {\n            count++;\n        }\n     \
    \   n = remainder;\n    }\n    return count;\n}\n</code>\n<|/ a tags=fizzbuzz,c++,algorithm\
    \ |>\n<| c |>\nThis doesn't work for `fizz_buzz(78)` which should return `3` but\
    \ returns `2`.\n<|/ c |>\n<| c |>\n: It works for me. `fizz_buzz(78)` returns\
    \ `3`.\n<|/ c |>\n<| c |>\n: I see what you mean. Fixed.\n<|/ c |>\n<| c |>\n\
    : I added a version that works with `fizz_buzz(78)` returning `3`.\n<|/ c |>\n\
    <| c |>\n: I added a version that works with `fizz_buzz(78)` returning `3`.\n\
    <|/ c |>\n<| a tags=fizzbuzz,c++,algorithm |>\n<code>\n#include <iostream>\nusing\
    \ namespace std;", "{\n    long count = 0;\n    long div = 11L;\n    long mod\
    \ = 13L;\n    while(n >= div)\n    {\n        n /= div;\n        ++count;\n  \
    \  }\n    while(n >= mod)\n    {\n        n /= mod;\n        ++count;\n    }\n\
    \    return count;\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=fizzbuzz,c++,algorithm\
    \ |>\n<code>\n#include <iostream>\nusing namespace std;", "{\n    long count =\
    \ 0;\n    for(long i = n; i > 0; i /= 11) {\n        if((i % 11) == 7) {\n   \
    \         count += 1;\n        }\n    }\n    for(long i = n; i > 0; i /= 13) {\n\
    \        if((i % 13) == 7) {\n            count += 1;\n        }\n    }\n    return\
    \ count;\n}\n</code>\n<|/ a tags=fizzbuzz,c++,algorithm |>\n<| a tags=fizzbuzz,c++,algorithm\
    \ |>\n<code>\n#include <iostream>\nusing namespace std;"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

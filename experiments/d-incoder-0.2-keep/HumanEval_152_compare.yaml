name: HumanEval_152_compare
language: humaneval_to_dlang.py
prompt: "import std.math;\nimport std.typecons;\n/*\nI think we all remember that\
  \ feeling when the result of some long-awaited\n    event is finally known. The\
  \ feelings and thoughts you have at that moment are\n    definitely worth noting\
  \ down and comparing.\n    Your task is to determine if a person correctly guessed\
  \ the results of a number of matches.\n    You are given two arrays of scores and\
  \ guesses of equal length, where each index shows a match. \n    Return an array\
  \ of the same length denoting how far off each guess was. If they have guessed correctly,\n\
  \    the value is 0, and if not, the value is the absolute difference between the\
  \ guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
  \ -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
  \    \n*/\nlong[] compare(long[] game, long[] guess) \n"
tests: "unittest\n{\n    alias candidate = compare;\n\n    assert(candidate([1L, 2L,\
  \ 3L, 4L, 5L, 1L], [1L, 2L, 3L, 4L, 2L, -2L]) == [0L, 0L, 0L, 0L, 3L, 3L]);\n  \
  \  assert(candidate([0L, 0L, 0L, 0L, 0L, 0L], [0L, 0L, 0L, 0L, 0L, 0L]) == [0L,\
  \ 0L, 0L, 0L, 0L, 0L]);\n    assert(candidate([1L, 2L, 3L], [-1L, -2L, -3L]) ==\
  \ [2L, 4L, 6L]);\n    assert(candidate([1L, 2L, 3L, 5L], [-1L, 2L, 3L, 4L]) == [2L,\
  \ 0L, 0L, 1L]);\n}\nvoid main(){}"
completions: []
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

name: HumanEval_76_is_simple_power
language: humaneval_to_dlang.py
prompt: "import std.math;\nimport std.typecons;\n/*\nYour task is to write a function\
  \ that returns true if a number x is a simple\n    power of n and false in other\
  \ cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1,\
  \ 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n\
  \    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5,\
  \ 3) => false\n    \n*/\nbool is_simple_power(long x, long n) \n"
tests: "unittest\n{\n    alias candidate = is_simple_power;\n\n    assert(candidate(16L,\
  \ 2L) == true);\n    assert(candidate(143214L, 16L) == false);\n    assert(candidate(4L,\
  \ 2L) == true);\n    assert(candidate(9L, 3L) == true);\n    assert(candidate(16L,\
  \ 4L) == true);\n    assert(candidate(24L, 2L) == false);\n    assert(candidate(128L,\
  \ 4L) == false);\n    assert(candidate(12L, 6L) == false);\n    assert(candidate(1L,\
  \ 1L) == true);\n    assert(candidate(1L, 12L) == true);\n}\nvoid main(){}"
completions: []
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

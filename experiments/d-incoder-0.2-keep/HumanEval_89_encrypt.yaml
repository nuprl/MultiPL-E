name: HumanEval_89_encrypt
language: humaneval_to_dlang.py
prompt: "import std.math;\nimport std.typecons;\n/*\nCreate a function encrypt that\
  \ takes a string as an argument and\n    returns a string encrypted with the alphabet\
  \ being rotated. \n    The alphabet should be rotated in a manner such that the\
  \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
  \    encrypt('hi') returns 'lm'\n    encrypt('asdfghjkl') returns 'ewhjklnop'\n\
  \    encrypt('gf') returns 'kj'\n    encrypt('et') returns 'ix'\n    \n*/\nstring\
  \ encrypt(string s) \n"
tests: "unittest\n{\n    alias candidate = encrypt;\n\n    assert(candidate(\"hi\"\
  ) == \"lm\");\n    assert(candidate(\"asdfghjkl\") == \"ewhjklnop\");\n    assert(candidate(\"\
  gf\") == \"kj\");\n    assert(candidate(\"et\") == \"ix\");\n    assert(candidate(\"\
  faewfawefaewg\") == \"jeiajeaijeiak\");\n    assert(candidate(\"hellomyfriend\"\
  ) == \"lippsqcjvmirh\");\n    assert(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
  ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\");\n    assert(candidate(\"\
  a\") == \"e\");\n}\nvoid main(){}"
completions: ["{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i) - 97];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function decrypt that takes a string as an argument\
    \ and\n    returns a string decrypted with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    encrypt('hi') returns\
    \ 'lm'\n    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns\
    \ 'kj'\n    encrypt('et') returns 'ix'\n    \n*/\nstring decrypt(string s) \n\
    {\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[(int)s.charAt(i) - 97];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    rotate('hi') returns 'kj'\n    rotate('asdfghjkl')\
    \ returns 'ix'\n    rotate('gf') returns 'et'\n    rotate('et') returns 'gf' \n\
    \    \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - 97];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    rotate('hi') returns 'kj'\n    rotate('asdfghjkl') returns 'ix'\n    rotate('gf')\
    \ returns 'et'\n    rotate('et') returns 'gf' \n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i) - 97];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rotate that takes a string as an argument\
    \ and\n    returns a string rotated with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=c++,encryption,string |>\n\
    <| c |>\nI understand that this is an assignment, but I feel like it would be\
    \ a lot more helpful if you explained what was wrong with OP's code and how you\
    \ fixed it.\n<|/ c |>\n<| c |>\nI added some explanation to the answer. Hope it\
    \ helps.\n<|/ c |>\n<| c |>\nThanks for the explanation. I understand it now.\
    \ One more question, how would I go about encrypting multiple strings at once?\
    \ For example if I wanted to encrypt \"hi\" and \"bye\" how would I go about doing\
    \ that?\n<|/ c |>\n<| c |>\nYou would have to encrypt each string separately and\
    \ then concatenate the encrypted strings together. For example, `encrypt(encrypt(\"\
    hi\") + encrypt(\"bye\"))` would return `lmnop`.\n<|/ c |>\n<| c |>\nThanks again!\
    \ I appreciate it.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n\
    #include <string>\nusing namespace std;", "{\n    string alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[s.at(i) - 'a' + 1];\n    }\n    return result;\n}\n\
    </code>\n<|/ a tags=c++,encryption,string |>\n<| c |>\nI appreciate your help\
    \ but this isn't what I'm looking for. I need to know how to encrypt a string\
    \ using a specific alphabet. For example, if I were to encrypt \"hi\" using the\
    \ alphabet \"abcdefghijklmnopqrstuvwxyz\" it would return \"lm\"\n<|/ c |>\n<|\
    \ c |>\nI added a solution for you. Hope it helps.\n<|/ c |>\n<| c |>\nThank you\
    \ so much for your help! I appreciate it!\n<|/ c |>\n<| c |>\nNo problem. Glad\
    \ I could help.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n#include\
    \ <string>\n#include <cmath>\n#include <cstdlib>\n#include <ctime>\nusing namespace\
    \ std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += std.string.rotate(s.charAt(i), 2);\n    }\n    return\
    \ result;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nI appreciate your effort but\
    \ this doesn't really answer the question. Your code doesn't use any built-in\
    \ functions. Also, your code is very inefficient and doesn't use any built-in\
    \ functions. I believe that your answer should be more along the lines of \"use\
    \ built-in functions to solve this problem\"\n<|/ c |>\n<| c |>\nI appreciate\
    \ your effort but this doesn't really answer the question. Your code doesn't use\
    \ any built-in functions. Also, your code is very inefficient and doesn't use\
    \ any built-in functions. I believe that your answer should be more along the\
    \ lines of \"use built-in functions to solve this problem\"\n<|/ c |>\n<| c |>\n\
    I appreciate your effort but this doesn't really answer the question. Your code\
    \ doesn't use any built-in functions. Also, your code is very inefficient and\
    \ doesn't use any built-in functions. I believe that your answer should be more\
    \ along the lines of \"use built-in functions to solve this problem\"\n<|/ c |>\n\
    <| c |>\nI appreciate your effort but this doesn't really answer the question.\
    \ Your code doesn't use any built-in functions. Also, your code is very inefficient\
    \ and doesn't use any built-in functions. I believe that your answer should be\
    \ more along the lines of \"use built-in functions to solve this problem\"\n<|/\
    \ c |>\n<| c |>\nI appreciate your effort but this doesn't really answer the question.\
    \ Your code doesn't use any built-in functions. Also, your code is very inefficient\
    \ and doesn't use any built-in functions. I believe that your answer should be\
    \ more along the lines of \"use built-in functions to solve this problem\"\n<|/\
    \ c |>\n<| a |>\n<code>\n#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n\
    #include <stdbool.h>", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function decrypt that takes a string as an argument\
    \ and\n    returns a string decrypted with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    decrypt('lm') returns\
    \ 'hi'\n    decrypt('ewhjklnop') returns 'asdfghjkl'\n    decrypt('kj') returns\
    \ 'gf'\n    decrypt('ix') returns 'et'\n    \n*/\nstring decrypt(string s) \n\
    {\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n}\n\
    </code>\n<|/ a dscore=0 |>\n<| c |>\nThank you for the help! I appreciate it!\n\
    <|/ c |>\n<| c |>\nNo problem! If this answer helped you, please consider marking\
    \ it as accepted so other people can find it easier. Thanks!\n<|/ c |>\n<| c |>\n\
    I did but my reputation is too low for it to show publicly.\n<|/ c |>\n<| c |>\n\
    No worries, glad I could help!\n<|/ c |>\n<| a tags=c++,encryption,string |>\n\
    <code>\n#include <iostream>\n#include <string>\n#include <cmath>\nusing namespace\
    \ std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += std.string.rotate(s.charAt(i), 2);\n    }\n    return\
    \ result;\n}", "{\n    string alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n   \
    \ string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n    \
    \    result += alphabet[(int)s.at(i) - 'a' + 2];\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=c++,encryption,string |>\n<| c |>\nThis doesn't seem to\
    \ work. `encrypt(\"abc\")` returns `cba`.\n<|/ c |>\n<| c |>\nOops, I forgot to\
    \ subtract 'a' from the character before adding 2 to it.  Fixed.\n<|/ c |>\n<|\
    \ c |>\nThis doesn't work. `encrypt(\"abc\")` returns `cba`.\n<|/ c |>\n<| c |>\n\
    It works now.  I forgot to subtract 'a' from the character before adding 2 to\
    \ it.  Fixed.\n<|/ c |>\n<| c |>\nThis doesn't work. `encrypt(\"abc\")` returns\
    \ `cba`.\n<|/ c |>\n<| a tags=c++,encryption,string |>\n<code>\n#include <iostream>\n\
    #include <string>\nusing namespace std;", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    decrypt('lm')\
    \ returns 'hi'\n    decrypt('ewhjklnop') returns 'asdfghjkl'\n    decrypt('kj')\
    \ returns 'gf'\n    decrypt('ix') returns 'et'\n    \n*/\nstring decrypt(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    rotate('hi') returns 'gf'\n    rotate('asdfghjkl')\
    \ returns 'ix'\n    rotate('gf') returns 'et'\n    rotate('et') returns 'hi'\n\
    \    \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    rotate('hi')\
    \ returns 'gf'\n    rotate('asdfghjkl') returns 'ix'\n    rotate('gf') returns\
    \ 'et'\n    rotate('et') returns 'hi'\n    \n*/\nstring rotate(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n}\n\
    /*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    rotate('hi') returns 'gf'\n    ", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += std.string.rotate(s.charAt(i), 2);\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=string,encryption,c++ |>\n<| c |>\nThis code doesn't compile.\
    \ `std.string` doesn't exist in C++.\n<|/ c |>\n<| c |>\nIt does compile for me\
    \ in C++. I'm using Visual Studio 2015.\n<|/ c |>\n<| c |>\nIt compiles fine for\
    \ me in C++. I'm using Visual Studio 2015.\n<|/ c |>\n<| c |>\nIt compiles fine\
    \ for me in C++. I'm using Visual Studio 2015.\n<|/ c |>\n<| c |>\nIt compiles\
    \ fine for me in C++. I'm using Visual Studio 2015.\n<|/ c |>\n<| a tags=string,encryption,c++\
    \ |>\n<code>\n#include <iostream>\n#include <string>\n#include <cstring>\nusing\
    \ namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(int)s.charAt(i) - 97];\n    }\n   \
    \ return result;\n}\n/*\nCreate a function decrypt that takes a string as an argument\
    \ and\n    returns a string decrypted with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    encrypt('hi') returns\
    \ 'lm'\n    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns\
    \ 'kj'\n    encrypt('et') returns 'ix'\n    \n*/\nstring decrypt(string s) \n\
    {\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[(int)s.charAt(i) - 97];\n    }\n    return result;\n\
    }\n/*\nCreate a function encryptString that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    encryptString('hi') returns\
    \ 'lm'\n    encryptString('asdfghjkl') returns 'ewhjklnop'\n    encryptString('gf')\
    \ returns 'kj'\n    encryptString('et') returns 'ix'\n    \n*/\nstring encryptString(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i) - 97];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function decryptString that takes a string as an argument\
    \ and\n    returns a string decrypted with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    encryptString('hi')\
    \ returns 'lm'\n    encryptString('asdfghjkl') returns 'ewhjklnop'\n    encryptString('gf')\
    \ returns 'kj'\n    encryptString('et') returns 'ix'\n    \n*/\nstring decryptString(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i) - 97];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function encryptString that takes a string as an argument\
    \ and\n    returns a string encrypted with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a ", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    encrypt('hi')\
    \ returns 'lm'\n    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf')\
    \ returns 'kj'\n    encrypt('et') returns 'ix'\n    \n*/\nstring decrypt(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rot13 that takes a string as an argument and\n    returns\
    \ a string rotated 13 places.\n    For example:\n    rot13('hi') returns 'nkr'\n\
    \    rot13('asdfghjkl') returns 'zqhvuoy'\n    rot13('gf') returns 'gf'\n    rot13('et')\
    \ returns 'et'\n    \n*/\nstring rot13(string s) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rot13 that takes a string\
    \ as an argument and\n    returns a string rotated 13 places.\n    For example:\n\
    \    rot13('hi') returns 'nkr'\n    rot13('asdfghjkl') returns 'zqhvuoy'\n   \
    \ rot13('gf') returns 'gf'\n    rot13('et') returns 'et'\n    \n*/\nstring rot13(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rot13 that takes a string as an argument and\n    returns\
    \ a string rotated 13 places.\n    For example:\n    rot13('hi') returns 'nkr'\n\
    \    rot13('asdfghjkl') returns 'zqhvuoy'\n    rot13('gf') returns 'gf'\n    rot13('et')\
    \ returns 'et'\n    \n*/\nstring rot13(string s) \n{\n", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)(((int)s.charAt(i)\
    \ - 97 + 2) % 26)];\n    }\n    return result;\n}\n</code>\n<|/ a tags=encryption,c++\
    \ |>\n<| c |>\nThank you so much for your help! I really appreciate it!\n<|/ c\
    \ |>\n<| c |>\nNo problem! If this answer was helpful, please consider marking\
    \ it as accepted (by clicking the check mark next to it). That way future visitors\
    \ will know that your question was answered and will know that your issue is resolved.\
    \ See [here](https://meta.stackexchange.com/questions/5234/how-does-accepting-an-answer-work)\
    \ for more information. Thanks!\n<|/ c |>\n<| c |>\nI tried to do that but since\
    \ I'm new to this site it says I have to wait 2 days to accept an answer. I'll\
    \ do that as soon as I can. Thanks again!\n<|/ c |>\n<| c |>\nNo problem! Glad\
    \ I could help!\n<|/ c |>\n<| a tags=encryption,c++ |>\n<code>\n#include <iostream>\n\
    #include <string>\n#include <cstring>\nusing namespace std;\nstring alphabet =\
    \ \"abcdefghijklmnopqrstuvwxyz\";\nstring encrypt(string s)\n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)(((int)s.charAt(i)\
    \ - 97 + 2) % 26)];\n    }\n    return result;\n}", "{\n    string result = \"\
    \";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += s.charAt(i)\
    \ + s.charAt(i);\n    }\n    return result;\n}\n/*\nCreate a function decrypt\
    \ that takes a string as an argument and\n    returns a string decrypted with\
    \ the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    decrypt('lm') returns 'hi'\n    decrypt('ewhjklnop') returns\
    \ 'asdfghjkl'\n    decrypt('kj') returns 'gf'\n    decrypt('ix') returns 'et'\n\
    \    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += s.charAt(i) + s.charAt(i);\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated in the manner described above.\n\
    \    For example:\n    rotate('hi') returns 'gf'\n    rotate('asdfghjkl') returns\
    \ 'ix'\n    rotate('gf') returns 'et'\n    rotate('et') returns 'hi'\n    \n*/\n\
    string rotate(string s) \n{\n    string result = \"\";\n    for(int i = 0; i <\
    \ s.length(); i++)\n    {\n        result += s.charAt(i) + s.charAt(i);\n    }\n\
    \    return result;\n}\n/*\nCreate a function rotate that takes a string as an\
    \ argument and\n    returns a string rotated in the manner described above.\n\
    \    For example:\n    rotate('hi') returns 'gf'\n    rotate('asdfghjkl') returns\
    \ 'ix'\n    rotate('gf') returns 'et'\n    rotate('et') returns 'hi'\n    \n*/\n\
    string rotate(string s) \n{\n    string result = \"\";\n    for(int i = 0; i <\
    \ s.length(); i++)\n    {\n        result += s.charAt(i) + s.charAt(i);\n    }\n\
    \    return result;\n}\n/*\nCreate a function rotate that takes a string as an\
    \ argument and\n    returns a string rotated in the manner described above.\n\
    \    For example:\n    rotate('hi') returns 'gf'\n    rotate('asdfghjkl') returns\
    \ 'ix'\n    rotate('gf') returns 'et'\n    rotate('et') returns 'hi'\n    \n*/\n\
    string rotate(string s) \n{\n    string result = \"\";\n    for(int i = 0; i <\
    \ s.length(); i++)\n    {\n        result += s.charAt(i) + s.charAt(i);\n    }\n\
    \    return result;\n}\n/*", "{\n    string result = \"\";\n    for(int i = 0;\
    \ i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i) - 'a'];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    encrypt('hi')\
    \ returns 'lm'\n    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf')\
    \ returns 'kj'\n    encrypt('et') returns 'ix'\n    \n*/\nstring decrypt(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i) - 'a'];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rotate that takes a string as an argument\
    \ and\n    returns a string rotated in the manner described above.\n    For example:\n\
    \    rotate('hi') returns 'hi'\n    rotate('asdfghjkl') returns 'asdfghjkl'\n\
    \    rotate('gf') returns 'gfghijkl'\n    rotate('et') returns 'etghijkl'\n  \
    \  \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - 'a'];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated in the manner described\
    \ above.\n    For example:\n    rotate('hi') returns 'hi'\n    rotate('asdfghjkl')\
    \ returns 'asdfghjkl'\n    rotate('gf') returns 'gfghijkl'\n    rotate('et') returns\
    \ 'etghijkl'\n    \n*/\nstring rotate(string s) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - 'a'];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated in the manner described\
    \ above.\n    For example:\n    rotate('hi') returns 'hi'\n    rotate('asdfghjkl')\
    \ returns 'asdfghjkl'\n    rotate('gf') returns 'gfghijkl'\n    rotate('et') returns\
    \ 'etghijkl'\n    \n", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[((s.at(i) - 'a') + 2) % 26];\n    }\n\
    \    return result;\n}\n/*\nCreate a function decrypt that takes a string as an\
    \ argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    encrypt('hi')\
    \ returns 'lm'\n    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf')\
    \ returns 'kj'\n    encrypt('et') returns 'ix'\n    \n*/\nstring decrypt(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[((s.at(i) - 'a') + 2) % 26];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rot13 that takes a string as an argument and\n\
    \    returns a string rotated 13 places. \n    For example:\n    rot13('hi') returns\
    \ 'nkr'\n    rot13('asdfghjkl') returns 'zxcvbnm'\n    rot13('gf') returns 'gf'\n\
    \    rot13('et') returns 'et'\n    \n*/\nstring rot13(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[((s.at(i) - 'a') + 13) % 26];\n    }\n    return result;\n}\n/*\n\
    Create a function rot13 that takes a string as an argument and\n    returns a\
    \ string rotated 13 places. \n    For example:\n    rot13('hi') returns 'nkr'\n\
    \    rot13('asdfghjkl') returns 'zxcvbnm'\n    rot13('gf') returns 'gf'\n    rot13('et')\
    \ returns 'et'\n    \n*/\nstring rot13(string s) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[((s.at(i)\
    \ - 'a') + 13) % 26];\n    }\n    return result;\n}\n/*\nCreate a function rot13\
    \ that takes a string as an argument and\n    returns a string rotated 13 places.\
    \ \n    For example:\n    rot13('hi') returns 'nkr'\n    rot13('asdfghjkl') returns\
    \ 'zxcvbnm'\n    rot13('gf') returns 'gf'\n    rot", "{\n    string result = \"\
    \";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += std.string.rep(s.charAt(i),\
    \ std.math.pow(2, i));\n    }\n    return result;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nThank you for your answer! I appreciate it. I will try this out\
    \ and see how it goes. I appreciate your help!\n<|/ c |>\n<| c |>\nI tested this\
    \ out and it works perfectly! Thank you so much!\n<|/ c |>\n<| a tags=encryption,c++,string\
    \ |>\n<code>\n#include <iostream>\n#include <string>\n#include <algorithm>\n#include\
    \ <cmath>\nusing namespace std;", "{\n    string result = \"\";\n    for(int i\
    \ = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    encrypt('hi')\
    \ returns 'lm'\n    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf')\
    \ returns 'kj'\n    encrypt('et') returns 'ix'\n    \n*/\nstring decrypt(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string encrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    rotate('hi') returns 'lm'\n    rotate('asdfghjkl')\
    \ returns 'ewhjklnop'\n    rotate('gf') returns 'kj'\n    rotate('et') returns\
    \ 'ix'\n    \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n   \
    \ for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    rotate('hi')\
    \ returns 'lm'\n    rotate('asdfghjkl') returns 'ewhjklnop'\n    rotate('gf')\
    \ returns 'kj'\n    rotate('et') returns 'ix'\n    \n*/\nstring unrotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string encrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[i]];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    encrypt('hi')\
    \ returns 'lm'\n    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf')\
    \ returns 'kj'\n    encrypt('et') returns 'ix'\n    \n*/\nstring decrypt(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s[s.length() - 1 - i]];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rotate that takes a string as an argument\
    \ and\n    returns a string encrypted with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    encrypt('hi') returns\
    \ 'lm'\n    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns\
    \ 'kj'\n    encrypt('et') returns 'ix'\n    \n*/\nstring rotate(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s[s.length() - 1 - i]];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n    encrypt('asdfghjkl')\
    \ returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n    encrypt('et') returns\
    \ 'ix'\n    \n*/\nstring rotateDecrypt(string s) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[i]];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string encrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n", "{\n    string result = \"\"\
    ;\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - 'a'] * 2;\n    }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| c\
    \ |>\nI appreciate your help but I am not allowed to use any built in functions.\
    \ I must use my own functions to do this.\n<|/ c |>\n<| c |>\nI added a solution\
    \ that doesn't use any built-in functions. I hope it helps.\n<|/ c |>\n<| c |>\n\
    Thank you so much! I appreciate your help!\n<|/ c |>\n<| c |>\nNo problem. Glad\
    \ I could help.\n<|/ c |>\n<| a dscore=0 |>\n<code>\nstring encrypt(string s)\n\
    {\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[(int)s.charAt(i) - 'a'] * 2;\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=encryption,c++ |>\n<| c |>\nI appreciate your help but\
    \ I am not allowed to use any built in functions. I must use my own functions\
    \ to do this.\n<|/ c |>\n<| c |>\nI added a solution that doesn't use any built-in\
    \ functions. I hope it helps.\n<|/ c |>\n<| a tags=encryption,c++ |>\n<code>\n\
    #include <iostream>\n#include <string>\nusing namespace std;", "{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += std.string(std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), st", "{\n    string result = \"\";\n\
    \    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(s.at(i)\
    \ - 'a' + 2) % 26];\n    }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n\
    <| c |>\nThis doesn't work. Try encrypting \"asdfghjkl\" with your code.\n<|/\
    \ c |>\n<| c |>\nI tested it and it works fine. Can you give an example where\
    \ it doesn't work?\n<|/ c |>\n<| c |>\nTry encrypting \"asdfghjkl\" with your\
    \ code.\n<|/ c |>\n<| c |>\nIt doesn't work for me either. Try encrypting \"asdfghjkl\"\
    \ with your code.\n<|/ c |>\n<| c |>\nI tested it and it works fine. Can you give\
    \ an example where it doesn't work?\n<|/ c |>\n<| a |>\n<code>\nstring encrypt(string\
    \ s)\n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(s.at(i) - 'a' + 2) % 26];\n    }\n    return\
    \ result;\n}\n</code>\n<|/ a tags=encryption,c++ dscore=0 |>\n<| c |>\nPlease\
    \ add some explanation to your answer such that others can learn from it\n<|/\
    \ c |>\n<| c |>\nThis doesn't work. Try encrypting \"asdfghjkl\" with your code.\n\
    <|/ c |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n#include <string>\nusing\
    \ namespace std;", "{\n    string alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s.at(i) - 97];\n    }\n    return result;\n}\n\
    </code>\n<|/ a tags=encryption,c++,string |>\n<| c |>\nThanks for your answer!\
    \ I really appreciate it! I did try this out and it worked perfectly! I really\
    \ appreciate your help!\n<|/ c |>\n<| c |>\nNo problem! Glad I could help!\n<|/\
    \ c |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n#include <string>\n#include\
    \ <cstdlib>\n#include <ctime>\n#include <cmath>\nusing namespace std;", "{\n \
    \   string result = \"\";\n    for(int i = 0; i < s.length; i++)\n    {\n    \
    \    result += std.string.replace(s.substring(i,i+1), \"a\", \"z\") + std.string.replace(s.substring(i,i+1),\
    \ \"b\", \"y\") + std.string.replace(s.substring(i,i+1), \"c\", \"x\") + std.string.replace(s.substring(i,i+1),\
    \ \"d\", \"w\") + std.string.replace(s.substring(i,i+1), \"e\", \"v\") + std.string.replace(s.substring(i,i+1),\
    \ \"f\", \"u\") + std.string.replace(s.substring(i,i+1), \"g\", \"t\") + std.string.replace(s.substring(i,i+1),\
    \ \"h\", \"s\") + std.string.replace(s.substring(i,i+1), \"i\", \"r\") + std.string.replace(s.substring(i,i+1),\
    \ \"j\", \"q\") + std.string.replace(s.substring(i,i+1), \"k\", \"p\") + std.string.replace(s.substring(i,i+1),\
    \ \"l\", \"o\") + std.string.replace(s.substring(i,i+1), \"m\", \"n\") + std.string.replace(s.substring(i,i+1),\
    \ \"n\", \"m\") + std.string.replace(s.substring(i,i+1), \"o\", \"l\") + std.string.replace(s.substring(i,i+1),\
    \ \"p\", \"k\") + std.string.replace(s.substring(i,i+1), \"q\", \"r\");\n    }\n\
    \    return result;\n}\n/*\nCreate a function decrypt that takes a string as an\
    \ argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    encrypt('hi')\
    \ returns 'lm'\n    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf')\
    \ returns 'kj'\n    encrypt('et') returns 'ix'\n    \n*/\nstring decrypt(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length; i++)\n \
    \   {\n        result += std.string.replace(s.substring(i,i+1), \"z\", \"a\")\
    \ + std.string.replace(s.substring(i,i+1), \"y\", \"b\") + std.string.replace(s.substring(i,i+1),\
    \ \"x\", \"c\") + std.string.replace(s.substring(i,i+1), \"w\", \"d\") + std.string.replace(s.substring(i,i+1),\
    \ \"v\", \"e\") + std.string.replace(s.substring(i,i+1), \"u\", \"f\") + std.string.replace(s.substring(i,i+1),\
    \ \"t\", \"g\") + std.string.replace(s.substring(i,i+1), \"s\", \"h\") + std.string.replace(s.",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[(int)s[i]];\n    }\n    return result;\n}\n/*\nCreate\
    \ a function decrypt that takes a string as an argument and\n    returns a string\
    \ decrypted with the alphabet being rotated. \n    The alphabet should be rotated\
    \ in a manner such that the letters \n    shift down by two multiplied to two\
    \ places.\n    For example:\n    encrypt('hi') returns 'lm'\n    encrypt('asdfghjkl')\
    \ returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n    encrypt('et') returns\
    \ 'ix'\n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n  \
    \  for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[s.length()\
    \ - 1 - i]];\n    }\n    return result;\n}\n/*\nCreate a function rot13 that takes\
    \ a string as an argument and\n    returns a string rotated 13 places.\n    For\
    \ example:\n    rot13('hi') returns 'kj'\n    rot13('asdfghjkl') returns 'ix'\n\
    \    rot13('gf') returns 'gfkj'\n    rot13('et') returns 'etkj'\n    \n*/\nstring\
    \ rot13(string s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(int)s[i] + 13];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rot13 that takes a string as an argument and\n\
    \    returns a string rotated 13 places.\n    For example:\n    rot13('hi') returns\
    \ 'kj'\n    rot13('asdfghjkl') returns 'ix'\n    rot13('gf') returns 'gfkj'\n\
    \    rot13('et') returns 'etkj'\n    \n*/\nstring rot13(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s[i] + 13];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rot13 that takes a string as an argument and\n    returns a string rotated 13\
    \ places.\n    For example:\n    rot13('hi') returns 'kj'\n    rot13('asdfghjkl')\
    \ returns 'ix'\n    rot13('gf') returns 'gfkj'\n    rot13('et') returns 'etkj'\n\
    \    \n*/\nstring rot13(string s) \n{\n    string result = ", "{\n    string alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n    string result = \"\";\n    for(int i\
    \ = 0; i < s.length(); i++)\n    {\n        result += alphabet[(alphabet.indexOf(s.charAt(i))\
    \ + 2) % alphabet.length];\n    }\n    return result;\n}\n</code>\n<|/ a tags=encryption,c++,string\
    \ |>\n<| c |>\nThis doesn't work if you try to encrypt a string that has more\
    \ than 26 characters. For example, encrypt(\"abcdefghijklmnopqrstuvwxyz\") returns\
    \ \"abcdefghijklmnopqrstuvwxyz\" instead of \"abcdefghijklmnopqrstuvwxyz.\n<|/\
    \ c |>\n<| c |>\nYes, I realized that after I posted my comment. Thanks for pointing\
    \ it out. I've updated the code to handle that case.\n<|/ c |>\n<| a tags=encryption,c++,string\
    \ |>\n<code>\n#include <iostream>\n#include <string>\n#include <algorithm>\nusing\
    \ namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += std.string.rep(s.charAt(i), std.math.pow(2, i));\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=string,encryption,c++,rotation\
    \ |>\n<| c |>\nI like your solution, however I believe that your solution will\
    \ fail if you try to encrypt a string with more than 26 characters. I believe\
    \ that your solution will fail if you try to encrypt a string with more than 26\
    \ characters. I believe that your solution will fail if you try to encrypt a string\
    \ with more than 26 characters. I believe that your solution will fail if you\
    \ try to encrypt a string with more than 26 characters. I believe that your solution\
    \ will fail if you try to encrypt a string with more than 26 characters. I believe\
    \ that your solution will fail if you try to encrypt a string with more than 26\
    \ characters. I believe that your solution will fail if you try to encrypt a string\
    \ with more than 26 characters. I believe that your solution will fail if you\
    \ try to encrypt a string with more than 26 characters. I believe that your solution\
    \ will fail if you try to encrypt a string with more than 26 characters. I believe\
    \ that your solution will fail if you try to encrypt a string with more than 26\
    \ characters. I believe that your solution will fail if you try to encrypt a string\
    \ with more than 26 characters. I believe that your solution will fail if you\
    \ try to encrypt a string with more than 26 characters. I believe that your solution\
    \ will fail if you try to encrypt a string with more than 26 characters. I believe\
    \ that your solution will fail if you try to encrypt a string with more than 26\
    \ characters. I believe that your solution will fail if you try to encrypt a string\
    \ with more than 26 characters. I believe that your solution will fail if you\
    \ try to encrypt a string with more than 26 characters. I believe that your solution\
    \ will fail if you try to encrypt a string with more than 26 characters. I believe\
    \ that your solution will fail if you try to encrypt a string with more than 26\
    \ characters. I believe that your solution will fail if you try to encrypt a string\
    \ with more than 26 characters. I believe that your solution will fail if you\
    \ try to encrypt a string with more than 26 characters. I believe that your solution\
    \ will fail if you try to encrypt a string with more than 26 characters. I believe\
    \ that your solution will fail if you try to encrypt a string with more than 26\
    \ characters. I believe that your solution will fail if you try to encrypt a string\
    \ with more than 26 characters. I believe that your solution will fail if you\
    \ try to encrypt a string with more than 26 characters. I believe that your solution\
    \ will fail if you try to encrypt a string with ", "{\n    string result = \"\"\
    ;\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[i]];\n\
    \    }\n    return result;\n}", "{\n    string result = \"\";\n    for(int i =\
    \ 0; i < s.length(); i++)\n    {\n        result += std.string(std.rotate(s.charAt(i),\
    \ 2));\n    }\n    return result;\n}\n</code>\n<|/ a |>\n<| c |>\nThis doesn't\
    \ work. `rotate` returns a `char`, not a `string`.\n<|/ c |>\n<| c |>\nIt does\
    \ work. `rotate` returns a `char`, not a `string`. `rotate` returns a `char`,\
    \ not a `string`. `rotate` returns a `char`, not a `string`. `rotate` returns\
    \ a `char`, not a `string`. `rotate` returns a `char`, not a `string`. `rotate`\
    \ returns a `char`, not a `string`. `rotate` returns a `char`, not a `string`.\
    \ `rotate` returns a `char`, not a `string`. `rotate` returns a `char`, not a\
    \ `string`. `rotate` returns a `char`, not a `string`. `rotate` returns a `char`,\
    \ not a `string`. `rotate` returns a `char`, not a `string`. `rotate` returns\
    \ a `char`, not a `string`. `rotate` returns a `char`, not a `string`. `rotate`\
    \ returns a `char`, not a `string`. `rotate` returns a `char`, not a `string`.\
    \ `rotate` returns a `char`, not a `string`. `rotate` returns a `char`, not a\
    \ `string`. `rotate` returns a `char`, not a `string`. `rotate` returns a `char`,\
    \ not a `string`. `rotate` returns a `char`, not a `string`. `rotate` returns\
    \ a `char`, not a `string`. `rotate` returns a `char`, not a `string`. `rotate`\
    \ returns a `char`, not a `string`. `rotate` returns a `char`, not a `string`.\
    \ `rotate` returns a `char`, not a `string`. `rotate` returns a `char`, not a\
    \ `string`. `rotate` returns a `char`, not a `string`. `rotate` returns a `char`,\
    \ not a `string`. `rotate` returns a `char`, not a `string`. `rotate` returns\
    \ a `char`, not a `string`. `rotate` returns a `char`, not a `string`. `rotate`\
    \ returns a `char`, not a `string`. `rotate` returns a `char`, not a `string`.\
    \ `rotate` returns a `char`, not a `string`. `rotate` returns a `char`, not a\
    \ `string`. `rotate` returns a `char`, not a `string`. `rotate` returns a `char`,\
    \ not a `string`. `rotate` returns a `char`, not a `string`. `rotate` returns\
    \ a `char`, ", "{\n    string alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n   \
    \ string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n    \
    \    result += alphabet[(int)s.at(i) - 'a'];\n    }\n    return result;\n}\n</code>\n\
    <|/ a tags=c++,encryption |>\n<| c |>\nThe `string` class has a `find` method\
    \ which does exactly what you're doing manually. `s.at(i)` will throw an exception\
    \ if `i` is out of bounds.\n<|/ c |>\n<| c |>\nI didn't know that. Thanks for\
    \ pointing that out. I'll update my answer.\n<|/ c |>\n<| c |>\nThanks so much\
    \ for this. I really appreciate it. I will try this out and see how it goes. Thanks\
    \ again!\n<|/ c |>\n<| c |>\nI added a version that doesn't use exceptions. I\
    \ hope this helps.\n<|/ c |>\n<| c |>\nThanks so much for this. I really appreciate\
    \ it. I will try this out and see how it goes. Thanks again!\n<|/ c |>\n<| a |>\n\
    Here's a version that doesn't use exceptions:\n<code>\nstring encrypt(string s)\n\
    {\n    string alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)\
    \ - 'a'];\n    }\n    return result;\n}\n</code>\n<|/ a tags=c++,encryption dscore=0\
    \ |>\n<| c |>\nThanks so much for this. I really appreciate it. I will try this\
    \ out and see how it goes. Thanks again!\n<|/ c |>\n<| c |>\nThanks so much for\
    \ this. I really appreciate it. I will try this out and see how it goes. Thanks\
    \ again!\n<|/ c |>\n<| c |>\nThanks so much for this. I really appreciate it.\
    \ I will try this out and see how it goes. Thanks again!\n<|/ c |>\n<| c |>\n\
    Thanks so much for this. I really appreciate it. I will try this out and see how\
    \ it goes. Thanks again!\n<|/ c |>\n<| c |>\nThanks so much for this. I really\
    \ appreciate it. I will try this out and see how it goes. Thanks again!\n<|/",
  "{\n    string alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    string rotated_alphabet\
    \ = rotate(alphabet, 2);\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += rotated_alphabet[(int)s[i]];\n    }\n    return\
    \ result;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nI believe that your rotate\
    \ function should return an `int` instead of a `string`\n<|/ c |>\n<| c |>\nI\
    \ believe that your rotate function should return an `int` instead of a `string`\n\
    <|/ c |>\n<| c |>\nI believe that your rotate function should return an `int`\
    \ instead of a `string`\n<|/ c |>\n<| c |>\nI believe that your rotate function\
    \ should return an `int` instead of a `string`\n<|/ c |>\n<| c |>\nI believe that\
    \ your rotate function should return an `int` instead of a `string`\n<|/ c |>\n\
    <| a tags=string,c++,encryption,rotation |>\n<code>\n#include <iostream>\n#include\
    \ <string>\n#include <cmath>", "{\n    string result = \"\";\n    for(int i =\
    \ 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    encrypt('hi')\
    \ returns 'lm'\n    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf')\
    \ returns 'kj'\n    encrypt('et') returns 'ix'\n    \n*/\nstring decrypt(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string encrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    rotate('hi') returns 'lm'\n    rotate('asdfghjkl')\
    \ returns 'ewhjklnop'\n    rotate('gf') returns 'kj'\n    rotate('et') returns\
    \ 'ix'\n    \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n   \
    \ for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    rotate('hi')\
    \ returns 'lm'\n    rotate('asdfghjkl') returns 'ewhjklnop'\n    rotate('gf')\
    \ returns 'kj'\n    rotate('et') returns 'ix'\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string encrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - 'a'];\n    }\n    return result;\n}\n/*\nCreate a function decrypt that takes\
    \ a string as an argument and\n    returns a string decrypted with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    encrypt('hi') returns 'lm'\n    encrypt('asdfghjkl') returns 'ewhjklnop'\n\
    \    encrypt('gf') returns 'kj'\n    encrypt('et') returns 'ix'\n    \n*/\nstring\
    \ decrypt(string s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(int)s.charAt(i) - 'a'];\n    }\n  \
    \  return result;\n}\n/*\nCreate a function encryptString that takes a string\
    \ as an argument and\n    returns a string encrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    encryptString('hi')\
    \ returns 'lm'\n    encryptString('asdfghjkl') returns 'ewhjklnop'\n    encryptString('gf')\
    \ returns 'kj'\n    encryptString('et') returns 'ix'\n    \n*/\nstring encryptString(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i) - 'a'];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function decryptString that takes a string as an argument\
    \ and\n    returns a string decrypted with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    encryptString('hi')\
    \ returns 'lm'\n    encryptString('asdfghjkl') returns 'ewhjklnop'\n    encryptString('gf')\
    \ returns 'kj'\n    encryptString('et') returns 'ix'\n    \n*/\nstring decryptString(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i) - 'a'];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function encryptString that takes a string as an argument\
    \ and\n    returns a string encrypted with the alphabet being rotated. \n    The\
    \ alphab", "{\n    string result = \"\";\n    for(int i = 0; i < s.length; i++)\n\
    \    {\n        result += alphabet[(s.charCodeAt(i) - 97 + 2) % 26];\n    }\n\
    \    return result;\n}\n</code>\n<|/ a tags=encryption,c++,string |>\n<| c |>\n\
    Thank you so much! I appreciate it!\n<|/ c |>\n<| c |>\nYou're welcome. Don't\
    \ forget to accept the answer if it solved your problem.\n<|/ c |>\n<| c |>\n\
    I did but since I'm new it says I have to wait 2 minutes before I can accept it\n\
    <|/ c |>\n<| c |>\nOh I see. Thanks again!\n<|/ c |>\n<| a dscore=0 |>\n<code>\n\
    #include <iostream>\n#include <string>\n#include <cstring>", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += s.charAt(i)\
    \ + s.charAt(i);\n    }\n    return result;\n}", "{\n    string result = \"\"\
    ;\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += s.at(i +\
    \ 2); // add two to each letter\n    }\n    return result;\n}", "{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n}", "{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += s.at(i + 2); \n    }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n\
    <| c |>\nI see what you're saying, but I don't think that's what I'm looking for.\
    \ I want to be able to rotate the alphabet by any amount I want, not just by two.\
    \ For example, rotating 'a' by 2 would return 'b' then 'c' then 'd' then 'e' then\
    \ 'f' then 'g' then 'h' then 'i' then 'j' then 'k' then 'l' then 'm' then 'n'\
    \ then 'o' then 'p' then 'q' then 'r' then 's' then 't' then 'u' then 'v' then\
    \ 'w' then 'x' then 'y' then 'z'\n<|/ c |>\n<| c |>\nOkay, I see what you're saying.\
    \ I edited my answer to reflect that.\n<|/ c |>\n<| c |>\nThank you so much! I\
    \ really appreciate it!\n<|/ c |>\n<| c |>\nNo problem! Glad to help!\n<|/ c |>\n\
    <| a dscore=0 |>\n<code>\n#include <iostream>\n#include <string>\n#include <algorithm>\n\
    #include <cmath>\nusing namespace std;", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += std.string(std.rotate(s.at(i),\
    \ 2));\n    }\n    return result;\n}\n</code>\n<|/ a tags=string,c++,encryption\
    \ |>\n<| c |>\nThis doesn't work. `rotate` returns a `char`, not a `string`.\n\
    <|/ c |>\n<| c |>\nThanks for pointing that out. I've fixed it.\n<|/ c |>\n<|\
    \ a tags=string,c++,encryption |>\n<code>\n#include <iostream>\n#include <string>\n\
    #include <algorithm>\nusing namespace std;", "{\n    string result = \"\";\n \
    \   for(int i = 0; i < s.length(); i++)\n    {\n        result += std.string.replace(s.substr(i,\
    \ 1), \"a\", \"z\") + std.string.replace(s.substr(i, 1), \"b\", \"y\") + std.string.replace(s.substr(i,\
    \ 1), \"c\", \"x\") + std.string.replace(s.substr(i, 1), \"d\", \"w\") + std.string.replace(s.substr(i,\
    \ 1), \"e\", \"v\") + std.string.replace(s.substr(i, 1), \"f\", \"u\") + std.string.replace(s.substr(i,\
    \ 1), \"g\", \"t\") + std.string.replace(s.substr(i, 1), \"h\", \"s\") + std.string.replace(s.substr(i,\
    \ 1), \"i\", \"r\") + std.string.replace(s.substr(i, 1), \"j\", \"q\") + std.string.replace(s.substr(i,\
    \ 1), \"k\", \"p\") + std.string.replace(s.substr(i, 1), \"l\", \"o\") + std.string.replace(s.substr(i,\
    \ 1), \"m\", \"n\") + std.string.replace(s.substr(i, 1), \"n\", \"m\") + std.string.replace(s.substr(i,\
    \ 1), \"o\", \"l\") + std.string.replace(s.substr(i, 1), \"p\", \"k\") + std.string.replace(s.substr(i,\
    \ 1), \"q\", \"r\");\n    }\n    return result;\n}\n/*\nCreate a function decrypt\
    \ that takes a string as an argument and\n    returns a string decrypted with\
    \ the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    encrypt('hi') returns 'lm'\n    encrypt('asdfghjkl') returns\
    \ 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n    encrypt('et') returns 'ix'\n\
    \    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += std.string.replace(s.substr(i,\
    \ 1), \"z\", \"a\") + std.string.replace(s.substr(i, 1), \"y\", \"b\") + std.string.replace(s.substr(i,\
    \ 1), \"x\", \"c\") + std.string.replace(s.substr(i, 1), \"w\", \"d\") + std.string.replace(s.substr(i,\
    \ 1), \"v\", \"e\") + std.string.replace(s.substr(i, 1), \"u\", \"f\") + std.string.replace(s.substr(i,\
    \ 1), \"t\", \"g\") + std.string.replace(s.substr(i, 1), \"s\", \"h\") + std.string.replace(s.substr(i,\
    \ 1), \"r\", \"i\") + std.string.replace(s.substr(i, 1), \"q\", \"j\") + ", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(s.at(i) + 2) % 26];\n    }\n    return result;\n}\n\
    </code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't work. `encrypt(\"hi\")` returns\
    \ `lm`, not `ewhjklnop`.\n<|/ c |>\n<| c |>\nOops, I missed that requirement.\
    \ I'll fix it.\n<|/ c |>\n<| c |>\nThanks for your help! I appreciate it.\n<|/\
    \ c |>\n<| a tags=c++,encryption,string |>\n<code>\n#include <iostream>\n#include\
    \ <string>\n#include <algorithm>\n#include <cmath>\nusing namespace std;", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n}\n\
    </code>\n<|/ a dscore=0 |>\n<| c |>\nThank you so much! I really appreciate it!\n\
    <|/ c |>\n<| c |>\nNo problem! If this answer helped you, please consider marking\
    \ it as accepted (click the check mark next to the answer). Thanks!\n<|/ c |>\n\
    <| c |>\nI tried to upvote but I don't have enough reputation to do so. Thanks\
    \ again!\n<|/ c |>\n<| c |>\nNo problem! Thanks for accepting my answer!\n<|/\
    \ c |>\n<| a tags=c++,encryption,string |>\n<code>\n#include <iostream>\n#include\
    \ <string>\n#include <cstring>\nusing namespace std;", "{\n    string alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n    string result = \"\";\n    for(int i\
    \ = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i) -\
    \ 97];\n    }\n    return result;\n}\n</code>\n<|/ a tags=encryption,c++,string\
    \ |>\n<| c |>\nThis doesn't seem to work. `encrypt(\"hi\")` returns `\"lm\"`,\
    \ not `\"ewhjklnop\"`.\n<|/ c |>\n<| c |>\nIt does work. Try it yourself. I tested\
    \ it before posting it.\n<|/ c |>\n<| c |>\nOh, I see. My mistake. Sorry.\n<|/\
    \ c |>\n<| c |>\nThis doesn't work for `encrypt(\"gf\")` returns `\"kj\"`, not\
    \ `\"kj\"`.\n<|/ c |>\n<| c |>\nIt does work. Try it yourself. I tested it before\
    \ posting it.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n#include\
    \ <string>\nusing namespace std;", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += std.string.rep(s.charAt(i),\
    \ 2);\n    }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThanks\
    \ so much for your help! I appreciate it!\n<|/ c |>\n<| c |>\nNo problem! If you\
    \ have any questions feel free to ask.\n<|/ c |>\n<| a tags=c++,encryption,string\
    \ |>\n<code>\n#include <iostream>\n#include <string>\n#include <cmath>\nusing\
    \ namespace std;", "{\n    string alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)std.math.mod(alphabet.indexOf(s[i]) + 2, 26)];\n\
    \    }\n    return result;\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n\
    <code>\nstring encrypt(string s)\n{\n    string alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[(int)std.math.mod(alphabet.indexOf(s[i]) + 2, 26)];\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=encryption,c++ |>\n<| a tags=encryption,c++\
    \ |>\n<code>\n#include <iostream>\n#include <string>\n#include <cmath>\nusing\
    \ namespace std;\nstring encrypt(string s)\n{\n    string alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[(int)std.math.mod(alphabet.indexOf(s[i]) + 2, 26)];\n\
    \    }\n    return result;\n}", "{\n    string result = \"\";\n    for(int i =\
    \ 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - 97];\n    }\n    return result;\n}\n/*\nCreate a function decrypt that takes\
    \ a string as an argument and\n    returns a string decrypted with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    encrypt('hi') returns 'lm'\n    encrypt('asdfghjkl') returns 'ewhjklnop'\n\
    \    encrypt('gf') returns 'kj'\n    encrypt('et') returns 'ix'\n    \n*/\nstring\
    \ decrypt(string s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(int)s.charAt(i) - 97];\n    }\n   \
    \ return result;\n}\n/*\nCreate a function rotate that takes a string as an argument\
    \ and\n    returns a string rotated in the manner described above.\n    For example:\n\
    \    rotate('hi') returns 'ih'\n    rotate('asdfghjkl') returns 'asdfgjhkl'\n\
    \    rotate('gf') returns 'gfhgf'\n    rotate('et') returns 'et'\n    \n*/\nstring\
    \ rotate(string s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(int)s.charAt(i) - 97];\n    }\n   \
    \ return result;\n}\n/*\nCreate a function rotate that takes a string as an argument\
    \ and\n    returns a string rotated in the manner described above.\n    For example:\n\
    \    rotate('hi') returns 'ih'\n    rotate('asdfghjkl') returns 'asdfgjhkl'\n\
    \    rotate('gf') returns 'gfhgf'\n    rotate('et') returns 'et'\n    \n*/\nstring\
    \ rotate(string s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(int)s.charAt(i) - 97];\n    }\n   \
    \ return result;\n}\n/*\nCreate a function rotate that takes a string as an argument\
    \ and\n    returns a string rotated in the manner described above.\n    For example:\n\
    \    rotate('hi') returns 'ih'\n    rotate('asdfghjkl') returns 'asdfgjhkl'\n\
    \    rotate('gf') returns 'gfhgf'\n    rotate('et') returns 'et'\n    \n*/\nstring\
    \ rotate(string s) \n{\n    string result = \"\";", "{\n    string result = \"\
    \";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    decrypt('lm')\
    \ returns 'hi'\n    decrypt('ewhjklnop') returns 'asdfghjkl'\n    decrypt('kj')\
    \ returns 'gf'\n    decrypt('ix') returns 'et'\n    \n*/\nstring decrypt(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    rotate('hi') returns 'jg'\n    rotate('asdfghjkl')\
    \ returns 'fasdfghjkl'\n    rotate('gf') returns 'gfgh'\n    rotate('et') returns\
    \ 'et'\n    \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n   \
    \ for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    rotate('jg')\
    \ returns 'hi'\n    rotate('fasdfghjkl') returns 'asdfghjkl'\n    rotate('gfgh')\
    \ returns 'gf'\n    rotate('et') returns 'et'\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];\n\
    \    }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThank you\
    \ so much! I really appreciate it!\n<|/ c |>\n<| c |>\nNo problem! If this answer\
    \ helped you out, please consider marking it as accepted :)\n<|/ c |>\n<| c |>\n\
    I tried to do that, but I guess I need a reputation of 15 to do that. Thank you\
    \ so much again!\n<|/ c |>\n<| c |>\nNo problem! Glad I could help!\n<|/ c |>\n\
    <| a tags=c++,encryption,string |>\n<code>\n#include <iostream>\n#include <string>\n\
    #include <algorithm>\n#include <cmath>\nusing namespace std;", "{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet.at(s.at(i) - 'a' + 2) % 26 + 'a';\n    }\n    return result;\n}\n\
    /*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    decrypt('lm') returns 'hi'\n    decrypt('ewhjklnop')\
    \ returns 'asdfghjkl'\n    decrypt('kj') returns 'gf'\n    decrypt('ix') returns\
    \ 'et'\n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n  \
    \  for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet.at(s.at(i)\
    \ - 'a' + 2) % 26 + 'a';\n    }\n    return result;\n}\n</code>\n<|/ a tags=c++,encryption,string\
    \ |>\n<| c |>\nThank you so much! I appreciate it!\n<|/ c |>\n<| c |>\nYou're\
    \ welcome! I hope it helps you!\n<|/ c |>\n<| c |>\nI got this error when I tried\
    \ to run it: \n`main.cpp:22:22: error: expected primary-expression before '<'\
    \ token\n     string alphabet = \"abcdefghijklmnopqrstuvwxyz\";`\n<|/ c |>\n<|\
    \ c |>\nI fixed the error, but now it says this: `main.cpp:22:22: error: expected\
    \ primary-expression before '<' token\n     string alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;`\n<|/ c |>\n<| c |>\nI fixed the error, but now it says this: `main.cpp:22:22:\
    \ error: expected primary-expression before '<' token\n     string alphabet =\
    \ \"abcdefghijklmnopqrstuvwxyz\";`\n<|/ c |>\n<| a tags=c++,encryption,string\
    \ |>\n<code>\n#include <iostream>\n#include <string>\n#include <algorithm>", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet.at(s.at(i) - 'a' + 1);\n    }\n    return result;\n\
    }\n</code>\n<|/ a |>\n<| c |>\nThanks so much! I appreciate it!\n<|/ c |>\n<|\
    \ c |>\nNo problem! If this answer helped you out, please consider marking it\
    \ as accepted so other people can see it easier. Thanks!\n<|/ c |>\n<| c |>\n\
    I did but my reputation is too low for it to show publicly\n<|/ c |>\n<| c |>\n\
    Ah okay. Thanks for letting me know!\n<|/ c |>\n<| a dscore=0 |>\n<code>\n#include\
    \ <iostream>\n#include <string>\n#include <cmath>\nusing namespace std;", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s.charAt(i) - 'a'];\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=encryption,c++,string |>\n<| c |>\nThis doesn't work. `encrypt(\"\
    asdfghjkl\")` returns `ewhjklnop`, not `ewhjklnop`.\n<|/ c |>\n<| c |>\nI fixed\
    \ the bug. Thanks for pointing it out. :)\n<|/ c |>\n<| c |>\nThis doesn't work.\
    \ `encrypt(\"asdfghjkl\")` returns `ewhjklnop`, not `ewhjklnop`.\n<|/ c |>\n<|\
    \ c |>\nI fixed the bug. Thanks for pointing it out. :)\n<|/ c |>\n<| c |>\nThis\
    \ doesn't work. `encrypt(\"asdfghjkl\")` returns `ewhjklnop`, not `ewhjklnop`.\n\
    <|/ c |>\n<| a dscore=1 |>\n<code>\n#include <iostream>\n#include <string>\n#include\
    \ <cstdlib>\n#include <ctime>\n#include <cmath>\nusing namespace std;", "{\n \
    \   string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n  \
    \      result += alphabet[(int)s.charAt(i) + 2];\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=encryption,c++,string |>\n<| c |>\nThis doesn't work. `encrypt('gf')\
    \ returns 'kj'` should be `encrypt('gf') returns 'kj'`\n<|/ c |>\n<| c |>\nYeah,\
    \ I missed that one. Fixed now. Thanks.\n<|/ c |>\n<| c |>\nThis doesn't work.\
    \ encrypt('gf') returns 'kj' should be encrypt('gf') returns 'kj'\n<|/ c |>\n\
    <| c |>\nI fixed it now. Thanks for pointing that out.\n<|/ c |>\n<| a dscore=0\
    \ |>\n<code>\n#include <iostream>\n#include <string>\n#include <cstdlib>\n#include\
    \ <ctime>\n#include <cmath>\n#include <cstring>\nusing namespace std;", "{\n \
    \   string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n  \
    \      result += alphabet[(int)s.charAt(i) - 97];\n    }\n    return result;\n\
    }", "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n \
    \   {\n        result += std.string.replace(s.chars[i], \"a\", \"z\") + std.string.replace(s.chars[i],\
    \ \"b\", \"y\") + std.string.replace(s.chars[i], \"c\", \"x\") + std.string.replace(s.chars[i],\
    \ \"d\", \"w\") + std.string.replace(s.chars[i], \"e\", \"v\") + std.string.replace(s.chars[i],\
    \ \"f\", \"u\") + std.string.replace(s.chars[i], \"g\", \"t\") + std.string.replace(s.chars[i],\
    \ \"h\", \"s\") + std.string.replace(s.chars[i], \"i\", \"r\") + std.string.replace(s.chars[i],\
    \ \"j\", \"q\") + std.string.replace(s.chars[i], \"k\", \"p\") + std.string.replace(s.chars[i],\
    \ \"l\", \"o\") + std.string.replace(s.chars[i], \"m\", \"n\") + std.string.replace(s.chars[i],\
    \ \"n\", \"m\") + std.string.replace(s.chars[i], \"o\", \"l\") + std.string.replace(s.chars[i],\
    \ \"p\", \"k\") + std.string.replace(s.chars[i], \"q\", \"r\");\n    }\n    return\
    \ result;\n}\n/*\nCreate a function decrypt that takes a string as an argument\
    \ and\n    returns a string decrypted with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    encrypt('hi') returns\
    \ 'lm'\n    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns\
    \ 'kj'\n    encrypt('et') returns 'ix'\n    \n*/\nstring decrypt(string s) \n\
    {\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += std.string.replace(s.chars[i], \"z\", \"a\") + std.string.replace(s.chars[i],\
    \ \"y\", \"b\") + std.string.replace(s.chars[i], \"x\", \"c\") + std.string.replace(s.chars[i],\
    \ \"w\", \"d\") + std.string.replace(s.chars[i], \"v\", \"e\") + std.string.replace(s.chars[i],\
    \ \"u\", \"f\") + std.string.replace(s.chars[i], \"t\", \"g\") + std.string.replace(s.chars[i],\
    \ \"s\", \"h\") + std.string.replace(s.chars[i], \"r\", \"i\") + std.string.replace(s.chars[i],\
    \ \"q\", \"j\") + std.string.replace(s.chars[i], \"p\", \"k\") + std.string.replace(s.chars[i],\
    \ \"o\", \"l\") + st", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(int)s.charAt(i) - 'a'] * 2;\n    }\n\
    \    return result;\n}\n/*\nCreate a function decrypt that takes a string as an\
    \ argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    encrypt('hi')\
    \ returns 'lm'\n    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf')\
    \ returns 'kj'\n    encrypt('et') returns 'ix'\n    \n*/\nstring decrypt(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i) - 'a'] / 2;\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rot13 that takes a string as an argument and\n\
    \    returns a string rotated 13 places. \n    For example:\n    rot13('hi') returns\
    \ 'kj'\n    rot13('asdfghjkl') returns 'ix'\n    rot13('gf') returns 'gfkj'\n\
    \    rot13('et') returns 'et'\n    \n*/\nstring rot13(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s.charAt(i) - 'a'] + 13;\n    }\n    return result;\n}\n/*\n\
    Create a function rot13 that takes a string as an argument and\n    returns a\
    \ string rotated 13 places. \n    For example:\n    rot13('hi') returns 'kj'\n\
    \    rot13('asdfghjkl') returns 'ix'\n    rot13('gf') returns 'gfkj'\n    rot13('et')\
    \ returns 'et'\n    \n*/\nstring rot13(string s) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - 'a'] + 13;\n    }\n    return result;\n}\n/*\nCreate a function rot13 that\
    \ takes a string as an argument and\n    returns a string rotated 13 places. \n\
    \    For example:\n    rot13('hi') returns 'kj'\n    rot13('asdfghjkl') returns\
    \ 'ix'\n    rot13('gf') returns 'gfkj'\n    rot13('et') returns 'et'\n    \n*/\n\
    string ", "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[((s.at(i) - 'a' + 2) % 26) + 'a'];\n    }\n\
    \    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThank you so much\
    \ for this! I really appreciate it. I will try to implement this into my code.\
    \ Thank you so much again!\n<|/ c |>\n<| c |>\nNo problem. Good luck!\n<|/ c |>\n\
    <| c |>\nI implemented this into my code and it works perfectly! Thank you so\
    \ much!\n<|/ c |>\n<| a tags=encryption,c++,string |>\n<code>\n#include <iostream>\n\
    #include <string>\n#include <cmath>\nusing namespace std;\nstring alphabet = \"\
    abcdefghijklmnopqrstuvwxyz\";\nstring encrypt(string s)\n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[((s.at(i)\
    \ - 'a' + 2) % 26) + 'a'];\n    }\n    return result;\n}", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - alphabet.length()];\n    }\n    return result;\n}\n</code>\n<|/ a tags=encryption,c++,string\
    \ |>\n<| c |>\nI appreciate your effort, but this doesn't work. `encrypt('gf')\
    \ returns 'kj'` should be `encrypt('gf') returns 'kj'`\n<|/ c |>\n<| c |>\nI fixed\
    \ the bug. Sorry about that.\n<|/ c |>\n<| c |>\nI appreciate your effort, but\
    \ this doesn't work. `encrypt('gf') returns 'kj'` should be `encrypt('gf') returns\
    \ 'kj'`\n<|/ c |>\n<| c |>\nI fixed the bug. Sorry about that.\n<|/ c |>\n<| c\
    \ |>\nI appreciate your effort, but this doesn't work. `encrypt('gf') returns\
    \ 'kj'` should be `encrypt('gf') returns 'kj'`\n<|/ c |>\n<| a dscore=1 |>\n<code>\n\
    #include <iostream>\n#include <string>\n#include <cstdlib>\n#include <ctime>\n\
    #include <cmath>\nusing namespace std;", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += std.string.reverse(s.substr(i,\
    \ 1));\n    }\n    return result;\n}\n/*\nCreate a function decrypt that takes\
    \ a string as an argument and\n    returns a string decrypted with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    decrypt('lm') returns 'hi'\n    decrypt('ewhjklnop') returns 'asdfghjkl'\n\
    \    decrypt('kj') returns 'gf'\n    decrypt('ix') returns 'et'\n    \n*/\nstring\
    \ decrypt(string s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += std.string.reverse(s.substr(i, 1));\n    }\n\
    \    return result;\n}\n/*\nCreate a function rot13 that takes a string as an\
    \ argument and\n    returns a string encrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by 13 multiplied to 13 places.\n    For example:\n    rot13('hi')\
    \ returns 'nj'\n    rot13('asdfghjkl') returns 'kjh'\n    rot13('gf') returns\
    \ 'gf'\n    rot13('et') returns 'et'\n    \n*/\nstring rot13(string s) \n{\n \
    \   string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n  \
    \      result += std.string.reverse(s.substr(i, 1));\n    }\n    return result;\n\
    }\n/*\nCreate a function rot13 that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by 13 multiplied\
    \ to 13 places.\n    For example:\n    rot13('nj') returns 'hi'\n    rot13('kjh')\
    \ returns 'asdfghjkl'\n    rot13('gf') returns 'gf'\n    rot13('et') returns 'et'\n\
    \    \n*/\nstring rot13(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += std.string.reverse(s.substr(i,\
    \ 1));\n    }\n    return result;\n}\n/*\nCreate a function rot13 that takes a\
    \ string as an argument and\n    returns a string encrypted with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters ", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(int)(((int)s[i] + 2) % 26)];\n    }\n\
    \    return result;\n}", "{\n    string alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[(int)s.at(i) - 2];\n    }\n    return result;\n}\n\
    </code>\n<|/ a dscore=0 |>\n<| c |>\nThank you so much for the help! I really\
    \ appreciate it!\n<|/ c |>\n<| c |>\nNo problem! If this answer solved your problem,\
    \ please mark it as accepted by clicking the check mark next to it. This helps\
    \ other people who may have a similar problem know that the answer works.\n<|/\
    \ c |>\n<| c |>\nI did but since my reputation is less than 15 it won't show publicly\n\
    <|/ c |>\n<| c |>\nNo worries, glad I could help!\n<|/ c |>\n<| a |>\n<code>\n\
    #include <iostream>\n#include <string>\n#include <cmath>\nusing namespace std;",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += std.string.rep(s.charAt(i), 2);\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=string,encryption,c++,arrays |>\n<| c |>\nThis doesn't\
    \ work if the string contains any character that is not a letter. For example,\
    \ if `encrypt(\"abc\")` returns `kj`, then `encrypt(\"abd\")` returns `kj`, which\
    \ is not the correct answer.\n<|/ c |>\n<| c |>\nThanks for pointing that out.\
    \ I've fixed the code now.\n<|/ c |>\n<| c |>\nThis doesn't work if the string\
    \ contains any character that is not a letter. For example, if `encrypt(\"abc\"\
    )` returns `kj`, then `encrypt(\"abd\")` returns `kj`, which is not the correct\
    \ answer.\n<|/ c |>\n<| c |>\nThanks for pointing that out. I've fixed the code\
    \ now.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n#include <string>\n\
    #include <cctype>\nusing namespace std;", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    decrypt('lm')\
    \ returns 'hi'\n    decrypt('ewhjklnop') returns 'asdfghjkl'\n    decrypt('kj')\
    \ returns 'gf'\n    decrypt('ix') returns 'et'\n    \n*/\nstring decrypt(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    rotate('hi') returns 'asdfghjkl'\n   \
    \ rotate('asdfghjkl') returns 'hi'\n    rotate('gf') returns 'et'\n    rotate('et')\
    \ returns 'gf'\n    \n*/\nstring rotate(string s) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    rotate('hi')\
    \ returns 'asdfghjkl'\n    rotate('asdfghjkl') returns 'hi'\n    rotate('gf')\
    \ returns 'et'\n    rotate('et') returns 'gf'\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    rotate('hi') ", "{\n    string alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n    string result = \"\";\n    for(int i\
    \ = 0; i < s.length(); i++)\n    {\n        result += alphabet[alphabet.indexOf(s.charAt(i))\
    \ + 2];\n    }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nI\
    \ appreciate your answer, but I'm looking for a way to do this without using any\
    \ built-in functions. I understand that my code doesn't work because of the way\
    \ the alphabet is defined, but I'm looking for a way to do this without using\
    \ any built-in functions.\n<|/ c |>\n<| c |>\nI edited my answer to include a\
    \ solution that doesn't use any built-in functions. I hope it helps.\n<|/ c |>\n\
    <| c |>\nThank you so much! I appreciate your help!\n<|/ c |>\n<| a tags=encryption,c++,string\
    \ |>\n<code>\n#include <iostream>\n#include <string>\n#include <cstring>", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += s.charAt(i) + s.charAt(i);\n    }\n    return result;\n}\n/*\n\
    Create a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n    encrypt('asdfghjkl')\
    \ returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n    encrypt('et') returns\
    \ 'ix'\n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n  \
    \  for(int i = 0; i < s.length(); i++)\n    {\n        result += s.charAt(i) +\
    \ s.charAt(i);\n    }\n    return result;\n}\n/*\nCreate a function rotate that\
    \ takes a string as an argument and\n    returns a string rotated in the manner\
    \ described above.\n    For example:\n    rotate('hi') returns 'ih'\n    rotate('asdfghjkl')\
    \ returns 'asdfgjkl'\n    rotate('gf') returns 'gfgh'\n    rotate('et') returns\
    \ 'et'\n    \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n   \
    \ for(int i = 0; i < s.length(); i++)\n    {\n        result += s.charAt(i) +\
    \ s.charAt(i);\n    }\n    return result;\n}\n/*\nCreate a function rotate that\
    \ takes a string as an argument and\n    returns a string rotated in the manner\
    \ described above.\n    For example:\n    rotate('hi') returns 'ih'\n    rotate('asdfghjkl')\
    \ returns 'asdfgjkl'\n    rotate('gf') returns 'gfgh'\n    rotate('et') returns\
    \ 'et'\n    \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n   \
    \ for(int i = 0; i < s.length(); i++)\n    {\n        result += s.charAt(i) +\
    \ s.charAt(i);\n    }\n    return result;\n}\n/*\nCreate a function rotate that\
    \ takes a string as an argument and\n    returns a string rotated in the manner\
    \ described above.\n    For example:\n    rotate('hi') returns 'ih'\n    rotate('asdfghjkl')\
    \ returns 'asdfgjkl'\n    rotate('gf') returns 'gfgh'\n    rotate('et') returns\
    \ 'et'\n    \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n   \
    \ for(int i = 0; i < s.length(); i++)\n    {\n        result += s.charAt(", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(s.at(i) - 'a') % 26];\n    }\n    return result;\n\
    }\n/*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    decrypt('lm') returns 'hi'\n    decrypt('ewhjklnop')\
    \ returns 'asdfghjkl'\n    decrypt('kj') returns 'gf'\n    decrypt('ix') returns\
    \ 'et'\n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n  \
    \  for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(s.at(i)\
    \ - 'a') + 26];\n    }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<|\
    \ c |>\nThis doesn't seem to work. `encrypt('gf') returns 'kj'` should be `'kj'`\n\
    <|/ c |>\n<| c |>\nI fixed the bug, thanks for pointing it out. I was using 'a'\
    \ and 'z' instead of 'a' and 'z' + 1.\n<|/ c |>\n<| c |>\nI fixed the bug, thanks\
    \ for pointing it out. I was using 'a' and 'z' instead of 'a' and 'z' + 1.\n<|/\
    \ c |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n#include <string>\n#include\
    \ <cmath>\n#include <algorithm>\nusing namespace std;", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nI appreciate\
    \ the help, but I do not understand how this would work. Could you please explain\
    \ how this would work?\n<|/ c |>\n<| c |>\nI added some comments to my answer.\
    \ Hope it helps.\n<|/ c |>\n<| c |>\nI appreciate the help, but I do not understand\
    \ how this would work. Could you please explain how this would work?\n<|/ c |>\n\
    <| c |>\nI added some comments to my answer. Hope it helps.\n<|/ c |>\n<| c |>\n\
    I appreciate the help, but I do not understand how this would work. Could you\
    \ please explain how this would work?\n<|/ c |>\n<| a |>\n<code>\n#include <iostream>\n\
    #include <string>\n#include <cstdlib>\n#include <ctime>\n#include <cmath>\n#include\
    \ <cstring>\nusing namespace std;", "{\n    string alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[(int)s.at(i)];\n    }\n    return result;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nThis doesn't work. `encrypt(\"hi\")` returns `\"lm\"\
    ` instead of `\"ewhjklnop\"`\n<|/ c |>\n<| c |>\nI fixed the bug, thanks for pointing\
    \ it out!\n<|/ c |>\n<| c |>\nThis still doesn't work. `encrypt(\"hi\")` returns\
    \ `\"lm\"` instead of `\"ewhjklnop\"`\n<|/ c |>\n<| c |>\nI fixed the bug, thanks\
    \ for pointing it out!\n<|/ c |>\n<| a dscore=0 |>\n<code>\nstring encrypt(string\
    \ s) \n{\n    string alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=c++,encryption |>\n<| c |>\n\
    This doesn't work. `encrypt(\"hi\")` returns `\"lm\"` instead of `\"ewhjklnop\"\
    `\n<|/ c |>\n<| c |>\nI fixed the bug, thanks for pointing it out!\n<|/ c |>\n\
    <| a tags=c++,encryption |>\n<code>\n#include <iostream>\n#include <string>\n\
    using namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += std.string(std.rotate(s.charAt(i), 2));\n   \
    \ }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=string,encryption,c++\
    \ |>\n<code>\n#include <iostream>\n#include <string>\n#include <algorithm>\nusing\
    \ namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function decrypt that takes a string as an argument\
    \ and\n    returns a string decrypted with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    encrypt('hi') returns\
    \ 'lm'\n    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns\
    \ 'kj'\n    encrypt('et') returns 'ix'\n    \n*/\nstring decrypt(string s) \n\
    {\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n}\n\
    /*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    rotate('hi') returns 'kj'\n    rotate('asdfghjkl')\
    \ returns 'gfhijkl'\n    rotate('gf') returns 'gfhijkl'\n    rotate('et') returns\
    \ 'gfhijkl'\n    \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n\
    \    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    rotate('hi')\
    \ returns 'kj'\n    rotate('asdfghjkl') returns 'gfhijkl'\n    rotate('gf') returns\
    \ 'gfhijkl'\n    rotate('et') returns 'gfhijkl'\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.", "{\n    string alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s.charAt(i) - 97];\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=encryption,c++ |>\n<| c |>\nThanks for the help! I appreciate\
    \ it!\n<|/ c |>\n<| c |>\nNo problem! If this answer helped you, please consider\
    \ accepting it by clicking the checkmark next to it.\n<|/ c |>\n<| c |>\nI did\
    \ but I have to wait 2 minutes before I can accept it\n<|/ c |>\n<| c |>\nNo problem!\
    \ Glad I could help!\n<|/ c |>\n<| a tags=encryption,c++ |>\n<code>\n#include\
    \ <iostream>\n#include <string>\n#include <cstring>\nusing namespace std;", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += std.string.rotate(s.charAt(i), 2);\n    }\n    return result;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't work if the string contains\
    \ any characters that are not in the alphabet. For example, encrypt(\"abc\") returns\
    \ \"cba\" instead of \"abca\".\n<|/ c |>\n<| c |>\nThanks for pointing that out.\
    \ I edited my answer to include a solution that doesn't require that restriction.\n\
    <|/ c |>\n<| a dscore=0 |>\n<code>\nstring encrypt(string s, string alphabet)\n\
    {\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet.charAt((alphabet.indexOf(s.charAt(i)) + 2) % alphabet.length);\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=encryption,string,c++ |>\n\
    <| a dscore=0 |>\n<code>\n#include <iostream>\n#include <string>\n#include <algorithm>\n\
    using namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n    }\n    return\
    \ result;\n}", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += std.string.replace(s.substr(i, 1), \"a\", \"\
    z\") + std.string.replace(s.substr(i, 1), \"b\", \"y\") + std.string.replace(s.substr(i,\
    \ 1), \"c\", \"x\") + std.string.replace(s.substr(i, 1), \"d\", \"w\") + std.string.replace(s.substr(i,\
    \ 1), \"e\", \"v\") + std.string.replace(s.substr(i, 1), \"f\", \"u\") + std.string.replace(s.substr(i,\
    \ 1), \"g\", \"t\") + std.string.replace(s.substr(i, 1), \"h\", \"s\") + std.string.replace(s.substr(i,\
    \ 1), \"i\", \"r\") + std.string.replace(s.substr(i, 1), \"j\", \"q\") + std.string.replace(s.substr(i,\
    \ 1), \"k\", \"p\") + std.string.replace(s.substr(i, 1), \"l\", \"o\") + std.string.replace(s.substr(i,\
    \ 1), \"m\", \"n\") + std.string.replace(s.substr(i, 1), \"n\", \"m\") + std.string.replace(s.substr(i,\
    \ 1), \"o\", \"p\") + std.string.replace(s.substr(i, 1), \"p\", \"q\") + std.string.replace(s.substr(i,\
    \ 1), \"q\", \"r\") + std.string.replace(s.substr(i, 1), \"r\", \"s\") + std.string.replace(s.substr(i,\
    \ 1), \"s\", \"t\") + std.string.replace(s.substr(i, 1), \"t\", \"u\") + std.string.replace(s.substr(i,\
    \ 1), \"u\", \"v\") + std.string.replace(s.substr(i, 1), \"v\", \"w\") + std.string.replace(s.substr(i,\
    \ 1), \"w\", \"x\") + std.string.replace(s.substr(i, 1), \"x\", \"y\") + std.string.replace(s.substr(i,\
    \ 1), \"y\", \"z\");\n    }\n    return result;\n}\n/*\nCreate a function decrypt\
    \ that takes a string as an argument and\n    returns a string decrypted with\
    \ the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    encrypt('hi') returns 'lm'\n    encrypt('asdfghjkl') returns\
    \ 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n    encrypt('et') returns 'ix'\n\
    \    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += std.string.replace(s.substr(i,\
    \ 1), \"z\", \"a\") + std.string.replace(s.substr(i, 1), \"y\", \"b\") + st",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[(int)s.charAt(i) - alphabet.length()];\n    }\n  \
    \  return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThank you so much!\
    \ I really appreciate it!\n<|/ c |>\n<| c |>\nNo problem! If this answer helped\
    \ you, please consider marking it as accepted (by clicking the check mark next\
    \ to it). That way the question will no longer show up as unanswered in the list\
    \ of questions.\n<|/ c |>\n<| c |>\nI did it now! Thanks again!\n<|/ c |>\n<|\
    \ a tags=c++,encryption,string |>\n<code>\n#include <iostream>\n#include <string>\n\
    #include <cstring>\nusing namespace std;", "{\n    string alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[(int)s.at(i) - 97];\n    }\n    return result;\n}\n\
    </code>\n<|/ a tags=c++,encryption,string |>\n<| c |>\nThis doesn't work. `s.at(i)`\
    \ returns a `char`, not a `string`.\n<|/ c |>\n<| c |>\nYes, I realized that after\
    \ I posted it. I edited my answer to fix it.\n<|/ c |>\n<| c |>\nThis doesn't\
    \ work. `s.at(i)` returns a `char`, not a `string`.\n<|/ c |>\n<| c |>\nYes, I\
    \ realized that after I posted it. I edited my answer to fix it.\n<|/ c |>\n<|\
    \ c |>\nThis doesn't work. `s.at(i)` returns a `char`, not a `string`.\n<|/ c\
    \ |>\n<| a tags=c++,encryption,string |>\n<code>\n#include <iostream>\n#include\
    \ <string>\n#include <cstring>\nusing namespace std;", "{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(s.at(i)\
    \ - 'a') % 26];\n    }\n    return result;\n}\n</code>\n<|/ a tags=encryption,c++,string\
    \ |>\n<| c |>\nThanks so much! I appreciate it!\n<|/ c |>\n<| c |>\nNo problem!\
    \ If this answer solved your problem, please consider marking it as accepted (by\
    \ clicking the check mark next to it).\n<|/ c |>\n<| c |>\nI did but since I'm\
    \ new it says I have to wait 2 minutes before I can mark it as the answer\n<|/\
    \ c |>\n<| c |>\nNo problem! Glad I could help!\n<|/ c |>\n<| a tags=encryption,c++,string\
    \ |>\n<code>\n#include <iostream>\n#include <string>\nusing namespace std;", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += std.string(s.at(i) + s.at(i + 1) + s.at(i + 2));\n    }\n  \
    \  return result;\n}\n/*\nCreate a function decrypt that takes a string as an\
    \ argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    encrypt('hi')\
    \ returns 'lm'\n    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf')\
    \ returns 'kj'\n    encrypt('et') returns 'ix'\n    \n*/\nstring decrypt(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += std.string(s.at(i) - s.at(i + 1) + s.at(i + 2));\n \
    \   }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated in the manner described above.\n\
    \    For example:\n    rotate('hi') returns 'gfhi'\n    rotate('asdfghjkl') returns\
    \ 'kjldfgieh'\n    rotate('gf') returns 'gfhi'\n    rotate('et') returns 'gfhi'\n\
    \    \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += std.string(s.at(i) + s.at(i\
    \ + 1) + s.at(i + 2));\n    }\n    return result;\n}\n/*\nCreate a function rotate\
    \ that takes a string as an argument and\n    returns a string rotated in the\
    \ manner described above.\n    For example:\n    rotate('hi') returns 'gfhi'\n\
    \    rotate('asdfghjkl') returns 'kjldfgieh'\n    rotate('gf') returns 'gfhi'\n\
    \    rotate('et') returns 'gfhi'\n    \n*/\nstring rotate(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += std.string(s.at(i) - s.at(i + 1) + s.at(i + 2));\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated in the manner described above.\n    For example:\n    rotate('hi')\
    \ returns 'gfhi'\n    rotate('asdfghjkl') returns 'kjldfg", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += std.string.rep(s.charAt(i),\
    \ std.math.pow(2, i));\n    }\n    return result;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nThanks so much for your help! I really appreciate it! I really\
    \ appreciate it! I really appreciate it! I really appreciate it! I really appreciate\
    \ it! I really appreciate it! I really appreciate it! I really appreciate it!\
    \ I really appreciate it! I really appreciate it! I really appreciate it! I really\
    \ appreciate it! I really appreciate it! I really appreciate it! I really appreciate\
    \ it! I really appreciate it! I really appreciate it! I really appreciate it!\
    \ I really appreciate it! I really appreciate it! I really appreciate it! I really\
    \ appreciate it! I really appreciate it! I really appreciate it! I really appreciate\
    \ it! I really appreciate it! I really appreciate it! I really appreciate it!\
    \ I really appreciate it! I really appreciate it! I really appreciate it! I really\
    \ appreciate it! I really appreciate it! I really appreciate it! I really appreciate\
    \ it! I really appreciate it! I really appreciate it! I really appreciate it!\
    \ I really appreciate it! I really appreciate it! I really appreciate it! I really\
    \ appreciate it! I really appreciate it! I really appreciate it! I really appreciate\
    \ it! I really appreciate it! I really appreciate it! I really appreciate it!\
    \ I really appreciate it! I really appreciate it! I really appreciate it! I really\
    \ appreciate it! I really appreciate it! I really appreciate it! I really appreciate\
    \ it! I really appreciate it! I really appreciate it! I really appreciate it!\
    \ I really appreciate it! I really appreciate it! I really appreciate it! I really\
    \ appreciate it! I really appreciate it! I really appreciate it! I really appreciate\
    \ it! I really appreciate it! I really appreciate it! I really appreciate it!\
    \ I really appreciate it! I really appreciate it! I really appreciate it! I really\
    \ appreciate it! I really appreciate it! I really appreciate it! I really appreciate\
    \ it! ", "{\n    string alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s.at(i) - 97];\n    }\n    return result;\n}\n</code>\n<|/\
    \ a dscore=0 |>\n<| c |>\nThanks for your answer. I am not allowed to use any\
    \ libraries other than std.\n<|/ c |>\n<| c |>\nI edited my answer to include\
    \ a solution that does not use any libraries.\n<|/ c |>\n<| c |>\nThanks for your\
    \ answer. I am not allowed to use any libraries other than std.\n<|/ c |>\n<|\
    \ c |>\nI edited my answer to include a solution that does not use any libraries.\n\
    <|/ c |>\n<| c |>\nThanks for your answer. I am not allowed to use any libraries\
    \ other than std.\n<|/ c |>\n<| a tags=encryption,c++ |>\n<code>\n#include <iostream>\n\
    #include <string>\n#include <vector>\n#include <algorithm>\nusing namespace std;",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n}\n\
    /*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n    encrypt('asdfghjkl')\
    \ returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n    encrypt('et') returns\
    \ 'ix'\n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n  \
    \  for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string encrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    encrypt('hi')\
    \ returns 'lm'\n    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf')\
    \ returns 'kj'\n    encrypt('et') returns 'ix'\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n    encrypt('asdfghjkl')\
    \ returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n    encrypt('et') returns\
    \ 'ix'\n    \n*/\nstring rotateDecrypt(string s) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string encrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n", "{\n    string result = \"\"\
    ;\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += std.string(std.rotate(s.charAt[i])\
    \ + std.rotate(s.charAt[i]) + std.rotate(s.charAt[i]));\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=string,c++,encryption |>\n<| c |>\nThe `rotate` function\
    \ was introduced in C++11. OP tagged his question as C++11. `std::rotate` was\
    \ introduced in C++11.\n<|/ c |>\n<| c |>\nI see that now. Thanks for the clarification.\n\
    <|/ c |>\n<| c |>\nI added a solution that uses `std::rotate`\n<|/ c |>\n<| a\
    \ tags=string,c++,encryption |>\n<code>\n#include <iostream>\n#include <string>\n\
    #include <algorithm>", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(int)(((int)s[i] + 2) % 26)];\n    }\n\
    \    return result;\n}", "{\n    string result = \"\";\n    for(int i = 0; i <\
    \ s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i) - 'a'];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    encrypt('hi')\
    \ returns 'lm'\n    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf')\
    \ returns 'kj'\n    encrypt('et') returns 'ix'\n    \n*/\nstring decrypt(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i) - 'a'];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rotate that takes a string as an argument\
    \ and\n    returns a string rotated in the manner described above.\n    For example:\n\
    \    rotate('hi') returns 'ihm'\n    rotate('asdfghjkl') returns 'asdfgjhkl'\n\
    \    rotate('gf') returns 'gfedcba'\n    rotate('et') returns 'etgfec'\n    \n\
    */\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int i = 0;\
    \ i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i) - 'a'];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated in the manner described above.\n\
    \    For example:\n    rotate('hi') returns 'ihm'\n    rotate('asdfghjkl') returns\
    \ 'asdfgjhkl'\n    rotate('gf') returns 'gfedcba'\n    rotate('et') returns 'etgfec'\n\
    \    \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - 'a'];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated in the manner described\
    \ above.\n    For example:\n    rotate('hi') returns 'ihm'\n    rotate('asdfghjkl')\
    \ returns 'asdfgjhkl'\n    rotate('gf') returns 'gfedcba'\n    rotate('et') returns\
    \ 'et", "{\n    string result = \"\";\n    for(int i = 0; i < s.length; i++)\n\
    \    {\n        result += std.string.rotate(s.charAt(i), 2);\n    }\n    return\
    \ result;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't work. `rotate`\
    \ doesn't rotate by two characters, it rotates by `n` characters. So `rotate('z',\
    \ 2)` returns `'zz'`, not `'z'`.\n<|/ c |>\n<| c |>\nAh, I see what you mean.\
    \ Yes, this doesn't work. `rotate` doesn't rotate by two characters, it rotates\
    \ by `n` characters. So `rotate('z', 2)` returns `'zz'`, not `'z'`.\n<|/ c |>\n\
    <| c |>\nYes, I see what you mean. Yes, this doesn't work. `rotate` doesn't rotate\
    \ by two characters, it rotates by `n` characters. So `rotate('z', 2)` returns\
    \ `'zz'`, not `'z'`.\n<|/ c |>\n<| c |>\nI edited the answer to fix the bug. Thanks\
    \ for pointing it out.\n<|/ c |>\n<| a tags=string,c++,encryption |>\n<code>\n\
    #include <iostream>\n#include <string>\n#include <algorithm>", "{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += s.charAt(i) + s.charAt(i);\n    }\n    return result;\n}\n/*\nCreate a function\
    \ decrypt that takes a string as an argument and\n    returns a string decrypted\
    \ with the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    encrypt('hi') returns 'lm'\n    encrypt('asdfghjkl') returns\
    \ 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n    encrypt('et') returns 'ix'\n\
    \    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += s.charAt(i) + s.charAt(i);\n\
    \    }\n    return result;\n}\n/*\nCreate a function rot13 that takes a string\
    \ as an argument and\n    returns a string rotated 13 places clockwise.\n    For\
    \ example:\n    rot13('hi') returns 'mnopqr'\n    rot13('asdfghjkl') returns 'zxcvbnm'\n\
    \    rot13('gf') returns 'yz'\n    rot13('et') returns 'bx'\n    \n*/\nstring\
    \ rot13(string s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += (char)(s.charAt(i) + 13);\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rot13 that takes a string as an argument and\n\
    \    returns a string rotated 13 places counterclockwise.\n    For example:\n\
    \    rot13('hi') returns 'mnopqr'\n    rot13('asdfghjkl') returns 'zxcvbnm'\n\
    \    rot13('gf') returns 'yz'\n    rot13('et') returns 'bx'\n    \n*/\nstring\
    \ rot13(string s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += (char)(s.charAt(i) - 13);\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rot13 that takes a string as an argument and\n\
    \    returns a string rotated 13 places clockwise.\n    For example:\n    rot13('hi')\
    \ returns 'mnopqr'\n    rot13('asdfghjkl') returns 'zxcvbnm'\n    rot13('gf')\
    \ returns 'yz'\n    rot13('et') returns 'bx'\n    \n*/", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += std.string.rep(s.charAt(i),\
    \ std.math.pow(s.charAt(i), 2));\n    }\n    return result;\n}\n/*\nCreate a function\
    \ decrypt that takes a string as an argument and\n    returns a string decrypted\
    \ with the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    encrypt('hi') returns 'lm'\n    encrypt('asdfghjkl') returns\
    \ 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n    encrypt('et') returns 'ix'\n\
    \    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += std.string.rep(s.charAt(i),\
    \ std.math.pow(s.charAt(i), 2));\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rotate that takes a string as an argument and\n    returns a string rotated\
    \ with the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    encrypt('hi') returns 'lm'\n    encrypt('asdfghjkl') returns\
    \ 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n    encrypt('et') returns 'ix'\n\
    \    \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += std.string.rep(s.charAt(i),\
    \ std.math.pow(s.charAt(i), 2));\n    }\n    return result;\n}\n/*\nCreate a function\
    \ decrypt that takes a string as an argument and\n    returns a string decrypted\
    \ with the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    encrypt('hi') returns 'lm'\n    encrypt('asdfghjkl') returns\
    \ 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n    encrypt('et') returns 'ix'\n\
    \    \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += std.string.rep(s.charAt(i),\
    \ std.math.pow(s.charAt(i), 2));\n    }\n    return result;\n}\n/*\nCreate a function\
    \ encrypt that takes a string as an argument and\n", "{\n    string result = \"\
    \";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += std.string.rep(std.string.rotl(s.charAt(i)),2);\n\
    \    }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't\
    \ work if you pass it a non-string argument. `encrypt(\"hi\")` returns `\"hi\"\
    ` instead of `\"lm\"`.\n<|/ c |>\n<| c |>\nIt does work, just not as expected.\
    \ Try it yourself with `encrypt(\"hi\")`.\n<|/ c |>\n<| c |>\nYes, it does. Try\
    \ it yourself with `encrypt(\"hi\")`.\n<|/ c |>\n<| c |>\nYes, it does. Try it\
    \ yourself with `encrypt(\"hi\")`.\n<|/ c |>\n<| c |>\nIt doesn't work if you\
    \ pass it a non-string argument. `encrypt(\"hi\")` returns `\"hi\"` instead of\
    \ `\"lm\"`.\n<|/ c |>\n<| a dscore=0 |>\n<code>\nstring encrypt(string s)\n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += std.string.rep(std.string.rotl(s.charAt(i)),2);\n    }\n   \
    \ return result;\n}\n</code>\n<|/ a tags=string,c++,encryption |>\n<| c |>\nPlease\
    \ add some explanation to your answer such that others can learn from it\n<|/\
    \ c |>\n<| c |>\nThis doesn't work if you pass it a non-string argument. `encrypt(\"\
    hi\")` returns `\"hi\"` instead of `\"lm\"`.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n\
    #include <iostream>\n#include <string>\n#include <algorithm>\n#include <cmath>\n\
    using namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(int)(((int)s.at(i) - 97 + 2) % 26)];\n\
    \    }\n    return result;\n}", "{\n    string result = \"\";\n    for(int i =\
    \ 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[i]];\n   \
    \ }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    encrypt('hi')\
    \ returns 'lm'\n    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf')\
    \ returns 'kj'\n    encrypt('et') returns 'ix'\n    \n*/\nstring decrypt(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s[s.length() - i - 1]];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rotate that takes a string as an argument\
    \ and\n    returns a string rotated in the manner described above.\n    For example:\n\
    \    rotate('hi') returns 'gfhi'\n    rotate('asdfghjkl') returns 'kjldfgieh'\n\
    \    rotate('gf') returns 'gfhi'\n    rotate('et') returns 'gfhi'\n    \n*/\n\
    string rotate(string s) \n{\n    string result = \"\";\n    for(int i = 0; i <\
    \ s.length(); i++)\n    {\n        result += alphabet[(int)s[s.length() - i -\
    \ 1]];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated in the manner described\
    \ above.\n    For example:\n    rotate('hi') returns 'gfhi'\n    rotate('asdfghjkl')\
    \ returns 'kjldfgieh'\n    rotate('gf') returns 'gfhi'\n    rotate('et') returns\
    \ 'gfhi'\n    \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n \
    \   for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[s.length()\
    \ - i - 1]];\n    }\n    return result;\n}\n/*\nCreate a function rotate that\
    \ takes a string as an argument and\n    returns a string rotated in the manner\
    \ described above.\n    For example:\n    rotate('hi') returns 'gfhi'\n    rotate('asdfghjkl')\
    \ returns 'kjldfgieh'\n    rotate('gf') returns 'gfhi'\n    rotate('et') returns\
    \ 'gfhi'\n    \n*/\nstring rotate(string s) \n{\n    string ", "{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length; i++)\n    {\n        result\
    \ += std.string(std.rotate(s.at(i), std.rotate(s.at(i), 2)));\n    }\n    return\
    \ result;\n}\n</code>\n<|/ a tags=string,c++,encryption |>\n<| a dscore=0 |>\n\
    <code>\n#include <iostream>\n#include <string>\n#include <algorithm>\n#include\
    \ <cmath>\nusing namespace std;", "{\n    string result = \"\";\n    for(int i\
    \ = 0; i < s.length(); i++)\n    {\n        result += std.string.rep(s.charAt(i),\
    \ 2);\n    }\n    return result;\n}\n</code>\n<|/ a tags=encryption,string,c++,string\
    \ |>\n<| c |>\nThanks for the help. I appreciate it.\n<|/ c |>\n<| a tags=encryption,string,c++,string\
    \ |>\n<code>\n#include <iostream>\n#include <string>\n#include <cstring>\nusing\
    \ namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function decrypt that takes a string as an argument\
    \ and\n    returns a string decrypted with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    decrypt('lm') returns\
    \ 'hi'\n    decrypt('ewhjklnop') returns 'asdfghjkl'\n    decrypt('kj') returns\
    \ 'gf'\n    decrypt('ix') returns 'et'\n    \n*/\nstring decrypt(string s) \n\
    {\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n}\n\
    /*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string encrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    rotate('hi') returns 'lm'\n    rotate('asdfghjkl')\
    \ returns 'ewhjklnop'\n    rotate('gf') returns 'kj'\n    rotate('et') returns\
    \ 'ix'\n    \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n   \
    \ for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    rotate('lm')\
    \ returns 'hi'\n    rotate('ewhjklnop') returns 'asdfghjkl'\n    rotate('kj')\
    \ returns 'gf'\n    rotate('ix') returns 'et'\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string encrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    rotate", "{\n    string result = \"\"\
    ;\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[i]];\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=encryption,c++,string |>\n\
    <| c |>\nThanks so much! This was very helpful!\n<|/ c |>\n<| a tags=encryption,c++,string\
    \ |>\n<code>\n#include <iostream>\n#include <string>\n#include <cstring>\nusing\
    \ namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function decrypt that takes a string as an argument\
    \ and\n    returns a string decrypted with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    encrypt('hi') returns\
    \ 'lm'\n    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns\
    \ 'kj'\n    encrypt('et') returns 'ix'\n    \n*/\nstring decrypt(string s) \n\
    {\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n}\n\
    /*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    rotate('hi') returns 'kj'\n    rotate('asdfghjkl')\
    \ returns 'gfhijkl'\n    rotate('gf') returns 'gfhijkl'\n    rotate('et') returns\
    \ 'gfhijkl'\n    \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n\
    \    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    rotate('hi')\
    \ returns 'kj'\n    rotate('asdfghjkl') returns 'gfhijkl'\n    rotate('gf') returns\
    \ 'gfhijkl'\n    rotate('et') returns 'gfhijkl'\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += std.string(std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ st", "{\n    string alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(alphabet.size()\
    \ - 1) - alphabet.indexOf(s[i])];\n    }\n    return result;\n}\n/*\nCreate a\
    \ function decrypt that takes a string as an argument and\n    returns a string\
    \ decrypted with the alphabet being rotated. \n    The alphabet should be rotated\
    \ in a manner such that the letters \n    shift down by two multiplied to two\
    \ places.\n    For example:\n    encrypt('hi') returns 'lm'\n    encrypt('asdfghjkl')\
    \ returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n    encrypt('et') returns\
    \ 'ix'\n    \n*/\nstring decrypt(string s) \n{\n    string alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[(alphabet.size() - 1) - alphabet.indexOf(s[i])];\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=encryption,c++ |>\n<| c |>\n\
    Thanks so much for your help. I really appreciate it. I will try this out and\
    \ let you know how it goes.\n<|/ c |>\n<| c |>\nI made a mistake in the decrypt\
    \ function. I fixed it now. Sorry about that.\n<|/ c |>\n<| c |>\nI made a mistake\
    \ in the decrypt function. I fixed it now. Sorry about that.\n<|/ c |>\n<| c |>\n\
    I made a mistake in the decrypt function. I fixed it now. Sorry about that.\n\
    <|/ c |>\n<| c |>\nI made a mistake in the decrypt function. I fixed it now. Sorry\
    \ about that.\n<|/ c |>\n<| a tags=encryption,c++ |>\n<code>\n#include <iostream>\n\
    #include <string>\nusing namespace std;", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += std.string.rep(s.charAt(i),\
    \ 2);\n    }\n    return result;\n}", "{\n    string alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[(int)s.charAt(i) + 2];\n    }\n    return result;\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThank you for your answer! I appreciate\
    \ it. I will try this out and let you know how it goes.\n<|/ c |>\n<| c |>\nI\
    \ implemented your solution and it works great! Thank you so much! I really appreciate\
    \ your help.\n<|/ c |>\n<| a tags=encryption,c++ |>\n<code>\n#include <iostream>\n\
    #include <string>\n#include <cmath>\n#include <cstdlib>\n#include <ctime>\nusing\
    \ namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(int)s.charAt(i) - 'a'];\n    }\n  \
    \  return result;\n}\n/*\nCreate a function decrypt that takes a string as an\
    \ argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    decrypt('lm')\
    \ returns 'hi'\n    decrypt('ewhjklnop') returns 'asdfghjkl'\n    decrypt('kj')\
    \ returns 'gf'\n    decrypt('ix') returns 'et'\n    \n*/\nstring decrypt(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i) - 'a'];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rot13 that takes a string as an argument and\n\
    \    returns a string rotated 13 places clockwise. \n    For example:\n    rot13('hi')\
    \ returns 'nkr'\n    rot13('asdfghjkl') returns 'zxcvbnm'\n    rot13('gf') returns\
    \ 'gf'\n    rot13('et') returns 'et'\n    \n*/\nstring rot13(string s) \n{\n \
    \   string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n  \
    \      result += alphabet[(int)s.charAt(i) - 'a'] + alphabet[(int)s.charAt(i)\
    \ - 'a'];\n    }\n    return result;\n}\n/*\nCreate a function rot13 that takes\
    \ a string as an argument and\n    returns a string rotated 13 places counterclockwise.\
    \ \n    For example:\n    rot13('nkr') returns 'hi'\n    rot13('zxcvbnm') returns\
    \ 'asdfghjkl'\n    rot13('gf') returns 'gf'\n    rot13('et') returns 'et'\n  \
    \  \n*/\nstring rot13(string s) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - 'a'] - alphabet[(int)s.charAt(i) - 'a'];\n    }\n    return result;\n}\n/*\n\
    Create a function rot13 that takes a string as an argument and\n    returns a\
    \ string rotated 13 places clockwise. \n    For example:\n    rot13('nkr') returns\
    \ 'hi'\n    rot13('zxcvbnm') returns 'asdfghjkl'\n", "{\n    string result = \"\
    \";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    encrypt('hi')\
    \ returns 'lm'\n    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf')\
    \ returns 'kj'\n    encrypt('et') returns 'ix'\n    \n*/\nstring decrypt(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated in the manner described above.\n    For example:\n    rotate('hi')\
    \ returns 'hi'\n    rotate('asdfghjkl') returns 'asdfghjkl'\n    rotate('gf')\
    \ returns 'gfgh'\n    rotate('et') returns 'et'\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated in the manner described above.\n    For example:\n    rotate('hi')\
    \ returns 'hi'\n    rotate('asdfghjkl') returns 'asdfghjkl'\n    rotate('gf')\
    \ returns 'gfgh'\n    rotate('et') returns 'et'\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated in the manner described above.\n    For example:\n    rotate('hi')\
    \ returns 'hi'\n    rotate('asdfghjkl') returns 'asdfghjkl'\n    rotate('gf')\
    \ returns 'gfgh'\n    rotate('et') returns 'et'\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - 97];\n    }\n    return result;\n}", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)(((int)s.charAt(i)\
    \ - 97 + 2) % 26)];\n    }\n    return result;\n}\n/*\nCreate a function decrypt\
    \ that takes a string as an argument and\n    returns a string decrypted with\
    \ the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    encrypt('hi') returns 'lm'\n    encrypt('asdfghjkl') returns\
    \ 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n    encrypt('et') returns 'ix'\n\
    \    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)(((int)s.charAt(i)\
    \ - 97 - 2) % 26)];\n    }\n    return result;\n}\n/*\nCreate a function encryptString\
    \ that takes a string as an argument and\n    returns a string encrypted with\
    \ the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    encryptString('hi') returns 'lm'\n    encryptString('asdfghjkl')\
    \ returns 'ewhjklnop'\n    encryptString('gf') returns 'kj'\n    encryptString('et')\
    \ returns 'ix'\n    \n*/\nstring encryptString(string s) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)(((int)s.charAt(i)\
    \ - 97 + 2) % 26)];\n    }\n    return result;\n}\n/*\nCreate a function decryptString\
    \ that takes a string as an argument and\n    returns a string decrypted with\
    \ the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    encryptString('hi') returns 'lm'\n    encryptString('asdfghjkl')\
    \ returns 'ewhjklnop'\n    encryptString('gf') returns 'kj'\n    encryptString('et')\
    \ returns 'ix'\n    \n*/\nstring decryptString(string s) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)(((int)s.charAt(i)\
    \ - 97 - 2) % 26)];\n    }\n    return result;\n}\n/*\nCreate a ", "{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += std.string.rep(s.charAt(i) + 2, std.string.length(s)) + std.string.rep(s.charAt(i)\
    \ - 2, std.string.length(s)); \n    }\n    return result;\n}\n/*\nCreate a function\
    \ decrypt that takes a string as an argument and\n    returns a string decrypted\
    \ with the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    encrypt('hi') returns 'lm'\n    encrypt('asdfghjkl') returns\
    \ 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n    encrypt('et') returns 'ix'\n\
    \    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += std.string.rep(s.charAt(i)\
    \ - 2, std.string.length(s)) + std.string.rep(s.charAt(i) + 2, std.string.length(s));\
    \ \n    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    rotate('hi')\
    \ returns 'ih'\n    rotate('asdfghjkl') returns 'asdfghjkl'\n    rotate('gf')\
    \ returns 'gfgh'\n    rotate('et') returns 'et'\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += std.string.rep(s.charAt(i) + 2, std.string.length(s))\
    \ + std.string.rep(s.charAt(i) - 2, std.string.length(s)); \n    }\n    return\
    \ result;\n}\n/*\nCreate a function rotate that takes a string as an argument\
    \ and\n    returns a string rotated with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    rotate('hi') returns\
    \ 'ih'\n    rotate('asdfghjkl') returns 'asdfghjkl'\n    rotate('gf') returns\
    \ 'gfgh'\n    rotate('et') returns 'et'\n    \n*/\nstring rotate(string s) \n\
    {\n    string result = \"\";\n    for(int i = 0; i < s.length", "{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s.charAt(i) - 'a'];\n    }\n    return result;\n}\n/*\nCreate\
    \ a function decrypt that takes a string as an argument and\n    returns a string\
    \ decrypted with the alphabet being rotated. \n    The alphabet should be rotated\
    \ in a manner such that the letters \n    shift down by two multiplied to two\
    \ places.\n    For example:\n    encrypt('hi') returns 'lm'\n    encrypt('asdfghjkl')\
    \ returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n    encrypt('et') returns\
    \ 'ix'\n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n  \
    \  for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - 'a'];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string encrypted with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    rotate('hi') returns 'lm'\n    rotate('asdfghjkl') returns 'ewhjklnop'\n\
    \    rotate('gf') returns 'kj'\n    rotate('et') returns 'ix'\n    \n*/\nstring\
    \ rotate(string s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(int)s.charAt(i) - 'a'];\n    }\n  \
    \  return result;\n}\n/*\nCreate a function rotate that takes a string as an argument\
    \ and\n    returns a string decrypted with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    rotate('hi') returns\
    \ 'lm'\n    rotate('asdfghjkl') returns 'ewhjklnop'\n    rotate('gf') returns\
    \ 'kj'\n    rotate('et') returns 'ix'\n    \n*/\nstring unrotate(string s) \n\
    {\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[(int)s.charAt(i) - 'a'];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string encrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    ", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += std.string(std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), st", "{\n    string result = \"\";\n    for(int i = 0; i\
    \ < s.length; i++)\n    {\n        result += alphabet[(int)s[i]];\n    }\n   \
    \ return result;\n}\n/*\nCreate a function decrypt that takes a string as an argument\
    \ and\n    returns a string decrypted with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    decrypt('lm') returns\
    \ 'hi'\n    decrypt('ewhjklnop') returns 'asdfghjkl'\n    decrypt('kj') returns\
    \ 'gf'\n    decrypt('ix') returns 'et'\n    \n*/\nstring decrypt(string s) \n\
    {\n    string result = \"\";\n    for(int i = 0; i < s.length; i++)\n    {\n \
    \       result += alphabet[(int)s[s.length - i - 1]];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    rotate('hi') returns 'gf'\n    rotate('asdfghjkl')\
    \ returns 'et'\n    rotate('gf') returns 'hi'\n    rotate('et') returns 'asdfghjkl'\n\
    \    \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length; i++)\n    {\n        result += alphabet[(int)s[s.length\
    \ - i - 1]];\n    }\n    return result;\n}\n/*\nCreate a function rotate that\
    \ takes a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    rotate('hi') returns 'gf'\n    rotate('asdfghjkl') returns 'et'\n    rotate('gf')\
    \ returns 'hi'\n    rotate('et') returns 'asdfghjkl'\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length; i++)\n \
    \   {\n        result += alphabet[(int)s[s.length - i - 1]];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rotate that takes a string as an argument\
    \ and\n    returns a string rotated with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    rotate('hi') returns\
    \ 'g", "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)((int)s.charAt(i) - 97 + 2)];\n    }\n\
    \    return result;\n}\n/*\nCreate a function decrypt that takes a string as an\
    \ argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    decrypt('lm')\
    \ returns 'hi'\n    decrypt('ewhjklnop') returns 'asdfghjkl'\n    decrypt('kj')\
    \ returns 'gf'\n    decrypt('ix') returns 'et'\n    \n*/\nstring decrypt(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)((int)s.charAt(i) - 97)];\n    }\n   \
    \ return result;\n}\n/*\nCreate a function rotate that takes a string as an argument\
    \ and\n    returns a string rotated with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    rotate('hi') returns\
    \ 'gfedcba'\n    rotate('asdfghjkl') returns 'etkjhgfdsa'\n    rotate('gf') returns\
    \ 'hijkl'\n    rotate('et') returns 'asdf'\n    \n*/\nstring rotate(string s)\
    \ \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n  \
    \  {\n        result += alphabet[(int)((int)s.charAt(i) - 97 + 2)];\n    }\n \
    \   return result;\n}\n/*\nCreate a function decrypt that takes a string as an\
    \ argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    decrypt('gfedcba')\
    \ returns 'hi'\n    decrypt('etkjhgfdsa') returns 'asdfghjkl'\n    decrypt('hijkl')\
    \ returns 'gf'\n    decrypt('asdf') returns 'et'\n    \n*/\nstring decrypt(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)((int)s.charAt(i) - 97)];\n    }\n   \
    \ return result;\n}\n/*\nCreate a function rotate that takes a string as an argument\
    \ and\n    returns a string rotated with the alphab", "{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)(((int)s.at(i)\
    \ - 97 + 2) % 26)];\n    }\n    return result;\n}\n</code>\n<|/ a tags=encryption,c++,string\
    \ |>\n<| c |>\nThis doesn't work. `alphabet` is a `char` array, and `s.at(i)`\
    \ is a `char`, so `(int)s.at(i)` will cast the char to a `int`, which will truncate\
    \ any non-alphabetic characters. You need `(int)s.at(i) - 'a'`.\n<|/ c |>\n<|\
    \ c |>\nI fixed the code in the answer, thank you for pointing that out.\n<|/\
    \ c |>\n<| c |>\nThis doesn't work either. `alphabet` is a `char` array, and `s.at(i)`\
    \ is a `char`, so `(int)s.at(i)` will cast the char to a `int`, which will truncate\
    \ any non-alphabetic characters. You need `(int)s.at(i) - 'a'`.\n<|/ c |>\n<|\
    \ c |>\nI fixed the code in the answer, thank you for pointing that out.\n<|/\
    \ c |>\n<| c |>\nThis doesn't work either. `alphabet` is a `char` array, and `s.at(i)`\
    \ is a `char`, so `(int)s.at(i)` will cast the char to a `int`, which will truncate\
    \ any non-alphabetic characters. You need `(int)s.at(i) - 'a'`.\n<|/ c |>\n<|\
    \ a tags=encryption,c++,string |>\n<code>\n#include <iostream>\n#include <string>\n\
    using namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += std.string.rep(s.charAt(i), 2);\n    }\n    return\
    \ result;\n}\n</code>\n<|/ a tags=string,encryption,c++ |>\n<| c |>\nThis code\
    \ doesn't compile. `string` isn't a type that has a `rep` method. Also, `string`\
    \ isn't a type that has a `charAt` method. `string` isn't a type that has a `length`\
    \ method. `string` isn't a type that has a `charAt` method. `string` isn't a type\
    \ that has a `length` method. `string` isn't a type that has a `charAt` method.\
    \ `string` isn't a type that has a `length` method. `string` isn't a type that\
    \ has a `charAt` method. `string` isn't a type that has a `length` method. `string`\
    \ isn't a type that has a `charAt` method. `string` isn't a type that has a `length`\
    \ method. `string` isn't a type that has a `charAt` method. `string` isn't a type\
    \ that has a `length` method. `string` isn't a type that has a `charAt` method.\
    \ `string` isn't a type that has a `length` method. `string` isn't a type that\
    \ has a `charAt` method. `string` isn't a type that has a `length` method. `string`\
    \ isn't a type that has a `charAt` method. `string` isn't a type that has a `length`\
    \ method. `string` isn't a type that has a `charAt` method. `string` isn't a type\
    \ that has a `length` method. `string` isn't a type that has a `charAt` method.\
    \ `string` isn't a type that has a `length` method. `string` isn't a type that\
    \ has a `charAt` method. `string` isn't a type that has a `length` method. `string`\
    \ isn't a type that has a `charAt` method. `string` isn't a type that has a `length`\
    \ method. `string` isn't a type that has a `charAt` method. `string` isn't a type\
    \ that has a `length` method. `string` isn't a type that has a `charAt` method.\
    \ `string` isn't a type that has a `length` method. `string` isn't a type that\
    \ has a `charAt` method. `string` isn't a type that has a `length` method. `string`\
    \ isn't a type that has a `", "{\n    string result = \"\";\n    for(int i = 0;\
    \ i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i) - 97];\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=encryption,c++,string |>\n\
    <| c |>\nThanks so much! This was very helpful!\n<|/ c |>\n<| a tags=encryption,c++,string\
    \ |>\n<code>\n#include <iostream>\n#include <string>\n#include <cstring>\nusing\
    \ namespace std;\nstring encrypt(string s)\n{\n    string result = \"\";\n   \
    \ for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - 97];\n    }\n    return result;\n}", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += chars[(int)s.charAt(i)]\
    \ + chars[(int)s.charAt(i)+1];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ decrypt that takes a string as an argument and\n    returns a string decrypted\
    \ with the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    decrypt('lm') returns 'hi'\n    decrypt('ewhjklnop') returns\
    \ 'asdfghjkl'\n    decrypt('kj') returns 'gf'\n    decrypt('ix') returns 'et'\n\
    \    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += chars[(int)s.charAt(i)]\
    \ - chars[(int)s.charAt(i)+1];\n    }\n    return result;\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| c |>\nThis doesn't seem to work. `encrypt(\"hi\")` returns `\"lm\"` instead\
    \ of `\"ewhjklnop\"`.\n<|/ c |>\n<| c |>\nI fixed the problem with my first solution.\
    \ Now it works.\n<|/ c |>\n<| c |>\nI fixed the problem with my second solution.\
    \ Now it works.\n<|/ c |>\n<| c |>\nI fixed the problem with my third solution.\
    \ Now it works.\n<|/ c |>\n<| c |>\nI fixed the problem with my fourth solution.\
    \ Now it works.\n<|/ c |>\n<| a dscore=0 |>\n<code>\nstring encrypt(string s)\n\
    {\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += chars[(int)s.charAt(i)];\n    }\n    return result;\n}", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n}",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[(int)s.charAt(i) - 97];\n    }\n    return result;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThanks for your answer! I understand that\
    \ my code was a little bit too complicated and I tried to make it as simple as\
    \ possible. I will try to implement your solution and see if it works. Thanks\
    \ again!\n<|/ c |>\n<| c |>\nI implemented your solution and it works. Thank you\
    \ so much!\n<|/ c |>\n<| c |>\nGlad I could help! If you found this answer helpful,\
    \ please consider accepting it by clicking the check mark next to it. This will\
    \ help future visitors who may have a similar question in the future know that\
    \ the answer worked for you.\n<|/ c |>\n<| a tags=c++,encryption,string |>\nI\
    \ made a small change to your code and it worked. \n<code>\n#include <iostream>\n\
    #include <string>\n#include <cmath>\n#include <cstdlib>\nusing namespace std;",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n}\n\
    /*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    decrypt('lm') returns 'hi'\n    decrypt('ewhjklnop')\
    \ returns 'asdfghjkl'\n    decrypt('kj') returns 'gf'\n    decrypt('ix') returns\
    \ 'et'\n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n  \
    \  for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rot13 that takes a string\
    \ as an argument and\n    returns a string rotated 13 places clockwise. \n   \
    \ For example:\n    rot13('hi') returns 'nkr'\n    rot13('asdfghjkl') returns\
    \ 'zkqx'\n    rot13('gf') returns 'gf'\n    rot13('et') returns 'et'\n    \n*/\n\
    string rot13(string s) \n{\n    string result = \"\";\n    for(int i = 0; i <\
    \ s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n   \
    \ }\n    return result;\n}\n/*\nCreate a function rot13 that takes a string as\
    \ an argument and\n    returns a string rotated 13 places counterclockwise. \n\
    \    For example:\n    rot13('nkr') returns 'hi'\n    rot13('zkqx') returns 'asdfghjkl'\n\
    \    rot13('gf') returns 'gf'\n    rot13('et') returns 'et'\n    \n*/\nstring\
    \ rot13(string s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rot13 that takes a string as an argument and\n\
    \    returns a string rotated 13 places clockwise. \n    For example:\n    rot13('nkr')\
    \ returns 'hi'\n    rot13('zkqx') returns 'asdfghjkl'\n    rot13('gf') returns\
    \ 'gf'\n    rot13('et') returns 'et'\n    \n*/\nstring rot13(string s) \n{", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(s.at(i) - 'a' + 2) % 26];\n    }\n    return result;\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| a tags=c++,encryption,string |>\n<code>\n#include\
    \ <iostream>\n#include <string>\n#include <cstring>\nusing namespace std;", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += s.at(i + 1) + s.at(i);\n    }\n    return result;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nThanks so much for the help! I really appreciate it!\n\
    <|/ c |>\n<| c |>\nNo problem! If this answer helped you, please consider marking\
    \ it as accepted (click the check mark next to it).\n<|/ c |>\n<| c |>\nI did\
    \ but it said I had to wait a few minutes before I could accept it\n<|/ c |>\n\
    <| c |>\nNo problem! Glad I could help!\n<|/ c |>\n<| a dscore=0 |>\n<code>\n\
    string encrypt(string s)\n{\n    string result = \"\";\n    for(int i = 0; i <\
    \ s.length(); i++)\n    {\n        result += s.at(i + 1) + s.at(i);\n    }\n \
    \   return result;\n}\n</code>\n<|/ a tags=c++ |>\n<| c |>\nPlease don't post\
    \ only code as an answer, but also provide an explanation of what your code does\
    \ and how it solves the problem of the question. Answers with an explanation are\
    \ usually more helpful and of better quality, and are more likely to attract upvotes.\n\
    <|/ c |>\n<| c |>\nThis does not provide an answer to the question. To critique\
    \ or request clarification from an author, leave a comment below their post. -\
    \ [From Review](/review/low-quality-posts/27818277)\n<|/ c |>\n<| c |>\nI agree\
    \ with you, however I believe this to be an answer to the question. He asked how\
    \ to rotate a string, and I provided a solution. He also asked for help with his\
    \ code, and I provided a solution. He also asked for help with his algorithm,\
    \ and I provided a solution. He also asked for help with his logic, and I provided\
    \ a solution. He also asked for help with his algorithm, and I provided a solution.\
    \ He also asked for help with his algorithm, and I provided a solution. He also\
    \ asked for help with his algorithm, and I provided a solution. He also asked\
    \ for help with his algorithm, and I provided a solution. He also asked for help\
    \ with his algorithm, and I provided a solution. He also asked for help with his\
    \ algorithm, and I provided a solution. He ", "{\n    string result = \"\";\n\
    \    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    decrypt('lm')\
    \ returns 'hi'\n    decrypt('ewhjklnop') returns 'asdfghjkl'\n    decrypt('kj')\
    \ returns 'gf'\n    decrypt('ix') returns 'et'\n    \n*/\nstring decrypt(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string encrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    rotate('hi') returns 'lm'\n    rotate('asdfghjkl')\
    \ returns 'ewhjklnop'\n    rotate('gf') returns 'kj'\n    rotate('et') returns\
    \ 'ix'\n    \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n   \
    \ for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    rotate('lm')\
    \ returns 'hi'\n    rotate('ewhjklnop') returns 'asdfghjkl'\n    rotate('kj')\
    \ returns 'gf'\n    rotate('ix') returns 'et'\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string encrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    rotate", "{\n    string result = \"\"\
    ;\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += std.string.reverse(s.substr(i,\
    \ 2));\n    }\n    return result;\n}\n</code>\n<|/ a tags=encryption,c++,string\
    \ |>\n<| c |>\nThis doesn't work. Try encrypting \"abc\" with your code.\n<|/\
    \ c |>\n<| c |>\nI tested it and it works. I used the string \"abc\" as input\
    \ and it returned \"cba\"\n<|/ c |>\n<| c |>\nIt doesn't work. Try encrypting\
    \ \"abc\" with your code.\n<|/ c |>\n<| c |>\nI tested it and it works. I used\
    \ the string \"abc\" as input and it returned \"cba\"\n<|/ c |>\n<| c |>\nI tested\
    \ it and it works. I used the string \"abc\" as input and it returned \"cba\"\n\
    <|/ c |>\n<| a dscore=1 |>\n<code>\n#include <iostream>\n#include <string>\n#include\
    \ <cstring>\nusing namespace std;", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += s.at(i + 2); \n    }\n\
    \    return result;\n}\n</code>\n<|/ a |>\n<| c |>\nThanks for your answer. I'm\
    \ still a little confused on how to implement this. I understand that I need to\
    \ use the rotate function, but I'm unsure of how to implement it. Could you give\
    \ me an example of how I would implement it?\n<|/ c |>\n<| c |>\nI added an example\
    \ to my answer. Hope it helps.\n<|/ c |>\n<| c |>\nThanks for your help. I understand\
    \ how this works, but I'm still unsure of how to implement it into my code. Could\
    \ you give me an example of how I would implement it?\n<|/ c |>\n<| c |>\nI added\
    \ an example to my answer. Hope it helps.\n<|/ c |>\n<| a tags=c++,encryption,string\
    \ |>\n<code>\n#include <iostream>\n#include <string>\n#include <cstdlib>\n#include\
    \ <ctime>\n#include <cmath>\n#include <cstring>\nusing namespace std;", "{\n \
    \   string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n  \
    \      result += chars[(int)s.charAt(i)];\n    }\n    return result;\n}\n/*\n\
    Create a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n    encrypt('asdfghjkl')\
    \ returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n    encrypt('et') returns\
    \ 'ix'\n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n  \
    \  for(int i = 0; i < s.length(); i++)\n    {\n        result += chars[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    rotate('hi')\
    \ returns 'jhi'\n    rotate('asdfghjkl') returns 'kjhkasdf'\n    rotate('gf')\
    \ returns 'gfhg'\n    rotate('et') returns 'et'\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += chars[(int)s.charAt(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    rotate('hi') returns 'jhi'\n    rotate('asdfghjkl')\
    \ returns 'kjhkasdf'\n    rotate('gf') returns 'gfhg'\n    rotate('et') returns\
    \ 'et'\n    \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n   \
    \ for(int i = 0; i < s.length(); i++)\n    {\n        result += chars[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.", "{\n    string result = \"\"\
    ;\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(s.at(i)\
    \ - 'a' + 2) % 26];\n    }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n\
    <| a dscore=0 |>\n<code>\n#include <iostream>\n#include <string>\n#include <vector>\n\
    #include <algorithm>\nusing namespace std;", "{\n    string result = \"\";\n \
    \   for(int i = 0; i < s.length(); i++)\n    {\n        result += std.string.rotate(s.at(i),\
    \ 2);\n    }\n    return result;\n}\n</code>\n<|/ a tags=string,c++,encryption\
    \ |>\n<| c |>\nThanks for the help! I appreciate it.\n<|/ c |>\n<| a dscore=0\
    \ |>\n<code>\n#include <iostream>\n#include <string>\n#include <cstring>\nusing\
    \ namespace std;", "{\n    string alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(alphabet.indexOf(s[i]) + 2) % alphabet.length()];\n\
    \    }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThank you\
    \ for answering! I appreciate it. I will try this out and let you know if it works.\n\
    <|/ c |>\n<| c |>\nI got it to work! Thank you so much! I really appreciate it!\n\
    <|/ c |>\n<| c |>\nYou're welcome. I'm glad I could help. If you found this answer\
    \ helpful, please consider accepting it by clicking the check mark next to it.\n\
    <|/ c |>\n<| c |>\nI will! Thanks again!\n<|/ c |>\n<| a dscore=0 |>\n<code>\n\
    import java.util.Scanner;\nimport java.util.Arrays;\nimport java.util.Collections;\n\
    import java.util.List;\nimport java.util.ArrayList;\nimport java.util.Collection;\n\
    import java.util.Collections;\nimport java.util.List;\nimport java.util.ArrayList;\n\
    import java.util.Collection;\nimport java.util.Collections;\nimport java.util.List;\n\
    import java.util.ArrayList;\nimport java.util.Collection;\nimport java.util.Collections;\n\
    import java.util.List;\nimport java.util.ArrayList;\nimport java.util.Collection;\n\
    import java.util.Collections;\nimport java.util.List;\nimport java.util.ArrayList;\n\
    import java.util.Collection;\nimport java.util.Collections;\nimport java.util.List;\n\
    import java.util.ArrayList;\nimport java.util.Collection;\nimport java.util.Collections;\n\
    import java.util.List;\nimport java.util.ArrayList;\nimport java.util.Collection;\n\
    import java.util.Collections;\nimport java.util.List;\nimport java.util.ArrayList;\n\
    import java.util.Collection;\nimport java.util.Collections;\nimport java.util.List;\n\
    import java.util.ArrayList;\nimport java.util.Collection;\nimport java.util.Collections;\n\
    import java.util.List;\nimport java.util.ArrayList;\nimport java.util.Collection;\n\
    import java.util.Collections;\nimport java.util.List;\nimport java.util.ArrayList;\n\
    import java.util.Collection;\nimport java.util.Collections;\nimport java.util.List;\n\
    import java.util.ArrayList;\nimport java.util.Collection;\nimport java.util.Collections;\n\
    import java.util.List;\nimport java.util.ArrayList;\nimport java.util.Collection;\n\
    import java.util.Collections;\nimport java.util.List;\nimport java.util.ArrayList;\n\
    import java.util.Collection;\nimport java.util.Collections;\nimport java.util.List;\n\
    import java.util.ArrayList;\nimport java.util.Collection;\nimport java.util.Collections;\n\
    import java.util.List;\nimport java.util.ArrayList;\nimport java.util.Collection;\n\
    import java.util.Collections;\n", "{\n    string result = \"\";\n    for(int i\
    \ = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - 97];\n    }\n    return result;\n}\n/*\nCreate a function decrypt that takes\
    \ a string as an argument and\n    returns a string decrypted with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    decrypt('lm') returns 'hi'\n    decrypt('ewhjklnop') returns 'asdfghjkl'\n\
    \    decrypt('kj') returns 'gf'\n    decrypt('ix') returns 'et'\n    \n*/\nstring\
    \ decrypt(string s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(int)s.charAt(i) - 97];\n    }\n   \
    \ return result;\n}\n/*\nCreate a function rot13 that takes a string as an argument\
    \ and\n    returns a string rotated 13 places clockwise. \n    For example:\n\
    \    rot13('hi') returns 'nkr'\n    rot13('asdfghjkl') returns 'zqx'\n    rot13('gf')\
    \ returns 'kj'\n    rot13('et') returns 'ix'\n    \n*/\nstring rot13(string s)\
    \ \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n  \
    \  {\n        result += alphabet[(int)s.charAt(i) - 97 + 13];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rot13 that takes a string as an argument and\n\
    \    returns a string rotated 13 places counterclockwise. \n    For example:\n\
    \    rot13('nkr') returns 'hi'\n    rot13('zqx') returns 'asdfghjkl'\n    rot13('kj')\
    \ returns 'gf'\n    rot13('ix') returns 'et'\n    \n*/\nstring rot13(string s)\
    \ \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n  \
    \  {\n        result += alphabet[(int)s.charAt(i) - 97 - 13];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rot13 that takes a string as an argument and\n\
    \    returns a string rotated 13 places clockwise and counterclockwise. \n   \
    \ For example:\n    rot13('hi') returns 'nkr'\n    rot13('asdfghjkl') returns\
    \ 'zqx'\n    rot13('gf') returns 'kj'\n    rot13('et') ", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - 'a'];\n    }\n    return result;\n}\n/*\nCreate a function decrypt that takes\
    \ a string as an argument and\n    returns a string decrypted with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    encrypt('hi') returns 'lm'\n    encrypt('asdfghjkl') returns 'ewhjklnop'\n\
    \    encrypt('gf') returns 'kj'\n    encrypt('et') returns 'ix'\n    \n*/\nstring\
    \ decrypt(string s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(int)s.charAt(i) - 'a'];\n    }\n  \
    \  return result;\n}\n/*\nCreate a function rotate that takes a string as an argument\
    \ and\n    returns a string rotated in the manner described above. \n    For example:\n\
    \    rotate('hi') returns 'ih'\n    rotate('asdfghjkl') returns 'asdfghjkl'\n\
    \    rotate('gf') returns 'gfgh'\n    rotate('et') returns 'et'\n    \n*/\nstring\
    \ rotate(string s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(int)s.charAt(i) - 'a'];\n    }\n  \
    \  return result;\n}\n/*\nCreate a function decrypt that takes a string as an\
    \ argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    encrypt('hi')\
    \ returns 'lm'\n    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf')\
    \ returns 'kj'\n    encrypt('et') returns 'ix'\n    \n*/\nstring decrypt(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i) - 'a'];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rotate that takes a string as an argument\
    \ and\n    returns a string rotated in the manner described above. \n    For example:\n\
    \    rotate('hi') returns 'ih'\n    rotate('asdfghjkl') returns 'asdfghjkl'\n\
    \    rotate('gf') returns 'gf", "{\n    string result = \"\";\n    for(int i =\
    \ 0; i < s.length(); i++)\n    {\n        result += alphabet[(s.at(i) + 2) % 26];\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=c++,encryption,string |>\n\
    <| c |>\nThis doesn't work. `encrypt('gf') returns 'kj'` should be `encrypt('gf')\
    \ returns 'kj'`\n<|/ c |>\n<| c |>\nThanks for pointing that out. I fixed the\
    \ typo.\n<|/ c |>\n<| a tags=c++,encryption,string |>\n<code>\n#include <iostream>\n\
    #include <string>\n#include <cstring>\nusing namespace std;", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += std.string.rep(s.charAt(i),\
    \ std.math.pow(2, i));\n    }\n    return result;\n}\n/*\nCreate a function decrypt\
    \ that takes a string as an argument and\n    returns a string decrypted with\
    \ the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    encrypt('hi') returns 'lm'\n    encrypt('asdfghjkl') returns\
    \ 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n    encrypt('et') returns 'ix'\n\
    \    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += std.string.rep(s.charAt(i),\
    \ std.math.pow(2, i));\n    }\n    return result;\n}\n/*\nCreate a function rot13\
    \ that takes a string as an argument and\n    returns a string rotated 13 places.\n\
    \    For example:\n    rot13('hi') returns 'nkr'\n    rot13('asdfghjkl') returns\
    \ 'zxcvbnm'\n    rot13('gf') returns 'yz'\n    rot13('et') returns 'bcd'\n   \
    \ \n*/\nstring rot13(string s) \n{\n    string result = \"\";\n    for(int i =\
    \ 0; i < s.length(); i++)\n    {\n        result += std.string.rep(s.charAt(i),\
    \ std.math.pow(2, 13 - i));\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rot13 that takes a string as an argument and\n    returns a string rotated 13\
    \ places.\n    For example:\n    rot13('hi') returns 'nkr'\n    rot13('asdfghjkl')\
    \ returns 'zxcvbnm'\n    rot13('gf') returns 'yz'\n    rot13('et') returns 'bcd'\n\
    \    \n*/\nstring rot13(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += std.string.rep(s.charAt(i),\
    \ std.math.pow(2, 13 - i));\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rot13 that takes a string as an argument and\n    returns a string rotated 13\
    \ places.\n    For example:\n    rot13('hi') returns 'nkr'\n    rot13('asdfghjkl')\
    \ returns 'zxcvbnm'\n    ", "{\n    string result = \"\";\n    for(int i = 0;\
    \ i < s.length(); i++)\n    {\n        result += std.string.rep(s.charAt(i), std.math.pow(2,\
    \ i));\n    }\n    return result;\n}\n</code>\n<|/ a tags=encryption,c++,string\
    \ |>\n<| c |>\nThis code doesn't work. `std.string.rep` returns a `char` not a\
    \ `string`.\n<|/ c |>\n<| c |>\nI fixed the code by changing the `char` to a `string`\n\
    <|/ c |>\n<| c |>\nThis code doesn't work. `std.string.rep` returns a `char` not\
    \ a `string`.\n<|/ c |>\n<| c |>\nI fixed the code by changing the `char` to a\
    \ `string`\n<|/ c |>\n<| c |>\nThis code doesn't work. `std.string.rep` returns\
    \ a `char` not a `string`.\n<|/ c |>\n<| a tags=encryption,c++,string |>\n<code>\n\
    #include <iostream>\n#include <string>\n#include <algorithm>\n#include <cmath>",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[(int)s.charAt(i) - 'a'];\n    }\n    return result;\n\
    }\n/*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n    encrypt('asdfghjkl')\
    \ returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n    encrypt('et') returns\
    \ 'ix'\n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n  \
    \  for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - 'a'];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string encrypted with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    encrypt('hi') returns 'lm'\n    encrypt('asdfghjkl') returns 'ewhjklnop'\n\
    \    encrypt('gf') returns 'kj'\n    encrypt('et') returns 'ix'\n    \n*/\nstring\
    \ rotate(string s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(int)s.charAt(i) - 'a'];\n    }\n  \
    \  return result;\n}\n/*\nCreate a function rotate that takes a string as an argument\
    \ and\n    returns a string decrypted with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    encrypt('hi') returns\
    \ 'lm'\n    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns\
    \ 'kj'\n    encrypt('et') returns 'ix'\n    \n*/\nstring rotateDecrypt(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i) - 'a'];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rotate that takes a string as an argument\
    \ and\n    returns a string encrypted with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters ", "{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += s.charAt(i) + s.charAt(i);\n    }\n    return result;\n}\n/*\nCreate a function\
    \ decrypt that takes a string as an argument and\n    returns a string decrypted\
    \ with the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    decrypt('lm') returns 'hi'\n    decrypt('ewhjklnop') returns\
    \ 'asdfghjkl'\n    decrypt('kj') returns 'gf'\n    decrypt('ix') returns 'et'\n\
    \    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += s.charAt(i) + s.charAt(i);\n\
    \    }\n    return result;\n}\n/*\nCreate a function rot13 that takes a string\
    \ as an argument and\n    returns a string encrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    rot13('hi')\
    \ returns 'nk'\n    rot13('asdfghjkl') returns 'zqx'\n    rot13('gf') returns\
    \ 'jl'\n    rot13('et') returns 'iu'\n    \n*/\nstring rot13(string s) \n{\n \
    \   string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n  \
    \      result += s.charAt(i) + s.charAt(i);\n    }\n    return result;\n}\n/*\n\
    Create a function rot13 that takes a string as an argument and\n    returns a\
    \ string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    rot13('nk') returns 'hi'\n    rot13('zqx')\
    \ returns 'asdfghjkl'\n    rot13('jl') returns 'gf'\n    rot13('iu') returns 'et'\n\
    \    \n*/\nstring rot13(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += s.charAt(i) + s.charAt(i);\n\
    \    }\n    return result;\n}\n/*\nCreate a function rot13 that takes a string\
    \ as an argument and\n    returns a string encrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multipli", "{\n    string alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[s.at(i) - alphabet.at(alphabet.size() - 1)];\n   \
    \ }\n    return result;\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThis doesn't\
    \ work. Try encrypting \"asdfghjkl\" with your code.\n<|/ c |>\n<| c |>\nI tested\
    \ it and it works fine for me. Can you give me an example where it fails?\n<|/\
    \ c |>\n<| c |>\nI tested it and it works fine for me. Can you give me an example\
    \ where it fails?\n<|/ c |>\n<| c |>\nI tested it and it works fine for me. Can\
    \ you give me an example where it fails?\n<|/ c |>\n<| c |>\nI tested it and it\
    \ works fine for me. Can you give me an example where it fails?\n<|/ c |>\n<|\
    \ a dscore=1 |>\n<code>\nstring encrypt(string s)\n{\n    string alphabet = \"\
    abcdefghijklmnopqrstuvwxyz\";\n    string result = \"\";\n    for(int i = 0; i\
    \ < s.length(); i++)\n    {\n        result += alphabet[s.at(i) - alphabet.at(alphabet.size()\
    \ - 1)];\n    }\n    return result;\n}\n</code>\n<|/ a tags=c++,encryption |>\n\
    <| a |>\n<code>\n#include <iostream>\n#include <string>\n#include <algorithm>\n\
    using namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(int)s[i]];\n    }\n    return result;\n\
    }\n/*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n    encrypt('asdfghjkl')\
    \ returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n    encrypt('et') returns\
    \ 'ix'\n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n  \
    \  for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[s.length()\
    \ - 1 - i]];\n    }\n    return result;\n}\n/*\nCreate a function rot13 that takes\
    \ a string as an argument and\n    returns a string encrypted with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    rot13('hi') returns 'yz'\n    rot13('asdfghjkl') returns 'zxcvbnm'\n    rot13('gf')\
    \ returns 'gf'\n    rot13('et') returns 'et'\n    \n*/\nstring rot13(string s)\
    \ \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n  \
    \  {\n        result += alphabet[(int)s[s.length() - 1 - i]];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rot13 that takes a string as an argument and\n\
    \    returns a string decrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    rot13('hi') returns 'yz'\n\
    \    rot13('asdfghjkl') returns 'zxcvbnm'\n    rot13('gf') returns 'gf'\n    rot13('et')\
    \ returns 'et'\n    \n*/\nstring rot13(string s) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[i]];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rot13 that takes a string\
    \ as an argument and\n    returns a string encrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down ", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(int)s.charAt(i) - 'a'];\n    }\n  \
    \  return result;\n}\n</code>\n<|/ a tags=encryption,c++,string |>\n<| c |>\n\
    I appreciate your help, but this doesn't really help me. I'm just trying to figure\
    \ out how to rotate the letters down by two places.\n<|/ c |>\n<| c |>\nI added\
    \ a code example to my answer. Hope it helps.\n<|/ c |>\n<| c |>\nThank you so\
    \ much! I really appreciate it!\n<|/ c |>\n<| c |>\nNo problem! Glad I could help.\n\
    <|/ c |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n#include <string>\n#include\
    \ <cstdlib>\n#include <ctime>\nusing namespace std;", "{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[i]];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    decrypt('lm')\
    \ returns 'hi'\n    decrypt('ewhjklnop') returns 'asdfghjkl'\n    decrypt('kj')\
    \ returns 'gf'\n    decrypt('ix') returns 'et'\n    \n*/\nstring decrypt(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s[i]];\n    }\n    return result;\n}\n\
    /*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    rotate('hi') returns 'gfedcba'\n    rotate('asdfghjkl')\
    \ returns 'kjhigfedcb'\n    rotate('gf') returns 'etxasdfghj'\n    rotate('et')\
    \ returns 'hixgfedcb'\n    \n*/\nstring rotate(string s) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[i]];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    rotate('gf')\
    \ returns 'etxasdfghj'\n    rotate('et') returns 'hixgfedcb'\n    rotate('hi')\
    \ returns 'gfedcba'\n    rotate('asdfghjkl') returns 'kjhigfedcb'\n    \n*/\n\
    string rotate(string s) \n{\n    string result = \"\";\n    for(int i = 0; i <\
    \ s.length(); i++)\n    {\n        result += alphabet[(int)s[i]];\n    }\n   \
    \ return result;\n}\n/*\nCreate a function rotate that takes a string as an argument\
    \ and\n    returns a string rotated with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters ", "{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n}\n</code>\n<|/ a\
    \ tags=c++,encryption,string |>\n<| c |>\nThis doesn't work. `encrypt('gf') returns\
    \ 'kj'` should be `encrypt('gf') returns 'kj'`\n<|/ c |>\n<| c |>\nThanks for\
    \ pointing that out. I've fixed it now.\n<|/ c |>\n<| a tags=c++,encryption,string\
    \ |>\n<code>\n#include <iostream>\n#include <string>\n#include <cmath>\n#include\
    \ <cstdlib>\n#include <ctime>\nusing namespace std;", "{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += s.charAt(i)\
    \ + s.charAt(i);\n    }\n    return result;\n}\n</code>\n<|/ a tags=encryption,c++,string\
    \ |>\n<| c |>\nThanks for your help! I appreciate it!\n<|/ c |>\n<| c |>\nNo problem!\
    \ If this answer helped you, please consider marking it as accepted (click the\
    \ check mark next to the answer).\n<|/ c |>\n<| a dscore=0 |>\n<code>\n#include\
    \ <iostream>\n#include <string>\n#include <algorithm>", "{\n    string alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n    string result = \"\";\n    for(int i\
    \ = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ + 2];\n    }\n    return result;\n}\n</code>\n<|/ a tags=c++,encryption,string\
    \ |>\n<| c |>\nThis doesn't work if you input a character that isn't in the alphabet.\
    \ For example, if you input \"a\" the output will be \"b\".\n<|/ c |>\n<| c |>\n\
    Yes, I noticed that and fixed it by adding an if statement to check if `s.charAt(i)\
    \ + 2` is in the alphabet before adding it to the result. Thanks for pointing\
    \ that out.\n<|/ c |>\n<| c |>\nThis doesn't work if you input a character that\
    \ isn't in the alphabet. For example, if you input \"a\" the output will be \"\
    b\".\n<|/ c |>\n<| c |>\nYes, I noticed that and fixed it by adding an if statement\
    \ to check if `s.charAt(i) + 2` is in the alphabet before adding it to the result.\
    \ Thanks for pointing that out.\n<|/ c |>\n<| c |>\nThis doesn't work if you input\
    \ a character that isn't in the alphabet. For example, if you input \"a\" the\
    \ output will be \"b\".\n<|/ c |>\n<| a |>\n<code>\n#include <iostream>\n#include\
    \ <string>\n#include <cctype>", "{\n    string result = \"\";\n    for(int i =\
    \ 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - 97];\n    }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\n\
    Thanks for the help! I appreciate it!\n<|/ c |>\n<| c |>\nNo problem! I hope it\
    \ helps!\n<|/ c |>\n<| a tags=encryption,c++,string |>\nI wrote a solution that\
    \ uses only ASCII characters and a lookup table. It uses std::map to store the\
    \ letters and their position in the alphabet. \n<code>\n#include <iostream>\n\
    #include <map>\n#include <string>", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(s.at(i) - 'a'\
    \ + 2) % 26];\n    }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| c\
    \ |>\nThis doesn't work. `encrypt('gf') returns 'kj'` should be `'kj'` not `'kjh'`\n\
    <|/ c |>\n<| c |>\nI fixed the bug. Thanks for pointing it out.\n<|/ c |>\n<|\
    \ a dscore=0 |>\n<code>\n#include <iostream>\n#include <string>\n#include <vector>\n\
    #include <algorithm>\nusing namespace std;", "{\n    string result = \"\";\n \
    \   for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet.at(s.at(i)\
    \ - 'a');\n    }\n    return result;\n}\n</code>\n<|/ a tags=c++,encryption,string\
    \ |>\n<| c |>\nThis doesn't seem to work. `encrypt(\"asdfghjkl\")` returns `kjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjhkjh",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[(s.at(i) - 'a') % 26];\n    }\n    return result;\n\
    }\n/*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    decrypt('lm') returns 'hi'\n    decrypt('ewhjklnop')\
    \ returns 'asdfghjkl'\n    decrypt('kj') returns 'gf'\n    decrypt('ix') returns\
    \ 'et'\n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n  \
    \  for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(s.at(i)\
    \ - 'a') + 26];\n    }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<|\
    \ c |>\nThank you so much! I really appreciate it. I will try this out and let\
    \ you know if it works.\n<|/ c |>\n<| c |>\nI added the code you suggested and\
    \ it works perfectly. Thank you so much!\n<|/ c |>\n<| c |>\nNo problem! Glad\
    \ I could help!\n<|/ c |>\n<| a tags=c++,encryption,string |>\nI wrote a program\
    \ that does this in C++. Hope this helps.\n<code>\n#include <iostream>\n#include\
    \ <string>\n#include <cmath>\nusing namespace std;", "{\n    string result = \"\
    \";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += std.string.rotate(s.charAt(i),\
    \ 2);\n    }\n    return result;\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThis\
    \ doesn't seem to work. `encrypt('hi')` returns `'lm'` instead of `'ewhjklnop'`.\n\
    <|/ c |>\n<| c |>\nI fixed the bug. Thanks for catching it.\n<|/ c |>\n<| a dscore=1\
    \ |>\n<code>\nstring encrypt(string s)\n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += std.string.rotate(s.charAt(i),\
    \ 2);\n    }\n    return result;\n}\n</code>\n<|/ a tags=string,encryption,c++\
    \ |>\n<| c |>\nWhile this code may answer the question, providing additional context\
    \ regarding why and/or how this code answers the question improves its long-term\
    \ value.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n#include <string>\n\
    #include <algorithm>", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(int)s.charAt(i) - 'a'];\n    }\n  \
    \  return result;\n}\n/*\nCreate a function decrypt that takes a string as an\
    \ argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    encrypt('hi')\
    \ returns 'lm'\n    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf')\
    \ returns 'kj'\n    encrypt('et') returns 'ix'\n    \n*/\nstring decrypt(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i) - 'a'];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rotate that takes a string as an argument\
    \ and\n    returns a string encrypted with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    rotate('hi') returns\
    \ 'lm'\n    rotate('asdfghjkl') returns 'ewhjklnop'\n    rotate('gf') returns\
    \ 'kj'\n    rotate('et') returns 'ix'\n    \n*/\nstring rotate(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s.charAt(i) - 'a'];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    rotate('hi') returns 'lm'\n    rotate('asdfghjkl')\
    \ returns 'ewhjklnop'\n    rotate('gf') returns 'kj'\n    rotate('et') returns\
    \ 'ix'\n    \n*/\nstring unrotate(string s) \n{\n    string result = \"\";\n \
    \   for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - 'a'];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string encrypted with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    ", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += chars[(int)s.at(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n    encrypt('asdfghjkl')\
    \ returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n    encrypt('et') returns\
    \ 'ix'\n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n  \
    \  for(int i = 0; i < s.length(); i++)\n    {\n        result += chars[(int)s.at(i)];\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=encryption,c++ |>\n<| c |>\n\
    Thank you so much for this. I really appreciate it. I will try this out and see\
    \ how it goes. Thanks again!\n<|/ c |>\n<| c |>\nI edited the code above to include\
    \ a rotate function which should help you with your encryption problem. Let me\
    \ know if you have any questions.\n<|/ c |>\n<| c |>\nI edited the code above\
    \ to include a rotate function which should help you with your encryption problem.\
    \ Let me know if you have any questions.\n<|/ c |>\n<| c |>\nI edited the code\
    \ above to include a rotate function which should help you with your encryption\
    \ problem. Let me know if you have any questions.\n<|/ c |>\n<| c |>\nI edited\
    \ the code above to include a rotate function which should help you with your\
    \ encryption problem. Let me know if you have any questions.\n<|/ c |>\n<| a dscore=0\
    \ |>\n<code>\n#include <iostream>\n#include <string>\n#include <cstdlib>\n#include\
    \ <ctime>\n#include <cmath>\n#include <cstring>\nusing namespace std;", "{\n \
    \   string alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    string result = \"\"\
    ;\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - 'a' + 2];\n    }\n    return result;\n}\n</code>\n<|/ a tags=encryption,c++\
    \ |>\n<| c |>\nThis doesn't work. Try encrypting \"abc\" with your code.\n<|/\
    \ c |>\n<| c |>\nI believe that \"abc\" should return \"cba\" because \"a\" shifts\
    \ down by 2 places and \"b\" shifts down by 1 place. Thus, it shifts down by 2\
    \ places twice and by 1 place once.\n<|/ c |>\n<| c |>\nI believe that \"abc\"\
    \ should return \"cba\" because \"a\" shifts down by 2 places and \"b\" shifts\
    \ down by 1 place. Thus, it shifts down by 2 places twice and by 1 place once.\n\
    <|/ c |>\n<| c |>\nI believe that \"abc\" should return \"cba\" because \"a\"\
    \ shifts down by 2 places and \"b\" shifts down by 1 place. Thus, it shifts down\
    \ by 2 places twice and by 1 place once.\n<|/ c |>\n<| c |>\nI believe that \"\
    abc\" should return \"cba\" because \"a\" shifts down by 2 places and \"b\" shifts\
    \ down by 1 place. Thus, it shifts down by 2 places twice and by 1 place once.\n\
    <|/ c |>\n<| a tags=encryption,c++ |>\n<code>\n#include <iostream>\n#include <string>\n\
    using namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += s.charAt(i) + s.charAt(i);\n    }\n    return\
    \ result;\n}\n/*\nCreate a function decrypt that takes a string as an argument\
    \ and\n    returns a string decrypted with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    encrypt('hi') returns\
    \ 'lm'\n    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns\
    \ 'kj'\n    encrypt('et') returns 'ix'\n    \n*/\nstring decrypt(string s) \n\
    {\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += s.charAt(i) + s.charAt(i);\n    }\n    return result;\n}\n\
    /*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n    encrypt('asdfghjkl')\
    \ returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n    encrypt('et') returns\
    \ 'ix'\n    \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n   \
    \ for(int i = 0; i < s.length(); i++)\n    {\n        result += s.charAt(i) +\
    \ s.charAt(i);\n    }\n    return result;\n}\n/*\nCreate a function rotate that\
    \ takes a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    encrypt('hi') returns 'lm'\n    encrypt('asdfghjkl') returns 'ewhjklnop'\n\
    \    encrypt('gf') returns 'kj'\n    encrypt('et') returns 'ix'\n    \n*/\nstring\
    \ rotate(string s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += s.charAt(i) + s.charAt(i);\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rotate that takes a string as an argument\
    \ and\n    returns a string rotated with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    ", "{\n    string result = \"\";\n   \
    \ for(int i = 0; i < s.length(); i++)\n    {\n        result += std.string.rotate(s.charAt(i),\
    \ 2);\n    }\n    return result;\n}\n</code>\n<|/ a tags=encryption,c++,string\
    \ |>\n<| c |>\nThanks for your answer. Can you please explain how you did this\
    \ and why you did it this way?\n<|/ c |>\n<| c |>\nI used the rotate function\
    \ from the std library to rotate the letters 2 places down. http://www.cplusplus.com/reference/algorithm/rotate/\n\
    <|/ c |>\n<| c |>\nThanks for your answer. Can you please explain how you did\
    \ this and why you did it this way?\n<|/ c |>\n<| c |>\nI used the rotate function\
    \ from the std library to rotate the letters 2 places down. http://www.cplusplus.com/reference/algorithm/rotate/\n\
    <|/ c |>\n<| a dscore=2 |>\n<code>\n#include <iostream>\n#include <string>\n#include\
    \ <algorithm>\nusing namespace std;", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += s.charAt(i) + s.charAt(i);\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    encrypt('hi')\
    \ returns 'lm'\n    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf')\
    \ returns 'kj'\n    encrypt('et') returns 'ix'\n    \n*/\nstring decrypt(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += s.charAt(i) + s.charAt(i);\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated in the manner described above.\n    For example:\n    rotate('hi')\
    \ returns 'ihi'\n    rotate('asdfghjkl') returns 'asdfgjhkl'\n    rotate('gf')\
    \ returns 'gfedc'\n    rotate('et') returns 'etgfihc'\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += s.charAt(i) + s.charAt(i);\n    }\n    return result;\n\
    }\n/*\nCreate a function encrypt that takes a string as an argument and\n    returns\
    \ a string encrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n    encrypt('asdfghjkl')\
    \ returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n    encrypt('et') returns\
    \ 'ix'\n    \n*/\nstring encrypt(string s) \n{\n    string result = \"\";\n  \
    \  for(int i = 0; i < s.length(); i++)\n    {\n        result += s.charAt(i) +\
    \ s.charAt(i);\n    }\n    return result;\n}\n/*\nCreate a function decrypt that\
    \ takes a string as an argument and\n    returns a string decrypted with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    encrypt('hi') returns 'lm'\n    encrypt('asdfghjkl", "{\n    string alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n    string result = \"\";\n    for(int i\
    \ = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i) -\
    \ 65];\n    }\n    return result;\n}\n</code>\n<|/ a tags=c++,encryption,string\
    \ |>\n<| c |>\nThis code doesn't work. `s.at(i)` returns a `char`, not a `string`.\n\
    <|/ c |>\n<| c |>\nIt does work. `s.at(i)` returns a `char`, not a `string`. `s.at(i)`\
    \ returns a `char`, not a `string`. `s.at(i)` returns a `char`, not a `string`.\
    \ `s.at(i)` returns a `char`, not a `string`. `s.at(i)` returns a `char`, not\
    \ a `string`. `s.at(i)` returns a `char`, not a `string`. `s.at(i)` returns a\
    \ `char`, not a `string`. `s.at(i)` returns a `char`, not a `string`. `s.at(i)`\
    \ returns a `char`, not a `string`. `s.at(i)` returns a `char`, not a `string`.\
    \ `s.at(i)` returns a `char`, not a `string`. `s.at(i)` returns a `char`, not\
    \ a `string`. `s.at(i)` returns a `char`, not a `string`. `s.at(i)` returns a\
    \ `char`, not a `string`. `s.at(i)` returns a `char`, not a `string`. `s.at(i)`\
    \ returns a `char`, not a `string`. `s.at(i)` returns a `char`, not a `string`.\
    \ `s.at(i)` returns a `char`, not a `string`. `s.at(i)` returns a `char`, not\
    \ a `string`. `s.at(i)` returns a `char`, not a `string`. `s.at(i)` returns a\
    \ `char`, not a `string`. `s.at(i)` returns a `char`, not a `string`. `s.at(i)`\
    \ returns a `char`, not a `string`. `s.at(i)` returns a `char`, not a `string`.\
    \ `s.at(i)` returns a `char`, not a `string`. `s.at(i)` returns a `char`, not\
    \ a `string`. `s.at(i)` returns a `char`, not a `string`. `s.at(i)` returns a\
    \ `char`, not a `string`. `s.at(i)` returns a `char`, not a `string`. `s.at(i)`\
    \ returns a `char`, not a `string`. `s.at(i)` returns a `char`, not a `string`.\
    \ `s.at(i)` returns a ", "{\n    string result = \"\";\n    for(int i = 0; i <\
    \ s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i) - 97];\n\
    \    }\n    return result;\n}", "{\n    string result = \"\";\n    for(int i =\
    \ 0; i < s.length(); i++)\n    {\n        result += s.charAt(i) + s.charAt(i);\n\
    \    }\n    return result;\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nI appreciate\
    \ your help but I'm still having trouble understanding how to implement your solution.\
    \ Could you please explain how I would go about implementing your solution? I'm\
    \ still new to programming and am trying to learn as much as I can.\n<|/ c |>\n\
    <| c |>\nI added some comments to my answer. Hope that helps.\n<|/ c |>\n<| c\
    \ |>\nThank you so much for explaining your solution! I really appreciate it!\n\
    <|/ c |>\n<| a |>\n<code>\n#include <iostream>\n#include <string>\n#include <cmath>\n\
    using namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(int)s.charAt(i) - 'a'];\n    }\n  \
    \  return result;\n}\n/*\nCreate a function decrypt that takes a string as an\
    \ argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    decrypt('lm')\
    \ returns 'hi'\n    decrypt('ewhjklnop') returns 'asdfghjkl'\n    decrypt('kj')\
    \ returns 'gf'\n    decrypt('ix') returns 'et'\n    \n*/\nstring decrypt(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i) - 'a'];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rotate that takes a string as an argument\
    \ and\n    returns a string encrypted with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    rotate('hi') returns\
    \ 'lm'\n    rotate('asdfghjkl') returns 'ewhjklnop'\n    rotate('gf') returns\
    \ 'kj'\n    rotate('et') returns 'ix'\n    \n*/\nstring rotate(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s.charAt(i) - 'a'];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    rotate('lm') returns 'hi'\n    rotate('ewhjklnop')\
    \ returns 'asdfghjkl'\n    rotate('kj') returns 'gf'\n    rotate('ix') returns\
    \ 'et'\n    \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n   \
    \ for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - 'a'];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string encrypted with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by ", "{\n    string result = \"\";\n    for(int i\
    \ = 0; i < s.length(); i++)\n    {\n        result += alphabet[(s.at(i) - 'a')\
    \ % 26];\n    }\n    return result;\n}\n</code>\n<|/ a tags=c++,encryption,string\
    \ |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n#include <string>\n#include\
    \ <cstring>\nusing namespace std;", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length; i++)\n    {\n        result += std.string.rep(std.string.rep(s.charAt(i),\
    \ 2), 2);\n    }\n    return result;\n}\n</code>\n<|/ a tags=string,c++,encryption\
    \ |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n#include <string>\nusing\
    \ namespace std;", "{\n    string alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s.charAt(i) - 'a' + 2];\n    }\n    return result;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't work. Try encrypting \"hi\"\
    \ with your code.\n<|/ c |>\n<| c |>\nI tested it and it works fine. Can you give\
    \ me an example where it doesn't work?\n<|/ c |>\n<| c |>\nI tested it and it\
    \ works fine. Can you give me an example where it doesn't work?\n<|/ c |>\n<|\
    \ c |>\nI tested it and it works fine. Can you give me an example where it doesn't\
    \ work?\n<|/ c |>\n<| c |>\nI tested it and it works fine. Can you give me an\
    \ example where it doesn't work?\n<|/ c |>\n<| a |>\n<code>\nstring encrypt(string\
    \ s)\n{\n    string alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - 'a' + 2];\n    }\n    return result;\n}\n</code>\n<|/ a tags=encryption,c++,string\
    \ dscore=0 |>\n<| c |>\nThis doesn't work. Try encrypting \"hi\" with your code.\n\
    <|/ c |>\n<| c |>\nI tested it and it works fine. Can you give me an example where\
    \ it doesn't work?\n<|/ c |>\n<| c |>\nI tested it and it works fine. Can you\
    \ give me an example where it doesn't work?\n<|/ c |>\n<| c |>\nI tested it and\
    \ it works fine. Can you give me an example where it doesn't work?\n<|/ c |>\n\
    <| c |>\nI tested it and it works fine. Can you give me an example where it doesn't\
    \ work?\n<|/ c |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n#include <string>\n\
    #include <cmath>\nusing namespace std;", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}", "{\n    string result = \"\";\n    for(int i =\
    \ 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[i]];\n   \
    \ }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    encrypt('hi')\
    \ returns 'lm'\n    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf')\
    \ returns 'kj'\n    encrypt('et') returns 'ix'\n    \n*/\nstring decrypt(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s[s.length() - 1 - i]];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rotate that takes a string as an argument\
    \ and\n    returns a string rotated with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    encrypt('hi') returns\
    \ 'lm'\n    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns\
    \ 'kj'\n    encrypt('et') returns 'ix'\n    \n*/\nstring rotate(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s[s.length() - 1 - i]];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n    encrypt('asdfghjkl')\
    \ returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n    encrypt('et') returns\
    \ 'ix'\n    \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n   \
    \ for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[s.length()\
    \ - 1 - i]];\n    }\n    return result;\n}\n/*\nCreate a function rotate that\
    \ takes a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two ", "{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += std.string(std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i), std.rotate(s.at(i),\
    \ std.rotate(s.at(i), st", "{\n    string result = \"\";\n    for(int i = 0; i\
    \ < s.length(); i++)\n    {\n        result += alphabet[(int)((int)s.charAt(i)\
    \ - 97)] + alphabet[(int)((int)s.charAt(i) - 65)];\n    }\n    return result;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\npublic class Rotate {",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[(int)s.at(i)];\n    }\n    return result;\n}\n/*\n\
    Create a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    decrypt('lm') returns 'hi'\n    decrypt('ewhjklnop')\
    \ returns 'asdfghjkl'\n    decrypt('kj') returns 'gf'\n    decrypt('ix') returns\
    \ 'et'\n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n  \
    \  for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];\n\
    \    }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThanks for\
    \ your answer! I understand that my code is not the most efficient way of doing\
    \ this, but I'm just trying to understand how it works. I understand that your\
    \ code is using ASCII to rotate the alphabet, but I don't understand how it works.\
    \ Could you explain how it works?\n<|/ c |>\n<| c |>\nASCII is a character encoding\
    \ scheme, where each character is represented by a number between 0 and 127. ASCII\
    \ is also the most common character encoding scheme in use today. ASCII is also\
    \ the most common character encoding scheme in use today. ASCII is also the most\
    \ common character encoding scheme in use today. ASCII is also the most common\
    \ character encoding scheme in use today. ASCII is also the most common character\
    \ encoding scheme in use today. ASCII is also the most common character encoding\
    \ scheme in use today. ASCII is also the most common character encoding scheme\
    \ in use today. ASCII is also the most common character encoding scheme in use\
    \ today.\n<|/ c |>\n<| c |>\nASCII is also the most common character encoding\
    \ scheme in use today. ASCII is also the most common character encoding scheme\
    \ in use today. ASCII is also the most common character encoding scheme in use\
    \ today. ASCII is also the most common character encoding scheme in use today.\
    \ ASCII is also the most common character encoding scheme in use today. ASCII\
    \ is also the most common character encoding scheme in use today. ASCII is also\
    \ the most common character encoding scheme in use today. ASCII is also the most\
    \ common character encoding scheme in use today. ASCII is also the most common\
    \ character encoding scheme in use today.\n<|/ c |>\n<| c |>\nASCII ", "{\n  \
    \  string alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    string result = \"\"\
    ;\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)\
    \ - 97];\n    }\n    return result;\n}\n</code>\n<|/ a tags=c++,encryption |>\n\
    <| c |>\nThis doesn't seem to work. `encrypt(\"gf\")` returns `kj` instead of\
    \ `kf`.\n<|/ c |>\n<| c |>\nIt does work. `gf` -> `kf`\n<|/ c |>\n<| c |>\nYes,\
    \ it does work. `gf` -> `kf`. But `encrypt(\"gf\")` returns `kj` instead of `kf`.\n\
    <|/ c |>\n<| c |>\nIt does work. `gf` -> `kf`. But `encrypt(\"gf\")` returns `kj`\
    \ instead of `kf`.\n<|/ c |>\n<| c |>\nIt does work. `gf` -> `kf`. But `encrypt(\"\
    gf\")` returns `kj` instead of `kf`.\n<|/ c |>\n<| a tags=c++,encryption |>\n\
    <code>\n#include <iostream>\n#include <string>\n#include <cmath>\nusing namespace\
    \ std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(s.at(i) - 'a') % 26];\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=encryption,c++,string |>\n<| c |>\nThis doesn't work. `encrypt(\"\
    abc\")` returns `\"\"` instead of `\"cba\"`.\n<|/ c |>\n<| c |>\nI fixed the bug,\
    \ thanks for pointing it out. Now it works.\n<|/ c |>\n<| c |>\nThis still doesn't\
    \ work. `encrypt(\"abc\")` returns `\"\"` instead of `\"cba\"`.\n<|/ c |>\n<|\
    \ c |>\nI fixed the bug, thanks for pointing it out. Now it works.\n<|/ c |>\n\
    <| c |>\nThis still doesn't work. `encrypt(\"abc\")` returns `\"\"` instead of\
    \ `\"cba\"`.\n<|/ c |>\n<| a tags=encryption,c++,string |>\n<code>\n#include <iostream>\n\
    #include <string>\n#include <cstring>", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += std.string.replace(s.substr(i,\
    \ 1), \"a\", \"z\") + std.string.replace(s.substr(i, 1), \"b\", \"y\") + std.string.replace(s.substr(i,\
    \ 1), \"c\", \"x\") + std.string.replace(s.substr(i, 1), \"d\", \"w\") + std.string.replace(s.substr(i,\
    \ 1), \"e\", \"v\") + std.string.replace(s.substr(i, 1), \"f\", \"u\") + std.string.replace(s.substr(i,\
    \ 1), \"g\", \"t\") + std.string.replace(s.substr(i, 1), \"h\", \"s\") + std.string.replace(s.substr(i,\
    \ 1), \"i\", \"r\") + std.string.replace(s.substr(i, 1), \"j\", \"q\") + std.string.replace(s.substr(i,\
    \ 1), \"k\", \"p\") + std.string.replace(s.substr(i, 1), \"l\", \"o\") + std.string.replace(s.substr(i,\
    \ 1), \"m\", \"n\") + std.string.replace(s.substr(i, 1), \"n\", \"m\") + std.string.replace(s.substr(i,\
    \ 1), \"o\", \"l\") + std.string.replace(s.substr(i, 1), \"p\", \"k\") + std.string.replace(s.substr(i,\
    \ 1), \"q\", \"r\");\n    }\n    return result;\n}\n/*\nCreate a function decrypt\
    \ that takes a string as an argument and\n    returns a string decrypted with\
    \ the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    encrypt('hi') returns 'lm'\n    encrypt('asdfghjkl') returns\
    \ 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n    encrypt('et') returns 'ix'\n\
    \    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += std.string.replace(s.substr(i,\
    \ 1), \"z\", \"a\") + std.string.replace(s.substr(i, 1), \"y\", \"b\") + std.string.replace(s.substr(i,\
    \ 1), \"x\", \"c\") + std.string.replace(s.substr(i, 1), \"w\", \"d\") + std.string.replace(s.substr(i,\
    \ 1), \"v\", \"e\") + std.string.replace(s.substr(i, 1), \"u\", \"f\") + std.string.replace(s.substr(i,\
    \ 1), \"t\", \"g\") + std.string.replace(s.substr(i, 1), \"s\", \"h\") + std.string.replace(s.substr(i,\
    \ 1), \"r\", \"i\") + std.string.replace(s.substr(i, 1), \"q\", \"j\") + ", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s.charAt(i) - 'a'];\n    }\n    return result;\n\
    }\n/*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n    encrypt('asdfghjkl')\
    \ returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n    encrypt('et') returns\
    \ 'ix'\n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n  \
    \  for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - 'a'];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string encrypted with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    rotate('hi') returns 'lm'\n    rotate('asdfghjkl') returns 'ewhjklnop'\n\
    \    rotate('gf') returns 'kj'\n    rotate('et') returns 'ix'\n    \n*/\nstring\
    \ rotate(string s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(int)s.charAt(i) - 'a'];\n    }\n  \
    \  return result;\n}\n/*\nCreate a function rotate that takes a string as an argument\
    \ and\n    returns a string decrypted with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    rotate('hi') returns\
    \ 'lm'\n    rotate('asdfghjkl') returns 'ewhjklnop'\n    rotate('gf') returns\
    \ 'kj'\n    rotate('et') returns 'ix'\n    \n*/\nstring unrotate(string s) \n\
    {\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[(int)s.charAt(i) - 'a'];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string encrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    ", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(s.at(i)\
    \ - 'a') % 26];\n    }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<|\
    \ c |>\nThank you so much for the help! I really appreciate it!\n<|/ c |>\n<|\
    \ c |>\nNo problem! If this answer helped you, please consider marking it as accepted\
    \ so other people can see that your question has been answered.\n<|/ c |>\n<|\
    \ c |>\nI tried to do that but my reputation is too low for it to show publicly\n\
    <|/ c |>\n<| c |>\nNo worries, glad I could help!\n<|/ c |>\n<| a |>\n<code>\n\
    #include <iostream>\n#include <string>\n#include <cmath>\nusing namespace std;\n\
    string alphabet = \"abcdefghijklmnopqrstuvwxyz\";\nstring encrypt(string s)\n\
    {\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[(s.at(i) - 'a') % 26];\n    }\n    return result;\n\
    }", "{\n    string alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(alphabet.indexOf(s[i])\
    \ + 2) % alphabet.length];\n    }\n    return result;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nThis doesn't work. Try encrypting \"hi\" with your code.\n<|/ c\
    \ |>\n<| c |>\nI tested it and it works fine. Are you sure you copied the code\
    \ correctly? The code I posted is exactly the code I tested it with.\n<|/ c |>\n\
    <| c |>\nI tested it and it works fine. Are you sure you copied the code correctly?\
    \ The code I posted is exactly the code I tested it with.\n<|/ c |>\n<| c |>\n\
    I tested it and it works fine. Are you sure you copied the code correctly? The\
    \ code I posted is exactly the code I tested it with.\n<|/ c |>\n<| c |>\nI tested\
    \ it and it works fine. Are you sure you copied the code correctly? The code I\
    \ posted is exactly the code I tested it with.\n<|/ c |>\n<| a tags=encryption,c++\
    \ |>\n<code>\n#include <iostream>\n#include <string>\nusing namespace std;", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n}",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += chars[(int)std.random.nextDouble()%chars.length] + chars[(int)std.random.nextDouble()%chars.length];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    decrypt('lm')\
    \ returns 'hi'\n    decrypt('ewhjklnop') returns 'asdfghjkl'\n    decrypt('kj')\
    \ returns 'gf'\n    decrypt('ix') returns 'et'\n    \n*/\nstring decrypt(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += chars[(int)std.random.nextDouble()%chars.length] + chars[(int)std.random.nextDouble()%chars.length];\n\
    \    }\n    return result;\n}\n/*\nCreate a function encryptString that takes\
    \ a string as an argument and\n    returns a string encrypted with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    encryptString('hi') returns 'lm'\n    encryptString('asdfghjkl') returns\
    \ 'ewhjklnop'\n    encryptString('gf') returns 'kj'\n    encryptString('et') returns\
    \ 'ix'\n    \n*/\nstring encryptString(string s) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += chars[(int)std.random.nextDouble()%chars.length]\
    \ + chars[(int)std.random.nextDouble()%chars.length];\n    }\n    return result;\n\
    }\n/*\nCreate a function decryptString that takes a string as an argument and\n\
    \    returns a string decrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n    decryptString('lm') returns\
    \ 'hi'\n    decryptString('ewhjklnop') returns 'asdfghjkl'\n    decryptString('kj')\
    \ returns 'gf'\n    decryptString('ix') returns 'et'\n    \n*/\nstring decryptString(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n", "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += std.string.rotate(s.at(i), 2);\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=string,c++,encryption |>\n<| a tags=string,c++,encryption\
    \ |>\n<code>\n#include <iostream>\n#include <string>\n#include <algorithm>\nusing\
    \ namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(int)((int)s.at(i) + 2)];\n    }\n \
    \   return result;\n}\n</code>\n<|/ a tags=c++,encryption,string |>\n<| c |>\n\
    Thanks for the help! I appreciate it!\n<|/ c |>\n<| a tags=c++,encryption,string\
    \ |>\n<code>\n#include <iostream>\n#include <string>\n#include <cstring>\nusing\
    \ namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += std.string.rep(s.charAt(i) + 2, std.string.len(s)\
    \ - i - 2);\n    }\n    return result;\n}", "{\n    string result = \"\";\n  \
    \  for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - 97];\n    }\n    return result;\n}\n</code>\n<|/ a tags=encryption,c++ |>\n\
    <| c |>\nThanks so much! This was really helpful!\n<|/ c |>\n<| a dscore=0 |>\n\
    <code>\n#include <iostream>\n#include <string>\n#include <cstring>\n#include <cstdlib>\n\
    using namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += chars[(int)std.math.mod(std.math.add(chars.indexOf(s[i]),\
    \ 2), 26)];\n    }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\n\
    Thanks for your answer. I tried your code, but I got this error \"error: no matching\
    \ function for call to 'encrypt'\".\n<|/ c |>\n<| c |>\nI edited my answer to\
    \ include the full code I tested with. Make sure you copy and paste it exactly.\
    \ Make sure you change the variable names and function names as well.\n<|/ c |>\n\
    <| c |>\nI copied your code, but I got this error \"error: no matching function\
    \ for call to 'encrypt'\".\n<|/ c |>\n<| c |>\nI edited my answer to include the\
    \ full code I tested with. Make sure you copy and paste it exactly. Make sure\
    \ you change the variable names and function names as well.\n<|/ c |>\n<| c |>\n\
    I copied your code, but I got this error \"error: no matching function for call\
    \ to 'encrypt'\".\n<|/ c |>\n<| a tags=encryption,c++,string |>\n<code>\n#include\
    \ <iostream>\n#include <string>\n#include <algorithm>\n#include <cmath>\nusing\
    \ namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(int)((int)s.charAt(i) + 2)];\n    }\n\
    \    return result;\n}\n/*\nCreate a function decrypt that takes a string as an\
    \ argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    decrypt('lm')\
    \ returns 'hi'\n    decrypt('ewhjklnop') returns 'asdfghjkl'\n    decrypt('kj')\
    \ returns 'gf'\n    decrypt('ix') returns 'et'\n    \n*/\nstring decrypt(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)((int)s.charAt(i) - 2)];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rotate that takes a string as an argument\
    \ and\n    returns a string encrypted with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    rotate('hi') returns\
    \ 'lm'\n    rotate('asdfghjkl') returns 'ewhjklnop'\n    rotate('gf') returns\
    \ 'kj'\n    rotate('et') returns 'ix'\n    \n*/\nstring rotate(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)((int)s.charAt(i) + 2)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    rotate('lm') returns 'hi'\n    rotate('ewhjklnop')\
    \ returns 'asdfghjkl'\n    rotate('kj') returns 'gf'\n    rotate('ix') returns\
    \ 'et'\n    \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n   \
    \ for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)((int)s.charAt(i)\
    \ - 2)];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string encrypted with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n", "{\n    string alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n   \
    \ string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n    \
    \    result += alphabet[(int)s.at(i) - 97];\n    }\n    return result;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nThis doesn't work. `encrypt('gf') returns 'kj'` should\
    \ be `encrypt('gf') returns 'kj'`\n<|/ c |>\n<| c |>\nYes, I fixed it now. Thanks\
    \ for pointing it out.\n<|/ c |>\n<| a tags=c++,encryption,string |>\n<code>\n\
    #include <iostream>\n#include <string>\nusing namespace std;", "{\n    string\
    \ alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - alphabet.Length];\n    }\n    return result;\n}\n/*\nCreate a function decrypt\
    \ that takes a string as an argument and\n    returns a string decrypted with\
    \ the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    encrypt('hi') returns 'lm'\n    encrypt('asdfghjkl') returns\
    \ 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n    encrypt('et') returns 'ix'\n\
    \    \n*/\nstring decrypt(string s) \n{\n    string alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[(int)s.charAt(i) + alphabet.Length];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rotate that takes a string as an argument\
    \ and\n    returns a string rotated in the manner described above.\n    For example:\n\
    \    rotate('hi') returns 'hi'\n    rotate('asdfghjkl') returns 'asdfghjkl'\n\
    \    rotate('gf') returns 'gfghijkl'\n    rotate('et') returns 'et'\n    \n*/\n\
    string rotate(string s) \n{\n    string alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[(int)s.charAt(i) - alphabet.Length];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rotate that takes a string as an argument\
    \ and\n    returns a string rotated in the manner described above.\n    For example:\n\
    \    rotate('hi') returns 'hi'\n    rotate('asdfghjkl') returns 'asdfghjkl'\n\
    \    rotate('gf') returns 'gfghijkl'\n    rotate('et') returns 'et'\n    \n*/\n\
    string rotate(string s) \n{\n    string alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[(int)s.charAt(i) + alphabet.Length];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rotate that takes a string as an argument\
    \ and\n    returns a string rot", "{\n    string alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[(alphabet.size() - alphabet.find(s[i])) + 2];\n  \
    \  }\n    return result;\n}\n</code>\n<|/ a tags=encryption,c++,string,algorithm\
    \ |>\n<| c |>\nThe `find` method is not guaranteed to return the index of the\
    \ first occurrence of the character in the string. `find` returns the index of\
    \ the first occurrence of the character in the string. `find` returns `string::npos`\
    \ if the character is not found. `find` returns the index of the first occurrence\
    \ of the character in the string. `find` returns the index of the first occurrence\
    \ of the character in the string. `find` returns the index of the first occurrence\
    \ of the character in the string. `find` returns the index of the first occurrence\
    \ of the character in the string. `find` returns the index of the first occurrence\
    \ of the character in the string. `find` returns the index of the first occurrence\
    \ of the character in the string. `find` returns the index of the first occurrence\
    \ of the character in the string. `find` returns the index of the first occurrence\
    \ of the character in the string. `find` returns the index of the first occurrence\
    \ of the character in the string. `find` returns the index of the first occurrence\
    \ of the character in the string. `find` returns the index of the first occurrence\
    \ of the character in the string. `find` returns the index of the first occurrence\
    \ of the character in the string. `find` returns the index of the first occurrence\
    \ of the character in the string. `find` returns the index of the first occurrence\
    \ of the character in the string. `find` returns the index of the first occurrence\
    \ of the character in the string. `find` returns the index of the first occurrence\
    \ of the character in the string. `find` returns the index of the first occurrence\
    \ of the character in the string. `find` returns the index of the first occurrence\
    \ of the character in the string. `find` returns the index of the first occurrence\
    \ of the character in the string. `find` returns the index of the first occurrence\
    \ of the character in the string. `find` returns the index of the first occurrence\
    \ of the character in the string. `find` returns the index of the first occurrence\
    \ of the character in the string. `find` returns the index of the first occurrence\
    \ of the character in the string. `find` returns the index of the first occurrence\
    \ of the character in the string. `find` returns the index of the first occurrence\
    \ of the character in the string. `find` returns the index of the first occurrence\
    \ of the character in the string. `find` returns the index of the first occurrence\
    \ of the character in the string. `find` returns the index of the first occurrence\
    \ of the character in the string. `find` returns the index of the first occurrence\
    \ of the character in the string. `find` returns the index of the first occurrence\
    \ of the character in the string. `find` returns the index of the first occurrence\
    \ of the character in the string. `find` returns the index of the first occurrence\
    \ of the character in the string. `find` returns the index of the first occurrence\
    \ of the character in the ", "{\n    string result = \"\";\n    for(int i = 0;\
    \ i < s.length(); i++)\n    {\n        result += alphabet[(int)s[i]];\n    }\n\
    \    return result;\n}\n/*\nCreate a function decrypt that takes a string as an\
    \ argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    encrypt('hi')\
    \ returns 'lm'\n    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf')\
    \ returns 'kj'\n    encrypt('et') returns 'ix'\n    \n*/\nstring decrypt(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s[s.length() - 1 - i]];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rotate that takes a string as an argument\
    \ and\n    returns a string encrypted with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    encrypt('hi') returns\
    \ 'lm'\n    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns\
    \ 'kj'\n    encrypt('et') returns 'ix'\n    \n*/\nstring rotate(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s[s.length() - 1 - i]];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n    encrypt('asdfghjkl')\
    \ returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n    encrypt('et') returns\
    \ 'ix'\n    \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n   \
    \ for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[i]];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string encrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n", "{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ decrypt that takes a string as an argument and\n    returns a string decrypted\
    \ with the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    decrypt('lm') returns 'hi'\n    decrypt('ewhjklnop') returns\
    \ 'asdfghjkl'\n    decrypt('kj') returns 'gf'\n    decrypt('ix') returns 'et'\n\
    \    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string encrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    rotate('hi')\
    \ returns 'asdfghjkl'\n    rotate('asdfghjkl') returns 'hi'\n    rotate('gf')\
    \ returns 'et'\n    rotate('et') returns 'gf'\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    rotate('lm') returns 'hi'\n    rotate('ewhjklnop')\
    \ returns 'asdfghjkl'\n    rotate('kj') returns 'gf' \n    rotate('ix') returns\
    \ 'et'\n    \n*/\nstring unrotate(string s) \n{\n    string result = \"\";\n \
    \   for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string encrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    rotate('hi",
  "{\n    string alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    string result = \"\
    \";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - 'a' + 2];\n    }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| c\
    \ |>\nThis doesn't work. Try encrypting \"abcdefghijklmnopqrstuvwxyz\".\n<|/ c\
    \ |>\n<| c |>\nIt works fine for me. Try it out yourself. I tested it on ideone.com\
    \ and it works fine.\n<|/ c |>\n<| c |>\nIt doesn't work for me on ideone.com.\
    \ Try it out yourself. I tested it on ideone.com and it works fine.\n<|/ c |>\n\
    <| c |>\nIt works for me on ideone.com. Try it out yourself. I tested it on ideone.com\
    \ and it works fine.\n<|/ c |>\n<| c |>\nIt works for me on ideone.com. Try it\
    \ out yourself. I tested it on ideone.com and it works fine.\n<|/ c |>\n<| a dscore=0\
    \ |>\n<code>\n#include <iostream>\n#include <string>\n#include <cmath>\nusing\
    \ namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += s.charAt(i) + s.charAt(i);\n    }\n    return\
    \ result;\n}\n/*\nCreate a function decrypt that takes a string as an argument\
    \ and\n    returns a string decrypted with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    decrypt('lm') returns\
    \ 'hi'\n    decrypt('ewhjklnop') returns 'asdfghjkl'\n    decrypt('kj') returns\
    \ 'gf'\n    decrypt('ix') returns 'et'\n    \n*/\nstring decrypt(string s) \n\
    {\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += s.charAt(i) + s.charAt(i);\n    }\n    return result;\n}\n\
    /*\nCreate a function rot13 that takes a string as an argument and\n    returns\
    \ a string rotated 13 places clockwise.\n    For example:\n    rot13('hi') returns\
    \ 'nkr'\n    rot13('asdfghjkl') returns 'zlkjhgfdsa'\n    rot13('gf') returns\
    \ 'gf'\n    rot13('et') returns 'et'\n    \n*/\nstring rot13(string s) \n{\n \
    \   string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n  \
    \      result += s.charAt(i) + s.charAt(i);\n    }\n    return result;\n}\n/*\n\
    Create a function rot13 that takes a string as an argument and\n    returns a\
    \ string rotated 13 places counterclockwise.\n    For example:\n    rot13('nkr')\
    \ returns 'hi'\n    rot13('zlkjhgfdsa') returns 'asdfghjkl'\n    rot13('gf') returns\
    \ 'gf'\n    rot13('et') returns 'et'\n    \n*/\nstring rot13(string s) \n{\n \
    \   string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n  \
    \      result += s.charAt(i) + s.charAt(i);\n    }\n    return result;\n}\n/*\n\
    Create a function rot13 that takes a string as an argument and\n    returns a\
    \ string rotated 13 places clockwise and counterclockwise.\n    For example:\n\
    \    rot13('hi') returns 'nkr'\n    rot13('asdfghjkl') returns 'zlkjhgfdsa'\n\
    \    rot13('gf') returns 'gf'\n    rot13('et') returns 'et", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += s.at(i\
    \ + 1) + s.at(i);\n    }\n    return result;\n}\n/*\nCreate a function decrypt\
    \ that takes a string as an argument and\n    returns a string decrypted with\
    \ the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    encrypt('hi') returns 'lm'\n    encrypt('asdfghjkl') returns\
    \ 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n    encrypt('et') returns 'ix'\n\
    \    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += s.at(i) - s.at(i + 1);\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated in the manner described above.\n\
    \    For example:\n    rotate('hi') returns 'ih'\n    rotate('asdfghjkl') returns\
    \ 'asdfgjhkl'\n    rotate('gf') returns 'gfh'\n    rotate('et') returns 'et'\n\
    \    \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += s.at(i) + s.at(i + 1);\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated in the manner described above.\n\
    \    For example:\n    rotate('hi') returns 'ih'\n    rotate('asdfghjkl') returns\
    \ 'asdfgjhkl'\n    rotate('gf') returns 'gfh'\n    rotate('et') returns 'et'\n\
    \    \n*/\nstring rotate(string s, int n) \n{\n    string result = \"\";\n   \
    \ for(int i = 0; i < s.length(); i++)\n    {\n        result += s.at(i) + s.at(i\
    \ + n);\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated in the manner described\
    \ above.\n    For example:\n    rotate('hi', 2) returns 'ih'\n    rotate('asdfghjkl',\
    \ 2) returns 'asdfgjhkl'\n    rotate('gf', 2) returns 'gfh'\n    rotate('et',\
    \ 2) returns 'et'\n    \n*/\nstring rotate(string s, int n, int ", "{\n    string\
    \ alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(alphabet.indexOf(s.charAt(i))\
    \ + (alphabet.indexOf(s.charAt(i)) % 2)];\n    }\n    return result;\n}\n</code>\n\
    <|/ a tags=encryption,c++,string |>\n<| a tags=encryption,c++,string |>\n<code>\n\
    #include <iostream>\n#include <string>\n#include <algorithm>\n#include <cmath>\n\
    using namespace std;", "{\n    string alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[(int)s.charAt(i) - 97];\n    }\n    return result;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't seem to work. `encrypt('hi')`\
    \ returns `'lm'`, but `encrypt('asdfghjkl')` returns `'ewhjklnop'`.\n<|/ c |>\n\
    <| c |>\nI see what you mean. I'll update my answer.\n<|/ c |>\n<| c |>\nI updated\
    \ my answer with a new solution.\n<|/ c |>\n<| c |>\nThanks, I appreciate it!\n\
    <|/ c |>\n<| a tags=encryption,c++ |>\n<code>\n#include <iostream>\n#include <string>\n\
    using namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n    }\n    return\
    \ result;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't work. `encrypt('gf')\
    \ returns 'kj'` should be `encrypt('gf') returns 'kj'`\n<|/ c |>\n<| c |>\nI fixed\
    \ the typo. Thanks for pointing it out.\n<|/ c |>\n<| c |>\nThis doesn't work\
    \ either. `encrypt('gf') returns 'kj'` should be `encrypt('gf') returns 'kj'`\n\
    <|/ c |>\n<| c |>\nI fixed the typo. Thanks for pointing it out.\n<|/ c |>\n<|\
    \ c |>\nThis doesn't work either. `encrypt('gf') returns 'kj'` should be `encrypt('gf')\
    \ returns 'kj'`\n<|/ c |>\n<| a tags=c++,encryption,string |>\n<code>\n#include\
    \ <iostream>\n#include <string>\nusing namespace std;", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(s.at(i)\
    \ - 'a' + 2) % 26];\n    }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n\
    <| c |>\nThanks for your answer! I appreciate it. I tried your code, and it works\
    \ perfectly. I'm just wondering why my code didn't work. I'm new to programming,\
    \ so I appreciate your help a lot.\n<|/ c |>\n<| c |>\nI added some explanation\
    \ to the answer. Hope it helps.\n<|/ c |>\n<| c |>\nThank you so much! I really\
    \ appreciate your help. I really appreciate your explanation as well. I'm new\
    \ to programming, so I appreciate your help a lot.\n<|/ c |>\n<| c |>\nNo problem!\
    \ Glad I could help.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n\
    #include <string>\nusing namespace std;", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - alphabet.length()];\n    }\n    return result;\n}\n/*\nCreate a function decrypt\
    \ that takes a string as an argument and\n    returns a string decrypted with\
    \ the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    encrypt('hi') returns 'lm'\n    encrypt('asdfghjkl') returns\
    \ 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n    encrypt('et') returns 'ix'\n\
    \    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ + alphabet.length()];\n    }\n    return result;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nI appreciate your help but I am not allowed to use any built in\
    \ functions. I must use my own functions to solve this problem. Thank you for\
    \ your help though.\n<|/ c |>\n<| c |>\nI added my own functions to my answer.\
    \ Hope it helps.\n<|/ c |>\n<| c |>\nThank you so much! I really appreciate your\
    \ help. I really appreciate your help.\n<|/ c |>\n<| c |>\nYou're welcome. Glad\
    \ I could help. If you found my answer helpful, please consider accepting it by\
    \ clicking the check mark next to my answer.\n<|/ c |>\n<| c |>\nI did but since\
    \ I am new it says I have to wait 5 minutes before I can accept it. Thanks again\
    \ for your help.\n<|/ c |>\n<| a dscore=0 |>\nI realize this has been answered\
    \ but for anyone who stumbles across this question and wants to know how to solve\
    \ this problem without using any built in functions, here's a solution that I\
    \ came up with:\n<code>\n#include <iostream>\n#include <string>\n#include <vector>\n\
    #include <algorithm>\nusing namespace std;", "{\n    string result = \"\";\n \
    \   for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet.at(s.at(i)\
    \ - 'a' + 1);\n    }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| c\
    \ |>\nThank you so much! I appreciate it!\n<|/ c |>\n<| c |>\nNo problem! If this\
    \ answer helped you, please consider marking it as accepted so others know it\
    \ worked for you.\n<|/ c |>\n<| c |>\nI did but since I am new it says I have\
    \ to wait 2 minutes before I can accept it\n<|/ c |>\n<| c |>\nNo worries, glad\
    \ I could help!\n<|/ c |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n#include\
    \ <string>\n#include <cmath>\n#include <cstdlib>\n#include <ctime>\n#include <cstring>\n\
    using namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(int)s.charAt(i) - alphabet.length()];\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=encryption,c++,string |>\n\
    <| c |>\nThanks for your answer! I did some testing and it seems like the encryption\
    \ works fine, but when I try to decrypt the encrypted string, it gives me a weird\
    \ output. For example, if I encrypt \"hi\" it gives me \"lm\", but when I try\
    \ to decrypt \"lm\", it gives me \"hi\". Any idea why?\n<|/ c |>\n<| c |>\nI added\
    \ the code to the original post\n<|/ c |>\n<| c |>\nI added the code to the original\
    \ post\n<|/ c |>\n<| c |>\nI added the code to the original post\n<|/ c |>\n<|\
    \ c |>\nI added the code to the original post\n<|/ c |>\n<| a tags=encryption,c++,string\
    \ |>\nI wrote a solution that is more efficient than yours. I used a lookup table\
    \ to convert the letters to numbers and vice versa. \n<code>\n#include <iostream>\n\
    #include <string>\n#include <algorithm>\n#include <cctype>\n#include <cmath>",
  "{\n    string alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    string result = \"\
    \";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ + 2];\n    }\n    return result;\n}\n</code>\n<|/ a tags=encryption,c++,string\
    \ |>\n<| c |>\nThis doesn't seem to work. `encrypt(\"gf\")` returns `kj` instead\
    \ of `kf`.\n<|/ c |>\n<| c |>\nIt works fine for me. Are you sure you copied it\
    \ correctly? I tested it on ideone.com and it returned `kf`.\n<|/ c |>\n<| c |>\n\
    Yes, I copied it correctly. I'm running it on ideone.com.\n<|/ c |>\n<| c |>\n\
    I guess ideone.com is running it on C++11. Try it on ideone.com's C++11 compiler.\
    \ Or try it on ideone.com's C++03 compiler. Or try it on ideone.com's C++03 compiler,\
    \ with C++11 turned off.\n<|/ c |>\n<| c |>\nI tested it on ideone.com's C++03\
    \ compiler, with C++11 turned off. Still returns `kj`.\n<|/ c |>\n<| a dscore=0\
    \ |>\n<code>\n#include <iostream>\n#include <string>\n#include <algorithm>", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += std.string.replace(s.chars, s.chars[i], std.string.replace(s.chars,\
    \ s.chars[i], std.string.replace(s.chars, s.chars[i], std.string.replace(s.chars,\
    \ s.chars[i], std.string.replace(s.chars, s.chars[i], std.string.replace(s.chars,\
    \ s.chars[i], std.string.replace(s.chars, s.chars[i], std.string.replace(s.chars,\
    \ s.chars[i], std.string.replace(s.chars, s.chars[i], std.string.replace(s.chars,\
    \ s.chars[i], std.string.replace(s.chars, s.chars[i], std.string.replace(s.chars,\
    \ s.chars[i], std.string.replace(s.chars, s.chars[i], std.string.replace(s.chars,\
    \ s.chars[i], std.string.replace(s.chars, s.chars[i], std.string.replace(s.chars,\
    \ s.chars[i], std.string.replace(s.chars, s.chars[i], std.string.replace(s.chars,\
    \ s.chars[i], std.string.replace(s.chars, s.chars[i], std.string.replace(s.chars,\
    \ s.chars[i], std.string.replace(s.chars, s.chars[i], std.string.replace(s.chars,\
    \ s.chars[i], std.string.replace(s.chars, s.chars[i], std.string.replace(s.chars,\
    \ s.chars[i], std.string.replace(s.chars, s.chars[i], std.string.replace(s.chars,\
    \ s.chars[i], std.string.replace(s.chars, s.chars[i], std.string.replace(s.chars,\
    \ s.chars[i], std.string.replace(s.chars, s.chars[i], std.string.replace(s.chars,\
    \ s.chars[i], std.string.replace(s.chars, s.chars[i], std.string.replace(s.chars,\
    \ s.chars[i], std.string.replace(s.chars, s.chars[i], std.string.replace(s.chars,\
    \ s.chars[i], std.string.replace(s.chars, s.chars[i], std.string.replace(s.chars,\
    \ s.chars[i], std.string.replace(s.chars, s.chars[i], std.string.replace(s.chars,\
    \ s.chars[i], std.string.replace(s.chars, s.chars[i], std.string.replace(s.chars,\
    \ s.chars[i], std.string.replace(s.chars, s.chars[i], std.string.replace(s.chars,\
    \ s.chars[i], std.string.replace(s.chars, s.chars[i], std.string.replace(s.chars,\
    \ s.chars[i], std.string.replace(s.chars, s.chars[i], std.string.replace(s.chars,\
    \ s.chars[i], std.string.replace(s.chars, s.chars[i], std.string.replace(s.chars,\
    \ s.chars[i], std.string.replace(s.chars, s.chars[i], std.string.replace(", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)(((int)s[i] + 2) % 26)];\n    }\n    return result;\n\
    }", "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n \
    \   {\n        result += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n\
    }", "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n \
    \   {\n        result += alphabet[(int)(((int)s.at(i) - 97 + 2) % 26)];\n    }\n\
    \    return result;\n}\n/*\nCreate a function decrypt that takes a string as an\
    \ argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    encrypt('hi')\
    \ returns 'lm'\n    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf')\
    \ returns 'kj'\n    encrypt('et') returns 'ix'\n    \n*/\nstring decrypt(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)(((int)s.at(i) - 97 - 2) % 26)];\n   \
    \ }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThank you so\
    \ much for your help! I really appreciate it!\n<|/ c |>\n<| c |>\nNo problem!\
    \ If this answer helped you, please consider marking it as accepted (by clicking\
    \ the check mark next to it). That way others know that your problem has been\
    \ solved and can focus on other questions. Thanks!\n<|/ c |>\n<| c |>\nI did that\
    \ but my reputation is too low for it to show publicly\n<|/ c |>\n<| c |>\nNo\
    \ worries, glad I could help!\n<|/ c |>\n<| a dscore=0 |>\nI wrote a program that\
    \ does this in C#. \n<code>\nusing System;\nusing System.Collections.Generic;\n\
    using System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;", "{\n \
    \   string result = \"\";\n    for(int i = 0; i < s.length; i++)\n    {\n    \
    \    result += s.charAt(i) + s.charAt(i);\n    }\n    return result;\n}\n/*\n\
    Create a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n    encrypt('asdfghjkl')\
    \ returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n    encrypt('et') returns\
    \ 'ix'\n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n  \
    \  for(int i = 0; i < s.length; i++)\n    {\n        result += s.charAt(i) + s.charAt(i);\n\
    \    }\n    return result;\n}\n/*\nCreate a function rot13 that takes a string\
    \ as an argument and\n    returns a string encrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by 13 multiplied to 13 places.\n    For example:\n    encrypt('hi')\
    \ returns 'yx'\n    encrypt('asdfghjkl') returns 'zab'\n    encrypt('gf') returns\
    \ 'jf'\n    encrypt('et') returns 'za'\n    \n*/\nstring rot13(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length; i++)\n    {\n   \
    \     result += s.charAt(i) + s.charAt(i);\n    }\n    return result;\n}\n/*\n\
    Create a function rot13 that takes a string as an argument and\n    returns a\
    \ string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by 13 multiplied\
    \ to 13 places.\n    For example:\n    encrypt('hi') returns 'yx'\n    encrypt('asdfghjkl')\
    \ returns 'zab'\n    encrypt('gf') returns 'jf'\n    encrypt('et') returns 'za'\n\
    \    \n*/\nstring rot13(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length; i++)\n    {\n        result += s.charAt(i) + s.charAt(i);\n\
    \    }\n    return result;\n}\n/*\nCreate a function rot13 that takes a string\
    \ as an argument and\n    returns a string encrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by 13 multiplied to 13 places.\n    For example:\n    encrypt('hi') ",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[(int)s.at(i)];\n    }\n    return result;\n}\n/*\n\
    Create a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    decrypt('lm') returns 'hi'\n    decrypt('ewhjklnop')\
    \ returns 'asdfghjkl'\n    decrypt('kj') returns 'gf'\n    decrypt('ix') returns\
    \ 'et'\n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n  \
    \  for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    rotate('hi')\
    \ returns 'gf'\n    rotate('asdfghjkl') returns 'ix'\n    rotate('gf') returns\
    \ 'et'\n    rotate('et') returns 'hi'\n    \n*/\nstring rotate(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s.at(i)];\n    }\n    return result;\n}\n/*\n\
    Create a function rotate that takes a string as an argument and\n    returns a\
    \ string rotated with the alphabet being rotated. \n    The alphabet should be\
    \ rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    rotate('hi') returns 'gf'\n    rotate('asdfghjkl')\
    \ returns 'ix'\n    rotate('gf') returns 'et'\n    rotate('et') returns 'hi'\n\
    \    \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    rotate('hi')\
    \ returns 'gf'\n    ", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(s.at(i) - 'a') % 26];\n    }\n    return\
    \ result;\n}\n</code>\n<|/ a dscore=1 |>\n<| a |>\n<code>\n#include <iostream>\n\
    #include <string>\n#include <cmath>\nusing namespace std;", "{\n    string alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n    string result = \"\";\n    for(int i\
    \ = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    encrypt('hi')\
    \ returns 'lm'\n    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf')\
    \ returns 'kj'\n    encrypt('et') returns 'ix'\n    \n*/\nstring decrypt(string\
    \ s) \n{\n    string alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rot13 that takes a string\
    \ as an argument and\n    returns a string encrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    rot13('hi')\
    \ returns 'kj'\n    rot13('asdfghjkl') returns 'ix'\n    rot13('gf') returns 'et'\n\
    \    rot13('et') returns 'gf' \n    \n*/\nstring rot13(string s) \n{\n    string\
    \ alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rot13 that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    rot13('hi')\
    \ returns 'kj'\n    rot13('asdfghjkl') returns 'ix'\n    rot13('gf') returns 'et'\n\
    \    rot13('et') returns 'gf' \n    \n*/\nstring rot13(string s) \n{\n    string\
    \ alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length", "{\n    string result = \"\";\n    for(int i = 0; i <\
    \ s.length(); i++)\n    {\n        result += alphabet[(s.at(i) - 'a') % 26];\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=encryption,c++,string |>\n\
    <| c |>\nThis doesn't work. Try encrypting \"abc\".\n<|/ c |>\n<| c |>\nIt works\
    \ fine for me. Try it here: http://ideone.com/2WVZ0\n<|/ c |>\n<| c |>\nIt doesn't\
    \ work for me on ideone.com. Try it here: http://ideone.com/2WVZ0\n<|/ c |>\n\
    <| c |>\nIt works fine for me on ideone.com. Try it here: http://ideone.com/2WVZ0\n\
    <|/ c |>\n<| c |>\nIt works fine for me on ideone.com. Try it here: http://ideone.com/2WVZ0\n\
    <|/ c |>\n<| a tags=encryption,c++,string |>\n<code>\n#include <iostream>\n#include\
    \ <string>\n#include <algorithm>\nusing namespace std;", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)(((int)s.charAt(i)\
    \ - 97 + 2) % 26)];\n    }\n    return result;\n}\n/*\nCreate a function decrypt\
    \ that takes a string as an argument and\n    returns a string decrypted with\
    \ the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    encrypt('hi') returns 'lm'\n    encrypt('asdfghjkl') returns\
    \ 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n    encrypt('et') returns 'ix'\n\
    \    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)(((int)s.charAt(i)\
    \ - 97 - 2) % 26)];\n    }\n    return result;\n}\n/*\nCreate a function rotate\
    \ that takes a string as an argument and\n    returns a string encrypted with\
    \ the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    rotate('hi') returns 'lm'\n    rotate('asdfghjkl') returns\
    \ 'ewhjklnop'\n    rotate('gf') returns 'kj'\n    rotate('et') returns 'ix'\n\
    \    \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)(((int)s.charAt(i)\
    \ - 97 + 2) % 26)];\n    }\n    return result;\n}\n/*\nCreate a function rotate\
    \ that takes a string as an argument and\n    returns a string decrypted with\
    \ the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    rotate('hi') returns 'lm'\n    rotate('asdfghjkl') returns\
    \ 'ewhjklnop'\n    rotate('gf') returns 'kj'\n    rotate('et') returns 'ix'\n\
    \    \n*/\nstring unrotate(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)(((int)s.charAt(i)\
    \ - 97 - 2) % 26)];\n    }\n    return result;\n}\n</code>\n<|/ a tags=c++,encryption,string\
    \ |>\n", "{\n    string result = \"\";\n    for(int i = 0; i < s.length; i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| c |>\nI appreciate your help but I am not allowed\
    \ to use any libraries. I am also not allowed to use any loops or conditionals.\
    \ I am also not allowed to use any arrays or lists.\n<|/ c |>\n<| c |>\nI added\
    \ a solution that doesn't use any libraries.\n<|/ c |>\n<| c |>\nThank you so\
    \ much! I appreciate your help and I understand it much better now.\n<|/ c |>\n\
    <| c |>\nI added a solution that doesn't use any loops or conditionals.\n<|/ c\
    \ |>\n<| c |>\nThank you so much! I appreciate your help and I understand it much\
    \ better now.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n#include\
    \ <string>\n#include <algorithm>\nusing namespace std;"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

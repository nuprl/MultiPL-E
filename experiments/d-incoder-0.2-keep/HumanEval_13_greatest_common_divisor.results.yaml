name: HumanEval_13_greatest_common_divisor
language: humaneval_to_dlang.py
results:
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    gcd = 1;\n    while (a != 0) {\n  \
    \      if (a > b) {\n            a %= b;\n        } else {\n            b %= a;\n\
    \        }\n        gcd = std.math.gcd(gcd, b);\n    }\n    return gcd;\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsgi7bd6z.d(22): Error: undefined identifier `gcd` in module `std.math`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsgi7bd6z.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (b != 0) {\n\t\tlong r = a % b;\n\t\
    \ta = b;\n\t\tb = r;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpkvxpyhkl.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d6d]\\n??:? void tmpkvxpyhkl.__unittest_L21_C1()\
    \ [0x427a8f]\\n??:? void tmpkvxpyhkl.__modtest() [0x427af0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42ba93]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a926]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fab9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a8fd]\\n??:? runModuleUnitTests [0x42b869]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281bc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428143]\\n??:? _d_run_main [0x4280ae]\\n??:? main [0x427b03]\\\
    n??:? __libc_start_main [0xde8a4554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd = 1;\n    long remainder;\n    while (b != 0) {\n\
    \        remainder = b;\n        b = a % b;\n        a = remainder;\n        gcd\
    \ = remainder;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate =\
    \ greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = a;\n\twhile (b > 0) {\n\t\tlong t =\
    \ b;\n\t\tb = a % b;\n\t\ta = t;\n\t}\n\t\n\treturn gcd;\n}\nunittest\n{\n   \
    \ alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) ==\
    \ 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp3520knmk.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d7d]\\n??:? void tmp3520knmk.__unittest_L24_C1()\
    \ [0x427a75]\\n??:? void tmp3520knmk.__modtest() [0x427afc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baa3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a936]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fac9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a90d]\\n??:? runModuleUnitTests [0x42b879]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281cc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428153]\\n??:? _d_run_main [0x4280be]\\n??:? main [0x427b0f]\\\
    n??:? __libc_start_main [0xb8d1e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\t\n\twhile (a != 0) {\n\t\tif (a > b) {\n\t\
    \t\ta %= b;\n\t\t} else {\n\t\t\tb %= a;\n\t\t}\n\t\tgcd = (gcd > a) ? gcd : a;\n\
    \t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp3905glpu.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427da5]\\n??:? void tmp3905glpu.__unittest_L25_C1()\
    \ [0x427a9d]\\n??:? void tmp3905glpu.__modtest() [0x427b24]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bacb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a95e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42faf1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a935]\\n??:? runModuleUnitTests [0x42b8a1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42817b]\\n??:? _d_run_main [0x4280e6]\\n??:? main [0x427b37]\\\
    n??:? __libc_start_main [0x9c99f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (b > 0) {\n\t\tlong t = a % b;\n\t\t\
    a = b;\n\t\tb = t;\n\t\tgcd = gcd * b;\n\t}\n\treturn gcd;\n}\nunittest\n{\n \
    \   alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp2102dsi6.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d85]\\n??:? void tmp2102dsi6.__unittest_L22_C1()\
    \ [0x427a7d]\\n??:? void tmp2102dsi6.__modtest() [0x427b04]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baab]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a93e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a915]\\n??:? runModuleUnitTests [0x42b881]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281d4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42815b]\\n??:? _d_run_main [0x4280c6]\\n??:? main [0x427b17]\\\
    n??:? __libc_start_main [0x137d0554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long c;\n    \n    if (b == 0)\n        return a;\n    \n\
    \    c = a % b;\n    \n    if (c != 0)\n        return greatest_common_divisor(b,\
    \ c);\n    \n    return b;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    gcd = __gcd(a, b);\n    \n    if (gcd == 1)\n        return a;\n    \n\
    \    return __gcd(b, gcd);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpguq8n3ij.d(18): Error: undefined identifier `__gcd`, did you\
    \ mean variable `gcd`?\\n/tmp/tmpguq8n3ij.d(23): Error: undefined identifier `__gcd`,\
    \ did you mean variable `gcd`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmpguq8n3ij.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd = 1;\n    long temp;\n    \n    while (b != 0)\
    \ {\n        temp = a%b;\n        a = b;\n        b = temp;\n        gcd = gcd\
    \ > b ? gcd : b;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp9fjvw6ey.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d85]\\n??:? void tmp9fjvw6ey.__unittest_L24_C1()\
    \ [0x427a81]\\n??:? void tmp9fjvw6ey.__modtest() [0x427b08]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baab]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a93e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a915]\\n??:? runModuleUnitTests [0x42b881]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281d4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42815b]\\n??:? _d_run_main [0x4280c6]\\n??:? main [0x427b1b]\\\
    n??:? __libc_start_main [0xf98b5554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd = 1;\n    long tmp;\n    while (b != 0) {\n   \
    \     tmp = b;\n        b = a % b;\n        a = tmp;\n        gcd = (gcd > a)\
    \ ? gcd : a;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpha62ygwt.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d8d]\\n??:? void tmpha62ygwt.__unittest_L23_C1()\
    \ [0x427a89]\\n??:? void tmpha62ygwt.__modtest() [0x427b10]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bab3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a946]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a91d]\\n??:? runModuleUnitTests [0x42b889]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281dc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428163]\\n??:? _d_run_main [0x4280ce]\\n??:? main [0x427b23]\\\
    n??:? __libc_start_main [0x3d4ba554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd = 1;\n    while (a != 0) {\n        long r = a\
    \ % b;\n        a = b;\n        b = r;\n    }\n    return gcd;\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: -8
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    gcd = a;\n    \n    while (gcd > b)\
    \ {\n        gcd = (gcd % b);\n    }\n    \n    return gcd;\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp08d7q0xa.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d65]\\n??:? void tmp08d7q0xa.__unittest_L23_C1()\
    \ [0x427a61]\\n??:? void tmp08d7q0xa.__modtest() [0x427ae8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42ba8b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a91e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fab1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa3d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a8f5]\\n??:? runModuleUnitTests [0x42b861]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281b4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42813b]\\n??:? _d_run_main [0x4280a6]\\n??:? main [0x427afb]\\\
    n??:? __libc_start_main [0x7eaf6554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    gcd = greatest_common_divisor(b, a % b);\n    return gcd;\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    gcd = a % b;\n    while (a != 0) {\n\
    \        a = b;\n        b = gcd;\n        gcd = a % b;\n    }\n    return gcd;\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: -8
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = a % b;\n\twhile (a != 0) {\n\t\ta =\
    \ b;\n\t\tb = gcd;\n\t\tgcd = a % b;\n\t}\n\treturn gcd;\n}\nunittest\n{\n   \
    \ alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) ==\
    \ 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: -8
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a < b) {\n        long t = a;\n\
    \        a = b;\n        b = t;\n    }\n    \n    gcd = 1;\n    \n    while (a\
    \ != 0) {\n        if (a > b) {\n            gcd = b;\n            b = a % b;\n\
    \            a = b;\n        } else {\n            gcd = a;\n            a = a\
    \ % b;\n        }\n    }\n    \n    return gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpt_i9d5h1.d(43): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427da5]\\n??:? void tmpt_i9d5h1.__unittest_L36_C1()\
    \ [0x427b13]\\n??:? void tmpt_i9d5h1.__modtest() [0x427b28]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bacb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a95e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42faf1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a935]\\n??:? runModuleUnitTests [0x42b8a1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42817b]\\n??:? _d_run_main [0x4280e6]\\n??:? main [0x427b3b]\\\
    n??:? __libc_start_main [0x51cec554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a == 0 || b == 0)\n        return\
    \ 0;\n    \n    if (a > b)\n        std.swap(a, b);\n    \n    gcd = std.gcd(a,\
    \ b);\n    \n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp99h7n3dx.d(19): Error: undefined identifier `swap` in package\
    \ `std`\\n/tmp/tmp99h7n3dx.d(21): Error: undefined identifier `gcd` in package\
    \ `std`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp99h7n3dx.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    gcd = __gcd(a, b);\n    \n    if (gcd == 1)\n        return a;\n    \n\
    \    return greatest_common_divisor(b % gcd, a);\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1niwabcf.d(18): Error: undefined identifier `__gcd`, did you\
    \ mean variable `gcd`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmp1niwabcf.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd = 1;\n    while (a != 0) {\n        long r = a\
    \ % b;\n        a = b;\n        b = r;\n    }\n    return gcd;\n}\n/*\n Return\
    \ true if a is a power of b\n*/\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: -8
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    gcd = greatest_common_divisor(b, a % b);\n    \n    if (gcd == 0)\n \
    \       return b;\n    \n    return gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd = 1;\n    long remainder;\n    \n    while (b !=\
    \ 0) {\n        remainder = b % a;\n        gcd = remainder > gcd ? remainder\
    \ : gcd;\n        b = a % b;\n        a = gcd;\n    }\n    return gcd;\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpddpt5_ln.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d95]\\n??:? void tmpddpt5_ln.__unittest_L24_C1()\
    \ [0x427ad9]\\n??:? void tmpddpt5_ln.__modtest() [0x427b14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42babb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a94e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fae1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a925]\\n??:? runModuleUnitTests [0x42b891]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42816b]\\n??:? _d_run_main [0x4280d6]\\n??:? main [0x427b27]\\\
    n??:? __libc_start_main [0x8a9af554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (b > 0) {\n\t\tlong t = b;\n\t\tb =\
    \ a % b;\n\t\ta = t;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpaa_f9sbq.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d75]\\n??:? void tmpaa_f9sbq.__unittest_L21_C1()\
    \ [0x427a97]\\n??:? void tmpaa_f9sbq.__modtest() [0x427af8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42ba9b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a92e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fac1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff70]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa4d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a905]\\n??:? runModuleUnitTests [0x42b871]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281c4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42814b]\\n??:? _d_run_main [0x4280b6]\\n??:? main [0x427b0b]\\\
    n??:? __libc_start_main [0x71ec4554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = a;\n\twhile (b > 0) {\n\t\tlong t =\
    \ b;\n\t\tb = a % b;\n\t\ta = t;\n\t}\n\t\n\treturn gcd;\n}\nunittest\n{\n   \
    \ alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) ==\
    \ 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmplaz2c57f.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d7d]\\n??:? void tmplaz2c57f.__unittest_L24_C1()\
    \ [0x427a75]\\n??:? void tmplaz2c57f.__modtest() [0x427afc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baa3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a936]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fac9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a90d]\\n??:? runModuleUnitTests [0x42b879]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281cc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428153]\\n??:? _d_run_main [0x4280be]\\n??:? main [0x427b0f]\\\
    n??:? __libc_start_main [0x12a43554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = 1;\n\t\n\twhile (a != 0) {\n\t\tif\
    \ (a > b) {\n\t\t\ta %= b;\n\t\t} else {\n\t\t\tb %= a;\n\t\t}\n\t\tgcd = std.math.gcd(gcd,\
    \ b);\n\t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpf1ofe2pz.d(23): Error: undefined identifier `gcd` in module `std.math`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf1ofe2pz.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (b != 0) {\n\t\tlong tmp = b;\n\t\t\
    b = a % b;\n\t\ta = tmp;\n\t\tgcd = (gcd > a) ? gcd : a;\n\t}\n\treturn gcd;\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp0j68n_d_.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d85]\\n??:? void tmp0j68n_d_.__unittest_L22_C1()\
    \ [0x427a81]\\n??:? void tmp0j68n_d_.__modtest() [0x427b08]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baab]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a93e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a915]\\n??:? runModuleUnitTests [0x42b881]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281d4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42815b]\\n??:? _d_run_main [0x4280c6]\\n??:? main [0x427b1b]\\\
    n??:? __libc_start_main [0x10658554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\tif(a==0) return b;\n\tif(b==0) return a;\n\t\
    if(a>b) std.swap(a,b);\n\tgcd = std.gcd(a,b);\n\tif(a%gcd==0) return gcd;\n\t\
    else return greatest_common_divisor(b,gcd);\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3wpp4l43.d(16): Error: undefined identifier `swap` in package\
    \ `std`\\n/tmp/tmp3wpp4l43.d(17): Error: undefined identifier `gcd` in package\
    \ `std`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3wpp4l43.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd = 1;\n    long remainder;\n    \n    while (b !=\
    \ 0) {\n        remainder = b % a;\n        a = b;\n        b = remainder;\n \
    \       gcd = gcd*a + remainder;\n    }\n    return gcd;\n}\nunittest\n{\n   \
    \ alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) ==\
    \ 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp19a_q1n9.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d85]\\n??:? void tmp19a_q1n9.__unittest_L24_C1()\
    \ [0x427a7d]\\n??:? void tmp19a_q1n9.__modtest() [0x427b04]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baab]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a93e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a915]\\n??:? runModuleUnitTests [0x42b881]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281d4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42815b]\\n??:? _d_run_main [0x4280c6]\\n??:? main [0x427b17]\\\
    n??:? __libc_start_main [0xe7bfb554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = 1;\n\t\n\twhile (a && b)\n\t{\n\t\t\
    if (a > b)\n\t\t{\n\t\t\ta %= b;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tb %= a;\n\t\t\
    }\n\t\t\n\t\tgcd *= a;\n\t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpm8e9izxd.d(37): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427da5]\\n??:? void tmpm8e9izxd.__unittest_L33_C1()\
    \ [0x427a9d]\\n??:? void tmpm8e9izxd.__modtest() [0x427b24]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bacb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a95e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42faf1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a935]\\n??:? runModuleUnitTests [0x42b8a1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42817b]\\n??:? _d_run_main [0x4280e6]\\n??:? main [0x427b37]\\\
    n??:? __libc_start_main [0xef06554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a == 0) return b;\n    if (b ==\
    \ 0) return a;\n    \n    gcd = __gcd(a, b);\n    if (gcd == 0) return a;\n  \
    \  \n    return greatest_common_divisor(b % gcd, a);\n}\nunittest\n{\n    alias\
    \ candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n\
    \    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n\
    \    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpd6waciqe.d(18): Error: undefined identifier `__gcd`, did you\
    \ mean variable `gcd`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpd6waciqe.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a < b) {\n        long tmp = a;\n\
    \        a = b;\n        b = tmp;\n    }\n    \n    gcd = 1;\n    \n    while\
    \ (a != 0) {\n        long tmp = a;\n        a = b%a;\n        b = tmp;\n    \
    \    gcd = (gcd > b) ? gcd : b;\n    }\n    \n    return gcd;\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpkw206m5d.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d9d]\\n??:? void tmpkw206m5d.__unittest_L32_C1()\
    \ [0x427a99]\\n??:? void tmpkw206m5d.__modtest() [0x427b20]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bac3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a956]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fae9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a92d]\\n??:? runModuleUnitTests [0x42b899]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281ec]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428173]\\n??:? _d_run_main [0x4280de]\\n??:? main [0x427b33]\\\
    n??:? __libc_start_main [0x37476554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile(b > 0) {\n\t\tif(b % 2 == 0) {\n\t\t\
    \ta /= 2;\n\t\t\tgcd *= 2;\n\t\t}\n\t\telse {\n\t\t\ta %= b;\n\t\t\tgcd *= b;\n\
    \t\t}\n\t\tb /= 2;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate =\
    \ greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp60l9qocw.d(31): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427db5]\\n??:? void tmp60l9qocw.__unittest_L27_C1()\
    \ [0x427aad]\\n??:? void tmp60l9qocw.__modtest() [0x427b34]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42badb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a96e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb01]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a945]\\n??:? runModuleUnitTests [0x42b8b1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428204]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42818b]\\n??:? _d_run_main [0x4280f6]\\n??:? main [0x427b47]\\\
    n??:? __libc_start_main [0x5cccb554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong c;\n\tc = a % b;\n\twhile (c != 0) {\n\t\ta = b;\n\t\t\
    b = c;\n\t\tc = a % b;\n\t}\n\treturn b;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = 1;\n\t\n\twhile (a != 0) {\n\t\tlong\
    \ r = a % b;\n\t\ta = b;\n\t\tb = r;\n\t\tgcd = std.math.gcd(gcd, b);\n\t}\n\t\
    \n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmph2u4b_tb.d(21): Error: undefined identifier `gcd` in module `std.math`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph2u4b_tb.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\t\n\twhile (a != 0) {\n\t\tif (a > b) {\n\t\
    \t\ta %= b;\n\t\t} else {\n\t\t\tb %= a;\n\t\t}\n\t\tgcd = (gcd > a) ? gcd : a;\n\
    \t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpr57s2hib.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427da5]\\n??:? void tmpr57s2hib.__unittest_L26_C1()\
    \ [0x427a9d]\\n??:? void tmpr57s2hib.__modtest() [0x427b24]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bacb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a95e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42faf1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a935]\\n??:? runModuleUnitTests [0x42b8a1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42817b]\\n??:? _d_run_main [0x4280e6]\\n??:? main [0x427b37]\\\
    n??:? __libc_start_main [0x320dd554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (b != 0)\n\t{\n\t\tlong r = a % b;\n\
    \t\ta = b;\n\t\tb = r;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp1gm_8aw0.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d6d]\\n??:? void tmp1gm_8aw0.__unittest_L22_C1()\
    \ [0x427a8f]\\n??:? void tmp1gm_8aw0.__modtest() [0x427af0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42ba93]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a926]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fab9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a8fd]\\n??:? runModuleUnitTests [0x42b869]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281bc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428143]\\n??:? _d_run_main [0x4280ae]\\n??:? main [0x427b03]\\\
    n??:? __libc_start_main [0xf2eb5554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = a % b;\n\twhile (gcd != 0)\n\t{\n\t\
    \ta = b;\n\t\tb = gcd;\n\t\tgcd = a % b;\n\t}\n\treturn b;\n}\nunittest\n{\n \
    \   alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    gcd = __gcd(a, b);\n    if (gcd == 0)\n        return b;\n    \n    return\
    \ __gcd(b, gcd);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9ve1xs1b.d(18): Error: undefined identifier `__gcd`, did you\
    \ mean variable `gcd`?\\n/tmp/tmp9ve1xs1b.d(22): Error: undefined identifier `__gcd`,\
    \ did you mean variable `gcd`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmp9ve1xs1b.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd = 1;\n    long remainder;\n    \n    while (b !=\
    \ 0) {\n        remainder = b % a;\n        gcd = std.math.max(gcd, remainder);\n\
    \        b = remainder;\n    }\n    \n    return gcd;\n}\nunittest\n{\n    alias\
    \ candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n\
    \    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n\
    \    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxzn2v2fr.d(18): Error: undefined identifier `max` in module `std.math`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpxzn2v2fr.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\tif(a==0)\n\t\treturn b;\n\tif(b==0)\n\t\treturn\
    \ a;\n\tif(a>b)\n\t\tstd.swap(a,b);\n\tfor(;;)\n\t{\n\t\tif(a%b==0)\n\t\t\treturn\
    \ b;\n\t\tif(b%a==0)\n\t\t\treturn a;\n\t\tif(a>b)\n\t\t\tstd.swap(a,b);\n\t\t\
    gcd=std.gcd(a,b);\n\t\tif(a/gcd==b)\n\t\t\treturn gcd;\n\t\tif(b/gcd==a)\n\t\t\
    \treturn gcd;\n\t}\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpguqi43oo.d(19): Error: undefined identifier `swap` in package\
    \ `std`\\n/tmp/tmpguqi43oo.d(27): Error: undefined identifier `swap` in package\
    \ `std`\\n/tmp/tmpguqi43oo.d(28): Error: undefined identifier `gcd` in package\
    \ `std`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpguqi43oo.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (a != 0) {\n\t\tlong r = a % b;\n\t\
    \ta = b;\n\t\tb = r;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: -8
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = a;\n\twhile (a != 0) {\n\t\tif (a >\
    \ b) {\n\t\t\ta = a - b;\n\t\t} else {\n\t\t\tb = b - a;\n\t\t}\n\t\tgcd = gcd*b;\n\
    \t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tif(b == 0)\n\t\treturn a;\n\t\n\tif(b ==\
    \ 1)\n\t\treturn a;\n\t\n\tif(a%b == 0)\n\t\treturn b;\n\t\n\tgcd = greatest_common_divisor(b,\
    \ a % b);\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpepsjfe35.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d85]\\n??:? void tmpepsjfe35.__unittest_L28_C1()\
    \ [0x427a7d]\\n??:? void tmpepsjfe35.__modtest() [0x427b04]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baab]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a93e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a915]\\n??:? runModuleUnitTests [0x42b881]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281d4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42815b]\\n??:? _d_run_main [0x4280c6]\\n??:? main [0x427b17]\\\
    n??:? __libc_start_main [0xed38d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    gcd = std.math.gcd(a, b);\n    return\
    \ gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n   \
    \ assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n \
    \   assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpubwewla8.d(15): Error: undefined identifier `gcd` in module `std.math`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpubwewla8.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    if (a < 0)\n        a = -a; \n    \n    if (b < 0)\n        b = -b;\n\
    \    \n    for (;;) {\n        gcd = a % b;\n        if (gcd == 0)\n         \
    \   return b;\n        a = b;\n        b = gcd;\n    }\n}\nunittest\n{\n    alias\
    \ candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n\
    \    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n\
    \    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (b != 0)\n\t{\n\t\tlong t = b;\n\t\t\
    b = a % b;\n\t\ta = t;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp0_rtua8i.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d75]\\n??:? void tmp0_rtua8i.__unittest_L22_C1()\
    \ [0x427a97]\\n??:? void tmp0_rtua8i.__modtest() [0x427af8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42ba9b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a92e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fac1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff70]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa4d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a905]\\n??:? runModuleUnitTests [0x42b871]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281c4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42814b]\\n??:? _d_run_main [0x4280b6]\\n??:? main [0x427b0b]\\\
    n??:? __libc_start_main [0xa8ecb554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tif(b == 0)\n\t\treturn a;\n\t\n\tif(b ==\
    \ 1)\n\t\treturn a;\n\t\n\tif(b > a)\n\t{\n\t\tgcd = greatest_common_divisor(b,\
    \ a%b);\n\t\treturn gcd;\n\t}\n\t\n\tgcd = a;\n\t\n\twhile(b > 0)\n\t{\n\t\tgcd\
    \ = b%gcd;\n\t\tb = gcd;\n\t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp7sv_fg2q.d(41): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dad]\\n??:? void tmp7sv_fg2q.__unittest_L37_C1()\
    \ [0x427aa5]\\n??:? void tmp7sv_fg2q.__modtest() [0x427b2c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bad3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a966]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42faf9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a93d]\\n??:? runModuleUnitTests [0x42b8a9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281fc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428183]\\n??:? _d_run_main [0x4280ee]\\n??:? main [0x427b3f]\\\
    n??:? __libc_start_main [0x70e10554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a == 0 || b == 0)\n        return\
    \ 0;\n    \n    gcd = __gcd(a, b);\n    \n    return gcd;\n}\nunittest\n{\n  \
    \  alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5noe8mp4.d(18): Error: undefined identifier `__gcd`, did you\
    \ mean variable `gcd`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmp5noe8mp4.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (b != 0) {\n\t\tif (a % b == 0) {\n\
    \t\t\tgcd = b;\n\t\t\tbreak;\n\t\t}\n\t\tb = b / 2;\n\t}\n\treturn gcd;\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpz2oouy2n.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d85]\\n??:? void tmpz2oouy2n.__unittest_L23_C1()\
    \ [0x427a7d]\\n??:? void tmpz2oouy2n.__modtest() [0x427b04]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baab]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a93e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a915]\\n??:? runModuleUnitTests [0x42b881]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281d4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42815b]\\n??:? _d_run_main [0x4280c6]\\n??:? main [0x427b17]\\\
    n??:? __libc_start_main [0x9f1f7554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (b != 0) {\n\t\tlong r = a % b;\n\t\
    \ta = b;\n\t\tb = r;\n\t\tgcd = gcd > b ? gcd : b;\n\t}\n\treturn gcd;\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpw9iri8__.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d85]\\n??:? void tmpw9iri8__.__unittest_L22_C1()\
    \ [0x427a81]\\n??:? void tmpw9iri8__.__modtest() [0x427b08]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baab]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a93e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a915]\\n??:? runModuleUnitTests [0x42b881]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281d4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42815b]\\n??:? _d_run_main [0x4280c6]\\n??:? main [0x427b1b]\\\
    n??:? __libc_start_main [0xb55e7554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd = 1;\n    long remainder;\n    \n    while (b !=\
    \ 0) {\n        remainder = b;\n        b = a % b;\n        a = remainder;\n \
    \       gcd = (gcd > remainder) ? gcd : remainder;\n    }\n    return gcd;\n}\n\
    unittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpmmc1lczj.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d8d]\\n??:? void tmpmmc1lczj.__unittest_L24_C1()\
    \ [0x427a89]\\n??:? void tmpmmc1lczj.__modtest() [0x427b10]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bab3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a946]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a91d]\\n??:? runModuleUnitTests [0x42b889]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281dc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428163]\\n??:? _d_run_main [0x4280ce]\\n??:? main [0x427b23]\\\
    n??:? __libc_start_main [0x7748e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = a % b;\n\twhile (gcd != 0)\n\t{\n\t\
    \ta = b;\n\t\tb = gcd;\n\t\tgcd = a % b;\n\t}\n\treturn b;\n}\nunittest\n{\n \
    \   alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (a != 0) {\n\t\tif (a > b) {\n\t\t\t\
    a %= b;\n\t\t} else {\n\t\t\tb %= a;\n\t\t}\n\t\tgcd = (gcd > a) ? gcd : a;\n\t\
    }\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp7gbc7p6_.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427da5]\\n??:? void tmp7gbc7p6_.__unittest_L24_C1()\
    \ [0x427a9d]\\n??:? void tmp7gbc7p6_.__modtest() [0x427b24]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bacb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a95e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42faf1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a935]\\n??:? runModuleUnitTests [0x42b8a1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42817b]\\n??:? _d_run_main [0x4280e6]\\n??:? main [0x427b37]\\\
    n??:? __libc_start_main [0x57e88554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (a != 0) {\n\t\tif (a > b) {\n\t\t\t\
    a %= b;\n\t\t} else {\n\t\t\tb %= a;\n\t\t}\n\t\tgcd *= b;\n\t}\n\treturn gcd;\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpl1m02v4p.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d95]\\n??:? void tmpl1m02v4p.__unittest_L24_C1()\
    \ [0x427ab3]\\n??:? void tmpl1m02v4p.__modtest() [0x427b14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42babb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a94e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fae1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a925]\\n??:? runModuleUnitTests [0x42b891]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42816b]\\n??:? _d_run_main [0x4280d6]\\n??:? main [0x427b27]\\\
    n??:? __libc_start_main [0x262c7554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (a != 0) {\n\t\tlong r = a % b;\n\t\
    \ta = b;\n\t\tb = r;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: -8
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a == 0) return b;\n    if (b ==\
    \ 0) return a;\n    \n    gcd = __gcd(a, b);\n    if (gcd == 0) return a;\n  \
    \  return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpaaw0i67b.d(18): Error: undefined identifier `__gcd`, did you\
    \ mean variable `gcd`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpaaw0i67b.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    gcd = __gcd(a, b);\n    \n    if (gcd == 0)\n        return a;\n    \n\
    \    return __gcd(b, __gcd(a, gcd));\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpi8ncjw6m.d(18): Error: undefined identifier `__gcd`, did you\
    \ mean variable `gcd`?\\n/tmp/tmpi8ncjw6m.d(23): Error: undefined identifier `__gcd`,\
    \ did you mean variable `gcd`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmpi8ncjw6m.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = std.math.gcd(a, b);\n\t\n\treturn gcd;\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp49dopuob.d(15): Error: undefined identifier `gcd` in module `std.math`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp49dopuob.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = 1;\n\twhile (b > 0) {\n\t\tlong t =\
    \ b;\n\t\tb = a % b;\n\t\ta = t;\n\t}\n\t\n\treturn gcd;\n}\nunittest\n{\n   \
    \ alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) ==\
    \ 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpqxzmdryg.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d7d]\\n??:? void tmpqxzmdryg.__unittest_L24_C1()\
    \ [0x427a9f]\\n??:? void tmpqxzmdryg.__modtest() [0x427b00]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baa3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a936]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fac9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a90d]\\n??:? runModuleUnitTests [0x42b879]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281cc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428153]\\n??:? _d_run_main [0x4280be]\\n??:? main [0x427b13]\\\
    n??:? __libc_start_main [0x24c6b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    if (a < b)\n        swap(a, b);\n    \n    gcd = __gcd(a, b);\n    \n\
    \    if (gcd == 1)\n        return a;\n    \n    return greatest_common_divisor(b,\
    \ gcd);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n  \
    \  assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpklsig6u2.d(19): Error: undefined identifier `swap`, did you mean\
    \ template `wrap(Targets...) if (Targets.length >= 1 && allSatisfy!(isMutable,\
    \ Targets))`?\\n/tmp/tmpklsig6u2.d(21): Error: undefined identifier `__gcd`, did\
    \ you mean variable `gcd`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmpklsig6u2.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a < b) {\n        long tmp = a;\n\
    \        a = b;\n        b = tmp;\n    }\n    \n    gcd = 1;\n    \n    while\
    \ (a != 0) {\n        long r = a % b;\n        a = b;\n        b = r;\n      \
    \  gcd = gcd * b;\n    }\n    \n    return gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: -8
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    gcd = greatest_common_divisor(b, a % b);\n    return gcd;\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    gcd = __gcd(a, b);\n    \n    if (gcd == 1)\n        return a;\n    \n\
    \    return greatest_common_divisor(b, gcd);\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxdl9314j.d(18): Error: undefined identifier `__gcd`, did you\
    \ mean variable `gcd`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpxdl9314j.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = 1;\n\t\n\twhile (a != 0) {\n\t\tlong\
    \ r = a % b;\n\t\ta = b;\n\t\tb = r;\n\t}\n\t\n\twhile (a != 0) {\n\t\tlong r\
    \ = a % b;\n\t\ta = b;\n\t\tb = r;\n\t}\n\t\n\treturn gcd;\n}\nunittest\n{\n \
    \   alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: -8
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a < b) {\n        long t = a;\n\
    \        a = b;\n        b = t;\n    }\n    \n    gcd = 1;\n    \n    while (a\
    \ != 0) {\n        if (a > b) {\n            gcd = b;\n            b = a % b;\n\
    \            a = b;\n        } else {\n            gcd = a;\n            a = a\
    \ % b;\n        }\n    }\n    \n    return gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpqryoaou4.d(43): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427da5]\\n??:? void tmpqryoaou4.__unittest_L36_C1()\
    \ [0x427b13]\\n??:? void tmpqryoaou4.__modtest() [0x427b28]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bacb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a95e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42faf1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a935]\\n??:? runModuleUnitTests [0x42b8a1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42817b]\\n??:? _d_run_main [0x4280e6]\\n??:? main [0x427b3b]\\\
    n??:? __libc_start_main [0x310ee554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tif(b == 0)\n\t\treturn a;\n\t\n\tif(b ==\
    \ 1)\n\t\treturn a;\n\t\n\tgcd = greatest_common_divisor(b, a % b);\n\t\n\treturn\
    \ gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n   \
    \ assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n \
    \   assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp2wh4i1tj.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d6d]\\n??:? void tmp2wh4i1tj.__unittest_L25_C1()\
    \ [0x427a69]\\n??:? void tmp2wh4i1tj.__modtest() [0x427af0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42ba93]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a926]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fab9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a8fd]\\n??:? runModuleUnitTests [0x42b869]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281bc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428143]\\n??:? _d_run_main [0x4280ae]\\n??:? main [0x427b03]\\\
    n??:? __libc_start_main [0x470c5554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\twhile (a != 0) {\n\t\tgcd = a % b;\n\t\t\
    a = b;\n\t\tb = gcd;\n\t}\n\treturn b;\n}\nunittest\n{\n    alias candidate =\
    \ greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: -8
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    if (a < 0)\n        a = -a;\n    \n    if (b < 0)\n        b = -b;\n\
    \    \n    gcd = __gcd(a, b);\n    \n    if (gcd != 1)\n        gcd = __gcd(gcd,\
    \ b);\n    \n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvvlnxd1z.d(24): Error: undefined identifier `__gcd`, did you\
    \ mean variable `gcd`?\\n/tmp/tmpvvlnxd1z.d(27): Error: undefined identifier `__gcd`,\
    \ did you mean variable `gcd`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmpvvlnxd1z.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\tlong remainder;\n\twhile (b != 0) {\n\t\t\
    remainder = b % a;\n\t\ta = b;\n\t\tb = remainder;\n\t\tgcd = remainder;\n\t}\n\
    \treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpn9suttq2.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d75]\\n??:? void tmpn9suttq2.__unittest_L23_C1()\
    \ [0x427a6d]\\n??:? void tmpn9suttq2.__modtest() [0x427af4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42ba9b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a92e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fac1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff70]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa4d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a905]\\n??:? runModuleUnitTests [0x42b871]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281c4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42814b]\\n??:? _d_run_main [0x4280b6]\\n??:? main [0x427b07]\\\
    n??:? __libc_start_main [0x8d8ae554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\tlong remainder;\n\t\n\twhile (b > 0) {\n\t\
    \tremainder = b % a;\n\t\tb = a % b;\n\t\ta = remainder;\n\t\tgcd = gcd ? gcd\
    \ : a;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: -8
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (b != 0) {\n\t\tlong tmp = b;\n\t\t\
    b = a % b;\n\t\ta = tmp;\n\t\tgcd = gcd > a ? gcd : a;\n\t}\n\treturn gcd;\n}\n\
    unittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp719za1zn.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d85]\\n??:? void tmp719za1zn.__unittest_L22_C1()\
    \ [0x427a81]\\n??:? void tmp719za1zn.__modtest() [0x427b08]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baab]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a93e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a915]\\n??:? runModuleUnitTests [0x42b881]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281d4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42815b]\\n??:? _d_run_main [0x4280c6]\\n??:? main [0x427b1b]\\\
    n??:? __libc_start_main [0x263f6554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile(b != 0) {\n\t\tif(b & 1) gcd = std.math.gcd(gcd,\
    \ a);\n\t\ta >>= 1;\n\t\tb >>= 1;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias\
    \ candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n\
    \    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n\
    \    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_c5t8ixi.d(15): Error: undefined identifier `gcd` in module `std.math`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_c5t8ixi.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd = 1;\n    while (a != 0) {\n        if (a > b)\
    \ {\n            a %= b;\n        } else {\n            b %= a;\n        }\n \
    \       gcd = (gcd > a) ? gcd : a;\n    }\n    return gcd;\n}\nunittest\n{\n \
    \   alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpdj9jgot1.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427da5]\\n??:? void tmpdj9jgot1.__unittest_L24_C1()\
    \ [0x427a9d]\\n??:? void tmpdj9jgot1.__modtest() [0x427b24]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bacb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a95e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42faf1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a935]\\n??:? runModuleUnitTests [0x42b8a1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42817b]\\n??:? _d_run_main [0x4280e6]\\n??:? main [0x427b37]\\\
    n??:? __libc_start_main [0x4084e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    gcd = greatest_common_divisor(b, a % b);\n    return gcd;\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd = 1;\n    \n    while (a != 0) {\n        if (a\
    \ > b) {\n            a %= b;\n        } else {\n            b %= a;\n       \
    \ }\n        gcd = std.math.gcd(gcd, b);\n    }\n    return gcd;\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsqzpsklh.d(21): Error: undefined identifier `gcd` in module `std.math`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsqzpsklh.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    gcd = __gcd(a, b);\n    \n    if (gcd == 1)\n        return a;\n    \n\
    \    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpewt490jx.d(18): Error: undefined identifier `__gcd`, did you\
    \ mean variable `gcd`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpewt490jx.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\tlong remainder;\n\t\n\twhile (b != 0)\n\t\
    {\n\t\tremainder = b;\n\t\tb = a % b;\n\t\ta = remainder;\n\t\tgcd = remainder;\n\
    \t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\t\n\twhile (a != 0) {\n\t\tlong r = a % b;\n\
    \t\ta = b;\n\t\tb = r;\n\t}\n\t\n\twhile (a != 0) {\n\t\tlong r = a % b;\n\t\t\
    a = b;\n\t\tb = r;\n\t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: -8
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    if (a < b)\n        swap(a, b);\n    \n    for (gcd = a; a % b != 0;\
    \ a = b) {\n        b = a % b;\n    }\n    \n    return gcd;\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7ciwgucf.d(19): Error: undefined identifier `swap`, did you mean\
    \ template `wrap(Targets...) if (Targets.length >= 1 && allSatisfy!(isMutable,\
    \ Targets))`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7ciwgucf.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\twhile (b != 0)\n\t{\n\t\tgcd = std.math.gcd(a,\
    \ b);\n\t\ta = std.math.mod(a, gcd);\n\t\tb = std.math.mod(b, gcd);\n\t}\n\t\n\
    \treturn a;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n\
    \    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpr41m1u6n.d(17): Error: undefined identifier `gcd` in module `std.math`\\\
    n/tmp/tmpr41m1u6n.d(18): Error: undefined identifier `mod` in module `std.math`,\
    \ did you mean function `fmod`?\\n/tmp/tmpr41m1u6n.d(19): Error: undefined identifier\
    \ `mod` in module `std.math`, did you mean function `fmod`?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr41m1u6n.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (a != 0) {\n\t\tlong r = a % b;\n\t\
    \ta = b;\n\t\tb = r;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: -8
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    gcd = greatest_common_divisor(b, a % b);\n    \n    return gcd;\n}\n\
    unittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = 1;\n\t\n\twhile (a && b)\n\t{\n\t\t\
    if (a > b)\n\t\t{\n\t\t\ta %= b;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tb %= a;\n\t\t\
    }\n\t\t\n\t\tgcd = std.math.gcd(gcd, b);\n\t\t\n\t\ta = std.math.gcd(a, b);\n\t\
    }\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptgrx86rz.d(28): Error: undefined identifier `gcd` in module `std.math`\\\
    n/tmp/tmptgrx86rz.d(30): Error: undefined identifier `gcd` in module `std.math`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptgrx86rz.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long c;\n    \n    c = a % b;\n    \n    while (c != 0)\n\
    \    {\n        c = b%a;\n        a = b;\n        b = c;\n    }\n    \n    return\
    \ a;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpwnvwkxu_.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d7d]\\n??:? void tmpwnvwkxu_.__unittest_L26_C1()\
    \ [0x427ac5]\\n??:? void tmpwnvwkxu_.__modtest() [0x427b00]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baa3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a936]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fac9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a90d]\\n??:? runModuleUnitTests [0x42b879]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281cc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428153]\\n??:? _d_run_main [0x4280be]\\n??:? main [0x427b13]\\\
    n??:? __libc_start_main [0x8296c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd = 1;\n    while (b != 0) {\n        if (a > b)\
    \ {\n            a %= b;\n        }\n        else {\n            b %= a;\n   \
    \     }\n        gcd = std.math.gcd(gcd, b);\n    }\n    return gcd;\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpf6iey1yt.d(21): Error: undefined identifier `gcd` in module `std.math`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf6iey1yt.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (b != 0) {\n\t\tlong r = a % b;\n\t\
    \ta = b;\n\t\tb = r;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpktadg1ta.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d6d]\\n??:? void tmpktadg1ta.__unittest_L21_C1()\
    \ [0x427a8f]\\n??:? void tmpktadg1ta.__modtest() [0x427af0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42ba93]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a926]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fab9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a8fd]\\n??:? runModuleUnitTests [0x42b869]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281bc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428143]\\n??:? _d_run_main [0x4280ae]\\n??:? main [0x427b03]\\\
    n??:? __libc_start_main [0xebb01554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    gcd = __gcd(a, b);\n    \n    if (gcd == 1)\n        return a;\n    \n\
    \    return greatest_common_divisor(b, gcd);\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgroky80_.d(18): Error: undefined identifier `__gcd`, did you\
    \ mean variable `gcd`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpgroky80_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (b != 0) {\n\t\tlong r = a % b;\n\t\
    \ta = b;\n\t\tb = r;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp1p870pge.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d6d]\\n??:? void tmp1p870pge.__unittest_L21_C1()\
    \ [0x427a8f]\\n??:? void tmp1p870pge.__modtest() [0x427af0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42ba93]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a926]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fab9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a8fd]\\n??:? runModuleUnitTests [0x42b869]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281bc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428143]\\n??:? _d_run_main [0x4280ae]\\n??:? main [0x427b03]\\\
    n??:? __libc_start_main [0x5821e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = a;\n\twhile (a != 0) {\n\t\ta = b %\
    \ a;\n\t\tgcd = gcd % a;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: -8
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd = 1;\n    long t;\n    \n    while (b != 0)\n \
    \   {\n        t = b;\n        b = a % b;\n        a = t;\n        gcd = gcd *\
    \ b;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpxcyeecnt.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d95]\\n??:? void tmpxcyeecnt.__unittest_L25_C1()\
    \ [0x427a8d]\\n??:? void tmpxcyeecnt.__modtest() [0x427b14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42babb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a94e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fae1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a925]\\n??:? runModuleUnitTests [0x42b891]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42816b]\\n??:? _d_run_main [0x4280d6]\\n??:? main [0x427b27]\\\
    n??:? __libc_start_main [0xd6ac5554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\tlong remainder;\n\twhile (b != 0) {\n\t\t\
    remainder = b % a;\n\t\tb = a;\n\t\ta = remainder;\n\t\tgcd = remainder;\n\t}\n\
    \treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: -8
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd = 1;\n    long remainder;\n    \n    while (b !=\
    \ 0)\n    {\n        remainder = b%a;\n        a = b;\n        b = remainder;\n\
    \        gcd = gcd*a;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpcr9xfmhm.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d7d]\\n??:? void tmpcr9xfmhm.__unittest_L25_C1()\
    \ [0x427a75]\\n??:? void tmpcr9xfmhm.__modtest() [0x427afc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baa3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a936]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fac9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a90d]\\n??:? runModuleUnitTests [0x42b879]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281cc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428153]\\n??:? _d_run_main [0x4280be]\\n??:? main [0x427b0f]\\\
    n??:? __libc_start_main [0x9f0c3554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong c;\n\tc = a % b;\n\twhile (c != 0) {\n\t\ta = b;\n\t\t\
    b = c;\n\t\tc = a % b;\n\t}\n\treturn b;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\t\n\twhile (b != 0)\n\t{\n\t\tlong r = a %\
    \ b;\n\t\ta = b;\n\t\tb = r;\n\t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias\
    \ candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n\
    \    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n\
    \    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpx3zwwqxy.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d6d]\\n??:? void tmpx3zwwqxy.__unittest_L24_C1()\
    \ [0x427a8f]\\n??:? void tmpx3zwwqxy.__modtest() [0x427af0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42ba93]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a926]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fab9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a8fd]\\n??:? runModuleUnitTests [0x42b869]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281bc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428143]\\n??:? _d_run_main [0x4280ae]\\n??:? main [0x427b03]\\\
    n??:? __libc_start_main [0x1966d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd = 1;\n    while (b > 0) {\n        long t = a %\
    \ b;\n        a = b;\n        b = t;\n        gcd++;\n    }\n    return gcd;\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpfthosb2z.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d75]\\n??:? void tmpfthosb2z.__unittest_L22_C1()\
    \ [0x427a6d]\\n??:? void tmpfthosb2z.__modtest() [0x427af4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42ba9b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a92e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fac1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff70]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa4d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a905]\\n??:? runModuleUnitTests [0x42b871]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281c4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42814b]\\n??:? _d_run_main [0x4280b6]\\n??:? main [0x427b07]\\\
    n??:? __libc_start_main [0xf76f8554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    gcd = greatest_common_divisor(b, a % b);\n    return gcd;\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tif(b == 0)\n\t\treturn a;\n\t\n\tgcd = greatest_common_divisor(b,\
    \ a % b);\n\t\n\tif(b > 0)\n\t\treturn gcd(b, a % b);\n\telse\n\t\treturn gcd;\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp66am8no9.d(21): Error: function expected before `()`, not `gcd`\
    \ of type `long`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp66am8no9.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    gcd = __gcd(a, b);\n    if (gcd == 1)\n        return a;\n    \n    return\
    \ greatest_common_divisor(b, gcd);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxxefu7dc.d(18): Error: undefined identifier `__gcd`, did you\
    \ mean variable `gcd`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpxxefu7dc.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (a != 0) {\n\t\tlong r = a % b;\n\t\
    \ta = b;\n\t\tb = r;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: -8
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = 1;\n\twhile (a != 0) {\n\t\tif (a >\
    \ b) {\n\t\t\ta %= b;\n\t\t} else {\n\t\t\tb %= a;\n\t\t}\n\t\tgcd = std.math.gcd(gcd,\
    \ b);\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzimo5h7b.d(22): Error: undefined identifier `gcd` in module `std.math`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzimo5h7b.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    gcd = __gcd(a, b);\n    if (gcd > a)\n        return gcd;\n    return\
    \ a;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpyrp6cccj.d(18): Error: undefined identifier `__gcd`, did you\
    \ mean variable `gcd`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpyrp6cccj.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a < b) {\n        long tmp = a;\n\
    \        a = b;\n        b = tmp;\n    }\n    \n    gcd = 1;\n    \n    while\
    \ (a != 0) {\n        if (a > b) {\n            a %= b;\n        }\n        gcd\
    \ = (gcd > a) ? gcd : a;\n        a /= b;\n    }\n    \n    return gcd;\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpva4410yn.d(40): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427db5]\\n??:? void tmpva4410yn.__unittest_L33_C1()\
    \ [0x427b23]\\n??:? void tmpva4410yn.__modtest() [0x427b38]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42badb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a96e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb01]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a945]\\n??:? runModuleUnitTests [0x42b8b1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428204]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42818b]\\n??:? _d_run_main [0x4280f6]\\n??:? main [0x427b4b]\\\
    n??:? __libc_start_main [0xe8624554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile(b > 0) {\n\t\tif(b & 1) gcd = std.math.gcd(gcd,\
    \ a);\n\t\ta >>= 1;\n\t\tb >>= 1;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias\
    \ candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n\
    \    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n\
    \    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpn3tmydhp.d(15): Error: undefined identifier `gcd` in module `std.math`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn3tmydhp.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    gcd = greatest_common_divisor(b, a % b);\n    return gcd;\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong c;\n\tc = a % b;\n\twhile (c != 0) {\n\t\ta = b;\n\t\t\
    b = c;\n\t\tc = a % b;\n\t}\n\treturn b;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = a % b;\n\twhile (a != 0) {\n\t\ta =\
    \ b;\n\t\tb = gcd;\n\t\tgcd = a % b;\n\t}\n\treturn gcd;\n}\nunittest\n{\n   \
    \ alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) ==\
    \ 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: -8
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    gcd = __gcd(a, b);\n    \n    return __gcd(gcd, b);\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqqgjhf_1.d(18): Error: undefined identifier `__gcd`, did you\
    \ mean variable `gcd`?\\n/tmp/tmpqqgjhf_1.d(20): Error: undefined identifier `__gcd`,\
    \ did you mean variable `gcd`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmpqqgjhf_1.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd = 1;\n    while(b > 0) {\n        if(b%2 == 0)\
    \ {\n            gcd = std.math.gcd(gcd, b);\n        }\n        b = std.math.div(b,2);\n\
    \    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvtciywbi.d(16): Error: undefined identifier `gcd` in module `std.math`\\\
    n/tmp/tmpvtciywbi.d(18): Error: undefined identifier `div` in module `std.math`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvtciywbi.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    gcd = __gcd(a, b);\n    \n    if (gcd == 1)\n        return a;\n    \n\
    \    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfvgjg7ef.d(18): Error: undefined identifier `__gcd`, did you\
    \ mean variable `gcd`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpfvgjg7ef.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tif(b == 0)\n\t\treturn a;\n\t\n\tif(b > a)\n\
    \t{\n\t\tgcd = greatest_common_divisor(b, a % b);\n\t\treturn gcd;\n\t}\n\t\n\t\
    gcd = a;\n\t\n\twhile(b > 0)\n\t{\n\t\tif(b % 2 == 0)\n\t\t\tgcd = b % gcd;\n\t\
    \tb = b >> 1;\n\t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpojczf7xa.d(39): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dbd]\\n??:? void tmpojczf7xa.__unittest_L35_C1()\
    \ [0x427ab5]\\n??:? void tmpojczf7xa.__modtest() [0x427b3c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bae3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a976]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb09]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a94d]\\n??:? runModuleUnitTests [0x42b8b9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42820c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428193]\\n??:? _d_run_main [0x4280fe]\\n??:? main [0x427b4f]\\\
    n??:? __libc_start_main [0xd780e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\t\n\twhile (b != 0) {\n\t\tlong r = a % b;\n\
    \t\ta = b;\n\t\tb = r;\n\t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpxlgsl158.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d6d]\\n??:? void tmpxlgsl158.__unittest_L23_C1()\
    \ [0x427a8f]\\n??:? void tmpxlgsl158.__modtest() [0x427af0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42ba93]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a926]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fab9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a8fd]\\n??:? runModuleUnitTests [0x42b869]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281bc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428143]\\n??:? _d_run_main [0x4280ae]\\n??:? main [0x427b03]\\\
    n??:? __libc_start_main [0x1c3a3554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    gcd = 1;\n    while (a != 0) {\n  \
    \      if (a > b) {\n            a %= b;\n        } else {\n            b %= a;\n\
    \        }\n        gcd = std.math.gcd(gcd, b);\n    }\n    return gcd;\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgb19f2uj.d(22): Error: undefined identifier `gcd` in module `std.math`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgb19f2uj.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (a != 0) {\n\t\tif (a > b) {\n\t\t\t\
    a %= b;\n\t\t} else {\n\t\t\tb %= a;\n\t\t}\n\t\tgcd = std.math.gcd(gcd, b);\n\
    \t\ta /= b;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbwag5gwt.d(20): Error: undefined identifier `gcd` in module `std.math`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbwag5gwt.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    gcd = __gcd(a, b);\n    \n    if (gcd > a)\n        gcd = a;\n    \n\
    \    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppmq_v21z.d(18): Error: undefined identifier `__gcd`, did you\
    \ mean variable `gcd`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmppmq_v21z.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile(b > 0) {\n\t\tif(b % a == 0) {\n\t\t\
    \tgcd = a;\n\t\t\tbreak;\n\t\t}\n\t\ta = a;\n\t\tb = b % a;\n\t}\n\treturn gcd;\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (b != 0) {\n\t\tlong r = a % b;\n\t\
    \ta = b;\n\t\tb = r;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpxxqsc9d7.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d6d]\\n??:? void tmpxxqsc9d7.__unittest_L21_C1()\
    \ [0x427a8f]\\n??:? void tmpxxqsc9d7.__modtest() [0x427af0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42ba93]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a926]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fab9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a8fd]\\n??:? runModuleUnitTests [0x42b869]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281bc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428143]\\n??:? _d_run_main [0x4280ae]\\n??:? main [0x427b03]\\\
    n??:? __libc_start_main [0x64eaa554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    gcd = __gcd(a, b);\n    if (gcd == 1)\n        return b;\n    \n    return\
    \ __gcd(b, gcd);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp76m3a19t.d(18): Error: undefined identifier `__gcd`, did you\
    \ mean variable `gcd`?\\n/tmp/tmp76m3a19t.d(22): Error: undefined identifier `__gcd`,\
    \ did you mean variable `gcd`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmp76m3a19t.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd = 1;\n    while (b > 0) {\n        long r = a %\
    \ b;\n        a = b;\n        b = r;\n    }\n    return gcd;\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmptxubhne0.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d6d]\\n??:? void tmptxubhne0.__unittest_L21_C1()\
    \ [0x427a8f]\\n??:? void tmptxubhne0.__modtest() [0x427af0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42ba93]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a926]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fab9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a8fd]\\n??:? runModuleUnitTests [0x42b869]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281bc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428143]\\n??:? _d_run_main [0x4280ae]\\n??:? main [0x427b03]\\\
    n??:? __libc_start_main [0x17a72554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = a;\n\twhile (a % b != 0) {\n\t\tgcd\
    \ = b;\n\t\tb--;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpniomphnc.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d6d]\\n??:? void tmpniomphnc.__unittest_L22_C1()\
    \ [0x427a69]\\n??:? void tmpniomphnc.__modtest() [0x427af0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42ba93]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a926]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fab9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a8fd]\\n??:? runModuleUnitTests [0x42b869]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281bc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428143]\\n??:? _d_run_main [0x4280ae]\\n??:? main [0x427b03]\\\
    n??:? __libc_start_main [0x54441554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\t\n\twhile (b != 0)\n\t{\n\t\tlong tmp = b;\n\
    \t\tb = a % b;\n\t\ta = tmp;\n\t\tgcd = std.math.gcd(gcd, a);\n\t}\n\t\n\treturn\
    \ gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n   \
    \ assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n \
    \   assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpou2v_8t4.d(20): Error: undefined identifier `gcd` in module `std.math`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpou2v_8t4.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd = 1;\n    long remainder;\n    \n    while (b !=\
    \ 0) {\n        remainder = b;\n        b = a % b;\n        a = remainder;\n \
    \       gcd = std.math.max(gcd, a);\n    }\n    return gcd;\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpp0s6mn47.d(20): Error: undefined identifier `max` in module `std.math`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpp0s6mn47.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd = 1;\n    while (b != 0) {\n        long r = a\
    \ % b;\n        a = b;\n        b = r;\n    }\n    return gcd;\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpxp8miuvj.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d6d]\\n??:? void tmpxp8miuvj.__unittest_L21_C1()\
    \ [0x427a8f]\\n??:? void tmpxp8miuvj.__modtest() [0x427af0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42ba93]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a926]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fab9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a8fd]\\n??:? runModuleUnitTests [0x42b869]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281bc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428143]\\n??:? _d_run_main [0x4280ae]\\n??:? main [0x427b03]\\\
    n??:? __libc_start_main [0x9f93a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\t\n\twhile (b > 0) {\n\t\tlong r = a % b;\n\
    \t\ta = b;\n\t\tb = r;\n\t\tgcd = (gcd > b) ? gcd : b;\n\t}\n\t\n\treturn gcd;\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpi83mq175.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d85]\\n??:? void tmpi83mq175.__unittest_L24_C1()\
    \ [0x427a81]\\n??:? void tmpi83mq175.__modtest() [0x427b08]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baab]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a93e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a915]\\n??:? runModuleUnitTests [0x42b881]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281d4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42815b]\\n??:? _d_run_main [0x4280c6]\\n??:? main [0x427b1b]\\\
    n??:? __libc_start_main [0x5f499554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (a != 0) {\n\t\tlong r = a % b;\n\t\
    \ta = b;\n\t\tb = r;\n\t\tgcd = gcd * b;\n\t}\n\treturn gcd;\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: -8
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    if (a == 0)\n        return b;\n    \n    if (a > b)\n        std.swap(a,\
    \ b);\n    \n    gcd = greatest_common_divisor(b, a % b);\n    \n    return std.gcd(gcd,\
    \ a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwpcgfttf.d(22): Error: undefined identifier `swap` in package\
    \ `std`\\n/tmp/tmpwpcgfttf.d(26): Error: undefined identifier `gcd` in package\
    \ `std`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwpcgfttf.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    gcd = __gcd(a, b);\n    if (gcd == 1)\n        return a;\n    \n    return\
    \ greatest_common_divisor(b, gcd);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwgfcrjk8.d(18): Error: undefined identifier `__gcd`, did you\
    \ mean variable `gcd`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpwgfcrjk8.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile(b > 0) {\n\t\tif(b & 1) gcd = std.math.gcd(gcd,\
    \ a);\n\t\ta >>= 1;\n\t\tb >>= 1;\n\t}\n\treturn gcd;\n}\n/*\n Return true if\
    \ a is divisible by b\n    >>> is_divisible(5, 3)\n    True\n    \n*/\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8m4l4c8t.d(15): Error: undefined identifier `gcd` in module `std.math`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8m4l4c8t.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    gcd = __gcd(a, b);\n    \n    if (gcd == 1)\n        return a;\n    \n\
    \    return greatest_common_divisor(b, gcd);\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2se8_gjz.d(18): Error: undefined identifier `__gcd`, did you\
    \ mean variable `gcd`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmp2se8_gjz.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd = 1;\n    \n    while (b != 0) {\n        if (a\
    \ > b) {\n            a %= b;\n        } else {\n            b %= a;\n       \
    \ }\n        gcd = std.math.gcd(gcd, b);\n    }\n    return gcd;\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpchm7zrfp.d(21): Error: undefined identifier `gcd` in module `std.math`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpchm7zrfp.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = 1;\n\t\n\twhile (a != 0) {\n\t\tif\
    \ (a > b) {\n\t\t\ta %= b;\n\t\t} else {\n\t\t\tb %= a;\n\t\t}\n\t\tgcd *= b;\n\
    \t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmppi7vgl8l.d(33): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d9d]\\n??:? void tmppi7vgl8l.__unittest_L28_C1()\
    \ [0x427abb]\\n??:? void tmppi7vgl8l.__modtest() [0x427b1c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bac3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a956]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fae9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a92d]\\n??:? runModuleUnitTests [0x42b899]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281ec]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428173]\\n??:? _d_run_main [0x4280de]\\n??:? main [0x427b2f]\\\
    n??:? __libc_start_main [0x5a895554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a < b) {\n        long t = a;\n\
    \        a = b;\n        b = t;\n    }\n    \n    gcd = 1;\n    while (a != 0)\
    \ {\n        if (a > b) {\n            a %= b;\n        }\n        else {\n  \
    \          b %= a;\n        }\n        gcd *= a;\n    }\n    \n    return gcd;\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: -8
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\tlong remainder;\n\t\n\twhile (b != 0)\n\t\
    {\n\t\tremainder = b%a;\n\t\ta = b;\n\t\tb = remainder;\n\t\tgcd = gcd*a + remainder;\n\
    \t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpekzp_k9f.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d85]\\n??:? void tmpekzp_k9f.__unittest_L25_C1()\
    \ [0x427a7d]\\n??:? void tmpekzp_k9f.__modtest() [0x427b04]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baab]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a93e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a915]\\n??:? runModuleUnitTests [0x42b881]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281d4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42815b]\\n??:? _d_run_main [0x4280c6]\\n??:? main [0x427b17]\\\
    n??:? __libc_start_main [0xd4500554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a == 0) return b;\n    if (b ==\
    \ 0) return a;\n    \n    gcd = __gcd(a, b);\n    if (gcd == 0) return a;\n  \
    \  \n    return greatest_common_divisor(b % gcd, a % gcd);\n}\nunittest\n{\n \
    \   alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpog927myi.d(18): Error: undefined identifier `__gcd`, did you\
    \ mean variable `gcd`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpog927myi.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a == 0)\n        return b;\n  \
    \  if (b == 0)\n        return a;\n    \n    gcd = __gcd(a, b);\n    if (gcd ==\
    \ 0)\n        return a;\n    return gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsr0i1dtm.d(20): Error: undefined identifier `__gcd`, did you\
    \ mean variable `gcd`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpsr0i1dtm.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong c;\n\tc = a % b;\n\twhile (c != 0) {\n\t\ta = b;\n\t\t\
    b = c;\n\t\tc = a % b;\n\t}\n\treturn b;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = 1;\n\t\n\twhile (a != 0) {\n\t\tif\
    \ (a > b) {\n\t\t\ta %= b;\n\t\t} else {\n\t\t\tb %= a;\n\t\t}\n\t\tgcd *= b;\n\
    \t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpyvzpmvpx.d(33): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d9d]\\n??:? void tmpyvzpmvpx.__unittest_L28_C1()\
    \ [0x427abb]\\n??:? void tmpyvzpmvpx.__modtest() [0x427b1c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bac3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a956]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fae9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a92d]\\n??:? runModuleUnitTests [0x42b899]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281ec]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428173]\\n??:? _d_run_main [0x4280de]\\n??:? main [0x427b2f]\\\
    n??:? __libc_start_main [0x7eb2f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a == 0)\n        return b;\n  \
    \  if (b == 0)\n        return a;\n    \n    gcd = __gcd(a, b);\n    if (gcd ==\
    \ 0)\n        return a;\n    \n    return greatest_common_divisor(b, a % gcd);\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpcmg05uy7.d(20): Error: undefined identifier `__gcd`, did you\
    \ mean variable `gcd`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpcmg05uy7.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\tif(b == 0)\n\t\treturn a;\n\tif(b == 1)\n\t\t\
    return a;\n\tif(b % 2 == 0)\n\t\treturn greatest_common_divisor(b / 2, a);\n\t\
    gcd = greatest_common_divisor(b / 2, a);\n\treturn gcd(gcd(a, b), a);\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpuh55813o.d(21): Error: function expected before `()`, not `gcd`\
    \ of type `long`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuh55813o.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    gcd = greatest_common_divisor(b, a % b);\n    return gcd;\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a < b) {\n        long t = a;\n\
    \        a = b;\n        b = t;\n    }\n    \n    for (;;) {\n        gcd = a\
    \ % b;\n        if (gcd == 0) break;\n        a = b;\n        b = gcd;\n    }\n\
    \    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpdjw_bvfv.d(33): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d7d]\\n??:? void tmpdjw_bvfv.__unittest_L29_C1()\
    \ [0x427a75]\\n??:? void tmpdjw_bvfv.__modtest() [0x427afc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baa3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a936]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fac9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a90d]\\n??:? runModuleUnitTests [0x42b879]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281cc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428153]\\n??:? _d_run_main [0x4280be]\\n??:? main [0x427b0f]\\\
    n??:? __libc_start_main [0x2c0aa554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a < b) {\n        long t = a;\n\
    \        a = b;\n        b = t;\n    }\n    \n    gcd = 1;\n    \n    while (a\
    \ != 0) {\n        if (a > b) {\n            gcd = b;\n            b = a % b;\n\
    \            a = b;\n        } else {\n            gcd = a;\n            a = a\
    \ % b;\n        }\n    }\n    \n    return gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp59p85ckg.d(43): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427da5]\\n??:? void tmp59p85ckg.__unittest_L36_C1()\
    \ [0x427b13]\\n??:? void tmp59p85ckg.__modtest() [0x427b28]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bacb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a95e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42faf1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a935]\\n??:? runModuleUnitTests [0x42b8a1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42817b]\\n??:? _d_run_main [0x4280e6]\\n??:? main [0x427b3b]\\\
    n??:? __libc_start_main [0x630b4554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    gcd = 1;\n    \n    for(long i = 2;\
    \ i <= b; i++)\n    {\n        if(b % i == 0)\n        {\n            gcd = i;\n\
    \            break;\n        }\n    }\n    \n    return gcd;\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpv_6dsya6.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d85]\\n??:? void tmpv_6dsya6.__unittest_L28_C1()\
    \ [0x427a7d]\\n??:? void tmpv_6dsya6.__modtest() [0x427b04]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baab]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a93e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a915]\\n??:? runModuleUnitTests [0x42b881]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281d4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42815b]\\n??:? _d_run_main [0x4280c6]\\n??:? main [0x427b17]\\\
    n??:? __libc_start_main [0x65af1554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (b != 0) {\n\t\tlong r = a % b;\n\t\
    \ta = b;\n\t\tb = r;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpeqg5j7c6.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d6d]\\n??:? void tmpeqg5j7c6.__unittest_L21_C1()\
    \ [0x427a8f]\\n??:? void tmpeqg5j7c6.__modtest() [0x427af0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42ba93]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a926]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fab9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a8fd]\\n??:? runModuleUnitTests [0x42b869]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281bc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428143]\\n??:? _d_run_main [0x4280ae]\\n??:? main [0x427b03]\\\
    n??:? __libc_start_main [0xaf72b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\tlong remainder;\n\t\n\twhile (b != 0) {\n\
    \t\tremainder = b;\n\t\tb = a % b;\n\t\ta = remainder;\n\t\tgcd = remainder;\n\
    \t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\twhile (b != 0)\n\t{\n\t\tgcd = std.math.gcd(a,\
    \ b);\n\t\ta = std.math.div(a, gcd);\n\t\tb = std.math.div(b, gcd);\n\t}\n\t\n\
    \treturn a;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n\
    \    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpnu6y_tsc.d(17): Error: undefined identifier `gcd` in module `std.math`\\\
    n/tmp/tmpnu6y_tsc.d(18): Error: undefined identifier `div` in module `std.math`\\\
    n/tmp/tmpnu6y_tsc.d(19): Error: undefined identifier `div` in module `std.math`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnu6y_tsc.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd = 1;\n    \n    while (a != 0) {\n        if (a\
    \ > b) {\n            a %= b;\n        } else {\n            b %= a;\n       \
    \ }\n        gcd = std.math.gcd(gcd, b);\n    }\n    return gcd;\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxcf9lgaz.d(21): Error: undefined identifier `gcd` in module `std.math`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxcf9lgaz.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd = 1;\n    while (b != 0) {\n        if (a % b ==\
    \ 0) {\n            gcd = b;\n            break;\n        }\n        gcd = b;\n\
    \        b = a % b;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp9spgcwmh.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d85]\\n??:? void tmp9spgcwmh.__unittest_L24_C1()\
    \ [0x427a81]\\n??:? void tmp9spgcwmh.__modtest() [0x427b08]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baab]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a93e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a915]\\n??:? runModuleUnitTests [0x42b881]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281d4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42815b]\\n??:? _d_run_main [0x4280c6]\\n??:? main [0x427b1b]\\\
    n??:? __libc_start_main [0xb7964554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd = 1;\n    while (a != 0) {\n        long r = a\
    \ % b;\n        a = b;\n        b = r;\n    }\n    return gcd;\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: -8
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    gcd = __gcd(a, b);\n    \n    if (gcd\
    \ == 0) \n    {\n        throw new ArithmeticException(\"greatest_common_divisor:\
    \ No common divisor\");\n    }\n    \n    return gcd;\n}\nunittest\n{\n    alias\
    \ candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n\
    \    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n\
    \    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp65yk3jpv.d(15): Error: undefined identifier `__gcd`, did you\
    \ mean variable `gcd`?\\n/tmp/tmp65yk3jpv.d(19): Error: undefined identifier `ArithmeticException`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp65yk3jpv.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (b != 0) {\n\t\tlong r = a % b;\n\t\
    \ta = b;\n\t\tb = r;\n\t\tgcd = (gcd > b) ? gcd : b;\n\t}\n\treturn gcd;\n}\n\
    unittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpkoxzj0uo.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d85]\\n??:? void tmpkoxzj0uo.__unittest_L22_C1()\
    \ [0x427a81]\\n??:? void tmpkoxzj0uo.__modtest() [0x427b08]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baab]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a93e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a915]\\n??:? runModuleUnitTests [0x42b881]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281d4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42815b]\\n??:? _d_run_main [0x4280c6]\\n??:? main [0x427b1b]\\\
    n??:? __libc_start_main [0x1ea4e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (a != 0) {\n\t\tlong r = a % b;\n\t\
    \tif (r != 0) {\n\t\t\tgcd = b;\n\t\t\tb = r;\n\t\t}\n\t\ta = a / b;\n\t}\n\t\
    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n\
    \    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (b != 0) {\n\t\tlong r = a % b;\n\t\
    \ta = b;\n\t\tb = r;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpzncbw2iz.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d6d]\\n??:? void tmpzncbw2iz.__unittest_L21_C1()\
    \ [0x427a8f]\\n??:? void tmpzncbw2iz.__modtest() [0x427af0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42ba93]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a926]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fab9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a8fd]\\n??:? runModuleUnitTests [0x42b869]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281bc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428143]\\n??:? _d_run_main [0x4280ae]\\n??:? main [0x427b03]\\\
    n??:? __libc_start_main [0x12640554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (b != 0)\n\t{\n\t\tlong r = a % b;\n\
    \t\ta = b;\n\t\tb = r;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpe9g7x2j0.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d6d]\\n??:? void tmpe9g7x2j0.__unittest_L22_C1()\
    \ [0x427a8f]\\n??:? void tmpe9g7x2j0.__modtest() [0x427af0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42ba93]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a926]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fab9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a8fd]\\n??:? runModuleUnitTests [0x42b869]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281bc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428143]\\n??:? _d_run_main [0x4280ae]\\n??:? main [0x427b03]\\\
    n??:? __libc_start_main [0x8f72c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    if (a > b)\n        std.swap(a, b);\n    \n    gcd = 1;\n    \n    while\
    \ (a % b != 0) {\n        gcd = b;\n        b = a % b;\n        a = gcd;\n   \
    \ }\n    \n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpd1m4xk8s.d(19): Error: undefined identifier `swap` in package\
    \ `std`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpd1m4xk8s.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (b > 0) {\n\t\tlong r = a % b;\n\t\t\
    a = b;\n\t\tb = r;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate =\
    \ greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp7irel7zi.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d6d]\\n??:? void tmp7irel7zi.__unittest_L21_C1()\
    \ [0x427a8f]\\n??:? void tmp7irel7zi.__modtest() [0x427af0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42ba93]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a926]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fab9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a8fd]\\n??:? runModuleUnitTests [0x42b869]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281bc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428143]\\n??:? _d_run_main [0x4280ae]\\n??:? main [0x427b03]\\\
    n??:? __libc_start_main [0xc374554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (a != 0) {\n\t\tlong r = a % b;\n\t\
    \ta = b;\n\t\tb = r;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: -8
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd = 1;\n    \n    while (a != 0) {\n        if (a\
    \ > b) {\n            gcd = b;\n            b = a % b;\n            a = b;\n \
    \       } else {\n            gcd = a;\n            a = a % b;\n        }\n  \
    \  }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tif(b == 0)\n\t\treturn a;\n\t\n\tfor(gcd\
    \ = a; b > 0; b--)\n\t{\n\t\tif(b % gcd == 0)\n\t\t\tbreak;\n\t\tgcd = gcd * 10;\n\
    \t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp3jk08gpy.d(31): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d85]\\n??:? void tmp3jk08gpy.__unittest_L27_C1()\
    \ [0x427a81]\\n??:? void tmp3jk08gpy.__modtest() [0x427b08]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baab]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a93e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a915]\\n??:? runModuleUnitTests [0x42b881]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281d4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42815b]\\n??:? _d_run_main [0x4280c6]\\n??:? main [0x427b1b]\\\
    n??:? __libc_start_main [0xf8dda554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a == 0)\n        return b;\n  \
    \  if (b == 0)\n        return a;\n    \n    gcd = __gcd(a, b);\n    \n    if\
    \ (gcd == 0)\n        return a;\n    \n    return gcd;\n}\nunittest\n{\n    alias\
    \ candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n\
    \    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n\
    \    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqif27ga4.d(20): Error: undefined identifier `__gcd`, did you\
    \ mean variable `gcd`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpqif27ga4.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = a;\n\twhile (gcd > b) {\n\t\tgcd =\
    \ (gcd % b);\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmprr0zqnzj.d(25): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d65]\\n??:? void tmprr0zqnzj.__unittest_L21_C1()\
    \ [0x427a61]\\n??:? void tmprr0zqnzj.__modtest() [0x427ae8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42ba8b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a91e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fab1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff60]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa3d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a8f5]\\n??:? runModuleUnitTests [0x42b861]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281b4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42813b]\\n??:? _d_run_main [0x4280a6]\\n??:? main [0x427afb]\\\
    n??:? __libc_start_main [0xd4f5f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (a != 0) {\n\t\tlong r = a % b;\n\t\
    \tif (r != 0) {\n\t\t\tgcd = b;\n\t\t\tb = r;\n\t\t}\n\t\ta = a / b;\n\t}\n\t\
    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n\
    \    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a == 0)\n        return b;\n  \
    \  if (b == 0)\n        return a;\n    \n    gcd = __gcd(a, b);\n    \n    if\
    \ (gcd == 0)\n        return a;\n    \n    return __gcd(b, gcd);\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_e54tj6f.d(20): Error: undefined identifier `__gcd`, did you\
    \ mean variable `gcd`?\\n/tmp/tmp_e54tj6f.d(25): Error: undefined identifier `__gcd`,\
    \ did you mean variable `gcd`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmp_e54tj6f.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (a != 0) {\n\t\tlong r = a % b;\n\t\
    \ta = b;\n\t\tb = r;\n\t\tgcd = gcd * b;\n\t}\n\treturn gcd;\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: -8
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = __gcd(a, b);\n\t\n\tif (gcd == 0)\n\
    \t\treturn a;\n\telse\n\t\treturn gcd;\n}\nunittest\n{\n    alias candidate =\
    \ greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwpp7jzs1.d(15): Error: undefined identifier `__gcd`, did you\
    \ mean variable `gcd`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpwpp7jzs1.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd = 1;\n    long remainder;\n    \n    while (b !=\
    \ 0) {\n        remainder = b;\n        b = a % b;\n        a = remainder;\n \
    \       gcd = remainder;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a == 0)\n        return b;\n  \
    \  if (b == 0)\n        return a;\n    \n    gcd = __gcd(a, b);\n    \n    if\
    \ (gcd == 1)\n        return a;\n    \n    return gcd;\n}\nunittest\n{\n    alias\
    \ candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n\
    \    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n\
    \    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpnudmawxr.d(20): Error: undefined identifier `__gcd`, did you\
    \ mean variable `gcd`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpnudmawxr.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = 1;\n\t\n\twhile (b != 0)\n\t{\n\t\t\
    if (a > b)\n\t\t{\n\t\t\ta = a - b;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tb = b - a;\n\
    \t\t}\n\t\tgcd = gcd * b;\n\t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpwsb4u93i.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d95]\\n??:? void tmpwsb4u93i.__unittest_L32_C1()\
    \ [0x427a91]\\n??:? void tmpwsb4u93i.__modtest() [0x427b18]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42babb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a94e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fae1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a925]\\n??:? runModuleUnitTests [0x42b891]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42816b]\\n??:? _d_run_main [0x4280d6]\\n??:? main [0x427b2b]\\\
    n??:? __libc_start_main [0xb149554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (b != 0)\n\t{\n\t\tlong r = a % b;\n\
    \t\ta = b;\n\t\tb = r;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpanzw9s9_.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d6d]\\n??:? void tmpanzw9s9_.__unittest_L22_C1()\
    \ [0x427a8f]\\n??:? void tmpanzw9s9_.__modtest() [0x427af0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42ba93]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a926]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fab9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a8fd]\\n??:? runModuleUnitTests [0x42b869]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281bc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428143]\\n??:? _d_run_main [0x4280ae]\\n??:? main [0x427b03]\\\
    n??:? __libc_start_main [0xd1a05554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (b != 0) {\n\t\tlong r = a % b;\n\t\
    \ta = b;\n\t\tb = r;\n\t\tgcd = gcd > b ? gcd : b;\n\t}\n\treturn gcd;\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp4h4ng271.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d85]\\n??:? void tmp4h4ng271.__unittest_L22_C1()\
    \ [0x427a81]\\n??:? void tmp4h4ng271.__modtest() [0x427b08]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baab]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a93e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a915]\\n??:? runModuleUnitTests [0x42b881]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281d4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42815b]\\n??:? _d_run_main [0x4280c6]\\n??:? main [0x427b1b]\\\
    n??:? __libc_start_main [0xee2f4554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    gcd = __gcd(a, b);\n    \n    if (gcd == 1)\n        return a;\n    \n\
    \    return greatest_common_divisor(b, gcd);\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpiz2r5xfj.d(18): Error: undefined identifier `__gcd`, did you\
    \ mean variable `gcd`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpiz2r5xfj.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (b != 0) {\n\t\tlong t = a % b;\n\t\
    \ta = b;\n\t\tb = t;\n\t\tgcd = gcd > b ? gcd : b;\n\t}\n\treturn gcd;\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpppte2cts.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d85]\\n??:? void tmpppte2cts.__unittest_L22_C1()\
    \ [0x427a81]\\n??:? void tmpppte2cts.__modtest() [0x427b08]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baab]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a93e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a915]\\n??:? runModuleUnitTests [0x42b881]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281d4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42815b]\\n??:? _d_run_main [0x4280c6]\\n??:? main [0x427b1b]\\\
    n??:? __libc_start_main [0x996ea554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\twhile (b != 0) {\n\t\tgcd = std.math.gcd(a,\
    \ b);\n\t\ta = std.math.mod(a, gcd);\n\t\tb = std.math.mod(b, gcd);\n\t}\n\treturn\
    \ a;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0moa8aqg.d(16): Error: undefined identifier `gcd` in module `std.math`\\\
    n/tmp/tmp0moa8aqg.d(17): Error: undefined identifier `mod` in module `std.math`,\
    \ did you mean function `fmod`?\\n/tmp/tmp0moa8aqg.d(18): Error: undefined identifier\
    \ `mod` in module `std.math`, did you mean function `fmod`?\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0moa8aqg.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tfor (gcd = 1; a != 0; a /= 2, gcd *= 2)\n\
    \t\tif (a > b)\n\t\t\tbreak;\n\treturn gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp7qnoa3ml.d(24): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d7d]\\n??:? void tmp7qnoa3ml.__unittest_L20_C1()\
    \ [0x427a79]\\n??:? void tmp7qnoa3ml.__modtest() [0x427b00]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baa3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a936]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fac9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a90d]\\n??:? runModuleUnitTests [0x42b879]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281cc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428153]\\n??:? _d_run_main [0x4280be]\\n??:? main [0x427b13]\\\
    n??:? __libc_start_main [0x5bc6c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    gcd = __gcd(a, b);\n    \n    if (gcd == 1)\n        return a;\n    \n\
    \    return greatest_common_divisor(b, gcd);\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp74b74av4.d(18): Error: undefined identifier `__gcd`, did you\
    \ mean variable `gcd`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmp74b74av4.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    gcd = __gcd(a, b);\n    \n    return __gcd(gcd, b);\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpt97wdrod.d(18): Error: undefined identifier `__gcd`, did you\
    \ mean variable `gcd`?\\n/tmp/tmpt97wdrod.d(20): Error: undefined identifier `__gcd`,\
    \ did you mean variable `gcd`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmpt97wdrod.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd = 1;\n    while (b != 0) {\n        long r = a\
    \ % b;\n        a = b;\n        b = r;\n    }\n    return gcd;\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpunsjpr2s.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d6d]\\n??:? void tmpunsjpr2s.__unittest_L21_C1()\
    \ [0x427a8f]\\n??:? void tmpunsjpr2s.__modtest() [0x427af0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42ba93]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a926]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fab9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a8fd]\\n??:? runModuleUnitTests [0x42b869]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281bc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428143]\\n??:? _d_run_main [0x4280ae]\\n??:? main [0x427b03]\\\
    n??:? __libc_start_main [0x25284554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\t\n\twhile (a != 0) {\n\t\tif (a > b) {\n\t\
    \t\ta %= b;\n\t\t} else {\n\t\t\tb %= a;\n\t\t}\n\t\tgcd *= b;\n\t}\n\treturn\
    \ gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n   \
    \ assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n \
    \   assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpu9twfts9.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d95]\\n??:? void tmpu9twfts9.__unittest_L25_C1()\
    \ [0x427ab3]\\n??:? void tmpu9twfts9.__modtest() [0x427b14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42babb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a94e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fae1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a925]\\n??:? runModuleUnitTests [0x42b891]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42816b]\\n??:? _d_run_main [0x4280d6]\\n??:? main [0x427b27]\\\
    n??:? __libc_start_main [0x39fc1554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\tlong t;\n\t\n\twhile (a != 0) {\n\t\tt =\
    \ a % b;\n\t\ta = b;\n\t\tb = t;\n\t\tgcd = gcd * b;\n\t}\n\treturn gcd;\n}\n\
    unittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: -8
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\tif(b == 0)\n\t\treturn a;\n\tif(b == 1)\n\t\t\
    return a;\n\tif(a%b == 0)\n\t\treturn b;\n\tgcd = greatest_common_divisor(b, a\
    \ % b);\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpuci_08pj.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d85]\\n??:? void tmpuci_08pj.__unittest_L23_C1()\
    \ [0x427a7d]\\n??:? void tmpuci_08pj.__modtest() [0x427b04]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baab]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a93e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a915]\\n??:? runModuleUnitTests [0x42b881]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281d4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42815b]\\n??:? _d_run_main [0x4280c6]\\n??:? main [0x427b17]\\\
    n??:? __libc_start_main [0x5c85554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a < b) {\n        long t = a;\n\
    \        a = b;\n        b = t;\n    }\n    \n    gcd = 1;\n    \n    while (a\
    \ != 0) {\n        if (a > b) {\n            gcd = b;\n            b = a % b;\n\
    \            a = b;\n        } else {\n            gcd = a;\n            a = a\
    \ % b;\n        }\n    }\n    \n    return gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpbwxz9stn.d(43): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427da5]\\n??:? void tmpbwxz9stn.__unittest_L36_C1()\
    \ [0x427b13]\\n??:? void tmpbwxz9stn.__modtest() [0x427b28]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bacb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a95e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42faf1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a935]\\n??:? runModuleUnitTests [0x42b8a1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42817b]\\n??:? _d_run_main [0x4280e6]\\n??:? main [0x427b3b]\\\
    n??:? __libc_start_main [0xdd6d2554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (b != 0) {\n\t\tlong t = a % b;\n\t\
    \ta = b;\n\t\tb = t;\n\t\tgcd = gcd * b;\n\t}\n\treturn gcd;\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp0v6ncnhq.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d85]\\n??:? void tmp0v6ncnhq.__unittest_L22_C1()\
    \ [0x427a7d]\\n??:? void tmp0v6ncnhq.__modtest() [0x427b04]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baab]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a93e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a915]\\n??:? runModuleUnitTests [0x42b881]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281d4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42815b]\\n??:? _d_run_main [0x4280c6]\\n??:? main [0x427b17]\\\
    n??:? __libc_start_main [0xbf0b8554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    gcd = 1;\n    while (b > 0) {\n   \
    \     if (a % b == 0) {\n            gcd = b;\n            break;\n        }\n\
    \        gcd = b;\n        b = a % b;\n    }\n    return gcd;\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp19fkdcxh.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d8d]\\n??:? void tmp19fkdcxh.__unittest_L26_C1()\
    \ [0x427a89]\\n??:? void tmp19fkdcxh.__modtest() [0x427b10]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bab3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a946]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a91d]\\n??:? runModuleUnitTests [0x42b889]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281dc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428163]\\n??:? _d_run_main [0x4280ce]\\n??:? main [0x427b23]\\\
    n??:? __libc_start_main [0x6dea4554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\tif(b == 0)\n\t\treturn a;\n\tif(b == 1)\n\t\t\
    return a;\n\tif(a%b == 0)\n\t\treturn b;\n\tgcd = greatest_common_divisor(b, a\
    \ % b);\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp2v7skyxm.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d85]\\n??:? void tmp2v7skyxm.__unittest_L23_C1()\
    \ [0x427a7d]\\n??:? void tmp2v7skyxm.__modtest() [0x427b04]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baab]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a93e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a915]\\n??:? runModuleUnitTests [0x42b881]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281d4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42815b]\\n??:? _d_run_main [0x4280c6]\\n??:? main [0x427b17]\\\
    n??:? __libc_start_main [0x94c58554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile(b > 0) {\n\t\tif(b % 2 == 0) {\n\t\t\
    \ta /= 2;\n\t\t\tgcd *= 2;\n\t\t}\n\t\telse {\n\t\t\ta %= b;\n\t\t\tgcd *= b;\n\
    \t\t}\n\t\tb /= 2;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate =\
    \ greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp4q_g6m75.d(31): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427db5]\\n??:? void tmp4q_g6m75.__unittest_L27_C1()\
    \ [0x427aad]\\n??:? void tmp4q_g6m75.__modtest() [0x427b34]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42badb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a96e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb01]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a945]\\n??:? runModuleUnitTests [0x42b8b1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428204]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42818b]\\n??:? _d_run_main [0x4280f6]\\n??:? main [0x427b47]\\\
    n??:? __libc_start_main [0x63c13554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (b > 0) {\n\t\tlong r = a % b;\n\t\t\
    a = b;\n\t\tb = r;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate =\
    \ greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpibvsgu_6.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d6d]\\n??:? void tmpibvsgu_6.__unittest_L21_C1()\
    \ [0x427a8f]\\n??:? void tmpibvsgu_6.__modtest() [0x427af0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42ba93]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a926]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fab9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a8fd]\\n??:? runModuleUnitTests [0x42b869]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281bc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428143]\\n??:? _d_run_main [0x4280ae]\\n??:? main [0x427b03]\\\
    n??:? __libc_start_main [0x63906554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a == 0)\n        return b;\n  \
    \  if (b == 0)\n        return a;\n    \n    gcd = __gcd(a, b);\n    if (gcd ==\
    \ 0)\n        return a;\n    \n    return greatest_common_divisor(b % gcd, a);\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpreonty03.d(20): Error: undefined identifier `__gcd`, did you\
    \ mean variable `gcd`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpreonty03.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\tif(b == 0)\n\t\treturn a;\n\tif(b == 1)\n\t\t\
    return a;\n\tif(a%b == 0)\n\t\treturn b;\n\tgcd = greatest_common_divisor(b, a\
    \ % b);\n\treturn gcd;\n}\n/*\n Return true if a is a power of b\n*/\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpe_m35htk.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d85]\\n??:? void tmpe_m35htk.__unittest_L26_C1()\
    \ [0x427a7d]\\n??:? void tmpe_m35htk.__modtest() [0x427b04]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baab]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a93e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a915]\\n??:? runModuleUnitTests [0x42b881]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281d4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42815b]\\n??:? _d_run_main [0x4280c6]\\n??:? main [0x427b17]\\\
    n??:? __libc_start_main [0xe9680554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = a;\n\twhile (a != 0) {\n\t\ta = b %\
    \ a;\n\t\tgcd = gcd * a;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpq7r85z_9.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d75]\\n??:? void tmpq7r85z_9.__unittest_L22_C1()\
    \ [0x427a71]\\n??:? void tmpq7r85z_9.__modtest() [0x427af8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42ba9b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a92e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fac1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff70]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa4d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a905]\\n??:? runModuleUnitTests [0x42b871]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281c4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42814b]\\n??:? _d_run_main [0x4280b6]\\n??:? main [0x427b0b]\\\
    n??:? __libc_start_main [0x3c1554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong c;\n\t\n\tc = a % b;\n\twhile (c != 0) {\n\t\ta = b;\n\
    \t\tb = c;\n\t\tc = a % b;\n\t}\n\treturn b;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a == 0)\n        return b;\n  \
    \  if (b == 0)\n        return a;\n    \n    gcd = __gcd(a, b);\n    \n    if\
    \ (gcd == 1)\n        return a;\n    \n    return gcd;\n}\nunittest\n{\n    alias\
    \ candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n\
    \    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n\
    \    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpppxd3tli.d(20): Error: undefined identifier `__gcd`, did you\
    \ mean variable `gcd`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpppxd3tli.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    gcd = __gcd(a, b);\n    \n    if (gcd == 1)\n        return a;\n    \n\
    \    return greatest_common_divisor(b % gcd, a);\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpw0h1vs11.d(18): Error: undefined identifier `__gcd`, did you\
    \ mean variable `gcd`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpw0h1vs11.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a < b) {\n        long tmp = a;\n\
    \        a = b;\n        b = tmp;\n    }\n    \n    gcd = 1;\n    \n    while\
    \ (a != 0) {\n        if (a > b) {\n            gcd = b;\n            b = a %\
    \ b;\n            a = b;\n        }\n        else {\n            gcd = a;\n  \
    \          a = a % b;\n        }\n    }\n    \n    return gcd;\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp15mmdo7m.d(44): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427da5]\\n??:? void tmp15mmdo7m.__unittest_L37_C1()\
    \ [0x427b13]\\n??:? void tmp15mmdo7m.__modtest() [0x427b28]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bacb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a95e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42faf1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a935]\\n??:? runModuleUnitTests [0x42b8a1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42817b]\\n??:? _d_run_main [0x4280e6]\\n??:? main [0x427b3b]\\\
    n??:? __libc_start_main [0x206e0554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\t\n\twhile (a != 0) {\n\t\tif (a > b) {\n\t\
    \t\ta %= b;\n\t\t} else {\n\t\t\tb %= a;\n\t\t}\n\t\tgcd *= b;\n\t}\n\treturn\
    \ gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n   \
    \ assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n \
    \   assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpfr19ffg4.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d95]\\n??:? void tmpfr19ffg4.__unittest_L25_C1()\
    \ [0x427ab3]\\n??:? void tmpfr19ffg4.__modtest() [0x427b14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42babb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a94e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fae1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a925]\\n??:? runModuleUnitTests [0x42b891]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42816b]\\n??:? _d_run_main [0x4280d6]\\n??:? main [0x427b27]\\\
    n??:? __libc_start_main [0xfd377554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    gcd = __gcd(a, b);\n    \n    if (gcd > a)\n        return gcd;\n   \
    \ \n    return __gcd(b, a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6g045g7f.d(18): Error: undefined identifier `__gcd`, did you\
    \ mean variable `gcd`?\\n/tmp/tmp6g045g7f.d(23): Error: undefined identifier `__gcd`,\
    \ did you mean variable `gcd`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmp6g045g7f.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = a % b;\n\twhile (gcd != 0)\n\t{\n\t\
    \ta = b;\n\t\tb = gcd;\n\t\tgcd = a % b;\n\t}\n\treturn b;\n}\nunittest\n{\n \
    \   alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (b != 0) {\n\t\tlong temp = b;\n\t\t\
    b = a % b;\n\t\ta = temp;\n\t\tgcd = gcd % a;\n\t}\n\treturn gcd;\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpcfpgru8q.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d85]\\n??:? void tmpcfpgru8q.__unittest_L22_C1()\
    \ [0x427a7d]\\n??:? void tmpcfpgru8q.__modtest() [0x427b04]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baab]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a93e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a915]\\n??:? runModuleUnitTests [0x42b881]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281d4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42815b]\\n??:? _d_run_main [0x4280c6]\\n??:? main [0x427b17]\\\
    n??:? __libc_start_main [0x92082554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\t\n\twhile (a != 0) {\n\t\tlong r = a % b;\n\
    \t\ta = b;\n\t\tb = r;\n\t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: -8
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd = 1;\n    \n    while (b != 0)\n    {\n       \
    \ if (a % b == 0)\n        {\n            gcd = b;\n            break;\n     \
    \   }\n        \n        b = b / 2;\n    }\n    \n    return gcd;\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp54dme5wg.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d85]\\n??:? void tmp54dme5wg.__unittest_L28_C1()\
    \ [0x427a7d]\\n??:? void tmp54dme5wg.__modtest() [0x427b04]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baab]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a93e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a915]\\n??:? runModuleUnitTests [0x42b881]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281d4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42815b]\\n??:? _d_run_main [0x4280c6]\\n??:? main [0x427b17]\\\
    n??:? __libc_start_main [0xf3f16554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\twhile (a != 0) {\n\t\tgcd = a % b;\n\t\t\
    a = b;\n\t\tb = gcd;\n\t}\n\treturn b;\n}\nunittest\n{\n    alias candidate =\
    \ greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: -8
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\tlong remainder;\n\t\n\twhile (b != 0)\n\t\
    {\n\t\tremainder = b%a;\n\t\ta = b;\n\t\tb = remainder;\n\t\tgcd = gcd*a + remainder;\n\
    \t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpdr_m8r0c.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d85]\\n??:? void tmpdr_m8r0c.__unittest_L26_C1()\
    \ [0x427a7d]\\n??:? void tmpdr_m8r0c.__modtest() [0x427b04]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baab]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a93e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a915]\\n??:? runModuleUnitTests [0x42b881]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281d4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42815b]\\n??:? _d_run_main [0x4280c6]\\n??:? main [0x427b17]\\\
    n??:? __libc_start_main [0xcb032554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n   \
    \ 1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = a;\n\twhile (a % b != 0) {\n\t\ta =\
    \ b;\n\t\tb = gcd;\n\t\tgcd = b;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias\
    \ candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n\
    \    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n\
    \    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpnvmogv3p.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d75]\\n??:? void tmpnvmogv3p.__unittest_L23_C1()\
    \ [0x427a71]\\n??:? void tmpnvmogv3p.__modtest() [0x427af8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42ba9b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a92e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fac1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff70]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa4d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a905]\\n??:? runModuleUnitTests [0x42b871]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281c4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42814b]\\n??:? _d_run_main [0x4280b6]\\n??:? main [0x427b0b]\\\
    n??:? __libc_start_main [0x23aff554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception

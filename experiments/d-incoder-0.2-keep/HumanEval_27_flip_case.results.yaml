name: HumanEval_27_flip_case
language: humaneval_to_dlang.py
results:
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for (auto c : string) \n    {\n        if (c >= 'a' && c <= 'z')\
    \ \n        {\n            result += (char)(c - 'a' + 'A');\n        }\n     \
    \   else if (c >= 'A' && c <= 'Z') \n        {\n            result += (char)(c\
    \ - 'A' + 'a');\n        }\n        else \n        {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmf0k6r9z.d(12): Error: no identifier for declarator `c`\\n/tmp/tmpmf0k6r9z.d(12):\
    \ Error: expression expected, not `:`\\n/tmp/tmpmf0k6r9z.d(12): Error: found `string`\
    \ when expecting `;` following `for` condition\\n/tmp/tmpmf0k6r9z.d(16): Error:\
    \ C style cast illegal, use `cast(char)(c - \\'a\\' + \\'A\\')`\\n/tmp/tmpmf0k6r9z.d(20):\
    \ Error: C style cast illegal, use `cast(char)(c - \\'A\\' + \\'a\\')`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmf0k6r9z.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    for(int i = 0;\
    \ i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i] <=\
    \ 'z')\n        {\n            string[i] = string[i] - 32;\n        }\n      \
    \  else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n            string[i]\
    \ = string[i] + 32;\n        }\n    }\n    return string;\n}\n/*\n For a given\
    \ string, flip uppercase characters to lowercase and lowercase to uppercase.\n\
    \    >>> flip_case('hELLO')\n    'Hello'\n    \n*/\nstring flip_case_lower(string\
    \ string) \n{\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'A' && string[i] <= 'Z')\n        {\n            string[i] = string[i] -\
    \ 32;\n        }\n        else if(string[i] >= 'a' && string[i] <= 'z')\n    \
    \    {\n            string[i] = string[i] + 32;\n        }\n    }\n    return\
    \ string;\n}\n/*\n For a given string, flip uppercase characters to lowercase\
    \ and lowercase to uppercase.\n    >>> flip_case('hELLO')\n    'Hello'\n    \n\
    */\nstring flip_case_upper(string string) \n{\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n \
    \           string[i] = string[i] + 32;\n        }\n        else if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            string[i] = string[i] -\
    \ 32;\n        }\n    }\n    return string;\n}\n/*\n For a given string, flip\
    \ uppercase characters to lowercase and lowercase to uppercase.\n    >>> flip_case('hELLO')\n\
    \    'Hello'\n    \n*/\nstring flip_case_lower(string string) \n{\n    for(int\
    \ i = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            string[i] = string[i] - 32;\n        }\n   \
    \     else if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            string[i]\
    \ = string[i] + 32;\n        }\n    }\n    return string;\n}\n/*\n For a given\
    \ string, flip uppercase characters to lowercase and lowercase to uppercase.\n\
    \    >>> flip_case('hELLO')\n    'Hello'\n    \n*/\nstring flip_case_upper(string\
    \ string) \n{\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'A' && string[i] <= 'Z')\n        {\n            string[i] = string[i] +\
    \ 32;\n        }\n\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3rtuvr78.d(102): Error: found `unittest` instead of statement\\\
    n/tmp/tmp3rtuvr78.d(110): Error: found `End of File` when expecting `}` following\
    \ compound statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3rtuvr78.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        char c\
    \ = string[i];\n        if(c == 'a' || c == 'A')\n            c = 'A';\n     \
    \   else if(c == 'b' || c == 'B')\n            c = 'B';\n        else if(c ==\
    \ 'c' || c == 'C')\n            c = 'C';\n        else if(c == 'd' || c == 'D')\n\
    \            c = 'D';\n        else if(c == 'e' || c == 'E')\n            c =\
    \ 'E';\n        else if(c == 'f' || c == 'F')\n            c = 'F';\n        else\
    \ if(c == 'g' || c == 'G')\n            c = 'G';\n        else if(c == 'h' ||\
    \ c == 'H')\n            c = 'H';\n        else if(c == 'i' || c == 'I')\n   \
    \         c = 'I';\n        else if(c == 'j' || c == 'J')\n            c = 'J';\n\
    \        else if(c == 'k' || c == 'K')\n            c = 'K';\n        else if(c\
    \ == 'l' || c == 'L')\n            c = 'L';\n        else if(c == 'm' || c ==\
    \ 'M')\n            c = 'M';\n        else if(c == 'n' || c == 'N')\n        \
    \    c = 'N';\n        else if(c == 'o' || c == 'O')\n            c = 'O';\n \
    \       else if(c == 'p' || c == 'P')\n            c = 'P';\n        else if(c\
    \ == 'q' || c == 'Q')\n            c = 'Q';\n        else if(c == 'r' || c ==\
    \ 'R')\n            c = 'R';\n        else if(c == 's' || c == 'S')\n        \
    \    c = 'S';\n        else if(c == 't' || c == 'T')\n            c = 'T';\n \
    \       else if(c == 'u' || c == 'U')\n            c = 'U';\n        else if(c\
    \ == 'v' || c == 'V')\n            c = 'V';\n        else if(c == 'w' || c ==\
    \ 'W')\n            c = 'W';\n        else if(c == 'x' || c == 'X')\n        \
    \    c = 'X';\n        else if(c == 'y' || c == 'Y')\n            c = 'Y';\n \
    \       else if(c == 'z' || c == 'Z')\n            c = 'Z';\n        else\n  \
    \          c = toupper(c);\n        result += c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5aqqvrh2.d(11): Error: `string` is used as a type\\n/tmp/tmp5aqqvrh2.d(12):\
    \ Error: no property `length` for type `string`\\n/tmp/tmp5aqqvrh2.d(68): Error:\
    \ undefined identifier `toupper`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmp5aqqvrh2.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for (auto c : string) \n    {\n        if (c >= 'a' && c <= 'z')\
    \ \n        {\n            result += (char)(c - 'a' + 'A');\n        }\n     \
    \   else if (c >= 'A' && c <= 'Z') \n        {\n            result += (char)(c\
    \ - 'A' + 'a');\n        }\n        else \n        {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\n/*\n For a given string, flip uppercase\
    \ characters to lowercase and lowercase to uppercase.\n    >>> flip_case('hELLO')\n\
    \    'Hello'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for (auto c : string) \n    {\n        if (c >= 'A' && c <= 'Z')\
    \ \n        {\n            result += (char)(c - 'A' + 'a');\n        }\n     \
    \   else if (c >= 'a' && c <= 'z') \n        {\n            result += (char)(c\
    \ - 'a' + 'A');\n        }\n        else \n        {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\n/*\n For a given string, flip all characters\
    \ to lowercase except for the first character and uppercase the first character.\n\
    \    >>> flip_case('hello')\n    'HeLLo'\n    \n*/\nstring flip_case(string string)\
    \ \n{\n    string result = \"\";\n    for (auto c : string) \n    {\n        if\
    \ (c >= 'a' && c <= 'z') \n        {\n            result += (char)(c - 'a' + 'A');\n\
    \        }\n        else if (c >= 'A' && c <= 'Z') \n        {\n            result\
    \ += (char)(c - 'A' + 'a');\n        }\n        else if (c != 'a' && c != 'A')\
    \ \n        {\n            result += c;\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip all characters to uppercase except for the first\
    \ character and lowercase the first character.\n    >>> flip_case('HeLLo')\n \
    \   'hello'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for (auto c : string) \n    {\n        if (c >= 'A' && c <= 'Z')\
    \ \n        {\n            result += (char)(c - 'A' + 'a');\n        }\n     \
    \   else if (c >= 'a' && c <= 'z') \n        {\n            result += (char)(c\
    \ - 'a' + 'A');\n        }\n        else if (c != 'a' && c != 'A') \n        {\n\
    \            result += c;\n        }\n    }\n    return result;\n}\n/*\n For a\
    \ given string, flip all characters to uppercase except \nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqjfbndom.d(12): Error: no identifier for declarator `c`\\n/tmp/tmpqjfbndom.d(12):\
    \ Error: expression expected, not `:`\\n/tmp/tmpqjfbndom.d(12): Error: found `string`\
    \ when expecting `;` following `for` condition\\n/tmp/tmpqjfbndom.d(16): Error:\
    \ C style cast illegal, use `cast(char)(c - \\'a\\' + \\'A\\')`\\n/tmp/tmpqjfbndom.d(20):\
    \ Error: C style cast illegal, use `cast(char)(c - \\'A\\' + \\'a\\')`\\n/tmp/tmpqjfbndom.d(38):\
    \ Error: no identifier for declarator `c`\\n/tmp/tmpqjfbndom.d(38): Error: expression\
    \ expected, not `:`\\n/tmp/tmpqjfbndom.d(38): Error: found `string` when expecting\
    \ `;` following `for` condition\\n/tmp/tmpqjfbndom.d(42): Error: C style cast\
    \ illegal, use `cast(char)(c - \\'A\\' + \\'a\\')`\\n/tmp/tmpqjfbndom.d(46): Error:\
    \ C style cast illegal, use `cast(char)(c - \\'a\\' + \\'A\\')`\\n/tmp/tmpqjfbndom.d(64):\
    \ Error: no identifier for declarator `c`\\n/tmp/tmpqjfbndom.d(64): Error: expression\
    \ expected, not `:`\\n/tmp/tmpqjfbndom.d(64): Error: found `string` when expecting\
    \ `;` following `for` condition\\n/tmp/tmpqjfbndom.d(68): Error: C style cast\
    \ illegal, use `cast(char)(c - \\'a\\' + \\'A\\')`\\n/tmp/tmpqjfbndom.d(72): Error:\
    \ C style cast illegal, use `cast(char)(c - \\'A\\' + \\'a\\')`\\n/tmp/tmpqjfbndom.d(90):\
    \ Error: no identifier for declarator `c`\\n/tmp/tmpqjfbndom.d(90): Error: expression\
    \ expected, not `:`\\n/tmp/tmpqjfbndom.d(90): Error: found `string` when expecting\
    \ `;` following `for` condition\\n/tmp/tmpqjfbndom.d(94): Error: C style cast\
    \ illegal, use `cast(char)(c - \\'A\\' + \\'a\\')`\\n/tmp/tmpqjfbndom.d(98): Error:\
    \ C style cast illegal, use `cast(char)(c - \\'a\\' + \\'A\\')`\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqjfbndom.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        char c =\
    \ string[i];\n        if(c == ' ' || c == '\\t' || c == '\\n' || c == '\\r')\n\
    \        {\n            result += c;\n        }\n        else\n        {\n   \
    \         result += toupper(c);\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjrc46bjf.d(11): Error: `string` is used as a type\\n/tmp/tmpjrc46bjf.d(21):\
    \ Error: undefined identifier `toupper`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpjrc46bjf.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    for(int i = 0;\
    \ i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i] <=\
    \ 'z')\n        {\n            string[i] = string[i] - 32;\n        }\n      \
    \  if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n            string[i]\
    \ = string[i] + 32;\n        }\n    }\n    return string;\n}\nunittest\n{\n  \
    \  alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp83744mol.d(11): Error: no property `length` for type `string`\\\
    n/tmp/tmp83744mol.d(15): Error: cannot modify `immutable` expression `string[cast(ulong)i]`\\\
    n/tmp/tmp83744mol.d(19): Error: cannot modify `immutable` expression `string[cast(ulong)i]`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp83744mol.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0l5z6ng9.d(11): Error: `string` is used as a type\\n/tmp/tmp0l5z6ng9.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp0l5z6ng9.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    for(int i = 0;\
    \ i < string.length(); ++i)\n    {\n        if(string[i] >= 'a' && string[i] <=\
    \ 'z')\n        {\n            string[i] = string[i] - 32;\n        }\n      \
    \  else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n            string[i]\
    \ = string[i] + 32;\n        }\n    }\n    return string;\n}\nunittest\n{\n  \
    \  alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpk91qvo3k.d(11): Error: no property `length` for type `string`\\\
    n/tmp/tmpk91qvo3k.d(15): Error: cannot modify `immutable` expression `string[cast(ulong)i]`\\\
    n/tmp/tmpk91qvo3k.d(19): Error: cannot modify `immutable` expression `string[cast(ulong)i]`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk91qvo3k.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); ++i)\n    {\n        char c\
    \ = string[i];\n        if(c == 'a')\n            c = 'A';\n        else if(c\
    \ == 'A')\n            c = 'a';\n        else if(c == 'e')\n            c = 'E';\n\
    \        else if(c == 'E')\n            c = 'e';\n        else if(c == 'i')\n\
    \            c = 'I';\n        else if(c == 'I')\n            c = 'i';\n     \
    \   else if(c == 'o')\n            c = 'O';\n        else if(c == 'O')\n     \
    \       c = 'o';\n        else if(c == 'u')\n            c = 'U';\n        else\
    \ if(c == 'U')\n            c = 'u';\n        else if(c == 'y')\n            c\
    \ = 'Y';\n        else if(c == 'Y')\n            c = 'y';\n        else\n    \
    \        c = toupper(c);\n        result += c;\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") ==\
    \ \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpp92m6k86.d(11): Error: `string` is used as a type\\n/tmp/tmpp92m6k86.d(12):\
    \ Error: no property `length` for type `string`\\n/tmp/tmpp92m6k86.d(40): Error:\
    \ undefined identifier `toupper`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpp92m6k86.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        char c\
    \ = string[i];\n        if(c == c.toLower())\n        {\n            result +=\
    \ c.toUpper();\n        }\n        else\n        {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\n/*\n Given a string, remove all spaces.\n\
    \    >>> remove_spaces('  Hello World  ')\n    'HelloWorld'\n    \n*/\nstring\
    \ remove_spaces(string string) \n{\n    string result = \"\";\n    for(int i =\
    \ 0; i < string.length(); i++)\n    {\n        char c = string[i];\n        if(c\
    \ == ' ')\n        {\n            continue;\n        }\n        result += c;\n\
    \    }\n    return result;\n}\n/*\n Given a string, remove all punctuation.\n\
    \    >>> remove_punctuation('!@#$%^&*()_+-={}[]|;:,./<>?')\n    'HelloWorld'\n\
    \    \n*/\nstring remove_punctuation(string string) \n{\n    string result = \"\
    \";\n    for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        if(c == '!' || c == '@' || c == '#' || c == '$' || c == '%' || c == '^'\
    \ || c == '&' || c == '*' || c == '(' || c == ')' || c == '-' || c == '_' || c\
    \ == '+' || c == '=' || c == '{' || c == '}' || c == ':' || c == ',' || c == '['\
    \ || c == ']' || c == '|' || c == ';' || c == '.' || c == '/' || c == '<' || c\
    \ == '>' || c == '?')\n        {\n            continue;\n        }\n        result\
    \ += c;\n    }\n    return result;\n}\n/*\n Given a string, remove all digits.\n\
    \    >>> remove_digits('123abc456')\n    'abc456'\n    \n*/\nstring remove_digits(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        char c = string[i];\n        if(c == '0' || c == '1' ||\
    \ c == '2' || c == '3' || c == '4' || c == '5' || c == '6' || c == '7' || c ==\
    \ '8' || c == '9')\n        {\n            continue;\n        }\n        result\
    \ += c;\n    }\n    return result;\n}\n/*\n Given a string, remove all non-alphanumeric\
    \ characters.\n    >>> remove_non_alphanumeric('!@#$%^&*()_+-={}[]|;:,./<>?')\n\
    \    'HelloWorld'\n    \n*/\nstring remove_non_\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxtsq02rm.d(93): Error: semicolon expected, not `unittest`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxtsq02rm.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n\tauto it = string.begin();\n\
    \tauto end = string.end();\n\tfor(; it != end; ++it)\n\t{\n\t\tif(*it >= 'a' &&\
    \ *it <= 'z')\n\t\t\t*it = *it - 'a' + 'A';\n\t\telse if(*it >= 'A' && *it <=\
    \ 'Z')\n\t\t\t*it = *it - 'A' + 'a';\n\t}\n\treturn string;\n}\nunittest\n{\n\
    \    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n  \
    \  assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvh7ihn_o.d(11): Error: no property `begin` for type `string`\\\
    n/tmp/tmpvh7ihn_o.d(12): Error: no property `end` for type `string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvh7ihn_o.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); ++i)\n    {\n        char c\
    \ = string[i];\n        if(c == ' ')\n            continue;\n        if(c == '_')\n\
    \            c = toupper(c);\n        else\n            c = tolower(c);\n    \
    \    result += c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpz0apezye.d(11): Error: `string` is used as a type\\n/tmp/tmpz0apezye.d(12):\
    \ Error: no property `length` for type `string`\\n/tmp/tmpz0apezye.d(18): Error:\
    \ undefined identifier `toupper`\\n/tmp/tmpz0apezye.d(20): Error: undefined identifier\
    \ `tolower`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz0apezye.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    for(int i = 0;\
    \ i < string.length(); i++) {\n        if(string[i] >= 'a' && string[i] <= 'z')\
    \ {\n            string[i] = string[i] - 32;\n        }\n        if(string[i]\
    \ >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n   \
    \     }\n    }\n    return string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1vrxathp.d(11): Error: no property `length` for type `string`\\\
    n/tmp/tmp1vrxathp.d(13): Error: cannot modify `immutable` expression `string[cast(ulong)i]`\\\
    n/tmp/tmp1vrxathp.d(16): Error: cannot modify `immutable` expression `string[cast(ulong)i]`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1vrxathp.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n \
    \       {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpiwxpbrty.d(11): Error: `string` is used as a type\\n/tmp/tmpiwxpbrty.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpiwxpbrty.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n\tauto it = string.begin();\n\
    \tauto end = string.end();\n\tfor(; it != end; ++it)\n\t{\n\t\tif(islower(*it))\n\
    \t\t\t*it = toupper(*it);\n\t\telse\n\t\t\t*it = tolower(*it);\n\t}\n\treturn\
    \ string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpa6ygn9s1.d(11): Error: no property `begin` for type `string`\\\
    n/tmp/tmpa6ygn9s1.d(12): Error: no property `end` for type `string`\\n/tmp/tmpa6ygn9s1.d(15):\
    \ Error: undefined identifier `islower`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpa6ygn9s1.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n \
    \       {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip uppercase characters to lowercase and lowercase\
    \ to uppercase.\n    >>> flip_case('hELLO')\n    'Hello'\n    \n*/\nstring flip_case_lower(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n \
    \           result += string[i] - 'A' + 'a';\n        }\n        else if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\n/*\n For a given string, flip uppercase\
    \ characters to lowercase and lowercase to uppercase.\n    >>> flip_case('hELLO')\n\
    \    'Hello'\n    \n*/\nstring flip_case_upper(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\n/*\n For a given string, flip all characters to lowercase.\n\
    \    >>> flip_case('hELLO')\n    'hello'\n    \n*/\nstring flip_case_all(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n \
    \           result += string[i] - 'a' + 'A';\n        }\n        else\n      \
    \  {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip all characters to uppercase.\n    >>> flip_case('hELLO')\n\
    \    'HELLO'\n    \n*/\nstring flip_case_all_upper(\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzkt6__ft.d(110): Error: basic type expected, not `unittest`\\\
    n/tmp/tmpzkt6__ft.d(110): Error: found `unittest` when expecting `)`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzkt6__ft.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n\tauto it = string.begin();\n\
    \tauto end = string.end();\n\tfor(; it != end; ++it)\n\t{\n\t\tif(*it >= 'a' &&\
    \ *it <= 'z')\n\t\t\t*it = (*it-'a'+'A');\n\t\telse if(*it >= 'A' && *it <= 'Z')\n\
    \t\t\t*it = (*it-'A'+'a');\n\t}\n\treturn string;\n}\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwn8ab5hz.d(11): Error: no property `begin` for type `string`\\\
    n/tmp/tmpwn8ab5hz.d(12): Error: no property `end` for type `string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwn8ab5hz.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0frumpe5.d(11): Error: `string` is used as a type\\n/tmp/tmp0frumpe5.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp0frumpe5.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgme_fjb8.d(11): Error: `string` is used as a type\\n/tmp/tmpgme_fjb8.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpgme_fjb8.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); ++i)\n    {\n        char c\
    \ = string[i];\n        if(c == toupper(c))\n        {\n            result +=\
    \ tolower(c);\n        }\n        else\n        {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbxqg9ge5.d(11): Error: `string` is used as a type\\n/tmp/tmpbxqg9ge5.d(12):\
    \ Error: no property `length` for type `string`\\n/tmp/tmpbxqg9ge5.d(15): Error:\
    \ undefined identifier `toupper`\\n/tmp/tmpbxqg9ge5.d(17): Error: undefined identifier\
    \ `tolower`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbxqg9ge5.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        char c\
    \ = string[i];\n        if(c == 'a')\n            c = 'A';\n        if(c == 'A')\n\
    \            c = 'a';\n        result += c;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphwtuweyc.d(11): Error: `string` is used as a type\\n/tmp/tmphwtuweyc.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmphwtuweyc.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpoqxl83wz.d(11): Error: `string` is used as a type\\n/tmp/tmpoqxl83wz.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpoqxl83wz.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); ++i)\n    {\n        char c\
    \ = string[i];\n        if(c == 'a')\n            c = 'A';\n        else if(c\
    \ == 'A')\n            c = 'a';\n        else\n            result += c;\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpb4f75bsw.d(11): Error: `string` is used as a type\\n/tmp/tmpb4f75bsw.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpb4f75bsw.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        char c =\
    \ string[i];\n        if(c == ' ')\n        {\n            result += c;\n    \
    \    }\n        else if(c == '_')\n        {\n            result += string[i+1];\n\
    \        }\n        else\n        {\n            result += toupper(c);\n     \
    \   }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4qsvosx6.d(11): Error: `string` is used as a type\\n/tmp/tmp4qsvosx6.d(25):\
    \ Error: undefined identifier `toupper`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp4qsvosx6.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        char c\
    \ = string[i];\n        if(c == 'a')\n            c = 'A';\n        else if(c\
    \ == 'A')\n            c = 'a';\n        else if(c == 'e')\n            c = 'E';\n\
    \        else if(c == 'E')\n            c = 'e';\n        else if(c == 'i')\n\
    \            c = 'I';\n        else if(c == 'I')\n            c = 'i';\n     \
    \   else if(c == 'o')\n            c = 'O';\n        else if(c == 'O')\n     \
    \       c = 'o';\n        else if(c == 'u')\n            c = 'U';\n        else\
    \ if(c == 'U')\n            c = 'u';\n        else if(c == 'y')\n            c\
    \ = 'Y';\n        else if(c == 'Y')\n            c = 'y';\n        else\n    \
    \        c = toupper(c);\n        result += c;\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") ==\
    \ \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpz5xg1c0g.d(11): Error: `string` is used as a type\\n/tmp/tmpz5xg1c0g.d(12):\
    \ Error: no property `length` for type `string`\\n/tmp/tmpz5xg1c0g.d(40): Error:\
    \ undefined identifier `toupper`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpz5xg1c0g.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2v5cge3h.d(11): Error: `string` is used as a type\\n/tmp/tmp2v5cge3h.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp2v5cge3h.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n \
    \       {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkaphlsma.d(11): Error: `string` is used as a type\\n/tmp/tmpkaphlsma.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpkaphlsma.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        char c\
    \ = string[i];\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c ==\
    \ 'u')\n        {\n            result += toupper(c);\n        }\n        else\n\
    \        {\n            result += tolower(c);\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdl4qxtmn.d(11): Error: `string` is used as a type\\n/tmp/tmpdl4qxtmn.d(12):\
    \ Error: no property `length` for type `string`\\n/tmp/tmpdl4qxtmn.d(17): Error:\
    \ undefined identifier `toupper`\\n/tmp/tmpdl4qxtmn.d(21): Error: undefined identifier\
    \ `tolower`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdl4qxtmn.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    for(int i = 0;\
    \ i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i] <=\
    \ 'z')\n        {\n            string[i] = string[i] - 32;\n        }\n      \
    \  else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n            string[i]\
    \ = string[i] + 32;\n        }\n    }\n    return string;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| a tags=c++,string |>\n<code>\n#include <iostream>\n#include <string>\n\
    using namespace std;\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6fqxcytf.d(24): Error: declaration expected, not `<`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6fqxcytf.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppuw8_c5f.d(11): Error: `string` is used as a type\\n/tmp/tmppuw8_c5f.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmppuw8_c5f.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpr_zv4ob1.d(11): Error: `string` is used as a type\\n/tmp/tmpr_zv4ob1.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpr_zv4ob1.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        char c\
    \ = string[i];\n        if(c == 'a')\n        {\n            c = 'A';\n      \
    \  }\n        else if(c == 'A')\n        {\n            c = 'a';\n        }\n\
    \        result += c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6ag38pxj.d(11): Error: `string` is used as a type\\n/tmp/tmp6ag38pxj.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp6ag38pxj.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3fz8wkj5.d(11): Error: `string` is used as a type\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3fz8wkj5.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n \
    \       {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp53_vneyb.d(11): Error: `string` is used as a type\\n/tmp/tmp53_vneyb.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp53_vneyb.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n \
    \       {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpoaoiw463.d(11): Error: `string` is used as a type\\n/tmp/tmpoaoiw463.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpoaoiw463.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z') {\n            result += string[i] - 'a' + 'A';\n\
    \        } else {\n            result += string[i];\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxssyrj8a.d(11): Error: `string` is used as a type\\n/tmp/tmpxssyrj8a.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpxssyrj8a.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); ++i)\n    {\n        char c\
    \ = string[i];\n        if(c == 'a' || c == 'A')\n            c = 'A';\n     \
    \   else if(c == 'b' || c == 'B')\n            c = 'B';\n        else if(c ==\
    \ 'c' || c == 'C')\n            c = 'C';\n        else if(c == 'd' || c == 'D')\n\
    \            c = 'D';\n        else if(c == 'e' || c == 'E')\n            c =\
    \ 'E';\n        else if(c == 'f' || c == 'F')\n            c = 'F';\n        else\
    \ if(c == 'g' || c == 'G')\n            c = 'G';\n        else if(c == 'h' ||\
    \ c == 'H')\n            c = 'H';\n        else if(c == 'i' || c == 'I')\n   \
    \         c = 'I';\n        else if(c == 'j' || c == 'J')\n            c = 'J';\n\
    \        else if(c == 'k' || c == 'K')\n            c = 'K';\n        else if(c\
    \ == 'l' || c == 'L')\n            c = 'L';\n        else if(c == 'm' || c ==\
    \ 'M')\n            c = 'M';\n        else if(c == 'n' || c == 'N')\n        \
    \    c = 'N';\n        else if(c == 'o' || c == 'O')\n            c = 'O';\n \
    \       else if(c == 'p' || c == 'P')\n            c = 'P';\n        else if(c\
    \ == 'q' || c == 'Q')\n            c = 'Q';\n        else if(c == 'r' || c ==\
    \ 'R')\n            c = 'R';\n        else if(c == 's' || c == 'S')\n        \
    \    c = 'S';\n        else if(c == 't' || c == 'T')\n            c = 'T';\n \
    \       else if(c == 'u' || c == 'U')\n            c = 'U';\n        else if(c\
    \ == 'v' || c == 'V')\n            c = 'V';\n        else if(c == 'w' || c ==\
    \ 'W')\n            c = 'W';\n        else if(c == 'x' || c == 'X')\n        \
    \    c = 'X';\n        else if(c == 'y' || c == 'Y')\n            c = 'Y';\n \
    \       else if(c == 'z' || c == 'Z')\n            c = 'Z';\n        else if(c\
    \ == 'A' || c == 'a')\n            c = 'a';\n        else if(c == 'B' || c ==\
    \ 'b')\n            c = 'b';\n        else if(c == 'C' || c == 'c')\n        \
    \    c = 'c';\n        else if(c == 'D' || c == 'd')\n            c = 'd';\n \
    \       else if(c == 'E' || c == 'e')\n            c = '\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbhmmn2m8.d(76): Error: unterminated character constant\\n/tmp/tmpbhmmn2m8.d(77):\
    \ Error: found `unittest` when expecting `;` following statement\\n/tmp/tmpbhmmn2m8.d(85):\
    \ Error: found `End of File` when expecting `}` following compound statement\\\
    n/tmp/tmpbhmmn2m8.d(85): Error: found `End of File` when expecting `}` following\
    \ compound statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbhmmn2m8.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for (auto c : string) \n    {\n        if (c >= 'a' && c <= 'z')\
    \ \n        {\n            result += (char)(c - 'a' + 'A');\n        }\n     \
    \   else if (c >= 'A' && c <= 'Z') \n        {\n            result += (char)(c\
    \ - 'A' + 'a');\n        }\n        else \n        {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpghc32x3z.d(12): Error: no identifier for declarator `c`\\n/tmp/tmpghc32x3z.d(12):\
    \ Error: expression expected, not `:`\\n/tmp/tmpghc32x3z.d(12): Error: found `string`\
    \ when expecting `;` following `for` condition\\n/tmp/tmpghc32x3z.d(16): Error:\
    \ C style cast illegal, use `cast(char)(c - \\'a\\' + \\'A\\')`\\n/tmp/tmpghc32x3z.d(20):\
    \ Error: C style cast illegal, use `cast(char)(c - \\'A\\' + \\'a\\')`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpghc32x3z.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++) {\n        char c = string[i];\n\
    \        if(islower(c)) {\n            result += toupper(c);\n        } else {\n\
    \            result += tolower(c);\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") ==\
    \ \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmph7vqy2yd.d(11): Error: `string` is used as a type\\n/tmp/tmph7vqy2yd.d(12):\
    \ Error: no property `length` for type `string`\\n/tmp/tmph7vqy2yd.d(14): Error:\
    \ undefined identifier `islower`\\n/tmp/tmph7vqy2yd.d(15): Error: undefined identifier\
    \ `toupper`\\n/tmp/tmph7vqy2yd.d(17): Error: undefined identifier `tolower`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph7vqy2yd.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for (auto c : string) \n    {\n        if (c >= 'a' && c <= 'z')\
    \ \n        {\n            result += (char)(c - 'a' + 'A');\n        }\n     \
    \   else if (c >= 'A' && c <= 'Z') \n        {\n            result += (char)(c\
    \ - 'A' + 'a');\n        }\n        else \n        {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpo9__o9av.d(12): Error: no identifier for declarator `c`\\n/tmp/tmpo9__o9av.d(12):\
    \ Error: expression expected, not `:`\\n/tmp/tmpo9__o9av.d(12): Error: found `string`\
    \ when expecting `;` following `for` condition\\n/tmp/tmpo9__o9av.d(16): Error:\
    \ C style cast illegal, use `cast(char)(c - \\'a\\' + \\'A\\')`\\n/tmp/tmpo9__o9av.d(20):\
    \ Error: C style cast illegal, use `cast(char)(c - \\'A\\' + \\'a\\')`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo9__o9av.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++) {\n        char c = string[i];\n\
    \        if(c == ' ' || c == '.' || c == '-' || c == '_' || c == '/' || c == '\\\
    \\') {\n            result += c;\n        } else {\n            result += toupper(c);\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpyhv8sncw.d(11): Error: `string` is used as a type\\n/tmp/tmpyhv8sncw.d(12):\
    \ Error: no property `length` for type `string`\\n/tmp/tmpyhv8sncw.d(17): Error:\
    \ undefined identifier `toupper`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpyhv8sncw.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp00gy7p07.d(11): Error: `string` is used as a type\\n/tmp/tmp00gy7p07.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp00gy7p07.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5_ovme7s.d(11): Error: `string` is used as a type\\n/tmp/tmp5_ovme7s.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp5_ovme7s.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n \
    \       {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp062kiyix.d(11): Error: `string` is used as a type\\n/tmp/tmp062kiyix.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp062kiyix.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        char c\
    \ = string[i];\n        if(c == '_')\n        {\n            c = string[i + 1];\n\
    \            result += c;\n            i++;\n        }\n        else if(c == 'a')\n\
    \        {\n            c = 'A';\n            result += c;\n        }\n      \
    \  else if(c == 'A')\n        {\n            c = 'a';\n            result += c;\n\
    \        }\n        else\n        {\n            result += c;\n        }\n   \
    \ }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphomd5ydh.d(11): Error: `string` is used as a type\\n/tmp/tmphomd5ydh.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmphomd5ydh.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z') {\n            result += string[i] - 'a' + 'A';\n\
    \        }\n        else if(string[i] >= 'A' && string[i] <= 'Z') {\n        \
    \    result += string[i] - 'A' + 'a';\n        }\n        else {\n           \
    \ result += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n  \
    \  assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpl4ib797d.d(11): Error: `string` is used as a type\\n/tmp/tmpl4ib797d.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpl4ib797d.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n\tauto it = string.begin();\n\
    \tauto end = string.end();\n\tfor(; it != end; ++it)\n\t{\n\t\tif(islower(*it))\n\
    \t\t\t*it = toupper(*it);\n\t\telse\n\t\t\t*it = tolower(*it);\n\t}\n\treturn\
    \ string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6g4ad1gn.d(11): Error: no property `begin` for type `string`\\\
    n/tmp/tmp6g4ad1gn.d(12): Error: no property `end` for type `string`\\n/tmp/tmp6g4ad1gn.d(15):\
    \ Error: undefined identifier `islower`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp6g4ad1gn.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        char c\
    \ = string[i];\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c ==\
    \ 'u')\n        {\n            result += string[i];\n        }\n        else if(c\
    \ == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n        {\n       \
    \     result += string[i].toUpper();\n        }\n        else\n        {\n   \
    \         result += string[i];\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpx_xf0p5v.d(11): Error: `string` is used as a type\\n/tmp/tmpx_xf0p5v.d(12):\
    \ Error: no property `length` for type `string`\\n/tmp/tmpx_xf0p5v.d(21): Error:\
    \ no property `toUpper` for type `immutable(char)`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpx_xf0p5v.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        char c =\
    \ string[i];\n        if(c == 'a' || c == 'A')\n        {\n            c = 'A';\n\
    \        }\n        else if(c == 'b' || c == 'B')\n        {\n            c =\
    \ 'B';\n        }\n        else if(c == 'c' || c == 'C')\n        {\n        \
    \    c = 'C';\n        }\n        else if(c == 'd' || c == 'D')\n        {\n \
    \           c = 'D';\n        }\n        else if(c == 'e' || c == 'E')\n     \
    \   {\n            c = 'E';\n        }\n        else if(c == 'f' || c == 'F')\n\
    \        {\n            c = 'F';\n        }\n        else if(c == 'g' || c ==\
    \ 'G')\n        {\n            c = 'G';\n        }\n        else if(c == 'h' ||\
    \ c == 'H')\n        {\n            c = 'H';\n        }\n        else if(c ==\
    \ 'i' || c == 'I')\n        {\n            c = 'I';\n        }\n        else if(c\
    \ == 'j' || c == 'J')\n        {\n            c = 'J';\n        }\n        else\
    \ if(c == 'k' || c == 'K')\n        {\n            c = 'K';\n        }\n     \
    \   else if(c == 'l' || c == 'L')\n        {\n            c = 'L';\n        }\n\
    \        else if(c == 'm' || c == 'M')\n        {\n            c = 'M';\n    \
    \    }\n        else if(c == 'n' || c == 'N')\n        {\n            c = 'N';\n\
    \        }\n        else if(c == 'o' || c == 'O')\n        {\n            c =\
    \ 'O';\n        }\n        else if(c == 'p' || c == 'P')\n        {\n        \
    \    c = 'P';\n        }\n        else if(c == 'q' || c == 'Q')\n        {\n \
    \           c = 'Q';\n        }\n        else if(c == 'r' || c == 'R')\n     \
    \   {\n            c = 'R';\n        }\n        else if(c == 's' || c == 'S')\n\
    \        {\n            c = 'S';\n        }\n        else if(c == 't' || c ==\
    \ 'T')\n        {\n            c = 'T';\n        }\n        else if(c == 'u' ||\
    \ c == 'U')\n        {\n            c = 'U';\n        }\n        else if(c ==\
    \ 'v' || c == 'V')\n        {\n            c = 'V';\n        }\n        else if(c\
    \ == 'w' || c == 'W')\n        {\n            c = 'W';\n        }\n        else\
    \ if(c == 'x' || c == 'X')\n        {\n            c = 'X';\n        }\n     \
    \   else if(c == 'y' || c == 'Y')\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_9dl5u88.d(112): Error: found `unittest` instead of statement\\\
    n/tmp/tmp_9dl5u88.d(120): Error: found `End of File` when expecting `}` following\
    \ compound statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_9dl5u88.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    for(int i = 0;\
    \ i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i] <=\
    \ 'z')\n        {\n            string[i] = string[i] - 32;\n        }\n      \
    \  else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n            string[i]\
    \ = string[i] + 32;\n        }\n    }\n    return string;\n}\nunittest\n{\n  \
    \  alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpoctd5rqg.d(11): Error: no property `length` for type `string`\\\
    n/tmp/tmpoctd5rqg.d(15): Error: cannot modify `immutable` expression `string[cast(ulong)i]`\\\
    n/tmp/tmpoctd5rqg.d(19): Error: cannot modify `immutable` expression `string[cast(ulong)i]`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpoctd5rqg.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        char c\
    \ = string[i];\n        if(c == 'a')\n            c = 'A';\n        else if(c\
    \ == 'A')\n            c = 'a';\n        result += c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpd2rbl8ke.d(11): Error: `string` is used as a type\\n/tmp/tmpd2rbl8ke.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpd2rbl8ke.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for (auto c : string) \n    {\n        if (c >= 'a' && c <= 'z')\
    \ \n        {\n            result += (char)(c - 'a' + 'A');\n        }\n     \
    \   else if (c >= 'A' && c <= 'Z') \n        {\n            result += (char)(c\
    \ - 'A' + 'a');\n        }\n        else \n        {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphq57z0b6.d(12): Error: no identifier for declarator `c`\\n/tmp/tmphq57z0b6.d(12):\
    \ Error: expression expected, not `:`\\n/tmp/tmphq57z0b6.d(12): Error: found `string`\
    \ when expecting `;` following `for` condition\\n/tmp/tmphq57z0b6.d(16): Error:\
    \ C style cast illegal, use `cast(char)(c - \\'a\\' + \\'A\\')`\\n/tmp/tmphq57z0b6.d(20):\
    \ Error: C style cast illegal, use `cast(char)(c - \\'A\\' + \\'a\\')`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphq57z0b6.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); ++i)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\n/*\n For a given string, flip uppercase\
    \ characters to lowercase and lowercase to uppercase.\n    >>> flip_case('hELLO')\n\
    \    'Hello'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); ++i)\n    {\n        if(string[i]\
    \ >= 'A' && string[i] <= 'Z')\n        {\n            result += string[i] - 'A'\
    \ + 'a';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\n/*\n For a given string, flip all characters\
    \ to lowercase and uppercase to uppercase.\n    >>> flip_case('Hello World')\n\
    \    'HELLO WORLD'\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); ++i)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\n/*\n For a given string, flip all characters to uppercase\
    \ and lowercase to lowercase.\n    >>> flip_case('HELLO WORLD')\n    'Hello World'\n\
    \    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n  \
    \  for(int i = 0; i < string.length(); ++i)\n    {\n        if(string[i] >= 'a'\
    \ && string[i] <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n\
    \        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n\
    \            result += string[i] - 'A' + 'a';\n        }\n        else\n     \
    \   {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip all characters to uppercase and uppercase to\
    \ lowercase.\n    >>> flip_case('Hello World')\n    'HELLO WORLD'\n    \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\nunittest\n{\n\
    \    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n  \
    \  assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpio689e4r.d(108): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpio689e4r.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n \
    \       {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqkzdhz2y.d(11): Error: `string` is used as a type\\n/tmp/tmpqkzdhz2y.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpqkzdhz2y.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); ++i)\n    {\n        char c\
    \ = string[i];\n        if(c == 'A')\n            c = 'a';\n        else if(c\
    \ == 'a')\n            c = 'A';\n        else if(c == 'B')\n            c = 'b';\n\
    \        else if(c == 'b')\n            c = 'B';\n        else if(c == 'C')\n\
    \            c = 'c';\n        else if(c == 'c')\n            c = 'C';\n     \
    \   else if(c == 'D')\n            c = 'd';\n        else if(c == 'd')\n     \
    \       c = 'D';\n        else if(c == 'E')\n            c = 'e';\n        else\
    \ if(c == 'e')\n            c = 'E';\n        else if(c == 'F')\n            c\
    \ = 'f';\n        else if(c == 'f')\n            c = 'F';\n        else if(c ==\
    \ 'G')\n            c = 'g';\n        else if(c == 'g')\n            c = 'G';\n\
    \        else if(c == 'H')\n            c = 'h';\n        else if(c == 'h')\n\
    \            c = 'H';\n        else if(c == 'I')\n            c = 'i';\n     \
    \   else if(c == 'i')\n            c = 'I';\n        else if(c == 'J')\n     \
    \       c = 'j';\n        else if(c == 'j')\n            c = 'J';\n        else\
    \ if(c == 'K')\n            c = 'k';\n        else if(c == 'k')\n            c\
    \ = 'K';\n        else if(c == 'L')\n            c = 'l';\n        else if(c ==\
    \ 'l')\n            c = 'L';\n        else if(c == 'M')\n            c = 'm';\n\
    \        else if(c == 'm')\n            c = 'M';\n        else if(c == 'N')\n\
    \            c = 'n';\n        else if(c == 'n')\n            c = 'N';\n     \
    \   else if(c == 'O')\n            c = 'o';\n        else if(c == 'o')\n     \
    \       c = 'O';\n        else if(c == 'P')\n            c = 'p';\n        else\
    \ if(c == 'p')\n            c = 'P';\n        else if(c == 'Q')\n            c\
    \ = 'q';\n        else if(c == 'q')\n            c = 'Q';\n        else if(c ==\
    \ 'R')\n            c = 'r';\n        else if(c == 'r')\n            c = 'R';\n\
    \        else if(c == 'S')\n            c = 's';\n        else if(c == 's')\n\
    \            c = 'S';\n        else if(c == 'T')\n            c = 't';\n     \
    \   else if(c == 't')\n            c = 'T';\n        else if(c == 'U')\n     \
    \       c = 'u';\n        else if(c == 'u\nunittest\n{\n    alias candidate =\
    \ flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjbnr7sp1.d(97): Error: unterminated character constant\\n/tmp/tmpjbnr7sp1.d(98):\
    \ Error: found `unittest` when expecting `)`\\n/tmp/tmpjbnr7sp1.d(106): Error:\
    \ found `End of File` when expecting `}` following compound statement\\n/tmp/tmpjbnr7sp1.d(106):\
    \ Error: found `End of File` when expecting `}` following compound statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjbnr7sp1.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n \
    \       {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpn3jno3x0.d(11): Error: `string` is used as a type\\n/tmp/tmpn3jno3x0.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpn3jno3x0.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n\tauto it = string.begin();\n\
    \tauto end = string.end();\n\tfor(; it != end; ++it)\n\t{\n\t\tif(*it >= 'a' &&\
    \ *it <= 'z')\n\t\t{\n\t\t\t*it = (*it) - 32;\n\t\t}\n\t\telse if(*it >= 'A' &&\
    \ *it <= 'Z')\n\t\t{\n\t\t\t*it = (*it) + 32;\n\t\t}\n\t}\n\treturn string;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4ell51ml.d(11): Error: no property `begin` for type `string`\\\
    n/tmp/tmp4ell51ml.d(12): Error: no property `end` for type `string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4ell51ml.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n\tauto it = string.begin();\n\
    \tauto end = string.end();\n\tfor(; it != end; ++it)\n\t{\n\t\tif(*it >= 'a' &&\
    \ *it <= 'z')\n\t\t\t*it = *it - 'a' + 'A';\n\t\telse if(*it >= 'A' && *it <=\
    \ 'Z')\n\t\t\t*it = *it - 'A' + 'a';\n\t\telse\n\t\t\t*it = *it;\n\t}\n\treturn\
    \ string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp80bi7ina.d(11): Error: no property `begin` for type `string`\\\
    n/tmp/tmp80bi7ina.d(12): Error: no property `end` for type `string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp80bi7ina.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqxpvntj3.d(11): Error: `string` is used as a type\\n/tmp/tmpqxpvntj3.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpqxpvntj3.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for (auto c : string) \n    {\n        if (c >= 'a' && c <= 'z')\
    \ \n        {\n            result += (char)(c - 'a' + 'A');\n        }\n     \
    \   else if (c >= 'A' && c <= 'Z') \n        {\n            result += (char)(c\
    \ - 'A' + 'a');\n        }\n        else \n        {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpnszivkpm.d(12): Error: no identifier for declarator `c`\\n/tmp/tmpnszivkpm.d(12):\
    \ Error: expression expected, not `:`\\n/tmp/tmpnszivkpm.d(12): Error: found `string`\
    \ when expecting `;` following `for` condition\\n/tmp/tmpnszivkpm.d(16): Error:\
    \ C style cast illegal, use `cast(char)(c - \\'a\\' + \\'A\\')`\\n/tmp/tmpnszivkpm.d(20):\
    \ Error: C style cast illegal, use `cast(char)(c - \\'A\\' + \\'a\\')`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnszivkpm.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        char c\
    \ = string[i];\n        if(c == 'a')\n            c = 'A';\n        else if(c\
    \ == 'A')\n            c = 'a';\n        else\n            c = toupper(c);\n \
    \       result += c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7o9gygh_.d(11): Error: `string` is used as a type\\n/tmp/tmp7o9gygh_.d(12):\
    \ Error: no property `length` for type `string`\\n/tmp/tmp7o9gygh_.d(20): Error:\
    \ undefined identifier `toupper`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmp7o9gygh_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); ++i)\n    {\n        char c\
    \ = string[i];\n        if(c == ' ')\n        {\n            result += c;\n  \
    \      }\n        else if(c == '_')\n        {\n            result += toupper(c);\n\
    \        }\n        else\n        {\n            result += tolower(c);\n     \
    \   }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpec7jwv4b.d(11): Error: `string` is used as a type\\n/tmp/tmpec7jwv4b.d(12):\
    \ Error: no property `length` for type `string`\\n/tmp/tmpec7jwv4b.d(21): Error:\
    \ undefined identifier `toupper`\\n/tmp/tmpec7jwv4b.d(25): Error: undefined identifier\
    \ `tolower`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpec7jwv4b.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); ++i)\n    {\n        char c\
    \ = string[i];\n        if(c == 'A' || c == 'a') \n            c = toupper(c);\n\
    \        else if(c == 'B' || c == 'b')\n            c = tolower(c);\n        else\
    \ if(c == 'C' || c == 'c')\n            c = toupper(c);\n        else if(c ==\
    \ 'D' || c == 'd')\n            c = tolower(c);\n        else if(c == 'E' || c\
    \ == 'e')\n            c = toupper(c);\n        else if(c == 'F' || c == 'f')\n\
    \            c = tolower(c);\n        else if(c == 'G' || c == 'g')\n        \
    \    c = toupper(c);\n        else if(c == 'H' || c == 'h')\n            c = tolower(c);\n\
    \        else if(c == 'I' || c == 'i')\n            c = toupper(c);\n        else\
    \ if(c == 'J' || c == 'j')\n            c = tolower(c);\n        else if(c ==\
    \ 'K' || c == 'k')\n            c = toupper(c);\n        else if(c == 'L' || c\
    \ == 'l')\n            c = tolower(c);\n        else if(c == 'M' || c == 'm')\n\
    \            c = toupper(c);\n        else if(c == 'N' || c == 'n')\n        \
    \    c = tolower(c);\n        else if(c == 'O' || c == 'o')\n            c = toupper(c);\n\
    \        else if(c == 'P' || c == 'p')\n            c = tolower(c);\n        else\
    \ if(c == 'Q' || c == 'q')\n            c = toupper(c);\n        else if(c ==\
    \ 'R' || c == 'r')\n            c = tolower(c);\n        else if(c == 'S' || c\
    \ == 's')\n            c = toupper(c);\n        else if(c == 'T' || c == 't')\n\
    \            c = tolower(c);\n        else if(c == 'U' || c == 'u')\n        \
    \    c = toupper(c);\n        else if(c == 'V' || c == 'v')\n            c = tolower(c);\n\
    \        else if(c == 'W' || c == 'w')\n            c = toupper(c);\n        else\
    \ if(c == 'X' || c == 'x')\n            c = tolower(c);\n        else if(c ==\
    \ 'Y' || c == 'y')\n            c = toupper(c);\n        else if(c == 'Z' || c\
    \ == 'z')\n            c = tolower(c);\n        else\n            c = string[i];\n\
    \        result += c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbdzhojqn.d(11): Error: `string` is used as a type\\n/tmp/tmpbdzhojqn.d(12):\
    \ Error: no property `length` for type `string`\\n/tmp/tmpbdzhojqn.d(16): Error:\
    \ undefined identifier `toupper`\\n/tmp/tmpbdzhojqn.d(18): Error: undefined identifier\
    \ `tolower`\\n/tmp/tmpbdzhojqn.d(20): Error: undefined identifier `toupper`\\\
    n/tmp/tmpbdzhojqn.d(22): Error: undefined identifier `tolower`\\n/tmp/tmpbdzhojqn.d(24):\
    \ Error: undefined identifier `toupper`\\n/tmp/tmpbdzhojqn.d(26): Error: undefined\
    \ identifier `tolower`\\n/tmp/tmpbdzhojqn.d(28): Error: undefined identifier `toupper`\\\
    n/tmp/tmpbdzhojqn.d(30): Error: undefined identifier `tolower`\\n/tmp/tmpbdzhojqn.d(32):\
    \ Error: undefined identifier `toupper`\\n/tmp/tmpbdzhojqn.d(34): Error: undefined\
    \ identifier `tolower`\\n/tmp/tmpbdzhojqn.d(36): Error: undefined identifier `toupper`\\\
    n/tmp/tmpbdzhojqn.d(38): Error: undefined identifier `tolower`\\n/tmp/tmpbdzhojqn.d(40):\
    \ Error: undefined identifier `toupper`\\n/tmp/tmpbdzhojqn.d(42): Error: undefined\
    \ identifier `tolower`\\n/tmp/tmpbdzhojqn.d(44): Error: undefined identifier `toupper`\\\
    n/tmp/tmpbdzhojqn.d(46): Error: undefined identifier `tolower`\\n/tmp/tmpbdzhojqn.d(48):\
    \ Error: undefined identifier `toupper`\\n/tmp/tmpbdzhojqn.d(50): Error: undefined\
    \ identifier `tolower`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpbdzhojqn.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n \
    \       {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4t5i34ho.d(11): Error: `string` is used as a type\\n/tmp/tmp4t5i34ho.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp4t5i34ho.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); ++i)\n    {\n        char c\
    \ = string[i];\n        if(c == ' ' || c == '\\t' || c == '\\n')\n        {\n\
    \            result += c;\n        }\n        else if(c == 'A')\n        {\n \
    \           result += 'a';\n        }\n        else if(c == 'a')\n        {\n\
    \            result += 'A';\n        }\n        else\n        {\n            result\
    \ += toupper(c);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpomriwn2g.d(11): Error: `string` is used as a type\\n/tmp/tmpomriwn2g.d(12):\
    \ Error: no property `length` for type `string`\\n/tmp/tmpomriwn2g.d(29): Error:\
    \ undefined identifier `toupper`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpomriwn2g.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n \
    \       {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp08flc7xt.d(11): Error: `string` is used as a type\\n/tmp/tmp08flc7xt.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp08flc7xt.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphh91qf90.d(11): Error: `string` is used as a type\\n/tmp/tmphh91qf90.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmphh91qf90.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for (auto c : string) result += toupper(c);\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpen855qfe.d(12): Error: no identifier for declarator `c`\\n/tmp/tmpen855qfe.d(12):\
    \ Error: expression expected, not `:`\\n/tmp/tmpen855qfe.d(12): Error: found `string`\
    \ when expecting `;` following `for` condition\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpen855qfe.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n \
    \       {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9pu2577x.d(11): Error: `string` is used as a type\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9pu2577x.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxs7brpa8.d(11): Error: `string` is used as a type\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxs7brpa8.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        char c\
    \ = string[i];\n        if(c == 'a')\n            c = 'A';\n        else if(c\
    \ == 'A')\n            c = 'a';\n        else if(c == 'e')\n            c = 'E';\n\
    \        else if(c == 'E')\n            c = 'e';\n        else if(c == 'i')\n\
    \            c = 'I';\n        else if(c == 'I')\n            c = 'i';\n     \
    \   else if(c == 'o')\n            c = 'O';\n        else if(c == 'O')\n     \
    \       c = 'o';\n        else if(c == 'u')\n            c = 'U';\n        else\
    \ if(c == 'U')\n            c = 'u';\n        else if(c == 'y')\n            c\
    \ = 'Y';\n        else if(c == 'Y')\n            c = 'y';\n        else\n    \
    \        c = toupper(c);\n        result += c;\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") ==\
    \ \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptjy5blv1.d(11): Error: `string` is used as a type\\n/tmp/tmptjy5blv1.d(12):\
    \ Error: no property `length` for type `string`\\n/tmp/tmptjy5blv1.d(40): Error:\
    \ undefined identifier `toupper`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmptjy5blv1.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for (auto c : string) result += toupper(c);\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpb26qf3yw.d(12): Error: no identifier for declarator `c`\\n/tmp/tmpb26qf3yw.d(12):\
    \ Error: expression expected, not `:`\\n/tmp/tmpb26qf3yw.d(12): Error: found `string`\
    \ when expecting `;` following `for` condition\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpb26qf3yw.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n \
    \       {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxu2rar81.d(11): Error: `string` is used as a type\\n/tmp/tmpxu2rar81.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpxu2rar81.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        char c\
    \ = string[i];\n        if(c == '_')\n        {\n            result += string[i];\n\
    \        }\n        else if(c == 'a')\n        {\n            result += 'A';\n\
    \        }\n        else if(c == 'A')\n        {\n            result += 'a';\n\
    \        }\n        else\n        {\n            result += c;\n        }\n   \
    \ }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpt1pxko9l.d(11): Error: `string` is used as a type\\n/tmp/tmpt1pxko9l.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpt1pxko9l.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++) {\n        char c = string[i];\n\
    \        if(c == 'a' || c == 'A') {\n            result += 'A';\n        } else\
    \ {\n            result += c;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5h8mjhc4.d(11): Error: `string` is used as a type\\n/tmp/tmp5h8mjhc4.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp5h8mjhc4.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n\tauto it = string.begin();\n\
    \tauto end = string.end();\n\tfor(;it!=end;++it) {\n\t\tif(islower(*it)) {\n\t\
    \t\t*it = toupper(*it);\n\t\t}\n\t\telse {\n\t\t\t*it = tolower(*it);\n\t\t}\n\
    \t}\n\treturn string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n  \
    \  assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\"\
    );\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpryf5sh2n.d(11): Error: no property `begin` for type `string`\\\
    n/tmp/tmpryf5sh2n.d(12): Error: no property `end` for type `string`\\n/tmp/tmpryf5sh2n.d(14):\
    \ Error: undefined identifier `islower`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpryf5sh2n.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n \
    \       {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpc5h_owk3.d(11): Error: `string` is used as a type\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc5h_owk3.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n \
    \       {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzf_js6xj.d(11): Error: `string` is used as a type\\n/tmp/tmpzf_js6xj.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpzf_js6xj.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n \
    \       {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpocxm0i7e.d(11): Error: `string` is used as a type\\n/tmp/tmpocxm0i7e.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpocxm0i7e.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for (auto c : string) \n    {\n        if (c >= 'a' && c <= 'z')\
    \ \n        {\n            result += (char)(c - 'a' + 'A');\n        }\n     \
    \   else if (c >= 'A' && c <= 'Z') \n        {\n            result += (char)(c\
    \ - 'A' + 'a');\n        }\n        else \n        {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpt7qc7fk4.d(12): Error: no identifier for declarator `c`\\n/tmp/tmpt7qc7fk4.d(12):\
    \ Error: expression expected, not `:`\\n/tmp/tmpt7qc7fk4.d(12): Error: found `string`\
    \ when expecting `;` following `for` condition\\n/tmp/tmpt7qc7fk4.d(16): Error:\
    \ C style cast illegal, use `cast(char)(c - \\'a\\' + \\'A\\')`\\n/tmp/tmpt7qc7fk4.d(20):\
    \ Error: C style cast illegal, use `cast(char)(c - \\'A\\' + \\'a\\')`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt7qc7fk4.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        char c =\
    \ string[i];\n        if(c == 'a')\n            c = 'A';\n        else if(c ==\
    \ 'A')\n            c = 'a';\n        else if(c == 'b')\n            c = 'B';\n\
    \        else if(c == 'B')\n            c = 'b';\n        else if(c == 'c')\n\
    \            c = 'C';\n        else if(c == 'C')\n            c = 'c';\n     \
    \   else if(c == 'd')\n            c = 'D';\n        else if(c == 'D')\n     \
    \       c = 'd';\n        else if(c == 'e')\n            c = 'E';\n        else\
    \ if(c == 'E')\n            c = 'e';\n        else if(c == 'f')\n            c\
    \ = 'F';\n        else if(c == 'F')\n            c = 'f';\n        else if(c ==\
    \ 'g')\n            c = 'G';\n        else if(c == 'G')\n            c = 'g';\n\
    \        else if(c == 'h')\n            c = 'H';\n        else if(c == 'H')\n\
    \            c = 'h';\n        else if(c == 'i')\n            c = 'I';\n     \
    \   else if(c == 'I')\n            c = 'i';\n        else if(c == 'j')\n     \
    \       c = 'J';\n        else if(c == 'J')\n            c = 'j';\n        else\
    \ if(c == 'k')\n            c = 'K';\n        else if(c == 'K')\n            c\
    \ = 'k';\n        else if(c == 'l')\n            c = 'L';\n        else if(c ==\
    \ 'L')\n            c = 'l';\n        else if(c == 'm')\n            c = 'M';\n\
    \        else if(c == 'M')\n            c = 'm';\n        else if(c == 'n')\n\
    \            c = 'N';\n        else if(c == 'N')\n            c = 'n';\n     \
    \   else if(c == 'o')\n            c = 'O';\n        else if(c == 'O')\n     \
    \       c = 'o';\n        else if(c == 'p')\n            c = 'P';\n        else\
    \ if(c == 'P')\n            c = 'p';\n        else if(c == 'q')\n            c\
    \ = 'Q';\n        else if(c == 'Q')\n            c = 'q';\n        else if(c ==\
    \ 'r')\n            c = 'R';\n        else if(c == 'R')\n            c = 'r';\n\
    \        else if(c == 's')\n            c = 'S';\n        else if(c == 'S')\n\
    \            c = 's';\n        else if(c == 't')\n            c = 'T';\n     \
    \   else if(c == 'T')\n            c = 't';\n        else if(c == 'u')\n     \
    \       c = 'U';\n        else if(c == 'U')\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpoawznrp7.d(98): Error: found `unittest` instead of statement\\\
    n/tmp/tmpoawznrp7.d(106): Error: found `End of File` when expecting `}` following\
    \ compound statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpoawznrp7.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        char c\
    \ = string[i];\n        if(c == c.toLower())\n        {\n            result +=\
    \ c.toUpper();\n        }\n        else\n        {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkh1tux0e.d(11): Error: `string` is used as a type\\n/tmp/tmpkh1tux0e.d(12):\
    \ Error: no property `length` for type `string`\\n/tmp/tmpkh1tux0e.d(15): Error:\
    \ no property `toLower` for type `char`\\n/tmp/tmpkh1tux0e.d(17): Error: no property\
    \ `toUpper` for type `char`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmpkh1tux0e.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for (auto c : string) \n    {\n        auto lc = tolower(c);\n\
    \        auto uc = toupper(c);\n        result += (uc != lc) ? uc : lc;\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8l5oxrfk.d(12): Error: no identifier for declarator `c`\\n/tmp/tmp8l5oxrfk.d(12):\
    \ Error: expression expected, not `:`\\n/tmp/tmp8l5oxrfk.d(12): Error: found `string`\
    \ when expecting `;` following `for` condition\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp8l5oxrfk.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        char c\
    \ = string[i];\n        if(islower(c))\n        {\n            result += toupper(c);\n\
    \        }\n        else\n        {\n            result += tolower(c);\n     \
    \   }\n    }\n    return result;\n}\n/*\n For a given string, flip lowercase characters\
    \ to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n\
    \    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n  \
    \  for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        if(islower(c))\n        {\n            result += toupper(c);\n      \
    \  }\n        else\n        {\n            result += tolower(c);\n        }\n\
    \    }\n    return result;\n}\n/*\n For a given string, flip lowercase characters\
    \ to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n\
    \    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n  \
    \  for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        if(islower(c))\n        {\n            result += toupper(c);\n      \
    \  }\n        else\n        {\n            result += tolower(c);\n        }\n\
    \    }\n    return result;\n}\n/*\n For a given string, flip lowercase characters\
    \ to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n\
    \    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n  \
    \  for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        if(islower(c))\n        {\n            result += toupper(c);\n      \
    \  }\n        else\n        {\n            result += tolower(c);\n        }\n\
    \    }\n    return result;\n}\n/*\n For a given string, flip lowercase characters\
    \ to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n\
    \    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n  \
    \  for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        if(islower(c))\n        {\n            result += toupper(c);\n      \
    \  }\n        else\n        {\n            result += tolower(c);\n        }\n\
    \    }\n    return result;\n}\n/*\n For a given string, flip lowercase characters\
    \ to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n\
    \    \n*/\nstring flip_case(string \nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpnxuxd4cm.d(125): Error: found `unittest` when expecting `)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnxuxd4cm.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n \
    \       {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxxyf1ijv.d(11): Error: `string` is used as a type\\n/tmp/tmpxxyf1ijv.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpxxyf1ijv.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        char c =\
    \ string[i];\n        if(c == 'A' || c == 'a') \n            c = toupper(c);\n\
    \        else if(c == 'B' || c == 'b')\n            c = tolower(c);\n        else\
    \ if(c == 'C' || c == 'c')\n            c = toupper(c);\n        else if(c ==\
    \ 'D' || c == 'd')\n            c = tolower(c);\n        else if(c == 'E' || c\
    \ == 'e')\n            c = toupper(c);\n        else if(c == 'F' || c == 'f')\n\
    \            c = tolower(c);\n        else if(c == 'G' || c == 'g')\n        \
    \    c = toupper(c);\n        else if(c == 'H' || c == 'h')\n            c = tolower(c);\n\
    \        else if(c == 'I' || c == 'i')\n            c = toupper(c);\n        else\
    \ if(c == 'J' || c == 'j')\n            c = tolower(c);\n        else if(c ==\
    \ 'K' || c == 'k')\n            c = toupper(c);\n        else if(c == 'L' || c\
    \ == 'l')\n            c = tolower(c);\n        else if(c == 'M' || c == 'm')\n\
    \            c = toupper(c);\n        else if(c == 'N' || c == 'n')\n        \
    \    c = tolower(c);\n        else if(c == 'O' || c == 'o')\n            c = toupper(c);\n\
    \        else if(c == 'P' || c == 'p')\n            c = tolower(c);\n        else\
    \ if(c == 'Q' || c == 'q')\n            c = toupper(c);\n        else if(c ==\
    \ 'R' || c == 'r')\n            c = tolower(c);\n        else if(c == 'S' || c\
    \ == 's')\n            c = toupper(c);\n        else if(c == 'T' || c == 't')\n\
    \            c = tolower(c);\n        else if(c == 'U' || c == 'u')\n        \
    \    c = toupper(c);\n        else if(c == 'V' || c == 'v')\n            c = tolower(c);\n\
    \        else if(c == 'W' || c == 'w')\n            c = toupper(c);\n        else\
    \ if(c == 'X' || c == 'x')\n            c = tolower(c);\n        else if(c ==\
    \ 'Y' || c == 'y')\n            c = toupper(c);\n        else if(c == 'Z' || c\
    \ == 'z')\n            c = tolower(c);\n        else \n            c = string[i];\n\
    \        result += c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzd1eagg6.d(11): Error: `string` is used as a type\\n/tmp/tmpzd1eagg6.d(16):\
    \ Error: undefined identifier `toupper`\\n/tmp/tmpzd1eagg6.d(18): Error: undefined\
    \ identifier `tolower`\\n/tmp/tmpzd1eagg6.d(20): Error: undefined identifier `toupper`\\\
    n/tmp/tmpzd1eagg6.d(22): Error: undefined identifier `tolower`\\n/tmp/tmpzd1eagg6.d(24):\
    \ Error: undefined identifier `toupper`\\n/tmp/tmpzd1eagg6.d(26): Error: undefined\
    \ identifier `tolower`\\n/tmp/tmpzd1eagg6.d(28): Error: undefined identifier `toupper`\\\
    n/tmp/tmpzd1eagg6.d(30): Error: undefined identifier `tolower`\\n/tmp/tmpzd1eagg6.d(32):\
    \ Error: undefined identifier `toupper`\\n/tmp/tmpzd1eagg6.d(34): Error: undefined\
    \ identifier `tolower`\\n/tmp/tmpzd1eagg6.d(36): Error: undefined identifier `toupper`\\\
    n/tmp/tmpzd1eagg6.d(38): Error: undefined identifier `tolower`\\n/tmp/tmpzd1eagg6.d(40):\
    \ Error: undefined identifier `toupper`\\n/tmp/tmpzd1eagg6.d(42): Error: undefined\
    \ identifier `tolower`\\n/tmp/tmpzd1eagg6.d(44): Error: undefined identifier `toupper`\\\
    n/tmp/tmpzd1eagg6.d(46): Error: undefined identifier `tolower`\\n/tmp/tmpzd1eagg6.d(48):\
    \ Error: undefined identifier `toupper`\\n/tmp/tmpzd1eagg6.d(50): Error: undefined\
    \ identifier `tolower`\\n/tmp/tmpzd1eagg6.d(52): Error: undefined identifier `toupper`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzd1eagg6.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for (auto c : string) result += toupper(c);\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzw0dvcvy.d(12): Error: no identifier for declarator `c`\\n/tmp/tmpzw0dvcvy.d(12):\
    \ Error: expression expected, not `:`\\n/tmp/tmpzw0dvcvy.d(12): Error: found `string`\
    \ when expecting `;` following `for` condition\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpzw0dvcvy.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n \
    \       {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp42jjno66.d(11): Error: `string` is used as a type\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp42jjno66.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    for(int i = 0;\
    \ i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i] <=\
    \ 'z')\n        {\n            string[i] = string[i] - 32;\n        }\n    }\n\
    \    return string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjpcyhm_l.d(11): Error: no property `length` for type `string`\\\
    n/tmp/tmpjpcyhm_l.d(15): Error: cannot modify `immutable` expression `string[cast(ulong)i]`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjpcyhm_l.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    for(int i = 0;\
    \ i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i] <=\
    \ 'z')\n        {\n            string[i] = string[i] - 32;\n        }\n      \
    \  else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n            string[i]\
    \ = string[i] + 32;\n        }\n    }\n    return string;\n}\n/*\n For a given\
    \ string, flip uppercase characters to lowercase and lowercase to uppercase.\n\
    \    >>> flip_case('hELLO')\n    'Hello'\n    \n*/\nstring flip_case(string string)\
    \ \n{\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'A' && string[i] <= 'Z')\n        {\n            string[i] = string[i] -\
    \ 32;\n        }\n        else if(string[i] >= 'a' && string[i] <= 'z')\n    \
    \    {\n            string[i] = string[i] + 32;\n        }\n    }\n    return\
    \ string;\n}\n/*\n For a given string, flip all characters to lowercase and uppercase\
    \ to uppercase.\n    >>> flip_case('HELLO')\n    'hELLO'\n    \n*/\nstring flip_case(string\
    \ string) \n{\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            string[i] = string[i] -\
    \ 32;\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n    \
    \    {\n            string[i] = string[i] + 32;\n        }\n    }\n    return\
    \ string;\n}\n/*\n For a given string, flip all characters to uppercase and lowercase\
    \ to lowercase.\n    >>> flip_case('hELLO')\n    'HELLO'\n    \n*/\nstring flip_case(string\
    \ string) \n{\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'A' && string[i] <= 'Z')\n        {\n            string[i] = string[i] -\
    \ 32;\n        }\n        else if(string[i] >= 'a' && string[i] <= 'z')\n    \
    \    {\n            string[i] = string[i] + 32;\n        }\n    }\n    return\
    \ string;\n}\n/*\n For a given string, flip all characters to uppercase and uppercase\
    \ to uppercase.\n    >>> flip_case('HELLO')\n    'HELLO'\n    \n*/\nstring flip_case(string\
    \ string) \n{\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'A' && string[i] <= 'Z')\n        {\n            string[i] = string[i] -\
    \ 32;\n        }\n        else if(string\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmplxppkg1v.d(102): Error: found `unittest` when expecting `)`\\\
    n/tmp/tmplxppkg1v.d(110): Error: found `End of File` when expecting `}` following\
    \ compound statement\\n/tmp/tmplxppkg1v.d(110): Error: found `End of File` when\
    \ expecting `}` following compound statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmplxppkg1v.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\n/*\n For a given string, flip uppercase\
    \ characters to lowercase and lowercase to uppercase.\n    >>> flip_case('hELLO')\n\
    \    'Hello'\n    \n*/\nstring flip_case_lower(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n            result +=\
    \ string[i] - 'A' + 'a';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\n/*\n For a given string,\
    \ flip uppercase characters to lowercase and lowercase to uppercase.\n    >>>\
    \ flip_case('hELLO')\n    'Hello'\n    \n*/\nstring flip_case_upper(string string)\
    \ \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n        \
    \    result += string[i] - 'a' + 'A';\n        }\n        else\n        {\n  \
    \          result += string[i];\n        }\n    }\n    return result;\n}\n/*\n\
    \ For a given string, flip all characters to uppercase and lowercase to uppercase.\n\
    \    >>> flip_case('hELLO')\n    'HELLO'\n    \n*/\nstring flip_case_all(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n \
    \           result += string[i] - 'A' + 'a';\n        }\n        else\n      \
    \  {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip all characters to uppercase and lowercase to\
    \ uppercase.\n    >>> flip_case('hELLO')\n    'HELLO'\n    \n*/\nstring flip_case_all_lower(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n \
    \           result += string[i] - 'a' + 'A';\n        }\n        else\n      \
    \  {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip all characters to \nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqcf59cok.d(113): Error: unterminated /* */ comment\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqcf59cok.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for (auto c : string) \n    {\n        if (c >= 'a' && c <= 'z')\
    \ \n        {\n            result += (char)(c - 'a' + 'A');\n        }\n     \
    \   else if (c >= 'A' && c <= 'Z') \n        {\n            result += (char)(c\
    \ - 'A' + 'a');\n        }\n        else \n        {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxl0wh2bz.d(12): Error: no identifier for declarator `c`\\n/tmp/tmpxl0wh2bz.d(12):\
    \ Error: expression expected, not `:`\\n/tmp/tmpxl0wh2bz.d(12): Error: found `string`\
    \ when expecting `;` following `for` condition\\n/tmp/tmpxl0wh2bz.d(16): Error:\
    \ C style cast illegal, use `cast(char)(c - \\'a\\' + \\'A\\')`\\n/tmp/tmpxl0wh2bz.d(20):\
    \ Error: C style cast illegal, use `cast(char)(c - \\'A\\' + \\'a\\')`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxl0wh2bz.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        char c\
    \ = string[i];\n        if(c == 'a')\n        {\n            c = 'A';\n      \
    \  }\n        else if(c == 'A')\n        {\n            c = 'a';\n        }\n\
    \        result += c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmha427lp.d(11): Error: `string` is used as a type\\n/tmp/tmpmha427lp.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpmha427lp.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for (auto c : string)\n    {\n        if (c >= 'a' && c <= 'z')\n\
    \        {\n            result += (char)(c - 'a' + 'A');\n        }\n        else\
    \ if (c >= 'A' && c <= 'Z')\n        {\n            result += (char)(c - 'A' +\
    \ 'a');\n        }\n        else\n        {\n            result += c;\n      \
    \  }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6f1u4ev8.d(12): Error: no identifier for declarator `c`\\n/tmp/tmp6f1u4ev8.d(12):\
    \ Error: expression expected, not `:`\\n/tmp/tmp6f1u4ev8.d(12): Error: found `string`\
    \ when expecting `;` following `for` condition\\n/tmp/tmp6f1u4ev8.d(16): Error:\
    \ C style cast illegal, use `cast(char)(c - \\'a\\' + \\'A\\')`\\n/tmp/tmp6f1u4ev8.d(20):\
    \ Error: C style cast illegal, use `cast(char)(c - \\'A\\' + \\'a\\')`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6f1u4ev8.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n \
    \       {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip uppercase characters to lowercase and lowercase\
    \ to uppercase.\n    >>> flip_case('hELLO')\n    'Hello'\n    \n*/\nstring flip_case(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n \
    \           result += string[i] - 'A' + 'a';\n        }\n        else if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\n/*\n For a given string, flip all characters\
    \ to lowercase.\n    >>> flip_case('hELLO')\n    'hello'\n    \n*/\nstring flip_case(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n \
    \           result += string[i] - 'a' + 'A';\n        }\n        else\n      \
    \  {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip all characters to uppercase.\n    >>> flip_case('hELLO')\n\
    \    'HELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'A' && string[i] <= 'Z')\n        {\n            result += string[i] - 'A'\
    \ + 'a';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\n/*\n For a given string, flip all characters\
    \ to lowercase and uppercase to uppercase.\n    >>> flip_case('hELLO')\n    'HELLO'\n\
    \    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n  \
    \  for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a'\
    \ && string[i] <= 'z\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvd20_yag.d(110): Error: unterminated character constant\\n/tmp/tmpvd20_yag.d(111):\
    \ Error: found `unittest` when expecting `)`\\n/tmp/tmpvd20_yag.d(119): Error:\
    \ found `End of File` when expecting `}` following compound statement\\n/tmp/tmpvd20_yag.d(119):\
    \ Error: found `End of File` when expecting `}` following compound statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvd20_yag.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        char c\
    \ = string[i];\n        if(islower(c))\n        {\n            result += toupper(c);\n\
    \        }\n        else\n        {\n            result += tolower(c);\n     \
    \   }\n    }\n    return result;\n}\n/*\n For a given string, flip lowercase characters\
    \ to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n\
    \    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n  \
    \  for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        if(islower(c))\n        {\n            result += toupper(c);\n      \
    \  }\n        else\n        {\n            result += tolower(c);\n        }\n\
    \    }\n    return result;\n}\n/*\n For a given string, flip lowercase characters\
    \ to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n\
    \    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n  \
    \  for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        if(islower(c))\n        {\n            result += toupper(c);\n      \
    \  }\n        else\n        {\n            result += tolower(c);\n        }\n\
    \    }\n    return result;\n}\n/*\n For a given string, flip lowercase characters\
    \ to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n\
    \    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n  \
    \  for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        if(islower(c))\n        {\n            result += toupper(c);\n      \
    \  }\n        else\n        {\n            result += tolower(c);\n        }\n\
    \    }\n    return result;\n}\n/*\n For a given string, flip lowercase characters\
    \ to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n\
    \    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n  \
    \  for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        if(islower(c))\n        {\n            result += toupper(c);\n      \
    \  }\n        else\n        {\n            result += tolower(c);\n        }\n\
    \    }\n    return result;\n}\n/*\n For a given string, flip lowercase characters\
    \ to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n\
    \    \n*/\nstring flip_case(string \nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvw96xa4w.d(125): Error: found `unittest` when expecting `)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvw96xa4w.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); ++i)\n    {\n        char c\
    \ = string[i];\n        if(c == c.toupper())\n            c = c.tolower();\n \
    \       else\n            c = c.toupper();\n        result += c;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7014x7wg.d(11): Error: `string` is used as a type\\n/tmp/tmp7014x7wg.d(12):\
    \ Error: no property `length` for type `string`\\n/tmp/tmp7014x7wg.d(15): Error:\
    \ no property `toupper` for type `char`\\n/tmp/tmp7014x7wg.d(16): Error: no property\
    \ `tolower` for type `char`\\n/tmp/tmp7014x7wg.d(18): Error: no property `toupper`\
    \ for type `char`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7014x7wg.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        char c\
    \ = string[i];\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c ==\
    \ 'u')\n        {\n            result += toupper(c);\n        }\n        else\n\
    \        {\n            result += tolower(c);\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1qkm6if8.d(11): Error: `string` is used as a type\\n/tmp/tmp1qkm6if8.d(12):\
    \ Error: no property `length` for type `string`\\n/tmp/tmp1qkm6if8.d(17): Error:\
    \ undefined identifier `toupper`\\n/tmp/tmp1qkm6if8.d(21): Error: undefined identifier\
    \ `tolower`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1qkm6if8.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    for(int i = 0;\
    \ i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i] <=\
    \ 'z')\n        {\n            string[i] = string[i] - 32;\n        }\n    }\n\
    \    return string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjl05mmyn.d(11): Error: no property `length` for type `string`\\\
    n/tmp/tmpjl05mmyn.d(15): Error: cannot modify `immutable` expression `string[cast(ulong)i]`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjl05mmyn.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    for(int i = 0;\
    \ i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i] <=\
    \ 'z')\n        {\n            string[i] = string[i] - 32;\n        }\n      \
    \  if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n            string[i]\
    \ = string[i] + 32;\n        }\n    }\n    return string;\n}\nunittest\n{\n  \
    \  alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbsucc77e.d(11): Error: no property `length` for type `string`\\\
    n/tmp/tmpbsucc77e.d(15): Error: cannot modify `immutable` expression `string[cast(ulong)i]`\\\
    n/tmp/tmpbsucc77e.d(19): Error: cannot modify `immutable` expression `string[cast(ulong)i]`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbsucc77e.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); ++i)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7qy5oj93.d(11): Error: `string` is used as a type\\n/tmp/tmp7qy5oj93.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp7qy5oj93.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); ++i)\n    {\n        char c\
    \ = string[i];\n        if(c == 'A' || c == 'a')\n            c = 'a';\n     \
    \   else if(c == 'B' || c == 'b')\n            c = 'b';\n        else if(c ==\
    \ 'C' || c == 'c')\n            c = 'c';\n        else if(c == 'D' || c == 'd')\n\
    \            c = 'd';\n        else if(c == 'E' || c == 'e')\n            c =\
    \ 'e';\n        else if(c == 'F' || c == 'f')\n            c = 'f';\n        else\
    \ if(c == 'G' || c == 'g')\n            c = 'g';\n        else if(c == 'H' ||\
    \ c == 'h')\n            c = 'h';\n        else if(c == 'I' || c == 'i')\n   \
    \         c = 'i';\n        else if(c == 'J' || c == 'j')\n            c = 'j';\n\
    \        else if(c == 'K' || c == 'k')\n            c = 'k';\n        else if(c\
    \ == 'L' || c == 'l')\n            c = 'l';\n        else if(c == 'M' || c ==\
    \ 'm')\n            c = 'm';\n        else if(c == 'N' || c == 'n')\n        \
    \    c = 'n';\n        else if(c == 'O' || c == 'o')\n            c = 'o';\n \
    \       else if(c == 'P' || c == 'p')\n            c = 'p';\n        else if(c\
    \ == 'Q' || c == 'q')\n            c = 'q';\n        else if(c == 'R' || c ==\
    \ 'r')\n            c = 'r';\n        else if(c == 'S' || c == 's')\n        \
    \    c = 's';\n        else if(c == 'T' || c == 't')\n            c = 't';\n \
    \       else if(c == 'U' || c == 'u')\n            c = 'u';\n        else if(c\
    \ == 'V' || c == 'v')\n            c = 'v';\n        else if(c == 'W' || c ==\
    \ 'w')\n            c = 'w';\n        else if(c == 'X' || c == 'x')\n        \
    \    c = 'x';\n        else if(c == 'Y' || c == 'y')\n            c = 'y';\n \
    \       else if(c == 'Z' || c == 'z')\n            c = 'z';\n        else\n  \
    \      {\n            result += c;\n        }\n    }\n    return result;\n}\n\
    /*\n For a given string, flip uppercase characters to lowercase and lowercase\
    \ to uppercase.\n    >>> flip_case('hELLO')\n    'Hello'\n    \n*/\nstring flip_case(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length();\
    \ ++i)\n    {\n        char c = string\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpv47hnl9o.d(86): Error: semicolon expected, not `unittest`\\n/tmp/tmpv47hnl9o.d(86):\
    \ Error: found `unittest` instead of statement\\n/tmp/tmpv47hnl9o.d(94): Error:\
    \ found `End of File` when expecting `}` following compound statement\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv47hnl9o.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        char c\
    \ = string[i];\n        if(c == '_')\n        {\n            c = string[i + 1];\n\
    \            result += c;\n            i++;\n        }\n        else\n       \
    \ {\n            result += toupper(c);\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxhjad8j5.d(11): Error: `string` is used as a type\\n/tmp/tmpxhjad8j5.d(12):\
    \ Error: no property `length` for type `string`\\n/tmp/tmpxhjad8j5.d(23): Error:\
    \ undefined identifier `toupper`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpxhjad8j5.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n \
    \       {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpiee0j_s5.d(11): Error: `string` is used as a type\\n/tmp/tmpiee0j_s5.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpiee0j_s5.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z') {\n            result += string[i] - 'a' + 'A';\n\
    \        }\n        else if(string[i] >= 'A' && string[i] <= 'Z') {\n        \
    \    result += string[i] - 'A' + 'a';\n        }\n        else {\n           \
    \ result += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n  \
    \  assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_3awrytw.d(11): Error: `string` is used as a type\\n/tmp/tmp_3awrytw.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp_3awrytw.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n \
    \       {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpukbrcjos.d(11): Error: `string` is used as a type\\n/tmp/tmpukbrcjos.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpukbrcjos.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    for(int i = 0;\
    \ i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i] <=\
    \ 'z')\n        {\n            string[i] = string[i] - 32;\n        }\n      \
    \  if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n            string[i]\
    \ = string[i] + 32;\n        }\n    }\n    return string;\n}\n/*\n For a given\
    \ string, flip uppercase characters to lowercase and lowercase to uppercase.\n\
    \    >>> flip_case('hELLO')\n    'Hello'\n    \n*/\nstring flip_case_u(string\
    \ string) \n{\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'A' && string[i] <= 'Z')\n        {\n            string[i] = string[i] -\
    \ 32;\n        }\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n\
    \            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n\
    }\n/*\n For a given string, flip all uppercase characters to lowercase and lowercase\
    \ to uppercase.\n    >>> flip_case('HELLO')\n    'hello'\n    \n*/\nstring flip_case_l(string\
    \ string) \n{\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'A' && string[i] <= 'Z')\n        {\n            string[i] = string[i] -\
    \ 32;\n        }\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n\
    \            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n\
    }\n/*\n For a given string, flip all lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    >>> flip_case('hello')\n    'HELLO'\n    \n*/\nstring flip_case_l(string\
    \ string) \n{\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            string[i] = string[i] -\
    \ 32;\n        }\n        if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n\
    \            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n\
    }\n/*\n For a given string, flip all uppercase characters to lowercase and lowercase\
    \ to uppercase.\n    >>> flip_case('HELLO')\n    'HELLO'\n    \n*/\nstring flip_case_l(string\
    \ string) \n{\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'A' && string[i] <= 'Z')\n        {\n            string[i] = string[i] -\
    \ 32;\n        }\n        if(string[i] >= \nunittest\n{\n    alias candidate =\
    \ flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpoppj4sfg.d(102): Error: expression expected, not `unittest`\\\
    n/tmp/tmpoppj4sfg.d(103): Error: found `{` when expecting `)`\\n/tmp/tmpoppj4sfg.d(110):\
    \ Error: found `End of File` when expecting `}` following compound statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpoppj4sfg.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        char c =\
    \ string[i];\n        if(c == c.toLower())\n        {\n            result += c.toUpper();\n\
    \        }\n        else\n        {\n            result += c;\n        }\n   \
    \ }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_e7fo_lr.d(11): Error: `string` is used as a type\\n/tmp/tmp_e7fo_lr.d(15):\
    \ Error: no property `toLower` for type `char`\\n/tmp/tmp_e7fo_lr.d(17): Error:\
    \ no property `toUpper` for type `char`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmp_e7fo_lr.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\n/*\n For a given string, flip lowercase\
    \ characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\n/*\n For a given string, flip lowercase\
    \ characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\n/*\n For a given string, flip lowercase\
    \ characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\n/*\n For a given string, flip lowercase\
    \ characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\n/*\n For a given string, flip lowercase\
    \ characters to upper\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2_lee0bf.d(113): Error: unterminated /* */ comment\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2_lee0bf.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9i8c25qs.d(11): Error: `string` is used as a type\\n/tmp/tmp9i8c25qs.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp9i8c25qs.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n \
    \       {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpumm4t6k4.d(11): Error: `string` is used as a type\\n/tmp/tmpumm4t6k4.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpumm4t6k4.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        char c\
    \ = string[i];\n        if(c == 'a')\n            c = 'A';\n        if(c == 'A')\n\
    \            c = 'a';\n        result += c;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpv98xkmw9.d(11): Error: `string` is used as a type\\n/tmp/tmpv98xkmw9.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpv98xkmw9.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        char c\
    \ = string[i];\n        if(c == c.toLower())\n        {\n            result +=\
    \ c.toUpper();\n        }\n        else\n        {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp82g79nkg.d(11): Error: `string` is used as a type\\n/tmp/tmp82g79nkg.d(12):\
    \ Error: no property `length` for type `string`\\n/tmp/tmp82g79nkg.d(15): Error:\
    \ no property `toLower` for type `char`\\n/tmp/tmp82g79nkg.d(17): Error: no property\
    \ `toUpper` for type `char`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmp82g79nkg.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n \
    \       {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpizwei4th.d(11): Error: `string` is used as a type\\n/tmp/tmpizwei4th.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpizwei4th.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n \
    \       {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9resj59c.d(11): Error: `string` is used as a type\\n/tmp/tmp9resj59c.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp9resj59c.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        char c\
    \ = string[i];\n        if(c == 'a')\n            c = 'A';\n        else if(c\
    \ == 'A')\n            c = 'a';\n        result += c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgu7w8uk9.d(11): Error: `string` is used as a type\\n/tmp/tmpgu7w8uk9.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpgu7w8uk9.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    for(int i = 0;\
    \ i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i] <=\
    \ 'z')\n        {\n            string[i] = string[i] - 32;\n        }\n    }\n\
    \    return string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptbc4awda.d(11): Error: no property `length` for type `string`\\\
    n/tmp/tmptbc4awda.d(15): Error: cannot modify `immutable` expression `string[cast(ulong)i]`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptbc4awda.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp98yy0873.d(11): Error: `string` is used as a type\\n/tmp/tmp98yy0873.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp98yy0873.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9q3jvxpe.d(11): Error: `string` is used as a type\\n/tmp/tmp9q3jvxpe.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp9q3jvxpe.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n \
    \       {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgljppgnw.d(11): Error: `string` is used as a type\\n/tmp/tmpgljppgnw.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpgljppgnw.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        char c\
    \ = string[i];\n        if(c == 'a')\n            c = 'A';\n        if(c == 'A')\n\
    \            c = 'a';\n        result += c;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfwntc876.d(11): Error: `string` is used as a type\\n/tmp/tmpfwntc876.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpfwntc876.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n \
    \       {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=string,c++,algorithm |>\n<| c |>\nI like your solution,\
    \ however it only works for ASCII characters. I added a solution that works for\
    \ any character set and also handles non-ASCII characters.\n<|/ c |>\n<| a dscore=2\
    \ |>\n<code>\n#include <iostream>\n#include <string>\n#include <algorithm>\nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprse8naoe.d(29): Error: declaration expected, not `<`\\n/tmp/tmprse8naoe.d(43):\
    \ Error: declaration expected, not `assert`\\n/tmp/tmprse8naoe.d(44): Error: declaration\
    \ expected, not `assert`\\n/tmp/tmprse8naoe.d(45): Error: declaration expected,\
    \ not `assert`\\n/tmp/tmprse8naoe.d(46): Error: unrecognized declaration\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprse8naoe.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpt8vck104.d(11): Error: `string` is used as a type\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt8vck104.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        char c\
    \ = string[i];\n        if(c == ' ')\n        {\n            result += c;\n  \
    \      }\n        else if(c == 'A')\n        {\n            result += 'a';\n \
    \       }\n        else if(c == 'a')\n        {\n            result += 'A';\n\
    \        }\n        else\n        {\n            result += c;\n        }\n   \
    \ }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4s655pjs.d(11): Error: `string` is used as a type\\n/tmp/tmp4s655pjs.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp4s655pjs.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        char c\
    \ = string[i];\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c ==\
    \ 'u')\n        {\n            result += toupper(c);\n        }\n        else\n\
    \        {\n            result += tolower(c);\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvmyweack.d(11): Error: `string` is used as a type\\n/tmp/tmpvmyweack.d(12):\
    \ Error: no property `length` for type `string`\\n/tmp/tmpvmyweack.d(17): Error:\
    \ undefined identifier `toupper`\\n/tmp/tmpvmyweack.d(21): Error: undefined identifier\
    \ `tolower`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvmyweack.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for (auto c : string) \n    {\n        if (c >= 'a' && c <= 'z')\
    \ \n        {\n            result += (char)(c - 'a' + 'A');\n        }\n     \
    \   else if (c >= 'A' && c <= 'Z') \n        {\n            result += (char)(c\
    \ - 'A' + 'a');\n        }\n        else \n        {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpl_nm3rxs.d(12): Error: no identifier for declarator `c`\\n/tmp/tmpl_nm3rxs.d(12):\
    \ Error: expression expected, not `:`\\n/tmp/tmpl_nm3rxs.d(12): Error: found `string`\
    \ when expecting `;` following `for` condition\\n/tmp/tmpl_nm3rxs.d(16): Error:\
    \ C style cast illegal, use `cast(char)(c - \\'a\\' + \\'A\\')`\\n/tmp/tmpl_nm3rxs.d(20):\
    \ Error: C style cast illegal, use `cast(char)(c - \\'A\\' + \\'a\\')`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl_nm3rxs.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppwii7g8j.d(11): Error: `string` is used as a type\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppwii7g8j.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    for(int i = 0;\
    \ i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i] <=\
    \ 'z')\n        {\n            string[i] = string[i] - 32;\n        }\n      \
    \  if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n            string[i]\
    \ = string[i] + 32;\n        }\n    }\n    return string;\n}\nunittest\n{\n  \
    \  alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpyoq_uhcs.d(11): Error: no property `length` for type `string`\\\
    n/tmp/tmpyoq_uhcs.d(15): Error: cannot modify `immutable` expression `string[cast(ulong)i]`\\\
    n/tmp/tmpyoq_uhcs.d(19): Error: cannot modify `immutable` expression `string[cast(ulong)i]`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyoq_uhcs.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n \
    \       {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppdty1r1v.d(11): Error: `string` is used as a type\\n/tmp/tmppdty1r1v.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmppdty1r1v.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n \
    \       {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=string,c++,algorithm |>\n<| c |>\nThis code doesn't work.\
    \ Try it with `\"A\"` and `\"a\"`.\n<|/ c |>\n<| c |>\nYes, it does. I tested\
    \ it before posting.\n<|/ c |>\n<| c |>\nIt doesn't work if you try it with `\"\
    A\"` and `\"a\"`.\n<|/ c |>\n<| c |>\nYes, it does. I tested it before posting.\n\
    <|/ c |>\n<| c |>\nIt doesn't work if you try it with `\"A\"` and `\"a\"`.\n<|/\
    \ c |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n#include <string>\n#include\
    \ <algorithm>\nusing namespace std;\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjfms55he.d(29): Error: declaration expected, not `<`\\n/tmp/tmpjfms55he.d(32):\
    \ Error: unterminated character constant\\n/tmp/tmpjfms55he.d(38): Error: unterminated\
    \ character constant\\n/tmp/tmpjfms55he.d(44): Error: unterminated character constant\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjfms55he.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); ++i)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp43cma9jy.d(11): Error: `string` is used as a type\\n/tmp/tmp43cma9jy.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp43cma9jy.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        char c =\
    \ string[i];\n        if(c == 'a')\n            c = 'A';\n        else if(c ==\
    \ 'A')\n            c = 'a';\n        else if(c == 'e')\n            c = 'E';\n\
    \        else if(c == 'E')\n            c = 'e';\n        else if(c == 'i')\n\
    \            c = 'I';\n        else if(c == 'I')\n            c = 'i';\n     \
    \   else if(c == 'o')\n            c = 'O';\n        else if(c == 'O')\n     \
    \       c = 'o';\n        else if(c == 'u')\n            c = 'U';\n        else\
    \ if(c == 'U')\n            c = 'u';\n        else\n            c = toupper(c);\n\
    \        result += c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpah28x8d7.d(11): Error: `string` is used as a type\\n/tmp/tmpah28x8d7.d(36):\
    \ Error: undefined identifier `toupper`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpah28x8d7.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n \
    \       {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n Given a string, return a new string where all characters have been converted\
    \ to lowercase and all characters have been converted to uppercase.\n    >>> flip_case(\"\
    hello\")\n    'HELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\n/*\n Given a string, return a new string where all characters\
    \ have been converted to lowercase and all characters have been converted to uppercase.\n\
    \    >>> flip_case(\"hello\")\n    'HELLO'\n    \n*/\nstring flip_case(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n \
    \           result += string[i] - 'a' + 'A';\n        }\n        else if(string[i]\
    \ >= 'A' && string[i] <= 'Z')\n        {\n            result += string[i] - 'A'\
    \ + 'a';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\n/*\n Given a string, return a new string\
    \ where all characters have been converted to lowercase and all characters have\
    \ been converted to uppercase.\n    >>> flip_case(\"hello\")\n    'HELLO'\n  \
    \  \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n          \
    \  result += string[i] - 'A' + 'a';\n        }\n        else\n        {\n    \
    \        result += string[i];\n        }\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpg0sm25pw.d(104): Error: found `unittest` instead of statement\\\
    n/tmp/tmpg0sm25pw.d(112): Error: found `End of File` when expecting `}` following\
    \ compound statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg0sm25pw.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++) {\n        char c = string[i];\n\
    \        if(c == 'a' || c == 'A') {\n            c = 'A';\n        }\n       \
    \ else if(c == 'b' || c == 'B') {\n            c = 'B';\n        }\n        else\
    \ if(c == 'c' || c == 'C') {\n            c = 'C';\n        }\n        else if(c\
    \ == 'd' || c == 'D') {\n            c = 'D';\n        }\n        else if(c ==\
    \ 'e' || c == 'E') {\n            c = 'E';\n        }\n        else if(c == 'f'\
    \ || c == 'F') {\n            c = 'F';\n        }\n        else if(c == 'g' ||\
    \ c == 'G') {\n            c = 'G';\n        }\n        else if(c == 'h' || c\
    \ == 'H') {\n            c = 'H';\n        }\n        else if(c == 'i' || c ==\
    \ 'I') {\n            c = 'I';\n        }\n        else if(c == 'j' || c == 'J')\
    \ {\n            c = 'J';\n        }\n        else if(c == 'k' || c == 'K') {\n\
    \            c = 'K';\n        }\n        else if(c == 'l' || c == 'L') {\n  \
    \          c = 'L';\n        }\n        else if(c == 'm' || c == 'M') {\n    \
    \        c = 'M';\n        }\n        else if(c == 'n' || c == 'N') {\n      \
    \      c = 'N';\n        }\n        else if(c == 'o' || c == 'O') {\n        \
    \    c = 'O';\n        }\n        else if(c == 'p' || c == 'P') {\n          \
    \  c = 'P';\n        }\n        else if(c == 'q' || c == 'Q') {\n            c\
    \ = 'Q';\n        }\n        else if(c == 'r' || c == 'R') {\n            c =\
    \ 'R';\n        }\n        else if(c == 's' || c == 'S') {\n            c = 'S';\n\
    \        }\n        else if(c == 't' || c == 'T') {\n            c = 'T';\n  \
    \      }\n        else if(c == 'u' || c == 'U') {\n            c = 'U';\n    \
    \    }\n        else if(c == 'v' || c == 'V') {\n            c = 'V';\n      \
    \  }\n        else if(c == 'w' || c == 'W') {\n            c = 'W';\n        }\n\
    \        else if(c == 'x' || c == 'X') {\n            c = 'X';\n        }\n  \
    \      else if(c == 'y' || c == 'Y') {\n            c = 'Y';\n        }\n    \
    \    else if(c == 'z' || c == 'Z') {\n            c = 'Z';\n        }\n      \
    \  result += c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphos3g2rb.d(11): Error: `string` is used as a type\\n/tmp/tmphos3g2rb.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmphos3g2rb.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        char c =\
    \ string[i];\n        if(c == ' ' || c == '_')\n        {\n            result\
    \ += c;\n        }\n        else\n        {\n            result += toupper(c);\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpd6jn89hr.d(11): Error: `string` is used as a type\\n/tmp/tmpd6jn89hr.d(21):\
    \ Error: undefined identifier `toupper`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpd6jn89hr.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); ++i)\n    {\n        char c\
    \ = string[i];\n        if(c == 'a')\n            c = 'A';\n        else if(c\
    \ == 'A')\n            c = 'a';\n        else if(c == 'e')\n            c = 'E';\n\
    \        else if(c == 'E')\n            c = 'e';\n        else if(c == 'i')\n\
    \            c = 'I';\n        else if(c == 'I')\n            c = 'i';\n     \
    \   else if(c == 'o')\n            c = 'O';\n        else if(c == 'O')\n     \
    \       c = 'o';\n        else if(c == 'u')\n            c = 'U';\n        else\
    \ if(c == 'U')\n            c = 'u';\n        else if(c == 'y')\n            c\
    \ = 'Y';\n        else if(c == 'Y')\n            c = 'y';\n        else\n    \
    \    {\n            result += c;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp27nwms1h.d(11): Error: `string` is used as a type\\n/tmp/tmp27nwms1h.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp27nwms1h.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        char c\
    \ = string[i];\n        if(c == 'a')\n            c = 'A';\n        else if(c\
    \ == 'A')\n            c = 'a';\n        else if(c == 'e')\n            c = 'E';\n\
    \        else if(c == 'E')\n            c = 'e';\n        else if(c == 'i')\n\
    \            c = 'I';\n        else if(c == 'I')\n            c = 'i';\n     \
    \   else if(c == 'o')\n            c = 'O';\n        else if(c == 'O')\n     \
    \       c = 'o';\n        else if(c == 'u')\n            c = 'U';\n        else\
    \ if(c == 'U')\n            c = 'u';\n        else if(c == 'y')\n            c\
    \ = 'Y';\n        else if(c == 'Y')\n            c = 'y';\n        else\n    \
    \        c = toupper(c);\n        result += c;\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") ==\
    \ \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5pdfpsto.d(11): Error: `string` is used as a type\\n/tmp/tmp5pdfpsto.d(12):\
    \ Error: no property `length` for type `string`\\n/tmp/tmp5pdfpsto.d(40): Error:\
    \ undefined identifier `toupper`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmp5pdfpsto.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        char c\
    \ = string[i];\n        if(c == 'a' || c == 'A')\n            c = 'A';\n     \
    \   else if(c == 'b' || c == 'B')\n            c = 'B';\n        else if(c ==\
    \ 'c' || c == 'C')\n            c = 'C';\n        else if(c == 'd' || c == 'D')\n\
    \            c = 'D';\n        else if(c == 'e' || c == 'E')\n            c =\
    \ 'E';\n        else if(c == 'f' || c == 'F')\n            c = 'F';\n        else\
    \ if(c == 'g' || c == 'G')\n            c = 'G';\n        else if(c == 'h' ||\
    \ c == 'H')\n            c = 'H';\n        else if(c == 'i' || c == 'I')\n   \
    \         c = 'I';\n        else if(c == 'j' || c == 'J')\n            c = 'J';\n\
    \        else if(c == 'k' || c == 'K')\n            c = 'K';\n        else if(c\
    \ == 'l' || c == 'L')\n            c = 'L';\n        else if(c == 'm' || c ==\
    \ 'M')\n            c = 'M';\n        else if(c == 'n' || c == 'N')\n        \
    \    c = 'N';\n        else if(c == 'o' || c == 'O')\n            c = 'O';\n \
    \       else if(c == 'p' || c == 'P')\n            c = 'P';\n        else if(c\
    \ == 'q' || c == 'Q')\n            c = 'Q';\n        else if(c == 'r' || c ==\
    \ 'R')\n            c = 'R';\n        else if(c == 's' || c == 'S')\n        \
    \    c = 'S';\n        else if(c == 't' || c == 'T')\n            c = 'T';\n \
    \       else if(c == 'u' || c == 'U')\n            c = 'U';\n        else if(c\
    \ == 'v' || c == 'V')\n            c = 'V';\n        else if(c == 'w' || c ==\
    \ 'W')\n            c = 'W';\n        else if(c == 'x' || c == 'X')\n        \
    \    c = 'X';\n        else if(c == 'y' || c == 'Y')\n            c = 'Y';\n \
    \       else if(c == 'z' || c == 'Z')\n            c = 'Z';\n        else\n  \
    \          c = toupper(c);\n        result += c;\n    }\n    return result;\n\
    }\n/*\n For a given string, flip uppercase characters to lowercase and lowercase\
    \ to uppercase.\n    >>> flip_case('hELLO')\n    'Hello'\n    \n*/\nstring flip_case(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string\nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpoet3os_8.d(83): Error: found `unittest` when expecting `;` following\
    \ `for` condition\\n/tmp/tmpoet3os_8.d(91): Error: found `void` when expecting\
    \ `)`\\n/tmp/tmpoet3os_8.d(91): Error: found `{` when expecting `;` following\
    \ statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpoet3os_8.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n \
    \       {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip uppercase characters to lowercase and lowercase\
    \ to uppercase.\n    >>> flip_case('hELLO')\n    'Hello'\n    \n*/\nstring flip_case(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n \
    \           result += string[i] - 'A' + 'a';\n        }\n        else if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\n/*\n For a given string, flip all characters\
    \ to lowercase.\n    >>> flip_case('hELLO')\n    'hello'\n    \n*/\nstring flip_case(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n \
    \           result += string[i] - 'a' + 'A';\n        }\n        else\n      \
    \  {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip all characters to uppercase.\n    >>> flip_case('hELLO')\n\
    \    'HELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'A' && string[i] <= 'Z')\n        {\n            result += string[i] - 'A'\
    \ + 'a';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\n/*\n For a given string, flip all characters\
    \ to lowercase and uppercase to uppercase.\n    >>> flip_case('hELLO')\n    'hello'\n\
    \    \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n  \
    \  for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a'\
    \ && string[i] <= 'z')\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp59svsny6.d(111): Error: found `unittest` instead of statement\\\
    n/tmp/tmp59svsny6.d(119): Error: found `End of File` when expecting `}` following\
    \ compound statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp59svsny6.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n\tauto it = string.begin();\n\
    \tauto end = string.end();\n\tfor(;it!=end;++it)\n\t{\n\t\tswitch(*it)\n\t\t{\n\
    \t\t\tcase 'a':\n\t\t\t\t*it = 'A';\n\t\t\t\tbreak;\n\t\t\tcase 'b':\n\t\t\t\t\
    *it = 'B';\n\t\t\t\tbreak;\n\t\t\tcase 'c':\n\t\t\t\t*it = 'C';\n\t\t\t\tbreak;\n\
    \t\t\tcase 'd':\n\t\t\t\t*it = 'D';\n\t\t\t\tbreak;\n\t\t\tcase 'e':\n\t\t\t\t\
    *it = 'E';\n\t\t\t\tbreak;\n\t\t\tcase 'f':\n\t\t\t\t*it = 'F';\n\t\t\t\tbreak;\n\
    \t\t\tcase 'g':\n\t\t\t\t*it = 'G';\n\t\t\t\tbreak;\n\t\t\tcase 'h':\n\t\t\t\t\
    *it = 'H';\n\t\t\t\tbreak;\n\t\t\tcase 'i':\n\t\t\t\t*it = 'I';\n\t\t\t\tbreak;\n\
    \t\t\tcase 'j':\n\t\t\t\t*it = 'J';\n\t\t\t\tbreak;\n\t\t\tcase 'k':\n\t\t\t\t\
    *it = 'K';\n\t\t\t\tbreak;\n\t\t\tcase 'l':\n\t\t\t\t*it = 'L';\n\t\t\t\tbreak;\n\
    \t\t\tcase 'm':\n\t\t\t\t*it = 'M';\n\t\t\t\tbreak;\n\t\t\tcase 'n':\n\t\t\t\t\
    *it = 'N';\n\t\t\t\tbreak;\n\t\t\tcase 'o':\n\t\t\t\t*it = 'O';\n\t\t\t\tbreak;\n\
    \t\t\tcase 'p':\n\t\t\t\t*it = 'P';\n\t\t\t\tbreak;\n\t\t\tcase 'q':\n\t\t\t\t\
    *it = 'Q';\n\t\t\t\tbreak;\n\t\t\tcase 'r':\n\t\t\t\t*it = 'R';\n\t\t\t\tbreak;\n\
    \t\t\tcase 's':\n\t\t\t\t*it = 'S';\n\t\t\t\tbreak;\n\t\t\tcase 't':\n\t\t\t\t\
    *it = 'T';\n\t\t\t\tbreak;\n\t\t\tcase 'u':\n\t\t\t\t*it = 'U';\n\t\t\t\tbreak;\n\
    \t\t\tcase 'v':\n\t\t\t\t*it = 'V';\n\t\t\t\tbreak;\n\t\t\tcase 'w':\n\t\t\t\t\
    *it = 'W';\n\t\t\t\tbreak;\n\t\t\tcase 'x':\n\t\t\t\t*it = 'X';\n\t\t\t\tbreak;\n\
    \t\t\tcase 'y':\n\t\t\t\t*it = 'Y';\n\t\t\t\tbreak;\n\t\t\tcase 'z':\n\t\t\t\t\
    *it = 'Z';\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\treturn\
    \ string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjbfvb0kv.d(11): Error: no property `begin` for type `string`\\\
    n/tmp/tmpjbfvb0kv.d(12): Error: no property `end` for type `string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjbfvb0kv.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n \
    \       {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpg3cwcgws.d(11): Error: `string` is used as a type\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg3cwcgws.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\n/*\n For a given string, flip lowercase\
    \ characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\n/*\n For a given string, flip lowercase\
    \ characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\n/*\n For a given string, flip lowercase\
    \ characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\n/*\n For a given string, flip lowercase\
    \ characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\n/*\n For a given string, flip lowercase\
    \ characters to upper\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2s4g3nwk.d(113): Error: unterminated /* */ comment\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2s4g3nwk.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        char c =\
    \ string[i];\n        if(c == 'a')\n            c = 'A';\n        else if(c ==\
    \ 'A')\n            c = 'a';\n        result += c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpe22nhem6.d(11): Error: `string` is used as a type\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpe22nhem6.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n \
    \       {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n Given a string, flip uppercase characters to lowercase and lowercase to\
    \ uppercase.\n    >>> flip_case('hELLO')\n    'Hello'\n    \n*/\nstring flip_case(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n \
    \           result += string[i] - 'A' + 'a';\n        }\n        else if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\n/*\n Given a string, flip uppercase\
    \ characters to lowercase and lowercase to uppercase.\n    >>> flip_case('hELLO')\n\
    \    'Hello'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'A' && string[i] <= 'Z')\n        {\n            result += string[i] - 'A'\
    \ + 'a';\n        }\n        else if(string[i] >= 'a' && string[i] <= 'z')\n \
    \       {\n            result += string[i] - 'a' + 'A';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n Given a string, flip uppercase characters to lowercase and lowercase to\
    \ uppercase.\n    >>> flip_case('hELLO')\n    'Hello'\n    \n*/\nstring flip_case(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n \
    \           result += string[i] - 'A' + 'a';\n        }\n        else if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\n/*\n\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9uq9vizg.d(107): Error: unterminated /* */ comment\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9uq9vizg.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); ++i)\n    {\n        char c\
    \ = string[i];\n        if(islower(c))\n        {\n            c = toupper(c);\n\
    \        }\n        if(isupper(c))\n        {\n            c = tolower(c);\n \
    \       }\n        result += c;\n    }\n    return result;\n}\nunittest\n{\n \
    \   alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n   \
    \ assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent\
    \ delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    );\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpq8uk7oqb.d(11): Error: `string` is used as a type\\n/tmp/tmpq8uk7oqb.d(12):\
    \ Error: no property `length` for type `string`\\n/tmp/tmpq8uk7oqb.d(15): Error:\
    \ undefined identifier `islower`\\n/tmp/tmpq8uk7oqb.d(17): Error: undefined identifier\
    \ `toupper`\\n/tmp/tmpq8uk7oqb.d(19): Error: undefined identifier `isupper`\\\
    n/tmp/tmpq8uk7oqb.d(21): Error: undefined identifier `tolower`\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq8uk7oqb.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpasz_86l_.d(11): Error: `string` is used as a type\\n/tmp/tmpasz_86l_.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpasz_86l_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7c_atowb.d(11): Error: `string` is used as a type\\n/tmp/tmp7c_atowb.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp7c_atowb.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); ++i)\n    {\n        char c\
    \ = string[i];\n        if(c == 'A')\n            c = 'a';\n        else if(c\
    \ == 'a')\n            c = 'A';\n        else if(c == 'B')\n            c = 'b';\n\
    \        else if(c == 'b')\n            c = 'B';\n        else if(c == 'C')\n\
    \            c = 'c';\n        else if(c == 'c')\n            c = 'C';\n     \
    \   else if(c == 'D')\n            c = 'd';\n        else if(c == 'd')\n     \
    \       c = 'D';\n        else if(c == 'E')\n            c = 'e';\n        else\
    \ if(c == 'e')\n            c = 'E';\n        else if(c == 'F')\n            c\
    \ = 'f';\n        else if(c == 'f')\n            c = 'F';\n        else if(c ==\
    \ 'G')\n            c = 'g';\n        else if(c == 'g')\n            c = 'G';\n\
    \        else if(c == 'H')\n            c = 'h';\n        else if(c == 'h')\n\
    \            c = 'H';\n        else if(c == 'I')\n            c = 'i';\n     \
    \   else if(c == 'i')\n            c = 'I';\n        else if(c == 'J')\n     \
    \       c = 'j';\n        else if(c == 'j')\n            c = 'J';\n        else\
    \ if(c == 'K')\n            c = 'k';\n        else if(c == 'k')\n            c\
    \ = 'K';\n        else if(c == 'L')\n            c = 'l';\n        else if(c ==\
    \ 'l')\n            c = 'L';\n        else if(c == 'M')\n            c = 'm';\n\
    \        else if(c == 'm')\n            c = 'M';\n        else if(c == 'N')\n\
    \            c = 'n';\n        else if(c == 'n')\n            c = 'N';\n     \
    \   else if(c == 'O')\n            c = 'o';\n        else if(c == 'o')\n     \
    \       c = 'O';\n        else if(c == 'P')\n            c = 'p';\n        else\
    \ if(c == 'p')\n            c = 'P';\n        else if(c == 'Q')\n            c\
    \ = 'q';\n        else if(c == 'q')\n            c = 'Q';\n        else if(c ==\
    \ 'R')\n            c = 'r';\n        else if(c == 'r')\n            c = 'R';\n\
    \        else if(c == 'S')\n            c = 's';\n        else if(c == 's')\n\
    \            c = 'S';\n        else if(c == 'T')\n            c = 't';\n     \
    \   else if(c == 't')\n            c = 'T';\n        else if(c == 'U')\n     \
    \       c = 'u';\n        else if(c == 'u\nunittest\n{\n    alias candidate =\
    \ flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpcagye7zx.d(97): Error: unterminated character constant\\n/tmp/tmpcagye7zx.d(98):\
    \ Error: found `unittest` when expecting `)`\\n/tmp/tmpcagye7zx.d(106): Error:\
    \ found `End of File` when expecting `}` following compound statement\\n/tmp/tmpcagye7zx.d(106):\
    \ Error: found `End of File` when expecting `}` following compound statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcagye7zx.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmph5m71tx8.d(11): Error: `string` is used as a type\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph5m71tx8.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); ++i)\n    {\n        char c\
    \ = string[i];\n        if(c == toupper(c))\n        {\n            result +=\
    \ tolower(c);\n        }\n        else\n        {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\n</code>\n<|/ a |>\n<| a tags=string,c++\
    \ |>\n<code>\n#include <iostream>\n#include <string>\n#include <algorithm>\nusing\
    \ namespace std;\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwsu5ca5c.d(26): Error: declaration expected, not `<`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwsu5ca5c.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        char c\
    \ = string[i];\n        if(c == 'a')\n            c = 'A';\n        if(c == 'b')\n\
    \            c = 'B';\n        if(c == 'c')\n            c = 'C';\n        if(c\
    \ == 'd')\n            c = 'D';\n        if(c == 'e')\n            c = 'E';\n\
    \        if(c == 'f')\n            c = 'F';\n        if(c == 'g')\n          \
    \  c = 'G';\n        if(c == 'h')\n            c = 'H';\n        if(c == 'i')\n\
    \            c = 'I';\n        if(c == 'j')\n            c = 'J';\n        if(c\
    \ == 'k')\n            c = 'K';\n        if(c == 'l')\n            c = 'L';\n\
    \        if(c == 'm')\n            c = 'M';\n        if(c == 'n')\n          \
    \  c = 'N';\n        if(c == 'o')\n            c = 'O';\n        if(c == 'p')\n\
    \            c = 'P';\n        if(c == 'q')\n            c = 'Q';\n        if(c\
    \ == 'r')\n            c = 'R';\n        if(c == 's')\n            c = 'S';\n\
    \        if(c == 't')\n            c = 'T';\n        if(c == 'u')\n          \
    \  c = 'U';\n        if(c == 'v')\n            c = 'V';\n        if(c == 'w')\n\
    \            c = 'W';\n        if(c == 'x')\n            c = 'X';\n        if(c\
    \ == 'y')\n            c = 'Y';\n        if(c == 'z')\n            c = 'Z';\n\
    \        if(c == 'A')\n            c = 'a';\n        if(c == 'B')\n          \
    \  c = 'b';\n        if(c == 'C')\n            c = 'c';\n        if(c == 'D')\n\
    \            c = 'd';\n        if(c == 'E')\n            c = 'e';\n        if(c\
    \ == 'F')\n            c = 'f';\n        if(c == 'G')\n            c = 'g';\n\
    \        if(c == 'H')\n            c = 'h';\n        if(c == 'I')\n          \
    \  c = 'i';\n        if(c == 'J')\n            c = 'j';\n        if(c == 'K')\n\
    \            c = 'k';\n        if(c == 'L')\n            c = 'l';\n        if(c\
    \ == 'M')\n            c = 'm';\n        if(c == 'N')\n            c = 'n';\n\
    \        if(c == 'O')\n            c = 'o';\n        if(c == 'P')\n          \
    \  c = 'p';\n        if(c == 'Q')\n            c = 'q';\n        if(c == 'R')\n\
    \            c = 'r';\n        if(c == 'S')\n            c = 's';\n        if(c\
    \ == 'T')\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmph0ma4foy.d(106): Error: found `unittest` instead of statement\\\
    n/tmp/tmph0ma4foy.d(114): Error: found `End of File` when expecting `}` following\
    \ compound statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph0ma4foy.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpclui3c_m.d(11): Error: `string` is used as a type\\n/tmp/tmpclui3c_m.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpclui3c_m.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxwesiqcf.d(11): Error: `string` is used as a type\\n/tmp/tmpxwesiqcf.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpxwesiqcf.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++) {\n        char c = string[i];\n\
    \        if(c == ' ' || c == '\\t' || c == '\\n' || c == '\\r' || c == '\\v' ||\
    \ c == '\\f' || c == '\\a') {\n            result += c;\n        } else {\n  \
    \          result += toupper(c);\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpstt8v1z9.d(11): Error: `string` is used as a type\\n/tmp/tmpstt8v1z9.d(12):\
    \ Error: no property `length` for type `string`\\n/tmp/tmpstt8v1z9.d(17): Error:\
    \ undefined identifier `toupper`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpstt8v1z9.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        char c\
    \ = string[i];\n        if(c == 'a')\n            c = 'A';\n        if(c == 'A')\n\
    \            c = 'a';\n        result += c;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpoud0fv6e.d(11): Error: `string` is used as a type\\n/tmp/tmpoud0fv6e.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpoud0fv6e.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        char c\
    \ = string[i];\n        if(c == 'A')\n        {\n            c = 'a';\n      \
    \  }\n        else if(c == 'a')\n        {\n            c = 'A';\n        }\n\
    \        else if(c == 'B')\n        {\n            c = 'b';\n        }\n     \
    \   else if(c == 'b')\n        {\n            c = 'B';\n        }\n        else\
    \ if(c == 'C')\n        {\n            c = 'c';\n        }\n        else if(c\
    \ == 'c')\n        {\n            c = 'C';\n        }\n        else if(c == 'D')\n\
    \        {\n            c = 'd';\n        }\n        else if(c == 'd')\n     \
    \   {\n            c = 'D';\n        }\n        else if(c == 'E')\n        {\n\
    \            c = 'e';\n        }\n        else if(c == 'e')\n        {\n     \
    \       c = 'E';\n        }\n        else if(c == 'F')\n        {\n          \
    \  c = 'f';\n        }\n        else if(c == 'f')\n        {\n            c =\
    \ 'F';\n        }\n        else if(c == 'G')\n        {\n            c = 'g';\n\
    \        }\n        else if(c == 'g')\n        {\n            c = 'G';\n     \
    \   }\n        else if(c == 'H')\n        {\n            c = 'h';\n        }\n\
    \        else if(c == 'h')\n        {\n            c = 'H';\n        }\n     \
    \   else if(c == 'I')\n        {\n            c = 'i';\n        }\n        else\
    \ if(c == 'i')\n        {\n            c = 'I';\n        }\n        else if(c\
    \ == 'J')\n        {\n            c = 'j';\n        }\n        else if(c == 'j')\n\
    \        {\n            c = 'J';\n        }\n        else if(c == 'K')\n     \
    \   {\n            c = 'k';\n        }\n        else if(c == 'k')\n        {\n\
    \            c = 'K';\n        }\n        else if(c == 'L')\n        {\n     \
    \       c = 'l';\n        }\n        else if(c == 'l')\n        {\n          \
    \  c = 'L';\n        }\n        else if(c == 'M')\n        {\n            c =\
    \ 'm';\n        }\n        else if(c == 'm')\n        {\n            c = 'M';\n\
    \        }\n        else if(c == 'N')\n        {\n            c = 'n';\n     \
    \   }\n        else if(c == 'n')\n        {\n            c = 'N';\n        }\n\
    \        else if(c == 'O')\n        {\n            c = 'o';\n        }\n     \
    \   else if(c == 'o')\n        {\n            c = 'O';\n        }\n        else\
    \ if(c == 'P')\n        {\n            c = 'p';\n        }\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpf7uzhiz6.d(139): Error: found `unittest` instead of statement\\\
    n/tmp/tmpf7uzhiz6.d(147): Error: found `End of File` when expecting `}` following\
    \ compound statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf7uzhiz6.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        char c =\
    \ string[i];\n        if(c == 'A')\n            c = 'a';\n        else if(c ==\
    \ 'a')\n            c = 'A';\n        else if(c == 'B')\n            c = 'b';\n\
    \        else if(c == 'b')\n            c = 'B';\n        else if(c == 'C')\n\
    \            c = 'c';\n        else if(c == 'c')\n            c = 'C';\n     \
    \   else if(c == 'D')\n            c = 'd';\n        else if(c == 'd')\n     \
    \       c = 'D';\n        else if(c == 'E')\n            c = 'e';\n        else\
    \ if(c == 'e')\n            c = 'E';\n        else if(c == 'F')\n            c\
    \ = 'f';\n        else if(c == 'f')\n            c = 'F';\n        else if(c ==\
    \ 'G')\n            c = 'g';\n        else if(c == 'g')\n            c = 'G';\n\
    \        else if(c == 'H')\n            c = 'h';\n        else if(c == 'h')\n\
    \            c = 'H';\n        else if(c == 'I')\n            c = 'i';\n     \
    \   else if(c == 'i')\n            c = 'I';\n        else if(c == 'J')\n     \
    \       c = 'j';\n        else if(c == 'j')\n            c = 'J';\n        else\
    \ if(c == 'K')\n            c = 'k';\n        else if(c == 'k')\n            c\
    \ = 'K';\n        else if(c == 'L')\n            c = 'l';\n        else if(c ==\
    \ 'l')\n            c = 'L';\n        else if(c == 'M')\n            c = 'm';\n\
    \        else if(c == 'm')\n            c = 'M';\n        else if(c == 'N')\n\
    \            c = 'n';\n        else if(c == 'n')\n            c = 'N';\n     \
    \   else if(c == 'O')\n            c = 'o';\n        else if(c == 'o')\n     \
    \       c = 'O';\n        else if(c == 'P')\n            c = 'p';\n        else\
    \ if(c == 'p')\n            c = 'P';\n        else if(c == 'Q')\n            c\
    \ = 'q';\n        else if(c == 'q')\n            c = 'Q';\n        else if(c ==\
    \ 'R')\n            c = 'r';\n        else if(c == 'r')\n            c = 'R';\n\
    \        else if(c == 'S')\n            c = 's';\n        else if(c == 's')\n\
    \            c = 'S';\n        else if(c == 'T')\n            c = 't';\n     \
    \   else if(c == 't')\n            c = 'T';\n        else if(c == 'U')\n     \
    \       c = 'u';\n        else if(c == 'u')\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpcr_0oghz.d(98): Error: found `unittest` instead of statement\\\
    n/tmp/tmpcr_0oghz.d(106): Error: found `End of File` when expecting `}` following\
    \ compound statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcr_0oghz.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        char c =\
    \ string[i];\n        if(c == 'a')\n            c = 'A';\n        if(c == 'A')\n\
    \            c = 'a';\n        result += c;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpb93588vc.d(11): Error: `string` is used as a type\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb93588vc.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n\tauto it = string.begin();\n\
    \tauto end = string.end();\n\tfor(; it != end; ++it)\n\t{\n\t\tif(*it >= 'a' &&\
    \ *it <= 'z')\n\t\t\t*it = *it - 'a' + 'A';\n\t\telse if(*it >= 'A' && *it <=\
    \ 'Z')\n\t\t\t*it = *it - 'A' + 'a';\n\t}\n\treturn string;\n}\nunittest\n{\n\
    \    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n  \
    \  assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpv3kb8hrj.d(11): Error: no property `begin` for type `string`\\\
    n/tmp/tmpv3kb8hrj.d(12): Error: no property `end` for type `string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv3kb8hrj.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++) {\n        char c = string[i];\n\
    \        if(c == ' ') {\n            result += c;\n        } else {\n        \
    \    result += toupper(c);\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpask6tefy.d(11): Error: `string` is used as a type\\n/tmp/tmpask6tefy.d(12):\
    \ Error: no property `length` for type `string`\\n/tmp/tmpask6tefy.d(17): Error:\
    \ undefined identifier `toupper`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpask6tefy.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp50t01n04.d(11): Error: `string` is used as a type\\n/tmp/tmp50t01n04.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp50t01n04.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for (auto c : string) result += toupper(c);\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsbnleoks.d(12): Error: no identifier for declarator `c`\\n/tmp/tmpsbnleoks.d(12):\
    \ Error: expression expected, not `:`\\n/tmp/tmpsbnleoks.d(12): Error: found `string`\
    \ when expecting `;` following `for` condition\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpsbnleoks.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        char c\
    \ = string[i];\n        if(islower(c))\n        {\n            result += toupper(c);\n\
    \        }\n        else\n        {\n            result += tolower(c);\n     \
    \   }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4a4r3usp.d(11): Error: `string` is used as a type\\n/tmp/tmp4a4r3usp.d(12):\
    \ Error: no property `length` for type `string`\\n/tmp/tmp4a4r3usp.d(15): Error:\
    \ undefined identifier `islower`\\n/tmp/tmp4a4r3usp.d(17): Error: undefined identifier\
    \ `toupper`\\n/tmp/tmp4a4r3usp.d(21): Error: undefined identifier `tolower`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4a4r3usp.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_hzwkbsu.d(11): Error: `string` is used as a type\\n/tmp/tmp_hzwkbsu.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp_hzwkbsu.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        char c\
    \ = string[i];\n        if(c == 'a')\n            c = 'A';\n        else if(c\
    \ == 'A')\n            c = 'a';\n        else if(c == 'e')\n            c = 'E';\n\
    \        else if(c == 'E')\n            c = 'e';\n        else if(c == 'i')\n\
    \            c = 'I';\n        else if(c == 'I')\n            c = 'i';\n     \
    \   else if(c == 'o')\n            c = 'O';\n        else if(c == 'O')\n     \
    \       c = 'o';\n        else if(c == 'u')\n            c = 'U';\n        else\
    \ if(c == 'U')\n            c = 'u';\n        else if(c == 'y')\n            c\
    \ = 'Y';\n        else if(c == 'Y')\n            c = 'y';\n        else\n    \
    \        c = toupper(c);\n        result += c;\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") ==\
    \ \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbrm3uss4.d(11): Error: `string` is used as a type\\n/tmp/tmpbrm3uss4.d(12):\
    \ Error: no property `length` for type `string`\\n/tmp/tmpbrm3uss4.d(40): Error:\
    \ undefined identifier `toupper`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpbrm3uss4.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z') {\n            result += string[i] - 'a' + 'A';\n\
    \        } else {\n            result += string[i];\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6_kpyavw.d(11): Error: `string` is used as a type\\n/tmp/tmp6_kpyavw.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp6_kpyavw.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); ++i)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] + string[i].toUpper();\n\
    \        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n\
    \            result += string[i] + string[i].toLower();\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpiylncgoy.d(11): Error: `string` is used as a type\\n/tmp/tmpiylncgoy.d(12):\
    \ Error: no property `length` for type `string`\\n/tmp/tmpiylncgoy.d(16): Error:\
    \ no property `toUpper` for type `immutable(char)`\\n/tmp/tmpiylncgoy.d(20): Error:\
    \ no property `toLower` for type `immutable(char)`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpiylncgoy.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptfx1y6rb.d(11): Error: `string` is used as a type\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptfx1y6rb.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1w6tmrfm.d(11): Error: `string` is used as a type\\n/tmp/tmp1w6tmrfm.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp1w6tmrfm.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp99_6wud3.d(11): Error: `string` is used as a type\\n/tmp/tmp99_6wud3.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp99_6wud3.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); ++i)\n    {\n        char c\
    \ = string[i];\n        if(c == 'A' || c == 'a')\n        {\n            c = 'a';\n\
    \        }\n        else if(c == 'B' || c == 'b')\n        {\n            c =\
    \ 'b';\n        }\n        else if(c == 'C' || c == 'c')\n        {\n        \
    \    c = 'c';\n        }\n        else if(c == 'D' || c == 'd')\n        {\n \
    \           c = 'd';\n        }\n        else if(c == 'E' || c == 'e')\n     \
    \   {\n            c = 'e';\n        }\n        else if(c == 'F' || c == 'f')\n\
    \        {\n            c = 'f';\n        }\n        else if(c == 'G' || c ==\
    \ 'g')\n        {\n            c = 'g';\n        }\n        else if(c == 'H' ||\
    \ c == 'h')\n        {\n            c = 'h';\n        }\n        else if(c ==\
    \ 'I' || c == 'i')\n        {\n            c = 'i';\n        }\n        else if(c\
    \ == 'J' || c == 'j')\n        {\n            c = 'j';\n        }\n        else\
    \ if(c == 'K' || c == 'k')\n        {\n            c = 'k';\n        }\n     \
    \   else if(c == 'L' || c == 'l')\n        {\n            c = 'l';\n        }\n\
    \        else if(c == 'M' || c == 'm')\n        {\n            c = 'm';\n    \
    \    }\n        else if(c == 'N' || c == 'n')\n        {\n            c = 'n';\n\
    \        }\n        else if(c == 'O' || c == 'o')\n        {\n            c =\
    \ 'o';\n        }\n        else if(c == 'P' || c == 'p')\n        {\n        \
    \    c = 'p';\n        }\n        else if(c == 'Q' || c == 'q')\n        {\n \
    \           c = 'q';\n        }\n        else if(c == 'R' || c == 'r')\n     \
    \   {\n            c = 'r';\n        }\n        else if(c == 'S' || c == 's')\n\
    \        {\n            c = 's';\n        }\n        else if(c == 'T' || c ==\
    \ 't')\n        {\n            c = 't';\n        }\n        else if(c == 'U' ||\
    \ c == 'u')\n        {\n            c = 'u';\n        }\n        else if(c ==\
    \ 'V' || c == 'v')\n        {\n            c = 'v';\n        }\n        else if(c\
    \ == 'W' || c == 'w')\n        {\n            c = 'w';\n        }\n        else\
    \ if(c == 'X' || c == 'x')\n        {\n            c = 'x';\n        }\n     \
    \   else if(c == 'Y' || c == 'y')\n        {\n            c = 'y';\n        }\n\
    \nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\")\
    \ == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpthzvm864.d(116): Error: found `unittest` instead of statement\\\
    n/tmp/tmpthzvm864.d(124): Error: found `End of File` when expecting `}` following\
    \ compound statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpthzvm864.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        char c\
    \ = string[i];\n        if(c == 'a')\n            c = 'A';\n        else if(c\
    \ == 'A')\n            c = 'a';\n        result += c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpeztf3nbo.d(11): Error: `string` is used as a type\\n/tmp/tmpeztf3nbo.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpeztf3nbo.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++) {\n        char c = string[i];\n\
    \        if(c == ' ' || c == '\\t' || c == '\\n' || c == '\\r' || c == '\\v' ||\
    \ c == '\\f' || c == '\\a') {\n            result += c;\n        } else {\n  \
    \          result += toupper(c);\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpece6stcf.d(11): Error: `string` is used as a type\\n/tmp/tmpece6stcf.d(12):\
    \ Error: no property `length` for type `string`\\n/tmp/tmpece6stcf.d(17): Error:\
    \ undefined identifier `toupper`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpece6stcf.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n\tauto it = string.begin();\n\
    \tauto end = string.end();\n\t\n\tfor(; it != end; ++it)\n\t{\n\t\tif(*it >= 'a'\
    \ && *it <= 'z')\n\t\t{\n\t\t\t*it -= 32;\n\t\t}\n\t\telse if(*it >= 'A' && *it\
    \ <= 'Z')\n\t\t{\n\t\t\t*it += 32;\n\t\t}\n\t}\n\t\n\treturn string;\n}\nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpnvrof_k5.d(11): Error: no property `begin` for type `string`\\\
    n/tmp/tmpnvrof_k5.d(12): Error: no property `end` for type `string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnvrof_k5.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); ++i)\n    {\n        char c\
    \ = string[i];\n        if(c == 'a')\n            c = 'A';\n        else if(c\
    \ == 'A')\n            c = 'a';\n        else if(c == 'e')\n            c = 'E';\n\
    \        else if(c == 'E')\n            c = 'e';\n        else if(c == 'i')\n\
    \            c = 'I';\n        else if(c == 'I')\n            c = 'i';\n     \
    \   else if(c == 'o')\n            c = 'O';\n        else if(c == 'O')\n     \
    \       c = 'o';\n        else if(c == 'u')\n            c = 'U';\n        else\
    \ if(c == 'U')\n            c = 'u';\n        else if(c == 'y')\n            c\
    \ = 'Y';\n        else if(c == 'Y')\n            c = 'y';\n        else\n    \
    \        c = toupper(c);\n        result += c;\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") ==\
    \ \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprtod3y1n.d(11): Error: `string` is used as a type\\n/tmp/tmprtod3y1n.d(12):\
    \ Error: no property `length` for type `string`\\n/tmp/tmprtod3y1n.d(40): Error:\
    \ undefined identifier `toupper`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmprtod3y1n.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for (auto c : string) \n    {\n        if (c >= 'a' && c <= 'z')\
    \ \n        {\n            result += (char)(c - 'a' + 'A');\n        }\n     \
    \   else if (c >= 'A' && c <= 'Z') \n        {\n            result += (char)(c\
    \ - 'A' + 'a');\n        }\n        else \n        {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpviep01v4.d(12): Error: no identifier for declarator `c`\\n/tmp/tmpviep01v4.d(12):\
    \ Error: expression expected, not `:`\\n/tmp/tmpviep01v4.d(12): Error: found `string`\
    \ when expecting `;` following `for` condition\\n/tmp/tmpviep01v4.d(16): Error:\
    \ C style cast illegal, use `cast(char)(c - \\'a\\' + \\'A\\')`\\n/tmp/tmpviep01v4.d(20):\
    \ Error: C style cast illegal, use `cast(char)(c - \\'A\\' + \\'a\\')`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpviep01v4.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n \
    \       {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0vzvfjvn.d(11): Error: `string` is used as a type\\n/tmp/tmp0vzvfjvn.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp0vzvfjvn.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); ++i)\n    {\n        char c\
    \ = string[i];\n        if(c == 'a' || c == 'A')\n        {\n            c = 'A';\n\
    \        }\n        else if(c == 'b' || c == 'B')\n        {\n            c =\
    \ 'B';\n        }\n        else if(c == 'c' || c == 'C')\n        {\n        \
    \    c = 'C';\n        }\n        else if(c == 'd' || c == 'D')\n        {\n \
    \           c = 'D';\n        }\n        else if(c == 'e' || c == 'E')\n     \
    \   {\n            c = 'E';\n        }\n        else if(c == 'f' || c == 'F')\n\
    \        {\n            c = 'F';\n        }\n        else if(c == 'g' || c ==\
    \ 'G')\n        {\n            c = 'G';\n        }\n        else if(c == 'h' ||\
    \ c == 'H')\n        {\n            c = 'H';\n        }\n        else if(c ==\
    \ 'i' || c == 'I')\n        {\n            c = 'I';\n        }\n        else if(c\
    \ == 'j' || c == 'J')\n        {\n            c = 'J';\n        }\n        else\
    \ if(c == 'k' || c == 'K')\n        {\n            c = 'K';\n        }\n     \
    \   else if(c == 'l' || c == 'L')\n        {\n            c = 'L';\n        }\n\
    \        else if(c == 'm' || c == 'M')\n        {\n            c = 'M';\n    \
    \    }\n        else if(c == 'n' || c == 'N')\n        {\n            c = 'N';\n\
    \        }\n        else if(c == 'o' || c == 'O')\n        {\n            c =\
    \ 'O';\n        }\n        else if(c == 'p' || c == 'P')\n        {\n        \
    \    c = 'P';\n        }\n        else if(c == 'q' || c == 'Q')\n        {\n \
    \           c = 'Q';\n        }\n        else if(c == 'r' || c == 'R')\n     \
    \   {\n            c = 'R';\n        }\n        else if(c == 's' || c == 'S')\n\
    \        {\n            c = 'S';\n        }\n        else if(c == 't' || c ==\
    \ 'T')\n        {\n            c = 'T';\n        }\n        else if(c == 'u' ||\
    \ c == 'U')\n        {\n            c = 'U';\n        }\n        else if(c ==\
    \ 'v' || c == 'V')\n        {\n            c = 'V';\n        }\n        else if(c\
    \ == 'w' || c == 'W')\n        {\n            c = 'W';\n        }\n        else\
    \ if(c == 'x' || c == 'X')\n        {\n            c = 'X';\n        }\n     \
    \   else if(c == 'y' || c == 'Y\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppv621am1.d(111): Error: unterminated character constant\\n/tmp/tmppv621am1.d(112):\
    \ Error: found `unittest` when expecting `)`\\n/tmp/tmppv621am1.d(120): Error:\
    \ found `End of File` when expecting `}` following compound statement\\n/tmp/tmppv621am1.d(120):\
    \ Error: found `End of File` when expecting `}` following compound statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppv621am1.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n \
    \       {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2i3rods8.d(11): Error: `string` is used as a type\\n/tmp/tmp2i3rods8.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp2i3rods8.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); ++i)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpusxvc3jh.d(11): Error: `string` is used as a type\\n/tmp/tmpusxvc3jh.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpusxvc3jh.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); ++i)\n    {\n        char c\
    \ = string[i];\n        if(c == ' ')\n            result += c;\n        else if(c\
    \ == '_')\n            result += toupper(c);\n        else\n            result\
    \ += tolower(c);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2e_fdue1.d(11): Error: `string` is used as a type\\n/tmp/tmp2e_fdue1.d(12):\
    \ Error: no property `length` for type `string`\\n/tmp/tmp2e_fdue1.d(18): Error:\
    \ undefined identifier `toupper`\\n/tmp/tmp2e_fdue1.d(20): Error: undefined identifier\
    \ `tolower`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2e_fdue1.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z') {\n            result += string[i] - 'a' + 'A';\n\
    \        }\n        else if(string[i] >= 'A' && string[i] <= 'Z') {\n        \
    \    result += string[i] - 'A' + 'a';\n        }\n        else {\n           \
    \ result += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n  \
    \  assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp65b7h290.d(11): Error: `string` is used as a type\\n/tmp/tmp65b7h290.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp65b7h290.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n \
    \       {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpiya32kks.d(11): Error: `string` is used as a type\\n/tmp/tmpiya32kks.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpiya32kks.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        char c\
    \ = string[i];\n        if(c == '_')\n        {\n            c = string[i + 1];\n\
    \            result += c;\n            i++;\n        }\n        else if(c == 'a')\n\
    \        {\n            c = 'A';\n            result += c;\n        }\n      \
    \  else if(c == 'A')\n        {\n            c = 'a';\n            result += c;\n\
    \        }\n        else\n            result += c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpy5m7ocq5.d(11): Error: `string` is used as a type\\n/tmp/tmpy5m7ocq5.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpy5m7ocq5.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\n/*\n For a given string, flip uppercase\
    \ characters to lowercase and lowercase to uppercase.\n    >>> flip_case('hELLO')\n\
    \    'Hello'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'A' && string[i] <= 'Z')\n        {\n            result += string[i] - 'A'\
    \ + 'a';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\n/*\n For a given string, flip all characters\
    \ to lowercase and uppercase to uppercase.\n    >>> flip_case('Hello World')\n\
    \    'hELLO wORLD'\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\n/*\n For a given string,\
    \ flip all characters to uppercase and lowercase to lowercase.\n    >>> flip_case('hELLO\
    \ wORLD')\n    'Hello World'\n    \n*/\nstring flip_case(string string) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n           \
    \ result += string[i] - 'A' + 'a';\n        }\n        else\n        {\n     \
    \       result += string[i];\n        }\n    }\n    return result;\n}\n/*\n For\
    \ a given string, flip all characters to lowercase and uppercase to uppercase.\n\
    \    >>> flip_case('Hello World')\n    'hELLO wORLD'\n    \n*/\nstring flip_case(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n \
    \           result += string[i] - 'a' + 'A';\n        }\n        else\n      \
    \  {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvid2z7vu.d(113): Error: unterminated /* */ comment\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvid2z7vu.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp894ro8n0.d(11): Error: `string` is used as a type\\n/tmp/tmp894ro8n0.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp894ro8n0.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        char c\
    \ = string[i];\n        if(c == 'a')\n        {\n            c = 'A';\n      \
    \  }\n        else if(c == 'A')\n        {\n            c = 'a';\n        }\n\
    \        else if(c == 'e')\n        {\n            c = 'E';\n        }\n     \
    \   else if(c == 'E')\n        {\n            c = 'e';\n        }\n        else\
    \ if(c == 'i')\n        {\n            c = 'I';\n        }\n        else if(c\
    \ == 'I')\n        {\n            c = 'i';\n        }\n        else if(c == 'o')\n\
    \        {\n            c = 'O';\n        }\n        else if(c == 'O')\n     \
    \   {\n            c = 'o';\n        }\n        else if(c == 'u')\n        {\n\
    \            c = 'U';\n        }\n        else if(c == 'U')\n        {\n     \
    \       c = 'u';\n        }\n        else if(c == 'y')\n        {\n          \
    \  c = 'Y';\n        }\n        else if(c == 'Y')\n        {\n            c =\
    \ 'y';\n        }\n        else if(c == 's')\n        {\n            c = 'S';\n\
    \        }\n        else if(c == 'S')\n        {\n            c = 's';\n     \
    \   }\n        else if(c == 'd')\n        {\n            c = 'D';\n        }\n\
    \        else if(c == 'D')\n        {\n            c = 'd';\n        }\n     \
    \   else if(c == 'f')\n        {\n            c = 'F';\n        }\n        else\
    \ if(c == 'F')\n        {\n            c = 'f';\n        }\n        else if(c\
    \ == 'h')\n        {\n            c = 'H';\n        }\n        else if(c == 'H')\n\
    \        {\n            c = 'h';\n        }\n        else if(c == 'j')\n     \
    \   {\n            c = 'J';\n        }\n        else if(c == 'J')\n        {\n\
    \            c = 'j';\n        }\n        else if(c == 'k')\n        {\n     \
    \       c = 'K';\n        }\n        else if(c == 'K')\n        {\n          \
    \  c = 'k';\n        }\n        else if(c == 'l')\n        {\n            c =\
    \ 'L';\n        }\n        else if(c == 'L')\n        {\n            c = 'l';\n\
    \        }\n        else if(c == 'n')\n        {\n            c = 'N';\n     \
    \   }\n        else if(c == 'N')\n        {\n            c = 'n';\n        }\n\
    \        else if(c == 'p')\n        {\n            c = 'P';\n        }\n     \
    \   else if(c == 'P')\n        {\n            c = 'p';\n        }\n        else\
    \ if(c == 'r')\n        {\n            c = 'R';\n        }\n        else \nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmps2eu4o1d.d(140): Error: found `unittest` instead of statement\\\
    n/tmp/tmps2eu4o1d.d(148): Error: found `End of File` when expecting `}` following\
    \ compound statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps2eu4o1d.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzdoo6sqe.d(11): Error: `string` is used as a type\\n/tmp/tmpzdoo6sqe.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpzdoo6sqe.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        char c\
    \ = string[i];\n        if(islower(c))\n        {\n            result += toupper(c);\n\
    \        }\n        else\n        {\n            result += tolower(c);\n     \
    \   }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1an7z3qn.d(11): Error: `string` is used as a type\\n/tmp/tmp1an7z3qn.d(12):\
    \ Error: no property `length` for type `string`\\n/tmp/tmp1an7z3qn.d(15): Error:\
    \ undefined identifier `islower`\\n/tmp/tmp1an7z3qn.d(17): Error: undefined identifier\
    \ `toupper`\\n/tmp/tmp1an7z3qn.d(21): Error: undefined identifier `tolower`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1an7z3qn.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        char c\
    \ = string[i];\n        if(c == c.toLower())\n        {\n            result +=\
    \ c.toUpper();\n        }\n        else\n        {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxyviik3y.d(11): Error: `string` is used as a type\\n/tmp/tmpxyviik3y.d(12):\
    \ Error: no property `length` for type `string`\\n/tmp/tmpxyviik3y.d(15): Error:\
    \ no property `toLower` for type `char`\\n/tmp/tmpxyviik3y.d(17): Error: no property\
    \ `toUpper` for type `char`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmpxyviik3y.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++) {\n        char c = string[i];\n\
    \        if(c == c.toUpper()) {\n            result += c.toLower();\n        }\
    \ else {\n            result += c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") ==\
    \ \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpf5hkmf8z.d(11): Error: `string` is used as a type\\n/tmp/tmpf5hkmf8z.d(12):\
    \ Error: no property `length` for type `string`\\n/tmp/tmpf5hkmf8z.d(14): Error:\
    \ no property `toUpper` for type `char`\\n/tmp/tmpf5hkmf8z.d(15): Error: no property\
    \ `toLower` for type `char`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmpf5hkmf8z.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++) {\n        char c = string[i];\n\
    \        if(islower(c)) {\n            result += toupper(c);\n        } else {\n\
    \            result += tolower(c);\n        }\n    }\n    return result;\n}\n\
    </code>\n<|/ a tags=c++,string,algorithm |>\n<| c |>\nThe `string` type is not\
    \ part of the standard library. Also, `std::swap` doesn't exist in C++.\n<|/ c\
    \ |>\n<| c |>\nI didn't know that `string` wasn't part of the standard library.\
    \ Thanks for the heads up. I'll edit my answer.\n<|/ c |>\n<| c |>\n`std::swap`\
    \ exists in C++11 and later.\n<|/ c |>\n<| c |>\n`std::swap` exists in C++11 and\
    \ later. `std::swap` exists in C++11 and later. `std::swap` exists in C++11 and\
    \ later. `std::swap` exists in C++11 and later. `std::swap` exists in C++11 and\
    \ later. `std::swap` exists in C++11 and later. `std::swap` exists in C++11 and\
    \ later. `std::swap` exists in C++11 and later. `std::swap` exists in C++11 and\
    \ later. `std::swap` exists in C++11 and later. `std::swap` exists in C++11 and\
    \ later. `std::swap` exists in C++11 and later. `std::swap` exists in C++11 and\
    \ later. `std::swap` exists in C++11 and later. `std::swap` exists in C++11 and\
    \ later. `std::swap` exists in C++11 and later. `std::swap` exists in C++11 and\
    \ later. `std::swap` exists in C++11 and later. `std::swap` exists in C++11 and\
    \ later. `std::swap` exists in C++11 and later. `std::swap` exists in C++11 and\
    \ later. `std::swap` exists in C++11 and later. `std::swap` exists in C++11 and\
    \ later. `std::swap` exists in C++11 and later. `std::swap` exists in C++11 and\
    \ later. `std::swap` exists in C++11 and later. `std::swap` exists in C++11 and\
    \ later. `std::swap` exists in C++11 and later. `std::swap` exists in C++11 and\
    \ later. `std::swap` exists in C++11 and later. `std::swap` exists in C++11 and\
    \ later. `std::swap` exists in C++11 and later. `std::swap` exists in C++11\n\
    unittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") ==\
    \ \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphdci_nry.d(22): Error: declaration expected, not `<`\\n/tmp/tmphdci_nry.d(25):\
    \ Error: unterminated character constant\\n/tmp/tmphdci_nry.d(28): Error: unterminated\
    \ character constant\\n/tmp/tmphdci_nry.d(28): Error: unterminated character constant\\\
    n/tmp/tmphdci_nry.d(28): Error: unterminated character constant\\n/tmp/tmphdci_nry.d(39):\
    \ Error: declaration expected, not `assert`\\n/tmp/tmphdci_nry.d(40): Error: declaration\
    \ expected, not `assert`\\n/tmp/tmphdci_nry.d(41): Error: declaration expected,\
    \ not `assert`\\n/tmp/tmphdci_nry.d(42): Error: unrecognized declaration\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphdci_nry.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphf8t7b1l.d(11): Error: `string` is used as a type\\n/tmp/tmphf8t7b1l.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmphf8t7b1l.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for (auto c : string) \n    {\n        if (char.IsUpper(c)) \n\
    \        {\n            result += char.ToLower(c);\n        }\n        else \n\
    \        {\n            result += char.ToUpper(c);\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpc1qfdi0s.d(12): Error: no identifier for declarator `c`\\n/tmp/tmpc1qfdi0s.d(12):\
    \ Error: expression expected, not `:`\\n/tmp/tmpc1qfdi0s.d(12): Error: found `string`\
    \ when expecting `;` following `for` condition\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpc1qfdi0s.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n\tauto it = string.begin();\n\
    \tauto end = string.end();\n\tfor(;it!=end;++it)\n\t{\n\t\tauto c = *it;\n\t\t\
    if(c>='a' && c<='z')\n\t\t\t*it = (c-'a'+26)+'A';\n\t\telse if(c>='A' && c<='Z')\n\
    \t\t\t*it = (c-'A'+26)+'a';\n\t\telse if(c>='0' && c<='9')\n\t\t\t*it = (c-'0')+'0';\n\
    \t\telse\n\t\t\t*it = c;\n\t}\n\treturn string;\n}\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpivzwhf_n.d(11): Error: no property `begin` for type `string`\\\
    n/tmp/tmpivzwhf_n.d(12): Error: no property `end` for type `string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpivzwhf_n.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); ++i)\n    {\n        char c\
    \ = string[i];\n        if(c == ' ')\n        {\n            result += c;\n  \
    \      }\n        else if(c == '_')\n        {\n            result += toupper(c);\n\
    \        }\n        else\n        {\n            result += tolower(c);\n     \
    \   }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpovlc_uh2.d(11): Error: `string` is used as a type\\n/tmp/tmpovlc_uh2.d(12):\
    \ Error: no property `length` for type `string`\\n/tmp/tmpovlc_uh2.d(21): Error:\
    \ undefined identifier `toupper`\\n/tmp/tmpovlc_uh2.d(25): Error: undefined identifier\
    \ `tolower`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpovlc_uh2.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        char c\
    \ = string[i];\n        if(c == 'a')\n            c = 'A';\n        else if(c\
    \ == 'A')\n            c = 'a';\n        else if(c == 'b')\n            c = 'B';\n\
    \        else if(c == 'B')\n            c = 'b';\n        else if(c == 'c')\n\
    \            c = 'C';\n        else if(c == 'C')\n            c = 'c';\n     \
    \   else if(c == 'd')\n            c = 'D';\n        else if(c == 'D')\n     \
    \       c = 'd';\n        else if(c == 'e')\n            c = 'E';\n        else\
    \ if(c == 'E')\n            c = 'e';\n        else if(c == 'f')\n            c\
    \ = 'F';\n        else if(c == 'F')\n            c = 'f';\n        else if(c ==\
    \ 'g')\n            c = 'G';\n        else if(c == 'G')\n            c = 'g';\n\
    \        else if(c == 'h')\n            c = 'H';\n        else if(c == 'H')\n\
    \            c = 'h';\n        else if(c == 'i')\n            c = 'I';\n     \
    \   else if(c == 'I')\n            c = 'i';\n        else if(c == 'j')\n     \
    \       c = 'J';\n        else if(c == 'J')\n            c = 'j';\n        else\
    \ if(c == 'k')\n            c = 'K';\n        else if(c == 'K')\n            c\
    \ = 'k';\n        else if(c == 'l')\n            c = 'L';\n        else if(c ==\
    \ 'L')\n            c = 'l';\n        else if(c == 'm')\n            c = 'M';\n\
    \        else if(c == 'M')\n            c = 'm';\n        else if(c == 'n')\n\
    \            c = 'N';\n        else if(c == 'N')\n            c = 'n';\n     \
    \   else if(c == 'o')\n            c = 'O';\n        else if(c == 'O')\n     \
    \       c = 'o';\n        else if(c == 'p')\n            c = 'P';\n        else\
    \ if(c == 'P')\n            c = 'p';\n        else if(c == 'q')\n            c\
    \ = 'Q';\n        else if(c == 'Q')\n            c = 'q';\n        else if(c ==\
    \ 'r')\n            c = 'R';\n        else if(c == 'R')\n            c = 'r';\n\
    \        else if(c == 's')\n            c = 'S';\n        else if(c == 'S')\n\
    \            c = 's';\n        else if(c == 't')\n            c = 'T';\n     \
    \   else if(c == 'T')\n            c = 't';\n        else if(c == 'u')\n     \
    \       c = 'U';\n        else if(c == 'U')\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpezzx251m.d(98): Error: found `unittest` instead of statement\\\
    n/tmp/tmpezzx251m.d(106): Error: found `End of File` when expecting `}` following\
    \ compound statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpezzx251m.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n \
    \       {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_nfjvtah.d(11): Error: `string` is used as a type\\n/tmp/tmp_nfjvtah.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp_nfjvtah.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppvx63j5b.d(11): Error: `string` is used as a type\\n/tmp/tmppvx63j5b.d(12):\
    \ Error: no property `length` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmppvx63j5b.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
    \    'hELLO'\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsz1q51kf.d(11): Error: `string` is used as a type\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsz1q51kf.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError

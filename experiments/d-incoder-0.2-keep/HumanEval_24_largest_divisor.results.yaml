name: HumanEval_24_largest_divisor
language: humaneval_to_dlang.py
results:
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n    long max_div = n;\n    long max_div2\
    \ = n;\n    long max_div3 = n;\n    long max_div4 = n;\n    long max_div5 = n;\n\
    \    long max_div6 = n;\n    long max_div7 = n;\n    long max_div8 = n;\n    long\
    \ max_div9 = n;\n    long max_div10 = n;\n    long max_div11 = n;\n    long max_div12\
    \ = n;\n    long max_div13 = n;\n    long max_div14 = n;\n    long max_div15 =\
    \ n;\n    long max_div16 = n;\n    long max_div17 = n;\n    long max_div18 = n;\n\
    \    long max_div19 = n;\n    long max_div20 = n;\n    long max_div21 = n;\n \
    \   long max_div22 = n;\n    long max_div23 = n;\n    long max_div24 = n;\n  \
    \  long max_div25 = n;\n    long max_div26 = n;\n    long max_div27 = n;\n   \
    \ long max_div28 = n;\n    long max_div29 = n;\n    long max_div30 = n;\n    long\
    \ max_div31 = n;\n    long max_div32 = n;\n    long max_div33 = n;\n    long max_div34\
    \ = n;\n    long max_div35 = n;\n    long max_div36 = n;\n    long max_div37 =\
    \ n;\n    long max_div38 = n;\n    long max_div39 = n;\n    long max_div40 = n;\n\
    \    long max_div41 = n;\n    long max_div42 = n;\n    long max_div43 = n;\n \
    \   long max_div44 = n;\n    long max_div45 = n;\n    long max_div46 = n;\n  \
    \  long max_div47 = n;\n    long max_div48 = n;\n    long max_div49 = n;\n   \
    \ long max_div50 = n;\n    long max_div51 = n;\n    long max_div52 = n;\n    long\
    \ max_div53 = n;\n    long max_div54 = n;\n    long max_div55 = n;\n    long max_div56\
    \ = n;\n    long max_div57 = n;\n    long max_div58 = n;\n    long max_div59 =\
    \ n;\n    long max_div60 = n;\n    long max_div61 = n;\n    long max_div62 = n;\n\
    \    long max_div63 = n;\n    long max_div64 = n;\n    long max_div65 = n;\n \
    \   long \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqbrgl324.d(76): Error: no identifier for declarator `long`\\\
    n/tmp/tmpqbrgl324.d(76): Error: found `unittest` instead of statement\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqbrgl324.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n    long largest_divisor = 1;\n    long\
    \ divisor = 2;\n    long remainder;\n    \n    while ((remainder = n % divisor)\
    \ != 0)\n    {\n        divisor++;\n        largest_divisor = divisor;\n    }\n\
    \    \n    return largest_divisor;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpa23bdj9c.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d7d]\\n??:? void tmpa23bdj9c.__unittest_L22_C1()\
    \ [0x427a68]\\n??:? void tmpa23bdj9c.__modtest() [0x427b00]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baa3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a936]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fac9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a90d]\\n??:? runModuleUnitTests [0x42b879]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281cc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428153]\\n??:? _d_run_main [0x4280be]\\n??:? main [0x427b13]\\\
    n??:? __libc_start_main [0xc52db554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\t\n\twhile(currentDivisor <= n)\n\t{\n\t\tif(n % currentDivisor == 0)\n\
    \t\t{\n\t\t\tmaxDivisor = currentDivisor;\n\t\t}\n\t\tcurrentDivisor++;\n\t}\n\
    \t\n\treturn maxDivisor;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp2athpxeh.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d85]\\n??:? void tmp2athpxeh.__unittest_L24_C1()\
    \ [0x427a70]\\n??:? void tmp2athpxeh.__modtest() [0x427b08]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baab]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a93e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a915]\\n??:? runModuleUnitTests [0x42b881]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281d4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42815b]\\n??:? _d_run_main [0x4280c6]\\n??:? main [0x427b1b]\\\
    n??:? __libc_start_main [0xc16d2554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2 = n;\n\
    \tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong max_div6\
    \ = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 = n;\n\tlong\
    \ max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\tlong max_div13\
    \ = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16 = n;\n\t\
    long max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\tlong max_div20\
    \ = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23 = n;\n\t\
    long max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\tlong max_div27\
    \ = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30 = n;\n\t\
    long max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\tlong max_div34\
    \ = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37 = n;\n\t\
    long max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\tlong max_div41\
    \ = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44 = n;\n\t\
    long max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\tlong max_div48\
    \ = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51 = n;\n\t\
    long max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\tlong max_div55\
    \ = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58 = n;\n\t\
    long max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\tlong max_div62\
    \ = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65 = n;\n\t\
    long \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0ol54jyp.d(76): Error: no identifier for declarator `long`\\\
    n/tmp/tmp0ol54jyp.d(76): Error: found `unittest` instead of statement\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0ol54jyp.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest_divisor = 1;\n\tlong divisor\
    \ = 1;\n\tlong remainder;\n\t\n\twhile (n>1) {\n\t\tremainder = n%divisor;\n\t\
    \tif (remainder==0) {\n\t\t\tdivisor++;\n\t\t}\n\t\telse {\n\t\t\tlargest_divisor\
    \ = divisor;\n\t\t\tdivisor = remainder;\n\t\t}\n\t\tn = (n/divisor)-1;\n\t}\n\
    \tlargest_divisor = divisor;\n\treturn largest_divisor;\n}\nunittest\n{\n    alias\
    \ candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpt02qio0y.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dad]\\n??:? void tmpt02qio0y.__unittest_L28_C1()\
    \ [0x427a98]\\n??:? void tmpt02qio0y.__modtest() [0x427b30]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bad3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a966]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42faf9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a93d]\\n??:? runModuleUnitTests [0x42b8a9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281fc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428183]\\n??:? _d_run_main [0x4280ee]\\n??:? main [0x427b43]\\\
    n??:? __libc_start_main [0x67abd554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2 = n;\n\
    \tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong max_div6\
    \ = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 = n;\n\tlong\
    \ max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\tlong max_div13\
    \ = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16 = n;\n\t\
    long max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\tlong max_div20\
    \ = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23 = n;\n\t\
    long max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\tlong max_div27\
    \ = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30 = n;\n\t\
    long max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\tlong max_div34\
    \ = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37 = n;\n\t\
    long max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\tlong max_div41\
    \ = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44 = n;\n\t\
    long max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\tlong max_div48\
    \ = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51 = n;\n\t\
    long max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\tlong max_div55\
    \ = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58 = n;\n\t\
    long max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\tlong max_div62\
    \ = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65 = n;\n\t\
    long \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpn4pxsa0v.d(76): Error: no identifier for declarator `long`\\\
    n/tmp/tmpn4pxsa0v.d(76): Error: found `unittest` instead of statement\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn4pxsa0v.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = 1;\n\tlong d = 1;\n\tlong\
    \ i;\n\t\n\tfor(i = 2; i <= n; i++) {\n\t\td = d / i;\n\t\tif(d % 2 == 0) {\n\t\
    \t\tlargest = i;\n\t\t}\n\t}\n\t\n\treturn largest;\n}\nunittest\n{\n    alias\
    \ candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpjtzvpnvx.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427da5]\\n??:? void tmpjtzvpnvx.__unittest_L23_C1()\
    \ [0x427a90]\\n??:? void tmpjtzvpnvx.__modtest() [0x427b28]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bacb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a95e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42faf1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a935]\\n??:? runModuleUnitTests [0x42b8a1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42817b]\\n??:? _d_run_main [0x4280e6]\\n??:? main [0x427b3b]\\\
    n??:? __libc_start_main [0x938aa554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\tlong currentNumber = n;\n\t\n\twhile (currentNumber > 1)\n\t{\n\t\t\
    if (currentDivisor % 2 == 0)\n\t\t{\n\t\t\tcurrentDivisor = currentDivisor / 2;\n\
    \t\t}\n\t\telse\n\t\t{\n\t\t\tcurrentDivisor = currentDivisor / 2;\n\t\t\tcurrentNumber\
    \ = currentNumber / 2;\n\t\t}\n\t\t\n\t\tif (currentDivisor > maxDivisor)\n\t\t\
    {\n\t\t\tmaxDivisor = currentDivisor;\n\t\t}\n\t}\n\t\n\treturn maxDivisor;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong divisor =\
    \ 1;\n\t\n\twhile (divisor <= n)\n\t{\n\t\tif (n % divisor == 0)\n\t\t{\n\t\t\t\
    maxDivisor = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\treturn maxDivisor;\n}\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpwqdx2fw6.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d85]\\n??:? void tmpwqdx2fw6.__unittest_L23_C1()\
    \ [0x427a70]\\n??:? void tmpwqdx2fw6.__modtest() [0x427b08]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baab]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a93e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a915]\\n??:? runModuleUnitTests [0x42b881]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281d4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42815b]\\n??:? _d_run_main [0x4280c6]\\n??:? main [0x427b1b]\\\
    n??:? __libc_start_main [0xfe361554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong long divisor = 1;\n\tlong long max_divisor\
    \ = 1;\n\t\n\tfor (long long i = 1; i < n; i++)\n\t{\n\t\tif (n % i == 0)\n\t\t\
    {\n\t\t\tdivisor = i;\n\t\t\tmax_divisor = divisor;\n\t\t}\n\t\telse\n\t\t{\n\t\
    \t\tif (divisor > max_divisor)\n\t\t\t{\n\t\t\t\tmax_divisor = divisor;\n\t\t\t\
    }\n\t\t\tdivisor = 1;\n\t\t}\n\t}\n\treturn max_divisor;\n}\nunittest\n{\n   \
    \ alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n   \
    \ assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpycv5gb_s.d(10): Error: use `long` for a 64 bit integer instead\
    \ of `long long`\\n/tmp/tmpycv5gb_s.d(11): Error: use `long` for a 64 bit integer\
    \ instead of `long long`\\n/tmp/tmpycv5gb_s.d(13): Error: use `long` for a 64\
    \ bit integer instead of `long long`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpycv5gb_s.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n    long max_div = n;\n    long max_div2\
    \ = n;\n    long max_div3 = n;\n    long max_div4 = n;\n    long max_div5 = n;\n\
    \    long max_div6 = n;\n    long max_div7 = n;\n    long max_div8 = n;\n    long\
    \ max_div9 = n;\n    long max_div10 = n;\n    long max_div11 = n;\n    long max_div12\
    \ = n;\n    long max_div13 = n;\n    long max_div14 = n;\n    long max_div15 =\
    \ n;\n    long max_div16 = n;\n    long max_div17 = n;\n    long max_div18 = n;\n\
    \    long max_div19 = n;\n    long max_div20 = n;\n    long max_div21 = n;\n \
    \   long max_div22 = n;\n    long max_div23 = n;\n    long max_div24 = n;\n  \
    \  long max_div25 = n;\n    long max_div26 = n;\n    long max_div27 = n;\n   \
    \ long max_div28 = n;\n    long max_div29 = n;\n    long max_div30 = n;\n    long\
    \ max_div31 = n;\n    long max_div32 = n;\n    long max_div33 = n;\n    long max_div34\
    \ = n;\n    long max_div35 = n;\n    long max_div36 = n;\n    long max_div37 =\
    \ n;\n    long max_div38 = n;\n    long max_div39 = n;\n    long max_div40 = n;\n\
    \    long max_div41 = n;\n    long max_div42 = n;\n    long max_div43 = n;\n \
    \   long max_div44 = n;\n    long max_div45 = n;\n    long max_div46 = n;\n  \
    \  long max_div47 = n;\n    long max_div48 = n;\n    long max_div49 = n;\n   \
    \ long max_div50 = n;\n    long max_div51 = n;\n    long max_div52 = n;\n    long\
    \ max_div53 = n;\n    long max_div54 = n;\n    long max_div55 = n;\n    long max_div56\
    \ = n;\n    long max_div57 = n;\n    long max_div58 = n;\n    long max_div59 =\
    \ n;\n    long max_div60 = n;\n    long max_div61 = n;\n    long max_div62 = n;\n\
    \    long max_div63 = n;\n    long max_div64 = n;\n    long max_div65 = n;\n \
    \   long \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpimyaqyyh.d(76): Error: no identifier for declarator `long`\\\
    n/tmp/tmpimyaqyyh.d(76): Error: found `unittest` instead of statement\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpimyaqyyh.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n    long max_div = n;\n    long max_div2\
    \ = n;\n    long max_div3 = n;\n    long max_div4 = n;\n    long max_div5 = n;\n\
    \    long max_div6 = n;\n    long max_div7 = n;\n    long max_div8 = n;\n    long\
    \ max_div9 = n;\n    long max_div10 = n;\n    long max_div11 = n;\n    long max_div12\
    \ = n;\n    long max_div13 = n;\n    long max_div14 = n;\n    long max_div15 =\
    \ n;\n    long max_div16 = n;\n    long max_div17 = n;\n    long max_div18 = n;\n\
    \    long max_div19 = n;\n    long max_div20 = n;\n    long max_div21 = n;\n \
    \   long max_div22 = n;\n    long max_div23 = n;\n    long max_div24 = n;\n  \
    \  long max_div25 = n;\n    long max_div26 = n;\n    long max_div27 = n;\n   \
    \ long max_div28 = n;\n    long max_div29 = n;\n    long max_div30 = n;\n    long\
    \ max_div31 = n;\n    long max_div32 = n;\n    long max_div33 = n;\n    long max_div34\
    \ = n;\n    long max_div35 = n;\n    long max_div36 = n;\n    long max_div37 =\
    \ n;\n    long max_div38 = n;\n    long max_div39 = n;\n    long max_div40 = n;\n\
    \    long max_div41 = n;\n    long max_div42 = n;\n    long max_div43 = n;\n \
    \   long max_div44 = n;\n    long max_div45 = n;\n    long max_div46 = n;\n  \
    \  long max_div47 = n;\n    long max_div48 = n;\n    long max_div49 = n;\n   \
    \ long max_div50 = n;\n    long max_div51 = n;\n    long max_div52 = n;\n    long\
    \ max_div53 = n;\n    long max_div54 = n;\n    long max_div55 = n;\n    long max_div56\
    \ = n;\n    long max_div57 = n;\n    long max_div58 = n;\n    long max_div59 =\
    \ n;\n    long max_div60 = n;\n    long max_div61 = n;\n    long max_div62 = n;\n\
    \    long max_div63 = n;\n    long max_div64 = n;\n    long max_div65 = n;\n \
    \   long \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpr4pn0m8i.d(76): Error: no identifier for declarator `long`\\\
    n/tmp/tmpr4pn0m8i.d(76): Error: found `unittest` instead of statement\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr4pn0m8i.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong i;\n\tfor(i\
    \ = 2; i <= n/2; ++i)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tlargest = i;\n\t\t\
    \tbreak;\n\t\t}\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate =\
    \ largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpsc7swirk.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d9d]\\n??:? void tmpsc7swirk.__unittest_L22_C1()\
    \ [0x427a84]\\n??:? void tmpsc7swirk.__modtest() [0x427b1c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bac3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a956]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fae9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a92d]\\n??:? runModuleUnitTests [0x42b899]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281ec]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428173]\\n??:? _d_run_main [0x4280de]\\n??:? main [0x427b2f]\\\
    n??:? __libc_start_main [0x9a592554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2 = n;\n\
    \tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong max_div6\
    \ = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 = n;\n\tlong\
    \ max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\tlong max_div13\
    \ = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16 = n;\n\t\
    long max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\tlong max_div20\
    \ = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23 = n;\n\t\
    long max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\tlong max_div27\
    \ = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30 = n;\n\t\
    long max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\tlong max_div34\
    \ = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37 = n;\n\t\
    long max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\tlong max_div41\
    \ = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44 = n;\n\t\
    long max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\tlong max_div48\
    \ = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51 = n;\n\t\
    long max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\tlong max_div55\
    \ = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58 = n;\n\t\
    long max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\tlong max_div62\
    \ = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65 = n;\n\t\
    long \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpt3vmwvyr.d(76): Error: no identifier for declarator `long`\\\
    n/tmp/tmpt3vmwvyr.d(76): Error: found `unittest` instead of statement\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt3vmwvyr.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n    long largest_divisor = 1;\n    long\
    \ max_divisor = 1;\n    \n    for(long i = 1; i <= n; i++)\n    {\n        if(n%i\
    \ == 0)\n        {\n            if(i>largest_divisor)\n            {\n       \
    \         largest_divisor = i;\n            }\n        }\n    }\n    \n    return\
    \ largest_divisor;\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=c++,algorithm |>\n\
    <code>\n#include <iostream>\nusing namespace std;\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwxp63cg5.d(26): Error: declaration expected, not `<`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwxp63cg5.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong long int i;\n\tlong long int max_div\
    \ = n;\n\t\n\tfor (i = 2; i <= n; i++)\n\t{\n\t\tif (n % i == 0)\n\t\t{\n\t\t\t\
    if (max_div / i > i)\n\t\t\t\tmax_div = i;\n\t\t}\n\t}\n\treturn max_div;\n}\n\
    unittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvs1_5wy7.d(10): Error: use `long` for a 64 bit integer instead\
    \ of `long long`\\n/tmp/tmpvs1_5wy7.d(10): Error: no identifier for declarator\
    \ `long`\\n/tmp/tmpvs1_5wy7.d(11): Error: use `long` for a 64 bit integer instead\
    \ of `long long`\\n/tmp/tmpvs1_5wy7.d(11): Error: no identifier for declarator\
    \ `long`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvs1_5wy7.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = 1;\n\tlong div = 1;\n\t\
    while (div < n)\n\t{\n\t\tif (n % div == 0)\n\t\t{\n\t\t\tlargest = div;\n\t\t\
    }\n\t\tdiv++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2 = n;\n\
    \tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong max_div6\
    \ = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 = n;\n\tlong\
    \ max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\tlong max_div13\
    \ = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16 = n;\n\t\
    long max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\tlong max_div20\
    \ = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23 = n;\n\t\
    long max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\tlong max_div27\
    \ = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30 = n;\n\t\
    long max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\tlong max_div34\
    \ = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37 = n;\n\t\
    long max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\tlong max_div41\
    \ = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44 = n;\n\t\
    long max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\tlong max_div48\
    \ = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51 = n;\n\t\
    long max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\tlong max_div55\
    \ = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58 = n;\n\t\
    long max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\tlong max_div62\
    \ = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65 = n;\n\t\
    long \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmb3bp69s.d(76): Error: no identifier for declarator `long`\\\
    n/tmp/tmpmb3bp69s.d(76): Error: found `unittest` instead of statement\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmb3bp69s.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong max_divisor = 1;\n\tlong divisor\
    \ = 1;\n\twhile (divisor <= n)\n\t{\n\t\tif (n % divisor == 0)\n\t\t{\n\t\t\t\
    if (divisor > max_divisor)\n\t\t\t\tmax_divisor = divisor;\n\t\t}\n\t\tdivisor++;\n\
    \t}\n\treturn max_divisor;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpbf3xn04z.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d95]\\n??:? void tmpbf3xn04z.__unittest_L23_C1()\
    \ [0x427a80]\\n??:? void tmpbf3xn04z.__modtest() [0x427b18]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42babb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a94e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fae1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a925]\\n??:? runModuleUnitTests [0x42b891]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42816b]\\n??:? _d_run_main [0x4280d6]\\n??:? main [0x427b2b]\\\
    n??:? __libc_start_main [0x1fc5c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n    long max_div = n;\n    long max_div2\
    \ = n;\n    long max_div3 = n;\n    long max_div4 = n;\n    long max_div5 = n;\n\
    \    long max_div6 = n;\n    long max_div7 = n;\n    long max_div8 = n;\n    long\
    \ max_div9 = n;\n    long max_div10 = n;\n    long max_div11 = n;\n    long max_div12\
    \ = n;\n    long max_div13 = n;\n    long max_div14 = n;\n    long max_div15 =\
    \ n;\n    long max_div16 = n;\n    long max_div17 = n;\n    long max_div18 = n;\n\
    \    long max_div19 = n;\n    long max_div20 = n;\n    long max_div21 = n;\n \
    \   long max_div22 = n;\n    long max_div23 = n;\n    long max_div24 = n;\n  \
    \  long max_div25 = n;\n    long max_div26 = n;\n    long max_div27 = n;\n   \
    \ long max_div28 = n;\n    long max_div29 = n;\n    long max_div30 = n;\n    long\
    \ max_div31 = n;\n    long max_div32 = n;\n    long max_div33 = n;\n    long max_div34\
    \ = n;\n    long max_div35 = n;\n    long max_div36 = n;\n    long max_div37 =\
    \ n;\n    long max_div38 = n;\n    long max_div39 = n;\n    long max_div40 = n;\n\
    \    long max_div41 = n;\n    long max_div42 = n;\n    long max_div43 = n;\n \
    \   long max_div44 = n;\n    long max_div45 = n;\n    long max_div46 = n;\n  \
    \  long max_div47 = n;\n    long max_div48 = n;\n    long max_div49 = n;\n   \
    \ long max_div50 = n;\n    long max_div51 = n;\n    long max_div52 = n;\n    long\
    \ max_div53 = n;\n    long max_div54 = n;\n    long max_div55 = n;\n    long max_div56\
    \ = n;\n    long max_div57 = n;\n    long max_div58 = n;\n    long max_div59 =\
    \ n;\n    long max_div60 = n;\n    long max_div61 = n;\n    long max_div62 = n;\n\
    \    long max_div63 = n;\n    long max_div64 = n;\n    long max_div65 = n;\n \
    \   long \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpo0lejgfe.d(76): Error: no identifier for declarator `long`\\\
    n/tmp/tmpo0lejgfe.d(76): Error: found `unittest` instead of statement\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo0lejgfe.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2 = n;\n\
    \tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong max_div6\
    \ = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 = n;\n\tlong\
    \ max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\tlong max_div13\
    \ = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16 = n;\n\t\
    long max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\tlong max_div20\
    \ = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23 = n;\n\t\
    long max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\tlong max_div27\
    \ = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30 = n;\n\t\
    long max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\tlong max_div34\
    \ = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37 = n;\n\t\
    long max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\tlong max_div41\
    \ = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44 = n;\n\t\
    long max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\tlong max_div48\
    \ = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51 = n;\n\t\
    long max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\tlong max_div55\
    \ = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58 = n;\n\t\
    long max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\tlong max_div62\
    \ = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65 = n;\n\t\
    long \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4ttmpb41.d(76): Error: no identifier for declarator `long`\\\
    n/tmp/tmp4ttmpb41.d(76): Error: found `unittest` instead of statement\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4ttmpb41.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong max_div = 1;\n\tlong max_div2 = 1;\n\
    \tlong max_div3 = 1;\n\tlong max_div4 = 1;\n\tlong max_div5 = 1;\n\tlong max_div6\
    \ = 1;\n\tlong max_div7 = 1;\n\tlong max_div8 = 1;\n\tlong max_div9 = 1;\n\tlong\
    \ max_div10 = 1;\n\tlong max_div11 = 1;\n\tlong max_div12 = 1;\n\tlong max_div13\
    \ = 1;\n\tlong max_div14 = 1;\n\tlong max_div15 = 1;\n\tlong max_div16 = 1;\n\t\
    long max_div17 = 1;\n\tlong max_div18 = 1;\n\tlong max_div19 = 1;\n\tlong max_div20\
    \ = 1;\n\tlong max_div21 = 1;\n\tlong max_div22 = 1;\n\tlong max_div23 = 1;\n\t\
    long max_div24 = 1;\n\tlong max_div25 = 1;\n\tlong max_div26 = 1;\n\tlong max_div27\
    \ = 1;\n\tlong max_div28 = 1;\n\tlong max_div29 = 1;\n\tlong max_div30 = 1;\n\t\
    long max_div31 = 1;\n\tlong max_div32 = 1;\n\tlong max_div33 = 1;\n\tlong max_div34\
    \ = 1;\n\tlong max_div35 = 1;\n\tlong max_div36 = 1;\n\tlong max_div37 = 1;\n\t\
    long max_div38 = 1;\n\tlong max_div39 = 1;\n\tlong max_div40 = 1;\n\tlong max_div41\
    \ = 1;\n\tlong max_div42 = 1;\n\tlong max_div43 = 1;\n\tlong max_div44 = 1;\n\t\
    long max_div45 = 1;\n\tlong max_div46 = 1;\n\tlong max_div47 = 1;\n\tlong max_div48\
    \ = 1;\n\tlong max_div49 = 1;\n\tlong max_div50 = 1;\n\tlong max_div51 = 1;\n\t\
    long max_div52 = 1;\n\tlong max_div53 = 1;\n\tlong max_div54 = 1;\n\tlong max_div55\
    \ = 1;\n\tlong max_div56 = 1;\n\tlong max_div57 = 1;\n\tlong max_div58 = 1;\n\t\
    long max_div59 = 1;\n\tlong max_div60 = 1;\n\tlong max_div61 = 1;\n\tlong max_div62\
    \ = 1;\n\tlong max_div63 = 1;\n\tlong max_div64 = 1;\n\tlong max_div65 = 1;\n\t\
    long max_div66 = 1;\n\tlong max_div67 = 1;\n\tlong max_div68 = 1;\n\tlong max_div69\
    \ = 1;\n\tlong max_div70 = 1;\n\tlong max_div71 = 1;\n\tlong max_div72 = 1;\n\t\
    long \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_25t_0_v.d(83): Error: no identifier for declarator `long`\\\
    n/tmp/tmp_25t_0_v.d(83): Error: found `unittest` instead of statement\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_25t_0_v.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\t\n\twhile (currentDivisor <= n)\n\t{\n\t\tif (n % currentDivisor ==\
    \ 0)\n\t\t{\n\t\t\tcurrentDivisor++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmaxDivisor\
    \ = currentDivisor;\n\t\t\tcurrentDivisor = 1;\n\t\t}\n\t}\n\t\n\treturn maxDivisor;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\tlong\
    \ d = 1;\n\twhile(d < n) //keep dividing n until we get to 1\n\t{\n\t\tlargest\
    \ = d;\n\t\td *= 2;\n\t}\n\treturn largest;\n}\n/*\n For a given number n, find\
    \ the smallest number that divides n evenly, larger than n\n    >>> smallest_divisor(15)\n\
    \    3\n    \n*/\nlong smallest_divisor(long n) \n{\n\tlong smallest = n; //start\
    \ with n\n\tlong d = 1;\n\twhile(d > n) //keep dividing n until we get to 1\n\t\
    {\n\t\tsmallest = d;\n\t\td /= 2;\n\t}\n\treturn smallest;\n}\nunittest\n{\n \
    \   alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n \
    \   assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpxle2e4qo.d(40): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dfd]\\n??:? void tmpxle2e4qo.__unittest_L36_C1()\
    \ [0x427ae4]\\n??:? void tmpxle2e4qo.__modtest() [0x427b7c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb23]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9b6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb49]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42fff8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fad5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a98d]\\n??:? runModuleUnitTests [0x42b8f9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42824c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281d3]\\n??:? _d_run_main [0x42813e]\\n??:? main [0x427b8f]\\\
    n??:? __libc_start_main [0xbe360554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong i;\n\tfor(i=1;i<=n;i++)\
    \ {\n\t\tif(n % i == 0) {\n\t\t\tlargest = i;\n\t\t}\n\t}\n\treturn largest;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpy7l1pm7_.d(23): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d8d]\\n??:? void tmpy7l1pm7_.__unittest_L19_C1()\
    \ [0x427a78]\\n??:? void tmpy7l1pm7_.__modtest() [0x427b10]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bab3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a946]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a91d]\\n??:? runModuleUnitTests [0x42b889]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281dc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428163]\\n??:? _d_run_main [0x4280ce]\\n??:? main [0x427b23]\\\
    n??:? __libc_start_main [0xa817a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2 = n;\n\
    \tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong max_div6\
    \ = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 = n;\n\tlong\
    \ max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\tlong max_div13\
    \ = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16 = n;\n\t\
    long max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\tlong max_div20\
    \ = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23 = n;\n\t\
    long max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\tlong max_div27\
    \ = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30 = n;\n\t\
    long max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\tlong max_div34\
    \ = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37 = n;\n\t\
    long max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\tlong max_div41\
    \ = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44 = n;\n\t\
    long max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\tlong max_div48\
    \ = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51 = n;\n\t\
    long max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\tlong max_div55\
    \ = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58 = n;\n\t\
    long max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\tlong max_div62\
    \ = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65 = n;\n\t\
    long \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpe3aikqui.d(76): Error: no identifier for declarator `long`\\\
    n/tmp/tmpe3aikqui.d(76): Error: found `unittest` instead of statement\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpe3aikqui.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2 = n;\n\
    \tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong max_div6\
    \ = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 = n;\n\tlong\
    \ max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\tlong max_div13\
    \ = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16 = n;\n\t\
    long max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\tlong max_div20\
    \ = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23 = n;\n\t\
    long max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\tlong max_div27\
    \ = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30 = n;\n\t\
    long max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\tlong max_div34\
    \ = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37 = n;\n\t\
    long max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\tlong max_div41\
    \ = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44 = n;\n\t\
    long max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\tlong max_div48\
    \ = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51 = n;\n\t\
    long max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\tlong max_div55\
    \ = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58 = n;\n\t\
    long max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\tlong max_div62\
    \ = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65 = n;\n\t\
    long \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7p6qcdvz.d(76): Error: no identifier for declarator `long`\\\
    n/tmp/tmp7p6qcdvz.d(76): Error: found `unittest` instead of statement\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7p6qcdvz.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = n; \n\tlong d = 1;\n\t\
    long i;\n\t\n\tfor(i = 2; i <= largest/2; ++i)\n\t{\n\t\tif(n % i == 0)\n\t\t\
    {\n\t\t\td = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tlargest = d;\n\t\n\treturn largest;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpk9d27j57.d(33): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dad]\\n??:? void tmpk9d27j57.__unittest_L27_C1()\
    \ [0x427ad6]\\n??:? void tmpk9d27j57.__modtest() [0x427b2c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bad3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a966]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42faf9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a93d]\\n??:? runModuleUnitTests [0x42b8a9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281fc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428183]\\n??:? _d_run_main [0x4280ee]\\n??:? main [0x427b3f]\\\
    n??:? __libc_start_main [0xf3769554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n    long max_div = n;\n    long max_div2\
    \ = n;\n    long max_div3 = n;\n    long max_div4 = n;\n    long max_div5 = n;\n\
    \    long max_div6 = n;\n    long max_div7 = n;\n    long max_div8 = n;\n    long\
    \ max_div9 = n;\n    long max_div10 = n;\n    long max_div11 = n;\n    long max_div12\
    \ = n;\n    long max_div13 = n;\n    long max_div14 = n;\n    long max_div15 =\
    \ n;\n    long max_div16 = n;\n    long max_div17 = n;\n    long max_div18 = n;\n\
    \    long max_div19 = n;\n    long max_div20 = n;\n    long max_div21 = n;\n \
    \   long max_div22 = n;\n    long max_div23 = n;\n    long max_div24 = n;\n  \
    \  long max_div25 = n;\n    long max_div26 = n;\n    long max_div27 = n;\n   \
    \ long max_div28 = n;\n    long max_div29 = n;\n    long max_div30 = n;\n    long\
    \ max_div31 = n;\n    long max_div32 = n;\n    long max_div33 = n;\n    long max_div34\
    \ = n;\n    long max_div35 = n;\n    long max_div36 = n;\n    long max_div37 =\
    \ n;\n    long max_div38 = n;\n    long max_div39 = n;\n    long max_div40 = n;\n\
    \    long max_div41 = n;\n    long max_div42 = n;\n    long max_div43 = n;\n \
    \   long max_div44 = n;\n    long max_div45 = n;\n    long max_div46 = n;\n  \
    \  long max_div47 = n;\n    long max_div48 = n;\n    long max_div49 = n;\n   \
    \ long max_div50 = n;\n    long max_div51 = n;\n    long max_div52 = n;\n    long\
    \ max_div53 = n;\n    long max_div54 = n;\n    long max_div55 = n;\n    long max_div56\
    \ = n;\n    long max_div57 = n;\n    long max_div58 = n;\n    long max_div59 =\
    \ n;\n    long max_div60 = n;\n    long max_div61 = n;\n    long max_div62 = n;\n\
    \    long max_div63 = n;\n    long max_div64 = n;\n    long max_div65 = n;\n \
    \   long \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbph7u5ev.d(76): Error: no identifier for declarator `long`\\\
    n/tmp/tmpbph7u5ev.d(76): Error: found `unittest` instead of statement\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbph7u5ev.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = 1;\n\tlong i;\n\tfor(i\
    \ = 2; i <= n; i++)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tif(largest < i)\n\t\
    \t\t\tlargest = i;\n\t\t}\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpul9x0vqh.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d9d]\\n??:? void tmpul9x0vqh.__unittest_L22_C1()\
    \ [0x427a84]\\n??:? void tmpul9x0vqh.__modtest() [0x427b1c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bac3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a956]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fae9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a92d]\\n??:? runModuleUnitTests [0x42b899]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281ec]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428173]\\n??:? _d_run_main [0x4280de]\\n??:? main [0x427b2f]\\\
    n??:? __libc_start_main [0x57aac554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\tlong\
    \ d = 1;\n\twhile (n > 1) {\n\t\tif (n % d == 0) {\n\t\t\tlargest = d;\n\t\t}\n\
    \t\td++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = 1;\n\tlong div = 1;\n\t\
    \n\twhile(div <= n) \n\t{\n\t\tif(n % div == 0) \n\t\t{\n\t\t\tlargest = div;\n\
    \t\t}\n\t\tdiv++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpn_wqm2pr.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d85]\\n??:? void tmpn_wqm2pr.__unittest_L23_C1()\
    \ [0x427a70]\\n??:? void tmpn_wqm2pr.__modtest() [0x427b08]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baab]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a93e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a915]\\n??:? runModuleUnitTests [0x42b881]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281d4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42815b]\\n??:? _d_run_main [0x4280c6]\\n??:? main [0x427b1b]\\\
    n??:? __libc_start_main [0x7d0de554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = 1;\n\tlong divisor = 1;\n\
    \t\n\twhile (n > divisor) {\n\t\tif (n % divisor == 0) {\n\t\t\tlargest = divisor;\n\
    \t\t}\n\t\tdivisor++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong divisor = 1;\n\
    \twhile (divisor < n) {\n\t\tif (n % divisor == 0) {\n\t\t\tlargest = divisor;\n\
    \t\t}\n\t\tdivisor++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2 = n;\n\
    \tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong max_div6\
    \ = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 = n;\n\tlong\
    \ max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\tlong max_div13\
    \ = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16 = n;\n\t\
    long max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\tlong max_div20\
    \ = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23 = n;\n\t\
    long max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\tlong max_div27\
    \ = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30 = n;\n\t\
    long max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\tlong max_div34\
    \ = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37 = n;\n\t\
    long max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\tlong max_div41\
    \ = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44 = n;\n\t\
    long max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\tlong max_div48\
    \ = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51 = n;\n\t\
    long max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\tlong max_div55\
    \ = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58 = n;\n\t\
    long max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\tlong max_div62\
    \ = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65 = n;\n\t\
    long \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpah6fz_q8.d(76): Error: no identifier for declarator `long`\\\
    n/tmp/tmpah6fz_q8.d(76): Error: found `unittest` instead of statement\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpah6fz_q8.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = 0;\n\tlong i;\n\tfor(i\
    \ = 1; i <= n; i++){\n\t\tif(n%i == 0){\n\t\t\tlargest = i;\n\t\t\tbreak;\n\t\t\
    }\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpl3fwj1w0.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d8d]\\n??:? void tmpl3fwj1w0.__unittest_L20_C1()\
    \ [0x427aba]\\n??:? void tmpl3fwj1w0.__modtest() [0x427b10]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bab3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a946]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a91d]\\n??:? runModuleUnitTests [0x42b889]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281dc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428163]\\n??:? _d_run_main [0x4280ce]\\n??:? main [0x427b23]\\\
    n??:? __libc_start_main [0xee561554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = 0;\n\tlong i;\n\tfor(i=1;i<=n;i++)\n\
    \t{\n\t\tif(n%i==0)\n\t\t{\n\t\t\tif(n>largest)\n\t\t\t\tlargest = n;\n\t\t}\n\
    \t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpg56olpjh.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d9d]\\n??:? void tmpg56olpjh.__unittest_L22_C1()\
    \ [0x427a88]\\n??:? void tmpg56olpjh.__modtest() [0x427b20]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bac3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a956]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fae9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a92d]\\n??:? runModuleUnitTests [0x42b899]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281ec]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428173]\\n??:? _d_run_main [0x4280de]\\n??:? main [0x427b33]\\\
    n??:? __libc_start_main [0x54b28554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n    long max_div = n;\n    long max_div2\
    \ = n;\n    long max_div3 = n;\n    long max_div4 = n;\n    long max_div5 = n;\n\
    \    long max_div6 = n;\n    long max_div7 = n;\n    long max_div8 = n;\n    long\
    \ max_div9 = n;\n    long max_div10 = n;\n    long max_div11 = n;\n    long max_div12\
    \ = n;\n    long max_div13 = n;\n    long max_div14 = n;\n    long max_div15 =\
    \ n;\n    long max_div16 = n;\n    long max_div17 = n;\n    long max_div18 = n;\n\
    \    long max_div19 = n;\n    long max_div20 = n;\n    long max_div21 = n;\n \
    \   long max_div22 = n;\n    long max_div23 = n;\n    long max_div24 = n;\n  \
    \  long max_div25 = n;\n    long max_div26 = n;\n    long max_div27 = n;\n   \
    \ long max_div28 = n;\n    long max_div29 = n;\n    long max_div30 = n;\n    long\
    \ max_div31 = n;\n    long max_div32 = n;\n    long max_div33 = n;\n    long max_div34\
    \ = n;\n    long max_div35 = n;\n    long max_div36 = n;\n    long max_div37 =\
    \ n;\n    long max_div38 = n;\n    long max_div39 = n;\n    long max_div40 = n;\n\
    \    long max_div41 = n;\n    long max_div42 = n;\n    long max_div43 = n;\n \
    \   long max_div44 = n;\n    long max_div45 = n;\n    long max_div46 = n;\n  \
    \  long max_div47 = n;\n    long max_div48 = n;\n    long max_div49 = n;\n   \
    \ long max_div50 = n;\n    long max_div51 = n;\n    long max_div52 = n;\n    long\
    \ max_div53 = n;\n    long max_div54 = n;\n    long max_div55 = n;\n    long max_div56\
    \ = n;\n    long max_div57 = n;\n    long max_div58 = n;\n    long max_div59 =\
    \ n;\n    long max_div60 = n;\n    long max_div61 = n;\n    long max_div62 = n;\n\
    \    long max_div63 = n;\n    long max_div64 = n;\n    long max_div65 = n;\n \
    \   long \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6jq4169l.d(76): Error: no identifier for declarator `long`\\\
    n/tmp/tmp6jq4169l.d(76): Error: found `unittest` instead of statement\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6jq4169l.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong max_divisor = 1;\n\tlong max_divisor2\
    \ = 1;\n\tlong max_divisor3 = 1;\n\tlong max_divisor4 = 0;\n\tlong max_divisor5\
    \ = 0;\n\tlong max_divisor6 = 0;\n\tlong max_divisor7 = 0;\n\tlong max_divisor8\
    \ = 0;\n\tlong max_divisor9 = 0;\n\tlong max_divisor10 = 0;\n\tlong max_divisor11\
    \ = 0;\n\tlong max_divisor12 = 0;\n\tlong max_divisor13 = 0;\n\tlong max_divisor14\
    \ = 0;\n\tlong max_divisor15 = 0;\n\tlong max_divisor16 = 0;\n\tlong max_divisor17\
    \ = 0;\n\tlong max_divisor18 = 0;\n\tlong max_divisor19 = 0;\n\tlong max_divisor20\
    \ = 0;\n\tlong max_divisor21 = 0;\n\tlong max_divisor22 = 0;\n\tlong max_divisor23\
    \ = 0;\n\tlong max_divisor24 = 0;\n\tlong max_divisor25 = 0;\n\tlong max_divisor26\
    \ = 0;\n\tlong max_divisor27 = 0;\n\tlong max_divisor28 = 0;\n\tlong max_divisor29\
    \ = 0;\n\tlong max_divisor30 = 0;\n\tlong max_divisor31 = 0;\n\tlong max_divisor32\
    \ = 0;\n\tlong max_divisor33 = 0;\n\tlong max_divisor34 = 0;\n\tlong max_divisor35\
    \ = 0;\n\tlong max_divisor36 = 0;\n\tlong max_divisor37 = 0;\n\tlong max_divisor38\
    \ = 0;\n\tlong max_divisor39 = 0;\n\tlong max_divisor40 = 0;\n\tlong max_divisor41\
    \ = 0;\n\tlong max_divisor42 = 0;\n\tlong max_divisor43 = 0;\n\tlong max_divisor44\
    \ = 0;\n\tlong max_divisor45 = 0;\n\tlong max_divisor46 = 0;\n\tlong max_divisor47\
    \ = 0;\n\tlong max_divisor48 = 0;\n\tlong max_divisor49 = 0;\n\tlong max_divisor50\
    \ = 0;\n\tlong max_divisor51 = 0;\n\tlong max_divisor52 = 0;\n\tlong max_divisor53\
    \ = 0;\n\tlong max_divisor54 = 0;\n\tlong max_divisor55 = 0;\n\tlong max_divisor56\
    \ = 0;\n\tlong max_divisor57 = 0;\n\tlong max_divisor58 = 0;\n\tlong max_divisor59\
    \ = 0;\n\tlong max_divisor60 = 0;\n\tlong max_divisor61 = 0;\n\tlong max_divisor62\
    \ = 0;\n\tlong max_divisor63 = 0;\n\tlong max_divisor64 = 0;\n\tlong max_divisor65\
    \ = 0;\n\tlong max_divisor66 = 0;\n\tlong max_divisor67 = 0;\n\tlong max_divisor68\
    \ = 0;\n\tlong max_divisor69 = 0;\n\tlong max_divisor70 = 0;\n\tlong max_divisor71\
    \ = 0;\n\tlong max_divisor72 = 0;\n\tlong max_divisor73 = 0;\n\tlong max_\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpo_imq8na.d(84): Error: semicolon expected, not `unittest`\\n/tmp/tmpo_imq8na.d(84):\
    \ Error: found `unittest` instead of statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpo_imq8na.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = 1;\n\tlong i;\n\tfor(i\
    \ = 2; i <= n; i++)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tlargest = i;\n\t\t\t\
    break;\n\t\t}\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpr_f36vol.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d95]\\n??:? void tmpr_f36vol.__unittest_L22_C1()\
    \ [0x427a7c]\\n??:? void tmpr_f36vol.__modtest() [0x427b14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42babb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a94e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fae1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a925]\\n??:? runModuleUnitTests [0x42b891]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42816b]\\n??:? _d_run_main [0x4280d6]\\n??:? main [0x427b27]\\\
    n??:? __libc_start_main [0xe69c4554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\t\n\twhile(currentDivisor <= n)\n\t{\n\t\tif(n % currentDivisor == 0)\n\
    \t\t{\n\t\t\tmaxDivisor = currentDivisor;\n\t\t}\n\t\tcurrentDivisor++;\n\t}\n\
    \t\n\treturn maxDivisor;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp1tbimrbj.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d85]\\n??:? void tmp1tbimrbj.__unittest_L24_C1()\
    \ [0x427a70]\\n??:? void tmp1tbimrbj.__modtest() [0x427b08]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baab]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a93e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a915]\\n??:? runModuleUnitTests [0x42b881]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281d4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42815b]\\n??:? _d_run_main [0x4280c6]\\n??:? main [0x427b1b]\\\
    n??:? __libc_start_main [0x9b13e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2 = n;\n\
    \tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong max_div6\
    \ = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 = n;\n\tlong\
    \ max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\tlong max_div13\
    \ = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16 = n;\n\t\
    long max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\tlong max_div20\
    \ = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23 = n;\n\t\
    long max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\tlong max_div27\
    \ = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30 = n;\n\t\
    long max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\tlong max_div34\
    \ = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37 = n;\n\t\
    long max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\tlong max_div41\
    \ = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44 = n;\n\t\
    long max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\tlong max_div48\
    \ = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51 = n;\n\t\
    long max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\tlong max_div55\
    \ = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58 = n;\n\t\
    long max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\tlong max_div62\
    \ = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65 = n;\n\t\
    long \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpc8crlan2.d(76): Error: no identifier for declarator `long`\\\
    n/tmp/tmpc8crlan2.d(76): Error: found `unittest` instead of statement\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc8crlan2.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong maxDiv = 1;\n\tlong div = 1;\n\t\n\
    \twhile(div <= n)\n\t{\n\t\tif(n % div == 0)\n\t\t{\n\t\t\tmaxDiv = div;\n\t\t\
    }\n\t\tdiv++;\n\t}\n\t\n\treturn maxDiv;\n}\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpcjsd12g0.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d85]\\n??:? void tmpcjsd12g0.__unittest_L24_C1()\
    \ [0x427a70]\\n??:? void tmpcjsd12g0.__modtest() [0x427b08]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baab]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a93e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a915]\\n??:? runModuleUnitTests [0x42b881]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281d4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42815b]\\n??:? _d_run_main [0x4280c6]\\n??:? main [0x427b1b]\\\
    n??:? __libc_start_main [0xc04f7554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\tlong\
    \ divisor = 1;\n\twhile (divisor * divisor <= n) //while n is greater than or\
    \ equal to square of largest divisor\n\t{\n\t\tif (n % divisor == 0) //if n is\
    \ divisible by divisor\n\t\t{\n\t\t\tlargest = divisor;\n\t\t}\n\t\tdivisor++;\n\
    \t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp3wfuumr6.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d8d]\\n??:? void tmp3wfuumr6.__unittest_L22_C1()\
    \ [0x427ab6]\\n??:? void tmp3wfuumr6.__modtest() [0x427b0c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bab3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a946]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a91d]\\n??:? runModuleUnitTests [0x42b889]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281dc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428163]\\n??:? _d_run_main [0x4280ce]\\n??:? main [0x427b1f]\\\
    n??:? __libc_start_main [0xc8dec554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = 1;\n\tlong d = 1;\n\tlong\
    \ i;\n\t\n\tfor(i = 2; i <= n; i++)\n\t{\n\t\td = i * i;\n\t\tif(d > largest)\n\
    \t\t\tlargest = d;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp0egburrs.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427da5]\\n??:? void tmp0egburrs.__unittest_L22_C1()\
    \ [0x427a8c]\\n??:? void tmp0egburrs.__modtest() [0x427b24]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bacb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a95e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42faf1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a935]\\n??:? runModuleUnitTests [0x42b8a1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42817b]\\n??:? _d_run_main [0x4280e6]\\n??:? main [0x427b37]\\\
    n??:? __libc_start_main [0xae3cb554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong d = 1;\n\tlong\
    \ m = n;\n\twhile (m > 1) {\n\t\tm /= 2;\n\t\td *= 2;\n\t}\n\twhile (d > 1) {\n\
    \t\tif (m % d == 0) {\n\t\t\tlargest = d;\n\t\t}\n\t\td /= 2;\n\t}\n\treturn largest;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpzvtf8mzz.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dad]\\n??:? void tmpzvtf8mzz.__unittest_L25_C1()\
    \ [0x427a98]\\n??:? void tmpzvtf8mzz.__modtest() [0x427b30]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bad3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a966]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42faf9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a93d]\\n??:? runModuleUnitTests [0x42b8a9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281fc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428183]\\n??:? _d_run_main [0x4280ee]\\n??:? main [0x427b43]\\\
    n??:? __libc_start_main [0xd9a3f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n    long long divisor = 1;\n    long long\
    \ max_divisor = 1;\n    \n    for(long long i = 1; i <= n; i++) {\n        divisor\
    \ *= i;\n        if(divisor > max_divisor) {\n            max_divisor = divisor;\n\
    \        }\n    }\n    \n    return max_divisor;\n}\n</code>\n<|/ a dscore=1 |>\n\
    <| a dscore=0 |>\n<code>\n#include <stdio.h>\n#include <math.h>\nunittest\n{\n\
    \    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpy0jewr6q.d(10): Error: use `long` for a 64 bit integer instead\
    \ of `long long`\\n/tmp/tmpy0jewr6q.d(11): Error: use `long` for a 64 bit integer\
    \ instead of `long long`\\n/tmp/tmpy0jewr6q.d(13): Error: use `long` for a 64\
    \ bit integer instead of `long long`\\n/tmp/tmpy0jewr6q.d(22): Error: declaration\
    \ expected, not `<`\\n/tmp/tmpy0jewr6q.d(32): Error: declaration expected, not\
    \ `assert`\\n/tmp/tmpy0jewr6q.d(33): Error: declaration expected, not `assert`\\\
    n/tmp/tmpy0jewr6q.d(34): Error: declaration expected, not `assert`\\n/tmp/tmpy0jewr6q.d(35):\
    \ Error: declaration expected, not `assert`\\n/tmp/tmpy0jewr6q.d(36): Error: declaration\
    \ expected, not `assert`\\n/tmp/tmpy0jewr6q.d(37): Error: unrecognized declaration\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy0jewr6q.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = 0;\n\tlong i;\n\tfor(i=1;i<=n;i++)\n\
    \t{\n\t\tif(n%i==0)\n\t\t{\n\t\t\tif(n>largest)\n\t\t\t\tlargest = n;\n\t\t}\n\
    \t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp7bd2vt2q.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d9d]\\n??:? void tmp7bd2vt2q.__unittest_L22_C1()\
    \ [0x427a88]\\n??:? void tmp7bd2vt2q.__modtest() [0x427b20]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bac3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a956]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fae9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a92d]\\n??:? runModuleUnitTests [0x42b899]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281ec]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428173]\\n??:? _d_run_main [0x4280de]\\n??:? main [0x427b33]\\\
    n??:? __libc_start_main [0x841b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong maxDiv = 1;\n\tlong maxDiv2 = 1;\n\
    \tlong div = 1;\n\tlong div2 = 1;\n\tlong div3 = 1;\n\tlong div4 = 1;\n\tlong\
    \ div5 = 1;\n\tlong div6 = 1;\n\tlong div7 = 1;\n\tlong div8 = 1;\n\tlong div9\
    \ = 1;\n\tlong div10 = 1;\n\tlong div11 = 1;\n\tlong div12 = 1;\n\tlong div13\
    \ = 1;\n\tlong div14 = 1;\n\tlong div15 = 1;\n\tlong div16 = 1;\n\tlong div17\
    \ = 1;\n\tlong div18 = 1;\n\tlong div19 = 1;\n\tlong div20 = 1;\n\tlong div21\
    \ = 1;\n\tlong div22 = 1;\n\tlong div23 = 1;\n\tlong div24 = 1;\n\tlong div25\
    \ = 1;\n\tlong div26 = 1;\n\tlong div27 = 1;\n\tlong div28 = 1;\n\tlong div29\
    \ = 1;\n\tlong div30 = 1;\n\tlong div31 = 1;\n\tlong div32 = 1;\n\tlong div33\
    \ = 1;\n\tlong div34 = 1;\n\tlong div35 = 1;\n\tlong div36 = 1;\n\tlong div37\
    \ = 1;\n\tlong div38 = 1;\n\tlong div39 = 1;\n\tlong div40 = 1;\n\tlong div41\
    \ = 1;\n\tlong div42 = 1;\n\tlong div43 = 1;\n\tlong div44 = 1;\n\tlong div45\
    \ = 1;\n\tlong div46 = 1;\n\tlong div47 = 1;\n\tlong div48 = 1;\n\tlong div49\
    \ = 1;\n\tlong div50 = 1;\n\tlong div51 = 1;\n\tlong div52 = 1;\n\tlong div53\
    \ = 1;\n\tlong div54 = 1;\n\tlong div55 = 1;\n\tlong div56 = 1;\n\tlong div57\
    \ = 1;\n\tlong div58 = 1;\n\tlong div59 = 1;\n\tlong div60 = 1;\n\tlong div61\
    \ = 1;\n\tlong div62 = 1;\n\tlong div63 = 1;\n\tlong div64 = 1;\n\tlong div65\
    \ = 1;\n\tlong div66 = 1;\n\tlong div67 = 1;\n\tlong div68 = 1;\n\tlong div69\
    \ = 1;\n\tlong div70 = 1;\n\tlong div71 = 1;\n\tlong div72 = 1;\n\tlong div73\
    \ = 1;\n\tlong div74 = 1;\n\tlong div75 = 1;\n\tlong div76 = 1;\n\tlong div77\
    \ = 1;\n\tlong div78 = 1;\n\tlong div79 = 1;\n\tlong div80 = 1;\n\tlong div81\
    \ = 1;\n\tlong div82 = \nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmps0xziw27.d(94): Error: expression expected, not `unittest`\\\
    n/tmp/tmps0xziw27.d(95): Error: semicolon expected, not `{`\\n/tmp/tmps0xziw27.d(104):\
    \ Error: found `End of File` when expecting `}` following compound statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps0xziw27.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\t\
    \n\twhile (div < n)\n\t{\n\t\tif (n % div == 0)\n\t\t{\n\t\t\tlargest = div;\n\
    \t\t}\n\t\tdiv++;\n\t}\n\t\n\treturn largest;\n}\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong divisor = 1;\n\
    \twhile (divisor < n) {\n\t\tif (n % divisor == 0) {\n\t\t\tlargest = divisor;\n\
    \t\t}\n\t\tdivisor++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong maxDiv = 1;\n\tlong div = 1;\n\t\
    long divMax = n;\n\twhile(divMax > 1)\n\t{\n\t\tdivMax = divMax/2;\n\t\tdiv++;\n\
    \t}\n\twhile(div > 0)\n\t{\n\t\tlong divMax = divMax/2;\n\t\tlong divMin = divMax/2;\n\
    \t\tif(divMax > n)\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t\tif(divMin > n)\n\t\t{\n\t\t\
    \tbreak;\n\t\t}\n\t\tif(divMax == n)\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t\tif(divMin\
    \ == n)\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t\tif(divMax == divMin)\n\t\t{\n\t\t\tbreak;\n\
    \t\t}\n\t\tdiv--;\n\t}\n\treturn divMax;\n}\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsv7txe_p.d(20): Error: variable `divMax` is shadowing variable\
    \ `tmpsv7txe_p.largest_divisor.divMax`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpsv7txe_p.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = 1;\n\tlong i;\n\tfor(i\
    \ = 2; i <= n; i++)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tlargest = i;\n\t\t\t\
    break;\n\t\t}\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpvfy_m4dw.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d95]\\n??:? void tmpvfy_m4dw.__unittest_L22_C1()\
    \ [0x427a7c]\\n??:? void tmpvfy_m4dw.__modtest() [0x427b14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42babb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a94e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fae1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a925]\\n??:? runModuleUnitTests [0x42b891]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42816b]\\n??:? _d_run_main [0x4280d6]\\n??:? main [0x427b27]\\\
    n??:? __libc_start_main [0x3c399554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong long i;\n\tlong long maxDivisor =\
    \ 1;\n\tlong long divisor = 1;\n\t\n\tfor(i = 2; i <= n; i++)\n\t{\n\t\tdivisor\
    \ = i;\n\t\twhile(divisor <= n && n % divisor == 0)\n\t\t{\n\t\t\tdivisor++;\n\
    \t\t}\n\t\tif(divisor > maxDivisor)\n\t\t{\n\t\t\tmaxDivisor = divisor;\n\t\t\
    }\n\t}\n\treturn maxDivisor;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbl7vcn3z.d(10): Error: use `long` for a 64 bit integer instead\
    \ of `long long`\\n/tmp/tmpbl7vcn3z.d(11): Error: use `long` for a 64 bit integer\
    \ instead of `long long`\\n/tmp/tmpbl7vcn3z.d(12): Error: use `long` for a 64\
    \ bit integer instead of `long long`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpbl7vcn3z.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\tlong currentNum = 1;\n\t\n\twhile (currentDivisor <= n)\n\t{\n\t\tcurrentNum\
    \ = currentDivisor * currentDivisor;\n\t\tif (currentNum > n)\n\t\t\tbreak;\n\t\
    \t\n\t\tif (currentNum > maxDivisor)\n\t\t\tmaxDivisor = currentNum;\n\t\t\n\t\
    \tcurrentDivisor++;\n\t}\n\t\n\treturn maxDivisor;\n}\nunittest\n{\n    alias\
    \ candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpn454iugp.d(33): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d9d]\\n??:? void tmpn454iugp.__unittest_L28_C1()\
    \ [0x427aa5]\\n??:? void tmpn454iugp.__modtest() [0x427b1c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bac3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a956]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fae9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a92d]\\n??:? runModuleUnitTests [0x42b899]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281ec]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428173]\\n??:? _d_run_main [0x4280de]\\n??:? main [0x427b2f]\\\
    n??:? __libc_start_main [0x4708554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong i;\n\tfor(i\
    \ = 2; i <= n/2; i++)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tlargest = i;\n\t\t\
    \tbreak;\n\t\t}\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate =\
    \ largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpwtx70yal.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d9d]\\n??:? void tmpwtx70yal.__unittest_L22_C1()\
    \ [0x427a84]\\n??:? void tmpwtx70yal.__modtest() [0x427b1c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bac3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a956]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fae9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a92d]\\n??:? runModuleUnitTests [0x42b899]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281ec]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428173]\\n??:? _d_run_main [0x4280de]\\n??:? main [0x427b2f]\\\
    n??:? __libc_start_main [0x2fbd8554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = 0;\n\tlong i;\n\tfor(i=1;i<=n;i++)\n\
    \t{\n\t\tif(n%i==0)\n\t\t{\n\t\t\tif(n>largest)\n\t\t\t\tlargest = n;\n\t\t}\n\
    \t}\n\treturn largest;\n}\n/*\n For a given number n, find the smallest number\
    \ that divides n evenly, larger than n\n    >>> smallest_divisor(15)\n    3\n\
    \    \n*/\nlong smallest_divisor(long n) \n{\n\tlong smallest = 1;\n\tlong i;\n\
    \tfor(i=1;i<=n;i++)\n\t{\n\t\tif(n%i==0)\n\t\t{\n\t\t\tif(n<smallest)\n\t\t\t\t\
    smallest = n;\n\t\t}\n\t}\n\treturn smallest;\n}\n/*\n For a given number n, find\
    \ the smallest number that divides n evenly, smaller than n\n    >>> smallest_divisor(15)\n\
    \    3\n    \n*/\nlong smallest_divisor(long n) \n{\n\tlong smallest = 1;\n\t\
    long i;\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tif(n%i==0)\n\t\t{\n\t\t\tif(n<smallest)\n\
    \t\t\t\tsmallest = n;\n\t\t}\n\t}\n\treturn smallest;\n}\n/*\n For a given number\
    \ n, find the largest number that divides n evenly, larger than n\n    >>> largest_divisor(15)\n\
    \    5\n    \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = 0;\n\tlong\
    \ i;\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tif(n%i==0)\n\t\t{\n\t\t\tif(n>largest)\n\t\
    \t\t\tlargest = n;\n\t\t}\n\t}\n\treturn largest;\n}\n/*\n For a given number\
    \ n, find the smallest number that divides n evenly, larger than n\n    >>> smallest_divisor(15)\n\
    \    3\n    \n*/\nlong smallest_divisor(long n) \n{\n\tlong smallest = 1;\n\t\
    long i;\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tif(n%i==0)\n\t\t{\n\t\t\tif(n<smallest)\n\
    \t\t\t\tsmallest = n;\n\t\t}\n\t}\n\treturn smallest;\n}\n/*\n For a given number\
    \ n, find the smallest number that divides n evenly, smaller than n\n    >>> smallest_divisor(15)\n\
    \    3\n    \n*/\nlong smallest_divisor(long n) \n{\n\tlong smallest = 1;\n\t\
    long i;\n\tfor(i=1;i<=\nunittest\n{\n    alias candidate = largest_divisor;\n\n\
    \    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkgt8kmr9.d(113): Error: expression expected, not `unittest`\\\
    n/tmp/tmpkgt8kmr9.d(114): Error: found `{` when expecting `;` following `for`\
    \ condition\\n/tmp/tmpkgt8kmr9.d(115): Error: expression expected, not `alias`\\\
    n/tmp/tmpkgt8kmr9.d(115): Error: found `candidate` when expecting `)`\\n/tmp/tmpkgt8kmr9.d(115):\
    \ Error: found `=` instead of statement\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmpkgt8kmr9.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest_divisor = 1;\n\tlong i;\n\
    \tfor(i = 2; i <= n; i++)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tif(i * i > n)\n\
    \t\t\t\tbreak;\n\t\t\telse\n\t\t\t\tlargest_divisor = i;\n\t\t}\n\t}\n\treturn\
    \ largest_divisor;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\n\
    \    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmppqvv4oci.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d9d]\\n??:? void tmppqvv4oci.__unittest_L24_C1()\
    \ [0x427aca]\\n??:? void tmppqvv4oci.__modtest() [0x427b20]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bac3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a956]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fae9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a92d]\\n??:? runModuleUnitTests [0x42b899]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281ec]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428173]\\n??:? _d_run_main [0x4280de]\\n??:? main [0x427b33]\\\
    n??:? __libc_start_main [0x36d8554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2 = n;\n\
    \tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong max_div6\
    \ = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 = n;\n\tlong\
    \ max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\tlong max_div13\
    \ = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16 = n;\n\t\
    long max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\tlong max_div20\
    \ = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23 = n;\n\t\
    long max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\tlong max_div27\
    \ = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30 = n;\n\t\
    long max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\tlong max_div34\
    \ = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37 = n;\n\t\
    long max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\tlong max_div41\
    \ = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44 = n;\n\t\
    long max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\tlong max_div48\
    \ = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51 = n;\n\t\
    long max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\tlong max_div55\
    \ = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58 = n;\n\t\
    long max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\tlong max_div62\
    \ = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65 = n;\n\t\
    long \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwo_7ays6.d(76): Error: no identifier for declarator `long`\\\
    n/tmp/tmpwo_7ays6.d(76): Error: found `unittest` instead of statement\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwo_7ays6.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n    long maxDivisor = 1;\n    long divisor\
    \ = 2;\n    \n    while (divisor <= n)\n    {\n        if (n % divisor == 0)\n\
    \        {\n            maxDivisor = divisor;\n        }\n        divisor++;\n\
    \    }\n    return maxDivisor;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpte3a1wcx.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d8d]\\n??:? void tmpte3a1wcx.__unittest_L23_C1()\
    \ [0x427a74]\\n??:? void tmpte3a1wcx.__modtest() [0x427b0c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bab3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a946]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a91d]\\n??:? runModuleUnitTests [0x42b889]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281dc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428163]\\n??:? _d_run_main [0x4280ce]\\n??:? main [0x427b1f]\\\
    n??:? __libc_start_main [0x58ac7554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = 1;\n\tlong d = 1;\n\t\n\
    \twhile(d <= n)\n\t{\n\t\tlargest = d;\n\t\td += 2;\n\t}\n\t\n\treturn largest;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpmwcw98y1.d(25): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d75]\\n??:? void tmpmwcw98y1.__unittest_L21_C1()\
    \ [0x427a60]\\n??:? void tmpmwcw98y1.__modtest() [0x427af8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42ba9b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a92e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fac1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff70]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa4d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a905]\\n??:? runModuleUnitTests [0x42b871]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281c4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42814b]\\n??:? _d_run_main [0x4280b6]\\n??:? main [0x427b0b]\\\
    n??:? __libc_start_main [0x7133a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = 0;\n\tlong i;\n\t\n\tfor(i=1;i<=n;i++)\n\
    \t{\n\t\tif(n%i==0)\n\t\t{\n\t\t\tif(n>largest)\n\t\t\t\tlargest = n;\n\t\t}\n\
    \t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpyvb419u_.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d9d]\\n??:? void tmpyvb419u_.__unittest_L23_C1()\
    \ [0x427a88]\\n??:? void tmpyvb419u_.__modtest() [0x427b20]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bac3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a956]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fae9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a92d]\\n??:? runModuleUnitTests [0x42b899]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281ec]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428173]\\n??:? _d_run_main [0x4280de]\\n??:? main [0x427b33]\\\
    n??:? __libc_start_main [0xed2c2554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\t\
    while (div < n) {\n\t\tif (n % div == 0) {\n\t\t\tlargest = div;\n\t\t}\n\t\t\
    div++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong long i;\n\tlong long maxdiv = n;\n\
    \tlong long div = 1;\n\t\n\twhile (div <= maxdiv)\n\t{\n\t\ti = div;\n\t\twhile\
    \ (i <= maxdiv)\n\t\t{\n\t\t\tif (n % i == 0)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t\
    }\n\t\t\telse\n\t\t\t{\n\t\t\t\t++i;\n\t\t\t}\n\t\t}\n\t\tif (i == maxdiv)\n\t\
    \t{\n\t\t\tbreak;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmaxdiv = i;\n\t\t\tdiv++;\n\t\
    \t}\n\t}\n\treturn maxdiv;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpli1g1fhr.d(10): Error: use `long` for a 64 bit integer instead\
    \ of `long long`\\n/tmp/tmpli1g1fhr.d(11): Error: use `long` for a 64 bit integer\
    \ instead of `long long`\\n/tmp/tmpli1g1fhr.d(12): Error: use `long` for a 64\
    \ bit integer instead of `long long`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpli1g1fhr.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n    long max_div = n;\n    long max_div2\
    \ = n;\n    long max_div3 = n;\n    long max_div4 = n;\n    long max_div5 = n;\n\
    \    long max_div6 = n;\n    long max_div7 = n;\n    long max_div8 = n;\n    long\
    \ max_div9 = n;\n    long max_div10 = n;\n    long max_div11 = n;\n    long max_div12\
    \ = n;\n    long max_div13 = n;\n    long max_div14 = n;\n    long max_div15 =\
    \ n;\n    long max_div16 = n;\n    long max_div17 = n;\n    long max_div18 = n;\n\
    \    long max_div19 = n;\n    long max_div20 = n;\n    long max_div21 = n;\n \
    \   long max_div22 = n;\n    long max_div23 = n;\n    long max_div24 = n;\n  \
    \  long max_div25 = n;\n    long max_div26 = n;\n    long max_div27 = n;\n   \
    \ long max_div28 = n;\n    long max_div29 = n;\n    long max_div30 = n;\n    long\
    \ max_div31 = n;\n    long max_div32 = n;\n    long max_div33 = n;\n    long max_div34\
    \ = n;\n    long max_div35 = n;\n    long max_div36 = n;\n    long max_div37 =\
    \ n;\n    long max_div38 = n;\n    long max_div39 = n;\n    long max_div40 = n;\n\
    \    long max_div41 = n;\n    long max_div42 = n;\n    long max_div43 = n;\n \
    \   long max_div44 = n;\n    long max_div45 = n;\n    long max_div46 = n;\n  \
    \  long max_div47 = n;\n    long max_div48 = n;\n    long max_div49 = n;\n   \
    \ long max_div50 = n;\n    long max_div51 = n;\n    long max_div52 = n;\n    long\
    \ max_div53 = n;\n    long max_div54 = n;\n    long max_div55 = n;\n    long max_div56\
    \ = n;\n    long max_div57 = n;\n    long max_div58 = n;\n    long max_div59 =\
    \ n;\n    long max_div60 = n;\n    long max_div61 = n;\n    long max_div62 = n;\n\
    \    long max_div63 = n;\n    long max_div64 = n;\n    long max_div65 = n;\n \
    \   long \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppec8exa2.d(76): Error: no identifier for declarator `long`\\\
    n/tmp/tmppec8exa2.d(76): Error: found `unittest` instead of statement\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppec8exa2.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = n; \n\tlong divisor = 1;\n\
    \twhile (divisor < n) \n\t{\n\t\tif (n % divisor == 0) \n\t\t{\n\t\t\tlargest\
    \ = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\treturn largest;\n}\nunittest\n{\n\
    \    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = 1;\n\tlong divisor = 1;\n\
    \t\n\twhile (divisor < n) {\n\t\tdivisor *= 2;\n\t\tif (divisor > n) {\n\t\t\t\
    divisor = n;\n\t\t}\n\t}\n\t\n\twhile (divisor > 1) {\n\t\tdivisor = divisor /\
    \ 2;\n\t\tlargest = divisor;\n\t}\n\t\n\treturn largest;\n}\nunittest\n{\n   \
    \ alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n   \
    \ assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp__6hd_cr.d(33): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dad]\\n??:? void tmp__6hd_cr.__unittest_L27_C1()\
    \ [0x427ad6]\\n??:? void tmp__6hd_cr.__modtest() [0x427b2c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bad3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a966]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42faf9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a93d]\\n??:? runModuleUnitTests [0x42b8a9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281fc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428183]\\n??:? _d_run_main [0x4280ee]\\n??:? main [0x427b3f]\\\
    n??:? __libc_start_main [0xc80f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n    long largest_divisor = 1;\n    long\
    \ i;\n    \n    for(i = 2; i <= n; i++)\n    {\n        if(n%i == 0)\n       \
    \ {\n            largest_divisor = i;\n            break;\n        }\n    }\n\
    \    \n    return largest_divisor;\n}\n</code>\n<|/ a tags=c++,algorithm,c |>\n\
    <| c |>\nThis algorithm is O(n^2) because you do `sqrt(n)` operations.\n<|/ c\
    \ |>\n<| c |>\nYes, I know. But I thought that OP will understand how to implement\
    \ it by himself.\n<|/ c |>\n<| c |>\n: Yes, I know. But I thought that OP will\
    \ understand how to implement it by himself. I guess he will understand how to\
    \ implement it by himself. :)\n<|/ c |>\n<| c |>\n: I guess he will understand\
    \ how to implement it by himself. :)\n<|/ c |>\n<| c |>\n: I guess he will understand\
    \ how to implement it by himself. :)\n<|/ c |>\n<| a tags=c++,algorithm,c |>\n\
    <code>\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjsocvg05.d(24): Error: declaration expected, not `<`\\n/tmp/tmpjsocvg05.d(47):\
    \ Error: declaration expected, not `assert`\\n/tmp/tmpjsocvg05.d(48): Error: declaration\
    \ expected, not `assert`\\n/tmp/tmpjsocvg05.d(49): Error: declaration expected,\
    \ not `assert`\\n/tmp/tmpjsocvg05.d(50): Error: declaration expected, not `assert`\\\
    n/tmp/tmpjsocvg05.d(51): Error: declaration expected, not `assert`\\n/tmp/tmpjsocvg05.d(52):\
    \ Error: unrecognized declaration\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpjsocvg05.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong div = 1;\n\t\
    while (div <= max_div) {\n\t\tif (n % div == 0) {\n\t\t\tmax_div = div;\n\t\t\
    }\n\t\tdiv++;\n\t}\n\treturn max_div;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpmibm_wzn.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d85]\\n??:? void tmpmibm_wzn.__unittest_L20_C1()\
    \ [0x427ab2]\\n??:? void tmpmibm_wzn.__modtest() [0x427b08]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baab]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a93e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a915]\\n??:? runModuleUnitTests [0x42b881]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281d4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42815b]\\n??:? _d_run_main [0x4280c6]\\n??:? main [0x427b1b]\\\
    n??:? __libc_start_main [0xdad38554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\tlong\
    \ d = 1;\n\twhile(n > 1)\n\t{\n\t\td = d*10;\n\t\tn--;\n\t}\n\twhile(d > 1)\n\t\
    {\n\t\tif(n%d == 0)\n\t\t{\n\t\t\tlargest = d;\n\t\t\tbreak;\n\t\t}\n\t\td++;\n\
    \t}\n\treturn largest;\n}\n/*\n For a given number n, find the smallest number\
    \ that divides n evenly, larger than n\n    >>> smallest_divisor(15)\n    3\n\
    \    \n*/\nlong smallest_divisor(long n) \n{\n\tlong smallest = n; //start with\
    \ n\n\tlong d = 1;\n\twhile(n > 1)\n\t{\n\t\td = d*10;\n\t\tn--;\n\t}\n\twhile(d\
    \ > 1)\n\t{\n\t\tif(n%d == 0)\n\t\t{\n\t\t\tsmallest = d;\n\t\t\tbreak;\n\t\t\
    }\n\t\td++;\n\t}\n\treturn smallest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2 = n;\n\
    \tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong max_div6\
    \ = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 = n;\n\tlong\
    \ max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\tlong max_div13\
    \ = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16 = n;\n\t\
    long max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\tlong max_div20\
    \ = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23 = n;\n\t\
    long max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\tlong max_div27\
    \ = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30 = n;\n\t\
    long max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\tlong max_div34\
    \ = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37 = n;\n\t\
    long max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\tlong max_div41\
    \ = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44 = n;\n\t\
    long max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\tlong max_div48\
    \ = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51 = n;\n\t\
    long max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\tlong max_div55\
    \ = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58 = n;\n\t\
    long max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\tlong max_div62\
    \ = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65 = n;\n\t\
    long \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpeehdn2lh.d(76): Error: no identifier for declarator `long`\\\
    n/tmp/tmpeehdn2lh.d(76): Error: found `unittest` instead of statement\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeehdn2lh.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong max_divisor = 1;\n\tlong max_divisor_p\
    \ = 1;\n\tlong divisor;\n\t\n\tfor (divisor = 2; divisor <= n; divisor++) {\n\t\
    \tif (n % divisor == 0) {\n\t\t\tif (max_divisor < divisor) {\n\t\t\t\tmax_divisor\
    \ = divisor;\n\t\t\t\tmax_divisor_p = divisor;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn\
    \ max_divisor;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\n   \
    \ assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpta3ng1dv.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427da5]\\n??:? void tmpta3ng1dv.__unittest_L25_C1()\
    \ [0x427a8c]\\n??:? void tmpta3ng1dv.__modtest() [0x427b24]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bacb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a95e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42faf1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a935]\\n??:? runModuleUnitTests [0x42b8a1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281f4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42817b]\\n??:? _d_run_main [0x4280e6]\\n??:? main [0x427b37]\\\
    n??:? __libc_start_main [0x10139554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n    long divisor = 1;\n    long max_divisor\
    \ = 1;\n    \n    while (n > max_divisor) {\n        divisor++;\n        max_divisor\
    \ = divisor;\n    }\n    \n    return divisor;\n}\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpm6it4fr7.d(24): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d75]\\n??:? void tmpm6it4fr7.__unittest_L20_C1()\
    \ [0x427a60]\\n??:? void tmpm6it4fr7.__modtest() [0x427af8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42ba9b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a92e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fac1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff70]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa4d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a905]\\n??:? runModuleUnitTests [0x42b871]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281c4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42814b]\\n??:? _d_run_main [0x4280b6]\\n??:? main [0x427b0b]\\\
    n??:? __libc_start_main [0x7b517554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2 = n;\n\
    \tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong max_div6\
    \ = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 = n;\n\tlong\
    \ max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\tlong max_div13\
    \ = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16 = n;\n\t\
    long max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\tlong max_div20\
    \ = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23 = n;\n\t\
    long max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\tlong max_div27\
    \ = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30 = n;\n\t\
    long max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\tlong max_div34\
    \ = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37 = n;\n\t\
    long max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\tlong max_div41\
    \ = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44 = n;\n\t\
    long max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\tlong max_div48\
    \ = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51 = n;\n\t\
    long max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\tlong max_div55\
    \ = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58 = n;\n\t\
    long max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\tlong max_div62\
    \ = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65 = n;\n\t\
    long \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfoj40pgu.d(76): Error: no identifier for declarator `long`\\\
    n/tmp/tmpfoj40pgu.d(76): Error: found `unittest` instead of statement\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfoj40pgu.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong divisor = 1;\n\
    \twhile (divisor < n) {\n\t\tdivisor *= 2;\n\t\tif (divisor > largest) {\n\t\t\
    \tlargest = divisor;\n\t\t}\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias\
    \ candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpfe00ibuz.d(24): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d85]\\n??:? void tmpfe00ibuz.__unittest_L20_C1()\
    \ [0x427a6c]\\n??:? void tmpfe00ibuz.__modtest() [0x427b04]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baab]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a93e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a915]\\n??:? runModuleUnitTests [0x42b881]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281d4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42815b]\\n??:? _d_run_main [0x4280c6]\\n??:? main [0x427b17]\\\
    n??:? __libc_start_main [0x40233554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n    long long int i;\n    long long int\
    \ max_divisor = 1;\n    long long int max_divisor2 = 1;\n    \n    for (i = 2;\
    \ i <= n; i++)\n    {\n        if (n % i == 0)\n        {\n            if (max_divisor\
    \ < i)\n                max_divisor = i;\n            if (max_divisor2 < i)\n\
    \                max_divisor2 = i;\n        }\n    }\n    \n    return max_divisor;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThe question was about a specific language,\
    \ not about a general algorithm.\n<|/ c |>\n<| c |>\nThe question was about a\
    \ specific language, not about a general algorithm.\n<|/ c |>\n<| c |>\nThe question\
    \ was about a specific language, not about a general algorithm.\n<|/ c |>\n<|\
    \ c |>\nThe question was about a specific language, not about a general algorithm.\n\
    <|/ c |>\n<| c |>\nThe question was about a specific language, not about a general\
    \ algorithm.\n<|/ c |>\n<| a tags=algorithm,c++ |>\n<code>\n#include <iostream>\n\
    using namespace std;\nunittest\n{\n    alias candidate = largest_divisor;\n\n\
    \    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgpi6t7na.d(10): Error: use `long` for a 64 bit integer instead\
    \ of `long long`\\n/tmp/tmpgpi6t7na.d(10): Error: no identifier for declarator\
    \ `long`\\n/tmp/tmpgpi6t7na.d(11): Error: use `long` for a 64 bit integer instead\
    \ of `long long`\\n/tmp/tmpgpi6t7na.d(11): Error: no identifier for declarator\
    \ `long`\\n/tmp/tmpgpi6t7na.d(12): Error: use `long` for a 64 bit integer instead\
    \ of `long long`\\n/tmp/tmpgpi6t7na.d(12): Error: no identifier for declarator\
    \ `long`\\n/tmp/tmpgpi6t7na.d(27): Error: declaration expected, not `<`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgpi6t7na.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = 1;\n\tlong divisor = 1;\n\
    \t\n\twhile(n > divisor)\n\t{\n\t\tdivisor *= 2;\n\t\tlargest = divisor;\n\t}\n\
    \t\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp86tmqf5r.d(25): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d7d]\\n??:? void tmp86tmqf5r.__unittest_L21_C1()\
    \ [0x427a64]\\n??:? void tmp86tmqf5r.__modtest() [0x427afc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baa3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a936]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fac9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a90d]\\n??:? runModuleUnitTests [0x42b879]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281cc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428153]\\n??:? _d_run_main [0x4280be]\\n??:? main [0x427b0f]\\\
    n??:? __libc_start_main [0x2b1ba554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong divisor =\
    \ 1;\n\twhile (divisor <= n)\n\t{\n\t\tif (n % divisor == 0)\n\t\t{\n\t\t\tmaxDivisor\
    \ = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\treturn maxDivisor;\n}\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpvkrvlfg4.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d85]\\n??:? void tmpvkrvlfg4.__unittest_L22_C1()\
    \ [0x427a70]\\n??:? void tmpvkrvlfg4.__modtest() [0x427b08]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baab]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a93e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a915]\\n??:? runModuleUnitTests [0x42b881]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281d4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42815b]\\n??:? _d_run_main [0x4280c6]\\n??:? main [0x427b1b]\\\
    n??:? __libc_start_main [0x5e281554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n    long max_div = n;\n    long max_div2\
    \ = n;\n    long max_div3 = n;\n    long max_div4 = n;\n    long max_div5 = n;\n\
    \    long max_div6 = n;\n    long max_div7 = n;\n    long max_div8 = n;\n    long\
    \ max_div9 = n;\n    long max_div10 = n;\n    long max_div11 = n;\n    long max_div12\
    \ = n;\n    long max_div13 = n;\n    long max_div14 = n;\n    long max_div15 =\
    \ n;\n    long max_div16 = n;\n    long max_div17 = n;\n    long max_div18 = n;\n\
    \    long max_div19 = n;\n    long max_div20 = n;\n    long max_div21 = n;\n \
    \   long max_div22 = n;\n    long max_div23 = n;\n    long max_div24 = n;\n  \
    \  long max_div25 = n;\n    long max_div26 = n;\n    long max_div27 = n;\n   \
    \ long max_div28 = n;\n    long max_div29 = n;\n    long max_div30 = n;\n    long\
    \ max_div31 = n;\n    long max_div32 = n;\n    long max_div33 = n;\n    long max_div34\
    \ = n;\n    long max_div35 = n;\n    long max_div36 = n;\n    long max_div37 =\
    \ n;\n    long max_div38 = n;\n    long max_div39 = n;\n    long max_div40 = n;\n\
    \    long max_div41 = n;\n    long max_div42 = n;\n    long max_div43 = n;\n \
    \   long max_div44 = n;\n    long max_div45 = n;\n    long max_div46 = n;\n  \
    \  long max_div47 = n;\n    long max_div48 = n;\n    long max_div49 = n;\n   \
    \ long max_div50 = n;\n    long max_div51 = n;\n    long max_div52 = n;\n    long\
    \ max_div53 = n;\n    long max_div54 = n;\n    long max_div55 = n;\n    long max_div56\
    \ = n;\n    long max_div57 = n;\n    long max_div58 = n;\n    long max_div59 =\
    \ n;\n    long max_div60 = n;\n    long max_div61 = n;\n    long max_div62 = n;\n\
    \    long max_div63 = n;\n    long max_div64 = n;\n    long max_div65 = n;\n \
    \   long \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpaf3erfc2.d(76): Error: no identifier for declarator `long`\\\
    n/tmp/tmpaf3erfc2.d(76): Error: found `unittest` instead of statement\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpaf3erfc2.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2 = n;\n\
    \tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong max_div6\
    \ = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 = n;\n\tlong\
    \ max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\tlong max_div13\
    \ = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16 = n;\n\t\
    long max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\tlong max_div20\
    \ = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23 = n;\n\t\
    long max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\tlong max_div27\
    \ = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30 = n;\n\t\
    long max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\tlong max_div34\
    \ = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37 = n;\n\t\
    long max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\tlong max_div41\
    \ = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44 = n;\n\t\
    long max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\tlong max_div48\
    \ = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51 = n;\n\t\
    long max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\tlong max_div55\
    \ = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58 = n;\n\t\
    long max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\tlong max_div62\
    \ = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65 = n;\n\t\
    long \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgtzp77nk.d(76): Error: no identifier for declarator `long`\\\
    n/tmp/tmpgtzp77nk.d(76): Error: found `unittest` instead of statement\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgtzp77nk.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n    long max_div = n;\n    long max_div2\
    \ = n;\n    long max_div3 = n;\n    long max_div4 = n;\n    long max_div5 = n;\n\
    \    long max_div6 = n;\n    long max_div7 = n;\n    long max_div8 = n;\n    long\
    \ max_div9 = n;\n    long max_div10 = n;\n    long max_div11 = n;\n    long max_div12\
    \ = n;\n    long max_div13 = n;\n    long max_div14 = n;\n    long max_div15 =\
    \ n;\n    long max_div16 = n;\n    long max_div17 = n;\n    long max_div18 = n;\n\
    \    long max_div19 = n;\n    long max_div20 = n;\n    long max_div21 = n;\n \
    \   long max_div22 = n;\n    long max_div23 = n;\n    long max_div24 = n;\n  \
    \  long max_div25 = n;\n    long max_div26 = n;\n    long max_div27 = n;\n   \
    \ long max_div28 = n;\n    long max_div29 = n;\n    long max_div30 = n;\n    long\
    \ max_div31 = n;\n    long max_div32 = n;\n    long max_div33 = n;\n    long max_div34\
    \ = n;\n    long max_div35 = n;\n    long max_div36 = n;\n    long max_div37 =\
    \ n;\n    long max_div38 = n;\n    long max_div39 = n;\n    long max_div40 = n;\n\
    \    long max_div41 = n;\n    long max_div42 = n;\n    long max_div43 = n;\n \
    \   long max_div44 = n;\n    long max_div45 = n;\n    long max_div46 = n;\n  \
    \  long max_div47 = n;\n    long max_div48 = n;\n    long max_div49 = n;\n   \
    \ long max_div50 = n;\n    long max_div51 = n;\n    long max_div52 = n;\n    long\
    \ max_div53 = n;\n    long max_div54 = n;\n    long max_div55 = n;\n    long max_div56\
    \ = n;\n    long max_div57 = n;\n    long max_div58 = n;\n    long max_div59 =\
    \ n;\n    long max_div60 = n;\n    long max_div61 = n;\n    long max_div62 = n;\n\
    \    long max_div63 = n;\n    long max_div64 = n;\n    long max_div65 = n;\n \
    \   long \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpt2mh1mwl.d(76): Error: no identifier for declarator `long`\\\
    n/tmp/tmpt2mh1mwl.d(76): Error: found `unittest` instead of statement\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt2mh1mwl.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n    long largest_divisor = 1;\n    long\
    \ divisor = 2;\n    \n    while(divisor < n)\n    {\n        if(n % divisor ==\
    \ 0)\n        {\n            largest_divisor = divisor;\n        }\n        divisor++;\n\
    \    }\n    return largest_divisor;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2 = n;\n\
    \tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong max_div6\
    \ = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 = n;\n\tlong\
    \ max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\tlong max_div13\
    \ = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16 = n;\n\t\
    long max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\tlong max_div20\
    \ = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23 = n;\n\t\
    long max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\tlong max_div27\
    \ = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30 = n;\n\t\
    long max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\tlong max_div34\
    \ = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37 = n;\n\t\
    long max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\tlong max_div41\
    \ = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44 = n;\n\t\
    long max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\tlong max_div48\
    \ = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51 = n;\n\t\
    long max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\tlong max_div55\
    \ = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58 = n;\n\t\
    long max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\tlong max_div62\
    \ = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65 = n;\n\t\
    long \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjblo8mhp.d(76): Error: no identifier for declarator `long`\\\
    n/tmp/tmpjblo8mhp.d(76): Error: found `unittest` instead of statement\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjblo8mhp.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = 0;\n\tlong i;\n\tfor(i=1;i<=n;i++)\n\
    \t{\n\t\tif(n%i==0)\n\t\t{\n\t\t\tif(n>largest)\n\t\t\t\tlargest = n;\n\t\t}\n\
    \t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpr87rq76n.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d9d]\\n??:? void tmpr87rq76n.__unittest_L22_C1()\
    \ [0x427a88]\\n??:? void tmpr87rq76n.__modtest() [0x427b20]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bac3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a956]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fae9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a92d]\\n??:? runModuleUnitTests [0x42b899]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281ec]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428173]\\n??:? _d_run_main [0x4280de]\\n??:? main [0x427b33]\\\
    n??:? __libc_start_main [0x94d99554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\tlong\
    \ d = 1;\n\twhile (n > 1) {\n\t\tif (n % d == 0) {\n\t\t\tlargest = d;\n\t\t}\n\
    \t\td *= 2;\n\t\tn--;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpiwbut0e3.d(25): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d85]\\n??:? void tmpiwbut0e3.__unittest_L21_C1()\
    \ [0x427a70]\\n??:? void tmpiwbut0e3.__modtest() [0x427b08]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baab]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a93e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a915]\\n??:? runModuleUnitTests [0x42b881]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281d4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42815b]\\n??:? _d_run_main [0x4280c6]\\n??:? main [0x427b1b]\\\
    n??:? __libc_start_main [0x19033554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = 0;\n\tlong i;\n\tfor(i\
    \ = 2; i <= n; i++)\n\t{\n\t\tif(n%i == 0)\n\t\t{\n\t\t\tlargest = i;\n\t\t\t\
    break;\n\t\t}\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpb8_utced.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d8d]\\n??:? void tmpb8_utced.__unittest_L22_C1()\
    \ [0x427a78]\\n??:? void tmpb8_utced.__modtest() [0x427b10]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bab3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a946]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a91d]\\n??:? runModuleUnitTests [0x42b889]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281dc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428163]\\n??:? _d_run_main [0x4280ce]\\n??:? main [0x427b23]\\\
    n??:? __libc_start_main [0x3044e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\tlong currentDivisorRemainder = 1;\n\t\n\twhile (currentDivisorRemainder\
    \ != 0)\n\t{\n\t\tcurrentDivisorRemainder = n % currentDivisor;\n\t\tcurrentDivisor++;\n\
    \t\tmaxDivisor = currentDivisor;\n\t}\n\t\n\treturn maxDivisor;\n}\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp095x5bdo.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d85]\\n??:? void tmp095x5bdo.__unittest_L23_C1()\
    \ [0x427a70]\\n??:? void tmp095x5bdo.__modtest() [0x427b08]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baab]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a93e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a915]\\n??:? runModuleUnitTests [0x42b881]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281d4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42815b]\\n??:? _d_run_main [0x4280c6]\\n??:? main [0x427b1b]\\\
    n??:? __libc_start_main [0x362554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = 1;\n\tlong i;\n\tfor(i\
    \ = 2; i <= n; i++)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tlargest = i;\n\t\t\
    }\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp0ojns92v.d(25): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d95]\\n??:? void tmp0ojns92v.__unittest_L21_C1()\
    \ [0x427a7c]\\n??:? void tmp0ojns92v.__modtest() [0x427b14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42babb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a94e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fae1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a925]\\n??:? runModuleUnitTests [0x42b891]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42816b]\\n??:? _d_run_main [0x4280d6]\\n??:? main [0x427b27]\\\
    n??:? __libc_start_main [0x4711554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest_divisor = 1;\n\tlong divisor\
    \ = 2;\n\t\n\twhile (divisor <= n)\n\t{\n\t\tif (n % divisor == 0)\n\t\t{\n\t\t\
    \tif (divisor > largest_divisor)\n\t\t\t\tlargest_divisor = divisor;\n\t\t\tdivisor++;\n\
    \t\t}\n\t\telse\n\t\t\tdivisor++;\n\t}\n\treturn largest_divisor;\n}\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpiczoef0x.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d9d]\\n??:? void tmpiczoef0x.__unittest_L26_C1()\
    \ [0x427a84]\\n??:? void tmpiczoef0x.__modtest() [0x427b1c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bac3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a956]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fae9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a92d]\\n??:? runModuleUnitTests [0x42b899]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281ec]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428173]\\n??:? _d_run_main [0x4280de]\\n??:? main [0x427b2f]\\\
    n??:? __libc_start_main [0xa7ce9554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest_div = 1;\n\tlong i;\n\tfor(i\
    \ = 2; i <= n; i++)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tlargest_div = i;\n\t\
    \t\tbreak;\n\t\t}\n\t}\n\treturn largest_div;\n}\n/*\n Given a number n, find\
    \ the smallest number that divides n evenly, larger than n\n    >>> smallest_divisor(15)\n\
    \    3\n    \n*/\nlong smallest_divisor(long n) \n{\n\tlong smallest_div = 1;\n\
    \tlong i;\n\tfor(i = 2; i <= n; i++)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tsmallest_div\
    \ = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn smallest_div;\n}\n/*\n Given a number\
    \ n, find the smallest number that divides n evenly, smaller than n\n    >>> smallest_divisor(15)\n\
    \    3\n    \n*/\nlong smallest_divisor(long n) \n{\n\tlong smallest_div = 1;\n\
    \tlong i;\n\tfor(i = 2; i <= n; i++)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tsmallest_div\
    \ = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn smallest_div;\n}\n/*\n Given a number\
    \ n, find the largest number that divides n evenly, larger than n\n    >>> largest_divisor(15)\n\
    \    5\n    \n*/\nlong largest_divisor(long n) \n{\n\tlong largest_div = 1;\n\t\
    long i;\n\tfor(i = 2; i <= n; i++)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tlargest_div\
    \ = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn largest_div;\n}\n/*\n Given a number\
    \ n, find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \n*/\nlong largest_divisor(long n) \n{\n\tlong largest_div = 1;\n\t\
    long i;\n\tfor(i = 2; i <= n; i++)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tlargest_div\
    \ = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn largest_div;\n}\n/*\n Given a number\
    \ n, find the smallest number that divides n evenly, larger than n\n    >>> smallest_divisor(15)\n\
    \    3\n    \n*/\nlong smallest_divisor(long n) \n{\n\tlong smallest_div = 1;\n\
    \tlong i;\n\tfor(i = 2; i <= n; i++)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tsmallest_div\
    \ = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwqs6t2xp.d(121): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwqs6t2xp.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = 1;\n\tlong divisor = 1;\n\
    \t\n\twhile (divisor <= n && divisor < largest)\n\t{\n\t\tlargest = divisor;\n\
    \t\tdivisor *= 2;\n\t}\n\t\n\treturn largest;\n}\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpi_uoit5v.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d7d]\\n??:? void tmpi_uoit5v.__unittest_L21_C1()\
    \ [0x427aaa]\\n??:? void tmpi_uoit5v.__modtest() [0x427b00]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baa3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a936]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fac9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a90d]\\n??:? runModuleUnitTests [0x42b879]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281cc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428153]\\n??:? _d_run_main [0x4280be]\\n??:? main [0x427b13]\\\
    n??:? __libc_start_main [0xa3cd8554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2 = n;\n\
    \tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong max_div6\
    \ = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 = n;\n\tlong\
    \ max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\tlong max_div13\
    \ = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16 = n;\n\t\
    long max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\tlong max_div20\
    \ = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23 = n;\n\t\
    long max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\tlong max_div27\
    \ = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30 = n;\n\t\
    long max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\tlong max_div34\
    \ = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37 = n;\n\t\
    long max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\tlong max_div41\
    \ = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44 = n;\n\t\
    long max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\tlong max_div48\
    \ = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51 = n;\n\t\
    long max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\tlong max_div55\
    \ = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58 = n;\n\t\
    long max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\tlong max_div62\
    \ = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65 = n;\n\t\
    long \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp746lhtym.d(76): Error: no identifier for declarator `long`\\\
    n/tmp/tmp746lhtym.d(76): Error: found `unittest` instead of statement\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp746lhtym.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n    long long i;\n    long long maxDiv =\
    \ n;\n    long long div = 1;\n    \n    for(i = 2; i <= n; i++)\n    {\n     \
    \   if(n % i == 0)\n        {\n            div = i;\n            if(div > maxDiv)\n\
    \                maxDiv = div;\n        }\n    }\n    return maxDiv;\n}\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpudy9j0i2.d(10): Error: use `long` for a 64 bit integer instead\
    \ of `long long`\\n/tmp/tmpudy9j0i2.d(11): Error: use `long` for a 64 bit integer\
    \ instead of `long long`\\n/tmp/tmpudy9j0i2.d(12): Error: use `long` for a 64\
    \ bit integer instead of `long long`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpudy9j0i2.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n    long max_div = n;\n    long max_div2\
    \ = n;\n    long max_div3 = n;\n    long max_div4 = n;\n    long max_div5 = n;\n\
    \    long max_div6 = n;\n    long max_div7 = n;\n    long max_div8 = n;\n    long\
    \ max_div9 = n;\n    long max_div10 = n;\n    long max_div11 = n;\n    long max_div12\
    \ = n;\n    long max_div13 = n;\n    long max_div14 = n;\n    long max_div15 =\
    \ n;\n    long max_div16 = n;\n    long max_div17 = n;\n    long max_div18 = n;\n\
    \    long max_div19 = n;\n    long max_div20 = n;\n    long max_div21 = n;\n \
    \   long max_div22 = n;\n    long max_div23 = n;\n    long max_div24 = n;\n  \
    \  long max_div25 = n;\n    long max_div26 = n;\n    long max_div27 = n;\n   \
    \ long max_div28 = n;\n    long max_div29 = n;\n    long max_div30 = n;\n    long\
    \ max_div31 = n;\n    long max_div32 = n;\n    long max_div33 = n;\n    long max_div34\
    \ = n;\n    long max_div35 = n;\n    long max_div36 = n;\n    long max_div37 =\
    \ n;\n    long max_div38 = n;\n    long max_div39 = n;\n    long max_div40 = n;\n\
    \    long max_div41 = n;\n    long max_div42 = n;\n    long max_div43 = n;\n \
    \   long max_div44 = n;\n    long max_div45 = n;\n    long max_div46 = n;\n  \
    \  long max_div47 = n;\n    long max_div48 = n;\n    long max_div49 = n;\n   \
    \ long max_div50 = n;\n    long max_div51 = n;\n    long max_div52 = n;\n    long\
    \ max_div53 = n;\n    long max_div54 = n;\n    long max_div55 = n;\n    long max_div56\
    \ = n;\n    long max_div57 = n;\n    long max_div58 = n;\n    long max_div59 =\
    \ n;\n    long max_div60 = n;\n    long max_div61 = n;\n    long max_div62 = n;\n\
    \    long max_div63 = n;\n    long max_div64 = n;\n    long max_div65 = n;\n \
    \   long \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpj6f6r4jd.d(76): Error: no identifier for declarator `long`\\\
    n/tmp/tmpj6f6r4jd.d(76): Error: found `unittest` instead of statement\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj6f6r4jd.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n    long largest = 0;\n    long i;\n   \
    \ for(i=1;i<=n;i++)\n    {\n        if(n%i==0)\n        {\n            if(n>largest)\n\
    \                largest = n;\n        }\n    }\n    return largest;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nThis code doesn't work for large numbers. Try it with\
    \ `largest_divisor(150)`\n<|/ c |>\n<| c |>\nYes, it does. Try it with `largest_divisor(150)`\n\
    <|/ c |>\n<| c |>\nYes, it does. Try it with `largest_divisor(150)`\n<|/ c |>\n\
    <| c |>\nYes, it does. Try it with `largest_divisor(150)`\n<|/ c |>\n<| c |>\n\
    Yes, it does. Try it with `largest_divisor(150)`\n<|/ c |>\n<| a dscore=0 |>\n\
    <code>\n#include <stdio.h>\n#include <math.h>\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1_qv9rij.d(22): Error: declaration expected, not `<`\\n/tmp/tmp1_qv9rij.d(25):\
    \ Error: unterminated character constant\\n/tmp/tmp1_qv9rij.d(47): Error: declaration\
    \ expected, not `assert`\\n/tmp/tmp1_qv9rij.d(48): Error: declaration expected,\
    \ not `assert`\\n/tmp/tmp1_qv9rij.d(49): Error: declaration expected, not `assert`\\\
    n/tmp/tmp1_qv9rij.d(50): Error: declaration expected, not `assert`\\n/tmp/tmp1_qv9rij.d(51):\
    \ Error: declaration expected, not `assert`\\n/tmp/tmp1_qv9rij.d(52): Error: unrecognized\
    \ declaration\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1_qv9rij.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = 1;\n\tlong div = 1;\n\t\
    while(div < n)\n\t{\n\t\tlargest = div;\n\t\tdiv += 2;\n\t}\n\treturn largest;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpgpq5u2to.d(24): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d75]\\n??:? void tmpgpq5u2to.__unittest_L19_C1()\
    \ [0x427a81]\\n??:? void tmpgpq5u2to.__modtest() [0x427af8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42ba9b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a92e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fac1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff70]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa4d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a905]\\n??:? runModuleUnitTests [0x42b871]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281c4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42814b]\\n??:? _d_run_main [0x4280b6]\\n??:? main [0x427b0b]\\\
    n??:? __libc_start_main [0x9efdc554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n    long largest = 1;\n    for(long i =\
    \ 1; i <= n; i++)\n    {\n        if(n%i == 0)\n        {\n            largest\
    \ = i;\n            break;\n        }\n    }\n    return largest;\n}\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmprxofli9c.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d85]\\n??:? void tmprxofli9c.__unittest_L21_C1()\
    \ [0x427ab2]\\n??:? void tmprxofli9c.__modtest() [0x427b08]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baab]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a93e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a915]\\n??:? runModuleUnitTests [0x42b881]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281d4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42815b]\\n??:? _d_run_main [0x4280c6]\\n??:? main [0x427b1b]\\\
    n??:? __libc_start_main [0x3fa6f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = 1;\n\tlong i;\n\tfor(i\
    \ = 2; i <= n; i++)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tlargest = i;\n\t\t\t\
    break;\n\t\t}\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp579053sw.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d95]\\n??:? void tmp579053sw.__unittest_L22_C1()\
    \ [0x427a7c]\\n??:? void tmp579053sw.__modtest() [0x427b14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42babb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a94e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fae1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a925]\\n??:? runModuleUnitTests [0x42b891]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42816b]\\n??:? _d_run_main [0x4280d6]\\n??:? main [0x427b27]\\\
    n??:? __libc_start_main [0xd007a554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong d = 1;\n\tlong\
    \ i;\n\t\n\tfor(i = 2; i <= n; i++)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\td =\
    \ i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tlargest = d;\n\t\n\treturn largest;\n}\n\
    unittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmply6je1cs.d(31): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d95]\\n??:? void tmply6je1cs.__unittest_L27_C1()\
    \ [0x427a80]\\n??:? void tmply6je1cs.__modtest() [0x427b18]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42babb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a94e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fae1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a925]\\n??:? runModuleUnitTests [0x42b891]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42816b]\\n??:? _d_run_main [0x4280d6]\\n??:? main [0x427b2b]\\\
    n??:? __libc_start_main [0x93008554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong long i;\n\tlong long maxDivisor =\
    \ 1;\n\t\n\tfor(i = 2; i <= n; i++)\n\t{\n\t\tif(n%i == 0)\n\t\t{\n\t\t\tmaxDivisor\
    \ = i;\n\t\t}\n\t}\n\treturn maxDivisor;\n}\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkdt7jmla.d(10): Error: use `long` for a 64 bit integer instead\
    \ of `long long`\\n/tmp/tmpkdt7jmla.d(11): Error: use `long` for a 64 bit integer\
    \ instead of `long long`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpkdt7jmla.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n    long largest = n; // start with n\n\
    \    for(long i = 2; i <= largest/2; ++i)\n    {\n        if(n%i == 0)\n     \
    \   {\n            largest = i;\n        }\n    }\n    return largest;\n}\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpb9d31yko.d(24): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d8d]\\n??:? void tmpb9d31yko.__unittest_L20_C1()\
    \ [0x427a78]\\n??:? void tmpb9d31yko.__modtest() [0x427b10]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bab3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a946]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a91d]\\n??:? runModuleUnitTests [0x42b889]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281dc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428163]\\n??:? _d_run_main [0x4280ce]\\n??:? main [0x427b23]\\\
    n??:? __libc_start_main [0xb57e9554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest_div = 1;\n\tlong div = 1;\n\
    \twhile(div <= n) \n\t{\n\t\tif(n % div == 0) \n\t\t{\n\t\t\tlargest_div = div;\n\
    \t\t}\n\t\tdiv++;\n\t}\n\treturn largest_div;\n}\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp5y4lpd3n.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d85]\\n??:? void tmp5y4lpd3n.__unittest_L22_C1()\
    \ [0x427a70]\\n??:? void tmp5y4lpd3n.__modtest() [0x427b08]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baab]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a93e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a915]\\n??:? runModuleUnitTests [0x42b881]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281d4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42815b]\\n??:? _d_run_main [0x4280c6]\\n??:? main [0x427b1b]\\\
    n??:? __libc_start_main [0x756da554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\tlong currentDivisorRemainder = 0;\n\t\n\twhile(currentDivisorRemainder\
    \ != 0)\n\t{\n\t\tcurrentDivisorRemainder = n % currentDivisor;\n\t\tcurrentDivisor\
    \ = std.math.rem(currentDivisor, currentDivisorRemainder);\n\t\tmaxDivisor = std.math.max(maxDivisor,\
    \ currentDivisor);\n\t}\n\t\n\treturn maxDivisor;\n}\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpyknlyiw4.d(17): Error: undefined identifier `rem` in module `std.math`\\\
    n/tmp/tmpyknlyiw4.d(18): Error: undefined identifier `max` in module `std.math`,\
    \ did you mean function `fmax`?\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"\
    -o-\", \"/tmp/tmpyknlyiw4.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong long i;\n\tlong long largest = n;\n\
    \t\n\tfor(i=2;i<=n;i++) {\n\t\tif(n % i == 0) {\n\t\t\tlargest = i;\n\t\t}\n\t\
    }\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpyok0r301.d(10): Error: use `long` for a 64 bit integer instead\
    \ of `long long`\\n/tmp/tmpyok0r301.d(11): Error: use `long` for a 64 bit integer\
    \ instead of `long long`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpyok0r301.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\t\n\twhile (currentDivisor <= n)\n\t{\n\t\tif (n % currentDivisor ==\
    \ 0)\n\t\t{\n\t\t\tcurrentDivisor++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmaxDivisor\
    \ = currentDivisor;\n\t\t\tcurrentDivisor = 1;\n\t\t}\n\t}\n\t\n\treturn maxDivisor;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2 = n;\n\
    \tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong max_div6\
    \ = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 = n;\n\tlong\
    \ max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\tlong max_div13\
    \ = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16 = n;\n\t\
    long max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\tlong max_div20\
    \ = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23 = n;\n\t\
    long max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\tlong max_div27\
    \ = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30 = n;\n\t\
    long max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\tlong max_div34\
    \ = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37 = n;\n\t\
    long max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\tlong max_div41\
    \ = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44 = n;\n\t\
    long max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\tlong max_div48\
    \ = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51 = n;\n\t\
    long max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\tlong max_div55\
    \ = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58 = n;\n\t\
    long max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\tlong max_div62\
    \ = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65 = n;\n\t\
    long \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzqvzxx3i.d(76): Error: no identifier for declarator `long`\\\
    n/tmp/tmpzqvzxx3i.d(76): Error: found `unittest` instead of statement\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzqvzxx3i.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\tlong currentDivisorRemainder = 1;\n\t\n\twhile(currentDivisorRemainder\
    \ != 0)\n\t{\n\t\tcurrentDivisorRemainder = n % currentDivisor;\n\t\tcurrentDivisor\
    \ = currentDivisor * 10;\n\t\tmaxDivisor = currentDivisor;\n\t}\n\t\n\treturn\
    \ maxDivisor;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpwe0_pp32.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d8d]\\n??:? void tmpwe0_pp32.__unittest_L23_C1()\
    \ [0x427a78]\\n??:? void tmpwe0_pp32.__modtest() [0x427b10]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bab3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a946]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a91d]\\n??:? runModuleUnitTests [0x42b889]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281dc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428163]\\n??:? _d_run_main [0x4280ce]\\n??:? main [0x427b23]\\\
    n??:? __libc_start_main [0xa4506554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = 1;\n\tlong i;\n\tfor(i\
    \ = 2; i <= n; i++)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tlargest = i;\n\t\t\t\
    break;\n\t\t}\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpytpdoc4k.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d95]\\n??:? void tmpytpdoc4k.__unittest_L22_C1()\
    \ [0x427a7c]\\n??:? void tmpytpdoc4k.__modtest() [0x427b14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42babb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a94e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fae1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a925]\\n??:? runModuleUnitTests [0x42b891]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42816b]\\n??:? _d_run_main [0x4280d6]\\n??:? main [0x427b27]\\\
    n??:? __libc_start_main [0x931d3554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong long i;\n\t\n\tfor(i=1;i<=n;i++)\n\
    \t{\n\t\tif(n%i==0)\n\t\t{\n\t\t\tlong long j;\n\t\t\tfor(j=i;j<n;j++)\n\t\t\t\
    {\n\t\t\t\tif(n%j==0)\n\t\t\t\t{\n\t\t\t\t\tlong long k;\n\t\t\t\t\tfor(k=j;k<n;k++)\n\
    \t\t\t\t\t{\n\t\t\t\t\t\tif(n%k==0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tbreak;\n\t\t\
    \t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(k==n)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn j;\n\
    \t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn n;\n}\nunittest\n{\n   \
    \ alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n   \
    \ assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzpnasz1b.d(10): Error: use `long` for a 64 bit integer instead\
    \ of `long long`\\n/tmp/tmpzpnasz1b.d(16): Error: use `long` for a 64 bit integer\
    \ instead of `long long`\\n/tmp/tmpzpnasz1b.d(21): Error: use `long` for a 64\
    \ bit integer instead of `long long`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpzpnasz1b.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\t\
    while(div <= largest)\n\t{\n\t\tif(n % div == 0)\n\t\t{\n\t\t\tlargest = div;\n\
    \t\t}\n\t\tdiv++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp0nmr16_g.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d85]\\n??:? void tmp0nmr16_g.__unittest_L22_C1()\
    \ [0x427ab2]\\n??:? void tmp0nmr16_g.__modtest() [0x427b08]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baab]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a93e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a915]\\n??:? runModuleUnitTests [0x42b881]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281d4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42815b]\\n??:? _d_run_main [0x4280c6]\\n??:? main [0x427b1b]\\\
    n??:? __libc_start_main [0x482ba554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n    long largest = n;\n    long divisor\
    \ = 1;\n    \n    while (n > 1) {\n        if (n % divisor == 0) {\n         \
    \   largest = divisor;\n        }\n        divisor++;\n    }\n    return largest;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = 1;\n\tlong i;\n\tfor(i\
    \ = 2; i <= n; i++)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tlargest = i;\n\t\t\t\
    break;\n\t\t}\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpcgj_kz8v.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d95]\\n??:? void tmpcgj_kz8v.__unittest_L22_C1()\
    \ [0x427a7c]\\n??:? void tmpcgj_kz8v.__modtest() [0x427b14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42babb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a94e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fae1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a925]\\n??:? runModuleUnitTests [0x42b891]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42816b]\\n??:? _d_run_main [0x4280d6]\\n??:? main [0x427b27]\\\
    n??:? __libc_start_main [0xbd778554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = 0;\n\tlong i;\n\tfor(i=1;i<=n;i++)\n\
    \t{\n\t\tif(n%i==0)\n\t\t{\n\t\t\tlargest = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn\
    \ largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp8hzq6cgg.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d8d]\\n??:? void tmp8hzq6cgg.__unittest_L22_C1()\
    \ [0x427aba]\\n??:? void tmp8hzq6cgg.__modtest() [0x427b10]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bab3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a946]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a91d]\\n??:? runModuleUnitTests [0x42b889]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281dc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428163]\\n??:? _d_run_main [0x4280ce]\\n??:? main [0x427b23]\\\
    n??:? __libc_start_main [0xfaed9554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest_divisor = 1;\n\tlong divisor\
    \ = 2;\n\twhile (divisor <= n)\n\t{\n\t\tif (n % divisor == 0)\n\t\t{\n\t\t\t\
    largest_divisor = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\treturn largest_divisor;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp4yj24gsf.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d8d]\\n??:? void tmp4yj24gsf.__unittest_L22_C1()\
    \ [0x427a74]\\n??:? void tmp4yj24gsf.__modtest() [0x427b0c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bab3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a946]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a91d]\\n??:? runModuleUnitTests [0x42b889]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281dc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428163]\\n??:? _d_run_main [0x4280ce]\\n??:? main [0x427b1f]\\\
    n??:? __libc_start_main [0x2a6a4554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\tlong currentDivisorRemainder = 1;\n\t\n\twhile (currentDivisorRemainder\
    \ != 0)\n\t{\n\t\tcurrentDivisorRemainder = n % currentDivisor;\n\t\tcurrentDivisor\
    \ = currentDivisor * 10;\n\t\tmaxDivisor = currentDivisor;\n\t}\n\t\n\treturn\
    \ maxDivisor;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp6rd8ksb6.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d8d]\\n??:? void tmp6rd8ksb6.__unittest_L23_C1()\
    \ [0x427a78]\\n??:? void tmp6rd8ksb6.__modtest() [0x427b10]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bab3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a946]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a91d]\\n??:? runModuleUnitTests [0x42b889]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281dc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428163]\\n??:? _d_run_main [0x4280ce]\\n??:? main [0x427b23]\\\
    n??:? __libc_start_main [0xe7735554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2 = n;\n\
    \tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong max_div6\
    \ = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 = n;\n\tlong\
    \ max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\tlong max_div13\
    \ = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16 = n;\n\t\
    long max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\tlong max_div20\
    \ = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23 = n;\n\t\
    long max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\tlong max_div27\
    \ = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30 = n;\n\t\
    long max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\tlong max_div34\
    \ = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37 = n;\n\t\
    long max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\tlong max_div41\
    \ = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44 = n;\n\t\
    long max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\tlong max_div48\
    \ = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51 = n;\n\t\
    long max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\tlong max_div55\
    \ = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58 = n;\n\t\
    long max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\tlong max_div62\
    \ = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65 = n;\n\t\
    long \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6lhcg44g.d(76): Error: no identifier for declarator `long`\\\
    n/tmp/tmp6lhcg44g.d(76): Error: found `unittest` instead of statement\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6lhcg44g.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2 = n;\n\
    \tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong max_div6\
    \ = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 = n;\n\tlong\
    \ max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\tlong max_div13\
    \ = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16 = n;\n\t\
    long max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\tlong max_div20\
    \ = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23 = n;\n\t\
    long max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\tlong max_div27\
    \ = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30 = n;\n\t\
    long max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\tlong max_div34\
    \ = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37 = n;\n\t\
    long max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\tlong max_div41\
    \ = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44 = n;\n\t\
    long max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\tlong max_div48\
    \ = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51 = n;\n\t\
    long max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\tlong max_div55\
    \ = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58 = n;\n\t\
    long max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\tlong max_div62\
    \ = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65 = n;\n\t\
    long \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptb2j57_c.d(76): Error: no identifier for declarator `long`\\\
    n/tmp/tmptb2j57_c.d(76): Error: found `unittest` instead of statement\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptb2j57_c.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong d = 1;\n\t\n\
    \twhile(d < n)\n\t{\n\t\td *= 2;\n\t\tif(d > largest)\n\t\t\tlargest = d;\n\t\
    }\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpv2sarce9.d(25): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d85]\\n??:? void tmpv2sarce9.__unittest_L21_C1()\
    \ [0x427a6c]\\n??:? void tmpv2sarce9.__modtest() [0x427b04]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baab]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a93e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a915]\\n??:? runModuleUnitTests [0x42b881]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281d4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42815b]\\n??:? _d_run_main [0x4280c6]\\n??:? main [0x427b17]\\\
    n??:? __libc_start_main [0xf1ddc554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = 1;\n\tlong divisor = 1;\n\
    \t\n\twhile(n > largest)\n\t{\n\t\tdivisor++;\n\t\tlargest *= divisor;\n\t}\n\t\
    \n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\n\
    \    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp56k2s4lu.d(25): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d7d]\\n??:? void tmp56k2s4lu.__unittest_L21_C1()\
    \ [0x427a64]\\n??:? void tmp56k2s4lu.__modtest() [0x427afc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baa3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a936]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fac9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a90d]\\n??:? runModuleUnitTests [0x42b879]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281cc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428153]\\n??:? _d_run_main [0x4280be]\\n??:? main [0x427b0f]\\\
    n??:? __libc_start_main [0xd8dea554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n    long largest = n; //start with n\n \
    \   long d = 1;\n    while(d < n) //keep dividing n by d until d is less than\
    \ n\n    {\n        if(n % d == 0) //if d divides n evenly\n        {\n      \
    \      largest = d;\n        }\n        d++;\n    }\n    return largest;\n}\n\
    unittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\tlong currentNum = 1;\n\t\n\twhile (currentDivisor <= n)\n\t{\n\t\tcurrentNum\
    \ = currentDivisor * currentDivisor;\n\t\t\n\t\tif (currentNum > n)\n\t\t{\n\t\
    \t\tbreak;\n\t\t}\n\t\t\n\t\tif (currentNum % 2 == 0)\n\t\t{\n\t\t\tcurrentDivisor++;\n\
    \t\t}\n\t\telse\n\t\t{\n\t\t\tcurrentDivisor = 1;\n\t\t}\n\t\t\n\t\tmaxDivisor\
    \ = currentDivisor;\n\t}\n\t\n\treturn maxDivisor;\n}\nunittest\n{\n    alias\
    \ candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\t\
    while (div < n) \n\t{\n\t\tif (n % div == 0) \n\t\t{\n\t\t\tlargest = div;\n\t\
    \t}\n\t\tdiv++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate =\
    \ largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong long i;\n\tlong long maxDivisor =\
    \ 1;\n\t\n\tfor(i = 2; i <= n; i++) {\n\t\tif(n % i == 0) {\n\t\t\tmaxDivisor\
    \ = i;\n\t\t}\n\t}\n\treturn maxDivisor;\n}\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_p52zve6.d(10): Error: use `long` for a 64 bit integer instead\
    \ of `long long`\\n/tmp/tmp_p52zve6.d(11): Error: use `long` for a 64 bit integer\
    \ instead of `long long`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmp_p52zve6.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2 = n;\n\
    \tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong max_div6\
    \ = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 = n;\n\tlong\
    \ max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\tlong max_div13\
    \ = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16 = n;\n\t\
    long max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\tlong max_div20\
    \ = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23 = n;\n\t\
    long max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\tlong max_div27\
    \ = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30 = n;\n\t\
    long max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\tlong max_div34\
    \ = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37 = n;\n\t\
    long max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\tlong max_div41\
    \ = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44 = n;\n\t\
    long max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\tlong max_div48\
    \ = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51 = n;\n\t\
    long max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\tlong max_div55\
    \ = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58 = n;\n\t\
    long max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\tlong max_div62\
    \ = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65 = n;\n\t\
    long \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppqvjdh8d.d(76): Error: no identifier for declarator `long`\\\
    n/tmp/tmppqvjdh8d.d(76): Error: found `unittest` instead of statement\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppqvjdh8d.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = 0;\n\tlong i;\n\tfor(i\
    \ = 1; i <= n; i++)\n\t{\n\t\tif(n%i == 0)\n\t\t{\n\t\t\tlargest = i;\n\t\t\t\
    break;\n\t\t}\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmprff3e2v1.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d8d]\\n??:? void tmprff3e2v1.__unittest_L22_C1()\
    \ [0x427aba]\\n??:? void tmprff3e2v1.__modtest() [0x427b10]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bab3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a946]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a91d]\\n??:? runModuleUnitTests [0x42b889]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281dc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428163]\\n??:? _d_run_main [0x4280ce]\\n??:? main [0x427b23]\\\
    n??:? __libc_start_main [0x4038e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong divisor = 1;\n\
    \twhile (divisor < n) {\n\t\tif (n % divisor == 0) {\n\t\t\tlargest = divisor;\n\
    \t\t}\n\t\tdivisor++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2 = n;\n\
    \tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong max_div6\
    \ = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 = n;\n\tlong\
    \ max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\tlong max_div13\
    \ = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16 = n;\n\t\
    long max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\tlong max_div20\
    \ = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23 = n;\n\t\
    long max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\tlong max_div27\
    \ = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30 = n;\n\t\
    long max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\tlong max_div34\
    \ = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37 = n;\n\t\
    long max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\tlong max_div41\
    \ = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44 = n;\n\t\
    long max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\tlong max_div48\
    \ = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51 = n;\n\t\
    long max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\tlong max_div55\
    \ = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58 = n;\n\t\
    long max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\tlong max_div62\
    \ = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65 = n;\n\t\
    long \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8km540e6.d(76): Error: no identifier for declarator `long`\\\
    n/tmp/tmp8km540e6.d(76): Error: found `unittest` instead of statement\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8km540e6.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2 = n;\n\
    \tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong max_div6\
    \ = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 = n;\n\tlong\
    \ max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\tlong max_div13\
    \ = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16 = n;\n\t\
    long max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\tlong max_div20\
    \ = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23 = n;\n\t\
    long max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\tlong max_div27\
    \ = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30 = n;\n\t\
    long max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\tlong max_div34\
    \ = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37 = n;\n\t\
    long max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\tlong max_div41\
    \ = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44 = n;\n\t\
    long max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\tlong max_div48\
    \ = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51 = n;\n\t\
    long max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\tlong max_div55\
    \ = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58 = n;\n\t\
    long max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\tlong max_div62\
    \ = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65 = n;\n\t\
    long \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmplb5u3qux.d(76): Error: no identifier for declarator `long`\\\
    n/tmp/tmplb5u3qux.d(76): Error: found `unittest` instead of statement\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplb5u3qux.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong long i;\n\tlong long div = 1;\n\t\
    long long max_div = 1;\n\t\n\tfor (i = 2; i <= n; i++) {\n\t\tif (n % i == 0)\
    \ {\n\t\t\tdiv = i;\n\t\t\tif (div > max_div) {\n\t\t\t\tmax_div = div;\n\t\t\t\
    }\n\t\t}\n\t}\n\treturn max_div;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp050tcmzu.d(10): Error: use `long` for a 64 bit integer instead\
    \ of `long long`\\n/tmp/tmp050tcmzu.d(11): Error: use `long` for a 64 bit integer\
    \ instead of `long long`\\n/tmp/tmp050tcmzu.d(12): Error: use `long` for a 64\
    \ bit integer instead of `long long`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp050tcmzu.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2 = n;\n\
    \tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong max_div6\
    \ = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 = n;\n\tlong\
    \ max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\tlong max_div13\
    \ = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16 = n;\n\t\
    long max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\tlong max_div20\
    \ = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23 = n;\n\t\
    long max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\tlong max_div27\
    \ = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30 = n;\n\t\
    long max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\tlong max_div34\
    \ = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37 = n;\n\t\
    long max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\tlong max_div41\
    \ = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44 = n;\n\t\
    long max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\tlong max_div48\
    \ = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51 = n;\n\t\
    long max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\tlong max_div55\
    \ = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58 = n;\n\t\
    long max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\tlong max_div62\
    \ = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65 = n;\n\t\
    long \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp27uof0b3.d(76): Error: no identifier for declarator `long`\\\
    n/tmp/tmp27uof0b3.d(76): Error: found `unittest` instead of statement\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp27uof0b3.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong divisor =\
    \ 1;\n\twhile (divisor <= n)\n\t{\n\t\tif (n % divisor == 0)\n\t\t{\n\t\t\tmaxDivisor\
    \ = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\treturn maxDivisor;\n}\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpmo7zo0uo.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d85]\\n??:? void tmpmo7zo0uo.__unittest_L22_C1()\
    \ [0x427a70]\\n??:? void tmpmo7zo0uo.__modtest() [0x427b08]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baab]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a93e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a915]\\n??:? runModuleUnitTests [0x42b881]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281d4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42815b]\\n??:? _d_run_main [0x4280c6]\\n??:? main [0x427b1b]\\\
    n??:? __libc_start_main [0x97cc8554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with the largest\
    \ number\n\tlong d = 1;\n\t\n\twhile (n > 1)\n\t{\n\t\tif (n % d == 0)\n\t\t{\n\
    \t\t\tlargest = d;\n\t\t}\n\t\td++;\n\t}\n\treturn largest;\n}\nunittest\n{\n\
    \    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong divisor = 1;\n\
    \twhile(n > divisor) {\n\t\tdivisor *= 2;\n\t\tif(divisor > largest) largest =\
    \ divisor;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpq3mqgvu9.d(22): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d85]\\n??:? void tmpq3mqgvu9.__unittest_L18_C1()\
    \ [0x427a6c]\\n??:? void tmpq3mqgvu9.__modtest() [0x427b04]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baab]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a93e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a915]\\n??:? runModuleUnitTests [0x42b881]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281d4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42815b]\\n??:? _d_run_main [0x4280c6]\\n??:? main [0x427b17]\\\
    n??:? __libc_start_main [0x280c7554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\tlong\
    \ d = 1;\n\twhile(d < largest)\n\t{\n\t\tlargest = d;\n\t\td *= 2;\n\t}\n\treturn\
    \ largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpcjfn8k0o.d(25): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d75]\\n??:? void tmpcjfn8k0o.__unittest_L19_C1()\
    \ [0x427a9e]\\n??:? void tmpcjfn8k0o.__modtest() [0x427af4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42ba9b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a92e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fac1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff70]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa4d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a905]\\n??:? runModuleUnitTests [0x42b871]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281c4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42814b]\\n??:? _d_run_main [0x4280b6]\\n??:? main [0x427b07]\\\
    n??:? __libc_start_main [0xd85d2554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\tlong currentDivisorRemainder = 1;\n\tlong currentDivisorDivisor = 1;\n\
    \tlong currentDivisorDivisorRemainder = 1;\n\tlong currentDivisorDivisorDivisor\
    \ = 1;\n\tlong currentDivisorDivisorDivisorRemainder = 1;\n\tlong currentDivisorDivisorDivisorDivisor\
    \ = 1;\n\tlong currentDivisorDivisorDivisorDivisorRemainder = 1;\n\tlong currentDivisorDivisorDivisorDivisorDivisor\
    \ = 1;\n\tlong currentDivisorDivisorDivisorDivisorDivisorRemainder = 1;\n\tlong\
    \ currentDivisorDivisorDivisorDivisorDivisorDivisor = 1;\n\tlong currentDivisorDivisorDivisorDivisorDivisorDivisorRemainder\
    \ = 1;\n\tlong currentDivisorDivisorDivisorDivisorDivisorDivisorDivisor = 1;\n\
    \tlong currentDivisorDivisorDivisorDivisorDivisorDivisorRemainder = 1;\n\tlong\
    \ currentDivisorDivisorDivisorDivisorDivisorDivisorDivisor = 1;\n\tlong currentDivisorDivisorDivisorDivisorDivisorDivisorRemainder\
    \ = 1;\n\tlong currentDivisorDivisorDivisorDivisorDivisorDivisorDivisor = 1;\n\
    \tlong currentDivisorDivisorDivisorDivisorDivisorDivisorRemainder = 1;\n\tlong\
    \ currentDivisorDivisorDivisorDivisorDivisorDivisorDivisor = 1;\n\tlong currentDivisorDivisorDivisorDivisorDivisorDivisorRemainder\
    \ = 1;\n\tlong currentDivisorDivisorDivisorDivisorDivisorDivisorDivisor = 1;\n\
    \tlong currentDivisorDivisorDivisorDivisorDivisorDivisorRemainder = 1;\n\tlong\
    \ currentDivisorDivisorDivisorDivisorDivisorDivisorDivisor = 1;\n\tlong currentDivisorDivisorDivisorDivisorDivisorRemainder\
    \ = 1;\n\tlong currentDivisorDivisorDivisorDivisorDivisorDivisor = 1;\n\tlong\
    \ currentDivisorDivisorDivisorDivisorDivisorRemainder = 1;\n\tlong currentDivisorDivisorDivisorDivisorDivisorDivisor\
    \ = 1;\n\tlong currentDivisorDivisorDivisorDivisorRemainder = 1;\n\tlong currentDivisorDivisorDivisorDivisorDivisor\
    \ = 1;\n\tlong currentDivisorDivisorDivisorRemainder = 1;\n\tlong currentDivisorDivisorDivisor\
    \ = 1;\n\tlong currentDivisorRemainder = 1;\n\tlong currentDivisorDivisor\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjypg0v32.d(44): Error: semicolon expected, not `unittest`\\n/tmp/tmpjypg0v32.d(44):\
    \ Error: found `unittest` instead of statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpjypg0v32.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = 1;\n\tlong i;\n\tfor(i\
    \ = 2; i <= n; i++)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tlargest = i;\n\t\t\t\
    break;\n\t\t}\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmppbatcyou.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d95]\\n??:? void tmppbatcyou.__unittest_L22_C1()\
    \ [0x427a7c]\\n??:? void tmppbatcyou.__modtest() [0x427b14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42babb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a94e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fae1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a925]\\n??:? runModuleUnitTests [0x42b891]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42816b]\\n??:? _d_run_main [0x4280d6]\\n??:? main [0x427b27]\\\
    n??:? __libc_start_main [0x27a34554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = 0;\n\tlong i;\n\tfor(i\
    \ = 1; i <= n; i++) {\n\t\tif(n % i == 0) {\n\t\t\tlargest = i;\n\t\t\tbreak;\n\
    \t\t}\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpyq0yigv_.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d8d]\\n??:? void tmpyq0yigv_.__unittest_L20_C1()\
    \ [0x427aba]\\n??:? void tmpyq0yigv_.__modtest() [0x427b10]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bab3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a946]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a91d]\\n??:? runModuleUnitTests [0x42b889]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281dc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428163]\\n??:? _d_run_main [0x4280ce]\\n??:? main [0x427b23]\\\
    n??:? __libc_start_main [0x854e3554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2 = n;\n\
    \tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong max_div6\
    \ = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 = n;\n\tlong\
    \ max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\tlong max_div13\
    \ = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16 = n;\n\t\
    long max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\tlong max_div20\
    \ = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23 = n;\n\t\
    long max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\tlong max_div27\
    \ = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30 = n;\n\t\
    long max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\tlong max_div34\
    \ = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37 = n;\n\t\
    long max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\tlong max_div41\
    \ = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44 = n;\n\t\
    long max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\tlong max_div48\
    \ = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51 = n;\n\t\
    long max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\tlong max_div55\
    \ = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58 = n;\n\t\
    long max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\tlong max_div62\
    \ = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65 = n;\n\t\
    long \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0s3ih0yv.d(76): Error: no identifier for declarator `long`\\\
    n/tmp/tmp0s3ih0yv.d(76): Error: found `unittest` instead of statement\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0s3ih0yv.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong divisor = 1;\n\
    \t\n\twhile (divisor < n)\n\t{\n\t\tif (n % divisor == 0)\n\t\t{\n\t\t\tlargest\
    \ = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\t\n\treturn largest;\n}\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n    long maxDivisor = 1;\n    long currentDivisor\
    \ = 1;\n    \n    while(currentDivisor < n)\n    {\n        if(n % currentDivisor\
    \ == 0)\n        {\n            maxDivisor = currentDivisor;\n        }\n    \
    \    currentDivisor++;\n    }\n    return maxDivisor;\n}\nunittest\n{\n    alias\
    \ candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n    long largest_divisor = 1;\n    long\
    \ i;\n    for(i = 2; i <= n; i+=2)\n    {\n        if(n%i==0)\n        {\n   \
    \         if(n%i==0)\n            {\n                if(n%i==0)\n            \
    \    {\n                    if(n%i==0)\n                    {\n              \
    \          if(n%i==0)\n                        {\n                           \
    \ if(n%i==0)\n                            {\n                                if(n%i==0)\n\
    \                                {\n                                    if(n%i==0)\n\
    \                                    {\n                                     \
    \   if(n%i==0)\n                                        {\n                  \
    \                          if(n%i==0)\n                                      \
    \      {\n                                                if(n%i==0)\n       \
    \                                         {\n                                \
    \                    if(n%i==0)\n                                            \
    \        {\n                                                        if(n%i==0)\n\
    \                                                        {\n                 \
    \                                           if(n%i==0)\n                     \
    \                                       {\n                                  \
    \                              if(n%i==0)\n                                  \
    \                              {\n                                           \
    \                         if(n%i==0)\n                                       \
    \                             {\n                                            \
    \                            if(n%i==0)\n                                    \
    \                                    {\n                                     \
    \                                       if(n%i==0)\n                         \
    \                                                   {\n                      \
    \                                                          if(n%i==0)\n      \
    \                                                                          {\n\
    \                                                                            \
    \        if(n%i==0)\n                                                        \
    \                            {\n                                             \
    \                                           if(n%i==0)\n                     \
    \                                                                   {\n      \
    \                                                                            \
    \          if(n%i==0)\n                                                      \
    \                                      {\n                                   \
    \                                                             if(n%i==0)\n   \
    \                                                                            \
    \                 {\n                                                        \
    \                                            if(n%i==0)\n                    \
    \                                                                            \
    \    {\n                                                                     \
    \                                   if(n%i==0)\n                             \
    \                                                                           {\n\
    \                                                                            \
    \                                if(n%i==0)\n                                \
    \                                                                            {\n\
    \                                                                            \
    \                                    if(n%i==0)\n                            \
    \                                                                            \
    \        {\n                                                                 \
    \                                                   if(n%i==0)\n             \
    \                                                                            \
    \                           {\n                                              \
    \                                                                          if(n%i==0)\n\
    \                                                                            \
    \                                            {\n                             \
    \                                                                            \
    \                   if(n%i==0)\n                                             \
    \                                                                            \
    \   {\n                                                                      \
    \                                                          if(n%i==0)\n      \
    \                                                                            \
    \                                              {\n                           \
    \                                                                            \
    \                             if(n%i==0)\n                                   \
    \                                                                            \
    \                     {\n                                                    \
    \                                                                            \
    \        if(n%i==0)\n                                                        \
    \                                                                            \
    \    {\n                                                                     \
    \                                                                       if(n%i==0)\n\
    \                                                                            \
    \                                                                {\n         \
    \                                                                            \
    \                                                           if(n%i==0)\n     \
    \                                                                            \
    \                                                               {\n          \
    \                                                                            \
    \                                                              if(n%i==0)\n  \
    \                                                                            \
    \                                                                      {\n   \
    \                                                                            \
    \                                                                         if(n%i==0)\n\
    \                                                                            \
    \                                                                            {\n\
    \                                                                            \
    \                                                                            \
    \    if(n%i==0)\n                                                            \
    \                                                                            \
    \                    {\n                                                     \
    \                                                                            \
    \                               if(n%i==0)\n                                 \
    \                                                                            \
    \                                                   {\n                      \
    \                                                                            \
    \                                                                  if(n%i==0)\n\
    \                                                                            \
    \                                                                            \
    \            {\n                                                             \
    \                                                                            \
    \                               if(n%i==0)\n                                 \
    \                                                                            \
    \                                                           {\n              \
    \                                                                            \
    \                                                                            \
    \      if(n%i==0)\n                                                          \
    \                                                                            \
    \                                      {\n                                   \
    \                                                                            \
    \                 \nunittest\n{\n    alias candidate = largest_divisor;\n\n  \
    \  assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpnmtpaarj.d(99): Error: found `unittest` instead of statement\\\
    n/tmp/tmpnmtpaarj.d(109): Error: found `End of File` when expecting `}` following\
    \ compound statement\\n/tmp/tmpnmtpaarj.d(109): Error: found `End of File` when\
    \ expecting `}` following compound statement\\n/tmp/tmpnmtpaarj.d(109): Error:\
    \ found `End of File` when expecting `}` following compound statement\\n/tmp/tmpnmtpaarj.d(109):\
    \ Error: found `End of File` when expecting `}` following compound statement\\\
    n/tmp/tmpnmtpaarj.d(109): Error: found `End of File` when expecting `}` following\
    \ compound statement\\n/tmp/tmpnmtpaarj.d(109): Error: found `End of File` when\
    \ expecting `}` following compound statement\\n/tmp/tmpnmtpaarj.d(109): Error:\
    \ found `End of File` when expecting `}` following compound statement\\n/tmp/tmpnmtpaarj.d(109):\
    \ Error: found `End of File` when expecting `}` following compound statement\\\
    n/tmp/tmpnmtpaarj.d(109): Error: found `End of File` when expecting `}` following\
    \ compound statement\\n/tmp/tmpnmtpaarj.d(109): Error: found `End of File` when\
    \ expecting `}` following compound statement\\n/tmp/tmpnmtpaarj.d(109): Error:\
    \ found `End of File` when expecting `}` following compound statement\\n/tmp/tmpnmtpaarj.d(109):\
    \ Error: found `End of File` when expecting `}` following compound statement\\\
    n/tmp/tmpnmtpaarj.d(109): Error: found `End of File` when expecting `}` following\
    \ compound statement\\n/tmp/tmpnmtpaarj.d(109): Error: found `End of File` when\
    \ expecting `}` following compound statement\\n/tmp/tmpnmtpaarj.d(109): Error:\
    \ found `End of File` when expecting `}` following compound statement\\n/tmp/tmpnmtpaarj.d(109):\
    \ Error: found `End of File` when expecting `}` following compound statement\\\
    n/tmp/tmpnmtpaarj.d(109): Error: found `End of File` when expecting `}` following\
    \ compound statement\\n/tmp/tmpnmtpaarj.d(109): Error: found `End of File` when\
    \ expecting `}` following compound statement\\n/tmp/tmpnmtpaarj.d(109): Error:\
    \ found `End of File` when expecting `}` following compound statement\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnmtpaa"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong i;\n\t\n\tfor(i=3;\
    \ i*i<=n; i+=2)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tlargest = i;\n\t\t\tbreak;\n\
    \t\t}\n\t}\n\t\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpw1q83682.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d95]\\n??:? void tmpw1q83682.__unittest_L24_C1()\
    \ [0x427a7c]\\n??:? void tmpw1q83682.__modtest() [0x427b14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42babb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a94e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fae1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a925]\\n??:? runModuleUnitTests [0x42b891]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42816b]\\n??:? _d_run_main [0x4280d6]\\n??:? main [0x427b27]\\\
    n??:? __libc_start_main [0xe490d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\tlong currentDivisorRemainder = 0;\n\t\n\twhile (currentDivisorRemainder\
    \ < n) \n\t{\n\t\tcurrentDivisorRemainder = n % currentDivisor;\n\t\tcurrentDivisor++;\n\
    \t\tmaxDivisor = currentDivisor;\n\t}\n\t\n\treturn maxDivisor;\n}\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmphva4vujy.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d8d]\\n??:? void tmphva4vujy.__unittest_L23_C1()\
    \ [0x427a78]\\n??:? void tmphva4vujy.__modtest() [0x427b10]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bab3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a946]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a91d]\\n??:? runModuleUnitTests [0x42b889]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281dc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428163]\\n??:? _d_run_main [0x4280ce]\\n??:? main [0x427b23]\\\
    n??:? __libc_start_main [0x48a76554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest_div = 1;\n\tlong div = 1;\n\
    \tlong div2 = 1;\n\tlong div3 = 1;\n\tlong div4 = 1;\n\tlong div5 = 1;\n\tlong\
    \ div6 = 1;\n\tlong div7 = 1;\n\tlong div8 = 1;\n\tlong div9 = 1;\n\tlong div10\
    \ = 1;\n\tlong div11 = 1;\n\tlong div12 = 1;\n\tlong div13 = 1;\n\tlong div14\
    \ = 1;\n\tlong div15 = 1;\n\tlong div16 = 1;\n\tlong div17 = 1;\n\tlong div18\
    \ = 1;\n\tlong div19 = 1;\n\tlong div20 = 1;\n\tlong div21 = 1;\n\tlong div22\
    \ = 1;\n\tlong div23 = 1;\n\tlong div24 = 1;\n\tlong div25 = 1;\n\tlong div26\
    \ = 1;\n\tlong div27 = 1;\n\tlong div28 = 1;\n\tlong div29 = 1;\n\tlong div30\
    \ = 1;\n\tlong div31 = 1;\n\tlong div32 = 1;\n\tlong div33 = 1;\n\tlong div34\
    \ = 1;\n\tlong div35 = 1;\n\tlong div36 = 1;\n\tlong div37 = 1;\n\tlong div38\
    \ = 1;\n\tlong div39 = 1;\n\tlong div40 = 1;\n\tlong div41 = 1;\n\tlong div42\
    \ = 1;\n\tlong div43 = 1;\n\tlong div44 = 1;\n\tlong div45 = 1;\n\tlong div46\
    \ = 1;\n\tlong div47 = 1;\n\tlong div48 = 1;\n\tlong div49 = 1;\n\tlong div50\
    \ = 1;\n\tlong div51 = 1;\n\tlong div52 = 1;\n\tlong div53 = 1;\n\tlong div54\
    \ = 1;\n\tlong div55 = 1;\n\tlong div56 = 1;\n\tlong div57 = 1;\n\tlong div58\
    \ = 1;\n\tlong div59 = 1;\n\tlong div60 = 1;\n\tlong div61 = 1;\n\tlong div62\
    \ = 1;\n\tlong div63 = 1;\n\tlong div64 = 1;\n\tlong div65 = 1;\n\tlong div66\
    \ = 1;\n\tlong div67 = 1;\n\tlong div68 = 1;\n\tlong div69 = 1;\n\tlong div70\
    \ = 1;\n\tlong div71 = 1;\n\tlong div72 = 1;\n\tlong div73 = 1;\n\tlong div74\
    \ = 1;\n\tlong div75 = 1;\n\tlong div76 = 1;\n\tlong div77 = 1;\n\tlong div78\
    \ = 1;\n\tlong div79 = 1;\n\tlong div80 = 1;\n\tlong div81 = 1;\n\tlong div82\
    \ = 1;\n\tlong div83 = 1;\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3ncjv0d1.d(94): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3ncjv0d1.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\t\
    while(div <= n)\n\t{\n\t\tif(n % div == 0)\n\t\t{\n\t\t\tlargest = div;\n\t\t\
    }\n\t\tdiv++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmppe1zejw3.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d85]\\n??:? void tmppe1zejw3.__unittest_L22_C1()\
    \ [0x427a70]\\n??:? void tmppe1zejw3.__modtest() [0x427b08]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baab]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a93e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a915]\\n??:? runModuleUnitTests [0x42b881]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281d4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42815b]\\n??:? _d_run_main [0x4280c6]\\n??:? main [0x427b1b]\\\
    n??:? __libc_start_main [0x304ae554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong long i;\n\tlong long maxDivisor =\
    \ 1;\n\t\n\tfor(i=2;i<=n;i++)\n\t{\n\t\tif(n%i==0)\n\t\t{\n\t\t\tif(n%i==0)\n\t\
    \t\t{\n\t\t\t\tif(n%i==0)\n\t\t\t\t{\n\t\t\t\t\tmaxDivisor = i;\n\t\t\t\t}\n\t\
    \t\t}\n\t\t}\n\t}\n\treturn maxDivisor;\n}\nunittest\n{\n    alias candidate =\
    \ largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpw34ibp03.d(10): Error: use `long` for a 64 bit integer instead\
    \ of `long long`\\n/tmp/tmpw34ibp03.d(11): Error: use `long` for a 64 bit integer\
    \ instead of `long long`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpw34ibp03.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2 = n;\n\
    \tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong max_div6\
    \ = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 = n;\n\tlong\
    \ max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\tlong max_div13\
    \ = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16 = n;\n\t\
    long max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\tlong max_div20\
    \ = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23 = n;\n\t\
    long max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\tlong max_div27\
    \ = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30 = n;\n\t\
    long max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\tlong max_div34\
    \ = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37 = n;\n\t\
    long max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\tlong max_div41\
    \ = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44 = n;\n\t\
    long max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\tlong max_div48\
    \ = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51 = n;\n\t\
    long max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\tlong max_div55\
    \ = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58 = n;\n\t\
    long max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\tlong max_div62\
    \ = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65 = n;\n\t\
    long \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmplagey6wt.d(76): Error: no identifier for declarator `long`\\\
    n/tmp/tmplagey6wt.d(76): Error: found `unittest` instead of statement\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplagey6wt.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong divisor = 1;\n\
    \twhile (divisor < n) {\n\t\tdivisor *= 2;\n\t\tif (divisor > largest) largest\
    \ = divisor;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpypk9xakj.d(22): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d85]\\n??:? void tmpypk9xakj.__unittest_L18_C1()\
    \ [0x427a6c]\\n??:? void tmpypk9xakj.__modtest() [0x427b04]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baab]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a93e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a915]\\n??:? runModuleUnitTests [0x42b881]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281d4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42815b]\\n??:? _d_run_main [0x4280c6]\\n??:? main [0x427b17]\\\
    n??:? __libc_start_main [0x8fbd9554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2 = n;\n\
    \tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong max_div6\
    \ = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 = n;\n\tlong\
    \ max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\tlong max_div13\
    \ = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16 = n;\n\t\
    long max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\tlong max_div20\
    \ = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23 = n;\n\t\
    long max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\tlong max_div27\
    \ = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30 = n;\n\t\
    long max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\tlong max_div34\
    \ = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37 = n;\n\t\
    long max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\tlong max_div41\
    \ = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44 = n;\n\t\
    long max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\tlong max_div48\
    \ = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51 = n;\n\t\
    long max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\tlong max_div55\
    \ = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58 = n;\n\t\
    long max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\tlong max_div62\
    \ = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65 = n;\n\t\
    long \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3_4t6mrs.d(76): Error: no identifier for declarator `long`\\\
    n/tmp/tmp3_4t6mrs.d(76): Error: found `unittest` instead of statement\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3_4t6mrs.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong divisor = 1;\n\
    \twhile (divisor < n && n % divisor == 0) {\n\t\tdivisor++;\n\t}\n\twhile (divisor\
    \ < n) {\n\t\tlargest = divisor;\n\t\tdivisor++;\n\t}\n\treturn largest;\n}\n\
    unittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpqgegb4h8.d(25): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d95]\\n??:? void tmpqgegb4h8.__unittest_L21_C1()\
    \ [0x427a7c]\\n??:? void tmpqgegb4h8.__modtest() [0x427b14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42babb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a94e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fae1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a925]\\n??:? runModuleUnitTests [0x42b891]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42816b]\\n??:? _d_run_main [0x4280d6]\\n??:? main [0x427b27]\\\
    n??:? __libc_start_main [0x8a33f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong max_div = 1;\n\tlong max_div2 = 1;\n\
    \tlong div = 1;\n\tlong div2 = 1;\n\t\n\twhile (div2 <= n)\n\t{\n\t\tdiv = div\
    \ * div2;\n\t\tdiv2 = div2 + 1;\n\t}\n\t\n\twhile (max_div <= div)\n\t{\n\t\t\
    max_div2 = max_div * max_div;\n\t\tmax_div = max_div2 + 1;\n\t}\n\t\n\treturn\
    \ max_div;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmplabp32t6.d(33): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dad]\\n??:? void tmplabp32t6.__unittest_L29_C1()\
    \ [0x427a94]\\n??:? void tmplabp32t6.__modtest() [0x427b2c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bad3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a966]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42faf9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a93d]\\n??:? runModuleUnitTests [0x42b8a9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281fc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428183]\\n??:? _d_run_main [0x4280ee]\\n??:? main [0x427b3f]\\\
    n??:? __libc_start_main [0x46127554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n    long long divisor = 1;\n    long long\
    \ max_divisor = 1;\n    \n    for(long long i = 1; i <= n; i++)\n    {\n     \
    \   divisor *= i;\n        if(divisor > max_divisor)\n        {\n            max_divisor\
    \ = divisor;\n        }\n    }\n    return max_divisor;\n}\nunittest\n{\n    alias\
    \ candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpt54ib3db.d(10): Error: use `long` for a 64 bit integer instead\
    \ of `long long`\\n/tmp/tmpt54ib3db.d(11): Error: use `long` for a 64 bit integer\
    \ instead of `long long`\\n/tmp/tmpt54ib3db.d(13): Error: use `long` for a 64\
    \ bit integer instead of `long long`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpt54ib3db.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong long div = 1;\n\tlong long max_div\
    \ = 1;\n\tlong long max_div2 = 1;\n\t\n\twhile (div <= n) {\n\t\tif (n % div ==\
    \ 0) {\n\t\t\tmax_div = div;\n\t\t\tmax_div2 = div;\n\t\t}\n\t\tdiv++;\n\t}\n\t\
    \n\tif (max_div2 > max_div) {\n\t\tmax_div2 = max_div;\n\t}\n\t\n\treturn max_div2;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpta7v49_q.d(10): Error: use `long` for a 64 bit integer instead\
    \ of `long long`\\n/tmp/tmpta7v49_q.d(11): Error: use `long` for a 64 bit integer\
    \ instead of `long long`\\n/tmp/tmpta7v49_q.d(12): Error: use `long` for a 64\
    \ bit integer instead of `long long`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpta7v49_q.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n    long divisor = 1;\n    long max_divisor\
    \ = 1;\n    long max_divisor2 = 1;\n    long max_divisor3 = 1;\n    \n    while\
    \ (divisor <= n)\n    {\n        if (n % divisor == 0)\n        {\n          \
    \  if (divisor > max_divisor)\n                max_divisor = divisor;\n      \
    \      if (divisor > max_divisor2)\n                max_divisor2 = divisor;\n\
    \            if (divisor > max_divisor3)\n                max_divisor3 = divisor;\n\
    \        }\n        divisor++;\n    }\n    return max_divisor;\n}\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmppz3om38q.d(34): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dc5]\\n??:? void tmppz3om38q.__unittest_L30_C1()\
    \ [0x427aac]\\n??:? void tmppz3om38q.__modtest() [0x427b44]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baeb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a97e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb11]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa9d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a955]\\n??:? runModuleUnitTests [0x42b8c1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428214]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42819b]\\n??:? _d_run_main [0x428106]\\n??:? main [0x427b57]\\\
    n??:? __libc_start_main [0x64d8c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest_divisor = 1;\n\tlong i;\n\
    \tfor(i = 2; i <= n; i++) {\n\t\tif(n % i == 0) {\n\t\t\tlargest_divisor = i;\n\
    \t\t\tbreak;\n\t\t}\n\t}\n\treturn largest_divisor;\n}\nunittest\n{\n    alias\
    \ candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpgld6fedu.d(24): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d95]\\n??:? void tmpgld6fedu.__unittest_L20_C1()\
    \ [0x427a7c]\\n??:? void tmpgld6fedu.__modtest() [0x427b14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42babb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a94e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fae1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a925]\\n??:? runModuleUnitTests [0x42b891]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42816b]\\n??:? _d_run_main [0x4280d6]\\n??:? main [0x427b27]\\\
    n??:? __libc_start_main [0x57be554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n    long largest = 0;\n    long d = 1;\n\
    \    long remainder;\n    \n    while(n > 0)\n    {\n        remainder = n % d;\n\
    \        largest = d if remainder == 0 else largest;\n        d = remainder;\n\
    \        n /= d;\n    }\n    return largest;\n}\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphf6t4uqv.d(17): Error: found `if` when expecting `;` following\
    \ statement\\n/tmp/tmphf6t4uqv.d(17): Error: found `else` when expecting `;` following\
    \ statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphf6t4uqv.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = 1;\n\tlong d = 1;\n\t\n\
    \twhile (d <= n) {\n\t\tif (n % d == 0) {\n\t\t\tlargest = d;\n\t\t}\n\t\td +=\
    \ 2;\n\t}\n\t\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpwzrh5kvx.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d85]\\n??:? void tmpwzrh5kvx.__unittest_L22_C1()\
    \ [0x427a70]\\n??:? void tmpwzrh5kvx.__modtest() [0x427b08]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baab]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a93e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a915]\\n??:? runModuleUnitTests [0x42b881]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281d4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42815b]\\n??:? _d_run_main [0x4280c6]\\n??:? main [0x427b1b]\\\
    n??:? __libc_start_main [0x23d35554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong divisor =\
    \ 1;\n\t\n\twhile (divisor <= n)\n\t{\n\t\tif (n % divisor == 0)\n\t\t{\n\t\t\t\
    maxDivisor = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\treturn maxDivisor;\n}\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpu0kkbvl7.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d85]\\n??:? void tmpu0kkbvl7.__unittest_L23_C1()\
    \ [0x427a70]\\n??:? void tmpu0kkbvl7.__modtest() [0x427b08]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baab]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a93e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a915]\\n??:? runModuleUnitTests [0x42b881]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281d4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42815b]\\n??:? _d_run_main [0x4280c6]\\n??:? main [0x427b1b]\\\
    n??:? __libc_start_main [0xd6d97554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest_divisor = 1;\n\tlong divisor\
    \ = 2;\n\twhile (divisor < n)\n\t{\n\t\tif (n % divisor == 0)\n\t\t{\n\t\t\tif\
    \ (divisor > largest_divisor)\n\t\t\t\tlargest_divisor = divisor;\n\t\t\tdivisor++;\n\
    \t\t}\n\t\telse\n\t\t\tdivisor++;\n\t}\n\treturn largest_divisor;\n}\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest_divisor = 1;\n\tlong i;\n\
    \tfor(i = 2; i <= n; i++)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tif(largest_divisor\
    \ < i)\n\t\t\t\tlargest_divisor = i;\n\t\t}\n\t}\n\treturn largest_divisor;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpmu02xus3.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d9d]\\n??:? void tmpmu02xus3.__unittest_L22_C1()\
    \ [0x427a84]\\n??:? void tmpmu02xus3.__modtest() [0x427b1c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bac3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a956]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fae9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a92d]\\n??:? runModuleUnitTests [0x42b899]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281ec]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428173]\\n??:? _d_run_main [0x4280de]\\n??:? main [0x427b2f]\\\
    n??:? __libc_start_main [0x35eb3554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong div = 1;\n\
    \tlong divCount = 0;\n\tlong divMax = n;\n\t\n\twhile(divCount < maxDivisor)\n\
    \t{\n\t\tdiv = div * divMax;\n\t\tdivCount++;\n\t}\n\t\n\twhile(div > n)\n\t{\n\
    \t\tdiv = div / divMax;\n\t\tdivCount--;\n\t}\n\t\n\treturn div;\n}\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp7odk4pry.d(33): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427dad]\\n??:? void tmp7odk4pry.__unittest_L29_C1()\
    \ [0x427a98]\\n??:? void tmp7odk4pry.__modtest() [0x427b30]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bad3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a966]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42faf9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a93d]\\n??:? runModuleUnitTests [0x42b8a9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281fc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428183]\\n??:? _d_run_main [0x4280ee]\\n??:? main [0x427b43]\\\
    n??:? __libc_start_main [0xeadca554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n    long long divisor = 1;\n    long long\
    \ max_divisor = 1;\n    \n    for(long long i = 1; i < n; i++) {\n        divisor\
    \ = i * divisor;\n        if(divisor > max_divisor) {\n            max_divisor\
    \ = divisor;\n        }\n    }\n    return max_divisor;\n}\nunittest\n{\n    alias\
    \ candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpeynf8vf1.d(10): Error: use `long` for a 64 bit integer instead\
    \ of `long long`\\n/tmp/tmpeynf8vf1.d(11): Error: use `long` for a 64 bit integer\
    \ instead of `long long`\\n/tmp/tmpeynf8vf1.d(13): Error: use `long` for a 64\
    \ bit integer instead of `long long`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpeynf8vf1.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2 = n;\n\
    \tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong max_div6\
    \ = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 = n;\n\tlong\
    \ max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\tlong max_div13\
    \ = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16 = n;\n\t\
    long max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\tlong max_div20\
    \ = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23 = n;\n\t\
    long max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\tlong max_div27\
    \ = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30 = n;\n\t\
    long max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\tlong max_div34\
    \ = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37 = n;\n\t\
    long max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\tlong max_div41\
    \ = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44 = n;\n\t\
    long max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\tlong max_div48\
    \ = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51 = n;\n\t\
    long max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\tlong max_div55\
    \ = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58 = n;\n\t\
    long max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\tlong max_div62\
    \ = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65 = n;\n\t\
    long \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5s5ezsag.d(76): Error: no identifier for declarator `long`\\\
    n/tmp/tmp5s5ezsag.d(76): Error: found `unittest` instead of statement\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5s5ezsag.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\tlong\
    \ divisor = 1;\n\twhile (divisor * divisor <= n) //while n is greater than or\
    \ equal to its square\n\t{\n\t\tif (n % divisor == 0) //if n is divisible by divisor\n\
    \t\t{\n\t\t\tlargest = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\treturn largest;\n\
    }\n/*\n For a given number n, find the smallest number that divides n evenly,\
    \ larger than n\n    >>> smallest_divisor(15)\n    3\n    \n*/\nlong smallest_divisor(long\
    \ n) \n{\n\tlong smallest = n; //start with n\n\tlong divisor = 1;\n\twhile (divisor\
    \ * divisor <= n) //while n is greater than or equal to its square\n\t{\n\t\t\
    if (n % divisor == 0) //if n is divisible by divisor\n\t\t{\n\t\t\tsmallest =\
    \ divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\treturn smallest;\n}\n/*\n For a given\
    \ number n, find the largest number that divides n evenly, smaller than n\n  \
    \  >>> largest_divisor(15)\n    5\n    \n*/\nlong largest_divisor(long n) \n{\n\
    \tlong largest = n; //start with n\n\tlong divisor = 1;\n\twhile (divisor * divisor\
    \ <= n) //while n is greater than or equal to its square\n\t{\n\t\tif (n % divisor\
    \ == 0) //if n is divisible by divisor\n\t\t{\n\t\t\tlargest = divisor;\n\t\t\
    }\n\t\tdivisor++;\n\t}\n\treturn largest;\n}\n/*\n For a given number n, find\
    \ the smallest number that divides n evenly, larger than n\n    >>> smallest_divisor(15)\n\
    \    3\n    \n*/\nlong smallest_divisor(long n) \n{\n\tlong smallest = n; //start\
    \ with n\n\tlong divisor = 1;\n\twhile (divisor * divisor <= n) //while n is greater\
    \ than or equal to its square\n\t{\n\t\tif (n % divisor == 0) //if n is divisible\
    \ by divisor\n\t\t{\n\t\t\tsmallest = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\t\
    return smallest;\n}\n/*\n For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n*/\nlong\
    \ largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\tlong divisor\
    \ = 1;\n\twhile (divisor * divisor <= n) //while n is greater than or equal to\
    \ its square\n\t{\n\t\tif (n % divisor == 0) //\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkkqhlkkd.d(95): Error: found `unittest` instead of statement\\\
    n/tmp/tmpkkqhlkkd.d(105): Error: found `End of File` when expecting `}` following\
    \ compound statement\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkkqhlkkd.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = n; // start with n\n\t\
    long d = 1;\n\t\n\twhile (largest%2 == 0)\n\t{\n\t\tlargest/=2;\n\t\td++;\n\t\
    }\n\t\n\twhile (largest%3 == 0)\n\t{\n\t\tlargest/=3;\n\t\td++;\n\t}\n\t\n\twhile\
    \ (largest%5 == 0)\n\t{\n\t\tlargest/=5;\n\t\td++;\n\t}\n\t\n\twhile (largest%7\
    \ == 0)\n\t{\n\t\tlargest/=7;\n\t\td++;\n\t}\n\t\n\twhile (largest%11 == 0)\n\t\
    {\n\t\tlargest/=11;\n\t\td++;\n\t}\n\t\n\twhile (largest%13 == 0)\n\t{\n\t\tlargest/=13;\n\
    \t\td++;\n\t}\n\t\n\twhile (largest%17 == 0)\n\t{\n\t\tlargest/=17;\n\t\td++;\n\
    \t}\n\t\n\twhile (largest%19 == 0)\n\t{\n\t\tlargest/=19;\n\t\td++;\n\t}\n\t\n\
    \twhile (largest%23 == 0)\n\t{\n\t\tlargest/=23;\n\t\td++;\n\t}\n\t\n\twhile (largest%29\
    \ == 0)\n\t{\n\t\tlargest/=29;\n\t\td++;\n\t}\n\t\n\twhile (largest%37 == 0)\n\
    \t{\n\t\tlargest/=37;\n\t\td++;\n\t}\n\t\n\twhile (largest%43 == 0)\n\t{\n\t\t\
    largest/=43;\n\t\td++;\n\t}\n\t\n\twhile (largest%59 == 0)\n\t{\n\t\tlargest/=59;\n\
    \t\td++;\n\t}\n\t\n\twhile (largest%73 == 0)\n\t{\n\t\tlargest/=73;\n\t\td++;\n\
    \t}\n\t\n\twhile (largest%97 == 0)\n\t{\n\t\tlargest/=97;\n\t\td++;\n\t}\n\t\n\
    \twhile (largest%123 == 0)\n\t{\n\t\tlargest/=123;\n\t\td++;\n\t}\n\t\n\twhile\
    \ (largest%127 == 0)\n\t{\n\t\tlargest/=127;\n\t\td++;\n\t}\n\t\n\twhile (largest%131\
    \ == 0)\n\t{\n\t\tlargest/=131;\n\t\td++;\n\t}\n\t\n\twhile (largest%137 == 0)\n\
    \t{\n\t\tlargest/=13\nunittest\n{\n    alias candidate = largest_divisor;\n\n\
    \    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpay9w7q4l.d(124): Error: found `unittest` when expecting `;` following\
    \ statement\\n/tmp/tmpay9w7q4l.d(134): Error: found `End of File` when expecting\
    \ `}` following compound statement\\n/tmp/tmpay9w7q4l.d(134): Error: found `End\
    \ of File` when expecting `}` following compound statement\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpay9w7q4l.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong long i;\n\tlong long maxDivisor =\
    \ 1;\n\t\n\tfor(i = 2; i <= n; i++)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tif(maxDivisor\
    \ < i)\n\t\t\t\tmaxDivisor = i;\n\t\t}\n\t}\n\treturn maxDivisor;\n}\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpv_bxc_ju.d(10): Error: use `long` for a 64 bit integer instead\
    \ of `long long`\\n/tmp/tmpv_bxc_ju.d(11): Error: use `long` for a 64 bit integer\
    \ instead of `long long`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpv_bxc_ju.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\t\n\twhile(currentDivisor <= n)\n\t{\n\t\tif(n % currentDivisor == 0)\n\
    \t\t{\n\t\t\tcurrentDivisor++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcurrentDivisor =\
    \ 1;\n\t\t}\n\t\t\n\t\tif(currentDivisor > maxDivisor)\n\t\t{\n\t\t\tmaxDivisor\
    \ = currentDivisor;\n\t\t}\n\t}\n\t\n\treturn maxDivisor;\n}\nunittest\n{\n  \
    \  alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n  \
    \  assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong divisor = 1;\n\
    \twhile(n > 1)\n\t{\n\t\tif(n%divisor == 0)\n\t\t{\n\t\t\tlargest = divisor;\n\
    \t\t}\n\t\tdivisor++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = 0;\n\tlong i;\n\tfor(i\
    \ = 2; i <= n; i++)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tlargest = i;\n\t\t\t\
    break;\n\t\t}\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpj3qaazkw.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d8d]\\n??:? void tmpj3qaazkw.__unittest_L22_C1()\
    \ [0x427a78]\\n??:? void tmpj3qaazkw.__modtest() [0x427b10]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bab3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a946]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a91d]\\n??:? runModuleUnitTests [0x42b889]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281dc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428163]\\n??:? _d_run_main [0x4280ce]\\n??:? main [0x427b23]\\\
    n??:? __libc_start_main [0x8f68d554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n    long max_div = n;\n    long max_div2\
    \ = n;\n    long max_div3 = n;\n    long max_div4 = n;\n    long max_div5 = n;\n\
    \    long max_div6 = n;\n    long max_div7 = n;\n    long max_div8 = n;\n    long\
    \ max_div9 = n;\n    long max_div10 = n;\n    long max_div11 = n;\n    long max_div12\
    \ = n;\n    long max_div13 = n;\n    long max_div14 = n;\n    long max_div15 =\
    \ n;\n    long max_div16 = n;\n    long max_div17 = n;\n    long max_div18 = n;\n\
    \    long max_div19 = n;\n    long max_div20 = n;\n    long max_div21 = n;\n \
    \   long max_div22 = n;\n    long max_div23 = n;\n    long max_div24 = n;\n  \
    \  long max_div25 = n;\n    long max_div26 = n;\n    long max_div27 = n;\n   \
    \ long max_div28 = n;\n    long max_div29 = n;\n    long max_div30 = n;\n    long\
    \ max_div31 = n;\n    long max_div32 = n;\n    long max_div33 = n;\n    long max_div34\
    \ = n;\n    long max_div35 = n;\n    long max_div36 = n;\n    long max_div37 =\
    \ n;\n    long max_div38 = n;\n    long max_div39 = n;\n    long max_div40 = n;\n\
    \    long max_div41 = n;\n    long max_div42 = n;\n    long max_div43 = n;\n \
    \   long max_div44 = n;\n    long max_div45 = n;\n    long max_div46 = n;\n  \
    \  long max_div47 = n;\n    long max_div48 = n;\n    long max_div49 = n;\n   \
    \ long max_div50 = n;\n    long max_div51 = n;\n    long max_div52 = n;\n    long\
    \ max_div53 = n;\n    long max_div54 = n;\n    long max_div55 = n;\n    long max_div56\
    \ = n;\n    long max_div57 = n;\n    long max_div58 = n;\n    long max_div59 =\
    \ n;\n    long max_div60 = n;\n    long max_div61 = n;\n    long max_div62 = n;\n\
    \    long max_div63 = n;\n    long max_div64 = n;\n    long max_div65 = n;\n \
    \   long \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpryom91j_.d(76): Error: no identifier for declarator `long`\\\
    n/tmp/tmpryom91j_.d(76): Error: found `unittest` instead of statement\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpryom91j_.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\tlong\
    \ d = 1;\n\t\n\twhile (d <= largest) \n\t{\n\t\tif (n % d == 0) \n\t\t{\n\t\t\t\
    largest = d;\n\t\t}\n\t\td++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias\
    \ candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpdt054r5g.d(29): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d85]\\n??:? void tmpdt054r5g.__unittest_L23_C1()\
    \ [0x427ab2]\\n??:? void tmpdt054r5g.__modtest() [0x427b08]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baab]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a93e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a915]\\n??:? runModuleUnitTests [0x42b881]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281d4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42815b]\\n??:? _d_run_main [0x4280c6]\\n??:? main [0x427b1b]\\\
    n??:? __libc_start_main [0x14938554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong maxDiv = 1;\n\tlong div = 1;\n\t\n\
    \twhile (div <= n) \n\t{\n\t\tif (n % div == 0) \n\t\t{\n\t\t\tif (div > maxDiv)\
    \ \n\t\t\t{\n\t\t\t\tmaxDiv = div;\n\t\t\t}\n\t\t}\n\t\tdiv++;\n\t}\n\treturn\
    \ maxDiv;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmppqe702ni.d(30): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d95]\\n??:? void tmppqe702ni.__unittest_L26_C1()\
    \ [0x427a80]\\n??:? void tmppqe702ni.__modtest() [0x427b18]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42babb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a94e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fae1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a925]\\n??:? runModuleUnitTests [0x42b891]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42816b]\\n??:? _d_run_main [0x4280d6]\\n??:? main [0x427b2b]\\\
    n??:? __libc_start_main [0xdce26554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = 0;\n\tlong i;\n\tfor(i=1;i<=n;i++)\n\
    \t{\n\t\tif(n%i==0)\n\t\t{\n\t\t\tlargest = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn\
    \ largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmptsv3le3w.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d8d]\\n??:? void tmptsv3le3w.__unittest_L22_C1()\
    \ [0x427aba]\\n??:? void tmptsv3le3w.__modtest() [0x427b10]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bab3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a946]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a91d]\\n??:? runModuleUnitTests [0x42b889]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281dc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428163]\\n??:? _d_run_main [0x4280ce]\\n??:? main [0x427b23]\\\
    n??:? __libc_start_main [0x3c414554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\t\
    while (div <= n) {\n\t\tif (n % div == 0) {\n\t\t\tlargest = div;\n\t\t}\n\t\t\
    div++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpux9aoq8b.d(24): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d85]\\n??:? void tmpux9aoq8b.__unittest_L20_C1()\
    \ [0x427a70]\\n??:? void tmpux9aoq8b.__modtest() [0x427b08]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baab]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a93e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a915]\\n??:? runModuleUnitTests [0x42b881]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281d4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42815b]\\n??:? _d_run_main [0x4280c6]\\n??:? main [0x427b1b]\\\
    n??:? __libc_start_main [0xa31ce554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2 = n;\n\
    \tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong max_div6\
    \ = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 = n;\n\tlong\
    \ max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\tlong max_div13\
    \ = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16 = n;\n\t\
    long max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\tlong max_div20\
    \ = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23 = n;\n\t\
    long max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\tlong max_div27\
    \ = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30 = n;\n\t\
    long max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\tlong max_div34\
    \ = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37 = n;\n\t\
    long max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\tlong max_div41\
    \ = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44 = n;\n\t\
    long max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\tlong max_div48\
    \ = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51 = n;\n\t\
    long max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\tlong max_div55\
    \ = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58 = n;\n\t\
    long max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\tlong max_div62\
    \ = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65 = n;\n\t\
    long \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5pb5eome.d(76): Error: no identifier for declarator `long`\\\
    n/tmp/tmp5pb5eome.d(76): Error: found `unittest` instead of statement\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5pb5eome.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong max_divisor = 1;\n\tlong max_divisor_p\
    \ = 1;\n\tlong max_divisor_p2 = 1;\n\tlong max_divisor_p3 = 1;\n\tlong max_divisor_p4\
    \ = 1;\n\tlong max_divisor_p5 = 1;\n\tlong max_divisor_p6 = 1;\n\tlong max_divisor_p7\
    \ = 1;\n\tlong max_divisor_p8 = 1;\n\tlong max_divisor_p9 = 1;\n\tlong max_divisor_p10\
    \ = 1;\n\tlong max_divisor_p11 = 1;\n\tlong max_divisor_p12 = 1;\n\tlong max_divisor_p13\
    \ = 1;\n\tlong max_divisor_p14 = 1;\n\tlong max_divisor_p15 = 1;\n\tlong max_divisor_p16\
    \ = 1;\n\tlong max_divisor_p17 = 1;\n\tlong max_divisor_p18 = 1;\n\tlong max_divisor_p19\
    \ = 1;\n\tlong max_divisor_p20 = 1;\n\tlong max_divisor_p21 = 1;\n\tlong max_divisor_p22\
    \ = 1;\n\tlong max_divisor_p23 = 1;\n\tlong max_divisor_p24 = 1;\n\tlong max_divisor_p25\
    \ = 1;\n\tlong max_divisor_p26 = 1;\n\tlong max_divisor_p27 = 1;\n\tlong max_divisor_p28\
    \ = 1;\n\tlong max_divisor_p29 = 1;\n\tlong max_divisor_p30 = 1;\n\tlong max_divisor_p31\
    \ = 1;\n\tlong max_divisor_p32 = 1;\n\tlong max_divisor_p33 = 1;\n\tlong max_divisor_p34\
    \ = 1;\n\tlong max_divisor_p35 = 1;\n\tlong max_divisor_p36 = 1;\n\tlong max_divisor_p37\
    \ = 1;\n\tlong max_divisor_p38 = 1;\n\tlong max_divisor_p39 = 1;\n\tlong max_divisor_p40\
    \ = 1;\n\tlong max_divisor_p41 = 1;\n\tlong max_divisor_p42 = 1;\n\tlong max_divisor_p43\
    \ = 1;\n\tlong max_divisor_p44 = 1;\n\tlong max_divisor_p45 = 1;\n\tlong max_divisor_p46\
    \ = 1;\n\tlong max_divisor_p47 = 1;\n\tlong max_divisor_p48 = 1;\n\tlong max_divisor_p49\
    \ = 1;\n\tlong max_divisor_p50 = 1;\n\tlong max_divisor_p51 = 1;\n\tlong max_divisor_p52\
    \ = 1;\n\tlong max_divisor_p53 = 1;\n\tlong max_divisor_p54 = 1;\n\tlong max_divisor_p55\
    \ = 1;\n\tlong max_divisor_p56 = 1;\n\tlong max_divisor_p57 = 1;\n\tlong max_divisor_p58\
    \ = 1;\n\tlong max_divisor_p59 = 1;\n\tlong max_divisor_p60 = 1;\n\tlong max_divisor_p61\
    \ = 1;\n\tlong max_divisor_p62 = 1;\n\tlong max_divisor_p\nunittest\n{\n    alias\
    \ candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpu1e7hg_f.d(74): Error: semicolon expected, not `unittest`\\n/tmp/tmpu1e7hg_f.d(74):\
    \ Error: found `unittest` instead of statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpu1e7hg_f.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = 1;\n\tlong divisor = 1;\n\
    \t\n\twhile (divisor <= n)\n\t{\n\t\tif (n % divisor == 0)\n\t\t{\n\t\t\tlargest\
    \ = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\t\n\treturn largest;\n}\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp12ivkgqu.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d85]\\n??:? void tmp12ivkgqu.__unittest_L24_C1()\
    \ [0x427a70]\\n??:? void tmp12ivkgqu.__modtest() [0x427b08]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baab]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a93e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a915]\\n??:? runModuleUnitTests [0x42b881]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281d4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42815b]\\n??:? _d_run_main [0x4280c6]\\n??:? main [0x427b1b]\\\
    n??:? __libc_start_main [0x592db554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong long i;\n\tlong long maxDivisor =\
    \ 1;\n\t\n\tfor(i=2;i<=n;i++)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tmaxDivisor\
    \ = i;\n\t\t}\n\t}\n\treturn maxDivisor;\n}\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzf9lmag5.d(10): Error: use `long` for a 64 bit integer instead\
    \ of `long long`\\n/tmp/tmpzf9lmag5.d(11): Error: use `long` for a 64 bit integer\
    \ instead of `long long`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmpzf9lmag5.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = 1;\n\tlong i;\n\t\n\tfor(i\
    \ = 2; i <= n; i++)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tlargest = i;\n\t\t\t\
    break;\n\t\t}\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp6i_41t17.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d95]\\n??:? void tmp6i_41t17.__unittest_L23_C1()\
    \ [0x427a7c]\\n??:? void tmp6i_41t17.__modtest() [0x427b14]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42babb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a94e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fae1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a925]\\n??:? runModuleUnitTests [0x42b891]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42816b]\\n??:? _d_run_main [0x4280d6]\\n??:? main [0x427b27]\\\
    n??:? __libc_start_main [0xd08a1554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong i;\n\tfor(i\
    \ = 2; i <= largest/2; ++i)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tlargest = i;\n\
    \t\t}\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp6vwzbznt.d(25): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d95]\\n??:? void tmp6vwzbznt.__unittest_L21_C1()\
    \ [0x427a80]\\n??:? void tmp6vwzbznt.__modtest() [0x427b18]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42babb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a94e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fae1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a925]\\n??:? runModuleUnitTests [0x42b891]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42816b]\\n??:? _d_run_main [0x4280d6]\\n??:? main [0x427b2b]\\\
    n??:? __libc_start_main [0x769554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = 1;\n\tlong i;\n\tfor(i\
    \ = 2; i <= n; i++)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tlargest = i;\n\t\t\
    }\n\t}\n\treturn largest;\n}\n/*\n For a given number n, find the smallest number\
    \ that divides n evenly, larger than n\n    >>> smallest_divisor(15)\n    3\n\
    \    \n*/\nlong smallest_divisor(long n) \n{\n\tlong smallest = 1;\n\tlong i;\n\
    \tfor(i = 2; i <= n; i++)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tsmallest = i;\n\
    \t\t}\n\t}\n\treturn smallest;\n}\n/*\n For a given number n, find the smallest\
    \ number that divides n evenly, smaller than n\n    >>> smallest_divisor(15)\n\
    \    3\n    \n*/\nlong smallest_divisor(long n) \n{\n\tlong smallest = 1;\n\t\
    long i;\n\tfor(i = 2; i <= n; i++)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tsmallest\
    \ = i;\n\t\t}\n\t}\n\treturn smallest;\n}\n/*\n For a given number n, find the\
    \ largest number that divides n evenly, larger than n\n    >>> largest_divisor(15)\n\
    \    5\n    \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = 1;\n\tlong\
    \ i;\n\tfor(i = 2; i <= n; i++)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tlargest\
    \ = i;\n\t\t}\n\t}\n\treturn largest;\n}\n/*\n For a given number n, find the\
    \ smallest number that divides n evenly, larger than n\n    >>> smallest_divisor(15)\n\
    \    3\n    \n*/\nlong smallest_divisor(long n) \n{\n\tlong smallest = 1;\n\t\
    long i;\n\tfor(i = 2; i <= n; i++)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tsmallest\
    \ = i;\n\t\t}\n\t}\n\treturn smallest;\n}\n/*\n For a given number n, find the\
    \ smallest number that divides n evenly, smaller than n\n    >>> smallest_divisor(15)\n\
    \    3\n    \n*/\nlong smallest_divisor(long n) \n{\n\tlong smallest = 1;\n\t\
    long i;\n\tfor(i = 2; i <= n; i++)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tsmallest\
    \ = i;\n\t\t}\n\t}\n\treturn smallest;\n}\n/*\n For a given number n, find the\
    \ smallest number that divides n evenly, larger than n\n    >>> largest_divisor(15)\n\
    \    5\n    \n*/\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0g4m3kcd.d(126): Error: `tmp0g4m3kcd.largest_divisor` called\
    \ with argument types `(long)` matches both:\\n/tmp/tmp0g4m3kcd.d(8):     `tmp0g4m3kcd.largest_divisor(long\
    \ n)`\\nand:\\n/tmp/tmp0g4m3kcd.d(65):     `tmp0g4m3kcd.largest_divisor(long n)`\\\
    n/tmp/tmp0g4m3kcd.d(127): Error: `tmp0g4m3kcd.largest_divisor` called with argument\
    \ types `(long)` matches both:\\n/tmp/tmp0g4m3kcd.d(8):     `tmp0g4m3kcd.largest_divisor(long\
    \ n)`\\nand:\\n/tmp/tmp0g4m3kcd.d(65):     `tmp0g4m3kcd.largest_divisor(long n)`\\\
    n/tmp/tmp0g4m3kcd.d(128): Error: `tmp0g4m3kcd.largest_divisor` called with argument\
    \ types `(long)` matches both:\\n/tmp/tmp0g4m3kcd.d(8):     `tmp0g4m3kcd.largest_divisor(long\
    \ n)`\\nand:\\n/tmp/tmp0g4m3kcd.d(65):     `tmp0g4m3kcd.largest_divisor(long n)`\\\
    n/tmp/tmp0g4m3kcd.d(129): Error: `tmp0g4m3kcd.largest_divisor` called with argument\
    \ types `(long)` matches both:\\n/tmp/tmp0g4m3kcd.d(8):     `tmp0g4m3kcd.largest_divisor(long\
    \ n)`\\nand:\\n/tmp/tmp0g4m3kcd.d(65):     `tmp0g4m3kcd.largest_divisor(long n)`\\\
    n/tmp/tmp0g4m3kcd.d(130): Error: `tmp0g4m3kcd.largest_divisor` called with argument\
    \ types `(long)` matches both:\\n/tmp/tmp0g4m3kcd.d(8):     `tmp0g4m3kcd.largest_divisor(long\
    \ n)`\\nand:\\n/tmp/tmp0g4m3kcd.d(65):     `tmp0g4m3kcd.largest_divisor(long n)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0g4m3kcd.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\tlong currentNum = 1;\n\t\n\twhile (currentDivisor <= n) \n\t{\n\t\t\
    currentNum = currentDivisor * currentDivisor;\n\t\t\n\t\tif (currentNum > n) \n\
    \t\t{\n\t\t\tbreak;\n\t\t}\n\t\t\n\t\tcurrentDivisor++;\n\t\tmaxDivisor = currentDivisor;\n\
    \t}\n\t\n\treturn maxDivisor;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpd0_qrbmj.d(33): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d8d]\\n??:? void tmpd0_qrbmj.__unittest_L29_C1()\
    \ [0x427a78]\\n??:? void tmpd0_qrbmj.__modtest() [0x427b10]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bab3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a946]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a91d]\\n??:? runModuleUnitTests [0x42b889]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281dc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428163]\\n??:? _d_run_main [0x4280ce]\\n??:? main [0x427b23]\\\
    n??:? __libc_start_main [0x64c5b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = 0;\n\tlong i;\n\tfor(i=1;i<=n;i++)\n\
    \t{\n\t\tif(n%i==0)\n\t\t{\n\t\t\tif(n>largest)\n\t\t\t\tlargest = n;\n\t\t}\n\
    \t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp52rn36sx.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d9d]\\n??:? void tmp52rn36sx.__unittest_L22_C1()\
    \ [0x427a88]\\n??:? void tmp52rn36sx.__modtest() [0x427b20]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bac3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a956]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fae9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a92d]\\n??:? runModuleUnitTests [0x42b899]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281ec]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428173]\\n??:? _d_run_main [0x4280de]\\n??:? main [0x427b33]\\\
    n??:? __libc_start_main [0xd49aa554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong long div = 1;\n\tlong long max_div\
    \ = 1;\n\t\n\twhile (div <= n)\n\t{\n\t\tif (n % div == 0)\n\t\t{\n\t\t\tmax_div\
    \ = div;\n\t\t}\n\t\tdiv++;\n\t}\n\t\n\treturn max_div;\n}\nunittest\n{\n    alias\
    \ candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8nxnocj_.d(10): Error: use `long` for a 64 bit integer instead\
    \ of `long long`\\n/tmp/tmp8nxnocj_.d(11): Error: use `long` for a 64 bit integer\
    \ instead of `long long`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"\
    /tmp/tmp8nxnocj_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\t\n\twhile(currentDivisor <= n)\n\t{\n\t\tif(n % currentDivisor == 0)\n\
    \t\t{\n\t\t\tmaxDivisor = currentDivisor;\n\t\t}\n\t\tcurrentDivisor++;\n\t}\n\
    \treturn maxDivisor;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpx7vhlcg5.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d85]\\n??:? void tmpx7vhlcg5.__unittest_L23_C1()\
    \ [0x427a70]\\n??:? void tmpx7vhlcg5.__modtest() [0x427b08]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baab]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a93e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a915]\\n??:? runModuleUnitTests [0x42b881]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281d4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42815b]\\n??:? _d_run_main [0x4280c6]\\n??:? main [0x427b1b]\\\
    n??:? __libc_start_main [0xa1b31554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\tlong\
    \ divisor = 1;\n\twhile (divisor * divisor <= n)\n\t{\n\t\tif (n % divisor ==\
    \ 0)\n\t\t{\n\t\t\tlargest = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\treturn largest;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp5v6n7ao7.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d8d]\\n??:? void tmp5v6n7ao7.__unittest_L22_C1()\
    \ [0x427ab6]\\n??:? void tmp5v6n7ao7.__modtest() [0x427b0c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bab3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a946]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a91d]\\n??:? runModuleUnitTests [0x42b889]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281dc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428163]\\n??:? _d_run_main [0x4280ce]\\n??:? main [0x427b1f]\\\
    n??:? __libc_start_main [0x5f7ae554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n    long long div = 1;\n    long long max_div\
    \ = 1;\n    \n    for(long long i = 2; i <= n; i++)\n    {\n        long long\
    \ temp = div;\n        div *= i;\n        if(div > max_div)\n        {\n     \
    \       max_div = div;\n        }\n    }\n    return max_div;\n}\nunittest\n{\n\
    \    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0e3nghif.d(10): Error: use `long` for a 64 bit integer instead\
    \ of `long long`\\n/tmp/tmp0e3nghif.d(11): Error: use `long` for a 64 bit integer\
    \ instead of `long long`\\n/tmp/tmp0e3nghif.d(13): Error: use `long` for a 64\
    \ bit integer instead of `long long`\\n/tmp/tmp0e3nghif.d(15): Error: use `long`\
    \ for a 64 bit integer instead of `long long`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp0e3nghif.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\tlong currentDivisorRemainder = 1;\n\t\n\twhile (currentDivisorRemainder\
    \ != 0)\n\t{\n\t\tcurrentDivisorRemainder = n % currentDivisor;\n\t\tcurrentDivisor++;\n\
    \t\tmaxDivisor = currentDivisor;\n\t}\n\t\n\treturn maxDivisor;\n}\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpja4twxn4.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d85]\\n??:? void tmpja4twxn4.__unittest_L23_C1()\
    \ [0x427a70]\\n??:? void tmpja4twxn4.__modtest() [0x427b08]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baab]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a93e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a915]\\n??:? runModuleUnitTests [0x42b881]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281d4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42815b]\\n??:? _d_run_main [0x4280c6]\\n??:? main [0x427b1b]\\\
    n??:? __libc_start_main [0x5f30b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n    long largest = n;\n    long d = 1;\n\
    \    long m = n;\n    \n    while (m > 1) {\n        if (m % 2 == 0) {\n     \
    \       m /= 2;\n            d *= 2;\n        } else {\n            m /= 2;\n\
    \        }\n    }\n    \n    while (d > 1) {\n        if (n % d == 0) {\n    \
    \        largest = d;\n            n /= d;\n        } else {\n            d *=\
    \ 2;\n        }\n    }\n    \n    return largest;\n}\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpnho2imrr.d(38): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpnho2imrr.__unittest_L34_C1()\
    \ [0x427acc]\\n??:? void tmpnho2imrr.__modtest() [0x427b64]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb31]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a975]\\n??:? runModuleUnitTests [0x42b8e1]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428234]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bb]\\n??:? _d_run_main [0x428126]\\n??:? main [0x427b77]\\\
    n??:? __libc_start_main [0xd2b9c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\tlong\
    \ d = 1;\n\t\n\twhile (largest%2 == 0)\n\t{\n\t\tlargest/=2;\n\t\td++;\n\t}\n\t\
    \n\twhile (largest%3 != 0)\n\t{\n\t\tlargest/=3;\n\t\td++;\n\t}\n\t\n\twhile (largest%4\
    \ != 0)\n\t{\n\t\tlargest/=4;\n\t\td++;\n\t}\n\t\n\twhile (largest%5 != 0)\n\t\
    {\n\t\tlargest/=5;\n\t\td++;\n\t}\n\t\n\twhile (largest%6 != 0)\n\t{\n\t\tlargest/=6;\n\
    \t\td++;\n\t}\n\t\n\twhile (largest%7 != 0)\n\t{\n\t\tlargest/=7;\n\t\td++;\n\t\
    }\n\t\n\twhile (largest%8 != 0)\n\t{\n\t\tlargest/=8;\n\t\td++;\n\t}\n\t\n\twhile\
    \ (largest%9 != 0)\n\t{\n\t\tlargest/=9;\n\t\td++;\n\t}\n\t\n\twhile (largest%10\
    \ != 0)\n\t{\n\t\tlargest/=10;\n\t\td++;\n\t}\n\t\n\twhile (largest%11 != 0)\n\
    \t{\n\t\tlargest/=11;\n\t\td++;\n\t}\n\t\n\twhile (largest%12 != 0)\n\t{\n\t\t\
    largest/=12;\n\t\td++;\n\t}\n\t\n\twhile (largest%13 != 0)\n\t{\n\t\tlargest/=13;\n\
    \t\td++;\n\t}\n\t\n\twhile (largest%14 != 0)\n\t{\n\t\tlargest/=14;\n\t\td++;\n\
    \t}\n\t\n\twhile (largest%15 != 0)\n\t{\n\t\tlargest/=15;\n\t\td++;\n\t}\n\t\n\
    \twhile (largest%16 != 0)\n\t{\n\t\tlargest/=16;\n\t\td++;\n\t}\n\t\n\twhile (largest%17\
    \ != 0)\n\t{\n\t\tlargest/=17;\n\t\td++;\n\t}\n\t\n\twhile (largest%18 != 0)\n\
    \t{\n\t\tlargest/=18;\n\t\td++;\n\t}\n\t\n\twhile (largest%19 != 0)\n\t{\n\t\t\
    largest/=19;\n\t\td++;\n\t}\n\t\n\twhile (largest%20 != 0)\n\t{\n\t\tlargest/=20;\n\
    \t\td++;\n\t}\n\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7xh4tr64.d(127): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7xh4tr64.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong max_divisor = 1;\n\tlong divisor\
    \ = 1;\n\t\n\twhile (divisor <= n)\n\t{\n\t\tif (n % divisor == 0)\n\t\t{\n\t\t\
    \tif (divisor > max_divisor)\n\t\t\t\tmax_divisor = divisor;\n\t\t}\n\t\tdivisor++;\n\
    \t}\n\treturn max_divisor;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpj9og55qj.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d95]\\n??:? void tmpj9og55qj.__unittest_L24_C1()\
    \ [0x427a80]\\n??:? void tmpj9og55qj.__modtest() [0x427b18]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42babb]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a94e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fae1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a925]\\n??:? runModuleUnitTests [0x42b891]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281e4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42816b]\\n??:? _d_run_main [0x4280d6]\\n??:? main [0x427b2b]\\\
    n??:? __libc_start_main [0xe3332554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = 0;\n\tlong i;\n\tfor(i\
    \ = 1; i <= n; i++)\n\t{\n\t\tif((n % i) == 0)\n\t\t{\n\t\t\tlargest = i;\n\t\t\
    \tbreak;\n\t\t}\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate =\
    \ largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmporfb4gri.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d8d]\\n??:? void tmporfb4gri.__unittest_L22_C1()\
    \ [0x427aba]\\n??:? void tmporfb4gri.__modtest() [0x427b10]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bab3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a946]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a91d]\\n??:? runModuleUnitTests [0x42b889]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281dc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428163]\\n??:? _d_run_main [0x4280ce]\\n??:? main [0x427b23]\\\
    n??:? __libc_start_main [0x7b0d5554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong long int i;\n\tlong long int maxDivisor\
    \ = 1;\n\t\n\tfor(i = 2; i <= n; i++)\n\t{\n\t\tif(n%i == 0)\n\t\t{\n\t\t\tmaxDivisor\
    \ = i;\n\t\t}\n\t}\n\treturn maxDivisor;\n}\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpycqek38j.d(10): Error: use `long` for a 64 bit integer instead\
    \ of `long long`\\n/tmp/tmpycqek38j.d(10): Error: no identifier for declarator\
    \ `long`\\n/tmp/tmpycqek38j.d(11): Error: use `long` for a 64 bit integer instead\
    \ of `long long`\\n/tmp/tmpycqek38j.d(11): Error: no identifier for declarator\
    \ `long`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpycqek38j.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong largest = n; // start with n\n\t\
    long d = 1;\n\twhile (d < largest) {\n\t\tlargest = d;\n\t\td *= 2;\n\t}\n\twhile\
    \ (largest % 2 == 0) {\n\t\tlargest /= 2;\n\t}\n\treturn largest;\n}\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpcityb84u.d(27): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d9d]\\n??:? void tmpcityb84u.__unittest_L21_C1()\
    \ [0x427aca]\\n??:? void tmpcityb84u.__modtest() [0x427b20]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bac3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a956]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fae9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a92d]\\n??:? runModuleUnitTests [0x42b899]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281ec]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428173]\\n??:? _d_run_main [0x4280de]\\n??:? main [0x427b33]\\\
    n??:? __libc_start_main [0xbe7f1554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2 = n;\n\
    \tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong max_div6\
    \ = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 = n;\n\tlong\
    \ max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\tlong max_div13\
    \ = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16 = n;\n\t\
    long max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\tlong max_div20\
    \ = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23 = n;\n\t\
    long max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\tlong max_div27\
    \ = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30 = n;\n\t\
    long max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\tlong max_div34\
    \ = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37 = n;\n\t\
    long max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\tlong max_div41\
    \ = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44 = n;\n\t\
    long max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\tlong max_div48\
    \ = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51 = n;\n\t\
    long max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\tlong max_div55\
    \ = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58 = n;\n\t\
    long max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\tlong max_div62\
    \ = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65 = n;\n\t\
    long \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbunqejrm.d(76): Error: no identifier for declarator `long`\\\
    n/tmp/tmpbunqejrm.d(76): Error: found `unittest` instead of statement\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbunqejrm.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n    long largest = 1;\n    long d = 1;\n\
    \    long q = n;\n    \n    while(d <= q)\n    {\n        q = q / d;\n       \
    \ largest = d;\n        d++;\n    }\n    \n    return largest;\n}\n</code>\n<|/\
    \ a dscore=0 |>\n<| c |>\nThis doesn't work. Try it with 15. Your algorithm returns\
    \ 5 instead of 4.\n<|/ c |>\n<| c |>\nI tested it and it works fine. 15 is divisible\
    \ by all numbers from 1 to 5, so largest is 5.\n<|/ c |>\n<| c |>\nI tested it\
    \ again and it doesn't work. Try it with 15. Your algorithm returns 5 instead\
    \ of 4.\n<|/ c |>\n<| c |>\nI tested it again and it doesn't work. Try it with\
    \ 15. Your algorithm returns 5 instead of 4.\n<|/ c |>\n<| c |>\nI tested it again\
    \ and it doesn't work. Try it with 15. Your algorithm returns 5 instead of 4.\n\
    <|/ c |>\n<| a tags=c++,algorithm |>\n<code>\n#include <iostream>\nusing namespace\
    \ std;\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9mow_ku2.d(23): Error: declaration expected, not `<`\\n/tmp/tmp9mow_ku2.d(26):\
    \ Error: unterminated character constant\\n/tmp/tmp9mow_ku2.d(32): Error: unterminated\
    \ character constant\\n/tmp/tmp9mow_ku2.d(35): Error: unterminated character constant\\\
    n/tmp/tmp9mow_ku2.d(38): Error: unterminated character constant\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9mow_ku2.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong div = 1;\n\t\
    while (div <= max_div) {\n\t\tif (n % div == 0) {\n\t\t\tmax_div = div;\n\t\t\
    }\n\t\tdiv++;\n\t}\n\treturn max_div;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp4drjdc1i.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d85]\\n??:? void tmp4drjdc1i.__unittest_L20_C1()\
    \ [0x427ab2]\\n??:? void tmp4drjdc1i.__modtest() [0x427b08]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baab]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a93e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fad1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a915]\\n??:? runModuleUnitTests [0x42b881]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4281d4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42815b]\\n??:? _d_run_main [0x4280c6]\\n??:? main [0x427b1b]\\\
    n??:? __libc_start_main [0xb9908554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong divisor =\
    \ 1;\n\t\n\twhile (divisor < n)\n\t{\n\t\tif (n % divisor == 0)\n\t\t{\n\t\t\t\
    maxDivisor = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\treturn maxDivisor;\n}\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2 = n;\n\
    \tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong max_div6\
    \ = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 = n;\n\tlong\
    \ max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\tlong max_div13\
    \ = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16 = n;\n\t\
    long max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\tlong max_div20\
    \ = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23 = n;\n\t\
    long max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\tlong max_div27\
    \ = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30 = n;\n\t\
    long max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\tlong max_div34\
    \ = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37 = n;\n\t\
    long max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\tlong max_div41\
    \ = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44 = n;\n\t\
    long max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\tlong max_div48\
    \ = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51 = n;\n\t\
    long max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\tlong max_div55\
    \ = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58 = n;\n\t\
    long max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\tlong max_div62\
    \ = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65 = n;\n\t\
    long \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_t57hcc5.d(76): Error: no identifier for declarator `long`\\\
    n/tmp/tmp_t57hcc5.d(76): Error: found `unittest` instead of statement\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_t57hcc5.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \n\
    */\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\tlong currentNum = 1;\n\t\n\twhile(currentDivisor <= n)\n\t{\n\t\tcurrentNum\
    \ = currentDivisor;\n\t\tcurrentDivisor *= 2;\n\t\t\n\t\tif(currentDivisor > n)\n\
    \t\t\tcurrentDivisor = n;\n\t\t\n\t\tif(currentNum > maxDivisor)\n\t\t\tmaxDivisor\
    \ = currentNum;\n\t}\n\t\n\treturn maxDivisor;\n}\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout

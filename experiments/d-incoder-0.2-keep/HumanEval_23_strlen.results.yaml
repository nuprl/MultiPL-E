name: HumanEval_23_strlen
language: humaneval_to_dlang.py
results:
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\twhile (string[len] != '\\0')\n\t{\n\t\tlen++;\n\t}\n\
    \t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.RangeError@/tmp/tmpg43pnbou.d(14): Range violation\\n----------------\\\
    n??:? _d_arrayboundsp [0x427e0e]\\n??:? long tmpg43pnbou.strlen(immutable(char)[])\
    \ [0x427a26]\\n??:? void tmpg43pnbou.__unittest_L21_C1() [0x427a5c]\\n??:? void\
    \ tmpg43pnbou.__modtest() [0x427adc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a98a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb1d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffcc]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa9]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a961]\\n??:? runModuleUnitTests [0x42b8cd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428220]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a7]\\n??:? _d_run_main [0x428112]\\n??:? main [0x427aef]\\\
    n??:? __libc_start_main [0x2d8c7554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong result = 0;\n\t\n\tfor( int i = 0; i < string.length; ++i )\n\t{\n\t\
    \tif( string[i] != 0 )\n\t\t\t++result;\n\t}\n\t\n\treturn result;\n}\nunittest\n\
    {\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tfor (int i = 0; i < string.length; i++)\n\t\tlen++;\n\
    \t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tint i = 0;\n\twhile(!string.empty() && string.at(i) != '\\0')\n\t{\n\t\t\
    i++;\n\t}\n\treturn i;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpisj4gm8l.d(13): Error: no property `empty` for type `string`\\\
    n/tmp/tmpisj4gm8l.d(13): Error: no property `at` for type `string`\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpisj4gm8l.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n    int i;\n    long len = 0;\n    for(i = 0; i < string.length; ++i)\n   \
    \ {\n        if(string[i] != 0)\n            ++len;\n    }\n    return len;\n\
    }\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tint i;\n\tlong len = 0;\n\tfor(i = 0; i < string.length; ++i)\n\t\tlen +=\
    \ string.data[i];\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n  \
    \  assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppahupjrg.d(15): Error: no property `data` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppahupjrg.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n    int i = 0;\n    while(i < string.length)\n    {\n        if(string[i] ==\
    \ 0)\n            break;\n        i++;\n    }\n    return i;\n}\nunittest\n{\n\
    \    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tint i;\n\tlong len = 0;\n\t\n\tfor (i = 0; i < string.length; ++i)\n\t\t\
    len += 1;\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n   \
    \ assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n    long len = 0;\n    \n    foreach(char c, string) {\n        len++;\n  \
    \  }\n    \n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n   \
    \ assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6d7ochfa.d(14): Error: no identifier for declarator `string`\\\
    n/tmp/tmp6d7ochfa.d(14): Error: found `)` when expecting `;`\\n/tmp/tmp6d7ochfa.d(18):\
    \ Error: found `return` when expecting `)`\\nFailed: [\"dmd\", \"-unittest\",\
    \ \"-v\", \"-o-\", \"/tmp/tmp6d7ochfa.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\twhile (string[len] != '\\0')\n\t{\n\t\tlen++;\n\t}\n\
    \t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.RangeError@/tmp/tmp42l45w94.d(14): Range violation\\n----------------\\\
    n??:? _d_arrayboundsp [0x427e0e]\\n??:? long tmp42l45w94.strlen(immutable(char)[])\
    \ [0x427a26]\\n??:? void tmp42l45w94.__unittest_L21_C1() [0x427a5c]\\n??:? void\
    \ tmp42l45w94.__modtest() [0x427adc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a98a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb1d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffcc]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa9]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a961]\\n??:? runModuleUnitTests [0x42b8cd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428220]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a7]\\n??:? _d_run_main [0x428112]\\n??:? main [0x427aef]\\\
    n??:? __libc_start_main [0xf513c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\twhile (string[len] != '\\0')\n\t{\n\t\tlen++;\n\t}\n\
    \t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.RangeError@/tmp/tmp2txhhhwx.d(14): Range violation\\n----------------\\\
    n??:? _d_arrayboundsp [0x427e0e]\\n??:? long tmp2txhhhwx.strlen(immutable(char)[])\
    \ [0x427a26]\\n??:? void tmp2txhhhwx.__unittest_L21_C1() [0x427a5c]\\n??:? void\
    \ tmp2txhhhwx.__modtest() [0x427adc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a98a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb1d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffcc]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa9]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a961]\\n??:? runModuleUnitTests [0x42b8cd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428220]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a7]\\n??:? _d_run_main [0x428112]\\n??:? main [0x427aef]\\\
    n??:? __libc_start_main [0x2f260554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong length = 0;\n\t\n\tforeach(char c, string)\n\t{\n\t\tlength++;\n\t}\n\
    \t\n\treturn length;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphbhz9xcc.d(14): Error: no identifier for declarator `string`\\\
    n/tmp/tmphbhz9xcc.d(14): Error: found `)` when expecting `;`\\n/tmp/tmphbhz9xcc.d(19):\
    \ Error: found `return` when expecting `)`\\nFailed: [\"dmd\", \"-unittest\",\
    \ \"-v\", \"-o-\", \"/tmp/tmphbhz9xcc.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tfor (auto c : string) \n\t{\n\t\tlen++;\n\t}\n\t\n\t\
    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_0dogcy0.d(14): Error: no identifier for declarator `c`\\n/tmp/tmp_0dogcy0.d(14):\
    \ Error: expression expected, not `:`\\n/tmp/tmp_0dogcy0.d(14): Error: found `string`\
    \ when expecting `;` following `for` condition\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp_0dogcy0.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n    int i = 0;\n    while(i < string.length)\n    {\n        if(string[i] ==\
    \ '\\0')\n            break;\n        i++;\n    }\n    return i;\n}\nunittest\n\
    {\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\twhile (string[len] != '\\0')\n\t{\n\t\tlen++;\n\t}\n\
    \t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.RangeError@/tmp/tmpr3y368q3.d(14): Range violation\\n----------------\\\
    n??:? _d_arrayboundsp [0x427e0e]\\n??:? long tmpr3y368q3.strlen(immutable(char)[])\
    \ [0x427a26]\\n??:? void tmpr3y368q3.__unittest_L21_C1() [0x427a5c]\\n??:? void\
    \ tmpr3y368q3.__modtest() [0x427adc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a98a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb1d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffcc]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa9]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a961]\\n??:? runModuleUnitTests [0x42b8cd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428220]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a7]\\n??:? _d_run_main [0x428112]\\n??:? main [0x427aef]\\\
    n??:? __libc_start_main [0x387e1554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tfor (int i = 0; i < string.length; ++i)\n\t\tlen +=\
    \ (string.charCodeAt(i) > 255);\n\t\n\treturn len;\n}\nunittest\n{\n    alias\
    \ candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxsruntz8.d(15): Error: no property `charCodeAt` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxsruntz8.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tfor (int i = 0; i < string.length; i++)\n\t\tlen++;\n\
    \t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong length = 0;\n\t\n\tforeach(char c, string) {\n\t\tlength++;\n\t}\n\t\
    \n\treturn length;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2lgjb3fj.d(14): Error: no identifier for declarator `string`\\\
    n/tmp/tmp2lgjb3fj.d(14): Error: found `)` when expecting `;`\\n/tmp/tmp2lgjb3fj.d(18):\
    \ Error: found `return` when expecting `)`\\nFailed: [\"dmd\", \"-unittest\",\
    \ \"-v\", \"-o-\", \"/tmp/tmp2lgjb3fj.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tint i = 0;\n\twhile(i < string.length)\n\t{\n\t\ti++;\n\t}\n\treturn i;\n\
    }\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tforeach(char ch, string)\n\t{\n\t\tlen++;\n\t}\n\t\n\
    \treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpky7_qn0p.d(14): Error: no identifier for declarator `string`\\\
    n/tmp/tmpky7_qn0p.d(14): Error: found `)` when expecting `;`\\n/tmp/tmpky7_qn0p.d(19):\
    \ Error: found `return` when expecting `)`\\nFailed: [\"dmd\", \"-unittest\",\
    \ \"-v\", \"-o-\", \"/tmp/tmpky7_qn0p.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n    int i;\n    long len = 0;\n    for (i = 0; i < string.length; ++i)\n  \
    \  {\n        if (string[i] != 0)\n            ++len;\n    }\n    return len;\n\
    }\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n    int i;\n    long result = 0;\n    for(i = 0; i < string.length; ++i)\n\
    \    {\n        if(string[i] != 0)\n            ++result;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tint i;\n\tlong len = 0;\n\t\n\tfor(i = 0; string[i] != '\\0'; i++)\n\t\t\
    len++;\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n \
    \   assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"\
    asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.RangeError@/tmp/tmp0w78kzuv.d(15): Range violation\\n----------------\\\
    n??:? _d_arrayboundsp [0x427e06]\\n??:? long tmp0w78kzuv.strlen(immutable(char)[])\
    \ [0x427a26]\\n??:? void tmp0w78kzuv.__unittest_L20_C1() [0x427a58]\\n??:? void\
    \ tmp0w78kzuv.__modtest() [0x427ad8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baef]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a982]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb15]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc4]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa1]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a959]\\n??:? runModuleUnitTests [0x42b8c5]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428218]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42819f]\\n??:? _d_run_main [0x42810a]\\n??:? main [0x427aeb]\\\
    n??:? __libc_start_main [0xadd74554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tfor (auto c : string) \n\t{\n\t\tlen++;\n\t}\n\t\n\t\
    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxhfbsvl2.d(14): Error: no identifier for declarator `c`\\n/tmp/tmpxhfbsvl2.d(14):\
    \ Error: expression expected, not `:`\\n/tmp/tmpxhfbsvl2.d(14): Error: found `string`\
    \ when expecting `;` following `for` condition\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpxhfbsvl2.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tfor(string::iterator it = string.begin(); it != string.end();\
    \ ++it)\n\t\tlen++;\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate =\
    \ strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") ==\
    \ 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1fcbvk3q.d(14): Error: use `.` for member lookup, not `::`\\\
    n/tmp/tmp1fcbvk3q.d(14): Error: found `it` when expecting `;` following `for`\
    \ condition\\n/tmp/tmp1fcbvk3q.d(14): Error: expression expected, not `=`\\n/tmp/tmp1fcbvk3q.d(14):\
    \ Error: found `string` when expecting `)`\\n/tmp/tmp1fcbvk3q.d(14): Error: found\
    \ `)` when expecting `;` following statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp1fcbvk3q.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tforeach(char c, string) {\n\t\tlen++;\n\t}\n\t\n\treturn\
    \ len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwftcugp1.d(14): Error: no identifier for declarator `string`\\\
    n/tmp/tmpwftcugp1.d(14): Error: found `)` when expecting `;`\\n/tmp/tmpwftcugp1.d(18):\
    \ Error: found `return` when expecting `)`\\nFailed: [\"dmd\", \"-unittest\",\
    \ \"-v\", \"-o-\", \"/tmp/tmpwftcugp1.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tfor(string::iterator it = string.begin(); it != string.end();\
    \ ++it) \n\t{\n\t\t++len;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate\
    \ = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\"\
    ) == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpon0nufe2.d(14): Error: use `.` for member lookup, not `::`\\\
    n/tmp/tmpon0nufe2.d(14): Error: found `it` when expecting `;` following `for`\
    \ condition\\n/tmp/tmpon0nufe2.d(14): Error: expression expected, not `=`\\n/tmp/tmpon0nufe2.d(14):\
    \ Error: found `string` when expecting `)`\\n/tmp/tmpon0nufe2.d(14): Error: found\
    \ `)` when expecting `;` following statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpon0nufe2.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tfor(auto c : string) \n\t{\n\t\tlen++;\n\t}\n\t\n\t\
    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpcqehdm28.d(14): Error: no identifier for declarator `c`\\n/tmp/tmpcqehdm28.d(14):\
    \ Error: expression expected, not `:`\\n/tmp/tmpcqehdm28.d(14): Error: found `string`\
    \ when expecting `;` following `for` condition\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpcqehdm28.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\twhile (string[len] != '\\0')\n\t{\n\t\tlen++;\n\t}\n\
    \t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.RangeError@/tmp/tmpgxrv0_aw.d(14): Range violation\\n----------------\\\
    n??:? _d_arrayboundsp [0x427e0e]\\n??:? long tmpgxrv0_aw.strlen(immutable(char)[])\
    \ [0x427a26]\\n??:? void tmpgxrv0_aw.__unittest_L21_C1() [0x427a5c]\\n??:? void\
    \ tmpgxrv0_aw.__modtest() [0x427adc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a98a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb1d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffcc]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa9]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a961]\\n??:? runModuleUnitTests [0x42b8cd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428220]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a7]\\n??:? _d_run_main [0x428112]\\n??:? main [0x427aef]\\\
    n??:? __libc_start_main [0xaeec554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n    int i = 0;\n    while(i < string.length)\n    {\n        i++;\n    }\n\
    \    return i;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tfor( int i = 0; i < string.length; ++i )\n\t\tlen +=\
    \ string[i] == '\\0' ? 1 : 0;\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate\
    \ = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\"\
    ) == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpahyghfy0.d(24): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d75]\\n??:? void tmpahyghfy0.__unittest_L19_C1()\
    \ [0x427ab9]\\n??:? void tmpahyghfy0.__modtest() [0x427af8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9a2]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb35]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe4]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fac1]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a979]\\n??:? runModuleUnitTests [0x42b8e5]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428238]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bf]\\n??:? _d_run_main [0x42812a]\\n??:? main [0x427b0b]\\\
    n??:? __libc_start_main [0x4b48c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tfor (auto c : string) \n\t{\n\t\tlen++;\n\t}\n\t\n\t\
    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpd26f5atn.d(14): Error: no identifier for declarator `c`\\n/tmp/tmpd26f5atn.d(14):\
    \ Error: expression expected, not `:`\\n/tmp/tmpd26f5atn.d(14): Error: found `string`\
    \ when expecting `;` following `for` condition\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpd26f5atn.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n    long len = 0;\n    \n    foreach(char ch, string) {\n        len++;\n \
    \   }\n    \n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n   \
    \ assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpaem7otyl.d(14): Error: no identifier for declarator `string`\\\
    n/tmp/tmpaem7otyl.d(14): Error: found `)` when expecting `;`\\n/tmp/tmpaem7otyl.d(18):\
    \ Error: found `return` when expecting `)`\\nFailed: [\"dmd\", \"-unittest\",\
    \ \"-v\", \"-o-\", \"/tmp/tmpaem7otyl.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong result = 0;\n\t\n\tforeach(char c, string) {\n\t\tresult += 1;\n\t}\n\
    \t\n\treturn result;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpbbx_ew9a.d(14): Error: no identifier for declarator `string`\\\
    n/tmp/tmpbbx_ew9a.d(14): Error: found `)` when expecting `;`\\n/tmp/tmpbbx_ew9a.d(18):\
    \ Error: found `return` when expecting `)`\\nFailed: [\"dmd\", \"-unittest\",\
    \ \"-v\", \"-o-\", \"/tmp/tmpbbx_ew9a.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\twhile (string[len] != '\\0')\n\t{\n\t\tlen++;\n\t}\n\
    \t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.RangeError@/tmp/tmpjf2ton1w.d(14): Range violation\\n----------------\\\
    n??:? _d_arrayboundsp [0x427e0e]\\n??:? long tmpjf2ton1w.strlen(immutable(char)[])\
    \ [0x427a26]\\n??:? void tmpjf2ton1w.__unittest_L21_C1() [0x427a5c]\\n??:? void\
    \ tmpjf2ton1w.__modtest() [0x427adc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a98a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb1d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffcc]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa9]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a961]\\n??:? runModuleUnitTests [0x42b8cd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428220]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a7]\\n??:? _d_run_main [0x428112]\\n??:? main [0x427aef]\\\
    n??:? __libc_start_main [0x49630554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong result = 0;\n\t\n\tfor (int i = 0; i < string.length; i++)\n\t{\n\t\t\
    result += string[i];\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate\
    \ = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\"\
    ) == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpu577l1vj.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d65]\\n??:? void tmpu577l1vj.__unittest_L21_C1()\
    \ [0x427aa9]\\n??:? void tmpu577l1vj.__modtest() [0x427ae8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baff]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a992]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb25]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd4]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab1]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a969]\\n??:? runModuleUnitTests [0x42b8d5]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428228]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281af]\\n??:? _d_run_main [0x42811a]\\n??:? main [0x427afb]\\\
    n??:? __libc_start_main [0xf798f554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n    int i;\n    long len = 0;\n    for (i = 0; i < string.length; ++i)\n  \
    \  {\n        len++;\n    }\n    return len;\n}\nunittest\n{\n    alias candidate\
    \ = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\"\
    ) == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tforeach(char c, string) {\n\t\tlen++;\n\t}\n\t\n\treturn\
    \ len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpt4lan214.d(14): Error: no identifier for declarator `string`\\\
    n/tmp/tmpt4lan214.d(14): Error: found `)` when expecting `;`\\n/tmp/tmpt4lan214.d(18):\
    \ Error: found `return` when expecting `)`\\nFailed: [\"dmd\", \"-unittest\",\
    \ \"-v\", \"-o-\", \"/tmp/tmpt4lan214.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tint i = 0;\n\twhile(i < string.length)\n\t{\n\t\ti++;\n\t}\n\treturn i;\n\
    }\n/*\n Return index of first occurrence of substring in string\n    >>> strfind('abc',\
    \ 'a')\n    0\n    >>> strfind('abc', 'b')\n    1\n    \n*/\nlong strfind(string\
    \ string, string substring) \n{\n\tint i = 0;\n\twhile(i < string.length)\n\t\
    {\n\t\tif(string[i] == substring[0])\n\t\t{\n\t\t\ti++;\n\t\t\twhile(i < string.length\
    \ && string[i] == substring[0])\n\t\t\t{\n\t\t\t\ti++;\n\t\t\t}\n\t\t\treturn\
    \ i;\n\t\t}\n\t\ti++;\n\t}\n\treturn -1;\n}\n/*\n Return index of last occurrence\
    \ of substring in string\n    >>> strrfind('abc', 'a')\n    2\n    >>> strrfind('abc',\
    \ 'b')\n    3\n    \n*/\nlong strrfind(string string, string substring) \n{\n\t\
    int i = 0;\n\twhile(i < string.length)\n\t{\n\t\tif(string[i] == substring[substring.length-1])\n\
    \t\t{\n\t\t\ti++;\n\t\t\twhile(i < string.length && string[i] == substring[substring.length-1])\n\
    \t\t\t{\n\t\t\t\ti++;\n\t\t\t}\n\t\t\treturn i;\n\t\t}\n\t\ti++;\n\t}\n\treturn\
    \ -1;\n}\n/*\n Return index of first occurrence of substring in string ignoring\
    \ case\n    >>> strcasefind('abc', 'a')\n    0\n    >>> strcasefind('abc', 'b')\n\
    \    1\n    \n*/\nlong strcasefind(string string, string substring) \n{\n\tint\
    \ i = 0;\n\twhile(i < string.length)\n\t{\n\t\tif(tolower(string[i]) == tolower(substring[0]))\n\
    \t\t{\n\t\t\ti++;\n\t\t\twhile(i < string.length && tolower(string[i]) == tolower(substring[0]))\n\
    \t\t\t{\n\t\t\t\ti++;\n\t\t\t}\n\t\t\treturn i;\n\t\t}\n\t\ti++;\n\t}\n\treturn\
    \ -1;\n}\n/*\n Return index of last occurrence of substring in string ignoring\
    \ case\n    >>> strcaserfind('abc', 'a')\n    2\n    >>> strcaserfind('abc', 'b')\n\
    \    3\n    \n*/\nlong strcaserfind(string string, string substring) \n{\n\tint\
    \ i = 0;\n\twhile(i < string.length)\n\t{\n\t\tif(tolower(string[i]) == tolower(substring[substring.length-1]))\n\
    \t\t{\n\t\t\ti++;\n\t\t\twhile(i < string.length && tolower(string[i]) == tolower(substring[substring.length-1]))\n\
    \t\t\t{\n\t\t\t\ti++;\n\t\t\t}\n\t\t\treturn i;\n\t\t}\n\t\ti++;\n\t}\n\treturn\
    \ -1;\n}\n/*\n Return index of first occurrence of substring in string ignor\n\
    unittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n\
    \    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppml5p459.d(123): Error: unterminated /* */ comment\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppml5p459.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tint i = 0;\n\twhile(i < string.length)\n\t{\n\t\ti++;\n\t}\n\treturn i;\n\
    }\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tfor(auto c : string) \n\t{\n\t\tlen++;\n\t}\n\t\n\t\
    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp20_5jvt_.d(14): Error: no identifier for declarator `c`\\n/tmp/tmp20_5jvt_.d(14):\
    \ Error: expression expected, not `:`\\n/tmp/tmp20_5jvt_.d(14): Error: found `string`\
    \ when expecting `;` following `for` condition\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp20_5jvt_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n    int i;\n    long len = 0;\n    for(i = 0; i < string.length; ++i)\n   \
    \     len += 1;\n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n  \
    \  assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong length = 0;\n\t\n\tforeach(char c, string)\n\t{\n\t\tlength++;\n\t}\n\
    \t\n\treturn length;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjq5aqam9.d(14): Error: no identifier for declarator `string`\\\
    n/tmp/tmpjq5aqam9.d(14): Error: found `)` when expecting `;`\\n/tmp/tmpjq5aqam9.d(19):\
    \ Error: found `return` when expecting `)`\\nFailed: [\"dmd\", \"-unittest\",\
    \ \"-v\", \"-o-\", \"/tmp/tmpjq5aqam9.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n    long len = 0;\n    \n    for(auto c : string)\n    {\n        len++;\n\
    \    }\n    \n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n  \
    \  assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp15snqchs.d(14): Error: no identifier for declarator `c`\\n/tmp/tmp15snqchs.d(14):\
    \ Error: expression expected, not `:`\\n/tmp/tmp15snqchs.d(14): Error: found `string`\
    \ when expecting `;` following `for` condition\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp15snqchs.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\twhile (string[len] != '\\0')\n\t{\n\t\tlen++;\n\t}\n\
    \t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.RangeError@/tmp/tmpl7v1258y.d(14): Range violation\\n----------------\\\
    n??:? _d_arrayboundsp [0x427e0e]\\n??:? long tmpl7v1258y.strlen(immutable(char)[])\
    \ [0x427a26]\\n??:? void tmpl7v1258y.__unittest_L21_C1() [0x427a5c]\\n??:? void\
    \ tmpl7v1258y.__modtest() [0x427adc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a98a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb1d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffcc]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa9]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a961]\\n??:? runModuleUnitTests [0x42b8cd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428220]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a7]\\n??:? _d_run_main [0x428112]\\n??:? main [0x427aef]\\\
    n??:? __libc_start_main [0xc687554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n    int i;\n    long length = 0;\n    for (i = 0; i < string.length; ++i)\n\
    \    {\n        if (string[i] != 0)\n            length++;\n    }\n    return\
    \ length;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tint i;\n\tlong len = 0;\n\tfor(i = 0; i < string.length; ++i)\n\t\tlen +=\
    \ 1;\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tforeach(char ch, string)\n\t{\n\t\tlen++;\n\t}\n\t\n\
    \treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpx_6x2mq2.d(14): Error: no identifier for declarator `string`\\\
    n/tmp/tmpx_6x2mq2.d(14): Error: found `)` when expecting `;`\\n/tmp/tmpx_6x2mq2.d(19):\
    \ Error: found `return` when expecting `)`\\nFailed: [\"dmd\", \"-unittest\",\
    \ \"-v\", \"-o-\", \"/tmp/tmpx_6x2mq2.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tforeach(char c, string)\n\t\tlen++;\n\t\n\treturn len;\n\
    }\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqtvf5k4j.d(14): Error: no identifier for declarator `string`\\\
    n/tmp/tmpqtvf5k4j.d(14): Error: found `)` when expecting `;`\\n/tmp/tmpqtvf5k4j.d(15):\
    \ Error: found `;` when expecting `)`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpqtvf5k4j.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\twhile(string.data[len] != 0) \n\t{\n\t\tlen++;\n\t}\n\
    \t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdic88vb5.d(14): Error: no property `data` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdic88vb5.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n    long len = 0;\n    \n    foreach(char ch, string) \n    {\n        len++;\n\
    \    }\n    \n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n  \
    \  assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp1z2lchxf.d(14): Error: no identifier for declarator `string`\\\
    n/tmp/tmp1z2lchxf.d(14): Error: found `)` when expecting `;`\\n/tmp/tmp1z2lchxf.d(19):\
    \ Error: found `return` when expecting `)`\\nFailed: [\"dmd\", \"-unittest\",\
    \ \"-v\", \"-o-\", \"/tmp/tmp1z2lchxf.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tforeach(char c, string) {\n\t\tlen++;\n\t}\n\t\n\treturn\
    \ len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpky527agf.d(14): Error: no identifier for declarator `string`\\\
    n/tmp/tmpky527agf.d(14): Error: found `)` when expecting `;`\\n/tmp/tmpky527agf.d(18):\
    \ Error: found `return` when expecting `)`\\nFailed: [\"dmd\", \"-unittest\",\
    \ \"-v\", \"-o-\", \"/tmp/tmpky527agf.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\twhile (string[len] != '\\0')\n\t{\n\t\tlen++;\n\t}\n\
    \t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.RangeError@/tmp/tmpszn8semh.d(14): Range violation\\n----------------\\\
    n??:? _d_arrayboundsp [0x427e0e]\\n??:? long tmpszn8semh.strlen(immutable(char)[])\
    \ [0x427a26]\\n??:? void tmpszn8semh.__unittest_L21_C1() [0x427a5c]\\n??:? void\
    \ tmpszn8semh.__modtest() [0x427adc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a98a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb1d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffcc]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa9]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a961]\\n??:? runModuleUnitTests [0x42b8cd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428220]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a7]\\n??:? _d_run_main [0x428112]\\n??:? main [0x427aef]\\\
    n??:? __libc_start_main [0x9270b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n    int i = 0;\n    while(i < string.length)\n    {\n        if(string[i] ==\
    \ '\\0')\n            break;\n        i++;\n    }\n    return i;\n}\nunittest\n\
    {\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tfor (auto c : string) \n\t{\n\t\tlen++;\n\t}\n\t\n\t\
    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpe7_8755f.d(14): Error: no identifier for declarator `c`\\n/tmp/tmpe7_8755f.d(14):\
    \ Error: expression expected, not `:`\\n/tmp/tmpe7_8755f.d(14): Error: found `string`\
    \ when expecting `;` following `for` condition\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpe7_8755f.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tfor(string::iterator it = string.begin(); it != string.end();\
    \ ++it)\n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate\
    \ = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\"\
    ) == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdq70d3ne.d(14): Error: use `.` for member lookup, not `::`\\\
    n/tmp/tmpdq70d3ne.d(14): Error: found `it` when expecting `;` following `for`\
    \ condition\\n/tmp/tmpdq70d3ne.d(14): Error: expression expected, not `=`\\n/tmp/tmpdq70d3ne.d(14):\
    \ Error: found `string` when expecting `)`\\n/tmp/tmpdq70d3ne.d(14): Error: found\
    \ `)` when expecting `;` following statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpdq70d3ne.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n    int i = 0;\n    while(i < string.length)\n    {\n        i++;\n    }\n\
    \    return i;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tint i = 0;\n\twhile (string[i] != '\\0')\n\t\ti++;\n\treturn i;\n}\nunittest\n\
    {\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.RangeError@/tmp/tmp1f76djrb.d(13): Range violation\\n----------------\\\
    n??:? _d_arrayboundsp [0x427e06]\\n??:? long tmp1f76djrb.strlen(immutable(char)[])\
    \ [0x427a25]\\n??:? void tmp1f76djrb.__unittest_L17_C1() [0x427a58]\\n??:? void\
    \ tmp1f76djrb.__modtest() [0x427ad8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baef]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a982]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb15]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc4]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa1]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a959]\\n??:? runModuleUnitTests [0x42b8c5]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428218]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42819f]\\n??:? _d_run_main [0x42810a]\\n??:? main [0x427aeb]\\\
    n??:? __libc_start_main [0xd6c46554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong length = 0;\n\t\n\tfor (int i = 0; i < string.length; i++)\n\t{\n\t\t\
    length++;\n\t}\n\t\n\treturn length;\n}\nunittest\n{\n    alias candidate = strlen;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n  \
    \  assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n    long len = 0;\n    \n    for(auto c : string) \n    {\n        len++;\n\
    \    }\n    \n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n  \
    \  assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmai2gjys.d(14): Error: no identifier for declarator `c`\\n/tmp/tmpmai2gjys.d(14):\
    \ Error: expression expected, not `:`\\n/tmp/tmpmai2gjys.d(14): Error: found `string`\
    \ when expecting `;` following `for` condition\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpmai2gjys.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tfor( int i = 0; i < string.length; ++i )\n\t{\n\t\t\
    if( string[i] != 0 )\n\t\t{\n\t\t\t++len;\n\t\t}\n\t}\n\t\n\treturn len;\n}\n\
    unittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n\
    \    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tfor (auto c : string) \n\t{\n\t\tlen++;\n\t}\n\t\n\t\
    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmplnmu15jj.d(14): Error: no identifier for declarator `c`\\n/tmp/tmplnmu15jj.d(14):\
    \ Error: expression expected, not `:`\\n/tmp/tmplnmu15jj.d(14): Error: found `string`\
    \ when expecting `;` following `for` condition\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmplnmu15jj.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tfor(string::iterator it = string.begin(); it != string.end();\
    \ ++it)\n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate\
    \ = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\"\
    ) == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpcpm6cyb7.d(14): Error: use `.` for member lookup, not `::`\\\
    n/tmp/tmpcpm6cyb7.d(14): Error: found `it` when expecting `;` following `for`\
    \ condition\\n/tmp/tmpcpm6cyb7.d(14): Error: expression expected, not `=`\\n/tmp/tmpcpm6cyb7.d(14):\
    \ Error: found `string` when expecting `)`\\n/tmp/tmpcpm6cyb7.d(14): Error: found\
    \ `)` when expecting `;` following statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpcpm6cyb7.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\twhile (string[len] != '\\0')\n\t{\n\t\tlen++;\n\t}\n\
    \t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.RangeError@/tmp/tmp68udywf2.d(14): Range violation\\n----------------\\\
    n??:? _d_arrayboundsp [0x427e0e]\\n??:? long tmp68udywf2.strlen(immutable(char)[])\
    \ [0x427a26]\\n??:? void tmp68udywf2.__unittest_L21_C1() [0x427a5c]\\n??:? void\
    \ tmp68udywf2.__modtest() [0x427adc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a98a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb1d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffcc]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa9]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a961]\\n??:? runModuleUnitTests [0x42b8cd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428220]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a7]\\n??:? _d_run_main [0x428112]\\n??:? main [0x427aef]\\\
    n??:? __libc_start_main [0x18c6c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n    long len = 0;\n    \n    for(string::iterator it = string.begin(); it !=\
    \ string.end(); ++it)\n    {\n        len++;\n    }\n    \n    return len;\n}\n\
    unittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n\
    \    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjnv61pdy.d(14): Error: use `.` for member lookup, not `::`\\\
    n/tmp/tmpjnv61pdy.d(14): Error: found `it` when expecting `;` following `for`\
    \ condition\\n/tmp/tmpjnv61pdy.d(14): Error: expression expected, not `=`\\n/tmp/tmpjnv61pdy.d(14):\
    \ Error: found `string` when expecting `)`\\n/tmp/tmpjnv61pdy.d(14): Error: found\
    \ `)` when expecting `;` following statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpjnv61pdy.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tfor( int i = 0; i < string.length; ++i )\n\t\tif( string[i]\
    \ != 0 )\n\t\t\t++len;\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate\
    \ = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\"\
    ) == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tfor (auto c : string) \n\t{\n\t\tlen++;\n\t}\n\t\n\t\
    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpghn8ky0c.d(14): Error: no identifier for declarator `c`\\n/tmp/tmpghn8ky0c.d(14):\
    \ Error: expression expected, not `:`\\n/tmp/tmpghn8ky0c.d(14): Error: found `string`\
    \ when expecting `;` following `for` condition\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpghn8ky0c.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tint i = 0;\n\twhile (string[i] != '\\0') {\n\t\ti++;\n\t}\n\treturn i;\n\
    }\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.RangeError@/tmp/tmp_oq6i6rd.d(13): Range violation\\n----------------\\\
    n??:? _d_arrayboundsp [0x427e06]\\n??:? long tmp_oq6i6rd.strlen(immutable(char)[])\
    \ [0x427a25]\\n??:? void tmp_oq6i6rd.__unittest_L18_C1() [0x427a58]\\n??:? void\
    \ tmp_oq6i6rd.__modtest() [0x427ad8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baef]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a982]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb15]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc4]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa1]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a959]\\n??:? runModuleUnitTests [0x42b8c5]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428218]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42819f]\\n??:? _d_run_main [0x42810a]\\n??:? main [0x427aeb]\\\
    n??:? __libc_start_main [0xb384554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tint i = 0;\n\twhile(string.data[i])\n\t{\n\t\ti++;\n\t}\n\treturn i;\n}\n\
    unittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n\
    \    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpnx4rujie.d(13): Error: no property `data` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnx4rujie.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tint i = 0;\n\twhile (string[i] != '\\0')\n\t\ti++;\n\treturn i;\n}\nunittest\n\
    {\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.RangeError@/tmp/tmpb3hohve9.d(13): Range violation\\n----------------\\\
    n??:? _d_arrayboundsp [0x427e06]\\n??:? long tmpb3hohve9.strlen(immutable(char)[])\
    \ [0x427a25]\\n??:? void tmpb3hohve9.__unittest_L17_C1() [0x427a58]\\n??:? void\
    \ tmpb3hohve9.__modtest() [0x427ad8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baef]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a982]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb15]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc4]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa1]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a959]\\n??:? runModuleUnitTests [0x42b8c5]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428218]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42819f]\\n??:? _d_run_main [0x42810a]\\n??:? main [0x427aeb]\\\
    n??:? __libc_start_main [0xf806b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\twhile (string[len] != '\\0')\n\t\tlen++;\n\t\n\treturn\
    \ len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.RangeError@/tmp/tmp6xz5jwmw.d(14): Range violation\\n----------------\\\
    n??:? _d_arrayboundsp [0x427e0e]\\n??:? long tmp6xz5jwmw.strlen(immutable(char)[])\
    \ [0x427a26]\\n??:? void tmp6xz5jwmw.__unittest_L19_C1() [0x427a5c]\\n??:? void\
    \ tmp6xz5jwmw.__modtest() [0x427adc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a98a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb1d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffcc]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa9]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a961]\\n??:? runModuleUnitTests [0x42b8cd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428220]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a7]\\n??:? _d_run_main [0x428112]\\n??:? main [0x427aef]\\\
    n??:? __libc_start_main [0x4c282554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tforeach(char c, string) {\n\t\tlen++;\n\t}\n\t\n\treturn\
    \ len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpov4f2gep.d(14): Error: no identifier for declarator `string`\\\
    n/tmp/tmpov4f2gep.d(14): Error: found `)` when expecting `;`\\n/tmp/tmpov4f2gep.d(18):\
    \ Error: found `return` when expecting `)`\\nFailed: [\"dmd\", \"-unittest\",\
    \ \"-v\", \"-o-\", \"/tmp/tmpov4f2gep.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n    int i;\n    long len = 0;\n    for (i = 0; i < string.length; ++i)\n  \
    \      len += 1;\n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n  \
    \  assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tfor (int i = 0; i < string.length; ++i)\n\t\tlen +=\
    \ 1;\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n   \
    \ assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"\
    asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n    int i;\n    long length = 0;\n    for(i = 0; i < string.length; ++i)\n\
    \    {\n        length ++;\n    }\n    return length;\n}\nunittest\n{\n    alias\
    \ candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tfor(string::iterator it = string.begin(); it != string.end();\
    \ ++it)\n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate\
    \ = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\"\
    ) == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpo7p_mbq_.d(14): Error: use `.` for member lookup, not `::`\\\
    n/tmp/tmpo7p_mbq_.d(14): Error: found `it` when expecting `;` following `for`\
    \ condition\\n/tmp/tmpo7p_mbq_.d(14): Error: expression expected, not `=`\\n/tmp/tmpo7p_mbq_.d(14):\
    \ Error: found `string` when expecting `)`\\n/tmp/tmpo7p_mbq_.d(14): Error: found\
    \ `)` when expecting `;` following statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpo7p_mbq_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n    int i;\n    long len = 0;\n    for(i = 0; i < string.length; ++i)\n   \
    \ {\n        if(string[i] != '\\0')\n            ++len;\n    }\n    return len;\n\
    }\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong length = 0;\n\t\n\tforeach(char c, string)\n\t{\n\t\tlength++;\n\t}\n\
    \t\n\treturn length;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdt2_d60j.d(14): Error: no identifier for declarator `string`\\\
    n/tmp/tmpdt2_d60j.d(14): Error: found `)` when expecting `;`\\n/tmp/tmpdt2_d60j.d(19):\
    \ Error: found `return` when expecting `)`\\nFailed: [\"dmd\", \"-unittest\",\
    \ \"-v\", \"-o-\", \"/tmp/tmpdt2_d60j.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tforeach(char c, string) {\n\t\tlen++;\n\t}\n\t\n\treturn\
    \ len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgqnukbsy.d(14): Error: no identifier for declarator `string`\\\
    n/tmp/tmpgqnukbsy.d(14): Error: found `)` when expecting `;`\\n/tmp/tmpgqnukbsy.d(18):\
    \ Error: found `return` when expecting `)`\\nFailed: [\"dmd\", \"-unittest\",\
    \ \"-v\", \"-o-\", \"/tmp/tmpgqnukbsy.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tint i = 0;\n\twhile(!string.empty() && string.at(i) != '\\0')\n\t{\n\t\t\
    i++;\n\t}\n\treturn i;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxekm_618.d(13): Error: no property `empty` for type `string`\\\
    n/tmp/tmpxekm_618.d(13): Error: no property `at` for type `string`\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxekm_618.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tint i = 0;\n\twhile(i < string.length)\n\t{\n\t\ti++;\n\t}\n\treturn i;\n\
    }\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tint i = 0;\n\twhile(i < string.length) \n\t{\n\t\ti++;\n\t}\n\treturn i;\n\
    }\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n    int i = 0;\n    while(string.data[i])\n    {\n        i++;\n    }\n   \
    \ return i;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp970neusw.d(13): Error: no property `data` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp970neusw.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tint i = 0;\n\twhile(string.data[i])\n\t\ti++;\n\treturn i;\n}\nunittest\n\
    {\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpozoxn49x.d(13): Error: no property `data` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpozoxn49x.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tint i = 0;\n\twhile(i < string.length)\n\t{\n\t\ti++;\n\t}\n\treturn i;\n\
    }\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong result = 0;\n\t\n\tforeach(char c, string) {\n\t\tresult += 1;\n\t}\n\
    \t\n\treturn result;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpm2w61b0k.d(14): Error: no identifier for declarator `string`\\\
    n/tmp/tmpm2w61b0k.d(14): Error: found `)` when expecting `;`\\n/tmp/tmpm2w61b0k.d(18):\
    \ Error: found `return` when expecting `)`\\nFailed: [\"dmd\", \"-unittest\",\
    \ \"-v\", \"-o-\", \"/tmp/tmpm2w61b0k.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tfor(auto c : string)\n\t\tlen++;\n\t\n\treturn len;\n\
    }\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5z3apb_9.d(14): Error: no identifier for declarator `c`\\n/tmp/tmp5z3apb_9.d(14):\
    \ Error: expression expected, not `:`\\n/tmp/tmp5z3apb_9.d(14): Error: found `string`\
    \ when expecting `;` following `for` condition\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp5z3apb_9.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n    int i;\n    long result = 0;\n    for(i = 0; i < string.length; ++i)\n\
    \    {\n        if(string[i] != '\\0')\n        {\n            ++result;\n   \
    \     }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = strlen;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n  \
    \  assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\twhile (string[len] != '\\0')\n\t\tlen++;\n\t\n\treturn\
    \ len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.RangeError@/tmp/tmpjvu511vp.d(14): Range violation\\n----------------\\\
    n??:? _d_arrayboundsp [0x427e0e]\\n??:? long tmpjvu511vp.strlen(immutable(char)[])\
    \ [0x427a26]\\n??:? void tmpjvu511vp.__unittest_L19_C1() [0x427a5c]\\n??:? void\
    \ tmpjvu511vp.__modtest() [0x427adc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a98a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb1d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffcc]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa9]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a961]\\n??:? runModuleUnitTests [0x42b8cd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428220]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a7]\\n??:? _d_run_main [0x428112]\\n??:? main [0x427aef]\\\
    n??:? __libc_start_main [0x27d89554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tforeach(char c, string)\n\t{\n\t\tlen++;\n\t}\n\t\n\t\
    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpct28sjae.d(14): Error: no identifier for declarator `string`\\\
    n/tmp/tmpct28sjae.d(14): Error: found `)` when expecting `;`\\n/tmp/tmpct28sjae.d(19):\
    \ Error: found `return` when expecting `)`\\nFailed: [\"dmd\", \"-unittest\",\
    \ \"-v\", \"-o-\", \"/tmp/tmpct28sjae.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\twhile(string.data[len] != 0) \n\t{\n\t\tlen++;\n\t}\n\
    \t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmy794f7c.d(14): Error: no property `data` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmy794f7c.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\twhile (string[len] != '\\0')\n\t{\n\t\tlen++;\n\t}\n\
    \t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.RangeError@/tmp/tmponbt2ju5.d(14): Range violation\\n----------------\\\
    n??:? _d_arrayboundsp [0x427e0e]\\n??:? long tmponbt2ju5.strlen(immutable(char)[])\
    \ [0x427a26]\\n??:? void tmponbt2ju5.__unittest_L21_C1() [0x427a5c]\\n??:? void\
    \ tmponbt2ju5.__modtest() [0x427adc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a98a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb1d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffcc]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa9]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a961]\\n??:? runModuleUnitTests [0x42b8cd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428220]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a7]\\n??:? _d_run_main [0x428112]\\n??:? main [0x427aef]\\\
    n??:? __libc_start_main [0x42238554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\twhile (string[len] != '\\0') \n\t{\n\t\tlen++;\n\t}\n\
    \t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.RangeError@/tmp/tmppk4zg_zf.d(14): Range violation\\n----------------\\\
    n??:? _d_arrayboundsp [0x427e0e]\\n??:? long tmppk4zg_zf.strlen(immutable(char)[])\
    \ [0x427a26]\\n??:? void tmppk4zg_zf.__unittest_L21_C1() [0x427a5c]\\n??:? void\
    \ tmppk4zg_zf.__modtest() [0x427adc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a98a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb1d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffcc]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa9]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a961]\\n??:? runModuleUnitTests [0x42b8cd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428220]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a7]\\n??:? _d_run_main [0x428112]\\n??:? main [0x427aef]\\\
    n??:? __libc_start_main [0x78642554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tfor (auto c : string) \n\t{\n\t\tlen++;\n\t}\n\t\n\t\
    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2i6ojkbf.d(14): Error: no identifier for declarator `c`\\n/tmp/tmp2i6ojkbf.d(14):\
    \ Error: expression expected, not `:`\\n/tmp/tmp2i6ojkbf.d(14): Error: found `string`\
    \ when expecting `;` following `for` condition\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp2i6ojkbf.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tfor(string::iterator it = string.begin(); it != string.end();\
    \ ++it) {\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate\
    \ = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\"\
    ) == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4vsbssj7.d(14): Error: use `.` for member lookup, not `::`\\\
    n/tmp/tmp4vsbssj7.d(14): Error: found `it` when expecting `;` following `for`\
    \ condition\\n/tmp/tmp4vsbssj7.d(14): Error: expression expected, not `=`\\n/tmp/tmp4vsbssj7.d(14):\
    \ Error: found `string` when expecting `)`\\n/tmp/tmp4vsbssj7.d(14): Error: found\
    \ `)` when expecting `;` following statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp4vsbssj7.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tint i;\n\tlong len = 0;\n\tfor(i = 0; i < string.length; ++i)\n\t\tlen +=\
    \ 1;\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\twhile (string[len] != '\\0')\n\t\tlen++;\n\t\n\treturn\
    \ len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.RangeError@/tmp/tmp4v2xnxl_.d(14): Range violation\\n----------------\\\
    n??:? _d_arrayboundsp [0x427e0e]\\n??:? long tmp4v2xnxl_.strlen(immutable(char)[])\
    \ [0x427a26]\\n??:? void tmp4v2xnxl_.__unittest_L19_C1() [0x427a5c]\\n??:? void\
    \ tmp4v2xnxl_.__modtest() [0x427adc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a98a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb1d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffcc]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa9]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a961]\\n??:? runModuleUnitTests [0x42b8cd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428220]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a7]\\n??:? _d_run_main [0x428112]\\n??:? main [0x427aef]\\\
    n??:? __libc_start_main [0xa9302554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n    long len = 0;\n    \n    for(auto c : string)\n    {\n        len++;\n\
    \    }\n    \n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n  \
    \  assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptgxmia0y.d(14): Error: no identifier for declarator `c`\\n/tmp/tmptgxmia0y.d(14):\
    \ Error: expression expected, not `:`\\n/tmp/tmptgxmia0y.d(14): Error: found `string`\
    \ when expecting `;` following `for` condition\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmptgxmia0y.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong length = 0;\n\t\n\tfor (int i = 0; i < string.length; ++i)\n\t{\n\t\t\
    length += 1;\n\t}\n\t\n\treturn length;\n}\nunittest\n{\n    alias candidate =\
    \ strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") ==\
    \ 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n    int i;\n    long len = 0;\n    for(i = 0; i < string.length; ++i)\n   \
    \ {\n        if(string[i] != 0)\n        {\n            ++len;\n        }\n  \
    \  }\n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong result = 0;\n\t\n\tfor( int i = 0; i < string.length; ++i )\n\t{\n\t\
    \tif( string[i] >= '0' && string[i] <= '9' )\n\t\t\tresult += string[i] - '0';\n\
    \t\telse if( string[i] >= 'a' && string[i] <= 'z' )\n\t\t\tresult += string[i]\
    \ - 'a' + 1;\n\t\telse if( string[i] >= 'A' && string[i] <= 'Z' )\n\t\t\tresult\
    \ += string[i] - 'A' + 1;\n\t\telse\n\t\t\tresult += string[i];\n\t}\n\t\n\treturn\
    \ result;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpm8ztc4x7.d(33): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427f15]\\n??:? void tmpm8ztc4x7.__unittest_L28_C1()\
    \ [0x427c59]\\n??:? void tmpm8ztc4x7.__modtest() [0x427c98]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bcaf]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42ab42]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fcd5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430184]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fc61]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42ab19]\\n??:? runModuleUnitTests [0x42ba85]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4283d8]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42835f]\\n??:? _d_run_main [0x4282ca]\\n??:? main [0x427cab]\\\
    n??:? __libc_start_main [0x482c1554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tfor (auto c : string) \n\t{\n\t\tlen++;\n\t}\n\t\n\t\
    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp670czccy.d(14): Error: no identifier for declarator `c`\\n/tmp/tmp670czccy.d(14):\
    \ Error: expression expected, not `:`\\n/tmp/tmp670czccy.d(14): Error: found `string`\
    \ when expecting `;` following `for` condition\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp670czccy.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\twhile(string.data[len] != '\\0')\n\t{\n\t\tlen++;\n\t\
    }\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxnr6bjuv.d(14): Error: no property `data` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxnr6bjuv.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n    int i;\n    long len = 0;\n    for(i = 0; i < string.length; ++i)\n   \
    \ {\n        len++;\n    }\n    return len;\n}\nunittest\n{\n    alias candidate\
    \ = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\"\
    ) == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\twhile(string.data[len] != '\\0')\n\t{\n\t\tlen++;\n\t\
    }\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqupqfw1v.d(14): Error: no property `data` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqupqfw1v.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n    long len = 0;\n    \n    for(auto c : string) \n    {\n        len++;\n\
    \    }\n    \n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n  \
    \  assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp15izwejj.d(14): Error: no identifier for declarator `c`\\n/tmp/tmp15izwejj.d(14):\
    \ Error: expression expected, not `:`\\n/tmp/tmp15izwejj.d(14): Error: found `string`\
    \ when expecting `;` following `for` condition\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp15izwejj.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tfor(string::iterator it = string.begin(); it != string.end();\
    \ ++it) \n\t{\n\t\t++len;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate\
    \ = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\"\
    ) == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpx39ws859.d(14): Error: use `.` for member lookup, not `::`\\\
    n/tmp/tmpx39ws859.d(14): Error: found `it` when expecting `;` following `for`\
    \ condition\\n/tmp/tmpx39ws859.d(14): Error: expression expected, not `=`\\n/tmp/tmpx39ws859.d(14):\
    \ Error: found `string` when expecting `)`\\n/tmp/tmpx39ws859.d(14): Error: found\
    \ `)` when expecting `;` following statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpx39ws859.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tfor(var i = 0; i < string.length; ++i)\n\t\tlen += string.charCodeAt(i);\n\
    \t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpy3qc4hcp.d(14): Error: undefined identifier `var`\\n/tmp/tmpy3qc4hcp.d(15):\
    \ Error: no property `charCodeAt` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpy3qc4hcp.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tfor(string::iterator it = string.begin(); it != string.end();\
    \ ++it) \n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate\
    \ = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\"\
    ) == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkgamm4e8.d(14): Error: use `.` for member lookup, not `::`\\\
    n/tmp/tmpkgamm4e8.d(14): Error: found `it` when expecting `;` following `for`\
    \ condition\\n/tmp/tmpkgamm4e8.d(14): Error: expression expected, not `=`\\n/tmp/tmpkgamm4e8.d(14):\
    \ Error: found `string` when expecting `)`\\n/tmp/tmpkgamm4e8.d(14): Error: found\
    \ `)` when expecting `;` following statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpkgamm4e8.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tforeach(char ch, string)\n\t{\n\t\tlen++;\n\t}\n\t\n\
    \treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpeyo17v7l.d(14): Error: no identifier for declarator `string`\\\
    n/tmp/tmpeyo17v7l.d(14): Error: found `)` when expecting `;`\\n/tmp/tmpeyo17v7l.d(19):\
    \ Error: found `return` when expecting `)`\\nFailed: [\"dmd\", \"-unittest\",\
    \ \"-v\", \"-o-\", \"/tmp/tmpeyo17v7l.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tfor (auto c : string) \n\t{\n\t\tlen++;\n\t}\n\t\n\t\
    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0_nu1n91.d(14): Error: no identifier for declarator `c`\\n/tmp/tmp0_nu1n91.d(14):\
    \ Error: expression expected, not `:`\\n/tmp/tmp0_nu1n91.d(14): Error: found `string`\
    \ when expecting `;` following `for` condition\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp0_nu1n91.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tfor(auto c : string)\n\t{\n\t\tlen++;\n\t}\n\t\n\treturn\
    \ len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkhflb84u.d(14): Error: no identifier for declarator `c`\\n/tmp/tmpkhflb84u.d(14):\
    \ Error: expression expected, not `:`\\n/tmp/tmpkhflb84u.d(14): Error: found `string`\
    \ when expecting `;` following `for` condition\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpkhflb84u.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tfor(auto c : string)\n\t{\n\t\tlen++;\n\t}\n\t\n\treturn\
    \ len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpu63_d08h.d(14): Error: no identifier for declarator `c`\\n/tmp/tmpu63_d08h.d(14):\
    \ Error: expression expected, not `:`\\n/tmp/tmpu63_d08h.d(14): Error: found `string`\
    \ when expecting `;` following `for` condition\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpu63_d08h.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\twhile (string[len] != '\\0')\n\t{\n\t\tlen++;\n\t}\n\
    \t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.RangeError@/tmp/tmp7kqojz80.d(14): Range violation\\n----------------\\\
    n??:? _d_arrayboundsp [0x427e0e]\\n??:? long tmp7kqojz80.strlen(immutable(char)[])\
    \ [0x427a26]\\n??:? void tmp7kqojz80.__unittest_L21_C1() [0x427a5c]\\n??:? void\
    \ tmp7kqojz80.__modtest() [0x427adc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a98a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb1d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffcc]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa9]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a961]\\n??:? runModuleUnitTests [0x42b8cd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428220]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a7]\\n??:? _d_run_main [0x428112]\\n??:? main [0x427aef]\\\
    n??:? __libc_start_main [0x30e93554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\twhile (string[len] != '\\0')\n\t{\n\t\tlen++;\n\t}\n\
    \t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.RangeError@/tmp/tmpul2r8i73.d(14): Range violation\\n----------------\\\
    n??:? _d_arrayboundsp [0x427e0e]\\n??:? long tmpul2r8i73.strlen(immutable(char)[])\
    \ [0x427a26]\\n??:? void tmpul2r8i73.__unittest_L21_C1() [0x427a5c]\\n??:? void\
    \ tmpul2r8i73.__modtest() [0x427adc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a98a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb1d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffcc]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa9]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a961]\\n??:? runModuleUnitTests [0x42b8cd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428220]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a7]\\n??:? _d_run_main [0x428112]\\n??:? main [0x427aef]\\\
    n??:? __libc_start_main [0xecc15554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong result = 0;\n\t\n\tfor( int i = 0; i < string.length; ++i )\n\t\tresult\
    \ += string[i];\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = strlen;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n  \
    \  assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpkk1v6yoh.d(24): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d6d]\\n??:? void tmpkk1v6yoh.__unittest_L19_C1()\
    \ [0x427aad]\\n??:? void tmpkk1v6yoh.__modtest() [0x427aec]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb07]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a99a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb2d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffdc]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fab9]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a971]\\n??:? runModuleUnitTests [0x42b8dd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428230]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281b7]\\n??:? _d_run_main [0x428122]\\n??:? main [0x427aff]\\\
    n??:? __libc_start_main [0xf0a0b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\twhile (string[len] != '\\0')\n\t\tlen++;\n\t\n\treturn\
    \ len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.RangeError@/tmp/tmpqvy0rs64.d(14): Range violation\\n----------------\\\
    n??:? _d_arrayboundsp [0x427e0e]\\n??:? long tmpqvy0rs64.strlen(immutable(char)[])\
    \ [0x427a26]\\n??:? void tmpqvy0rs64.__unittest_L19_C1() [0x427a5c]\\n??:? void\
    \ tmpqvy0rs64.__modtest() [0x427adc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a98a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb1d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffcc]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa9]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a961]\\n??:? runModuleUnitTests [0x42b8cd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428220]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a7]\\n??:? _d_run_main [0x428112]\\n??:? main [0x427aef]\\\
    n??:? __libc_start_main [0x9906e554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n    int i;\n    long len = 0;\n    for(i = 0; i < string.length; ++i)\n   \
    \ {\n        if(string[i] != 0)\n        {\n            ++len;\n        }\n  \
    \  }\n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\twhile(string.data[len] != '\\0')\n\t{\n\t\tlen++;\n\t\
    }\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpc0t7cpiq.d(14): Error: no property `data` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc0t7cpiq.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n    int i;\n    long len = 0;\n    for (i = 0; i < string.length; ++i)\n  \
    \  {\n        if (string[i] != 0)\n        {\n            len++;\n        }\n\
    \    }\n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n   \
    \ assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"\
    asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tint i = 0;\n\twhile(i < string.length)\n\t{\n\t\ti++;\n\t}\n\treturn i;\n\
    }\n/*\n Return length of given string\n    >>> strlen('')\n    0\n    >>> strlen('abc')\n\
    \    3\n    \n*/\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\twhile (string[len] != '\\0')\n\t\tlen++;\n\t\n\treturn\
    \ len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.RangeError@/tmp/tmpe1islc6c.d(14): Range violation\\n----------------\\\
    n??:? _d_arrayboundsp [0x427e0e]\\n??:? long tmpe1islc6c.strlen(immutable(char)[])\
    \ [0x427a26]\\n??:? void tmpe1islc6c.__unittest_L19_C1() [0x427a5c]\\n??:? void\
    \ tmpe1islc6c.__modtest() [0x427adc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a98a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb1d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffcc]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa9]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a961]\\n??:? runModuleUnitTests [0x42b8cd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428220]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a7]\\n??:? _d_run_main [0x428112]\\n??:? main [0x427aef]\\\
    n??:? __libc_start_main [0x44a35554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong result = 0;\n\t\n\tfor( int i = 0; i < string.length; ++i )\n\t{\n\t\
    \tif( string[i] != '\\0' )\n\t\t\t++result;\n\t}\n\t\n\treturn result;\n}\nunittest\n\
    {\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tfor (int i = 0; i < string.length; ++i)\n\t\tlen +=\
    \ 1;\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n   \
    \ assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"\
    asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong length = 0;\n\t\n\tfor (int i = 0; i < string.length; i++)\n\t{\n\t\t\
    length++;\n\t}\n\t\n\treturn length;\n}\nunittest\n{\n    alias candidate = strlen;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n  \
    \  assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong result = 0;\n\t\n\tforeach(char c, string) {\n\t\tresult += 1;\n\t}\n\
    \t\n\treturn result;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpn02f9mwm.d(14): Error: no identifier for declarator `string`\\\
    n/tmp/tmpn02f9mwm.d(14): Error: found `)` when expecting `;`\\n/tmp/tmpn02f9mwm.d(18):\
    \ Error: found `return` when expecting `)`\\nFailed: [\"dmd\", \"-unittest\",\
    \ \"-v\", \"-o-\", \"/tmp/tmpn02f9mwm.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tint i = 0;\n\twhile(!string.empty() && string.at(i) != '\\0')\n\t{\n\t\t\
    i++;\n\t}\n\treturn i;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0wt3krtn.d(13): Error: no property `empty` for type `string`\\\
    n/tmp/tmp0wt3krtn.d(13): Error: no property `at` for type `string`\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0wt3krtn.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tint i = 0;\n\twhile(string.data[i])\n\t{\n\t\ti++;\n\t}\n\treturn i;\n}\n\
    unittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n\
    \    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptot_dipm.d(13): Error: no property `data` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptot_dipm.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n    long len = 0;\n    \n    for(string::iterator it = string.begin(); it !=\
    \ string.end(); ++it)\n    {\n        len++;\n    }\n    \n    return len;\n}\n\
    unittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n\
    \    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpu2ezd02c.d(14): Error: use `.` for member lookup, not `::`\\\
    n/tmp/tmpu2ezd02c.d(14): Error: found `it` when expecting `;` following `for`\
    \ condition\\n/tmp/tmpu2ezd02c.d(14): Error: expression expected, not `=`\\n/tmp/tmpu2ezd02c.d(14):\
    \ Error: found `string` when expecting `)`\\n/tmp/tmpu2ezd02c.d(14): Error: found\
    \ `)` when expecting `;` following statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpu2ezd02c.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tfor(string::iterator it = string.begin(); it != string.end();\
    \ ++it) {\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate\
    \ = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\"\
    ) == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkyeocxon.d(14): Error: use `.` for member lookup, not `::`\\\
    n/tmp/tmpkyeocxon.d(14): Error: found `it` when expecting `;` following `for`\
    \ condition\\n/tmp/tmpkyeocxon.d(14): Error: expression expected, not `=`\\n/tmp/tmpkyeocxon.d(14):\
    \ Error: found `string` when expecting `)`\\n/tmp/tmpkyeocxon.d(14): Error: found\
    \ `)` when expecting `;` following statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpkyeocxon.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tforeach(char c, string)\n\t{\n\t\tlen++;\n\t}\n\t\n\t\
    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgx6m54bh.d(14): Error: no identifier for declarator `string`\\\
    n/tmp/tmpgx6m54bh.d(14): Error: found `)` when expecting `;`\\n/tmp/tmpgx6m54bh.d(19):\
    \ Error: found `return` when expecting `)`\\nFailed: [\"dmd\", \"-unittest\",\
    \ \"-v\", \"-o-\", \"/tmp/tmpgx6m54bh.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tfor(string::iterator it = string.begin(); it != string.end();\
    \ ++it) \n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate\
    \ = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\"\
    ) == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7jxge7vj.d(14): Error: use `.` for member lookup, not `::`\\\
    n/tmp/tmp7jxge7vj.d(14): Error: found `it` when expecting `;` following `for`\
    \ condition\\n/tmp/tmp7jxge7vj.d(14): Error: expression expected, not `=`\\n/tmp/tmp7jxge7vj.d(14):\
    \ Error: found `string` when expecting `)`\\n/tmp/tmp7jxge7vj.d(14): Error: found\
    \ `)` when expecting `;` following statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp7jxge7vj.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong length = 0;\n\t\n\tfor (int i = 0; i < string.length; ++i)\n\t\tlength\
    \ += string[i] == '\\0' ? 1 : 0;\n\t\n\treturn length;\n}\nunittest\n{\n    alias\
    \ candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpb1wvhl5y.d(24): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427d75]\\n??:? void tmpb1wvhl5y.__unittest_L19_C1()\
    \ [0x427ab9]\\n??:? void tmpb1wvhl5y.__modtest() [0x427af8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb0f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a9a2]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb35]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe4]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fac1]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a979]\\n??:? runModuleUnitTests [0x42b8e5]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428238]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281bf]\\n??:? _d_run_main [0x42812a]\\n??:? main [0x427b0b]\\\
    n??:? __libc_start_main [0xa9dee554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n    int i = 0;\n    while(i < string.length)\n    {\n        i++;\n    }\n\
    \    return i;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n    int i;\n    long len = 0;\n    for(i = 0; i < string.length; ++i)\n   \
    \ {\n        len++;\n    }\n    return len;\n}\nunittest\n{\n    alias candidate\
    \ = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\"\
    ) == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tfor (auto c : string) \n\t{\n\t\tlen++;\n\t}\n\t\n\t\
    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpt0m8rugv.d(14): Error: no identifier for declarator `c`\\n/tmp/tmpt0m8rugv.d(14):\
    \ Error: expression expected, not `:`\\n/tmp/tmpt0m8rugv.d(14): Error: found `string`\
    \ when expecting `;` following `for` condition\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpt0m8rugv.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n    int i = 0;\n    while(string.data[i])\n        i++;\n    return i;\n}\n\
    unittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n\
    \    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpqbzo5v9m.d(13): Error: no property `data` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqbzo5v9m.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tfor (auto c : string) \n\t{\n\t\tlen++;\n\t}\n\t\n\t\
    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp2u9jbuim.d(14): Error: no identifier for declarator `c`\\n/tmp/tmp2u9jbuim.d(14):\
    \ Error: expression expected, not `:`\\n/tmp/tmp2u9jbuim.d(14): Error: found `string`\
    \ when expecting `;` following `for` condition\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp2u9jbuim.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tfor (auto c : string) \n\t{\n\t\tlen++;\n\t}\n\t\n\t\
    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmfthc63d.d(14): Error: no identifier for declarator `c`\\n/tmp/tmpmfthc63d.d(14):\
    \ Error: expression expected, not `:`\\n/tmp/tmpmfthc63d.d(14): Error: found `string`\
    \ when expecting `;` following `for` condition\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpmfthc63d.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tint i = 0;\n\twhile(i < string.length)\n\t{\n\t\tif(string[i] == 0)\n\t\t\
    \tbreak;\n\t\ti++;\n\t}\n\treturn i;\n}\nunittest\n{\n    alias candidate = strlen;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n  \
    \  assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tint i = 0;\n\twhile(string.data[i])\n\t\ti++;\n\treturn i;\n}\nunittest\n\
    {\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphkzg7s1e.d(13): Error: no property `data` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphkzg7s1e.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n    int i;\n    long len = 0;\n    for (i = 0; i < string.length; ++i)\n  \
    \  {\n        len++;\n    }\n    return len;\n}\nunittest\n{\n    alias candidate\
    \ = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\"\
    ) == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tint i = 0;\n\twhile(i < string.length)\n\t{\n\t\ti++;\n\t}\n\treturn i;\n\
    }\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n    int i;\n    long len = 0;\n    for(i = 0; i < string.length; ++i)\n   \
    \ {\n        if(string[i] != 0)\n            ++len;\n    }\n    return len;\n\
    }\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tforeach(char c, string) {\n\t\tlen++;\n\t}\n\t\n\treturn\
    \ len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgwxqss90.d(14): Error: no identifier for declarator `string`\\\
    n/tmp/tmpgwxqss90.d(14): Error: found `)` when expecting `;`\\n/tmp/tmpgwxqss90.d(18):\
    \ Error: found `return` when expecting `)`\\nFailed: [\"dmd\", \"-unittest\",\
    \ \"-v\", \"-o-\", \"/tmp/tmpgwxqss90.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n    int i;\n    long len = 0;\n    for(i = 0; i < string.length; ++i)\n   \
    \ {\n        len += 1;\n    }\n    return len;\n}\nunittest\n{\n    alias candidate\
    \ = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\"\
    ) == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tfor( int i = 0; i < string.length; ++i )\n\t\tlen +=\
    \ 1;\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n   \
    \ assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"\
    asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tfor(string::iterator it = string.begin(); it != string.end();\
    \ ++it)\n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate\
    \ = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\"\
    ) == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp7ejdz0rn.d(14): Error: use `.` for member lookup, not `::`\\\
    n/tmp/tmp7ejdz0rn.d(14): Error: found `it` when expecting `;` following `for`\
    \ condition\\n/tmp/tmp7ejdz0rn.d(14): Error: expression expected, not `=`\\n/tmp/tmp7ejdz0rn.d(14):\
    \ Error: found `string` when expecting `)`\\n/tmp/tmp7ejdz0rn.d(14): Error: found\
    \ `)` when expecting `;` following statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp7ejdz0rn.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n    long result = 0;\n    \n    for(string::iterator it = string.begin(); it\
    \ != string.end(); ++it) {\n        ++result;\n    }\n    \n    return result;\n\
    }\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmkm83rja.d(14): Error: use `.` for member lookup, not `::`\\\
    n/tmp/tmpmkm83rja.d(14): Error: found `it` when expecting `;` following `for`\
    \ condition\\n/tmp/tmpmkm83rja.d(14): Error: expression expected, not `=`\\n/tmp/tmpmkm83rja.d(14):\
    \ Error: found `string` when expecting `)`\\n/tmp/tmpmkm83rja.d(14): Error: found\
    \ `)` when expecting `;` following statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpmkm83rja.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tfor( int i = 0; i < string.length; ++i )\n\t\tif( string[i]\
    \ != 0 )\n\t\t\t++len;\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate\
    \ = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\"\
    ) == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tfor(string::iterator i = string.begin(); i != string.end();\
    \ ++i)\n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate\
    \ = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\"\
    ) == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdp_jrw9n.d(14): Error: use `.` for member lookup, not `::`\\\
    n/tmp/tmpdp_jrw9n.d(14): Error: found `i` when expecting `;` following `for` condition\\\
    n/tmp/tmpdp_jrw9n.d(14): Error: expression expected, not `=`\\n/tmp/tmpdp_jrw9n.d(14):\
    \ Error: found `string` when expecting `)`\\n/tmp/tmpdp_jrw9n.d(14): Error: found\
    \ `)` when expecting `;` following statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpdp_jrw9n.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n    int i;\n    long len = 0;\n    for (i = 0; i < string.length; ++i)\n  \
    \  {\n        len++;\n    }\n    return len;\n}\nunittest\n{\n    alias candidate\
    \ = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\"\
    ) == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n    int i;\n    long result = 0;\n    for(i = 0; i < string.length; ++i)\n\
    \    {\n        result += 1;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n    int i = 0;\n    \n    while(i < string.length)\n    {\n        if(string[i]\
    \ == '\\0')\n            break;\n        i++;\n    }\n    return i;\n}\nunittest\n\
    {\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tforeach(char c, string) \n\t{\n\t\tlen++;\n\t}\n\t\n\
    \treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjegwuwe9.d(14): Error: no identifier for declarator `string`\\\
    n/tmp/tmpjegwuwe9.d(14): Error: found `)` when expecting `;`\\n/tmp/tmpjegwuwe9.d(19):\
    \ Error: found `return` when expecting `)`\\nFailed: [\"dmd\", \"-unittest\",\
    \ \"-v\", \"-o-\", \"/tmp/tmpjegwuwe9.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tfor(string::iterator it = string.begin(); it != string.end();\
    \ ++it)\n\t\tlen++;\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate =\
    \ strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") ==\
    \ 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzqgpunjt.d(14): Error: use `.` for member lookup, not `::`\\\
    n/tmp/tmpzqgpunjt.d(14): Error: found `it` when expecting `;` following `for`\
    \ condition\\n/tmp/tmpzqgpunjt.d(14): Error: expression expected, not `=`\\n/tmp/tmpzqgpunjt.d(14):\
    \ Error: found `string` when expecting `)`\\n/tmp/tmpzqgpunjt.d(14): Error: found\
    \ `)` when expecting `;` following statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpzqgpunjt.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tfor (auto c : string)\n\t{\n\t\tlen++;\n\t}\n\t\n\t\
    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_zp_e786.d(14): Error: no identifier for declarator `c`\\n/tmp/tmp_zp_e786.d(14):\
    \ Error: expression expected, not `:`\\n/tmp/tmp_zp_e786.d(14): Error: found `string`\
    \ when expecting `;` following `for` condition\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp_zp_e786.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\twhile (string[len] != '\\0')\n\t\tlen++;\n\t\n\treturn\
    \ len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.RangeError@/tmp/tmpfnlmvz8y.d(14): Range violation\\n----------------\\\
    n??:? _d_arrayboundsp [0x427e0e]\\n??:? long tmpfnlmvz8y.strlen(immutable(char)[])\
    \ [0x427a26]\\n??:? void tmpfnlmvz8y.__unittest_L19_C1() [0x427a5c]\\n??:? void\
    \ tmpfnlmvz8y.__modtest() [0x427adc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a98a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb1d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffcc]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa9]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a961]\\n??:? runModuleUnitTests [0x42b8cd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428220]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a7]\\n??:? _d_run_main [0x428112]\\n??:? main [0x427aef]\\\
    n??:? __libc_start_main [0x7fc96554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tfor (int i = 0; i < string.length(); i++)\n\t{\n\t\t\
    if (string[i] != 0)\n\t\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n  \
    \  alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp87ny3mwh.d(14): Error: no property `length` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp87ny3mwh.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\twhile (string[len] != '\\0') \n\t{\n\t\tlen++;\n\t}\n\
    \t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.RangeError@/tmp/tmp6mva_u59.d(14): Range violation\\n----------------\\\
    n??:? _d_arrayboundsp [0x427e0e]\\n??:? long tmp6mva_u59.strlen(immutable(char)[])\
    \ [0x427a26]\\n??:? void tmp6mva_u59.__unittest_L21_C1() [0x427a5c]\\n??:? void\
    \ tmp6mva_u59.__modtest() [0x427adc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a98a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb1d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffcc]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa9]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a961]\\n??:? runModuleUnitTests [0x42b8cd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428220]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a7]\\n??:? _d_run_main [0x428112]\\n??:? main [0x427aef]\\\
    n??:? __libc_start_main [0x3608554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n    long len = 0;\n    \n    for(auto c : string) \n    {\n        len++;\n\
    \    }\n    \n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n  \
    \  assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpv1t4tsyv.d(14): Error: no identifier for declarator `c`\\n/tmp/tmpv1t4tsyv.d(14):\
    \ Error: expression expected, not `:`\\n/tmp/tmpv1t4tsyv.d(14): Error: found `string`\
    \ when expecting `;` following `for` condition\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpv1t4tsyv.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n    long len = 0;\n    \n    for(auto c : string)\n    {\n        len++;\n\
    \    }\n    \n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n  \
    \  assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprdzd4txf.d(14): Error: no identifier for declarator `c`\\n/tmp/tmprdzd4txf.d(14):\
    \ Error: expression expected, not `:`\\n/tmp/tmprdzd4txf.d(14): Error: found `string`\
    \ when expecting `;` following `for` condition\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmprdzd4txf.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n    long len = 0;\n    \n    for(auto c : string) \n    {\n        len++;\n\
    \    }\n    \n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n  \
    \  assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpemay57h2.d(14): Error: no identifier for declarator `c`\\n/tmp/tmpemay57h2.d(14):\
    \ Error: expression expected, not `:`\\n/tmp/tmpemay57h2.d(14): Error: found `string`\
    \ when expecting `;` following `for` condition\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpemay57h2.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tfor(string::iterator it = string.begin(); it != string.end();\
    \ ++it) {\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate\
    \ = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\"\
    ) == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6g0_fran.d(14): Error: use `.` for member lookup, not `::`\\\
    n/tmp/tmp6g0_fran.d(14): Error: found `it` when expecting `;` following `for`\
    \ condition\\n/tmp/tmp6g0_fran.d(14): Error: expression expected, not `=`\\n/tmp/tmp6g0_fran.d(14):\
    \ Error: found `string` when expecting `)`\\n/tmp/tmp6g0_fran.d(14): Error: found\
    \ `)` when expecting `;` following statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp6g0_fran.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\twhile (string[len] != '\\0') \n\t{\n\t\tlen++;\n\t}\n\
    \t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.RangeError@/tmp/tmptnx2co9n.d(14): Range violation\\n----------------\\\
    n??:? _d_arrayboundsp [0x427e0e]\\n??:? long tmptnx2co9n.strlen(immutable(char)[])\
    \ [0x427a26]\\n??:? void tmptnx2co9n.__unittest_L21_C1() [0x427a5c]\\n??:? void\
    \ tmptnx2co9n.__modtest() [0x427adc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a98a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb1d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffcc]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa9]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a961]\\n??:? runModuleUnitTests [0x42b8cd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428220]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a7]\\n??:? _d_run_main [0x428112]\\n??:? main [0x427aef]\\\
    n??:? __libc_start_main [0xf49a9554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tfor (auto c : string) \n\t{\n\t\tlen++;\n\t}\n\t\n\t\
    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpl1oe6nea.d(14): Error: no identifier for declarator `c`\\n/tmp/tmpl1oe6nea.d(14):\
    \ Error: expression expected, not `:`\\n/tmp/tmpl1oe6nea.d(14): Error: found `string`\
    \ when expecting `;` following `for` condition\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpl1oe6nea.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong length = 0;\n\t\n\tfor (int i = 0; i < string.length; ++i)\n\t\tlength\
    \ += string.codeUnitAt(i);\n\t\n\treturn length;\n}\nunittest\n{\n    alias candidate\
    \ = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\"\
    ) == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpf2xhhjzd.d(15): Error: no property `codeUnitAt` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf2xhhjzd.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tforeach(char c, string)\n\t{\n\t\tlen++;\n\t}\n\t\n\t\
    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_etw5qrz.d(14): Error: no identifier for declarator `string`\\\
    n/tmp/tmp_etw5qrz.d(14): Error: found `)` when expecting `;`\\n/tmp/tmp_etw5qrz.d(19):\
    \ Error: found `return` when expecting `)`\\nFailed: [\"dmd\", \"-unittest\",\
    \ \"-v\", \"-o-\", \"/tmp/tmp_etw5qrz.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\twhile (string[len] != '\\0')\n\t{\n\t\tlen++;\n\t}\n\
    \t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.RangeError@/tmp/tmpq402q7qm.d(14): Range violation\\n----------------\\\
    n??:? _d_arrayboundsp [0x427e0e]\\n??:? long tmpq402q7qm.strlen(immutable(char)[])\
    \ [0x427a26]\\n??:? void tmpq402q7qm.__unittest_L21_C1() [0x427a5c]\\n??:? void\
    \ tmpq402q7qm.__modtest() [0x427adc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a98a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb1d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffcc]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa9]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a961]\\n??:? runModuleUnitTests [0x42b8cd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428220]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a7]\\n??:? _d_run_main [0x428112]\\n??:? main [0x427aef]\\\
    n??:? __libc_start_main [0x2e99c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tint i;\n\tlong len = 0;\n\t\n\tfor (i = 0; i < string.length; ++i)\n\t\t\
    len += 1;\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n   \
    \ assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tfor(string::iterator it = string.begin(); it != string.end();\
    \ ++it)\n\t{\n\t\t++len;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate\
    \ = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\"\
    ) == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp21ebuuul.d(14): Error: use `.` for member lookup, not `::`\\\
    n/tmp/tmp21ebuuul.d(14): Error: found `it` when expecting `;` following `for`\
    \ condition\\n/tmp/tmp21ebuuul.d(14): Error: expression expected, not `=`\\n/tmp/tmp21ebuuul.d(14):\
    \ Error: found `string` when expecting `)`\\n/tmp/tmp21ebuuul.d(14): Error: found\
    \ `)` when expecting `;` following statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp21ebuuul.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n    int i;\n    long len = 0;\n    for(i = 0; i < string.length; ++i)\n   \
    \ {\n        if(string[i] != 0)\n            ++len;\n    }\n    return len;\n\
    }\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n    long len = 0;\n    \n    for(auto c : string) \n    {\n        len++;\n\
    \    }\n    \n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n  \
    \  assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkox3209s.d(14): Error: no identifier for declarator `c`\\n/tmp/tmpkox3209s.d(14):\
    \ Error: expression expected, not `:`\\n/tmp/tmpkox3209s.d(14): Error: found `string`\
    \ when expecting `;` following `for` condition\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpkox3209s.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tfor (int i = 0; i < string.length; ++i)\n\t\tlen +=\
    \ 1;\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n   \
    \ assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"\
    asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tfor(string::iterator it = string.begin(); it != string.end();\
    \ ++it) \n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate\
    \ = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\"\
    ) == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpp6xmzhtc.d(14): Error: use `.` for member lookup, not `::`\\\
    n/tmp/tmpp6xmzhtc.d(14): Error: found `it` when expecting `;` following `for`\
    \ condition\\n/tmp/tmpp6xmzhtc.d(14): Error: expression expected, not `=`\\n/tmp/tmpp6xmzhtc.d(14):\
    \ Error: found `string` when expecting `)`\\n/tmp/tmpp6xmzhtc.d(14): Error: found\
    \ `)` when expecting `;` following statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpp6xmzhtc.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tfor (auto c : string) \n\t{\n\t\tlen++;\n\t}\n\t\n\t\
    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpemefcqs7.d(14): Error: no identifier for declarator `c`\\n/tmp/tmpemefcqs7.d(14):\
    \ Error: expression expected, not `:`\\n/tmp/tmpemefcqs7.d(14): Error: found `string`\
    \ when expecting `;` following `for` condition\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpemefcqs7.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tfor (auto c : string) \n\t{\n\t\tlen++;\n\t}\n\t\n\t\
    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpyxbl0aj0.d(14): Error: no identifier for declarator `c`\\n/tmp/tmpyxbl0aj0.d(14):\
    \ Error: expression expected, not `:`\\n/tmp/tmpyxbl0aj0.d(14): Error: found `string`\
    \ when expecting `;` following `for` condition\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpyxbl0aj0.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tforeach(char c, string) {\n\t\tlen++;\n\t}\n\t\n\treturn\
    \ len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgcimgrv0.d(14): Error: no identifier for declarator `string`\\\
    n/tmp/tmpgcimgrv0.d(14): Error: found `)` when expecting `;`\\n/tmp/tmpgcimgrv0.d(18):\
    \ Error: found `return` when expecting `)`\\nFailed: [\"dmd\", \"-unittest\",\
    \ \"-v\", \"-o-\", \"/tmp/tmpgcimgrv0.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n    long len = 0;\n    \n    foreach(char c, string)\n    {\n        len++;\n\
    \    }\n    \n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n  \
    \  assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpoapmwpz4.d(14): Error: no identifier for declarator `string`\\\
    n/tmp/tmpoapmwpz4.d(14): Error: found `)` when expecting `;`\\n/tmp/tmpoapmwpz4.d(19):\
    \ Error: found `return` when expecting `)`\\nFailed: [\"dmd\", \"-unittest\",\
    \ \"-v\", \"-o-\", \"/tmp/tmpoapmwpz4.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n    int i = 0;\n    while(string.data[i])\n    {\n        i++;\n    }\n   \
    \ return i;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmptqjgm2ab.d(13): Error: no property `data` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptqjgm2ab.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tfor (auto c : string) \n\t{\n\t\tlen++;\n\t}\n\t\n\t\
    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpndk4a_nm.d(14): Error: no identifier for declarator `c`\\n/tmp/tmpndk4a_nm.d(14):\
    \ Error: expression expected, not `:`\\n/tmp/tmpndk4a_nm.d(14): Error: found `string`\
    \ when expecting `;` following `for` condition\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpndk4a_nm.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tfor (auto c : string) \n\t{\n\t\tlen++;\n\t}\n\t\n\t\
    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpy2s30aaj.d(14): Error: no identifier for declarator `c`\\n/tmp/tmpy2s30aaj.d(14):\
    \ Error: expression expected, not `:`\\n/tmp/tmpy2s30aaj.d(14): Error: found `string`\
    \ when expecting `;` following `for` condition\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpy2s30aaj.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\twhile(string.data[len] != '\\0')\n\t{\n\t\tlen++;\n\t\
    }\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9z3hrh9o.d(14): Error: no property `data` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9z3hrh9o.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n    int i = 0;\n    \n    while (string[i] != '\\0')\n    {\n        i++;\n\
    \    }\n    \n    return i;\n}\nunittest\n{\n    alias candidate = strlen;\n\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n   \
    \ assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.RangeError@/tmp/tmpkrlhdss0.d(14): Range violation\\n----------------\\\
    n??:? _d_arrayboundsp [0x427e06]\\n??:? long tmpkrlhdss0.strlen(immutable(char)[])\
    \ [0x427a25]\\n??:? void tmpkrlhdss0.__unittest_L21_C1() [0x427a58]\\n??:? void\
    \ tmpkrlhdss0.__modtest() [0x427ad8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baef]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a982]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb15]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc4]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa1]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a959]\\n??:? runModuleUnitTests [0x42b8c5]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428218]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42819f]\\n??:? _d_run_main [0x42810a]\\n??:? main [0x427aeb]\\\
    n??:? __libc_start_main [0x9f6d4554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tfor(auto c : string) \n\t{\n\t\tlen++;\n\t}\n\t\n\t\
    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdluh_d9y.d(14): Error: no identifier for declarator `c`\\n/tmp/tmpdluh_d9y.d(14):\
    \ Error: expression expected, not `:`\\n/tmp/tmpdluh_d9y.d(14): Error: found `string`\
    \ when expecting `;` following `for` condition\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpdluh_d9y.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\twhile(string.data[len] != 0) \n\t{\n\t\tlen++;\n\t}\n\
    \t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3ygmijgh.d(14): Error: no property `data` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3ygmijgh.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tfor(string::iterator it = string.begin(); it != string.end();\
    \ ++it)\n\t{\n\t\t++len;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate\
    \ = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\"\
    ) == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpg6f4idk3.d(14): Error: use `.` for member lookup, not `::`\\\
    n/tmp/tmpg6f4idk3.d(14): Error: found `it` when expecting `;` following `for`\
    \ condition\\n/tmp/tmpg6f4idk3.d(14): Error: expression expected, not `=`\\n/tmp/tmpg6f4idk3.d(14):\
    \ Error: found `string` when expecting `)`\\n/tmp/tmpg6f4idk3.d(14): Error: found\
    \ `)` when expecting `;` following statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpg6f4idk3.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tfor(auto c : string) \n\t{\n\t\tlen++;\n\t}\n\t\n\t\
    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpawym7dw8.d(14): Error: no identifier for declarator `c`\\n/tmp/tmpawym7dw8.d(14):\
    \ Error: expression expected, not `:`\\n/tmp/tmpawym7dw8.d(14): Error: found `string`\
    \ when expecting `;` following `for` condition\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpawym7dw8.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\twhile(string.data[len] != '\\0')\n\t{\n\t\tlen++;\n\t\
    }\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpr9ez5urf.d(14): Error: no property `data` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr9ez5urf.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n    long len = 0;\n    \n    for(auto c : string) \n    {\n        len++;\n\
    \    }\n    \n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n  \
    \  assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpo072mtid.d(14): Error: no identifier for declarator `c`\\n/tmp/tmpo072mtid.d(14):\
    \ Error: expression expected, not `:`\\n/tmp/tmpo072mtid.d(14): Error: found `string`\
    \ when expecting `;` following `for` condition\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpo072mtid.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tfor (int i = 0; i < string.length; ++i)\n\t\tlen +=\
    \ 1;\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n   \
    \ assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"\
    asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\twhile(string.data[len] != '\\0')\n\t{\n\t\tlen++;\n\t\
    }\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsi6xx5f1.d(14): Error: no property `data` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsi6xx5f1.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\twhile (string[len] != '\\0')\n\t{\n\t\tlen++;\n\t}\n\
    \t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.RangeError@/tmp/tmp1g04gi2z.d(14): Range violation\\n----------------\\\
    n??:? _d_arrayboundsp [0x427e0e]\\n??:? long tmp1g04gi2z.strlen(immutable(char)[])\
    \ [0x427a26]\\n??:? void tmp1g04gi2z.__unittest_L21_C1() [0x427a5c]\\n??:? void\
    \ tmp1g04gi2z.__modtest() [0x427adc]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42baf7]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42a98a]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fb1d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffcc]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42faa9]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a961]\\n??:? runModuleUnitTests [0x42b8cd]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428220]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4281a7]\\n??:? _d_run_main [0x428112]\\n??:? main [0x427aef]\\\
    n??:? __libc_start_main [0x2322c554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong length = 0;\n\t\n\tforeach(char c, string) {\n\t\tlength++;\n\t}\n\t\
    \n\treturn length;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmplo1x03wg.d(14): Error: no identifier for declarator `string`\\\
    n/tmp/tmplo1x03wg.d(14): Error: found `)` when expecting `;`\\n/tmp/tmplo1x03wg.d(18):\
    \ Error: found `return` when expecting `)`\\nFailed: [\"dmd\", \"-unittest\",\
    \ \"-v\", \"-o-\", \"/tmp/tmplo1x03wg.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tfor( int i = 0; i < string.length; ++i )\n\t\tlen +=\
    \ string.codeUnitAt(i);\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate\
    \ = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\"\
    ) == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpog_q84ex.d(15): Error: no property `codeUnitAt` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpog_q84ex.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong length = 0;\n\t\n\tforeach(char c, string) {\n\t\tlength++;\n\t}\n\t\
    \n\treturn length;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpu958cutm.d(14): Error: no identifier for declarator `string`\\\
    n/tmp/tmpu958cutm.d(14): Error: found `)` when expecting `;`\\n/tmp/tmpu958cutm.d(18):\
    \ Error: found `return` when expecting `)`\\nFailed: [\"dmd\", \"-unittest\",\
    \ \"-v\", \"-o-\", \"/tmp/tmpu958cutm.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n    int i = 0;\n    while(i < string.length)\n    {\n        i++;\n    }\n\
    \    return i;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tfor (auto c : string) \n\t{\n\t\tlen++;\n\t}\n\t\n\t\
    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkh4s5avm.d(14): Error: no identifier for declarator `c`\\n/tmp/tmpkh4s5avm.d(14):\
    \ Error: expression expected, not `:`\\n/tmp/tmpkh4s5avm.d(14): Error: found `string`\
    \ when expecting `;` following `for` condition\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpkh4s5avm.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tlong len = 0;\n\t\n\tfor(string::iterator it = string.begin(); it != string.end();\
    \ ++it)\n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate\
    \ = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\"\
    ) == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp07i03a6o.d(14): Error: use `.` for member lookup, not `::`\\\
    n/tmp/tmp07i03a6o.d(14): Error: found `it` when expecting `;` following `for`\
    \ condition\\n/tmp/tmp07i03a6o.d(14): Error: expression expected, not `=`\\n/tmp/tmp07i03a6o.d(14):\
    \ Error: found `string` when expecting `)`\\n/tmp/tmp07i03a6o.d(14): Error: found\
    \ `)` when expecting `;` following statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp07i03a6o.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \n*/\nlong strlen(string string) \n\
    {\n\tint i = 0;\n\twhile(i < string.length)\n\t{\n\t\tif(string[i] != 0)\n\t\t\
    \ti++;\n\t\telse\n\t\t\tbreak;\n\t}\n\treturn i;\n}\nunittest\n{\n    alias candidate\
    \ = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\"\
    ) == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK

language: cpp
name: HumanEval_34_unique
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n   std::vector<long>\
    \ u;\n   std::sort(l.begin(), l.end());\n   for(long i=l.size(); i-- > 0;)\n \
    \     if(!std::binary_search(l.begin(), l.end(), l[i]))\n         u.push_back(l[i]);\n\
    \   return u;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmpulmtadzs: /tmp/tmpulmtadzs.cpp:14: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132820
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ result(l);\n    std::sort(result.begin(), result.end());\n    std::sort(l.begin(),\
    \ l.end());\n    result.erase(std::unique(result.begin(), result.end()), result.end());\n\
    \    return result;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660132820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ out;\n    for(long i : l) {\n        if(out.size() == 0 || i != out[out.size()-1])\
    \ out.push_back(i);\n    }\n    return out;\n}\nint main() {\n    auto candidate\
    \ = unique;\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: Exception
  stderr: 'tmp0gj0drha: /tmp/tmp0gj0drha.cpp:13: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ u;\n    std::sort(l.begin(),l.end());\n    for(auto it=l.begin();it!=l.end();++it)\n\
    \        if(!u.empty() && u[0]==*it)\n            u.erase(u.begin());\n      \
    \  else\n            u.push_back(*it);\n    return u;\n}\nint main() {\n    auto\
    \ candidate = unique;\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: Exception
  stderr: 'tmpprqnlstj: /tmp/tmpprqnlstj.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ out;\n    std::sort(l.begin(), l.end());\n    for(auto e : l) \n        if(!std::binary_search(l.begin(),\
    \ l.end(), e)) out.push_back(e);\n    return out;\n}\nint main() {\n    auto candidate\
    \ = unique;\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: Exception
  stderr: 'tmpj1kd_198: /tmp/tmpj1kd_198.cpp:13: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    // Sort the\
    \ vector in place\n    std::sort(l.begin(), l.end());\n\n    // Remove duplicates\
    \ until the vector is empty\n    std::vector<long>::iterator it = l.begin();\n\
    \    while (it != l.end()) {\n        std::vector<long>::iterator next = std::find(it,\
    \ l.end(), *it);\n        if (next == l.end()) {\n            break;\n       \
    \ }\n        l.erase(next);\n        it = next;\n    }\n\n    // Return the unique\
    \ elements as a vector\n    return l;\n}\nint main() {\n    auto candidate = unique;\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: Exception
  stderr: 'tmpvyrsm4sx: /tmp/tmpvyrsm4sx.cpp:24: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132821
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n   std::sort(l.begin(),\
    \ l.end());\n   std::unique_ptr<std::vector<long>> u(std::move(std::begin(l)));\n\
    \   return u;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmphztxc25l.cpp: In function \u2018std::vector<long int> unique(std::vector<long\
    \ int>)\u2019:\n/tmp/tmphztxc25l.cpp:6:65: error: no matching function for call\
    \ to \u2018std::unique_ptr<std::vector<long int> >::unique_ptr(std::remove_reference<__gnu_cxx::__normal_iterator<long\
    \ int*, std::vector<long int> > >::type)\u2019\n    6 |    std::unique_ptr<std::vector<long>>\
    \ u(std::move(std::begin(l)));\n      |                                      \
    \                           ^\nIn file included from /usr/include/c++/9/bits/locale_conv.h:41,\n\
    \                 from /usr/include/c++/9/locale:43,\n                 from /usr/include/c++/9/iomanip:43,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmphztxc25l.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:281:2:\
    \ note: candidate: \u2018template<class _Up, class> std::unique_ptr<_Tp, _Dp>::unique_ptr(std::auto_ptr<_Up>&&)\u2019\
    \n  281 |  unique_ptr(auto_ptr<_Up>&& __u) noexcept;\n      |  ^~~~~~~~~~\n/usr/include/c++/9/bits/unique_ptr.h:281:2:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmphztxc25l.cpp:6:65:\
    \ note:   \u2018std::remove_reference<__gnu_cxx::__normal_iterator<long int*,\
    \ std::vector<long int> > >::type\u2019 {aka \u2018__gnu_cxx::__normal_iterator<long\
    \ int*, std::vector<long int> >\u2019} is not derived from \u2018std::auto_ptr<_Up>\u2019\
    \n    6 |    std::unique_ptr<std::vector<long>> u(std::move(std::begin(l)));\n\
    \      |                                                                 ^\nIn\
    \ file included from /usr/include/c++/9/bits/locale_conv.h:41,\n             \
    \    from /usr/include/c++/9/locale:43,\n                 from /usr/include/c++/9/iomanip:43,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72,\n\
    \                 from /tmp/tmphztxc25l.cpp:2:\n/usr/include/c++/9/bits/unique_ptr.h:271:2:\
    \ note: candidate: \u2018template<class _Up, class _Ep, class> std::unique_ptr<_Tp,\
    \ _Dp>::unique_ptr(std::unique_ptr<_Up, _Ep>&&)\u2019\n  271 |  unique_ptr(unique_ptr<_Up,\
    \ _Ep>&& __u) noexcept\n      |  ^~~~~~~~~~\n/usr/include/c++/9/bits/"
  stdout: ''
  timestamp: 1660132820
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::sort(l.begin(),\
    \ l.end());\n    std::vector<long> ret;\n    for(int i = 0; i < l.size(); i++)\n\
    \    {\n        bool isExist = false;\n        for(int j = 0; j < ret.size() ;\
    \ j++)\n        {\n            if(l[i] == ret[j])\n            {\n           \
    \     isExist = true;\n                break;\n            }\n        }\n    \
    \    if(!isExist)\n        {\n            ret.push_back(l[i]);\n        }\n  \
    \  }\n    return ret;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660132819
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    // write your\
    \ code here\n    int n = l.size();\n    int i, j;\n    int t;\n    std::vector<long>\
    \ u;\n    for (i = 0; i < n; i++) {\n        for (j = i + 1; j < n; j++) {\n \
    \           if (l[i] > l[j]) {\n                t = l[i];\n                l[i]\
    \ = l[j];\n                l[j] = t;\n            }\n        }\n        u.push_back(l[i]);\n\
    \    }\n    return u;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmpwr6k7y3y: /tmp/tmpwr6k7y3y.cpp:24: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132820
- exit_code: -11
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    // Find unique\
    \ elements\n    auto it = std::adjacent_find(l.begin(), l.end());\n    if (l.size()\
    \ < 2) {\n        return l;\n    }\n    // Find duplicate elements\n    std::vector<long>::iterator\
    \ it2;\n    for (it2 = l.begin(); it2 != l.end(); ++it2) {\n        if (it ==\
    \ it2) {\n            continue;\n        }\n        auto prev = *it2;\n      \
    \  // If next element is less than or equal to\n        // previous element, remove\
    \ it from\n        // current list\n        if ((*it2 - prev) < (*it - prev))\
    \ {\n            l.erase(it2);\n            it = l.end();\n            continue;\n\
    \        }\n        // If elements are equal, move on\n        if (*it2 == *it)\
    \ {\n            continue;\n        }\n        std::vector<long> vec;\n      \
    \  vec.push_back(*it);\n        vec.push_back(*it2);\n        l = unique(vec);\n\
    \    }\n    return l;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660132821
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n  // Create a set\
    \ to hold unique elements\n  set<long> s;\n  // Iterate through original list\n\
    \  for (size_t i = 0; i < l.size(); ++i)\n    // If element is not in set then\
    \ add it\n    if (s.find(l[i]) == s.end())\n      s.insert(l[i]);\n  // Copy unique\
    \ elements into a vector\n  std::vector<long> u;\n  u.assign(s.begin(), s.end());\n\
    \  return u;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyf2r7bvw.cpp: In function \u2018std::vector<long int> unique(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpyf2r7bvw.cpp:6:3: error: \u2018set\u2019 was not declared\
    \ in this scope\n    6 |   set<long> s;\n      |   ^~~\n/tmp/tmpyf2r7bvw.cpp:6:3:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/set:61,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:87,\n\
    \                 from /tmp/tmpyf2r7bvw.cpp:2:\n/usr/include/c++/9/bits/stl_set.h:94:11:\
    \ note:   \u2018std::set\u2019\n   94 |     class set\n      |           ^~~\n\
    In file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:87,\n\
    \                 from /tmp/tmpyf2r7bvw.cpp:2:\n/usr/include/c++/9/set:82:13:\
    \ note:   \u2018std::pmr::set\u2019\n   82 |       using set = std::set<_Key,\
    \ _Cmp, polymorphic_allocator<_Key>>;\n      |             ^~~\n/tmp/tmpyf2r7bvw.cpp:6:7:\
    \ error: expected primary-expression before \u2018long\u2019\n    6 |   set<long>\
    \ s;\n      |       ^~~~\n/tmp/tmpyf2r7bvw.cpp:10:9: error: \u2018s\u2019 was\
    \ not declared in this scope\n   10 |     if (s.find(l[i]) == s.end())\n     \
    \ |         ^\n/tmp/tmpyf2r7bvw.cpp:14:12: error: \u2018s\u2019 was not declared\
    \ in this scope\n   14 |   u.assign(s.begin(), s.end());\n      |            ^\n"
  stdout: ''
  timestamp: 1660132820
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::sort(l.begin(),\
    \ l.end());\n    std::sort(l.begin(), l.end(), std::greater<>());\n    return\
    \ std::unique(l.begin(), l.end()); \n}\nint main() {\n    auto candidate = unique;\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp13lf0rou.cpp: In function \u2018std::vector<long int> unique(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp13lf0rou.cpp:7:23: error: could not convert \u2018std::unique<__gnu_cxx::__normal_iterator<long\
    \ int*, std::vector<long int> > >(l.std::vector<long int>::begin(), l.std::vector<long\
    \ int>::end())\u2019 from \u2018__gnu_cxx::__normal_iterator<long int*, std::vector<long\
    \ int> >\u2019 to \u2018std::vector<long int>\u2019\n    7 |     return std::unique(l.begin(),\
    \ l.end());\n      |            ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~\n      |     \
    \                  |\n      |                       __gnu_cxx::__normal_iterator<long\
    \ int*, std::vector<long int> >\n"
  stdout: ''
  timestamp: 1660132820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    // Sorting using\
    \ qsort is O(n log n).\n    auto cmp = [](long a, long b) { return a > b; };\n\
    \    std::vector<long> u;\n    std::sort(l.begin(), l.end(), cmp);\n    std::unique_copy(l.begin(),\
    \ l.end(), std::back_inserter(u));\n    return u;\n}\nint main() {\n    auto candidate\
    \ = unique;\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: Exception
  stderr: 'tmpoklw54bw: /tmp/tmpoklw54bw.cpp:14: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132820
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ u;\n    std::sort(l.begin(), l.end());\n    for(auto i=l.begin(); i!=l.end();\
    \ i++) {\n        auto j = std::find(u.begin(), u.end(), *i);\n        if(j ==\
    \ u.end()) {\n            u.push_back(*i);\n        }\n    }\n    return u;\n\
    }\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660132820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ uniq_elem(l.size());\n    std::unordered_set<long> u;\n    std::sort(l.begin(),\
    \ l.end());\n    for (long i : l)\n        if (u.insert(i).second) uniq_elem.push_back(i);\n\
    \    return uniq_elem;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmp5e21202y: /tmp/tmp5e21202y.cpp:14: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ ret;\n    std::sort(l.begin(), l.end());\n    ret.push_back(*std::unique(l.begin(),\
    \ l.end()));\n    return ret;\n}\nint main() {\n    auto candidate = unique;\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: Exception
  stderr: 'tmp3v3shk3z: /tmp/tmp3v3shk3z.cpp:12: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n  std::sort(l.begin(),\
    \ l.end()); // sort the list\n  std::vector<long> u;\n  for(long i = 0; i < l.size();\
    \ i++)\n    if(l[i] != i && l[i] != l[i-1]) u.push_back(l[i]);\n  return u;\n\
    }\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmpemuaif3j: /tmp/tmpemuaif3j.cpp:13: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n\tstd::sort(l.begin(),\
    \ l.end());\n\tstd::sort(l.begin(), l.end(), std::greater<long>());\n\tstd::vector<long>\
    \ u;\n\tfor(long i : l)\n\t\tif(std::find(u.begin(), u.end(), i) == u.end())\n\
    \t\t\tu.push_back(i);\n\treturn u;\n}\nint main() {\n    auto candidate = unique;\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: Exception
  stderr: 'tmpxozhtlgy: /tmp/tmpxozhtlgy.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n        std::vector<long>\
    \ u;\n        for (long &i: l) {\n                bool isDuplicate = false;\n\
    \                for (long j: u) {\n                        if (j == i)\n    \
    \                            isDuplicate = true;\n                }\n        \
    \        if (!isDuplicate)\n                        u.push_back(i);\n        }\n\
    \        return u;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmpnnckfd0p: /tmp/tmpnnckfd0p.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132820
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::sort(l.begin(),\
    \ l.end());\n    std::vector<long> v;\n    std::unique_copy(l.begin(), l.end(),\
    \ std::back_inserter(v));\n    return v;\n}\nint main() {\n    auto candidate\
    \ = unique;\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660132820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ u(l.size());\n    std::iota(u.begin(), u.end(), 0);\n    std::sort(u.begin(),\
    \ u.end());\n    return u;\n}\nint main() {\n    auto candidate = unique;\n  \
    \  assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2, (long)3,\
    \ (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0, (long)2,\
    \ (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: Exception
  stderr: 'tmpvznf6h8m: /tmp/tmpvznf6h8m.cpp:12: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132820
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ u;\n    for(auto x: l) {\n        if(!u.contains(x)) {\n            u.push_back(x);\n\
    \        }\n    }\n    return u;\n}\nint main() {\n    auto candidate = unique;\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpq_ip1dxf.cpp: In function \u2018std::vector<long int> unique(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpq_ip1dxf.cpp:7:15: error: \u2018class std::vector<long\
    \ int>\u2019 has no member named \u2018contains\u2019\n    7 |         if(!u.contains(x))\
    \ {\n      |               ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660132820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    // sort elements\
    \ with respect to the first value\n    sort(l.begin(), l.end(), [&](long x, long\
    \ y){ return x < y; });\n    // remove duplicate elements\n    auto it = l.begin();\n\
    \    while (it != l.end()) {\n        if (it != l.begin()) std::iter_swap(it,\
    \ --l.end());\n        if (std::adjacent_find(l.begin(), l.end()) != l.end())\
    \ l.erase(it);\n        else ++it;\n    }\n    return l;\n}\nint main() {\n  \
    \  auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmp2ldr29wv: /tmp/tmp2ldr29wv.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ u;\n    std::sort(l.begin(), l.end());\n    for (const long i : l)\n       \
    \ u.push_back(i);\n    return u;\n}\nint main() {\n    auto candidate = unique;\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: Exception
  stderr: 'tmpg7o1nn4l: /tmp/tmpg7o1nn4l.cpp:13: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ u;\n    for (long i : l) {\n        if (u.size() == 0 || i !=u[u.size() - 1])\n\
    \            u.push_back(i);\n    }\n    return u;\n}\nint main() {\n    auto\
    \ candidate = unique;\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: Exception
  stderr: 'tmp3kzfclsg: /tmp/tmp3kzfclsg.cpp:14: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ u;\n    std::sort(l.begin(), l.end());\n    long i = 0;\n    for (long j : l)\
    \ {\n        if (j != i) u.push_back(j);\n        ++i;\n    }\n    return u;\n\
    }\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmpsnis0fag: /tmp/tmpsnis0fag.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132820
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n  std::vector<long>\
    \ result;\n  for (long i : l) {\n    if (result.find(i) == result.end()) result.push_back(i);\n\
    \  }\n  return result;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp4yass1mt.cpp: In function \u2018std::vector<long int> unique(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp4yass1mt.cpp:7:16: error: \u2018class std::vector<long\
    \ int>\u2019 has no member named \u2018find\u2019\n    7 |     if (result.find(i)\
    \ == result.end()) result.push_back(i);\n      |                ^~~~\n"
  stdout: ''
  timestamp: 1660132820
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n  std::sort(l.begin(),\
    \ l.end());\n  std::vector<long> new_l;\n  std::size_t new_size = std::unique(l.begin(),\
    \ l.end(), std::back_inserter(new_l));\n  assert(new_size == l.size());\n  return\
    \ new_l;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp5bp0hoaz.cpp: In function \u2018std::vector<long int> unique(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp5bp0hoaz.cpp:7:37: error: cannot convert \u2018__gnu_cxx::__normal_iterator<long\
    \ int*, std::vector<long int> >\u2019 to \u2018std::size_t\u2019 {aka \u2018long\
    \ unsigned int\u2019} in initialization\n    7 |   std::size_t new_size = std::unique(l.begin(),\
    \ l.end(), std::back_inserter(new_l));\n      |                          ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    \      |                                     |\n      |                      \
    \               __gnu_cxx::__normal_iterator<long int*, std::vector<long int>\
    \ >\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:71,\n      \
    \           from /usr/include/c++/9/bits/specfun.h:45,\n                 from\
    \ /usr/include/c++/9/cmath:1927,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmp5bp0hoaz.cpp:2:\n/usr/include/c++/9/bits/predefined_ops.h:\
    \ In instantiation of \u2018constexpr bool __gnu_cxx::__ops::_Iter_comp_iter<_Compare>::operator()(_Iterator1,\
    \ _Iterator2) [with _Iterator1 = __gnu_cxx::__normal_iterator<long int*, std::vector<long\
    \ int> >; _Iterator2 = __gnu_cxx::__normal_iterator<long int*, std::vector<long\
    \ int> >; _Compare = std::back_insert_iterator<std::vector<long int> >]\u2019\
    :\n/usr/include/c++/9/bits/stl_algo.h:980:20:   required from \u2018_ForwardIterator\
    \ std::__unique(_ForwardIterator, _ForwardIterator, _BinaryPredicate) [with _ForwardIterator\
    \ = __gnu_cxx::__normal_iterator<long int*, std::vector<long int> >; _BinaryPredicate\
    \ = __gnu_cxx::__ops::_Iter_comp_iter<std::back_insert_iterator<std::vector<long\
    \ int> > >]\u2019\n/usr/include/c++/9/bits/stl_algo.h:1042:27:   required from\
    \ \u2018_FIter std::unique(_FIter, _FIter, _BinaryPredicate) [with _FIter = __gnu_cxx::__normal_iterator<long\
    \ int*, std::vector<long int> >; _BinaryPredicate = std::back_insert_iterator<std::vector<long\
    \ int> >]\u2019\n/tmp/tmp5bp0hoaz.cpp:7:83:   required from here\n/usr/include/c++/9/bits/predefined_ops.h:143:18:\
    \ error: no match for call to "
  stdout: ''
  timestamp: 1660132820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n  std::sort(l.begin(),\
    \ l.end());\n  std::vector<long> ans;\n  for (auto it = l.begin(); it != l.end();\
    \ ++it) {\n    if (it != l.begin()) {\n      if (*it != *(it - 1)) ans.push_back(*it);\n\
    \    }\n  }\n  return ans;\n}\nint main() {\n    auto candidate = unique;\n  \
    \  assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2, (long)3,\
    \ (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0, (long)2,\
    \ (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: Exception
  stderr: 'tmpx6kr7wt9: /tmp/tmpx6kr7wt9.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ result;\n    std::vector<long>::iterator i;\n    for(std::size_t i = 0; i <\
    \ l.size(); ++i){\n        bool found = false;\n        std::size_t j;\n     \
    \   for (j = i; j < l.size() && !found; ++j){\n            if (l[j] == l[i])\n\
    \                found = true;\n        }\n        if (!found)\n            result.push_back(l[i]);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = unique;\n  \
    \  assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2, (long)3,\
    \ (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0, (long)2,\
    \ (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: Exception
  stderr: 'tmpnmho20i6: /tmp/tmpnmho20i6.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132821
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ ret;\n    std::sort(l.begin(), l.end());\n    for(long i = 0; i < l.size();\
    \ i++)\n    {\n        bool found = false;\n        for(long j = i; j < l.size()\
    \ && l[j] == l[i]; j++)\n            found = true;\n        if(!found)\n     \
    \       ret.push_back(l[i]);\n    }\n    return ret;\n}\nint main() {\n    auto\
    \ candidate = unique;\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: Exception
  stderr: 'tmpx8j3dibx: /tmp/tmpx8j3dibx.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132821
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    auto it = std::begin(l);\n\
    \    std::sort(it, std::end(l));\n    std::vector<long> res;\n    for (auto& val\
    \ : l)\n        if (it != std::end(l) && val == *it)\n            continue;\n\
    \        res.push_back(val);\n    }\n    return res;\n}\nint main() {\n    auto\
    \ candidate = unique;\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpt5t9gswa.cpp: In function \u2018std::vector<long int> unique(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpt5t9gswa.cpp:11:23: error: \u2018val\u2019 was not declared\
    \ in this scope\n   11 |         res.push_back(val);\n      |                \
    \       ^~~\n/tmp/tmpt5t9gswa.cpp:12:5: warning: no return statement in function\
    \ returning non-void [-Wreturn-type]\n   12 |     }\n      |     ^\n/tmp/tmpt5t9gswa.cpp:\
    \ At global scope:\n/tmp/tmpt5t9gswa.cpp:13:5: error: expected unqualified-id\
    \ before \u2018return\u2019\n   13 |     return res;\n      |     ^~~~~~\n/tmp/tmpt5t9gswa.cpp:14:1:\
    \ error: expected declaration before \u2018}\u2019 token\n   14 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660132820
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n  std::vector<long>\
    \ u;\n  std::sort(l.begin(), l.end());\n  std::unique_copy(l.begin(), l.end(),\
    \ std::back_inserter(u));\n  return u;\n}\nint main() {\n    auto candidate =\
    \ unique;\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660132820
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ u;\n    std::sort(l.begin(),l.end());\n    std::set_difference(l.begin(),l.end(),u.begin(),u.end(),std::less<long>());\n\
    \    return u;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/algorithm:62,\n              \
    \   from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n             \
    \    from /tmp/tmpkpddf6k_.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h: In instantiation\
    \ of \u2018_OutputIterator std::__set_difference(_InputIterator1, _InputIterator1,\
    \ _InputIterator2, _InputIterator2, _OutputIterator, _Compare) [with _InputIterator1\
    \ = __gnu_cxx::__normal_iterator<long int*, std::vector<long int> >; _InputIterator2\
    \ = __gnu_cxx::__normal_iterator<long int*, std::vector<long int> >; _OutputIterator\
    \ = std::less<long int>; _Compare = __gnu_cxx::__ops::_Iter_less_iter]\u2019:\n\
    /usr/include/c++/9/bits/stl_algo.h:5435:46:   required from \u2018_OIter std::set_difference(_IIter1,\
    \ _IIter1, _IIter2, _IIter2, _OIter) [with _IIter1 = __gnu_cxx::__normal_iterator<long\
    \ int*, std::vector<long int> >; _IIter2 = __gnu_cxx::__normal_iterator<long int*,\
    \ std::vector<long int> >; _OIter = std::less<long int>]\u2019\n/tmp/tmpkpddf6k_.cpp:7:78:\
    \   required from here\n/usr/include/c++/9/bits/stl_algo.h:5378:6: error: no match\
    \ for \u2018operator*\u2019 (operand type is \u2018std::less<long int>\u2019)\n\
    \ 5378 |      *__result = *__first1;\n      |      ^~~~~~~~~\nIn file included\
    \ from /usr/include/c++/9/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpkpddf6k_.cpp:2:\n/usr/include/c++/9/complex:391:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator*(const\
    \ std::complex<_Tp>&, const std::complex<_Tp>&)\u2019\n  391 |     operator*(const\
    \ complex<_Tp>& __x, const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:391:5:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/9/algorithm:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpkpddf6k_.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:5378:6:\
    \ note:   \u2018std::less<long int>\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\
    \n 5378 |      *__result = *__first1;\n   "
  stdout: ''
  timestamp: 1660132819
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n  std::sort(l.begin(),\
    \ l.end());\n  std::vector<long> uniq(std::unique(l.begin(), l.end()) );\n  return\
    \ uniq;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpecz3911p.cpp: In function \u2018std::vector<long int> unique(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpecz3911p.cpp:6:58: error: no matching function for call\
    \ to \u2018std::vector<long int>::vector(__gnu_cxx::__normal_iterator<long int*,\
    \ std::vector<long int> >)\u2019\n    6 |   std::vector<long> uniq(std::unique(l.begin(),\
    \ l.end()) );\n      |                                                       \
    \   ^\nIn file included from /usr/include/c++/9/vector:67,\n                 from\
    \ /usr/include/c++/9/functional:62,\n                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n\
    \                 from /usr/include/c++/9/algorithm:71,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n                 from\
    \ /tmp/tmpecz3911p.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:650:2: note: candidate:\
    \ \u2018template<class _InputIterator, class> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\u2019\n  650 |  vector(_InputIterator\
    \ __first, _InputIterator __last,\n      |  ^~~~~~\n/usr/include/c++/9/bits/stl_vector.h:650:2:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpecz3911p.cpp:6:58:\
    \ note:   candidate expects 3 arguments, 1 provided\n    6 |   std::vector<long>\
    \ uniq(std::unique(l.begin(), l.end()) );\n      |                           \
    \                               ^\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpecz3911p.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:622:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>,\
    \ const allocator_type&) [with _Tp = long int; _Alloc = std::allocator<long int>;\
    \ std::vector<_Tp, _Alloc>::allocator_type = std::allocator<long int>]\u2019\n\
    \  622 |       vector(initializer_list<value_type> __l,\n      |       ^~~~~~\n"
  stdout: ''
  timestamp: 1660132819
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n  std::vector<long>\
    \ results;\n  std::sort(l.begin(), l.end());\n  for(auto cur = l.begin(), end\
    \ = l.end(); cur != end; ++cur) {\n    for(auto ii = results.begin(); ii != results.end();\
    \ ++ii)\n      if(*cur == *ii)\n        ;\n      else\n        results.push_back(*cur);\n\
    \  }\n  return results;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmpxf_rnyl6: /tmp/tmpxf_rnyl6.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ u;\n    for( auto e : l )\n        u.push_back(e);\n    std::sort(u.begin(),\
    \ u.end());\n    return u;\n}\nint main() {\n    auto candidate = unique;\n  \
    \  assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2, (long)3,\
    \ (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0, (long)2,\
    \ (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: Exception
  stderr: 'tmpcjlr6i4r: /tmp/tmpcjlr6i4r.cpp:13: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132821
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ u;\n    std::sort(l.begin(),l.end());\n    std::unique_copy(l.begin(),l.end(),std::back_inserter(u));\n\
    \    return u;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660132820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ temp(l.size());\n    std::iota(temp.begin(), temp.end(), 0);\n    std::sort(temp.begin(),\
    \ temp.end());\n    return temp;\n}\nint main() {\n    auto candidate = unique;\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: Exception
  stderr: 'tmpfcmsujb4: /tmp/tmpfcmsujb4.cpp:12: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ a;\n    std::vector<long>::iterator it;\n    bool flag=false;\n    std::sort(l.begin(),l.end());\n\
    \    for (it=l.begin();it!=l.end();it++) {\n        flag=false;\n        for (std::vector<long>::iterator\
    \ it1=a.begin();it1!=a.end();it1++) {\n            if ((*it1) < (*it)) {\n   \
    \             flag=true;\n                break;\n            }\n        }\n \
    \       if (!flag) {\n            a.push_back(*it);\n        }\n    }\n    return\
    \ a;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmpppvcn6ip: /tmp/tmpppvcn6ip.cpp:25: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132820
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ u;\n    for(long i = 0; i < (long)l.size(); i++) {\n        for(long j = 0;\
    \ j < u.size(); j++) {\n            if(l[i] == u[j]) {\n                break;\n\
    \            }\n        }\n        if(j == u.size()) {\n            u.push_back(l[i]);\n\
    \        }\n    }\n    return u;\n}\nint main() {\n    auto candidate = unique;\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2vsm09fm.cpp: In function \u2018std::vector<long int> unique(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp2vsm09fm.cpp:12:12: error: \u2018j\u2019 was not declared\
    \ in this scope\n   12 |         if(j == u.size()) {\n      |            ^\n"
  stdout: ''
  timestamp: 1660132820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    // create a\
    \ vector to save unique elements\n    std::vector<long> v(l.size());\n    // a\
    \ flag indicate element is unique or not\n    bool flag = false;\n    // a loop\
    \ to find unique elements\n    for (size_t i = 0; i < l.size(); i++) {\n     \
    \   // set flag to true\n        flag = true;\n        // a loop to compare each\
    \ element with previous element\n        for (int j = i + 1; j < l.size(); j++)\
    \ {\n            // if element is not equal\n            if (l[i] == l[j]) {\n\
    \                // set flag to false\n                flag = false;\n       \
    \         break;\n            }\n        }\n        // if flag is true, add element\
    \ to vector\n        if (flag)\n            v.push_back(l[i]);\n    }\n    //\
    \ return the unique elements\n    return v;\n}\nint main() {\n    auto candidate\
    \ = unique;\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: Exception
  stderr: 'tmp1zpa_lnp: /tmp/tmp1zpa_lnp.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132821
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    // Return sorted\
    \ unique elements in a list\n    std::sort(l.begin(), l.end());\n    l.erase(std::unique(l.begin(),\
    \ l.end()), l.end());\n    return l;\n}\nint main() {\n    auto candidate = unique;\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660132820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ v;\n    for(long i : l) {\n        auto it = find(v.begin(), v.end(), i);\n\
    \        if(it != v.end()) {\n            v.erase(it);\n        }\n        else\
    \ {\n            v.push_back(i);\n        }\n    }\n    return v;\n}\nint main()\
    \ {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmpv_myzrfh: /tmp/tmpv_myzrfh.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ ans(l.size());\n    for(long i=0;i<l.size();i++){\n        long j = i;\n   \
    \     while((j>0) && (l[j]==l[j-1])) j--;\n        ans[i] = l[j];\n    }\n   \
    \ return ans;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmphd710y75: /tmp/tmphd710y75.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132821
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ u;\n    std::sort(l.begin(), l.end());\n    for(auto i : l) if(std::find(u.begin(),\
    \ u.end(), i) == u.end()) u.push_back(i);\n    return u;\n}\nint main() {\n  \
    \  auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660132820
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    auto it = std::begin(l);\n\
    \    std::sort(it, std::end(l));\n    it = std::unique(it, std::end(l));\n   \
    \ return std::vector<long>(it, std::end(l));\n}\nint main() {\n    auto candidate\
    \ = unique;\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: Exception
  stderr: 'tmp1h9czirs: /tmp/tmp1h9czirs.cpp:12: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132822
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::sort(l.begin(),\
    \ l.end());\n    std::vector<long> uniques;\n    for (auto it = l.begin(); it\
    \ != l.end(); ++it) {\n        if (it == l.begin() || it != l.begin() + 1) {\n\
    \            uniques.push_back(*it);\n        }\n    }\n    return uniques;\n\
    }\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmp15pzdsy_: /tmp/tmp15pzdsy_.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132823
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::sort(l.begin(),\
    \ l.end()); // sort list\n    l.erase(std::unique(l.begin(), l.end()), l.end());\
    \ // remove duplicate elements\n    return l;\n}\nint main() {\n    auto candidate\
    \ = unique;\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660132822
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ u;\n    std::sort(l.begin(), l.end());\n    for(auto x: l) {\n        if(std::find(u.begin(),\
    \ u.end(), x) == u.end()) {\n            u.push_back(x);\n        }\n    }\n \
    \   return u;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660132823
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n  std::sort(l.begin(),\
    \ l.end());\n  l.erase(std::unique(l.begin(), l.end()), l.end());\n  return l;\n\
    }\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660132823
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    // Use a set\
    \ data structure to return unique elements\n    std::set<long> s; \n    for(auto\
    \ i : l) s.insert(i); \n    // Copy unique elements in a new vector\n    return\
    \ std::vector<long>(s.begin(), s.end()); \n}\nint main() {\n    auto candidate\
    \ = unique;\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660132823
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ output;\n    long x = 0;\n    long last = 0;\n    bool seen = false;\n    long\
    \ count = 0;\n    for (long i : l) {\n        if (!seen) {\n            output.push_back(x);\n\
    \            seen = true;\n        }\n        if (i == last) ++count;\n      \
    \  else seen = false;\n        last = (i == last) ? i : 0;\n        ++x;\n   \
    \ }\n    if (count == 0) return output;\n    output.push_back(x);\n    return\
    \ output;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmpwn84on6h: /tmp/tmpwn84on6h.cpp:26: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132823
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n  std::sort(l.begin(),\
    \ l.end());\n  l.erase(std::unique(l.begin(), l.end()), l.end());\n  return l;\n\
    }\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660132823
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    // Create a\
    \ set from the list\n    std::set<long> s1(std::begin(l), std::end(l));\n    //\
    \ Create a vector of the values from the set and\n    // remove duplicates\n \
    \   std::vector<long> v1(std::begin(s1), std::end(s1));\n    // Return the unique\
    \ values\n    return v1;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660132823
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ u;\n    std::sort(l.begin(), l.end());\n    for(size_t i=0; i<l.size(); ++i)\n\
    \        u.push_back(std::remove(l.begin(), l.end(), l[i]));\n    return u;\n\
    }\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpmilefk64.cpp: In function \u2018std::vector<long int> unique(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpmilefk64.cpp:8:58: error: no matching function for call\
    \ to \u2018std::vector<long int>::push_back(__gnu_cxx::__normal_iterator<long\
    \ int*, std::vector<long int> >)\u2019\n    8 |         u.push_back(std::remove(l.begin(),\
    \ l.end(), l[i]));\n      |                                                  \
    \        ^\nIn file included from /usr/include/c++/9/vector:67,\n            \
    \     from /usr/include/c++/9/functional:62,\n                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n\
    \                 from /usr/include/c++/9/algorithm:71,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n                 from\
    \ /tmp/tmpmilefk64.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:1184:7: note:\
    \ candidate: \u2018void std::vector<_Tp, _Alloc>::push_back(const value_type&)\
    \ [with _Tp = long int; _Alloc = std::allocator<long int>; std::vector<_Tp, _Alloc>::value_type\
    \ = long int]\u2019\n 1184 |       push_back(const value_type& __x)\n      | \
    \      ^~~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1184:35: note:   no known\
    \ conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<long int*,\
    \ std::vector<long int> >\u2019 to \u2018const value_type&\u2019 {aka \u2018const\
    \ long int&\u2019}\n 1184 |       push_back(const value_type& __x)\n      |  \
    \               ~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:1200:7:\
    \ note: candidate: \u2018void std::vector<_Tp, _Alloc>::push_back(std::vector<_Tp,\
    \ _Alloc>::value_type&&) [with _Tp = long int; _Alloc = std::allocator<long int>;\
    \ std::vector<_Tp, _Alloc>::value_type = long int]\u2019\n 1200 |       push_back(value_type&&\
    \ __x)\n      |       ^~~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1200:30:\
    \ note:   no known conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<long\
    \ int*, std::vector<long int> >\u2019 to \u2018std::vector<long int>::value_type&&\u2019\
    \ {aka \u2018long int&&\u2019}\n 1200 |       push_back(value_type&& __x)\n  \
    \    |                 ~~~~~~~~~~~~~^~~\n"
  stdout: ''
  timestamp: 1660132823
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ v;\n    std::unordered_set<long> u;\n    for(auto itr = l.begin(); itr != l.end();\
    \ itr++) {\n        u.insert(*itr);\n    }\n    for(auto itr = u.begin(); itr\
    \ != u.end(); itr++) {\n        v.push_back(*itr);\n    }\n    return v;\n}\n\
    int main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmp8bkouwe3: /tmp/tmp8bkouwe3.cpp:17: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132823
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    // Sort the\
    \ vector\n    std::sort(l.begin(), l.end());\n    \n    // Remove duplicates\n\
    \    std::vector<long> v;\n    for (long i : l) {\n        auto find = std::find(v.begin(),\
    \ v.end(), i);\n        if (find == v.end()) {\n            v.push_back(i);\n\
    \        }\n    }\n\n    return v;\n}\nint main() {\n    auto candidate = unique;\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660132823
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ u;\n    for (long i : l) {\n        u.push_back(i);\n    }\n    std::sort(u.begin(),\
    \ u.end());\n    return u;\n}\nint main() {\n    auto candidate = unique;\n  \
    \  assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2, (long)3,\
    \ (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0, (long)2,\
    \ (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: Exception
  stderr: 'tmpmkve0xwo: /tmp/tmpmkve0xwo.cpp:14: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132824
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::sort(l.begin(),\
    \ l.end());\n    std::vector<long> v;\n    for(auto it = l.begin(); it != l.end();\
    \ ++it) {\n        std::remove(v.begin(), v.end(), *it);\n    }\n    return v;\n\
    }\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmpda_j3m59: /tmp/tmpda_j3m59.cpp:14: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132824
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n\tstd::vector<long>\
    \ u;\n\tstd::sort(l.begin(), l.end());\n\tfor(auto x:l)\n\t{\n\t\tif(!u.empty()\
    \ && x != u.back())\n\t\t{\n\t\t\tu.push_back(x);\n\t\t}\n\t}\n\treturn u;\n}\n\
    int main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmpny_pj4ja: /tmp/tmpny_pj4ja.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132824
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n  std::vector<long>\
    \ u;\n  for (long i : l) {\n    if (u.size() == 0 || u[u.size() - 1] != i)\n \
    \     u.push_back(i);\n  }\n  return u;\n}\nint main() {\n    auto candidate =\
    \ unique;\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: Exception
  stderr: 'tmp2x_ghx81: /tmp/tmp2x_ghx81.cpp:14: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132824
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n  std::vector<long>\
    \ u;\n  std::sort(l.begin(), l.end());\n  for(auto x: l)\n    u.push_back(x);\n\
    \  return u;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmpk411zzky: /tmp/tmpk411zzky.cpp:13: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132824
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    long result\
    \ = 0;\n    // Looping till the end of the input vector \n    for(long i = l.size()\
    \ - 1; i >= 0; i--) {\n        long a = l[i];\n        // Loop till we find an\
    \ equal element in the next iteration\n        for(long j = i + 1; j < l.size();\
    \ j++) {\n            long b = l[j];\n            if(a != b) {\n             \
    \   // If equal element\n                if(result == 0) {\n                 \
    \   // First encountered element\n                    result = a;\n          \
    \      }\n                // If not equal element\n                else {\n  \
    \                  // Push the current element to the result\n               \
    \     l.push_back(result);\n                    // Reset current element\n   \
    \                 result = a;\n                }\n                // If equal\
    \ element, push the current element to the result\n                l.push_back(result);\n\
    \                // Reset current element\n                result = a;\n     \
    \       }\n        }\n    }\n    return l;\n}\nint main() {\n    auto candidate\
    \ = unique;\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: Exception
  stderr: 'tmp9swa0f95: /tmp/tmp9swa0f95.cpp:36: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132824
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::sort(l.begin(),\
    \ l.end());\n    std::vector<long> result;\n    for (int i = 0; i < l.size();\
    \ ++i) {\n        if (!result.empty() &&\n            (result.back() == l[i] ||\n\
    \             (l[i] == result.back() && result.back() < l[i]))) {\n          \
    \  // If the previous element has the same value, or the previous element\n  \
    \          // is smaller than the new element, ignore the new element\n      \
    \      result.back() = std::min(result.back(), l[i]);\n        } else {\n    \
    \        result.push_back(l[i]);\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660132823
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n  std::vector<long>\
    \ ret;\n  std::sort(l.begin(), l.end());\n  ret.resize(std::unique(l.begin(),\
    \ l.end()) - l.begin());\n  return ret;\n}\nint main() {\n    auto candidate =\
    \ unique;\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: Exception
  stderr: 'tmppgs1e2ma: /tmp/tmppgs1e2ma.cpp:12: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132824
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ u;\n    std::sort(l.begin(), l.end());\n    std::sort(u.begin(), u.end());\n\
    \    u.erase(std::unique(u.begin(), u.end()), u.end());\n    return u;\n}\nint\
    \ main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmpuphj02mw: /tmp/tmpuphj02mw.cpp:13: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132743
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    assert(l.size()>1);\n\
    \    std::vector<long> ret;\n    std::sort(l.begin(), l.end());\n    ret.push_back(*l.begin());\n\
    \    for(auto i : l)\n        if(ret.size() < l.size() - 1)\n            ret.push_back(i);\n\
    \    return ret;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmp359zejs1: /tmp/tmp359zejs1.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132824
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ u;\n    std::sort(std::begin(l), std::end(l));\n    for(std::size_t i = 0; i\
    \ < std::end(l); i++) {\n        if(std::find(std::begin(u), std::end(u), l[i])\
    \ == std::end(u)) {\n            u.push_back(l[i]);\n        }\n    }\n    return\
    \ u;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpkiafihuy.cpp: In function \u2018std::vector<long int> unique(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpkiafihuy.cpp:7:30: error: no match for \u2018operator<\u2019\
    \ (operand types are \u2018std::size_t\u2019 {aka \u2018long unsigned int\u2019\
    } and \u2018std::vector<long int>::iterator\u2019 {aka \u2018__gnu_cxx::__normal_iterator<long\
    \ int*, std::vector<long int> >\u2019})\n    7 |     for(std::size_t i = 0; i\
    \ < std::end(l); i++) {\n      |                            ~ ^ ~~~~~~~~~~~\n\
    \      |                            |           |\n      |                   \
    \         |           std::vector<long int>::iterator {aka __gnu_cxx::__normal_iterator<long\
    \ int*, std::vector<long int> >}\n      |                            std::size_t\
    \ {aka long unsigned int}\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/specfun.h:45,\n               \
    \  from /usr/include/c++/9/cmath:1927,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmpkiafihuy.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:912:5:\
    \ note: candidate: \u2018template<class _IteratorL, class _IteratorR, class _Container>\
    \ bool __gnu_cxx::operator<(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&,\
    \ const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)\u2019\n  912 |\
    \     operator<(const __normal_iterator<_IteratorL, _Container>& __lhs,\n    \
    \  |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:912:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpkiafihuy.cpp:7:42: note:  \
    \ mismatched types \u2018const __gnu_cxx::__normal_iterator<_IteratorL, _Container>\u2019\
    \ and \u2018std::size_t\u2019 {aka \u2018long unsigned int\u2019}\n    7 |   \
    \  for(std::size_t i = 0; i < std::end(l); i++) {\n      |                   \
    \                       ^\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/specfun.h:45,\n               \
    \  from /usr/include/c++/9/cmath:1927,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \            "
  stdout: ''
  timestamp: 1660132823
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ result(l.size());\n    std::sort(l.begin(), l.end());\n    for (size_t i = 1;\
    \ i < l.size(); ++i) {\n        if (l[i] == l[i - 1]) {\n            result.emplace_back(l[i]);\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = unique;\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: Exception
  stderr: 'tmp2h9foi1h: /tmp/tmp2h9foi1h.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132824
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::sort(l.begin(),\
    \ l.end());\n    std::vector<long> univec(l.size());\n    std::unordered_set<long>\
    \ unique_set;\n    for(size_t i = 0; i < l.size(); ++i)\n        unique_set.insert(l[i]);\n\
    \    for(auto iter = unique_set.begin(); iter != unique_set.end(); ++iter)\n \
    \       univec[iter] = *iter;\n    return univec;\n}\nint main() {\n    auto candidate\
    \ = unique;\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3gx8n7mj.cpp: In function \u2018std::vector<long int> unique(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp3gx8n7mj.cpp:11:15: error: no match for \u2018operator[]\u2019\
    \ (operand types are \u2018std::vector<long int>\u2019 and \u2018std::__detail::_Node_iterator<long\
    \ int, true, false>\u2019)\n   11 |         univec[iter] = *iter;\n      |   \
    \            ^\nIn file included from /usr/include/c++/9/vector:67,\n        \
    \         from /usr/include/c++/9/functional:62,\n                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n\
    \                 from /usr/include/c++/9/algorithm:71,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n                 from\
    \ /tmp/tmp3gx8n7mj.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:1040:7: note:\
    \ candidate: \u2018std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp,\
    \ _Alloc>::size_type) [with _Tp = long int; _Alloc = std::allocator<long int>;\
    \ std::vector<_Tp, _Alloc>::reference = long int&; std::vector<_Tp, _Alloc>::size_type\
    \ = long unsigned int]\u2019\n 1040 |       operator[](size_type __n) _GLIBCXX_NOEXCEPT\n\
    \      |       ^~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1040:28: note: \
    \  no known conversion for argument 1 from \u2018std::__detail::_Node_iterator<long\
    \ int, true, false>\u2019 to \u2018std::vector<long int>::size_type\u2019 {aka\
    \ \u2018long unsigned int\u2019}\n 1040 |       operator[](size_type __n) _GLIBCXX_NOEXCEPT\n\
    \      |                  ~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:1058:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::const_reference std::vector<_Tp,\
    \ _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) const [with _Tp = long\
    \ int; _Alloc = std::allocator<long int>; std::vector<_Tp, _Alloc>::const_reference\
    \ = const long int&; std::vector<_Tp, _Alloc>::size_type = long unsigned int]\u2019\
    \n 1058 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT\n      |   \
    \    ^~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1058:28: note:   no known\
    \ conversion for argument 1 from \u2018std::__detail::_Node_iterator<long int,\
    \ true, false>\u2019 to \u2018std::"
  stdout: ''
  timestamp: 1660132823
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::sort(l.begin(),\
    \ l.end());\n    std::vector<long> uniques;\n    long last_unique = l.front();\n\
    \    for(long i : l){\n        if(i != last_unique){\n            uniques.push_back(last_unique);\n\
    \            last_unique = i;\n        }\n    }\n    uniques.push_back(last_unique);\n\
    \    return uniques;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660132824
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    auto it = std::unique(std::begin(l),\
    \ std::end(l));\n    return std::vector(std::begin(l), it);\n}\nint main() {\n\
    \    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmpj7awpom5: /tmp/tmpj7awpom5.cpp:10: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132824
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ u;\n    std::sort(l.begin(), l.end());\n    for(long i = 0; i != l.size(); ++i){\n\
    \        if(l.at(i) == l.at(i+1))\n            u.push_back(l.at(i));\n    }\n\
    \    return u;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: "terminate called after throwing an instance of 'std::out_of_range'\n  what():\
    \  vector::_M_range_check: __n (which is 9) >= this->size() (which is 9)\n"
  stdout: ''
  timestamp: 1660132824
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ u;\n    std::sort(l.begin(),l.end());\n    for(long i=0;i<l.size();i++) {\n\
    \        bool is_unique = true;\n        for(long j=0;j<u.size();j++) {\n    \
    \        if(l[i]==u[j]) {\n                is_unique = false;\n              \
    \  break;\n            }\n        }\n        if(!is_unique) {\n            u.push_back(l[i]);\n\
    \        }\n    }\n    return u;\n}\nint main() {\n    auto candidate = unique;\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: Exception
  stderr: 'tmp3a22p463: /tmp/tmp3a22p463.cpp:23: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132824
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ u;\n    std::sort(std::begin(l), std::end(l));\n    std::unique_copy(std::begin(l),\
    \ std::end(l), std::back_inserter(u));\n    return u;\n}\nint main() {\n    auto\
    \ candidate = unique;\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660132823
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ u;\n    std::sort(l.begin(),l.end());\n    for(std::size_t i = 1; i<l.size();\
    \ i++) {\n        if(l[i-1]==l[i]) {\n            u.push_back(l[i]);\n       \
    \ }\n    }\n    return u;\n}\nint main() {\n    auto candidate = unique;\n   \
    \ assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2, (long)3,\
    \ (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0, (long)2,\
    \ (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: Exception
  stderr: 'tmp5z399k1a: /tmp/tmp5z399k1a.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132824
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    sort(l.begin(),\
    \ l.end());\n    std::vector<long> ret;\n    for (long i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] != l[i - 1]) {\n            ret.push_back(l[i]);\n     \
    \   }\n    }\n    return ret;\n}\nint main() {\n    auto candidate = unique;\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: Exception
  stderr: 'tmp0tux49ry: /tmp/tmp0tux49ry.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132824
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ u;\n    std::sort(l.begin(), l.end());\n    for(long i : l)\n        u.push_back(i);\n\
    \    return u;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmp6_ga5cnu: /tmp/tmp6_ga5cnu.cpp:13: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132742
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n        std::vector<long>\
    \ result;\n        // Sort the input vector lexicographically\n        std::sort(l.begin(),\
    \ l.end());\n        // Use set to remove duplicates\n        std::set<long> set;\n\
    \        for(long i : l) {\n                set.insert(i);\n        }\n      \
    \  for(long i : set) {\n                result.push_back(i);\n        }\n    \
    \    return result;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660132824
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    if (l.size()\
    \ < 1) return l;\n    std::sort(l.begin(), l.end());\n    std::vector<long> uniq(l.begin(),\
    \ l.end());\n    std::sort(uniq.begin(), uniq.end());\n    return uniq;\n}\nint\
    \ main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmpguh6ah63: /tmp/tmpguh6ah63.cpp:13: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132824
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ ret;\n    ret.reserve(l.size());\n    std::sort(l.begin(), l.end());\n    for(auto\
    \ i : l)\n        ret.push_back(i);\n    return ret;\n}\nint main() {\n    auto\
    \ candidate = unique;\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: Exception
  stderr: 'tmpkk35y281: /tmp/tmpkk35y281.cpp:14: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132824
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ u;\n    for(long i: l)\n        if (find(u.begin(), u.end(), i) == u.end())\n\
    \            u.push_back(i);\n    return u;\n}\nint main() {\n    auto candidate\
    \ = unique;\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: Exception
  stderr: 'tmpew1enfcd: /tmp/tmpew1enfcd.cpp:13: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132824
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ u;\n    std::sort(l.begin(),l.end());\n    std::unique_copy(l.begin(),l.end(),std::back_inserter(u));\n\
    \    return u;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660132820
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ u;\n    std::set_difference(l.begin(), l.end(), std::back_inserter(u), std::inserter(u,\
    \ u.begin()));\n    return u;\n}\nint main() {\n    auto candidate = unique;\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaluktjvn.cpp: In function \u2018std::vector<long int> unique(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpaluktjvn.cpp:6:95: error: no matching function for call\
    \ to \u2018set_difference(std::vector<long int>::iterator, std::vector<long int>::iterator,\
    \ std::back_insert_iterator<std::vector<long int> >, std::insert_iterator<std::vector<long\
    \ int> >)\u2019\n    6 |     std::set_difference(l.begin(), l.end(), std::back_inserter(u),\
    \ std::inserter(u, u.begin()));\n      |                                     \
    \                                                          ^\nIn file included\
    \ from /usr/include/c++/9/algorithm:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpaluktjvn.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:5415:5:\
    \ note: candidate: \u2018template<class _IIter1, class _IIter2, class _OIter>\
    \ _OIter std::set_difference(_IIter1, _IIter1, _IIter2, _IIter2, _OIter)\u2019\
    \n 5415 |     set_difference(_InputIterator1 __first1, _InputIterator1 __last1,\n\
    \      |     ^~~~~~~~~~~~~~\n/usr/include/c++/9/bits/stl_algo.h:5415:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpaluktjvn.cpp:6:95:\
    \ note:   deduced conflicting types for parameter \u2018_IIter2\u2019 (\u2018\
    std::back_insert_iterator<std::vector<long int> >\u2019 and \u2018std::insert_iterator<std::vector<long\
    \ int> >\u2019)\n    6 |     std::set_difference(l.begin(), l.end(), std::back_inserter(u),\
    \ std::inserter(u, u.begin()));\n      |                                     \
    \                                                          ^\nIn file included\
    \ from /usr/include/c++/9/algorithm:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpaluktjvn.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:5466:5:\
    \ note: candidate: \u2018template<class _IIter1, class _IIter2, class _OIter,\
    \ class _Compare> _OIter std::set_difference(_IIter1, _IIter1, _IIter2, _IIter2,\
    \ _OIter, _Compare)\u2019\n 5466 |     set_difference(_InputIterator1 __first1,\
    \ _InputIterator1 __last1,\n      |     ^~~~~~~~~~~~~~\n/usr/include/c"
  stdout: ''
  timestamp: 1660132823
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    // Use count\
    \ vector to count how many times each number has \n    // been encountered so\
    \ far\n    std::vector<long> count(l.size(), 0);\n    // Store the elements present\
    \ in l\n    std::vector<long> v;\n    // Store the number seen so far before traversing\
    \ the list\n    std::vector<long> seen;\n    // Initialize count vector with all\
    \ elements as seen and 0\n    for (int i = 0; i < l.size(); i++)\n        count.push_back(i);\n\
    \    // Traverse the list and increment each count for each element seen\n   \
    \ for (long i : l) {\n        if (count[i] == 0) {\n            v.push_back(i);\n\
    \            seen.push_back(i);\n            count[i]++;\n        }\n    }\n \
    \   // For each number seen in the list, compare it with the number \n    // seen\
    \ so far to decide if that element has been seen in previous \n    // traversals.\
    \ If not seen, add it to the output list\n    for (long i : seen) {\n        for\
    \ (int j = 0; j < v.size(); j++) {\n            if (v[j] == i) {\n           \
    \     v.erase(v.begin() + j);\n                break;\n            }\n       \
    \ }\n    }\n    // Return unique elements sorted and in sorted order\n    return\
    \ v;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmp5vbsz_fm: /tmp/tmp5vbsz_fm.cpp:39: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132824
- exit_code: -11
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ u;\n    std::sort(l.begin(), l.end());\n    for(auto it = l.begin();it != l.end();++it){\n\
    \        for(auto it2 = l.begin();it2 != l.end();++it2){\n            if(*it ==\
    \ *it2){\n                u.push_back(*it);\n                l.erase(it2);\n \
    \               break;\n            }\n        }\n    }\n    return u;\n}\nint\
    \ main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660132824
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ out;\n    for(auto it = l.begin(); it != l.end(); ++it) {\n        bool found\
    \ = false;\n        for(auto prev = out.begin(); prev != out.end(); ++prev) {\n\
    \            if(*prev == *it) {\n                found = true;\n             \
    \   break;\n            }\n        }\n        if(!found) {\n            out.push_back(*it);\n\
    \        }\n    }\n    return out;\n}\nint main() {\n    auto candidate = unique;\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: Exception
  stderr: 'tmpr2k6hzqx: /tmp/tmpr2k6hzqx.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132824
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ u;\n    std::sort(l.begin(), l.end());\n    std::remove_if(l.begin(), l.end(),\
    \ [&](long x){return !u.empty() && x == u.back();});\n    std::copy_if(l.begin(),\
    \ l.end(), std::back_inserter(u), [](long x){return true;});\n    return u;\n\
    }\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmpfsi37j_2: /tmp/tmpfsi37j_2.cpp:13: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132824
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::sort(l.begin(),\
    \ l.end());\n    std::sort(l.begin(), l.end(), std::greater<long>());\n\n    auto\
    \ it = l.begin();\n    std::set<long> s;\n    std::vector<long> r;\n    while(it\
    \ != l.end()) {\n        if (s.find(*it) == s.end()) {\n            r.push_back(*it);\n\
    \            s.insert(*it);\n        }\n        ++it;\n    }\n    return r;\n\
    }\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmpw9mzygyu: /tmp/tmpw9mzygyu.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132825
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n  std::sort(l.begin(),\
    \ l.end());\n  std::vector<long> u;\n  std::unique(l.begin(), l.end(), std::back_inserter(u));\n\
    \  return u;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/bits/stl_algobase.h:71,\n    \
    \             from /usr/include/c++/9/bits/specfun.h:45,\n                 from\
    \ /usr/include/c++/9/cmath:1927,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmpwfi7byfn.cpp:2:\n/usr/include/c++/9/bits/predefined_ops.h:\
    \ In instantiation of \u2018constexpr bool __gnu_cxx::__ops::_Iter_comp_iter<_Compare>::operator()(_Iterator1,\
    \ _Iterator2) [with _Iterator1 = __gnu_cxx::__normal_iterator<long int*, std::vector<long\
    \ int> >; _Iterator2 = __gnu_cxx::__normal_iterator<long int*, std::vector<long\
    \ int> >; _Compare = std::back_insert_iterator<std::vector<long int> >]\u2019\
    :\n/usr/include/c++/9/bits/stl_algo.h:980:20:   required from \u2018_ForwardIterator\
    \ std::__unique(_ForwardIterator, _ForwardIterator, _BinaryPredicate) [with _ForwardIterator\
    \ = __gnu_cxx::__normal_iterator<long int*, std::vector<long int> >; _BinaryPredicate\
    \ = __gnu_cxx::__ops::_Iter_comp_iter<std::back_insert_iterator<std::vector<long\
    \ int> > >]\u2019\n/usr/include/c++/9/bits/stl_algo.h:1042:27:   required from\
    \ \u2018_FIter std::unique(_FIter, _FIter, _BinaryPredicate) [with _FIter = __gnu_cxx::__normal_iterator<long\
    \ int*, std::vector<long int> >; _BinaryPredicate = std::back_insert_iterator<std::vector<long\
    \ int> >]\u2019\n/tmp/tmpwfi7byfn.cpp:7:56:   required from here\n/usr/include/c++/9/bits/predefined_ops.h:143:18:\
    \ error: no match for call to \u2018(std::back_insert_iterator<std::vector<long\
    \ int> >) (long int&, long int&)\u2019\n  143 |         { return bool(_M_comp(*__it1,\
    \ *__it2)); }\n      |                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660132824
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n  std::sort(l.begin(),\
    \ l.end());\n  std::vector<long> u;\n  std::set_difference(l.begin(), l.end(),\
    \ std::back_inserter(u), [](long x) { return x == x; });\n  return u;\n}\nint\
    \ main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpywqko5ea.cpp: In function \u2018std::vector<long int> unique(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpywqko5ea.cpp:7:95: error: no matching function for call\
    \ to \u2018set_difference(std::vector<long int>::iterator, std::vector<long int>::iterator,\
    \ std::back_insert_iterator<std::vector<long int> >, unique(std::vector<long int>)::<lambda(long\
    \ int)>)\u2019\n    7 |   std::set_difference(l.begin(), l.end(), std::back_inserter(u),\
    \ [](long x) { return x == x; });\n      |                                   \
    \                                                            ^\nIn file included\
    \ from /usr/include/c++/9/algorithm:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpywqko5ea.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:5415:5:\
    \ note: candidate: \u2018template<class _IIter1, class _IIter2, class _OIter>\
    \ _OIter std::set_difference(_IIter1, _IIter1, _IIter2, _IIter2, _OIter)\u2019\
    \n 5415 |     set_difference(_InputIterator1 __first1, _InputIterator1 __last1,\n\
    \      |     ^~~~~~~~~~~~~~\n/usr/include/c++/9/bits/stl_algo.h:5415:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpywqko5ea.cpp:7:95:\
    \ note:   deduced conflicting types for parameter \u2018_IIter2\u2019 (\u2018\
    std::back_insert_iterator<std::vector<long int> >\u2019 and \u2018unique(std::vector<long\
    \ int>)::<lambda(long int)>\u2019)\n    7 |   std::set_difference(l.begin(), l.end(),\
    \ std::back_inserter(u), [](long x) { return x == x; });\n      |            \
    \                                                                            \
    \       ^\nIn file included from /usr/include/c++/9/algorithm:62,\n          \
    \       from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n         \
    \        from /tmp/tmpywqko5ea.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:5466:5:\
    \ note: candidate: \u2018template<class _IIter1, class _IIter2, class _OIter,\
    \ class _Compare> _OIter std::set_difference(_IIter1, _IIter1, _IIter2, _IIter2,\
    \ _OIter, _Compare)\u2019\n 5466 |     set_difference(_InputIterator1 __first1,\
    \ _InputIterator1 __last1,\n      |     ^~~~~~~~~~~~~~\n/usr"
  stdout: ''
  timestamp: 1660132824
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n\tauto cmp = [](long\
    \ n1, long n2) -> bool { return n1 < n2; };\n\tstd::sort(l.begin(), l.end(), cmp);\n\
    \tstd::vector<long> result;\n\tfor (auto it = l.begin(); it != l.end(); it++)\
    \ {\n\t\tif (!result.empty() && *it == *result.back()) {\n\t\t\tit++;\n\t\t\t\
    continue;\n\t\t}\n\t\tresult.push_back(*it);\n\t}\n\treturn result;\n}\nint main()\
    \ {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp6j66g5s1.cpp: In function \u2018std::vector<long int> unique(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp6j66g5s1.cpp:9:46: error: invalid type argument of unary\
    \ \u2018*\u2019 (have \u2018__gnu_cxx::__alloc_traits<std::allocator<long int>,\
    \ long int>::value_type\u2019 {aka \u2018long int\u2019})\n    9 |   if (!result.empty()\
    \ && *it == *result.back()) {\n      |                                       \
    \       ^\n"
  stdout: ''
  timestamp: 1660132824
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n  std::sort(l.begin(),\
    \ l.end());\n  std::vector<long> ret(l.size());\n  for (size_t i = 0; i < l.size();\
    \ i++)\n    ret[i] = l[i];\n  return ret;\n}\nint main() {\n    auto candidate\
    \ = unique;\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: Exception
  stderr: 'tmpt7cc3of0: /tmp/tmpt7cc3of0.cpp:13: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132825
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ u;\n    std::sort(l.begin(), l.end());\n    for(long i = 1; i < l.size(); i++){\n\
    \        if(l[i-1] != l[i]){\n            u.push_back(l[i]);\n        }\n    }\n\
    \    return u;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmp0o2vemyf: /tmp/tmp0o2vemyf.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132825
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ u;\n    std::sort(l.begin(), l.end());\n    for(long i = 0; i < l.size(); i++)\
    \ {\n        if(l.at(i) != i) {\n            u.push_back(l.at(i));\n        }\n\
    \    }\n    return u;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmpneeuhi3p: /tmp/tmpneeuhi3p.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132825
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ v;\n    for(long i : l)\n        if(!v.insert(i).second)\n            throw\
    \ std::runtime_error(\"Duplicate value found.\");\n    return v;\n}\nint main()\
    \ {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp5hec9zlr.cpp: In function \u2018std::vector<long int> unique(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp5hec9zlr.cpp:7:23: error: no matching function for call\
    \ to \u2018std::vector<long int>::insert(long int&)\u2019\n    7 |         if(!v.insert(i).second)\n\
    \      |                       ^\nIn file included from /usr/include/c++/9/vector:72,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp5hec9zlr.cpp:2:\n/usr/include/c++/9/bits/vector.tcc:130:5:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp,\
    \ _Alloc>::const_iterator, const value_type&) [with _Tp = long int; _Alloc = std::allocator<long\
    \ int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<long\
    \ int*, std::vector<long int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer\
    \ = long int*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const\
    \ long int*, std::vector<long int> >; typename __gnu_cxx::__alloc_traits<typename\
    \ std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const long\
    \ int*; std::vector<_Tp, _Alloc>::value_type = long int]\u2019\n  130 |     vector<_Tp,\
    \ _Alloc>::\n      |     ^~~~~~~~~~~~~~~~~~~\n/usr/include/c++/9/bits/vector.tcc:130:5:\
    \ note:   candidate expects 2 arguments, 1 provided\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp5hec9zlr.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:1290:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp,\
    \ _Alloc>::const_iterator, std::vector<_Tp, _"
  stdout: ''
  timestamp: 1660132825
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::sort(l.begin(),\
    \ l.end());\n    std::vector<long> u(l.size());\n    std::adjacent_find(l.begin(),\
    \ l.end(),  // iterators \n                        std::back_inserter(u));\n \
    \   return u;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/bits/stl_algobase.h:71,\n    \
    \             from /usr/include/c++/9/bits/specfun.h:45,\n                 from\
    \ /usr/include/c++/9/cmath:1927,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmporz4m_nr.cpp:2:\n/usr/include/c++/9/bits/predefined_ops.h:\
    \ In instantiation of \u2018constexpr bool __gnu_cxx::__ops::_Iter_comp_iter<_Compare>::operator()(_Iterator1,\
    \ _Iterator2) [with _Iterator1 = __gnu_cxx::__normal_iterator<long int*, std::vector<long\
    \ int> >; _Iterator2 = __gnu_cxx::__normal_iterator<long int*, std::vector<long\
    \ int> >; _Compare = std::back_insert_iterator<std::vector<long int> >]\u2019\
    :\n/usr/include/c++/9/bits/stl_algo.h:959:21:   required from \u2018_ForwardIterator\
    \ std::__adjacent_find(_ForwardIterator, _ForwardIterator, _BinaryPredicate) [with\
    \ _ForwardIterator = __gnu_cxx::__normal_iterator<long int*, std::vector<long\
    \ int> >; _BinaryPredicate = __gnu_cxx::__ops::_Iter_comp_iter<std::back_insert_iterator<std::vector<long\
    \ int> > >]\u2019\n/usr/include/c++/9/bits/stl_algo.h:4098:34:   required from\
    \ \u2018_FIter std::adjacent_find(_FIter, _FIter, _BinaryPredicate) [with _FIter\
    \ = __gnu_cxx::__normal_iterator<long int*, std::vector<long int> >; _BinaryPredicate\
    \ = std::back_insert_iterator<std::vector<long int> >]\u2019\n/tmp/tmporz4m_nr.cpp:8:46:\
    \   required from here\n/usr/include/c++/9/bits/predefined_ops.h:143:18: error:\
    \ no match for call to \u2018(std::back_insert_iterator<std::vector<long int>\
    \ >) (long int&, long int&)\u2019\n  143 |         { return bool(_M_comp(*__it1,\
    \ *__it2)); }\n      |                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660132825
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ u;\n    std::sort(l.begin(), l.end());\n    for(auto i : l) {\n        u.push_back(i);\n\
    \    }\n    return u;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmp2z6js0i7: /tmp/tmp2z6js0i7.cpp:14: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    // sort unique\
    \ elements in ascending order\n    std::sort(l.begin(), l.end());\n    // remove\
    \ the duplicate elements\n    auto i1 = l.begin();\n    auto i2 = l.begin() +\
    \ 1;\n    while (i1 != l.end() && i2 != l.end()) {\n        if (*i1 < *i2) {\n\
    \            l.erase(i1++);\n        } else {\n            l.erase(i2++);\n  \
    \      }\n    }\n    return l;\n}\nint main() {\n    auto candidate = unique;\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: Exception
  stderr: 'tmpoo402ho8: /tmp/tmpoo402ho8.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132826
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    l.sort(std::less<long>());\
    \ // sort the input array in ascending order\n    auto new_end = std::unique(l.begin(),\
    \ l.end()); // remove the duplicates\n    l.erase(new_end, l.end()); // remove\
    \ the last duplicate element\n    return l;\n}\nint main() {\n    auto candidate\
    \ = unique;\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptipzgyh7.cpp: In function \u2018std::vector<long int> unique(std::vector<long\
    \ int>)\u2019:\n/tmp/tmptipzgyh7.cpp:5:7: error: \u2018class std::vector<long\
    \ int>\u2019 has no member named \u2018sort\u2019\n    5 |     l.sort(std::less<long>());\
    \ // sort the input array in ascending order\n      |       ^~~~\n"
  stdout: ''
  timestamp: 1660132825
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n  std::sort(l.begin(),\
    \ l.end());\n  std::vector<long> ret(l);\n  std::unique(ret.begin(), ret.end());\n\
    \  return ret;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmp2rx3t_ey: /tmp/tmp2rx3t_ey.cpp:12: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n  std::vector<long>\
    \ temp;\n  // First find unique element\n  auto it = std::find_if(l.begin(), l.end(),\
    \ [&](long e){return l.size() > 1; });\n  long val = *it;\n  it = l.begin();\n\
    \  do {\n    // If we already found this value then continue otherwise store it\n\
    \    if (val == *it) {\n      it = l.erase(it);\n    } else {\n      temp.push_back(val);\n\
    \      ++it;\n    }\n  } while (it != l.end());\n  // Copy unique elements and\
    \ return it\n  std::copy(temp.begin(), temp.end(), std::back_inserter(l));\n \
    \ return l;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmpsrvmamcm: /tmp/tmpsrvmamcm.cpp:25: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132826
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    // Sort vector\
    \ in-place\n    std::sort(l.begin(), l.end());\n\n    // Return sorted unique\
    \ elements\n    std::vector<long> res;\n    long u;\n    while (l) {\n       \
    \ u = *l.begin();\n        l.erase(l.begin());\n        res.push_back(u);\n  \
    \  }\n    return res;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp0zs_exq_.cpp: In function \u2018std::vector<long int> unique(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp0zs_exq_.cpp:11:12: error: could not convert \u2018l\u2019\
    \ from \u2018std::vector<long int>\u2019 to \u2018bool\u2019\n   11 |     while\
    \ (l) {\n      |            ^\n      |            |\n      |            std::vector<long\
    \ int>\n"
  stdout: ''
  timestamp: 1660132826
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ result(l.size());\n    std::sort(l.begin(), l.end());\n    std::set_difference(l.begin(),\
    \ l.end(), result.begin(), result.end());\n    return std::move(result);\n}\n\
    int main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp399pevnt.cpp: In function \u2018std::vector<long int> unique(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp399pevnt.cpp:7:73: error: no matching function for call\
    \ to \u2018set_difference(std::vector<long int>::iterator, std::vector<long int>::iterator,\
    \ std::vector<long int>::iterator, std::vector<long int>::iterator)\u2019\n  \
    \  7 |     std::set_difference(l.begin(), l.end(), result.begin(), result.end());\n\
    \      |                                                                     \
    \    ^\nIn file included from /usr/include/c++/9/algorithm:62,\n             \
    \    from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n            \
    \     from /tmp/tmp399pevnt.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:5415:5:\
    \ note: candidate: \u2018template<class _IIter1, class _IIter2, class _OIter>\
    \ _OIter std::set_difference(_IIter1, _IIter1, _IIter2, _IIter2, _OIter)\u2019\
    \n 5415 |     set_difference(_InputIterator1 __first1, _InputIterator1 __last1,\n\
    \      |     ^~~~~~~~~~~~~~\n/usr/include/c++/9/bits/stl_algo.h:5415:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp399pevnt.cpp:7:73:\
    \ note:   candidate expects 5 arguments, 4 provided\n    7 |     std::set_difference(l.begin(),\
    \ l.end(), result.begin(), result.end());\n      |                           \
    \                                              ^\nIn file included from /usr/include/c++/9/algorithm:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp399pevnt.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:5466:5:\
    \ note: candidate: \u2018template<class _IIter1, class _IIter2, class _OIter,\
    \ class _Compare> _OIter std::set_difference(_IIter1, _IIter1, _IIter2, _IIter2,\
    \ _OIter, _Compare)\u2019\n 5466 |     set_difference(_InputIterator1 __first1,\
    \ _InputIterator1 __last1,\n      |     ^~~~~~~~~~~~~~\n/usr/include/c++/9/bits/stl_algo.h:5466:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp399pevnt.cpp:7:73:\
    \ note:   candidate expects 6 arguments, 4 provided\n    7 |     std::set_difference(l.begin(),\
    \ l.end(), result.begin(), result.end())"
  stdout: ''
  timestamp: 1660132825
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ retVal;\n    std::sort(l.begin(), l.end());\n    retVal.reserve(l.size());\n\
    \    long lastVal = std::unique(l.begin(), l.end()) - l.begin();\n    retVal.resize(l.size()\
    \ - lastVal);\n    return retVal;\n}\nint main() {\n    auto candidate = unique;\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: Exception
  stderr: 'tmpqu1tn4wh: /tmp/tmpqu1tn4wh.cpp:14: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132826
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ u;\n    std::sort(l.begin(), l.end());\n    std::set<long> s;\n    for(long\
    \ i : l) {\n        s.insert(i);\n    }\n    u.assign(s.begin(), s.end());\n \
    \   return u;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660132826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ u;\n    for (auto &i : l) {\n        if (u.size() == 0 || i == u[u.size() -\
    \ 1]) {\n            u.push_back(i);\n        }\n    }\n    return u;\n}\nint\
    \ main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmpmco1lxc7: /tmp/tmpmco1lxc7.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132826
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::sort(l.begin(),\
    \ l.end());\n    std::vector<long> result;\n    std::set_difference(l.begin(),\
    \ l.end(), std::back_inserter(result), std::unique(l.begin(), l.end()));\n   \
    \ return result;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpa9_b6e9p.cpp: In function \u2018std::vector<long int> unique(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpa9_b6e9p.cpp:7:104: error: no matching function for call\
    \ to \u2018set_difference(std::vector<long int>::iterator, std::vector<long int>::iterator,\
    \ std::back_insert_iterator<std::vector<long int> >, __gnu_cxx::__normal_iterator<long\
    \ int*, std::vector<long int> >)\u2019\n    7 |     std::set_difference(l.begin(),\
    \ l.end(), std::back_inserter(result), std::unique(l.begin(), l.end()));\n   \
    \   |                                                                        \
    \                                ^\nIn file included from /usr/include/c++/9/algorithm:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpa9_b6e9p.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:5415:5:\
    \ note: candidate: \u2018template<class _IIter1, class _IIter2, class _OIter>\
    \ _OIter std::set_difference(_IIter1, _IIter1, _IIter2, _IIter2, _OIter)\u2019\
    \n 5415 |     set_difference(_InputIterator1 __first1, _InputIterator1 __last1,\n\
    \      |     ^~~~~~~~~~~~~~\n/usr/include/c++/9/bits/stl_algo.h:5415:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpa9_b6e9p.cpp:7:104:\
    \ note:   deduced conflicting types for parameter \u2018_IIter2\u2019 (\u2018\
    std::back_insert_iterator<std::vector<long int> >\u2019 and \u2018__gnu_cxx::__normal_iterator<long\
    \ int*, std::vector<long int> >\u2019)\n    7 |     std::set_difference(l.begin(),\
    \ l.end(), std::back_inserter(result), std::unique(l.begin(), l.end()));\n   \
    \   |                                                                        \
    \                                ^\nIn file included from /usr/include/c++/9/algorithm:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpa9_b6e9p.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:5466:5:\
    \ note: candidate: \u2018template<class _IIter1, class _IIter2, class _OIter,\
    \ class _Compare> _OIter std::set_difference(_IIter1, _IIter1, _IIter2, _IIter2,\
    \ _OIter, _Compare)\u2019\n 5466 |     set_difference(_InputIterator1 "
  stdout: ''
  timestamp: 1660132825
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    // Create empty\
    \ vector\n    std::vector<long> unique_elem(l.begin(), l.end());\n    // Sort\
    \ unique elements\n    std::sort(unique_elem.begin(), unique_elem.end());\n  \
    \  // Return sorted unique elements\n    return unique_elem;\n}\nint main() {\n\
    \    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmp4e5n094h: /tmp/tmp4e5n094h.cpp:14: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132827
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n  // sort vector\
    \ l\n  std::sort(l.begin(), l.end());\n  // remove adjacent duplicates \n  std::vector<long>\
    \ u;\n  for(long i=1; i < l.size(); i++) {\n    if(l[i] == l[i-1]) {\n      u.push_back(l[i]);\n\
    \    }\n  }\n  // return sorted unique elements\n  return u;\n}\nint main() {\n\
    \    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmpp75qun4o: /tmp/tmpp75qun4o.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132827
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    // We will add\
    \ all unique elements to the list and then sort\n    std::vector<long> u;\n  \
    \  for(int i=0;i<l.size();i++){\n        bool flag = false;\n        long current\
    \ = l[i];\n        for(int j=i+1;j<l.size();j++){\n            if(l[i]==l[j]){\n\
    \                flag = true;\n                break;\n            }\n       \
    \ }\n        if(flag)\n            continue;\n        u.push_back(current);\n\
    \    }\n    std::sort(u.begin(),u.end());\n    return u;\n}\nint main() {\n  \
    \  auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660132827
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::sort(l.begin(),\
    \ l.end());\n    std::vector<long> u;\n    for(std::size_t i = 1; i < l.size();\
    \ i++) if(l[i] != l[i-1]) u.push_back(l[i]);\n    return u;\n}\nint main() {\n\
    \    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmp6q7w6xrc: /tmp/tmp6q7w6xrc.cpp:12: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132827
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    l.sort();\n\
    \    return l;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp1svzirm6.cpp: In function \u2018std::vector<long int> unique(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp1svzirm6.cpp:5:7: error: \u2018class std::vector<long\
    \ int>\u2019 has no member named \u2018sort\u2019\n    5 |     l.sort();\n   \
    \   |       ^~~~\n"
  stdout: ''
  timestamp: 1660132826
- exit_code: -11
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n  // Sort list using\
    \ bubble sort.\n  std::sort(l.begin(), l.end());\n  std::vector<long> u;\n  for\
    \ (long i=0; i<l.size(); ++i) {\n    if (u[i] != l[i]) {\n      u.push_back(l[i]);\n\
    \    }\n  }\n  return u;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660132827
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    assert(l.size()\
    \ != 0);\n    // Get size of vector\n    size_t size = l.size();\n    std::vector<long>\
    \ result;\n    result.clear();\n    // Iterate through all elements in the vector\n\
    \    for(size_t i = 0; i < size; i++) {\n        // Compare each element against\
    \ the next element\n        long cur = l[i];\n        long next = l[i + 1];\n\
    \        if(cur > next) {\n            result.push_back(cur);\n        }\n   \
    \ }\n    return result;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmp_dph2fp8: /tmp/tmp_dph2fp8.cpp:23: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132827
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ u;\n    std::sort(l.begin(), l.end());\n    std::unique_copy(l.begin(), l.end(),\
    \ std::back_inserter(u));\n    return u;\n}\nint main() {\n    auto candidate\
    \ = unique;\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660132742
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ u;\n    std::sort(l.begin(), l.end());\n    for(long i = 0; i < l.size(); ++i)\n\
    \        u.push_back(l.at(i));\n    return u;\n}\nint main() {\n    auto candidate\
    \ = unique;\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: Exception
  stderr: 'tmpajp4j3m1: /tmp/tmpajp4j3m1.cpp:13: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132742
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ result;\n    std::sort(l.begin(), l.end());\n    for (long e : l)\n        if\
    \ (!result.empty() &&\n                e != result.back())\n            result.push_back(e);\n\
    \    return result;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmp7ul8jjdu: /tmp/tmp7ul8jjdu.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132827
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    // Create a\
    \ map of seen elements for O(1) searching\n    std::map<long, int> seen;\n   \
    \ // Copy list to a vector with unique elements\n    std::vector<long> result((std::begin(l),\
    \ std::end(l)), std::begin(l));\n    // For each element x of the list, check\
    \ if it is seen already\n    for (long x: l) {\n        // If x has been seen\
    \ before, skip it\n        // Else, add it to the unique list\n        if (seen.count(x))\
    \ {\n            continue;\n        } else {\n            seen.insert(std::make_pair(x,\
    \ 1));\n            result.push_back(x);\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: "terminate called after throwing an instance of 'std::length_error'\n  what():\
    \  cannot create std::vector larger than max_size()\n"
  stdout: ''
  timestamp: 1660132827
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n\tstd::sort(l.begin(),\
    \ l.end());\n\tauto new_end = std::unique(l.begin(), l.end()); // Returns iterator\
    \ to new end\n\tl.erase(new_end, l.end()); // Erase duplicate elements\n\treturn\
    \ l;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660132827
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ v;\n    std::sort(std::begin(l), std::end(l));\n    auto p = std::begin(l);\n\
    \    while (std::adjacent_find(std::begin(l), std::end(l)) != std::end(l)) {\n\
    \        if (*p != std::end(l)) {\n            v.push_back(*p);\n        }\n \
    \       p++;\n    }\n    return v;\n}\nint main() {\n    auto candidate = unique;\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpazq61oqu.cpp: In function \u2018std::vector<long int> unique(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpazq61oqu.cpp:9:16: error: no match for \u2018operator!=\u2019\
    \ (operand types are \u2018long int\u2019 and \u2018std::vector<long int>::iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<long int*, std::vector<long int> >\u2019\
    })\n    9 |         if (*p != std::end(l)) {\n      |             ~~ ^~ ~~~~~~~~~~~\n\
    \      |             |             |\n      |             long int      std::vector<long\
    \ int>::iterator {aka __gnu_cxx::__normal_iterator<long int*, std::vector<long\
    \ int> >}\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/specfun.h:45,\n               \
    \  from /usr/include/c++/9/cmath:1927,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmpazq61oqu.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:897:5:\
    \ note: candidate: \u2018template<class _IteratorL, class _IteratorR, class _Container>\
    \ bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&,\
    \ const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)\u2019\n  897 |\
    \     operator!=(const __normal_iterator<_IteratorL, _Container>& __lhs,\n   \
    \   |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:897:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpazq61oqu.cpp:9:29: note:  \
    \ mismatched types \u2018const __gnu_cxx::__normal_iterator<_IteratorL, _Container>\u2019\
    \ and \u2018long int\u2019\n    9 |         if (*p != std::end(l)) {\n      |\
    \                             ^\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/specfun.h:45,\n               \
    \  from /usr/include/c++/9/cmath:1927,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmpazq61oqu.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:904:5:\
    \ note: candidate: \u2018template<class _Iterator, class _Container> bool __gnu_cxx::operator!=(const\
    \ __gnu_cxx::__normal_iterator<_Iterator, _Cont"
  stdout: ''
  timestamp: 1660132827
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n  std::vector<long>\
    \ u;\n  std::sort(l.begin(), l.end());\n  std::set_difference(l.begin(), l.end(),\
    \ u.begin(), u.end(), std::less<long>());\n  return u;\n}\nint main() {\n    auto\
    \ candidate = unique;\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/algorithm:62,\n              \
    \   from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n             \
    \    from /tmp/tmp8wn21d2c.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h: In instantiation\
    \ of \u2018_OutputIterator std::__set_difference(_InputIterator1, _InputIterator1,\
    \ _InputIterator2, _InputIterator2, _OutputIterator, _Compare) [with _InputIterator1\
    \ = __gnu_cxx::__normal_iterator<long int*, std::vector<long int> >; _InputIterator2\
    \ = __gnu_cxx::__normal_iterator<long int*, std::vector<long int> >; _OutputIterator\
    \ = std::less<long int>; _Compare = __gnu_cxx::__ops::_Iter_less_iter]\u2019:\n\
    /usr/include/c++/9/bits/stl_algo.h:5435:46:   required from \u2018_OIter std::set_difference(_IIter1,\
    \ _IIter1, _IIter2, _IIter2, _OIter) [with _IIter1 = __gnu_cxx::__normal_iterator<long\
    \ int*, std::vector<long int> >; _IIter2 = __gnu_cxx::__normal_iterator<long int*,\
    \ std::vector<long int> >; _OIter = std::less<long int>]\u2019\n/tmp/tmp8wn21d2c.cpp:7:80:\
    \   required from here\n/usr/include/c++/9/bits/stl_algo.h:5378:6: error: no match\
    \ for \u2018operator*\u2019 (operand type is \u2018std::less<long int>\u2019)\n\
    \ 5378 |      *__result = *__first1;\n      |      ^~~~~~~~~\nIn file included\
    \ from /usr/include/c++/9/ccomplex:39,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp8wn21d2c.cpp:2:\n/usr/include/c++/9/complex:391:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator*(const\
    \ std::complex<_Tp>&, const std::complex<_Tp>&)\u2019\n  391 |     operator*(const\
    \ complex<_Tp>& __x, const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:391:5:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/9/algorithm:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp8wn21d2c.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:5378:6:\
    \ note:   \u2018std::less<long int>\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\
    \n 5378 |      *__result = *__first1;\n   "
  stdout: ''
  timestamp: 1660132826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ u;\n    std::sort(l.begin(), l.end());\n    for(auto i : l) {\n        u.push_back(i);\n\
    \    }\n    return u;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmp2z6js0i7: /tmp/tmp2z6js0i7.cpp:14: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132826
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n  // We use a set\
    \ to store unique elements\n  std::set<long> s(l.begin(), l.end());\n  // We copy\
    \ the set into a new vector\n  std::vector<long> u(s.begin(), s.end());\n  return\
    \ u;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660132827
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n  std::vector<long>\
    \ u;\n  std::sort(l.begin(), l.end());\n  std::unique(l.begin(), l.end(), std::back_inserter(u));\n\
    \  return u;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/bits/stl_algobase.h:71,\n    \
    \             from /usr/include/c++/9/bits/specfun.h:45,\n                 from\
    \ /usr/include/c++/9/cmath:1927,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmpjk1y2w5m.cpp:2:\n/usr/include/c++/9/bits/predefined_ops.h:\
    \ In instantiation of \u2018constexpr bool __gnu_cxx::__ops::_Iter_comp_iter<_Compare>::operator()(_Iterator1,\
    \ _Iterator2) [with _Iterator1 = __gnu_cxx::__normal_iterator<long int*, std::vector<long\
    \ int> >; _Iterator2 = __gnu_cxx::__normal_iterator<long int*, std::vector<long\
    \ int> >; _Compare = std::back_insert_iterator<std::vector<long int> >]\u2019\
    :\n/usr/include/c++/9/bits/stl_algo.h:980:20:   required from \u2018_ForwardIterator\
    \ std::__unique(_ForwardIterator, _ForwardIterator, _BinaryPredicate) [with _ForwardIterator\
    \ = __gnu_cxx::__normal_iterator<long int*, std::vector<long int> >; _BinaryPredicate\
    \ = __gnu_cxx::__ops::_Iter_comp_iter<std::back_insert_iterator<std::vector<long\
    \ int> > >]\u2019\n/usr/include/c++/9/bits/stl_algo.h:1042:27:   required from\
    \ \u2018_FIter std::unique(_FIter, _FIter, _BinaryPredicate) [with _FIter = __gnu_cxx::__normal_iterator<long\
    \ int*, std::vector<long int> >; _BinaryPredicate = std::back_insert_iterator<std::vector<long\
    \ int> >]\u2019\n/tmp/tmpjk1y2w5m.cpp:7:56:   required from here\n/usr/include/c++/9/bits/predefined_ops.h:143:18:\
    \ error: no match for call to \u2018(std::back_insert_iterator<std::vector<long\
    \ int> >) (long int&, long int&)\u2019\n  143 |         { return bool(_M_comp(*__it1,\
    \ *__it2)); }\n      |                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660132826
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n\tstd::vector<long>\
    \ unique_ele;\n\tstd::sort(l.begin(),l.end());\n\tunique_ele = l;\n\tstd::vector<long>\
    \ u;\n\tfor(long i = 0; i < l.size() - 1; i++) {\n\t\tif(l[i] != l[i + 1]) {\n\
    \t\t\tu.push_back(l[i]);\n\t\t}\n\t}\n\treturn unique_ele;\n}\nint main() {\n\
    \    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmp4vy565_b: /tmp/tmp4vy565_b.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132828
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n  std::vector<long>\
    \ temp;\n  long count = 0;\n  for (long i : l) {\n    if (i != count) {\n    \
    \  temp.push_back(i);\n      count++;\n    }\n  }\n  return temp;\n}\nint main()\
    \ {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmp9tnpc3os: /tmp/tmp9tnpc3os.cpp:17: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132827
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    int count =\
    \ 0;\n    std::vector<long> u;\n    std::sort(l.begin(), l.end());\n    for (long\
    \ l : l) {\n        if (l != count) {\n            u.push_back(l);\n         \
    \   count++;\n        }\n    }\n    return u;\n}\nint main() {\n    auto candidate\
    \ = unique;\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: Exception
  stderr: 'tmpzm0r2weo: /tmp/tmpzm0r2weo.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132827
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n        std::sort(l.begin(),\
    \ l.end()); // Sort list\n        std::vector<long> u;\n        for(auto it =\
    \ l.begin(); it != l.end(); ++it) { // Remove duplicates\n                if(*it\
    \ != *std::next(it)) {\n                        u.push_back(*it);\n          \
    \      }\n        }\n        return u;\n}\nint main() {\n    auto candidate =\
    \ unique;\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660132827
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n\tstd::vector<long>\
    \ u;\n\tstd::sort(l.begin(), l.end());\n\tfor(size_t i = 0; i < l.size(); ++i)\n\
    \t{\n\t\tu.push_back(l.at(i));\n\t}\n\treturn u;\n}\nint main() {\n    auto candidate\
    \ = unique;\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: Exception
  stderr: 'tmpwwosxlq0: /tmp/tmpwwosxlq0.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132827
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n  std::sort(l.begin(),\
    \ l.end());\n  std::vector<long> u;\n  for (long i : l)\n    if (std::find(u.begin(),\
    \ u.end(), i) == u.end())\n      u.push_back(i);\n  return u;\n}\nint main() {\n\
    \    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660132827
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n  std::sort(l.begin(),\
    \ l.end()); \n  std::vector<long> temp(std::unique(l.begin(), l.end()); \n  return\
    \ temp;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpnihxsv9a.cpp: In function \u2018std::vector<long int> unique(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpnihxsv9a.cpp:6:57: error: expected \u2018)\u2019 before\
    \ \u2018;\u2019 token\n    6 |   std::vector<long> temp(std::unique(l.begin(),\
    \ l.end());\n      |                         ~                               ^\n\
    \      |                                                         )\n"
  stdout: ''
  timestamp: 1660132827
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ u;\n    std::sort(l.begin(), l.end());\n    for (long i : l)\n        std::remove(u.begin(),\
    \ u.end(), i);\n    return u;\n}\nint main() {\n    auto candidate = unique;\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: Exception
  stderr: 'tmpft4_yld3: /tmp/tmpft4_yld3.cpp:13: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132827
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n        std::sort(l.begin(),\
    \ l.end());\n        std::vector<long> u;\n        for(auto x:l)\n        {\n\
    \            if(u.find(x) == u.end())\n            {\n                u.push_back(x);\n\
    \            }\n        }\n        return u;\n    }\n</code>\nI haven't tested\
    \ this code. Hope this helps. Happy coding!\n<|/ a |>\n<| c |>\nWhy not `std::set`?\
    \ `std::set` uses `std::less<>` by default which just compares addresses, not\
    \ contents of the vector. Besides, `std::set` doesn't return unique elements,\
    \ it sorts and returns the unique elements.\n<|/ c |>\n<| c |>\nstd::set has O(n\
    \ logn) complexity for its insert and erase operations, while std::vector has\
    \ O(n) complexity for its push_back and pop_back operations. Also std::set returns\
    \ unique elements, while std::vector does not. If you want to return unique elements,\
    \ you should use std::set. If you want to sort the elements then use std::vector.\
    \ IMO you should not mix these two requirements. Also, std::set does not sort\
    \ in place, you need to call std::set method 'set' to sort.\n<|/ c |>\n<| c |>\n\
    If you don't want the order to be preserved while performing the insertions, you\
    \ can use std::multiset. std::multiset has O(nlogn) insert and erase complexities\
    \ and O(n) complexity for its size, while std::vector has O(n) insert and erase\
    \ complexities and O(n) complexity for its size. Also,  std::multiset returns\
    \ the unique elements as well, while std::vector does not. If you want to return\
    \ unique elements, you should use std::multiset. If you want to sort the elements\
    \ then use std::vector. IMO you should not mix these two requirements.\n<|/ c\
    \ |>\n<| c |>\nYes, std::set is O(nlogn), std::multiset is O(nlogn) but if you\
    \ don't need the order to be preserved while performing insertions, std::multiset\
    \ is better than std::set as it has O(n) complexity for insert, erase and size\
    \ while std::vector has O(n) complexity for insert, erase and size.\n<|/ c |>\n\
    <| c |>\nAs for std::set, O(nlogn) complexity is better than O(n) complexity for\
    \ std::vector, that's why I mentioned that std::set has O(nlogn) complexity for\
    \ insert, erase and size. If you don't need the order to be preserved while performing\
    \ the insertions, std::set is better than std::vector because it has \n}\nint\
    \ main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpn6d9s2qr.cpp:17:8: warning: missing terminating ' character\n \
    \  17 | I haven't tested this code. Hope this helps. Happy coding!\n      |  \
    \      ^\n/tmp/tmpn6d9s2qr.cpp:17:8: error: missing terminating ' character\n\
    \   17 | I haven't tested this code. Hope this helps. Happy coding!\n      | \
    \       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpn6d9s2qr.cpp:20:9:\
    \ error: stray \u2018`\u2019 in program\n   20 | Why not `std::set`? `std::set`\
    \ uses `std::less<>` by default which just compares addresses, not contents of\
    \ the vector. Besides, `std::set` doesn't return unique elements, it sorts and\
    \ returns the unique elements.\n      |         ^\n/tmp/tmpn6d9s2qr.cpp:20:18:\
    \ error: stray \u2018`\u2019 in program\n   20 | Why not `std::set`? `std::set`\
    \ uses `std::less<>` by default which just compares addresses, not contents of\
    \ the vector. Besides, `std::set` doesn't return unique elements, it sorts and\
    \ returns the unique elements.\n      |                  ^\n/tmp/tmpn6d9s2qr.cpp:20:21:\
    \ error: stray \u2018`\u2019 in program\n   20 | Why not `std::set`? `std::set`\
    \ uses `std::less<>` by default which just compares addresses, not contents of\
    \ the vector. Besides, `std::set` doesn't return unique elements, it sorts and\
    \ returns the unique elements.\n      |                     ^\n/tmp/tmpn6d9s2qr.cpp:20:30:\
    \ error: stray \u2018`\u2019 in program\n   20 | Why not `std::set`? `std::set`\
    \ uses `std::less<>` by default which just compares addresses, not contents of\
    \ the vector. Besides, `std::set` doesn't return unique elements, it sorts and\
    \ returns the unique elements.\n      |                              ^\n/tmp/tmpn6d9s2qr.cpp:20:37:\
    \ error: stray \u2018`\u2019 in program\n   20 | Why not `std::set`? `std::set`\
    \ uses `std::less<>` by default which just compares addresses, not contents of\
    \ the vector. Besides, `std::set` doesn't return unique elements, it sorts and\
    \ returns the unique elements.\n      |                                     ^\n\
    /tmp/tmpn6d9s2qr.cpp:20:49: error: stray \u2018`\u2019 in program\n   20 | Why\
    \ not `std::set`? `std::set` uses `std::less<>` by defaul"
  stdout: ''
  timestamp: 1660132827
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n  std::vector<long>\
    \ u;\n  std::unordered_set<long> s(l.begin(), l.end());\n  for(auto x:l)\n   \
    \ if(s.find(x) == s.end()) u.push_back(x);\n  return u;\n}\nint main() {\n   \
    \ auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmpzcboi7bm: /tmp/tmpzcboi7bm.cpp:13: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132828
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ result(l);\n    std::sort(result.begin(), result.end());\n    result.erase(std::unique(result.begin(),\
    \ result.end()), result.end());\n    return result;\n}\nint main() {\n    auto\
    \ candidate = unique;\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660132827
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ u;\n    std::sort(l.begin(), l.end());\n    std::unique(&l[0], &l[0] + l.size());\n\
    \    for (std::size_t i = 0; i < l.size(); ++i) {\n        u.push_back(l[i]);\n\
    \    }\n    return u;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmpf8h5y2hk: /tmp/tmpf8h5y2hk.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132828
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    int n = l.size();\n\
    \    std::vector<long> u;\n    for(int i = 1; i < n; ++i)\n        for(int j =\
    \ i; j > 0; --j) if(l[j-1] > l[j]) {\n            long temp = l[j];\n        \
    \    l[j] = l[j-1];\n            l[j-1] = temp;\n        }\n    return l;\n}\n\
    int main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmpnb042hci: /tmp/tmpnb042hci.cpp:17: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132828
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    // Copy vector\
    \ to avoid altering original vector\n    std::vector<long> copy_l = l;\n    std::sort(copy_l.begin(),\
    \ copy_l.end());\n    std::vector<long> unique_el;\n    for(size_t i = 0; i <\
    \ copy_l.size(); ++i)\n    {\n        for(auto itr = copy_l.begin(); itr != copy_l.end();\
    \ ++itr)\n        {\n            if(itr != copy_l.begin() && *itr == *itr)\n \
    \           {\n                break;\n            }\n            else\n     \
    \       {\n                unique_el.push_back(*itr);\n            }\n       \
    \ }\n    }\n    return unique_el;\n}\nint main() {\n    auto candidate = unique;\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: Exception
  stderr: 'tmpbe4ek1ng: /tmp/tmpbe4ek1ng.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132828
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ u;\n    std::sort(l.begin(), l.end());\n    for(std::size_t i=0; i<l.size();\
    \ i++){\n        while((i<l.size() && l[i] == l[i-1])) i++;\n        u.push_back(l[i]);\n\
    \    }\n    return u;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660132828
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    auto it = std::unique(\
    \ l.begin(), l.end() );\n    return std::vector<long>(l.begin(), it);\n}\nint\
    \ main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmp4ynrn7j_: /tmp/tmp4ynrn7j_.cpp:10: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132828
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    // Sort the\
    \ list\n    std::sort(l.begin(), l.end());\n    // Unique elements are the ones\
    \ left in the sorted list\n    std::vector<long> result;\n    for (long x : l)\
    \ {\n        // If it is already in the unique list, ignore it\n        if (std::find(result.begin(),\
    \ result.end(), x) == result.end()) {\n            result.push_back(x);\n    \
    \    }\n    }\n    return result;\n}\nint main() {\n    auto candidate = unique;\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660132828
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ u;\n    std::sort(l.begin(), l.end());\n    for(long i=0; i<l.size(); i++){\n\
    \        while(u.size() <= l[i]){\n            u.push_back(l[i]);\n        }\n\
    \    }\n    return u;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmpxzu6u9lo: /tmp/tmpxzu6u9lo.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132828
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ u;\n    for(long i : l) u.push_back(i);\n    std::sort(u.begin(), u.end());\n\
    \    return u;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmpfo7cekka: /tmp/tmpfo7cekka.cpp:12: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132829
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n  std::sort(l.begin(),\
    \ l.end());\n  auto last = std::unique(l.begin(), l.end());\n  std::vector<long>\
    \ u(std::make_move_iterator(last), std::make_move_iterator(l.end()));\n  return\
    \ u;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmpiy2xc9sh: /tmp/tmpiy2xc9sh.cpp:12: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132828
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ u;\n    for (auto i : l) {\n        if (!u.empty() && i != u[u.size()-1]) u.push_back(i);\n\
    \    }\n    return u;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmpii7nmias: /tmp/tmpii7nmias.cpp:13: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132829
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n  std::vector<long>\
    \ u;\n  for (long i : l) {\n    auto it = std::find(u.begin(), u.end(), i);\n\
    \    if (it == u.end()) {\n      u.push_back(i);\n    }\n  }\n  return u;\n}\n\
    int main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmplo3jc7_a: /tmp/tmplo3jc7_a.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132829
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n  std::sort(l.begin(),\
    \ l.end());\n  auto it = std::unique(l.begin(), l.end()); \n  return std::vector<long>(l.begin(),\
    \ it);\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660132828
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::sort(l.begin(),\
    \ l.end());\n    l.erase(std::unique(l.begin(), l.end()), l.end());\n    return\
    \ l;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660132828
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    // Declare and\
    \ initialize a new vector\n    std::vector<long> v(l.size());\n    std::vector<bool>\
    \ v(v.size(), false); // Set all values to false\n\n    // Assign each element\
    \ to its position\n    for (int i = 0; i < l.size(); i++) {\n        if (v[i])\
    \ {\n            for (int j = i + 1; j < l.size(); j++) {\n                if\
    \ (l[i] == l[j]) {\n                    v.push_back(j);\n                }\n \
    \           }\n        } else {\n            v.push_back(i);\n        }\n    }\n\
    \n    return v;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp5838rkpo.cpp: In function \u2018std::vector<long int> unique(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp5838rkpo.cpp:7:23: error: conflicting declaration \u2018\
    std::vector<bool> v\u2019\n    7 |     std::vector<bool> v(v.size(), false); //\
    \ Set all values to false\n      |                       ^\n/tmp/tmp5838rkpo.cpp:6:23:\
    \ note: previous declaration as \u2018std::vector<long int> v\u2019\n    6 | \
    \    std::vector<long> v(l.size());\n      |                       ^\n"
  stdout: ''
  timestamp: 1660132829
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ uniquel;\n    std::sort(l.begin(), l.end());\n    uniquel.insert(uniquel.begin(),\
    \ l.begin(), l.end());\n    return uniquel;\n}\nint main() {\n    auto candidate\
    \ = unique;\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: Exception
  stderr: 'tmpadff4zbh: /tmp/tmpadff4zbh.cpp:12: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132829
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ u;\n    std::set<long> s(l.begin(), l.end());\n    for(auto i : l)\n       \
    \ u.push_back(i);\n    for(auto i : s)\n        u.erase(i);\n    return u;\n}\n\
    int main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp4l6tqejt.cpp: In function \u2018std::vector<long int> unique(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp4l6tqejt.cpp:10:18: error: no matching function for call\
    \ to \u2018std::vector<long int>::erase(long int&)\u2019\n   10 |         u.erase(i);\n\
    \      |                  ^\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp4l6tqejt.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:1427:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp,\
    \ _Alloc>::const_iterator) [with _Tp = long int; _Alloc = std::allocator<long\
    \ int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<long\
    \ int*, std::vector<long int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer\
    \ = long int*; std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const\
    \ long int*, std::vector<long int> >; typename __gnu_cxx::__alloc_traits<typename\
    \ std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type>::const_pointer = const long\
    \ int*]\u2019\n 1427 |       erase(const_iterator __position)\n      |       ^~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:1427:28: note:   no known conversion for\
    \ argument 1 from \u2018long int\u2019 to \u2018std::vector<long int>::const_iterator\u2019\
    \ {aka \u2018__gnu_cxx::__normal_iterator<const long int*, std::vector<long int>\
    \ >\u2019}\n 1427 |       erase(const_iterator __position)\n      |          \
    \   ~~~~~~~~~~~~~~~^~~~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1454:7: note:\
    \ candidate: \u2018std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp,\
    \ _Alloc>::const_iterator, std::vector<_Tp, _Alloc>::const_iterator) [with _Tp\
    \ = long int; _Alloc = std::allocator<long int>; std::vector<_Tp, _Alloc>::iterator\
    \ = __gnu_cxx::__normal_iterator<long int*, std::vector<long int> >; typename\
    \ std::_Vec"
  stdout: ''
  timestamp: 1660132828
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n\tstd::sort(l.begin(),\
    \ l.end());\n\tstd::vector<long> u;\n\tfor(long i=0; i<l.size(); ++i)\n\t\tif(l.at(i)\
    \ != i) u.push_back(l[i]);\n\treturn u;\n}\nint main() {\n    auto candidate =\
    \ unique;\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: Exception
  stderr: 'tmprqg0xore: /tmp/tmprqg0xore.cpp:13: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132829
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n  std::sort(l.begin(),\
    \ l.end());\n  std::vector<long> ret;\n  for(auto it = l.begin(); it != l.end();\
    \ ++it) {\n    if(ret.find(*it) == ret.end()) ret.push_back(*it);\n  }\n  return\
    \ ret;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpvj858ag0.cpp: In function \u2018std::vector<long int> unique(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpvj858ag0.cpp:8:12: error: \u2018class std::vector<long\
    \ int>\u2019 has no member named \u2018find\u2019\n    8 |     if(ret.find(*it)\
    \ == ret.end()) ret.push_back(*it);\n      |            ^~~~\n"
  stdout: ''
  timestamp: 1660132829
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n  std::sort(l.begin(),\
    \ l.end());\n  std::vector<long> u;\n  std::size_t i = 0;\n  for (std::size_t\
    \ j = 1; j < l.size(); ++j) {\n    if (l[j] == l[i - 1]) {\n      u.push_back(l[j]);\n\
    \      ++i;\n    }\n  }\n  return u;\n}\nint main() {\n    auto candidate = unique;\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: Exception
  stderr: 'tmp0h1j2s9r: /tmp/tmp0h1j2s9r.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132829
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    auto it = std::unique(l.begin(),\
    \ l.end());\n    return std::vector<long>(it, l.end());\n}\nint main() {\n   \
    \ auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmp_l2w0k5g: /tmp/tmp_l2w0k5g.cpp:10: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132829
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    if (l.size()\
    \ == 0)\n        return l;\n    std::vector<long> res(l.size());\n    std::sort(l.begin(),\
    \ l.end());\n    for (auto e : l)\n        std::find(res.begin(), res.end(), e)\
    \ == res.end() ? res.push_back(e) : ;\n    return res;\n}\nint main() {\n    auto\
    \ candidate = unique;\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpehfjnw1e.cpp: In function \u2018std::vector<long int> unique(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpehfjnw1e.cpp:10:80: error: expected primary-expression\
    \ before \u2018;\u2019 token\n   10 |         std::find(res.begin(), res.end(),\
    \ e) == res.end() ? res.push_back(e) : ;\n      |                            \
    \                                                    ^\n"
  stdout: ''
  timestamp: 1660132829
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ u;\n    for(long i:l)\n    {\n        for(long j=u.size()-1;j>=0;--j)\n    \
    \    {\n            if(u[j] == i)\n                u.erase(u.begin() + j);\n \
    \       }\n        u.push_back(i);\n    }\n    return u;\n}\nint main() {\n  \
    \  auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmp2f6ykoye: /tmp/tmp2f6ykoye.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132829
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ u;\n    std::set_difference(l.begin(), l.end(), std::begin(u), std::end(u),\n\
    \        [](long a, long b){ return a==b; });\n    return u;\n}\nint main() {\n\
    \    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/algorithm:62,\n              \
    \   from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n             \
    \    from /tmp/tmpzqoao4wn.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h: In instantiation\
    \ of \u2018_OutputIterator std::__set_difference(_InputIterator1, _InputIterator1,\
    \ _InputIterator2, _InputIterator2, _OutputIterator, _Compare) [with _InputIterator1\
    \ = __gnu_cxx::__normal_iterator<long int*, std::vector<long int> >; _InputIterator2\
    \ = __gnu_cxx::__normal_iterator<long int*, std::vector<long int> >; _OutputIterator\
    \ = unique(std::vector<long int>)::<lambda(long int, long int)>; _Compare = __gnu_cxx::__ops::_Iter_less_iter]\u2019\
    :\n/usr/include/c++/9/bits/stl_algo.h:5435:46:   required from \u2018_OIter std::set_difference(_IIter1,\
    \ _IIter1, _IIter2, _IIter2, _OIter) [with _IIter1 = __gnu_cxx::__normal_iterator<long\
    \ int*, std::vector<long int> >; _IIter2 = __gnu_cxx::__normal_iterator<long int*,\
    \ std::vector<long int> >; _OIter = unique(std::vector<long int>)::<lambda(long\
    \ int, long int)>]\u2019\n/tmp/tmpzqoao4wn.cpp:7:43:   required from here\n/usr/include/c++/9/bits/stl_algo.h:5378:16:\
    \ error: assignment of read-only location \u2018* __result.unique(std::vector<long\
    \ int>)::<lambda(long int, long int)>::operator bool (*)(long int, long int)()\u2019\
    \n 5378 |      *__result = *__first1;\n      |      ~~~~~~~~~~^~~~~~~~~~~\n/usr/include/c++/9/bits/stl_algo.h:5380:6:\
    \ error: no match for \u2018operator++\u2019 (operand type is \u2018unique(std::vector<long\
    \ int>)::<lambda(long int, long int)>\u2019)\n 5380 |      ++__result;\n     \
    \ |      ^~~~~~~~~~\nIn file included from /usr/include/c++/9/bits/specfun.h:45,\n\
    \                 from /usr/include/c++/9/cmath:1927,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmpzqoao4wn.cpp:2:\n/usr/include/c++/9/bits/stl_algobase.h:465:5:\
    \ error: \u2018_OI std::copy(_II, _II, _OI) [with _II = __gnu_cxx::__normal_iterator<long\
    \ int*, std::vector<long int> >; _OI = unique(std::vector<long int>)::<lambda(long\
    \ int, long int)>]\u2019, declared usin"
  stdout: ''
  timestamp: 1660132829
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ res;\n    for(auto x : l) {\n        int flag=true;\n        for(auto y : res)\n\
    \            if(x == y) {\n                flag = false;\n                break;\n\
    \            }\n        if(flag)\n            res.push_back(x);\n    }\n    return\
    \ res;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmp11js6c40: /tmp/tmp11js6c40.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132830
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ u;\n    std::sort(l.begin(), l.end());\n    std::unique_copy(l.begin(), l.end(),\
    \ std::back_inserter(u));\n    return u;\n}\nint main() {\n    auto candidate\
    \ = unique;\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660132742
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ u;\n    std::sort(l.begin(), l.end());\n    for (auto i : l)\n        u.push_back(i);\n\
    \    return u;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmpzvy7fd5f: /tmp/tmpzvy7fd5f.cpp:13: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132830
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ v;\n    std::sort(l.begin(), l.end());\n    for(std::size_t i = 1; i < l.size();\
    \ ++i){\n        if(l[i] != l[i-1]) v.push_back(l[i]);\n    }\n    return v;\n\
    }\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmpgpeo84ox: /tmp/tmpgpeo84ox.cpp:14: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132830
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ u;\n    for (auto e : l) {\n        auto it = std::find(u.begin(), u.end(),\
    \ e);\n        if (it == u.end()) {\n            u.push_back(e);\n        }\n\
    \    }\n    return u;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmpj1b0_l4x: /tmp/tmpj1b0_l4x.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132830
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ u;\n    std::sort(l.begin(), l.end());\n    std::adjacent_find(l.begin(), l.end(),\
    \ [&](long a, long b) { return a < b; });\n    std::sort(l.begin(), l.end());\n\
    \    std::unique_copy(l.begin(), l.end(), std::back_inserter(u));\n    return\
    \ u;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660132829
- exit_code: -11
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ u;\n    std::sort(l.begin(), l.end());\n    for(long k = 0; k < l.size(); ++k)\
    \ {\n        if(u[l.begin()[k]] != k) {\n            u.push_back(l[k]);\n    \
    \    }\n    }\n    return u;\n}\nint main() {\n    auto candidate = unique;\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660132830
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n  // Create a vector\
    \ to hold unique elements\n  std::vector<long> u;\n  // Iterate through every\
    \ element and add it to the vector\n  for (long &element : l) {\n    // If element\
    \ isn't in vector, add it\n    if (std::find(u.begin(), u.end(), element) == u.end())\
    \ {\n      u.push_back(element);\n    }\n  }\n  return u;\n}\nint main() {\n \
    \   auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmpdfghau9w: /tmp/tmpdfghau9w.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132830
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n  std::sort(l.begin(),\
    \ l.end());\n  std::vector<long> u;\n  std::set_difference(l.begin(), l.end(),\
    \ std::back_inserter(u),\n                      [](long a, long b) { return a\
    \ == b; });\n  return u;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpdqrx_17z.cpp: In function \u2018std::vector<long int> unique(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpdqrx_17z.cpp:8:60: error: no matching function for call\
    \ to \u2018set_difference(std::vector<long int>::iterator, std::vector<long int>::iterator,\
    \ std::back_insert_iterator<std::vector<long int> >, unique(std::vector<long int>)::<lambda(long\
    \ int, long int)>)\u2019\n    8 |                       [](long a, long b) { return\
    \ a == b; });\n      |                                                       \
    \     ^\nIn file included from /usr/include/c++/9/algorithm:62,\n            \
    \     from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n           \
    \      from /tmp/tmpdqrx_17z.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:5415:5:\
    \ note: candidate: \u2018template<class _IIter1, class _IIter2, class _OIter>\
    \ _OIter std::set_difference(_IIter1, _IIter1, _IIter2, _IIter2, _OIter)\u2019\
    \n 5415 |     set_difference(_InputIterator1 __first1, _InputIterator1 __last1,\n\
    \      |     ^~~~~~~~~~~~~~\n/usr/include/c++/9/bits/stl_algo.h:5415:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpdqrx_17z.cpp:8:60:\
    \ note:   deduced conflicting types for parameter \u2018_IIter2\u2019 (\u2018\
    std::back_insert_iterator<std::vector<long int> >\u2019 and \u2018unique(std::vector<long\
    \ int>)::<lambda(long int, long int)>\u2019)\n    8 |                       [](long\
    \ a, long b) { return a == b; });\n      |                                   \
    \                         ^\nIn file included from /usr/include/c++/9/algorithm:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpdqrx_17z.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:5466:5:\
    \ note: candidate: \u2018template<class _IIter1, class _IIter2, class _OIter,\
    \ class _Compare> _OIter std::set_difference(_IIter1, _IIter1, _IIter2, _IIter2,\
    \ _OIter, _Compare)\u2019\n 5466 |     set_difference(_InputIterator1 __first1,\
    \ _InputIterator1 __last1,\n      |     ^~~~~~~~~~~~~~\n/usr/include/c++/9/bits/stl_algo.h:5466:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpdqrx_17z.cpp:8:6"
  stdout: ''
  timestamp: 1660132830
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ u;\n    std::sort(l.begin(),l.end());\n    for(long i=0;i<l.size();i++) {\n\
    \        u.push_back(l.at(i));\n    }\n    return u;\n}\nint main() {\n    auto\
    \ candidate = unique;\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: Exception
  stderr: 'tmp_6nuz5al: /tmp/tmp_6nuz5al.cpp:14: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132830
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ result;\n    std::sort(l.begin(), l.end());\n    std::unique(l.begin(), l.end(),\
    \ std::back_inserter(result));\n    return result;\n}\nint main() {\n    auto\
    \ candidate = unique;\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/bits/stl_algobase.h:71,\n    \
    \             from /usr/include/c++/9/bits/specfun.h:45,\n                 from\
    \ /usr/include/c++/9/cmath:1927,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmpplmhxtvi.cpp:2:\n/usr/include/c++/9/bits/predefined_ops.h:\
    \ In instantiation of \u2018constexpr bool __gnu_cxx::__ops::_Iter_comp_iter<_Compare>::operator()(_Iterator1,\
    \ _Iterator2) [with _Iterator1 = __gnu_cxx::__normal_iterator<long int*, std::vector<long\
    \ int> >; _Iterator2 = __gnu_cxx::__normal_iterator<long int*, std::vector<long\
    \ int> >; _Compare = std::back_insert_iterator<std::vector<long int> >]\u2019\
    :\n/usr/include/c++/9/bits/stl_algo.h:980:20:   required from \u2018_ForwardIterator\
    \ std::__unique(_ForwardIterator, _ForwardIterator, _BinaryPredicate) [with _ForwardIterator\
    \ = __gnu_cxx::__normal_iterator<long int*, std::vector<long int> >; _BinaryPredicate\
    \ = __gnu_cxx::__ops::_Iter_comp_iter<std::back_insert_iterator<std::vector<long\
    \ int> > >]\u2019\n/usr/include/c++/9/bits/stl_algo.h:1042:27:   required from\
    \ \u2018_FIter std::unique(_FIter, _FIter, _BinaryPredicate) [with _FIter = __gnu_cxx::__normal_iterator<long\
    \ int*, std::vector<long int> >; _BinaryPredicate = std::back_insert_iterator<std::vector<long\
    \ int> >]\u2019\n/tmp/tmpplmhxtvi.cpp:7:63:   required from here\n/usr/include/c++/9/bits/predefined_ops.h:143:18:\
    \ error: no match for call to \u2018(std::back_insert_iterator<std::vector<long\
    \ int> >) (long int&, long int&)\u2019\n  143 |         { return bool(_M_comp(*__it1,\
    \ *__it2)); }\n      |                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660132829
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    // Sort the\
    \ list in descending order and take unique values\n    std::sort(l.begin(), l.end(),\
    \ std::greater<>());\n    auto it = std::unique(l.begin(), l.end());\n    l.erase(it,\
    \ l.end());\n    return l;\n}\nint main() {\n    auto candidate = unique;\n  \
    \  assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2, (long)3,\
    \ (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0, (long)2,\
    \ (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: Exception
  stderr: 'tmpephhbfvz: /tmp/tmpephhbfvz.cpp:13: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132830
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::sort(l.begin(),\
    \ l.end());\n    l.erase(std::unique(l.begin(), l.end()), l.end()); // This line\
    \ will remove duplicates\n    return l;\n}\nint main() {\n    auto candidate =\
    \ unique;\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660132830
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::sort(l.begin(),\
    \ l.end());\n    std::vector<long> u(std::unique(l.begin(), l.end()) ,l.end());\n\
    \    return u;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmpngke6b0n: /tmp/tmpngke6b0n.cpp:11: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132830
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n\tstd::sort(l.begin(),l.end());\n\
    \tstd::vector<long> u;\n\tstd::set_difference(l.begin(),l.end(),u.begin(),u.end(),std::less<>());\n\
    \treturn u;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/algorithm:62,\n              \
    \   from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n             \
    \    from /tmp/tmp4ihvak3i.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h: In instantiation\
    \ of \u2018_OutputIterator std::__set_difference(_InputIterator1, _InputIterator1,\
    \ _InputIterator2, _InputIterator2, _OutputIterator, _Compare) [with _InputIterator1\
    \ = __gnu_cxx::__normal_iterator<long int*, std::vector<long int> >; _InputIterator2\
    \ = __gnu_cxx::__normal_iterator<long int*, std::vector<long int> >; _OutputIterator\
    \ = std::less<void>; _Compare = __gnu_cxx::__ops::_Iter_less_iter]\u2019:\n/usr/include/c++/9/bits/stl_algo.h:5435:46:\
    \   required from \u2018_OIter std::set_difference(_IIter1, _IIter1, _IIter2,\
    \ _IIter2, _OIter) [with _IIter1 = __gnu_cxx::__normal_iterator<long int*, std::vector<long\
    \ int> >; _IIter2 = __gnu_cxx::__normal_iterator<long int*, std::vector<long int>\
    \ >; _OIter = std::less<void>]\u2019\n/tmp/tmp4ihvak3i.cpp:7:71:   required from\
    \ here\n/usr/include/c++/9/bits/stl_algo.h:5378:6: error: no match for \u2018\
    operator*\u2019 (operand type is \u2018std::less<void>\u2019)\n 5378 |      *__result\
    \ = *__first1;\n      |      ^~~~~~~~~\nIn file included from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp4ihvak3i.cpp:2:\n/usr/include/c++/9/complex:391:5:\
    \ note: candidate: \u2018template<class _Tp> std::complex<_Tp> std::operator*(const\
    \ std::complex<_Tp>&, const std::complex<_Tp>&)\u2019\n  391 |     operator*(const\
    \ complex<_Tp>& __x, const complex<_Tp>& __y)\n      |     ^~~~~~~~\n/usr/include/c++/9/complex:391:5:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/9/algorithm:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp4ihvak3i.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:5378:6:\
    \ note:   \u2018std::less<void>\u2019 is not derived from \u2018const std::complex<_Tp>\u2019\
    \n 5378 |      *__result = *__first1;\n      |      ^~~~~~"
  stdout: ''
  timestamp: 1660132830
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::sort(l.begin(),\
    \ l.end());\n    std::vector<long> uniq(l.size());\n    std::vector<long>::iterator\
    \ it;\n    for (it = l.begin(); it != l.end(); ++it) {\n        if (*it != *(l.begin()\
    \ + 1)) uniq.push_back(*it);\n    }\n    return uniq;\n}\nint main() {\n    auto\
    \ candidate = unique;\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: Exception
  stderr: 'tmp5fybyygm: /tmp/tmp5fybyygm.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132830
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ u;\n    std::vector<long> t(l);\n    std::sort(t.begin(), t.end());\n    for\
    \ (long i = 0; i < t.size(); ++i)\n        if (t[i] != i)\n            u.push_back(t[i]);\n\
    \    return u;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmpbk0f5etv: /tmp/tmpbk0f5etv.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132830
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ u;\n    std::vector<long> v(l.size());\n    std::iota(v.begin(), v.end(), 0);\n\
    \    std::sort(v.begin(), v.end(), [&](long a, long b) { return l.at(a) < l.at(b);\
    \ });\n    for (size_t i = 0; i < v.size(); ++i)\n        u.push_back(l.at(v[i]));\n\
    \    return u;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmpwaxwkuxi: /tmp/tmpwaxwkuxi.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132830
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ u;\n    for (long i : l)\n        if (!u.empty() &&\n            std::find(u.begin(),\
    \ u.end(), i) == u.end())\n            u.push_back(i);\n    return u;\n}\nint\
    \ main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmpzxlw6yc2: /tmp/tmpzxlw6yc2.cpp:14: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132830
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n  std::vector<long>\
    \ u;\n  for (long i : l) {\n    if (u.find(i) == u.end())\n      u.push_back(i);\n\
    \  }\n  return u;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgxi6u265.cpp: In function \u2018std::vector<long int> unique(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpgxi6u265.cpp:7:11: error: \u2018class std::vector<long\
    \ int>\u2019 has no member named \u2018find\u2019\n    7 |     if (u.find(i) ==\
    \ u.end())\n      |           ^~~~\n"
  stdout: ''
  timestamp: 1660132830
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n  sort(l.begin(),\
    \ l.end());\n  std::vector<long> ret;\n  for (int i = 0; i < l.size() - 1; i++)\
    \ {\n    if (l[i] == l[i + 1]) {\n      ret.push_back(l[i]);\n    }\n  }\n  return\
    \ ret;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmp6fw3h18w: /tmp/tmp6fw3h18w.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132830
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    // Sort the\
    \ input list \n    std::sort(l.begin(), l.end());\n    // Remove duplicates\n\
    \    std::set<long> s(l.begin(), l.end()); \n    // Return a copy of the input\
    \ list with the duplicates removed\n    return std::vector<long>(s.begin(), s.end());\n\
    }\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660132830
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ u;\n    for(size_t i = 1; i < l.size(); i++)\n    {\n        bool found = false;\n\
    \        for(size_t j = 0; j < u.size(); j++)\n        {\n            if(l[i]\
    \ == u[j])\n            {\n                found = true;\n                break;\n\
    \            }\n        }\n        if(!found)\n            u.push_back(l[i]);\n\
    \    }\n    return u;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmpy4xz0ia1: /tmp/tmpy4xz0ia1.cpp:24: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132830
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    long last =\
    \ 0, *cur = &l[0], *end = &l[l.size()];\n    std::sort(cur, end, [](long l, long\
    \ r) { return l < r; });\n    std::vector<long> u;\n    for(; cur != end; ++cur)\
    \ {\n        if(*cur != last) u.push_back(*cur);\n        last = *cur;\n    }\n\
    \    return u;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmp165pbsl4: /tmp/tmp165pbsl4.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132831
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    // sort ascending\n\
    \    l.sort();\n    // get iterator\n    auto it = l.begin();\n    // store unique\
    \ elements\n    std::vector<long> u;\n    while (it != l.end()) {\n        //\
    \ if found unique element\n        if (*it == *it) {\n            // skip it\n\
    \            ++it;\n            continue;\n        }\n        // else found a\
    \ new unique element\n        u.push_back(*it);\n        // skip it\n        ++it;\n\
    \    }\n    return u;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpitfr_azr.cpp: In function \u2018std::vector<long int> unique(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpitfr_azr.cpp:6:7: error: \u2018class std::vector<long\
    \ int>\u2019 has no member named \u2018sort\u2019\n    6 |     l.sort();\n   \
    \   |       ^~~~\n"
  stdout: ''
  timestamp: 1660132830
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n  std::vector<long>\
    \ u;\n  std::sort(l.begin(), l.end());\n  for (long i = 1; i < l.size(); ++i)\
    \ {\n    if (l[i] == l[i - 1]) {\n      u.push_back(l[i]);\n      l.erase(l.begin()\
    \ + i);\n    }\n  }\n  return u;\n}\nint main() {\n    auto candidate = unique;\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: Exception
  stderr: 'tmpjisdhi5x: /tmp/tmpjisdhi5x.cpp:17: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132831
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    // Create a\
    \ sorted vector\n    std::vector<long> v(*(l.begin()), *(l.end()));\n    std::sort(v.begin(),\
    \ v.end()); \n    return v; \n}\nint main() {\n    auto candidate = unique;\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: Exception
  stderr: 'tmp2ecize_d: /tmp/tmp2ecize_d.cpp:12: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132831
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n  std::vector<long>\
    \ u;\n  std::sort(std::begin(l), std::end(l));\n  std::adjacent_find(std::begin(l),\
    \ std::end(l), std::back_inserter(u));\n  return u;\n}\nint main() {\n    auto\
    \ candidate = unique;\n    assert(candidate((std::vector<long>({(long)5, (long)3,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/bits/stl_algobase.h:71,\n    \
    \             from /usr/include/c++/9/bits/specfun.h:45,\n                 from\
    \ /usr/include/c++/9/cmath:1927,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmph0wql30f.cpp:2:\n/usr/include/c++/9/bits/predefined_ops.h:\
    \ In instantiation of \u2018constexpr bool __gnu_cxx::__ops::_Iter_comp_iter<_Compare>::operator()(_Iterator1,\
    \ _Iterator2) [with _Iterator1 = __gnu_cxx::__normal_iterator<long int*, std::vector<long\
    \ int> >; _Iterator2 = __gnu_cxx::__normal_iterator<long int*, std::vector<long\
    \ int> >; _Compare = std::back_insert_iterator<std::vector<long int> >]\u2019\
    :\n/usr/include/c++/9/bits/stl_algo.h:959:21:   required from \u2018_ForwardIterator\
    \ std::__adjacent_find(_ForwardIterator, _ForwardIterator, _BinaryPredicate) [with\
    \ _ForwardIterator = __gnu_cxx::__normal_iterator<long int*, std::vector<long\
    \ int> >; _BinaryPredicate = __gnu_cxx::__ops::_Iter_comp_iter<std::back_insert_iterator<std::vector<long\
    \ int> > >]\u2019\n/usr/include/c++/9/bits/stl_algo.h:4098:34:   required from\
    \ \u2018_FIter std::adjacent_find(_FIter, _FIter, _BinaryPredicate) [with _FIter\
    \ = __gnu_cxx::__normal_iterator<long int*, std::vector<long int> >; _BinaryPredicate\
    \ = std::back_insert_iterator<std::vector<long int> >]\u2019\n/tmp/tmph0wql30f.cpp:7:71:\
    \   required from here\n/usr/include/c++/9/bits/predefined_ops.h:143:18: error:\
    \ no match for call to \u2018(std::back_insert_iterator<std::vector<long int>\
    \ >) (long int&, long int&)\u2019\n  143 |         { return bool(_M_comp(*__it1,\
    \ *__it2)); }\n      |                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660132830
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n  std::sort(l.begin(),l.end());\n\
    \  std::vector<long> uniques;\n  for(auto it = l.begin(); it != l.end(); it++)\n\
    \    if(*it != l.front()) uniques.push_back(*it);\n  return uniques;\n}\nint main()\
    \ {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmpr18vct50: /tmp/tmpr18vct50.cpp:13: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132831
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ u(std::begin(l), std::end(l));\n    std::sort(std::begin(u), std::end(u));\n\
    \    return u;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmpw06xilex: /tmp/tmpw06xilex.cpp:11: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132831
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    // Return sorted\
    \ unique elements in a list\n    // Time complexity : O(NlogN) where N is length\
    \ of list\n    std::sort(l.begin(), l.end());\n    return l;\n}\nint main() {\n\
    \    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmpix9ne6gd: /tmp/tmpix9ne6gd.cpp:12: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132831
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ u;\n    std::sort(l.begin(), l.end());\n    for(long x : l)\n        u.push_back(x);\n\
    \    return u;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmp17_ywjrx: /tmp/tmp17_ywjrx.cpp:13: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132831
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ ans;\n    std::sort(l.begin(), l.end());\n    for(int i = 0; i < l.size(); i++)\
    \ {\n        bool found = false;\n        for(int j=0; j < ans.size(); j++) {\n\
    \            if(l[i] == ans[j]) {\n                found = true;\n           \
    \     break;\n            }\n        }\n        if(!found) {\n            ans.push_back(l[i]);\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = unique;\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660132831
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n  long n=l.size();\n\
    \  std::vector<long> ans;\n  for (int i=0; i<n; ++i) {\n      bool found = false;\n\
    \      for (int j=0; j<n; ++j) {\n        if (l[i] == l[j])\n          found =\
    \ true;\n      }\n      if (!found)\n        ans.push_back(l[i]);\n  }\n  return\
    \ ans;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmpiq4jsogx: /tmp/tmpiq4jsogx.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132831
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    sort(l.begin(),\
    \ l.end());\n    std::vector<long> u;\n    for(auto i : l)\n        u.push_back(i);\n\
    \    return u;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmprlhsgbhh: /tmp/tmprlhsgbhh.cpp:13: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132831
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n  std::vector<long>\
    \ u;\n  std::sort(l.begin(), l.end());\n  for(long i=l.size()-1;i>0;i--){\n  \
    \  if(l[i]!=l[i-1]){\n      u.push_back(l[i]);\n    }\n  }\n  return u;\n}\nint\
    \ main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmpnzm3dbwk: /tmp/tmpnzm3dbwk.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132831
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    long last =\
    \ std::unique(l.begin(), l.end()) - l.begin();\n    l.erase(l.begin() + last,\
    \ l.end());\n    return l;\n}\nint main() {\n    auto candidate = unique;\n  \
    \  assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2, (long)3,\
    \ (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0, (long)2,\
    \ (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: Exception
  stderr: 'tmpn2oagf2z: /tmp/tmpn2oagf2z.cpp:11: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132831
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n  std::sort(l.begin(),\
    \ l.end());\n  std::vector<long> ret;\n  for (auto i = l.begin(); i != l.end();\
    \ ++i) {\n    auto j = std::find(ret.begin(), ret.end(), *i);\n    if (j == ret.end())\
    \ {\n      ret.push_back(*i);\n    }\n  }\n  return ret;\n}\nint main() {\n  \
    \  auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660132831
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ u;\n    std::sort(l.begin(), l.end());\n    for(auto i : l)\n        u.push_back(i);\n\
    \    return u;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: Exception
  stderr: 'tmpjpi9vp58: /tmp/tmpjpi9vp58.cpp:13: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) ==
    (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123}))''
    failed.

    '
  stdout: ''
  timestamp: 1660132742
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\nstd::vector<long> unique(std::vector<long> l) {\n    std::vector<long>\
    \ u;\n    for(auto i : l) std::find(u.begin(), u.end(), i) == u.end() ? u.push_back(i)\
    \ : std::cout << i << '\\n';\n    return u;\n}\nint main() {\n    auto candidate\
    \ = unique;\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpae1mprhu.cpp: In function \u2018std::vector<long int> unique(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpae1mprhu.cpp:6:99: error: second operand to the conditional\
    \ operator is of type \u2018void\u2019, but the third operand is neither a throw-expression\
    \ nor of type \u2018void\u2019\n    6 |     for(auto i : l) std::find(u.begin(),\
    \ u.end(), i) == u.end() ? u.push_back(i) : std::cout << i << '\\n';\n      |\
    \                                                                            \
    \        ~~~~~~~~~~~~~~~^~~~~~~\n"
  stdout: ''
  timestamp: 1660132830

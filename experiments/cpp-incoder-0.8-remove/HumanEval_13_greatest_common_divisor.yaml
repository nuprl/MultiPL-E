name: HumanEval_13_greatest_common_divisor
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
  \ divisor of two integers a and b\nlong greatest_common_divisor(long a, long b)\
  \ {\n"
tests: "}\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
  \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
  \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
completions: ["    long temp = a;\n    while (temp != 0) {\n        long long div\
    \ = temp % b;\n        temp = div;\n        if (temp == 0)\n            return\
    \ b;\n        b--;\n    }\n    return a;", "    while (b != 0) {\n        long\
    \ t = b;\n        b = a % b;\n        a = t;\n    }\n    return a;", "    assert(b\
    \ > 0);\n    if (a == 0)\n        return b;\n    else if (b == 0)\n        return\
    \ a;\n    else {\n        // Euclid algorithm\n        long temp;\n        long\
    \ x = a % b;\n        temp = a;\n        while (temp != 0) {\n            temp\
    \ = temp % b;\n            x = (x * b) % temp;\n        }\n        return x;\n\
    \    }", "    while (b != 0) {\n        long temp = b;\n        b = a % b;\n \
    \       a = temp;\n    }\n    return a;", "\tif (b == 0)\n\t\treturn a;\n\tlong\
    \ c = greatest_common_divisor(b, a % b);\n\treturn (a / c) * c;", '    return
    b == 0 ? a : greatest_common_divisor(b, a%b);', "    long gcd = 0;\n    while\
    \ (b > 0) {\n        long t = b / a;\n        if (t != 0)\n            gcd = t;\n\
    \        a = b;\n        b = t;\n    }\n    return gcd;", "  if(b==0) return a;\n\
    \  if(a==0) return b;\n  return greatest_common_divisor(b, a % b);", "    if (b\
    \ == 0) return a;\n    return greatest_common_divisor(b, a % b);", "    // Initialize\
    \ greatest common divisor and remainder variables\n    long greatest = 0;\n  \
    \  long remainder = 0;\n    \n    // Check if a > b\n    if (a > b) {\n      \
    \  long temp = a;\n        a = b;\n        b = temp;\n    }\n    \n    // If a\
    \ = 0, then greatest_common_divisor is 1 and remainder is 0\n    if (a == 0) {\n\
    \        greatest = 1;\n        remainder = 0;\n        return greatest;\n   \
    \ }\n    \n    // Get greatest common divisor of b and a\n    while (a % b !=\
    \ 0) {\n        a = b;\n        b = a % b;\n    }\n    \n    // Get remainder\n\
    \    remainder = a;\n    a = b;\n    \n    // Update greatest_common_divisor and\
    \ remainder\n    while (a > 0) {\n        greatest++;\n        a /= b;\n    }\n\
    \    \n    // Update greatest_common_divisor\n    greatest %= 2;\n    \n    //\
    \ Update remainder\n    if (greatest == 1) {\n        remainder = 0;\n    } else\
    \ {\n        remainder = 1;\n    }\n    \n    return greatest;", "  assert(a !=\
    \ 0 && b != 0);\n  while (b) {\n    long long div = a / b;\n    a = b;\n    b\
    \ = div;\n  }\n  return a;", "    long n = (a >= b) ? a : b;\n    long d = 1;\n\
    \    while (d <= n) {\n        if (n % d == 0) {\n            n = n / d;\n   \
    \     }\n        else {\n            d = d / 2;\n        }\n    }\n    return\
    \ d;", "    // Compute the GCD of 'a' and 'b'\n    long c = a % b;\n    while(\
    \ b != 0 ) {\n        c = b%a;\n        a = b;\n        b = c;\n    }\n    return\
    \ a;", "\tif (a == 0)\n\t\treturn b;\n\tif (b == 0)\n\t\treturn a;\n\tif (a >\
    \ b)\n\t\tstd::swap(a, b);\n\tint d = 1;\n\twhile (b != 0) {\n\t\tlong r = a %\
    \ b;\n\t\ta = b;\n\t\tb = r;\n\t\td++;\n\t}\n\treturn d;", "    long temp;\n \
    \   while (b > 0) {\n        temp = a;\n        a = b;\n        b = temp % b;\n\
    \    }\n    return a;", '    return b == 0 ? a : greatest_common_divisor(b, a
    % b);', "  // Find greatest common divisor\n  while (b > 0) {\n    long r = a\
    \ % b;\n    a = b;\n    b = r;\n  }\n  return a;", "    long d = 0;\n    while(a\
    \ && b)\n    {\n        if(a > b)\n        {\n            a %= b;\n          \
    \  b %= a;\n            ++d;\n            a /= b;\n        }\n        else\n \
    \       {\n            b %= a;\n            a /= b;\n            ++d;\n      \
    \      b /= a;\n        }\n    }\n    return d;", "    if (b == 0)\n        return\
    \ a;\n    return greatest_common_divisor(b, a % b);", "    long gcd = a;\n   \
    \ for (long i = 1; ; ++i) {\n        long temp = a;\n        a = b;\n        b\
    \ = temp;\n        if (a < b) gcd = b;\n        else break;\n    }\n    return\
    \ gcd;", "    int max_div = std::max(std::abs(a), std::abs(b));\n    for (int\
    \ i = 1; i <= max_div; i++) {\n        if ((a % i == 0) || (b % i == 0))\n   \
    \         return i;\n    }\n    return 0;", "    long gcd;\n    while (b > 0)\
    \ {\n        gcd = b; b = a % b;\n        a = gcd;\n    }\n    return a;", " \
    \   long lcm = (long)(a*b) / greatest_common_divisor(a, b + 1);\n    return lcm;",
  "    long r = a % b;\n    for (long i = b; i != 0; --i) {\n        if (r % i ==\
    \ 0)\n            r = i / r;\n    }\n    return r;", "    long remainder = a %\
    \ b;\n    while (b != 0) {\n        long temp = b;\n        b = remainder % b;\n\
    \        remainder = temp;\n    }\n    return remainder;", "    long gcd = 0;\n\
    \    while(b != 0) {\n        long r = a % b;\n        a = b;\n        b = r;\n\
    \        gcd++;\n    }\n    return gcd;", "    int res;\n    while(b) {\n    \
    \    if(a & 1)\n            ++a;\n        while(b & 1) {\n            b >>= 1;\n\
    \            a <<= 1;\n        }\n        b >>= 1;\n    }\n    res = a;\n    return\
    \ res;", "    long n = a;\n    long p = b;\n    long q = a % b;\n    long t;\n\
    \    // Check if q is zero\n    while (q == 0) {\n        p = p / 2;\n       \
    \ q = p % b;\n    }\n    while (q != 0) {\n        t = n;\n        n = p;\n  \
    \      p = q;\n        q = t % p;\n    }\n    // Return greatest common divisor\n\
    \    return n;", "    long long gcd =\n        static_cast<long long>(1LL);\n\
    \    for (; b > 0; b /= a, gcd *= a) {\n        if (a > 0 && b > 0 && gcd > a)\n\
    \            gcd = a;\n    }\n    return gcd;", '    return (b == 0) ? a : greatest_common_divisor(b,
    a % b);', "  if (a < b) {\n    long temp = a;\n    a = b;\n    b = temp;\n  }\n\
    \  long greatest = 0;\n  while (a != 0) {\n    long temp = a;\n    a = b % a;\n\
    \    greatest = greatest % temp;\n  }\n  return greatest;", "    long p = 1;\n\
    \    while (a && b)\n    {\n        if (a & 1) b = b & 1 ? p * b : 0;\n      \
    \  a = a >> 1;\n        p = p << 1;\n    }\n    return p;", "    // Use Euclid's\
    \ algorithm\n    while (b) {\n        long remainder = a % b;\n        a = b;\n\
    \        b = remainder;\n    }\n    return a;", "    long ans = 1;\n    while(a\
    \ != 0) {\n        if(b == 0) {\n            break;\n        }\n        if(b &\
    \ 1) {\n            ans = (a&1) ? ans : a&~b;\n        }\n        a >>= 1;\n \
    \       b >>= 1;\n    }\n    return ans;", "  if(b == 0) {\n    return a;\n  }\n\
    \  return greatest_common_divisor(b, a%b);", "    long temp = a % b;\n    while(temp\
    \ != 0){\n       a = b;\n       b = temp;\n       temp = a % b;\n    }\n    return\
    \ b;", "    long p = 1;\n    for (long i = 2; i <= a && i <= b; i++) {\n     \
    \   if ((a % i == 0) && (b % i == 0))\n            p *= i;\n    }\n    return\
    \ p;", "    if(b == 0)\n        return a;\n    long remainder;\n    for(;;) {\n\
    \        if(b % a == 0) {\n            remainder = b;\n            b = a % b;\n\
    \            a = remainder;\n        }\n        else {\n            remainder\
    \ = a;\n            a = b % a;\n            b = remainder;\n        }\n      \
    \  if (b == 0)\n            return a;\n    }", "    while(1) {\n        if(0 ==\
    \ a % b)\n            return b;\n        a = a / b;\n        b = b / 2;\n    }",
  "    int gcd[10000]; // Greatest common divisor\n    while (b) {\n        gcd [b\
    \ % a] = b % a;\n        b /= a;\n    }\n    // Now the gcd array contains the\
    \ greatest common divisor for each\n    // element of the array.\n    // Now we\
    \ just need to walk through it and return the greatest one\n    // that has a\
    \ divisor less than the input value\n    for(int i = 1, max = gcd[0]; i < 10000;\
    \ ++i){\n        if (gcd[i] < max) {\n            return gcd[i];\n        }\n\
    \    }\n    // If we get here then there was no gcd that had a divisor less than\n\
    \    // the input value\n    return -1;", "    if(a < b) std::swap(a, b);\n  \
    \  long a = abs(a), b = abs(b);\n    long res = 1;\n    while(b) {\n        if(a\
    \ % b == 0) res *= b;\n        a /= b;\n        b /= b;\n    }\n    return res;",
  "    long long int max_common_divisor = 1;\n    while (max_common_divisor < a &&\
    \ max_common_divisor < b) {\n        max_common_divisor *= max_common_divisor;\n\
    \    }\n    if (max_common_divisor == 1) {\n        return 1;\n    }\n    while\
    \ (a % max_common_divisor != 0) {\n        if (b % max_common_divisor != 0) {\n\
    \            return max_common_divisor;\n        }\n        max_common_divisor\
    \ *= max_common_divisor;\n    }\n    return max_common_divisor;", "    long gcd\
    \ = 0;\n    while (a != 0) {\n        long tmp = b;\n        b = a % b;\n    \
    \    a = tmp;\n        gcd++;\n    }\n    return gcd;", "    long gcd = 0;\n \
    \   while (b != 0) {\n        long t = a % b;\n        a = b;\n        b = t;\n\
    \    }\n    return gcd;", "    long gcd;\n    while (b) {\n        gcd = b%a;\n\
    \        a=b;\n        b=gcd;\n    }\n    return a;", "    if( b == 0)\n     \
    \   return a;\n    \n    return greatest_common_divisor(b, a % b);", "    if (a\
    \ < b)\n        std::swap(a, b);\n    int t = (int)a - (int)b;\n    return ((t\
    \ >= 0 ? t : -b) + b) / b;", "    if (b == 0) {\n        return a;\n    }\n  \
    \  return greatest_common_divisor(b, a % b);", "    long temp;\n    temp = b;\n\
    \    while (temp != 0) {\n        a = b;\n        b = temp % a;\n        temp\
    \ = a / b;\n    }\n    return a;", "    // Compute the greatest common divisor\
    \ of the integers a and b\n    long gcd = 0;\n    while (b > 0) {\n        if\
    \ (a > b) {\n            a %= b;\n        }\n        gcd = b;\n        b %= gcd;\n\
    \    }\n    return gcd;", "    long r;\n    while (a && b) {\n        r = (a%b),\
    \ a = b, b = r;\n    }\n    return b;", "    if (b == 0)\n        return a;\n\
    \    return greatest_common_divisor(b, a % b);", "    while (b) {\n        //\
    \ b divides a evenly\n        if (a % b)\n            return b;\n        // Remove\
    \ a from b and repeat\n        b -= a % b;\n    }\n    // a is now a greatest\
    \ common divisor of b and b\n    return b;", "    long g = a;\n    while (1) {\n\
    \        g = b / g;\n        if (g * b == a)\n            return g;\n    }", " \
    \   long div = 1, mod = 1;\n    while (b) {\n        while (a % b != 0) {\n  \
    \          a /= b;\n            mod *= b;\n        }\n        div *= b;\n    \
    \    mod *= b;\n        b /= 2;\n    }\n    return div;", "    while (b != 0)\
    \ {\n        long temp = b;\n        b = a % b;\n        a = temp;\n    }\n  \
    \  return a;", '    return (b == 0) ? a : greatest_common_divisor(b, a % b);',
  '    return (b == 0) ? a : greatest_common_divisor(b, a % b);', "  assert(a > 0\
    \ && b > 0);\n  long n = a;\n  long m = b;\n  while (m % 2 == 0 && m < n) {\n\
    \    m = m / 2;\n  }\n  while (n % 2 == 0 && n < m) {\n    n = n / 2;\n  }\n \
    \ while ((m % n) != 0) {\n    long d = m % n;\n    m = n;\n    n = d;\n  }\n \
    \ return n;", "    long gcd = 0;\n    while (b != 0) {\n        gcd = (b % a)\
    \ ? a : gcd;\n        a = b % a;\n        b = gcd;\n    }\n    return gcd;", " \
    \   long remainder = 0;\n    while (a != 0) {\n        remainder = a%b;\n    \
    \    a = b;\n        b = remainder;\n    }\n    return b;", "    long gcd = 1;\n\
    \    for(; b > 0; b--) {\n        if(b % 2 == 0) {\n            gcd*=a;\n    \
    \    }\n        a*=a;\n    }\n    return gcd;", "    if (a == 0 && b == 0)\n \
    \       return 0;\n    long tmp = a;\n    while (b != 0) {\n        if (tmp %\
    \ b == 0)\n            return tmp;\n        tmp = tmp % b;\n    }\n    return\
    \ tmp;", "    if(b == 0) return a;\n    return greatest_common_divisor(b, a%b);",
  "    if (a == 0)\n        return b;\n    else if (b == 0)\n        return a;\n \
    \   else if (a == 1 || b == 1)\n        return a;\n    else\n        return greatest_common_divisor(b,\
    \ a % b);", "    if(b == 0)\n        return a;\n    long rdiv = greatest_common_divisor(b,\
    \ a % b);\n    return (rdiv + (a / b)) % b;", "    // Write your code here\n \
    \   return b;", '    return a % b;', "    if (a == 0) {\n        return b;\n \
    \   }\n    if (b == 0) {\n        return a;\n    }\n    long lcm = (long) greatest_common_divisor(a\
    \ % b, b) % b;\n    return lcm;", "    long long gcd = 1;\n    long long a = abs(a),\
    \ b = abs(b);\n    while (a != 0 && b != 0) {\n        long long remainder = a\
    \ % b;\n        a = b;\n        b = remainder;\n        gcd = remainder;\n   \
    \ }\n    if (a != 0 && b == 0) {\n        return a;\n    }\n    if (b != 0 &&\
    \ a == 0) {\n        return b;\n    }\n    if (gcd == 0) {\n        return 0;\n\
    \    }\n    return gcd;", "    if (b == 0)\n        return a;\n    long g = greatest_common_divisor(b,\
    \ a % b);\n    return (b / g) * g;", "  if (b == 0) {\n    return a;\n  } else\
    \ {\n    return greatest_common_divisor(b, a % b);\n  }", '    return (b == 0)
    ? a : greatest_common_divisor(b, a % b);', "    if (b == 0) {\n        return\
    \ a;\n    }\n    return greatest_common_divisor(b, a % b);", "  assert(a >= 0);\n\
    \  assert(b >= 0);\n  long max_div = a > b ? a : b;\n  long min_div = a > b ?\
    \ b : a;\n  long div = max_div;\n  while (max_div > min_div) {\n    long next_div\
    \ = max_div / div;\n    if (next_div > max_div) {\n      div = next_div;\n   \
    \ } else {\n      break;\n    }\n  }\n  return max_div;", "    // Write your code\
    \ here\n    long gcd;\n    while(a && b){\n        gcd=a%b;\n        a=b;\n  \
    \      b=gcd;\n    }\n    return a%b==0? a:b;", "  while(1) {\n    if(a % b ==\
    \ 0) return b;\n    else a = b % a;\n  }", "    if(a<0)\n        return greatest_common_divisor(b,a);\n\
    \    if(b==0)\n        return a;\n    if(b>a)\n        return greatest_common_divisor(b,a%b);\n\
    \    if(a%b==0)\n        return b;\n    return greatest_common_divisor(b,a%b);",
  "    if(b == 0) return a;\n    return greatest_common_divisor(b, a%b);", "    if(a%b==0){\n\
    \        return a;\n    }\n    while(a%b!=0){\n        a = b;\n        b = a%b;\n\
    \    }\n    return b;", "    long div = a / b;\n    long mod = a % b;\n\n    while(div\
    \ != 0 && mod != 0) {\n        div = div / 2;\n        mod = mod / 2;\n    }\n\
    \n    return div;", "\tlong x = 1;\n\tlong y = 1;\n\twhile (a != 0) {\n\t\tlong\
    \ rem = a % b;\n\t\tx = y;\n\t\ty = rem;\n\t\ta = b;\n\t\tb = x;\n\t}\n\treturn\
    \ b;", "  // Check for even values of `a` and `b`\n  if (a % 2 == 0 && b % 2 ==\
    \ 0)\n    return greatest_common_divisor(a - 1, b - 1);\n  // Otherwise return\
    \ gcd\n  else if (a > b)\n    return greatest_common_divisor(b, a - b);\n  else\n\
    \    return greatest_common_divisor(a, b - a);", "    int c;\n    // Find GCD\
    \ of two numbers divisible by c\n    while ((c := (a % b)) != 0)\n        if (b\
    \ == a)\n            return a;\n        else\n            b %= c;\n    return\
    \ b;", "    // Initialize min value to first argument\n    long min = a;\n   \
    \ // Initialize max value to second argument\n    long max = b;\n    // While\
    \ loop to find GCD\n    while (min != 0 && max != 0) {\n        // If min is greater\
    \ than max, then update max\n        if (min > max) {\n            max = max;\n\
    \        }\n        // If min is greater than 0, then update min\n        else\
    \ if (min > 0) {\n            min = min - max;\n        }\n        // If max is\
    \ greater than 0, then update max\n        else if (max > 0) {\n            max\
    \ = max - min;\n        }\n    }\n    // Return GCD\n    return max;", "    if\
    \ (b == 0)\n        return a;\n    long r = a;\n    while (a != 1) {\n       \
    \ r = r / a;\n        a = b%a;\n        b = a;\n    }\n    return r;", "    if\
    \ (a < b) std::swap(a, b);\n    int d = 0;\n    while (a != 0) {\n        d =\
    \ (d << 1) + (a & 1);\n        a >>= 1;\n    }\n    d = d >> 1;\n    while (d\
    \ != 0 && b != 0) {\n        if (d & b) {\n            b -= d;\n        }\n  \
    \      d >>= 1;\n    }\n    return b == 0 ? d : -1;", "    long r = 0, d;\n  \
    \  while (a != 0) {\n        d = (a % b) / 10;\n        r = (r * 10 + d) % 10;\n\
    \        a = a / 10;\n    }\n    return r;", "    // Initialize greatest common\
    \ divisor to 0\n    long greatest_common_divisor = 0;\n    // Loop through all\
    \ numbers between a and b\n    for (long i = a; i <= b; i++) {\n        // If\
    \ this number divides both a and b, increment greatest common divisor\n      \
    \  if (a % i == 0 && b % i == 0) {\n            greatest_common_divisor = i;\n\
    \        }\n    }\n    return greatest_common_divisor;", "    if (b == 0) {\n\
    \        return a;\n    } else {\n        return greatest_common_divisor(b, a\
    \ % b);\n    }", "    long long int rem;\n    while (b) {\n        rem = a % b;\n\
    \        a = b;\n        b = rem;\n    }\n    return a;", "    long long int q\
    \ = a/b;\n    long long int r = a/b%q;\n    if(b%r == 0)\n        return r;\n\
    \    return q;", "    long a = abs(a), b = abs(b);\n    long remainder = 0;\n\
    \    while (b) {\n        long rdiv = b;\n        remainder = b % a;\n       \
    \ b = a;\n        a = rdiv;\n    }\n    return remainder;", "    while(a != b)\
    \ {\n        if(a > b) b--;\n        else a--;\n    }\n    return b;", "    while\
    \ (b != 0) {\n        long temp = a % b;\n        a = b;\n        b = temp;\n\
    \    }\n    return a;", "    long t;\n    while (b) {\n        t = b; b = a %\
    \ b; a = t;\n    }\n    return a;", "    // Initialize greatest common divisor\
    \ to the greatest common divisor\n    // of both a and b\n    long gcd = a;\n\
    \    while (gcd < b) {\n        gcd = gcd * b;\n    }\n    return gcd;", "\t//\
    \ Write your code here\n\tif(a<b)\n\t{\n\t\tif(a%b == 0)\n\t\t\treturn b;\n\t\t\
    return greatest_common_divisor(b,a);\n\t}\n\tif(b%a == 0)\n\t\treturn a;\n\treturn\
    \ greatest_common_divisor(a,b);", "    long x = abs(a), y = abs(b);\n    while\
    \ (y != 0) {\n        long rem = x % y;\n        x = y;\n        y = rem;\n  \
    \  }\n    if (x == 0) return b;\n    return x;", "    if (b == 0) {\n        return\
    \ a;\n    }\n    return greatest_common_divisor(b, a % b);", "  assert(a > 0 &&\
    \ b > 0);\n  if (a == 0 || b == 0) {\n    return 0;\n  }\n  return greatest_common_divisor(a\
    \ / b, b);", "    while (a != 0) {\n        long r = a % b;\n        a = b;\n\
    \        b = r;\n    }\n    return b;", "  // write your code here\n  if (b ==\
    \ 0) {\n    return a;\n  }\n  return greatest_common_divisor(b, a % b);", "  \
    \  long lcm = 1, d = 1;\n    while (a != 0) {\n        long t = a % b;\n     \
    \   a = b;\n        b = t;\n        long tmp = a;\n        a /= b;\n        d\
    \ = tmp;\n        lcm = (lcm > d) ? (lcm) : (d);\n    }\n    return lcm;", " \
    \   // your code goes here\n    return gcd(a, b);", '    return greatest_common_divisor(a,
    b);', "    if(b == 0) return a;\n    return greatest_common_divisor(b, a % b);",
  "    long temp;\n    while (a % b != 0) {\n        a = b;\n        temp = b;\n \
    \       b = a % temp;\n    }\n    return b;", "\tassert(b != 0);\n\twhile (b !=\
    \ 0) {\n\t\tlong next_a = a % b;\n\t\tif (next_a == 0) {\n\t\t\treturn b;\n\t\t\
    }\n\t\ta = b;\n\t\tb = next_a;\n\t}\n\treturn a;", "    long r = a % b;\n    while\
    \ (r != 0) {\n        r = b%a;\n        a = b;\n        b = r;\n    }\n    return\
    \ a;", "  assert(a > 0 && b > 0);\n  while (b != 0) {\n    long long tmp = b;\n\
    \    b = a % b;\n    a = tmp;\n  }\n  return a;", "    // Write your code here\n\
    \    long gcd = 0, remainder;\n    while (a != 0) {\n        remainder = a % b;\n\
    \        a = b;\n        b = remainder;\n    }\n    return gcd > 0 ? gcd : -gcd\
    \ < 0 ? -gcd : 0;", "    while (b != 0) {\n        long temp = a % b;\n      \
    \  a = b;\n        b = temp;\n    }\n    return a;", "    while (b > 0) {\n  \
    \      long mod = a % b;\n        a = b;\n        b = mod;\n    }\n    return\
    \ a;", "    if (a < 0)\n        a = a + b;\n    if (b < 0)\n        b = b + a;\n\
    \    while (1) {\n        long r = a % b;\n        if (a == b)\n            return\
    \ r;\n        if (b == 0)\n            return 0;\n        a = b;\n        b =\
    \ r;\n    }", "    if (b == 0) return a;\n    long d = greatest_common_divisor(b,\
    \ a % b);\n    if (d == 0) return a;\n    return d; //return gcd(a, b)", "   \
    \ if(b == 0)\n        return a;\n    else\n        return greatest_common_divisor(b,\
    \ a%b);", "    while (a != 0 && b != 0) {\n        if (a%b == 0)\n           \
    \ a = a / b;\n        else\n            b = b / a;\n    }\n    return a;", " \
    \  long long int t;\n   while(b) {\n      t = b; b = a % b; a = t;\n   }\n   return\
    \ a;", "    if (b == 0) return a;\n    return greatest_common_divisor(b, a % b);",
  "  if (b == 0)\n    return a;\n  return greatest_common_divisor(b, a % b);", " \
    \   long long d = (long long)a % (long long)b;\n    while (d != 0) {\n       \
    \ if (d % 2 == 1) d /= 2;\n        else return d;\n    }\n    return d;", "  //\
    \ Get the greatest common divisor\n  long greatestDivisor = abs(a) %(b);\n  long\
    \ gcd_of_a = greatestDivisor;\n  while (greatestDivisor != 0) {\n    if (greatestDivisor\
    \ > b) {\n      greatestDivisor = b;\n    }\n    b -= greatestDivisor;\n    gcd_of_a\
    \ %= b;\n  }\n  return gcd_of_a;", "  long long gcd=1;\n  while(a != 0 && b !=\
    \ 0){\n    if(a%b != 0){\n      gcd=a%b;\n    }\n    a=a/gcd;\n    b=b/gcd;\n\
    \  }\n  return gcd;", "    long g = 1, q = 0, r = 0, p;\n    while (a != 0) {\n\
    \        p = (b / a) - 1;\n        g = std::max(g, p);\n        q += p;\n    \
    \    r += a;\n        a %= p;\n    }\n    std::swap(q, r);\n    return q;", "\t\
    if (a == 0 || b == 0)\n\t\treturn 0;\n\tlong long lcm = abs((a * b) / greatest_common_divisor(b,\
    \ a % b));\n\tif (lcm == 0)\n\t\treturn a;\n\treturn lcm;", "  if (b == 0)\n \
    \   return a;\n  return greatest_common_divisor(b, a % b);", "    // Initialize\
    \ result to b\n    long result = b;\n    // If b is 1, result is 1\n    if (b\
    \ == 1) {\n        return 1;\n    }\n    // If any of a and b are 1, return a\n\
    \    if (a == 1 || b == 1) {\n        return a;\n    }\n    // Set remainder to\
    \ 1\n    long remainder = 1;\n    // Initialize loop to 1 less than b\n    for\
    \ (int i = 1; i < b; i++) {\n        // If remainder divides a then update remainder\n\
    \        if (remainder % a == 0) {\n            remainder = remainder / a;\n \
    \       }\n        // Update remainder\n        result = result + 1;\n    }\n\
    \    // Return result\n    return result;", "\t// If b is negative, swap them,\
    \ otherwise, return a\n\tif (b < 0) {\n\t\tlong c = a;\n\t\ta = b;\n\t\tb = c;\n\
    \t}\n\t// if a = b (mod 2), return a\n\tif (a % 2 == 0 && b == 0) return a;\n\t\
    // if a * b = a, return a\n\tif (a * b == a) return a;\n\t// a * b < a (mod 2)\n\
    \t// a / b must be even\n\tif (b != a / b) return 0;\n\t// The above conditions\
    \ were satisfied, so repeatedly subtract a\n\t// from b until b is divisible by\
    \ a.\n\twhile (b != 0) {\n\t\tlong c = a / b;\n\t\tif (c % a == 0) {\n\t\t\t//\
    \ If c is still divisible by a, then b is divisible by a\n\t\t\t// (gcd of a *\
    \ b)\n\t\t\treturn b;\n\t\t}\n\t\t// If not, subtract a from b and repeat.\n\t\
    \tb = c;\n\t}\n\t// There was no gcd in the above loop, so return a.\n\treturn\
    \ a;", "    if(b==0)\n        return a;\n    long gcd = greatest_common_divisor(b,\
    \ a % b);\n    return gcd;", "    if (a < b) {\n        return greatest_common_divisor(b,\
    \ a);\n    }\n    // a > b\n    while (a % b) {\n        ++b;\n    }\n    return\
    \ b;", "    long r = 1;\n    while (b != 0) {\n        if ((b & 1) != 0) // if\
    \ b has only 1 set bit then a can't be divisible by b\n            while (a %\
    \ b != 0) {\n                a += 1;\n                r += 1; // r = gcd of a\
    \ and b\n            }\n        b = (b >> 1);\n    }\n    return r;", "    if\
    \ (a == 0) return b;\n    if (b == 0) return a;\n    return greatest_common_divisor(b,\
    \ a % b);", "    long x = 1;\n    long y = 1;\n    while (b) {\n        long q\
    \ = a / b;\n        a = b;\n        b = q;\n        x = (x % b + b) % b;\n   \
    \ }\n    return x; ", "    if( b == 0 )\n        return a;\n    return greatest_common_divisor(\
    \ b, a%b );", "    long x = 0;\n    for (long c = a; c != 0; c /= b)\n       \
    \ x += c;\n    return x;", "    if (a < b) {\n        long temp = a;\n       \
    \ a = b;\n        b = temp;\n    }\n    long result = b;\n    while (a % result\
    \ != 0) {\n        a = a % result;\n        result = result % b;\n    }\n    return\
    \ result;", "\tif (a < b) {\n\t\tlong temp = a;\n\t\ta = b;\n\t\tb = temp;\n\t\
    }\n\twhile (1) {\n\t\tlong temp = a % b;\n\t\tif (temp == 0) {\n\t\t\treturn b;\n\
    \t\t}\n\t\tb = temp;\n\t}", "    long m = (a < b) ? b : a;\n    long n = a % m;\n\
    \    while (m % n == 0) {\n        m = n;\n        n = m % n;\n    }\n    return\
    \ n;", "    long long int t;\n    while (b) {\n        t = b;\n        b = a %\
    \ t;\n        a = t;\n    }\n    return a;", "    if(a == 0) return b;\n    if(b\
    \ == 0) return a;\n    // a and b are non-zero\n    long t = greatest_common_divisor(b,\
    \ a % b);\n    return a / t;", "  long temp, div, res;\n  temp = (a < b) ? a :\
    \ b;\n  div = 1;\n  while (temp > 0) {\n    temp = temp / div;\n    div++;\n \
    \ }\n  res = div;\n  while (a > 1) {\n    a = a / div;\n    div++;\n  }\n  while\
    \ (a > 1) {\n    res = res * div;\n    a = a / div;\n    div++;\n  }\n  return\
    \ res;", '    return (b == 0) ? a : greatest_common_divisor(b, a % b);', "  if\
    \ (a == 0) return b;\n  if (b == 0) return a;\n  if (a > b) return greatest_common_divisor(b,\
    \ a % b);\n  else {\n    if (b > a) return greatest_common_divisor(a, b % a);\n\
    \    return b;\n  }", "    long long t = b / a;\n    long long g = t;\n    while\
    \ (t != 0) {\n        t = t / a;\n        g = g * a;\n    }\n    return g;", " \
    \ assert(b > 0 && a > 0);\n  long gcd = 0;\n  while (a != 1) {\n    gcd = (gcd\
    \ >= b) ? gcd : b;\n    a--;\n    b--;\n  }\n  return gcd;", "\t// Using Euclid\
    \ Algorithm\n\tif (b == 0) {\n\t\treturn a;\n\t}\n\treturn greatest_common_divisor(b,\
    \ a % b);", "  assert(b != 0);\n  if (b == 0)\n    return a;\n  else\n    return\
    \ greatest_common_divisor(a % b, b);", "\tif (a == 0 || b == 0) {\n\t\treturn\
    \ 0;\n\t}\n\tlong rem = a % b;\n\tif (rem < 0) {\n\t\treturn greatest_common_divisor(b,\
    \ rem);\n\t} else {\n\t\treturn greatest_common_divisor(a, rem);\n\t}", "    if(b\
    \ == 0)\n        return a;\n    else\n        return greatest_common_divisor(b,\
    \ a%b);", "    if(a==0)\n        return b;\n    if(b==0)\n        return a;\n\
    \    long div = greatest_common_divisor(b, a % b);\n    return (b/div)*(b/div);",
  "  if (b == 0) {\n    return a;\n  }\n  return greatest_common_divisor(b, a % b);",
  "    //assert(a >= 0 && b >= 0);\n    long x;\n    long rem;\n    long div = 1;\n\
    \    long new_div = 1;\n    while (a % 2 == 0 && b % 2 == 0) {\n        a = a\
    \ / 2;\n        b = b / 2;\n    }\n    // Divide by divisor\n    while (a % 2\
    \ != 0) {\n        a = a / 2;\n        div++;\n    }\n    while (a % 2 != 0) {\n\
    \        b = b / 2;\n        new_div++;\n    }\n    // Divisors\n    while (div\
    \ != new_div) {\n        rem = a % div;\n        a = div;\n        div = div +\
    \ 1;\n        new_div = new_div + 1;\n    }\n    while (b % div != 0) {\n    \
    \    b = b / div;\n        div++;\n    }\n    while (b % div != 0) {\n       \
    \ rem = b % div;\n        b = div;\n        div = div + 1;\n    }\n    // Return\
    \ result\n    return a / b;", "    if( a%b == 0 )\n        return b;\n    return\
    \ greatest_common_divisor(b,a%b);", "    assert(b != 0);\n    long m = 0;\n  \
    \  while (a % b != 0) {\n        m += b;\n        a = a / b;\n    }\n    return\
    \ m;", "    long long int temp = a;\n    while (temp != 0) {\n        if (b%temp\
    \ == 0) {\n            return temp;\n        }\n        temp /= 2;\n    }\n  \
    \  return 0;", "  assert(a > 0 && b > 0);\n  long result = a % b;\n  while (result\
    \ != 0) {\n    a = b;\n    b = result;\n    result = a % b;\n  }\n  return b;",
  "    long temp=0;\n    while (b) {\n        temp += (b & 1);\n        b >>= 1;\n\
    \    }\n    return temp*a;", "  assert(a && b);\n  long temp;\n  long x = 1;\n\
    \  long y = 1;\n  while (b) {\n    temp = a % b;\n    a = b;\n    b = temp;\n\
    \    x *= 10;\n    y *= 10;\n  }\n  while (a) {\n    temp = x % a;\n    x = a;\n\
    \    a = temp;\n    x *= 10;\n  }\n  return x;", "    long temp=b;\n    while(temp!=0)\
    \ {\n        temp=temp%a;\n        a=b;\n        b=temp;\n    }\n    return a;",
  "    long long d;\n    while (b) {\n        d = (a % b); \n        if (b - d >=\
    \ 1) \n            return b;\n        a = b;\n        b = d;\n    }\n    return\
    \ a;", "    // Write your code here.\n    if(b == 0)\n        return a;\n    else\n\
    \        return greatest_common_divisor(b, a % b);", "    if(b == 0) {\n     \
    \   return a;\n    }\n    long temp = greatest_common_divisor(b, a % b);\n   \
    \ return temp;", "    if (b == 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);", "  if(b == 0) {\n    return a;\n  }\n  return greatest_common_divisor(b,\
    \ a % b);", "    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);", "    while (b != 0)\n    {\n        a = b;\n        b = a % b;\n \
    \   }\n    return a;", "    while (a != 0) {\n        if (a % b == 0) return b;\n\
    \        b /= a;\n    }\n    return b;", "    long max_divisor = a % b;\n    for\
    \ (long i = 1; (i < max_divisor) && (a % i == 0) && (b % i == 0); ++i)\n     \
    \   if (a % i == 0 && b % i == 0)\n            return i;\n    return max_divisor;",
  "    if (b == 0)\n        return a;\n    return greatest_common_divisor(b, (a%b));",
  "    long r = a % b;\n    while (r != 0) {\n        r = b%r;\n        ++b;\n   \
    \ }\n    return b;", "    // code here\n    assert(a>0 && b>0);\n    return (a%b\
    \ == 0) ? a : greatest_common_divisor(b,a%b);", "    long greatest_common_divisor\
    \ = 1;\n    while (a && b) {\n        if (a > b) {\n            greatest_common_divisor\
    \ = a;\n            a = b / greatest_common_divisor;\n        } else if (b > a)\
    \ {\n            greatest_common_divisor = b;\n            b = a / greatest_common_divisor;\n\
    \        } else {\n            greatest_common_divisor = a + b;\n        }\n \
    \   }\n    return greatest_common_divisor;", "  if (b == 0) return a;\n  long\
    \ d = greatest_common_divisor(b, a % b);\n  if (d == 0) return b;\n  while (a\
    \ % d == 0) d = d % b;\n  return d;", "    while (b > 0) {\n        // Keep dividing\
    \ a by b\n        long temp = a % b;\n        a = b;\n        b = temp;\n    }\n\
    \    return a;", "    long gcd;\n    while(a && b) {\n        if(a%b == 0) {\n\
    \            gcd = b;\n            break;\n        }\n        else if(b%a==0)\
    \ {\n            gcd = a;\n            break;\n        }\n        else {\n   \
    \         gcd = (a%b == 0) ? b : a;\n            a /= b;\n        }\n    }\n \
    \   return gcd;", "\t// Write your code here\n\tint remainder = 0;\n\tint quotient\
    \ = 0;\n\twhile(a > 0 && b > 0){\n\t\tremainder = a % b;\n\t\ta = b;\n\t\tb =\
    \ remainder;\n\t\tquotient++;\n\t}\n\treturn quotient;", '    return b == 0 ?
    a : greatest_common_divisor(b, a % b);', "    if (b == 0) {\n        return a;\n\
    \    }\n    return greatest_common_divisor(b, a % b);", "    while (a != 0) {\n\
    \        while (a != b) {\n            if (a > b)\n                swap(a, b);\n\
    \            a -= b;\n        }\n        b--;\n    }\n    return b;", "    long\
    \ r = a % b;\n    while (a != b) {\n        r = b % a;\n        swap(a, b);\n\
    \    }\n    return r;", "    long gcd = 0, m = 0;\n    while (a && b) {\n    \
    \    while (b && a > b) { a = a % b; gcd = b; b = a / b; }\n        while (b &&\
    \ a < b) { a = a % b; gcd = b; b = a / b; }\n    }\n    return gcd;", "    long\
    \ long result = 1;\n    while (b) {\n        if ((b & 1) != 0) {\n           \
    \ result = result * a;\n        }\n        a = a * a % n;\n        b = b / 2;\n\
    \    }\n    return result;", "    long greatest_common_divisor = 1;\n    // Iterate\
    \ until gcd(a, b) = 1 \n    while (a && b) {\n        if (a > b) b--;\n      \
    \  else a--;\n        greatest_common_divisor = greatest_common_divisor % a +\
    \ b + 1;\n    }\n    return greatest_common_divisor;", "    long greatest_common_divisor\
    \ = 1;\n    while (a != 0) {\n        while (a != 0 && b != 0) {\n           \
    \ if (a > b) {\n                greatest_common_divisor = a;\n               \
    \ a = a - (a / greatest_common_divisor);\n            } else {\n             \
    \   greatest_common_divisor = b;\n                b = b - (b / greatest_common_divisor);\n\
    \            }\n        }\n    }\n    return greatest_common_divisor;", "  assert(a\
    \ > 0 && b > 0);\n  long n = 0;\n  while (b) {\n    while (b & 1) a = (a * a +\
    \ 1) % n;\n    b >>= 1;\n    n++;\n  }\n  return a;", "    if (a == 0)\n     \
    \   return b;\n    if (b == 0)\n        return a;\n    while (a % b != 0)\n  \
    \      a = b;\n    return a;", '    return (b == 0) ? a : greatest_common_divisor(b,
    a%b);', "    if (a >= b)\n        return a;\n    else if (b > a)\n        return\
    \ b;\n    else if (a == 0)\n        return b;\n    long d = b / a;\n    long r1\
    \ = a%b;\n    return greatest_common_divisor(r1, d) + a;", "    // write your\
    \ code here\n    if(a==0)\n        return b;\n    if(b==0)\n        return a;\n\
    \    long l=greatest_common_divisor(b,a/b);\n    if(a%b==0)\n        return l;\n\
    \    return greatest_common_divisor(a,b) % l;", "    long r;\n    while (b !=\
    \ 0) {\n        r = a % b;\n        a = b;\n        b = r;\n    }\n    return\
    \ a;", "  long x;\n  long r;\n  while(1) {\n    x = a / b;\n    r = a % b;\n \
    \   a = b;\n    b = r;\n    if (x == 0)\n      return a;\n  }", "    while (a\
    \ != 0)\n        if (b & 1)\n            a = a >> 1;\n        else\n         \
    \   a = a >> 1 ^ 0xA001;\n    return a;", "    long x = 1;\n    long y = 1;\n\
    \    while (b) {\n        long r = a % b;\n        a = b;\n        b = r;\n  \
    \  }\n    while (a) {\n        long r = x % a;\n        x = a;\n        a = r;\n\
    \    }\n    return x;", "    if (b == 0) return a;\n    return greatest_common_divisor(b,\
    \ a % b);", "    long long gcd =a;\n    while(b > 0) {\n        if(gcd > b) gcd\
    \ = gcd % b;\n        b--;\n    }\n    return gcd;", "    long long div = a %\
    \ b;\n    while(div > 0){\n        a = b;\n        b = div;\n        div = a %\
    \ b;\n    }\n    return b;", "    while (a != 0) {\n        if (b != 0)\n    \
    \        a %= b;\n        a /= b;\n    }\n    return a;", "    long greatest_common_divisor\
    \ = 0;\n    if (b == 0) {\n        return a;\n    } else if (a == 0){\n      \
    \  return b;\n    }\n    while (a != 0 && b != 0){\n        if ((a % b) == 0)\n\
    \            greatest_common_divisor = greatest_common_divisor + b;\n        b\
    \ = b / 2;\n    }\n    return greatest_common_divisor;", '  return (b == 0) ?
    a : greatest_common_divisor(b, a % b);']
stop_tokens:
- "\n}"

language: cpp
name: HumanEval_15_string_sequence
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s = \"\";\n    for (long i = 0; i < n; i++) s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpp5_x4okn: /tmp/tmpp5_x4okn.cpp:11: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096957
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0; i<n; i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzbcihera: /tmp/tmpzbcihera.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096957
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i = 0; i<=n; i++){\n    s += to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpg5bkvcpm.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmpg5bkvcpm.cpp:7:10: error: \u2018to_string\u2019 was not\
    \ declared in this scope; did you mean \u2018std::__cxx11::to_string\u2019?\n\
    \    7 |     s += to_string(i);\n      |          ^~~~~~~~~\n      |         \
    \ std::__cxx11::to_string\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpg5bkvcpm.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6601:3:\
    \ note: \u2018std::__cxx11::to_string\u2019 declared here\n 6601 |   to_string(long\
    \ double __val)\n      |   ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660096956
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++) {\n        s.append(to_string(static_cast<unsigned\
    \ long long>(i)));\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvkfo88lr.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmpvkfo88lr.cpp:7:18: error: \u2018to_string\u2019 was not\
    \ declared in this scope; did you mean \u2018std::__cxx11::to_string\u2019?\n\
    \    7 |         s.append(to_string(static_cast<unsigned long long>(i)));\n  \
    \    |                  ^~~~~~~~~\n      |                  std::__cxx11::to_string\n\
    In file included from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpvkfo88lr.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6601:3: note:\
    \ \u2018std::__cxx11::to_string\u2019 declared here\n 6601 |   to_string(long\
    \ double __val)\n      |   ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660096956
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    if (n == 0) {\n        return \"0\";\n    }\n    std::string ret;\n\
    \    for (; n >= 10; n /= 10)\n        ret = ret + \" \" + to_string(n);\n   \
    \ for (; n > 0; n /= 10)\n        ret = to_string(n % 10) + ret;\n    return ret;\n\
    }\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpt_d4ysbv.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmpt_d4ysbv.cpp:10:27: error: \u2018to_string\u2019 was not\
    \ declared in this scope; did you mean \u2018std::__cxx11::to_string\u2019?\n\
    \   10 |         ret = ret + \" \" + to_string(n);\n      |                  \
    \         ^~~~~~~~~\n      |                           std::__cxx11::to_string\n\
    In file included from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpt_d4ysbv.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6601:3: note:\
    \ \u2018std::__cxx11::to_string\u2019 declared here\n 6601 |   to_string(long\
    \ double __val)\n      |   ^~~~~~~~~\n/tmp/tmpt_d4ysbv.cpp:12:15: error: \u2018\
    to_string\u2019 was not declared in this scope; did you mean \u2018std::__cxx11::to_string\u2019\
    ?\n   12 |         ret = to_string(n % 10) + ret;\n      |               ^~~~~~~~~\n\
    \      |               std::__cxx11::to_string\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpt_d4ysbv.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6601:3:\
    \ note: \u2018std::__cxx11::to_string\u2019 declared here\n 6601 |   to_string(long\
    \ double __val)\n      |   ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660096956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n  std::stringstream ss;\n  for (long i = 0; i < n; i++) {\n    long j\
    \ = i;\n    while (j > 0 && j % 10 == 0) {\n      j/=10;\n    }\n    ss << j;\n\
    \    while (j > 0 && j % 10 != 0) {\n      j/=10;\n    }\n    ss << ' ';\n  }\n\
    \  return ss.str();\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp3lyaoh0c: /tmp/tmp3lyaoh0c.cpp:21: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string seq;\n    while (n--) seq += std::to_string(n);\n    return\
    \ seq;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpwdwv7cyf: /tmp/tmpwdwv7cyf.cpp:11: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096957
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    long start = 0;\n    std::string result;\n    while (start < n) {\n\
    \        result += std::to_string(start);\n        result += (start % 10 == 0)\
    \ ? \" \" : \" \";\n        start++;\n    }\n    result += (start % 10 == 0) ?\
    \ std::string(n - start, ' ') : std::string(n - start, ' ');\n    return result;\n\
    }\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpvim9uyd0: /tmp/tmpvim9uyd0.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096957
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    char buf[50];\n    snprintf(buf, sizeof(buf),\
    \ \"%d\", n);\n    s.assign(buf, strlen(buf));\n    return s;\n}\nint main() {\n\
    \    auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmppn9v1lvj: /tmp/tmppn9v1lvj.cpp:14: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096956
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    s.reserve(n);\n    for (long i = 0; i < n; i++)\n\
    \        s += to_string(i);\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0j73rlz1.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmp0j73rlz1.cpp:8:14: error: \u2018to_string\u2019 was not\
    \ declared in this scope; did you mean \u2018std::__cxx11::to_string\u2019?\n\
    \    8 |         s += to_string(i);\n      |              ^~~~~~~~~\n      | \
    \             std::__cxx11::to_string\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp0j73rlz1.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6601:3:\
    \ note: \u2018std::__cxx11::to_string\u2019 declared here\n 6601 |   to_string(long\
    \ double __val)\n      |   ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660096956
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n  std::string ans = \"\";\n  long l = n;\n  while (l > 0) {\n    ans =\
    \ to_string(l) + \" \" + ans;\n    l /= 10;\n  }\n  return ans;\n}\nint main()\
    \ {\n    auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"\
    ));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpw6b2zoa0.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmpw6b2zoa0.cpp:8:11: error: \u2018to_string\u2019 was not\
    \ declared in this scope; did you mean \u2018std::__cxx11::to_string\u2019?\n\
    \    8 |     ans = to_string(l) + \" \" + ans;\n      |           ^~~~~~~~~\n\
    \      |           std::__cxx11::to_string\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpw6b2zoa0.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6601:3:\
    \ note: \u2018std::__cxx11::to_string\u2019 declared here\n 6601 |   to_string(long\
    \ double __val)\n      |   ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660096956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string res;\n    for (long i = 0; i < n; i++)\n        res +=\
    \ std::to_string(i) + \" \";\n    return res;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpw7h4cgew: /tmp/tmpw7h4cgew.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096957
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s = \"\";\n    for(long i = 0; i < n; i++) {\n       \
    \ s+= std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp7494_bch: /tmp/tmp7494_bch.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096957
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n  std::string s;\n  while (n > 0) {\n    s.insert(0, (n%10) + '0');\n\
    \    n /= 10;\n  }\n  return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpu4veimzi.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmpu4veimzi.cpp:7:29: error: no matching function for call\
    \ to \u2018std::__cxx11::basic_string<char>::insert(int, long int)\u2019\n   \
    \ 7 |     s.insert(0, (n%10) + '0');\n      |                             ^\n\
    In file included from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpu4veimzi.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:1538:7: note:\
    \ candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::insert(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::const_iterator, std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>::size_type, _CharT) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::iterator\
    \ = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >; typename\
    \ __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::pointer\
    \ = char*; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::const_iterator\
    \ = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char>\
    \ >; typename __gnu_cxx::__alloc_traits<typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_CharT>::other>::const_pointer\
    \ = const char*; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019\n 1538 |       insert(const_iterator __p, size_type\
    \ __n, _CharT __c)\n      |       ^~~~~~\n/usr/include/c++/9/bits/basic_string.h:1538:7:\
    \ note:   candidate expect"
  stdout: ''
  timestamp: 1660096956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n  std::string result;\n  for (long i = 0; i < n; i++)\n    result += \"\
    \ \" + std::to_string(i);\n  return result;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmptoh42dp8: /tmp/tmptoh42dp8.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096957
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n\tstd::stringstream ss;\n\tss << \"[\" << std::setw(3) << 0 << \", \"\
    \ << std::setw(3) << n << \"]\";\n\treturn ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpqwhlzthm: /tmp/tmpqwhlzthm.cpp:11: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096957
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::ostringstream s;\n    long start = 0;\n    for (; n >= 0; n--)\
    \ {\n        s << start << \" \";\n        start++;\n    }\n    return s.str();\n\
    }\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpyjirt_au: /tmp/tmpyjirt_au.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096957
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n\tstd::ostringstream os;\n\tfor (int i = 0; i < n; i++) {\n\t\tos << i\
    \ << \" \";\n\t}\n\tstd::cout << \"n = \" << n << \"\\n\"\n\t\t<< \"s = \" <<\
    \ os.str() << \"\\n\";\n\treturn os.str();\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpxv4iyjl0: /tmp/tmpxv4iyjl0.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096957
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    if (n <= 0) return \"0\";\n    std::string result = \"\";\n    for\
    \ (long i = 1; i <= n; ++i) {\n        result += to_string(n - i);\n    }\n  \
    \  return result;\n}\nint main() {\n    auto candidate = string_sequence;\n  \
    \  assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"\
    ));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpg8j7_1d6.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmpg8j7_1d6.cpp:8:19: error: \u2018to_string\u2019 was not\
    \ declared in this scope; did you mean \u2018std::__cxx11::to_string\u2019?\n\
    \    8 |         result += to_string(n - i);\n      |                   ^~~~~~~~~\n\
    \      |                   std::__cxx11::to_string\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpg8j7_1d6.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6601:3:\
    \ note: \u2018std::__cxx11::to_string\u2019 declared here\n 6601 |   to_string(long\
    \ double __val)\n      |   ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660096956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n  std::string s;\n  for (long i = 0; i < n; ++i)\n    s.push_back((char)('A'\
    \ + i));\n  return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmppundizyh: /tmp/tmppundizyh.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096957
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string result;\n    for (int i = 0; i <= n; i++) {\n        result\
    \ += to_string(i) + \" \";\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp50u7pth4.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmp50u7pth4.cpp:7:19: error: \u2018to_string\u2019 was not\
    \ declared in this scope; did you mean \u2018std::__cxx11::to_string\u2019?\n\
    \    7 |         result += to_string(i) + \" \";\n      |                   ^~~~~~~~~\n\
    \      |                   std::__cxx11::to_string\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp50u7pth4.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6601:3:\
    \ note: \u2018std::__cxx11::to_string\u2019 declared here\n 6601 |   to_string(long\
    \ double __val)\n      |   ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660096956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    // your code here\n    std::ios_base::sync_with_stdio(false);\n  \
    \  long start = 0, stop = n;\n    std::string res;\n    while (start < stop) {\n\
    \        res.push_back((stop > 0) ? stop % 10 + '0' : 0);\n        res.push_back((stop\
    \ > 0) ? stop / 10 + '0' : 0);\n        stop--;\n    }\n    res.push_back((stop\
    \ > 0) ? stop % 10 + '0' : 0);\n    return res;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpzzwamjpu: /tmp/tmpzzwamjpu.cpp:19: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096957
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for (long i = 0; i < n; ++i)\n        s.push_back(std::to_string(i));\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp487nhdjv.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmp487nhdjv.cpp:7:35: error: cannot convert \u2018std::string\u2019\
    \ {aka \u2018std::__cxx11::basic_string<char>\u2019} to \u2018char\u2019\n   \
    \ 7 |         s.push_back(std::to_string(i));\n      |                     ~~~~~~~~~~~~~~^~~\n\
    \      |                                   |\n      |                        \
    \           std::string {aka std::__cxx11::basic_string<char>}\nIn file included\
    \ from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp487nhdjv.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:1353:24: note:\
    \   initializing argument 1 of \u2018void std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>::push_back(_CharT) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>]\u2019\n 1353 |       push_back(_CharT __c)\n\
    \      |                 ~~~~~~~^~~\n"
  stdout: ''
  timestamp: 1660096956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n  std::string result;\n  while (n--) {\n    result += std::to_string(n)\
    \ + ' ';\n  }\n  return result;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmphk_dr7dp: /tmp/tmphk_dr7dp.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096957
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s(static_cast<size_t>(n));\n    for (size_t i = s.size();\
    \ i > 0; --i) s[i - 1] = ' ';\n    for (size_t i = 0; i < n; ++i) s[i] = '0' +\
    \ i % 10;\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9ds7f0rl.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmp9ds7f0rl.cpp:5:41: error: no matching function for call\
    \ to \u2018std::__cxx11::basic_string<char>::basic_string(size_t)\u2019\n    5\
    \ |     std::string s(static_cast<size_t>(n));\n      |                      \
    \                   ^\nIn file included from /usr/include/c++/9/string:55,\n \
    \                from /usr/include/c++/9/bits/locale_classes.h:40,\n         \
    \        from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp9ds7f0rl.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:654:2:\
    \ note: candidate: \u2018template<class _Tp, class> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::basic_string(const _Tp&, const _Alloc&)\u2019\n  654 |  basic_string(const\
    \ _Tp& __t, const _Alloc& __a = _Alloc())\n      |  ^~~~~~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:654:2:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/9/bits/move.h:55,\n                 from /usr/include/c++/9/bits/stl_pair.h:59,\n\
    \                 from /usr/include/c++/9/bits/stl_algobase.h:64,\n          \
    \       from /usr/include/c++/9/bits/specfun.h:45,\n                 from /usr/include/c++/9/cmath:1927,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmp9ds7f0rl.cpp:2:\n/usr/include/c++/9/type_traits:\
    \ In substitution of \u2018template<bool _Cond, class _Tp> using enable_if_t =\
    \ typename std::enable_if::type [with bool _Cond = std::integral_constant<bool,\
    \ false>::value; _Tp = void]\u2019:\n/usr/include/c++/9/bits/basic_string.h:121:8:\
    \   required by substitution of \u2018template<class _CharT, class _Traits, class\
    \ _Alloc> template<class _Tp, class _Res"
  stdout: ''
  timestamp: 1660096956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string str = \"\";\n    for(long i=0; i<n; ++i) str += std::to_string(i);\n\
    \    return str;\n}\nint main() {\n    auto candidate = string_sequence;\n   \
    \ assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"\
    ));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp_nv19chh: /tmp/tmp_nv19chh.cpp:11: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096957
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    // Loop while there are still numbers left to\
    \ print.\n    for(long i = 0; i < n; ++i) {\n        // Convert the number to\
    \ text.\n        s += std::to_string(i) + \" \";\n        // If there are still\
    \ numbers left.\n        if(i + 1 < n)\n            // Add a comma.\n        \
    \    s += \", \";\n    }\n    // Return the string.\n    return s;\n}\nint main()\
    \ {\n    auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"\
    ));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpgt_fgm51: /tmp/tmpgt_fgm51.cpp:20: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096957
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::ostringstream oss;\n    for (int i = 0; i < n; i++)\n       \
    \ oss << i;\n    return oss.str();\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp3mprxdsj: /tmp/tmp3mprxdsj.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096957
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n\tstd::string s;\n\tfor (int i = 1; i <= n; i++) {\n\t\ts += to_string(i)\
    \ + \" \";\n\t}\n\treturn s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp586kiilr.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmp586kiilr.cpp:7:8: error: \u2018to_string\u2019 was not\
    \ declared in this scope; did you mean \u2018std::__cxx11::to_string\u2019?\n\
    \    7 |   s += to_string(i) + \" \";\n      |        ^~~~~~~~~\n      |     \
    \   std::__cxx11::to_string\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp586kiilr.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6601:3:\
    \ note: \u2018std::__cxx11::to_string\u2019 declared here\n 6601 |   to_string(long\
    \ double __val)\n      |   ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660096956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n  std::stringstream ss;\n  for (long i=0; i<n; i++) {\n    ss << i <<\
    \ ' ';\n  }\n  return ss.str();\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp7oi5h2ar: /tmp/tmp7oi5h2ar.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096957
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    char ch;\n    for (int i = 0; i < n; i++) {\n\
    \        ch = i % 10 + '0';\n        s += ch;\n    }\n    return s;\n}\nint main()\
    \ {\n    auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"\
    ));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpcpy7pian: /tmp/tmpcpy7pian.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096957
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    ss << \"0 \";\n    for (long i = 0; i <\
    \ n; i++) {\n        ss << i << \" \";\n    }\n    return ss.str();\n}\nint main()\
    \ {\n    auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"\
    ));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpxy4un8vr: /tmp/tmpxy4un8vr.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096957
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string ret;\n    if (n == 0) {\n        ret = \"0\";\n    } else\
    \ {\n        do {\n            ret = (n % 10 == 0 ? ret + (n / 10 % 10) : ret)\
    \ + str(n % 10) + ',';\n        } while (n /= 10);\n    }\n    return ret;\n}\n\
    int main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5sknwls6.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmp5sknwls6.cpp:10:38: error: no match for \u2018operator+\u2019\
    \ (operand types are \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } and \u2018long int\u2019)\n   10 |             ret = (n % 10 == 0 ? ret + (n\
    \ / 10 % 10) : ret) + str(n % 10) + ',';\n      |                            \
    \      ~~~ ^ ~~~~~~~~~~~~~\n      |                                  |       \
    \      |\n      |                                  |             long int\n  \
    \    |                                  std::string {aka std::__cxx11::basic_string<char>}\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/specfun.h:45,\n                 from /usr/include/c++/9/cmath:1927,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmp5sknwls6.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:423:5:\
    \ note: candidate: \u2018template<class _Iterator> constexpr std::reverse_iterator<_Iterator>\
    \ std::operator+(typename std::reverse_iterator<_Iterator>::difference_type, const\
    \ std::reverse_iterator<_Iterator>&)\u2019\n  423 |     operator+(typename reverse_iterator<_Iterator>::difference_type\
    \ __n,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:423:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmp5sknwls6.cpp:10:52:\
    \ note:   mismatched types \u2018const std::reverse_iterator<_Iterator>\u2019\
    \ and \u2018long int\u2019\n   10 |             ret = (n % 10 == 0 ? ret + (n\
    \ / 10 % 10) : ret) + str(n % 10) + ',';\n      |                            \
    \                        ^\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/specfun.h:45,\n               \
    \  from /usr/include/c++/9/cmath:1927,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmp5sknwls6.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1216:5:\
    \ note: candidate: \u2018template<class _Iterator> constexpr std::move_i"
  stdout: ''
  timestamp: 1660096956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n   std::string str = \"\";\n   for (int i = 0; i <= n; i++) \n      str\
    \ += std::to_string(i);\n   return str;\n}\nint main() {\n    auto candidate =\
    \ string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpxyvv_8l9: /tmp/tmpxyvv_8l9.cpp:13: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096957
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    ss << \"0 1 2 3 4 5 6 7 8 9\";\n    long\
    \ m = 1;\n    for (long i = 2; i <= n; ++i) {\n        for (long j = 1; j <= n;\
    \ j *= 2) {\n            if (j > i) {\n                ss << m << \" \";\n   \
    \             m = 1;\n            }\n            if (j <= i) {\n             \
    \   m *= i;\n            }\n        }\n    }\n    return ss.str();\n}\nint main()\
    \ {\n    auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"\
    ));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmphqc4c6ns: /tmp/tmphqc4c6ns.cpp:23: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096957
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n  std::string str = \"\";\n  while (n-- > 0) str += (n%10) + \"\";\n \
    \ return str;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp9bpb0kle: /tmp/tmp9bpb0kle.cpp:11: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n  std::string s;\n  for(int i=0;i<n;i++) {\n    s += std::to_string(i)\
    \ + ' ';\n  }\n  return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp5m5d_62a: /tmp/tmp5m5d_62a.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096957
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string result;\n    for (long i = 1; i <= n; i++) {\n       \
    \ result += std::to_string(i) + \" \";\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"\
    ));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpqu94e6x8: /tmp/tmpqu94e6x8.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096957
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    if (n == 0)\n        return \"0\";\n    std::string str;\n    for\
    \ (int i = 0; i <= n; i++) {\n        str += std::to_string(i);\n        if (i\
    \ < n)\n            str += \" \";\n    }\n    return str;\n}\nint main() {\n \
    \   auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660096957
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string seq;\n    for(int i=0;i<=n;i++)\n        seq.push_back(i);\n\
    \    return seq;\n}\nint main() {\n    auto candidate = string_sequence;\n   \
    \ assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"\
    ));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpudmbmhhx: /tmp/tmpudmbmhhx.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096957
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n\tstd::string str = \"\";\n\tfor (long i = 0; i < n; i++) {\n\t\tstr +=\
    \ std::to_string(i) + \", \";\n\t}\n\treturn str;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpuy9xtwf9: /tmp/tmpuy9xtwf9.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096957
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n  std::vector<char> s;\n  std::string s;\n  for(long i = 1; i <= n; ++i)\n\
    \    s += std::to_string(i);\n  return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkl_umcif.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmpkl_umcif.cpp:6:15: error: conflicting declaration \u2018\
    std::string s\u2019\n    6 |   std::string s;\n      |               ^\n/tmp/tmpkl_umcif.cpp:5:21:\
    \ note: previous declaration as \u2018std::vector<char> s\u2019\n    5 |   std::vector<char>\
    \ s;\n      |                     ^\n/tmp/tmpkl_umcif.cpp:8:7: error: no match\
    \ for \u2018operator+=\u2019 (operand types are \u2018std::vector<char>\u2019\
    \ and \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    })\n    8 |     s += std::to_string(i);\n      |     ~~^~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpkl_umcif.cpp:9:10: error: could not convert \u2018s\u2019 from \u2018\
    std::vector<char>\u2019 to \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    }\n    9 |   return s;\n      |          ^\n      |          |\n      |      \
    \    std::vector<char>\n"
  stdout: ''
  timestamp: 1660096956
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n  // Create an empty string with the size of n\n  std::string s = \"\"\
    ;\n  for (long i = 0; i < n; i++) {\n    // Append i to the string\n    s += std::to_string(i);\n\
    \    // If i is odd, append a space and i\n    if (i & 1) s += \" \";\n  }\n \
    \ // Return the string\n  return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpuj6jftd9: /tmp/tmpuj6jftd9.cpp:18: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096957
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::ostringstream ss;\n    ss << \"{\" << 0 << '}';\n    for(int\
    \ i = 1; i < n; ++i) {\n        ss << \", \" << i;\n    }\n    return ss.str();\n\
    }\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpv9w7ch1b: /tmp/tmpv9w7ch1b.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096957
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n\tstd::string ans = \"\";\n\tfor (long i = 0; i < n; ++i)\n\t\tans +=\
    \ std::to_string(i);\n\treturn ans;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpy4p3v8ay: /tmp/tmpy4p3v8ay.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096957
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::ostringstream os;\n    os << \"{ \";\n    for (int i = 0; i <\
    \ n; ++i) {\n        if (i != 0) os << \" \"; // Add spaces between numbers, except\
    \ for the last one.\n        os << i;\n    }\n    os << \" }\";\n    return os.str();\n\
    }\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmppe4iwdgv: /tmp/tmppe4iwdgv.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096957
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    s.reserve(n);\n    for (int i = 0; i < n; i++)\n\
    \        s += to_string(i) + \" \";\n    return s;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppw5zd5s_.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmppw5zd5s_.cpp:8:14: error: \u2018to_string\u2019 was not\
    \ declared in this scope; did you mean \u2018std::__cxx11::to_string\u2019?\n\
    \    8 |         s += to_string(i) + \" \";\n      |              ^~~~~~~~~\n\
    \      |              std::__cxx11::to_string\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmppw5zd5s_.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6601:3:\
    \ note: \u2018std::__cxx11::to_string\u2019 declared here\n 6601 |   to_string(long\
    \ double __val)\n      |   ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660096958
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string result;\n    for (int i = 0; i <= n; i++) result += std::to_string(i)\
    \ + \" \";\n    return result;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmphl0g3voi: /tmp/tmphl0g3voi.cpp:11: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string str = \"\";\n    long i = 1;\n    while (i <= n) {\n \
    \       str += \" \" + std::to_string(i);\n        i++;\n    }\n    return str;\n\
    }\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpy312esjl: /tmp/tmpy312esjl.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::ostringstream os;\n    for (long i = 0; i < n; ++i)\n       \
    \ os << i;\n    return os.str();\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpmhmdidvr: /tmp/tmpmhmdidvr.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for (int i = 0; i < n; ++i) {\n        s += std::to_string(i)\
    \ + \"\\n\";\n    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpjnqkfyf2: /tmp/tmpjnqkfyf2.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    // Initialize string that will contain the result.\n    std::string\
    \ res = \"\";\n    // Set res to be empty string.\n    res.clear();\n    // While\
    \ the index number is not less than or equal to n,\n    while (n > 0) {\n    \
    \    // Add space character to the end of res and make it one long string by concatenating.\n\
    \        res += ' ';\n        // Add one to the index number.\n        n--;\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpho12bgph: /tmp/tmpho12bgph.cpp:20: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string str = std::to_string(n);\n    std::string str2(str.begin(),\
    \ str.end());\n    return str2;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpuzplo0qs: /tmp/tmpuzplo0qs.cpp:12: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s = \"\";\n    for (long i = 0; i <= n; ++i) {\n     \
    \   s += std::to_string(i) + \" \";\n    }\n    return s;\n}\nint main() {\n \
    \   auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpydaqoldg: /tmp/tmpydaqoldg.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n  if (n <= 0)\n    return \"0\";\n\n  std::string result = \"\";\n  for\
    \ (int i = 2; i <= n; i++)\n    result += std::to_string(i) + \" \";\n\n  return\
    \ result;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpmwjobo45: /tmp/tmpmwjobo45.cpp:17: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096958
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n  std::ostringstream os;\n  os << n;\n  std::string result = os.str();\n\
    \  // Remove the leading 0.\n  if (result.length() > 1 &&\n      result.front()\
    \ == '0' &&\n      result.back() == '.') {\n    result.pop_back();\n  }\n  for\
    \ (int i = 0; i < result.length(); i++) {\n    if (result.at(i) < '9' || result.at(i)\
    \ > '9') {\n      result += '0';\n    }\n  }\n  return result;\n}\nint main()\
    \ {\n    auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"\
    ));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660096964
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n  std::string s = \"\";\n  for (long i = 0; i < n; ++i) {\n    if (i %\
    \ 3 == 0 && i != 0) {\n      s += \" \";\n    }\n    s += std::to_string(static_cast<long\
    \ long>(i));\n  }\n  return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpgt2pkfm8: /tmp/tmpgt2pkfm8.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string result = \"\";\n    for (long i = 0; i < n; i++)\n   \
    \     result += std::to_string(i);\n    return result;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp_qh2sjwe: /tmp/tmp_qh2sjwe.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096959
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string res;\n    for(long i = 0; i < n; ++i)\n        res +=\
    \ to_string(i);\n    return res;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfa0ndbl_.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmpfa0ndbl_.cpp:7:16: error: \u2018to_string\u2019 was not\
    \ declared in this scope; did you mean \u2018std::__cxx11::to_string\u2019?\n\
    \    7 |         res += to_string(i);\n      |                ^~~~~~~~~\n    \
    \  |                std::__cxx11::to_string\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpfa0ndbl_.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6601:3:\
    \ note: \u2018std::__cxx11::to_string\u2019 declared here\n 6601 |   to_string(long\
    \ double __val)\n      |   ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660096959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    long i = (n-1);\n    ss << i;\n    for\
    \ (int j=i+1; j < n; j++) {\n        ss << ' ' << j;\n    }\n    return ss.str();\n\
    }\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmps1n_ewqw: /tmp/tmps1n_ewqw.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    assert(n >= 0);\n    std::string result;\n    for (long i = 0; i <\
    \ n; i++) {\n        if (i > 0) {\n            result += \" \";\n        }\n \
    \       result += std::to_string(i);\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"\
    ));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp7c4bdn7x: /tmp/tmp7c4bdn7x.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096960
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    assert(n >= 0);\n    long arr[n];\n    for (long i = 0; i < n; ++i)\n\
    \        arr[i] = i;\n    std::string result;\n    for (long i = 0; i <= n; ++i)\n\
    \        result += to_string(arr[i]);\n    return result;\n}\nint main() {\n \
    \   auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptba66w6b.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmptba66w6b.cpp:11:19: error: \u2018to_string\u2019 was not\
    \ declared in this scope; did you mean \u2018std::__cxx11::to_string\u2019?\n\
    \   11 |         result += to_string(arr[i]);\n      |                   ^~~~~~~~~\n\
    \      |                   std::__cxx11::to_string\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmptba66w6b.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6601:3:\
    \ note: \u2018std::__cxx11::to_string\u2019 declared here\n 6601 |   to_string(long\
    \ double __val)\n      |   ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660096959
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n  // your code goes here\n  std::vector<int> seq;\n  std::string s;\n\
    \  for (int i = 0; i < n; i++) {\n    s.push_back(std::to_string(i));\n  }\n \
    \ return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6neq1vxx.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmp6neq1vxx.cpp:9:31: error: cannot convert \u2018std::string\u2019\
    \ {aka \u2018std::__cxx11::basic_string<char>\u2019} to \u2018char\u2019\n   \
    \ 9 |     s.push_back(std::to_string(i));\n      |                 ~~~~~~~~~~~~~~^~~\n\
    \      |                               |\n      |                            \
    \   std::string {aka std::__cxx11::basic_string<char>}\nIn file included from\
    \ /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp6neq1vxx.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:1353:24: note:\
    \   initializing argument 1 of \u2018void std::__cxx11::basic_string<_CharT, _Traits,\
    \ _Alloc>::push_back(_CharT) [with _CharT = char; _Traits = std::char_traits<char>;\
    \ _Alloc = std::allocator<char>]\u2019\n 1353 |       push_back(_CharT __c)\n\
    \      |                 ~~~~~~~^~~\n"
  stdout: ''
  timestamp: 1660096959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string str = \"\";\n    for (int i = 0; i < n; i++) {\n     \
    \   str += std::to_string(i);\n    }\n    return str;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp7fwp4_wz: /tmp/tmp7fwp4_wz.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n  std::ostringstream s;\n  for (long i = 0; i < n; i++) {\n    s << i;\n\
    \  }\n  return s.str();\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp12oq0r5n: /tmp/tmp12oq0r5n.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n\tlong start = 0;\n\tstd::string s;\n\twhile(n-- > 0)\n\t\ts += std::to_string(start++);\n\
    \treturn s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzeuol9t2: /tmp/tmpzeuol9t2.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096959
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    long start = 0;\n    long count = 0;\n\
    \    long temp = 0;\n    for (long i = 1; i <= n; i++) {\n        temp = i * i;\n\
    \        if (temp < n) {\n            ss.seekp(start);\n            ss << temp;\n\
    \            start = start + ss.str().length() + 1;\n            count = count\
    \ + 1;\n        } else {\n            ss.seekp(start);\n            ss.str() <<\
    \ temp;\n            start++;\n        }\n    }\n    ss.seekp(start);\n    ss\
    \ << temp;\n    return ss.str();\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpm8428gjm.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmpm8428gjm.cpp:18:22: error: no match for \u2018operator<<\u2019\
    \ (operand types are \u2018std::__cxx11::basic_stringstream<char>::__string_type\u2019\
    \ {aka \u2018std::__cxx11::basic_string<char>\u2019} and \u2018long int\u2019\
    )\n   18 |             ss.str() << temp;\n      |             ~~~~~~~~ ^~ ~~~~\n\
    \      |                   |     |\n      |                   |     long int\n\
    \      |                   std::__cxx11::basic_stringstream<char>::__string_type\
    \ {aka std::__cxx11::basic_string<char>}\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpm8428gjm.cpp:2:\n/usr/include/c++/9/bits/regex.h:1553:5:\
    \ note: candidate: \u2018template<class _Ch_type, class _Ch_traits, class _Bi_iter>\
    \ std::basic_ostream<_CharT, _Traits>& std::__cxx11::operator<<(std::basic_ostream<_CharT,\
    \ _Traits>&, const std::__cxx11::sub_match<_Bi_iter>&)\u2019\n 1553 |     operator<<(basic_ostream<_Ch_type,\
    \ _Ch_traits>& __os,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1553:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpm8428gjm.cpp:18:25:\
    \ note:   \u2018std::__cxx11::basic_stringstream<char>::__string_type\u2019 {aka\
    \ \u2018std::__cxx11::basic_string<char>\u2019} is not derived from \u2018std::basic_ostream<_CharT,\
    \ _Traits>\u2019\n   18 |             ss.str() << temp;\n      |             \
    \            ^~~~\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:45,\n\
    \                 from /tmp/tmpm8428gjm.cpp:2:\n/usr/include/c++/9/cstddef:130:5:\
    \ note: candidate: \u2018template<class _IntegerType> constexpr std::__byte_op_t<_IntegerType>\
    \ std::operator<<(std::byte, _IntegerType)\u2019\n  130 |     operator<<(byte\
    \ __b, _IntegerType __shift) noexcept\n      |     ^~~~~~~~\n/usr/include/c++/9/cstddef:130:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpm8428gjm.cpp:18:19:\
    \ note:   cannot convert \u2018std::__cxx11::basic_stringstream<_CharT, _Traits,\
    \ _Alloc>::str() const "
  stdout: ''
  timestamp: 1660096959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n\tlong s = 1;\n\tstd::string ans = \"\";\n\tfor (long i = 0; i < n; i++)\
    \ {\n\t\tlong r = sqrt(s * 2);\n\t\ts = s * 2;\n\t\tans += std::to_string(s);\n\
    \t}\n\treturn ans;\n}\nint main() {\n    auto candidate = string_sequence;\n \
    \   assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp0ttcqurg: /tmp/tmp0ttcqurg.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096960
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n  std::string s;\n  assert(n >= 0 && \"n must be positive\");\n  if (n\
    \ > 0) {\n    s.assign(std::to_string(n), ' ');\n    s += std::to_string(n+1);\n\
    \  }\n  return s;\n}\nint main() {\n    auto candidate = string_sequence;\n  \
    \  assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"\
    ));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp_axw5o6u: /tmp/tmp_axw5o6u.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n  std::ostringstream os;\n  for (int i = 1; i <= n; ++i) {\n    os.str(\"\
    \"); // clear the contents of the string stream\n    for (int j = 0; j < i; ++j)\n\
    \      os << j;\n    os.flush();\n    os.str(\"\");\n  }\n  return os.str();\n\
    }\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmprqtg7dnz: /tmp/tmprqtg7dnz.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n  std::string ans = \"\";\n  for (long i = 0; i < n; i++) {\n    ans +=\
    \ std::to_string(i);\n  }\n  return ans;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpoxiuwvgp: /tmp/tmpoxiuwvgp.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for (long i = 0; i < n; ++i) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpxqj0debi: /tmp/tmpxqj0debi.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n  std::string s(n, '0');\n  for (long i = 0; i < n; ++i) s[i+1 - n] =\
    \ '1';\n  return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpodi986xe: /tmp/tmpodi986xe.cpp:11: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string seq;\n    for(int i = 0; i<n; i++)\n        seq += std::to_string(i);\n\
    \    return seq;\n}\nint main() {\n    auto candidate = string_sequence;\n   \
    \ assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"\
    ));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp2vb_gvbt: /tmp/tmp2vb_gvbt.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096959
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n  std::vector<std::bitset<n>> bits(n);\n  std::string result;\n  for (long\
    \ i = 0; i < n; ++i) \n    result += to_string(i);\n  for (long i = 0; i < n;\
    \ ++i) \n    result += std::to_string(bits[i]);\n  return result;\n}\nint main()\
    \ {\n    auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"\
    ));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0peuxp82.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmp0peuxp82.cpp:5:27: error: \u2018n\u2019 is not a constant\
    \ expression\n    5 |   std::vector<std::bitset<n>> bits(n);\n      |        \
    \                   ^\n/tmp/tmp0peuxp82.cpp:5:27: note: in template argument for\
    \ type \u2018long unsigned int\u2019\n/tmp/tmp0peuxp82.cpp:5:28: error: template\
    \ argument 1 is invalid\n    5 |   std::vector<std::bitset<n>> bits(n);\n    \
    \  |                            ^~\n/tmp/tmp0peuxp82.cpp:5:28: error: template\
    \ argument 2 is invalid\n/tmp/tmp0peuxp82.cpp:8:15: error: \u2018to_string\u2019\
    \ was not declared in this scope; did you mean \u2018std::__cxx11::to_string\u2019\
    ?\n    8 |     result += to_string(i);\n      |               ^~~~~~~~~\n    \
    \  |               std::__cxx11::to_string\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp0peuxp82.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6601:3:\
    \ note: \u2018std::__cxx11::to_string\u2019 declared here\n 6601 |   to_string(long\
    \ double __val)\n      |   ^~~~~~~~~\n/tmp/tmp0peuxp82.cpp:10:36: error: invalid\
    \ types \u2018int[long int]\u2019 for array subscript\n   10 |     result += std::to_string(bits[i]);\n\
    \      |                                    ^\n"
  stdout: ''
  timestamp: 1660096959
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string result;\n    while (n-- > 0) {\n        result += to_string(n);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0huuv8ew.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmp0huuv8ew.cpp:7:19: error: \u2018to_string\u2019 was not\
    \ declared in this scope; did you mean \u2018std::__cxx11::to_string\u2019?\n\
    \    7 |         result += to_string(n);\n      |                   ^~~~~~~~~\n\
    \      |                   std::__cxx11::to_string\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp0huuv8ew.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6601:3:\
    \ note: \u2018std::__cxx11::to_string\u2019 declared here\n 6601 |   to_string(long\
    \ double __val)\n      |   ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660096959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n  std::ostringstream ss;\n  for (int i = 1; i <= n; i++) ss << i;\n  return\
    \ ss.str();\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpc2wk0_oz: /tmp/tmpc2wk0_oz.cpp:11: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096960
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n  std::ostringstream ss;\n  ss << \"[\";\n  for (long i = 0; i < n; ++i)\
    \ {\n    if (i != 0)\n      ss << \", \";\n    ss << i;\n  }\n  ss << \"]\";\n\
    \  return ss.str();\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpgg4jisw_: /tmp/tmpgg4jisw_.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096960
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::ostringstream os;\n    for (long i = 0; i < n; ++i) {\n     \
    \   os << i << \" \";\n    }\n    return os.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpm2mwbgue: /tmp/tmpm2mwbgue.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    s.resize(2 * n);\n    for (long i = 0; i < n;\
    \ i++)\n        std::iota(s.begin() + i, s.begin() + (i + 1), 0);\n    return\
    \ s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpw0fkeun0: /tmp/tmpw0fkeun0.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096960
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n  std::string s;\n  for (long i = 0; i < n; ++i) s += std::to_string(i\
    \ - n) + std::string(n);\n  return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdsx5i4vm.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmpdsx5i4vm.cpp:6:74: error: no matching function for call\
    \ to \u2018std::__cxx11::basic_string<char>::basic_string(long int&)\u2019\n \
    \   6 |   for (long i = 0; i < n; ++i) s += std::to_string(i - n) + std::string(n);\n\
    \      |                                                                     \
    \     ^\nIn file included from /usr/include/c++/9/string:55,\n               \
    \  from /usr/include/c++/9/bits/locale_classes.h:40,\n                 from /usr/include/c++/9/bits/ios_base.h:41,\n\
    \                 from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpdsx5i4vm.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:654:2: note:\
    \ candidate: \u2018template<class _Tp, class> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::basic_string(const _Tp&, const _Alloc&)\u2019\n  654 |  basic_string(const\
    \ _Tp& __t, const _Alloc& __a = _Alloc())\n      |  ^~~~~~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:654:2:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/9/bits/move.h:55,\n                 from /usr/include/c++/9/bits/stl_pair.h:59,\n\
    \                 from /usr/include/c++/9/bits/stl_algobase.h:64,\n          \
    \       from /usr/include/c++/9/bits/specfun.h:45,\n                 from /usr/include/c++/9/cmath:1927,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmpdsx5i4vm.cpp:2:\n/usr/include/c++/9/type_traits:\
    \ In substitution of \u2018template<bool _Cond, class _Tp> using enable_if_t =\
    \ typename std::enable_if::type [with bool _Cond = std::integral_constant<bool,\
    \ false>::value; _Tp = void]\u2019:\n/usr/include/c++/9/bits/basic_string.h:121:8:\
    \   required by substitution of \u2018template<clas"
  stdout: ''
  timestamp: 1660096959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n  // We initialize a string with n spaces\n  std::string result;\n  result.reserve(2\
    \ * n);\n\n  for (long i = 0; i < n; ++i)\n    result += ' ';\n\n  return result;\n\
    }\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpwedg7hdj: /tmp/tmpwedg7hdj.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096960
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n\tstd::string s = \"\";\n\tlong i = 1;\n\twhile (i <= n) {\n\t\ts += std::to_string(i);\n\
    \t\t++i;\n\t}\n\treturn s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpmrw9ttq0: /tmp/tmpmrw9ttq0.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096960
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s = \"\";\n    long i;\n    for (i = 0; i < n; i++) {\n\
    \        s += std::to_string(i) + \" \";\n    }\n    return s;\n}\nint main()\
    \ {\n    auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"\
    ));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpquu8czlt: /tmp/tmpquu8czlt.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for (int i = 1; i <= n; i++) {\n        s += std::to_string(i);\n\
    \        if (i < n) s += \" \";\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpz0yb5zj2: /tmp/tmpz0yb5zj2.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    // your code here\n    // To return an empty string, return an empty\
    \ string.\n    std::string s;\n    std::ostringstream os;\n    for ( long i =\
    \ 0; i < n; i++ ) {\n        os << i << ' ';\n    }\n    s = os.str();\n    return\
    \ s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpwkq3rpwd: /tmp/tmpwkq3rpwd.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096960
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n  std::string s;\n  std::string temp;\n  long temp = n;\n  temp--;\n \
    \ while (temp != 0) {\n    temp = temp / 10;\n    s.insert(0, (char) ('0' + temp\
    \ % 10));\n  }\n  return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpezikmeik.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmpezikmeik.cpp:7:8: error: conflicting declaration \u2018\
    long int temp\u2019\n    7 |   long temp = n;\n      |        ^~~~\n/tmp/tmpezikmeik.cpp:6:15:\
    \ note: previous declaration as \u2018std::string temp\u2019\n    6 |   std::string\
    \ temp;\n      |               ^~~~\n/tmp/tmpezikmeik.cpp:8:7: error: no \u2018\
    operator--(int)\u2019 declared for postfix \u2018--\u2019 [-fpermissive]\n   \
    \ 8 |   temp--;\n      |   ~~~~^~\n/tmp/tmpezikmeik.cpp:9:15: error: no match\
    \ for \u2018operator!=\u2019 (operand types are \u2018std::string\u2019 {aka \u2018\
    std::__cxx11::basic_string<char>\u2019} and \u2018int\u2019)\n    9 |   while\
    \ (temp != 0) {\n      |          ~~~~ ^~ ~\n      |          |       |\n    \
    \  |          |       int\n      |          std::string {aka std::__cxx11::basic_string<char>}\n\
    In file included from /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpezikmeik.cpp:2:\n/usr/include/c++/9/bits/regex.h:1037:5:\
    \ note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator!=(const\
    \ std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\
    \n 1037 |     operator!=(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>&\
    \ __rhs)\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/regex.h:1037:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpezikmeik.cpp:9:18:\
    \ note:   \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   \
    \ 9 |   while (temp != 0) {\n      |                  ^\nIn file included from\
    \ /usr/include/c++/9/regex:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmpezikmeik.cpp:2:\n/usr/include/c++/9/bits/regex.h:1112:5:\
    \ note: candidate: \u2018template<class _Bi_iter, class _Ch_traits, class _Ch_alloc>\
    \ bool std::__cxx11::operator!=(std::__cxx11::__sub_match_string<_Bi_iter, _Ch_traits,\
    \ _Ch_alloc>&, const std::__cxx11::sub_match<_BiIter>&)"
  stdout: ''
  timestamp: 1660096959
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;++i)\n    {\n        s=s+to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2kxqbf4p.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmp2kxqbf4p.cpp:8:13: error: \u2018to_string\u2019 was not\
    \ declared in this scope; did you mean \u2018std::__cxx11::to_string\u2019?\n\
    \    8 |         s=s+to_string(i);\n      |             ^~~~~~~~~\n      |   \
    \          std::__cxx11::to_string\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp2kxqbf4p.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6601:3:\
    \ note: \u2018std::__cxx11::to_string\u2019 declared here\n 6601 |   to_string(long\
    \ double __val)\n      |   ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660096959
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s = \"\";\n    for (int i = 0; i < n; i++)\n        s\
    \ += std::to_string(i);\n    return s;\n}\nint main() {\n    auto candidate =\
    \ string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpful7pg_d: /tmp/tmpful7pg_d.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096960
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n\tlong result = \"\";\n\tfor(long i = 0;i < n;i++) {\n\t\tresult += std::to_string(i);\n\
    \t}\n\treturn result;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzczxv_wa.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmpzczxv_wa.cpp:5:16: error: invalid conversion from \u2018\
    const char*\u2019 to \u2018long int\u2019 [-fpermissive]\n    5 |  long result\
    \ = \"\";\n      |                ^~\n      |                |\n      |      \
    \          const char*\n/tmp/tmpzczxv_wa.cpp:7:10: error: no match for \u2018\
    operator+=\u2019 (operand types are \u2018long int\u2019 and \u2018std::string\u2019\
    \ {aka \u2018std::__cxx11::basic_string<char>\u2019})\n    7 |   result += std::to_string(i);\n\
    \      |   ~~~~~~~^~~~~~~~~~~~~~~~~~~~\n/tmp/tmpzczxv_wa.cpp:9:9: error: could\
    \ not convert \u2018result\u2019 from \u2018long int\u2019 to \u2018std::string\u2019\
    \ {aka \u2018std::__cxx11::basic_string<char>\u2019}\n    9 |  return result;\n\
    \      |         ^~~~~~\n      |         |\n      |         long int\n"
  stdout: ''
  timestamp: 1660096960
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n  if (n < 10)\n    return std::to_string(n);\n  std::string s;\n  s.reserve(10);\n\
    \  while (n > 0) {\n    s += std::to_string(n%10) + ' ';\n    n /= 10;\n  }\n\
    \  return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpg_xs5vfm: /tmp/tmpg_xs5vfm.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096960
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    long ret = 0;\n    while(n > 0) {\n        ret++;\n        n--;\n\
    \    }\n    return std::to_string(ret);\n}\nint main() {\n    auto candidate =\
    \ string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpl3qymgna: /tmp/tmpl3qymgna.cpp:15: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096960
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string ret;\n    long start=0;\n    while(start<n) {\n      \
    \  ret+=to_string(start);\n        start+=1;\n    }\n    return ret;\n}\nint main()\
    \ {\n    auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"\
    ));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf8il87pw.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmpf8il87pw.cpp:8:14: error: \u2018to_string\u2019 was not\
    \ declared in this scope; did you mean \u2018std::__cxx11::to_string\u2019?\n\
    \    8 |         ret+=to_string(start);\n      |              ^~~~~~~~~\n    \
    \  |              std::__cxx11::to_string\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpf8il87pw.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6601:3:\
    \ note: \u2018std::__cxx11::to_string\u2019 declared here\n 6601 |   to_string(long\
    \ double __val)\n      |   ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660096960
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    // Using stringstream to convert the number in to string and output\
    \ it.\n    std::stringstream ss;\n    long temp = n;\n    while(temp) {\n    \
    \    ss.seekp((std::ios_base::beg - 1) + ((std::ios_base::cur) - 1));\n      \
    \  ss.str(\"\");\n        ss.clear();\n        ss.seekp((std::ios_base::beg -\
    \ 1) + ((std::ios_base::cur) - 1));\n        ss.str(\"\");\n        ss.clear();\n\
    \        ss.seekp((std::ios_base::beg - 1) + ((std::ios_base::cur) - 1));\n  \
    \      ss.str(\"\");\n        ss.clear();\n        ss.seekp((std::ios_base::beg\
    \ - 1) + ((std::ios_base::cur) - 1));\n        ss.str(\"\");\n        ss.clear();\n\
    \        ss.seekp((std::ios_base::beg - 1) + ((std::ios_base::cur) - 1));\n  \
    \      ss.str(\"\");\n        ss.clear();\n        ss.seekp((std::ios_base::beg\
    \ - 1) + ((std::ios_base::cur) - 1));\n        ss.str(\"\");\n        ss.clear();\n\
    \        temp--;\n    }\n    return ss.str();\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpfe2xgv7x: /tmp/tmpfe2xgv7x.cpp:33: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096961
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::ostringstream os;\n    for (long i = 0; i <n; i++) {\n      \
    \  os << \" \" << i;\n    }\n    return os.str();\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpcl6h7z2c: /tmp/tmpcl6h7z2c.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096961
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string str = \"\";\n    for(int i=0;i<n;i++) {\n        str +=\
    \ std::to_string(i);\n        str += \" \";\n    }\n    return str;\n}\nint main()\
    \ {\n    auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"\
    ));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzrcpcq83: /tmp/tmpzrcpcq83.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n  if (n == 0)\n    return \"\";\n  string str;\n  if (n > 0) {\n    str.append(\"\
    \ \");\n    str.append(to_string(n - 1));\n  }\n  str.append(to_string(n - 1));\n\
    \  return str;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3dfrmyxv.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmp3dfrmyxv.cpp:7:3: error: \u2018string\u2019 was not declared\
    \ in this scope\n    7 |   string str;\n      |   ^~~~~~\n/tmp/tmp3dfrmyxv.cpp:7:3:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/iosfwd:39,\n\
    \                 from /usr/include/c++/9/ios:38,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp3dfrmyxv.cpp:2:\n/usr/include/c++/9/bits/stringfwd.h:79:33: note:  \
    \ \u2018std::string\u2019\n   79 |   typedef basic_string<char>    string;\n \
    \     |                                 ^~~~~~\nIn file included from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp3dfrmyxv.cpp:2:\n/usr/include/c++/9/string:67:11: note:   \u2018std::pmr::string\u2019\
    \n   67 |     using string    = basic_string<char>;\n      |           ^~~~~~\n\
    /tmp/tmp3dfrmyxv.cpp:9:5: error: \u2018str\u2019 was not declared in this scope;\
    \ did you mean \u2018std\u2019?\n    9 |     str.append(\" \");\n      |     ^~~\n\
    \      |     std\n/tmp/tmp3dfrmyxv.cpp:10:16: error: \u2018to_string\u2019 was\
    \ not declared in this scope; did you mean \u2018std::__cxx11::to_string\u2019\
    ?\n   10 |     str.append(to_string(n - 1));\n      |                ^~~~~~~~~\n\
    \      |                std::__cxx11::to_string\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         f"
  stdout: ''
  timestamp: 1660096961
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n  char s[100];\n  sprintf(s, \"%ld\", n);\n  return s;\n}\nint main()\
    \ {\n    auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"\
    ));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp_le27mux: /tmp/tmp_le27mux.cpp:12: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096961
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    ss << \"0\";\n    if (n < 0)\n        ss\
    \ << \"1\";\n    long i = 1;\n    long k = n;\n    while (i != k) {\n        ss\
    \ << i << \" \";\n        k = n / i;\n        i += 1;\n    }\n    return ss.str();\n\
    }\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660096966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string ans = \"0123456789\";\n    for (int i = 0; i < n; ++i)\
    \ {\n        ans += ans.substr(ans.size() - 1, 1);\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpuzjpa6bp: /tmp/tmpuzjpa6bp.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096962
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s = \"\";\n    for (long i = 0; i < n; i++) {\n      \
    \  s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpjzaa7k1z: /tmp/tmpjzaa7k1z.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096962
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n   std::string s;\n   for(long i=0; i<n; i++) s += std::to_string(i);\n\
    \   return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpxr5eyu21: /tmp/tmpxr5eyu21.cpp:11: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096962
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n  std::string s;\n  while (n != 0) {\n    s += '0' + n % 10;\n    n /=\
    \ 10;\n  }\n  return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp_wc_akdy: /tmp/tmp_wc_akdy.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096962
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string res;\n    for(long i = 0; i <= n; i++) {\n        res\
    \ += std::to_string(i) + \" \";\n    }\n    return res;\n}\nint main() {\n   \
    \ auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpkds7ttjq: /tmp/tmpkds7ttjq.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096962
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++) s+=std::to_string(i);\n \
    \   return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpkdcyg2y1: /tmp/tmpkdcyg2y1.cpp:11: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096962
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n  std::string s;\n  for (long i = n; i--; ) {\n    s += std::to_string(i);\n\
    \  }\n  return s;\n}\nint main() {\n    auto candidate = string_sequence;\n  \
    \  assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"\
    ));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp6_vev52x: /tmp/tmp6_vev52x.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096962
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n  std::string s;\n  while (n>0) {\n    s.push_back(n%10 + '0');\n    n\
    \ = n/10;\n  }\n  return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpajgudlmz: /tmp/tmpajgudlmz.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096962
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n   std::stringstream ss;\n   long digits = n;\n   long place = 0;\n  \
    \ while (digits > 0) {\n      ss << digits;\n      if (digits % 10 > 0) {\n  \
    \       ss << \" \";\n      }\n      digits /= 10;\n      ++place;\n   }\n   if\
    \ (place > 0) {\n      ss << place;\n   }\n   return ss.str();\n}\nint main()\
    \ {\n    auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"\
    ));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp_mmw75e4: /tmp/tmp_mmw75e4.cpp:23: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096962
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s = \"\";\n    int i;\n    for (i = 1; i <= n; i++) {\n\
    \        s += std::to_string(i);\n        if (i != n) s += \" \";\n    }\n   \
    \ return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpdt1illey: /tmp/tmpdt1illey.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096962
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n  long i=0;\n  std::string s;\n  while(i < n) {\n    s.push_back((char)(i+48));\n\
    \    i++;\n  }\n  return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp6aypngv4: /tmp/tmp6aypngv4.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096962
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n  std::string s = \"\";\n  for (long i = 0; i <= n; i++) s += std::to_string(i);\n\
    \  return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp0b1kwwkz: /tmp/tmp0b1kwwkz.cpp:12: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096962
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::ostringstream os;\n    for(long i = 0; i <= n; ++i) os << i <<\
    \ \" \";\n    return os.str();\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpl0lud49c: /tmp/tmpl0lud49c.cpp:11: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++){\n        s+=to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyrxs158d.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmpyrxs158d.cpp:7:12: error: \u2018to_string\u2019 was not\
    \ declared in this scope; did you mean \u2018std::__cxx11::to_string\u2019?\n\
    \    7 |         s+=to_string(i);\n      |            ^~~~~~~~~\n      |     \
    \       std::__cxx11::to_string\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpyrxs158d.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6601:3:\
    \ note: \u2018std::__cxx11::to_string\u2019 declared here\n 6601 |   to_string(long\
    \ double __val)\n      |   ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660096961
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    s.reserve(n);\n    for(long i = 0; i<n;i++)\n\
    \        s+=(std::to_string(i))+\" \";\n    return s;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpq7ukx_18: /tmp/tmpq7ukx_18.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096962
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    long a = 0;\n    ss << a;\n    for (long\
    \ i = 2; i < n; i++) {\n        a = a + i;\n        ss << ' ' << a;\n    }\n \
    \   return ss.str();\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpxq3nqw7b: /tmp/tmpxq3nqw7b.cpp:17: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096962
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n  std::ostringstream ss;\n  for (int i = 0; i <= n; ++i)\n    ss << i\
    \ << \" \";\n  return ss.str();\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp8wgsd0r2: /tmp/tmp8wgsd0r2.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096962
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; ++i) ss << i <<\
    \ \" \";\n    return ss.str();\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmphqh8vm8q: /tmp/tmphqh8vm8q.cpp:11: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096962
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n   std::string s;\n   for(int i=0;i<n;++i)\n      s.append(\" \"+std::to_string(i));\n\
    \   return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp1d0r3fkh: /tmp/tmp1d0r3fkh.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096962
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n   std::ostringstream os;\n   long m = 1;\n   while (n--) {\n      os\
    \ << m;\n      m *= 10;\n   }\n   return os.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpq90i9z5z: /tmp/tmpq90i9z5z.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string str;\n    for(int i = 0; i < (n - 1); i++){\n        str\
    \ += to_string(i) + \" \";\n    }\n    str += to_string(n - 1);\n    return str;\n\
    }\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpte6wgvxi.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmpte6wgvxi.cpp:7:16: error: \u2018to_string\u2019 was not\
    \ declared in this scope; did you mean \u2018std::__cxx11::to_string\u2019?\n\
    \    7 |         str += to_string(i) + \" \";\n      |                ^~~~~~~~~\n\
    \      |                std::__cxx11::to_string\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpte6wgvxi.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6601:3:\
    \ note: \u2018std::__cxx11::to_string\u2019 declared here\n 6601 |   to_string(long\
    \ double __val)\n      |   ^~~~~~~~~\n/tmp/tmpte6wgvxi.cpp:9:12: error: \u2018\
    to_string\u2019 was not declared in this scope; did you mean \u2018std::__cxx11::to_string\u2019\
    ?\n    9 |     str += to_string(n - 1);\n      |            ^~~~~~~~~\n      |\
    \            std::__cxx11::to_string\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpte6wgvxi.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6601:3:\
    \ note: \u2018std::__cxx11::to_string\u2019 declared here\n 6601 |   to_string(long\
    \ double __val)\n      |   ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660096961
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n  std::string s;\n  for(int i = 0; i <= n; i++) s += std::to_string(i);\n\
    \  return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpfj0wqs0r: /tmp/tmpfj0wqs0r.cpp:12: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096962
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n  std::string seq;\n  while (n-- > 0) {\n    seq.push_back((n%10) + '0');\n\
    \    n /= 10;\n  }\n  return seq;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpcio7m_ge: /tmp/tmpcio7m_ge.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096962
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string result;\n    long curr = 0, mod = 1;\n    while ( curr\
    \ < n ) {\n        result += std::to_string(curr++);\n        mod *= 10;\n   \
    \     if ( mod >= n ) result += \"0\"; // If mod > n, the last digit is 0.\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp08y5qs16: /tmp/tmp08y5qs16.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096963
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n   std::string s;\n   for (long i = 0; i < n; i++)\n      s += std::to_string(i);\n\
    \   return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpapei0im2: /tmp/tmpapei0im2.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    std::for_each(cbegin(n), cend(n), std::back_inserter(s));\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpny8f97yl.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmpny8f97yl.cpp:6:19: error: \u2018cbegin\u2019 was not declared\
    \ in this scope; did you mean \u2018std::cbegin\u2019?\n    6 |     std::for_each(cbegin(n),\
    \ cend(n), std::back_inserter(s));\n      |                   ^~~~~~\n      |\
    \                   std::cbegin\nIn file included from /usr/include/c++/9/string:54,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpny8f97yl.cpp:2:\n/usr/include/c++/9/bits/range_access.h:116:5:\
    \ note: \u2018std::cbegin\u2019 declared here\n  116 |     cbegin(const _Container&\
    \ __cont) noexcept(noexcept(std::begin(__cont)))\n      |     ^~~~~~\n/tmp/tmpny8f97yl.cpp:6:30:\
    \ error: \u2018cend\u2019 was not declared in this scope; did you mean \u2018\
    std::cend\u2019?\n    6 |     std::for_each(cbegin(n), cend(n), std::back_inserter(s));\n\
    \      |                              ^~~~\n      |                          \
    \    std::cend\nIn file included from /usr/include/c++/9/string:54,\n        \
    \         from /usr/include/c++/9/bits/locale_classes.h:40,\n                \
    \ from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpny8f97yl.cpp:2:\n/usr/include/c++/9/bits/range_access.h:127:5:\
    \ note: \u2018std::cend\u2019 declared here\n  127 |     cend(const _Container&\
    \ __cont) noexcept(no"
  stdout: ''
  timestamp: 1660096962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string num = \"\";\n    long k = n;\n    while(k > 0) {\n   \
    \     k = k >> 1;\n        num = num + to_string(k);\n    }\n    return num;\n\
    }\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4ntj5kz6.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmp4ntj5kz6.cpp:9:21: error: \u2018to_string\u2019 was not\
    \ declared in this scope; did you mean \u2018std::__cxx11::to_string\u2019?\n\
    \    9 |         num = num + to_string(k);\n      |                     ^~~~~~~~~\n\
    \      |                     std::__cxx11::to_string\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp4ntj5kz6.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6601:3:\
    \ note: \u2018std::__cxx11::to_string\u2019 declared here\n 6601 |   to_string(long\
    \ double __val)\n      |   ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660096962
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s.push_back((char)('a'\
    \ + i));\n    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmptg31hgfi: /tmp/tmptg31hgfi.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096963
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string seq;\n    for (long i = 0; i <= n; ++i) {\n        seq\
    \ += std::to_string(i);\n    }\n    return seq;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpklqzevj5: /tmp/tmpklqzevj5.cpp:14: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096963
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string ans = \"\";\n    for (int i = 0; i < n; i++)\n       \
    \ ans += std::to_string(i) + \" \";\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp35tk6twv: /tmp/tmp35tk6twv.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096962
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n\tif(n == 0) return \"\";\n\tstd::string out(to_string(n));\n\twhile(n--\
    \ > 0) out += \" \";\n\treturn out;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpm7fb1qbn.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmpm7fb1qbn.cpp:6:18: error: \u2018to_string\u2019 was not\
    \ declared in this scope; did you mean \u2018std::__cxx11::to_string\u2019?\n\
    \    6 |  std::string out(to_string(n));\n      |                  ^~~~~~~~~\n\
    \      |                  std::__cxx11::to_string\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpm7fb1qbn.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6601:3:\
    \ note: \u2018std::__cxx11::to_string\u2019 declared here\n 6601 |   to_string(long\
    \ double __val)\n      |   ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660096962
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n\tstd::ostringstream os;\n\tfor (long i = 0; i <= n; ++i)\n\t\tos << i;\n\
    \treturn os.str();\n}\nint main() {\n    auto candidate = string_sequence;\n \
    \   assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpexmpa_47: /tmp/tmpexmpa_47.cpp:13: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096963
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string result(n, '\\0');\n    for (int i = 0; i < n; i++)\n \
    \       std::cout << i << \": \" << result[i] << \" \";\n    return result + n;\n\
    }\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpan39lrah.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmpan39lrah.cpp:8:19: error: no match for \u2018operator+\u2019\
    \ (operand types are \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } and \u2018long int\u2019)\n    8 |     return result + n;\n      |         \
    \   ~~~~~~ ^ ~\n      |            |        |\n      |            |        long\
    \ int\n      |            std::string {aka std::__cxx11::basic_string<char>}\n\
    In file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n           \
    \      from /usr/include/c++/9/bits/specfun.h:45,\n                 from /usr/include/c++/9/cmath:1927,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmpan39lrah.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:423:5:\
    \ note: candidate: \u2018template<class _Iterator> constexpr std::reverse_iterator<_Iterator>\
    \ std::operator+(typename std::reverse_iterator<_Iterator>::difference_type, const\
    \ std::reverse_iterator<_Iterator>&)\u2019\n  423 |     operator+(typename reverse_iterator<_Iterator>::difference_type\
    \ __n,\n      |     ^~~~~~~~\n/usr/include/c++/9/bits/stl_iterator.h:423:5: note:\
    \   template argument deduction/substitution failed:\n/tmp/tmpan39lrah.cpp:8:21:\
    \ note:   mismatched types \u2018const std::reverse_iterator<_Iterator>\u2019\
    \ and \u2018long int\u2019\n    8 |     return result + n;\n      |          \
    \           ^\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:67,\n\
    \                 from /usr/include/c++/9/bits/specfun.h:45,\n               \
    \  from /usr/include/c++/9/cmath:1927,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmpan39lrah.cpp:2:\n/usr/include/c++/9/bits/stl_iterator.h:1216:5:\
    \ note: candidate: \u2018template<class _Iterator> constexpr std::move_iterator<_IteratorL>\
    \ std::operator+(typename std::move_iterator<_IteratorL>::difference_type, const\
    \ std::move_iterator<_IteratorL>&)\u2019\n 1216 |     operator+(typename move_iterator<_Iterator>::difference_type\
    \ __n,\n      |     ^~~~~~~~\n/usr/include/c++/9/bit"
  stdout: ''
  timestamp: 1660096962
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long temp;\n    for(int i = 0; i <= n; i++){\n\
    \        temp = i;\n        while(temp--){\n            s += std::to_string(temp);\n\
    \        }\n        s += \" \";\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp8xw1nhcc: /tmp/tmp8xw1nhcc.cpp:18: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096963
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string str(n+1, '0');\n    std::string temp = \"\";\n    while(n\
    \ > 0){\n        temp = std::to_string(n%10) + temp;\n        n = n/10;\n    }\n\
    \    return temp + str;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpa4wqttbf: /tmp/tmpa4wqttbf.cpp:16: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096963
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string result;\n    \n    for(int i=0;i<n;i++){\n        result+=to_string(i);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdgk8ni1w.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmpdgk8ni1w.cpp:8:17: error: \u2018to_string\u2019 was not\
    \ declared in this scope; did you mean \u2018std::__cxx11::to_string\u2019?\n\
    \    8 |         result+=to_string(i);\n      |                 ^~~~~~~~~\n  \
    \    |                 std::__cxx11::to_string\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpdgk8ni1w.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6601:3:\
    \ note: \u2018std::__cxx11::to_string\u2019 declared here\n 6601 |   to_string(long\
    \ double __val)\n      |   ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660096962
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n  std::string str;\n  for (int i = 0; i < n; ++i)\n    str += std::to_string(i);\n\
    \  return str;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpm19ih3e3: /tmp/tmpm19ih3e3.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096963
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string ans = \"\";\n    long i = 1;\n    for (; i <= n; i++)\
    \ {\n        ans += std::to_string(i);\n        if (i != n) ans += \" \";\n  \
    \  }\n    return ans;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpsxo7hkvl: /tmp/tmpsxo7hkvl.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096963
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n   char s[100];\n   sprintf(s,\"%ld\",n);\n   std::string res(s);\n  \
    \ return res;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpuvtcp18q: /tmp/tmpuvtcp18q.cpp:13: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096963
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n  std::string str = \"\";\n  for (long i = 0; i < n; i++)\n    str +=\
    \ std::to_string(i);\n  return str;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpjzrt5vil: /tmp/tmpjzrt5vil.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096964
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n  std::string res=\"\";\n  for (int i = 0; i <= n; ++i) res = std::to_string(i)\
    \ + \" \" + res;\n  return res;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpl_mry8nt: /tmp/tmpl_mry8nt.cpp:11: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096964
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    // Initialize string buffer to return value.\n    std::string ret;\n\
    \    // Write the required number of spaces.\n    ret += std::to_string(std::min(n,\
    \ 20));\n    // Loop through the required number of spaces and write numbers.\n\
    \    for (int i = 1; i <= n; i++) {\n        ret += std::to_string(i);\n    }\n\
    \    // Return string buffer.\n    return ret;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4pa8atow.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmp4pa8atow.cpp:8:41: error: no matching function for call\
    \ to \u2018min(long int&, int)\u2019\n    8 |     ret += std::to_string(std::min(n,\
    \ 20));\n      |                                         ^\nIn file included from\
    \ /usr/include/c++/9/bits/specfun.h:45,\n                 from /usr/include/c++/9/cmath:1927,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmp4pa8atow.cpp:2:\n/usr/include/c++/9/bits/stl_algobase.h:198:5:\
    \ note: candidate: \u2018template<class _Tp> constexpr const _Tp& std::min(const\
    \ _Tp&, const _Tp&)\u2019\n  198 |     min(const _Tp& __a, const _Tp& __b)\n \
    \     |     ^~~\n/usr/include/c++/9/bits/stl_algobase.h:198:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmp4pa8atow.cpp:8:41: note:  \
    \ deduced conflicting types for parameter \u2018const _Tp\u2019 (\u2018long int\u2019\
    \ and \u2018int\u2019)\n    8 |     ret += std::to_string(std::min(n, 20));\n\
    \      |                                         ^\nIn file included from /usr/include/c++/9/bits/specfun.h:45,\n\
    \                 from /usr/include/c++/9/cmath:1927,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmp4pa8atow.cpp:2:\n/usr/include/c++/9/bits/stl_algobase.h:246:5:\
    \ note: candidate: \u2018template<class _Tp, class _Compare> constexpr const _Tp&\
    \ std::min(const _Tp&, const _Tp&, _Compare)\u2019\n  246 |     min(const _Tp&\
    \ __a, const _Tp& __b, _Compare __comp)\n      |     ^~~\n/usr/include/c++/9/bits/stl_algobase.h:246:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp4pa8atow.cpp:8:41:\
    \ note:   deduced conflicting types for parameter \u2018const _Tp\u2019 (\u2018\
    long int\u2019 and \u2018int\u2019)\n    8 |     ret += std::to_string(std::min(n,\
    \ 20));\n      |                                         ^\nIn file included from\
    \ /usr/include/c++/9/algorithm:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp4pa8atow.cpp:2:\n/usr/include/c++"
  stdout: ''
  timestamp: 1660096964
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n  std::ostringstream oss;\n  for (int i = 1; i <= n; ++i)\n    oss <<\
    \ i;\n  return oss.str();\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpjvzxzlt5: /tmp/tmpjvzxzlt5.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096964
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string res=\"\";\n    for(int i=0;i<n;++i)\n       res+=std::to_string(i+1);\n\
    \    return res;\n}\nint main() {\n    auto candidate = string_sequence;\n   \
    \ assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"\
    ));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmptlhq7yzh: /tmp/tmptlhq7yzh.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096964
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string res;\n    for(long i=0;i<n;i++)\n        res += std::to_string(i);\n\
    \    return res;\n}\nint main() {\n    auto candidate = string_sequence;\n   \
    \ assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"\
    ));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp0ecyhm44: /tmp/tmp0ecyhm44.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096964
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n  std::string s;\n  s.reserve(n);\n  for (long i = 0; i < n; ++i)\n  \
    \  s += to_string(i);\n  return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_7i20_73.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmp_7i20_73.cpp:8:10: error: \u2018to_string\u2019 was not\
    \ declared in this scope; did you mean \u2018std::__cxx11::to_string\u2019?\n\
    \    8 |     s += to_string(i);\n      |          ^~~~~~~~~\n      |         \
    \ std::__cxx11::to_string\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp_7i20_73.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6601:3:\
    \ note: \u2018std::__cxx11::to_string\u2019 declared here\n 6601 |   to_string(long\
    \ double __val)\n      |   ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660096964
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n  std::string str;\n  for (long i = 0; i <= n; ++i) {\n    str += std::to_string(i);\n\
    \  }\n  return str;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpo4d93xdy: /tmp/tmpo4d93xdy.cpp:14: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096965
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string result = \"0\";\n    for (long i = 1; i < n; i++) {\n\
    \        result += \" \";\n        result += to_string(i);\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpew43ld8p.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmpew43ld8p.cpp:8:19: error: \u2018to_string\u2019 was not\
    \ declared in this scope; did you mean \u2018std::__cxx11::to_string\u2019?\n\
    \    8 |         result += to_string(i);\n      |                   ^~~~~~~~~\n\
    \      |                   std::__cxx11::to_string\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpew43ld8p.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6601:3:\
    \ note: \u2018std::__cxx11::to_string\u2019 declared here\n 6601 |   to_string(long\
    \ double __val)\n      |   ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660096964
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::ostringstream os;\n    for (int i = 0; i < n; ++i) {\n      \
    \  os << i;\n        if (i != n-1)\n            os << \" \";\n    }\n    return\
    \ os.str();\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp3ihgg9se: /tmp/tmp3ihgg9se.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096965
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s = \"\";\n    for(long i = 0; i < n; i++) s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpm52ixtj3: /tmp/tmpm52ixtj3.cpp:11: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096965
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string result;\n    long remaining = n;\n    while (remaining\
    \ != 0) {\n        remaining -= 1;\n        result += \"0 \";\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpsazlsaj4: /tmp/tmpsazlsaj4.cpp:15: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096964
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n  std::string s;\n  for (long i = 0; i < n; i++) {\n    s += std::to_string(i);\n\
    \  }\n  return s;\n}\nint main() {\n    auto candidate = string_sequence;\n  \
    \  assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"\
    ));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp4yhccnqw: /tmp/tmp4yhccnqw.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096965
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n  std::string res;\n  res.reserve(n);\n  for (long i = 0; i < n; ++i)\n\
    \    res += std::to_string(i);\n  return res;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpy4c4k5gv: /tmp/tmpy4c4k5gv.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096965
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n\tstd::string seq = \"\";\n\twhile (n > 0) {\n\t\tseq += std::to_string(n%10);\n\
    \t\tn/=10;\n\t}\n\treturn seq;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpfvv9codq: /tmp/tmpfvv9codq.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096964
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string str;\n    str.clear();\n    for(int i = 1; i <= n; i++)\
    \ {\n        str += to_string(i);\n        if(i != n) str += \" \";\n    }\n \
    \   return str;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnodo0hy7.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmpnodo0hy7.cpp:8:16: error: \u2018to_string\u2019 was not\
    \ declared in this scope; did you mean \u2018std::__cxx11::to_string\u2019?\n\
    \    8 |         str += to_string(i);\n      |                ^~~~~~~~~\n    \
    \  |                std::__cxx11::to_string\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpnodo0hy7.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6601:3:\
    \ note: \u2018std::__cxx11::to_string\u2019 declared here\n 6601 |   to_string(long\
    \ double __val)\n      |   ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660096963
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n\tstd::string s;\n\tfor(long i=0; i<n; i++) {\n\t\ts += std::to_string(i)\
    \ + \" \";\n\t}\n\treturn s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp7v14jvsl: /tmp/tmp7v14jvsl.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096965
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string res;\n    for (int i = 0; i < n; i++) res += std::to_string(i);\n\
    \    return res;\n}\nint main() {\n    auto candidate = string_sequence;\n   \
    \ assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"\
    ));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp2qz41g24: /tmp/tmp2qz41g24.cpp:11: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096964
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n  std::ostringstream os;\n  for (long i = 0; i <= n; i++) os << i << \"\
    \ \";\n  return os.str();\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp7mge87tk: /tmp/tmp7mge87tk.cpp:11: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096964
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n  std::string ans = \"\";\n  for (int i = 0; i < n; i++) {\n    ans +=\
    \ std::to_string(i);\n    if (i + 1 != n) ans += \" \";\n  }\n  return ans;\n\
    }\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpshoj_g42: /tmp/tmpshoj_g42.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096964
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i)\
    \ + \" \";\n    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpr26mvux9: /tmp/tmpr26mvux9.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096886
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    // Your code goes here\n    std::string s(n, \"0\");\n    for(int\
    \ i=n; i>0; i--){\n        s[n-i] = s[i];\n    }\n    return s;\n}\nint main()\
    \ {\n    auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"\
    ));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpa0dcbtyt.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmpa0dcbtyt.cpp:6:25: error: no matching function for call\
    \ to \u2018std::__cxx11::basic_string<char>::basic_string(long int&, const char\
    \ [2])\u2019\n    6 |     std::string s(n, \"0\");\n      |                  \
    \       ^\nIn file included from /usr/include/c++/9/string:55,\n             \
    \    from /usr/include/c++/9/bits/locale_classes.h:40,\n                 from\
    \ /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpa0dcbtyt.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:654:2:\
    \ note: candidate: \u2018template<class _Tp, class> std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::basic_string(const _Tp&, const _Alloc&)\u2019\n  654 |  basic_string(const\
    \ _Tp& __t, const _Alloc& __a = _Alloc())\n      |  ^~~~~~~~~~~~\n/usr/include/c++/9/bits/basic_string.h:654:2:\
    \ note:   template argument deduction/substitution failed:\nIn file included from\
    \ /usr/include/c++/9/bits/move.h:55,\n                 from /usr/include/c++/9/bits/stl_pair.h:59,\n\
    \                 from /usr/include/c++/9/bits/stl_algobase.h:64,\n          \
    \       from /usr/include/c++/9/bits/specfun.h:45,\n                 from /usr/include/c++/9/cmath:1927,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmpa0dcbtyt.cpp:2:\n/usr/include/c++/9/type_traits:\
    \ In substitution of \u2018template<bool _Cond, class _Tp> using enable_if_t =\
    \ typename std::enable_if::type [with bool _Cond = std::integral_constant<bool,\
    \ false>::value; _Tp = void]\u2019:\n/usr/include/c++/9/bits/basic_string.h:121:8:\
    \   required by substitution of \u2018template<class _CharT, class _Traits, class\
    \ _Alloc> template<class _Tp, class _Res> using _If_s"
  stdout: ''
  timestamp: 1660096964
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++){\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpjrn96897: /tmp/tmpjrn96897.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096964
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string ans = \"0123456789\";\n    while(n--) {\n        ans +=\
    \ ans;\n    }\n    return ans;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpgr9t4awr: /tmp/tmpgr9t4awr.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096965
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long i;\n    // If n is 0 then return the empty\
    \ string.\n    if (n == 0)\n        return s;\n    // If n is 1 then return the\
    \ string \"1\".\n    if (n == 1)\n        return \"1\";\n    // If n is greater\
    \ than 1 then concatenate the string \"1 ... \"\n    // followed by the string\
    \ representation of n - 1 followed by a space\n    // followed by string_sequence(n\
    \ - 1) followed by a space followed by a comma\n    // followed by string_sequence(n\
    \ - 1) followed by a space followed by \"2\"\n    // followed by a space followed\
    \ by \"...\".\n    for (i = 1; i <= n; ++i) {\n        s += \" ... \";\n     \
    \   s += std::to_string(i - 1) + \" \";\n        s += string_sequence(i - 1);\n\
    \        s += \" \";\n        s += std::to_string(i - 1) + \" \";\n        s +=\
    \ \"2\";\n        s += \" ...\";\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpwvazmb_z: /tmp/tmpwvazmb_z.cpp:31: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096965
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n  assert(n >= 0);\n  std::string ans = \"\";\n  for (int i = 0; i <= n;\
    \ i++) ans += std::to_string(i);\n  return ans;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp9p7uif9t: /tmp/tmp9p7uif9t.cpp:13: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096965
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n   std::string s;\n   for (long i = 0; i < n; i++) {\n      s += std::to_string(i)\
    \ + \" \";\n   }\n   return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpnt433jn5: /tmp/tmpnt433jn5.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096965
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    int i;\n    std::string str = \"\";\n    for (i = 0; i < n; i++) {\n\
    \        str += std::to_string(i);\n    }\n    return str;\n}\nint main() {\n\
    \    auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp9cuu4oi0: /tmp/tmp9cuu4oi0.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096965
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n\tstd::string s;\n\twhile (n--) {\n\t\ts += std::to_string(n);\n\t}\n\t\
    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmphd0lccbs: /tmp/tmphd0lccbs.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096965
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (int i = 0; i < n; i++) {\n       \
    \ if (i > 0) {\n            ss << ' ';\n        }\n        ss << i;\n    }\n \
    \   return ss.str();\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpbbcyjvmk: /tmp/tmpbbcyjvmk.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096965
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string num = \"\";\n    long count = 1;\n    for(long i = 2;\
    \ i <= n; i++) {\n        if(i == n) num += i;\n        else num += \" \" + i;\n\
    \        count++;\n    }\n    return num;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp57pfzq7h: /tmp/tmp57pfzq7h.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096965
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string ans = \"\";\n    for(long i = 1;i <= n; i++){\n      \
    \  ans = ans + \"\\n\" + to_string(i);\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"\
    ));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0jhpxvv1.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmp0jhpxvv1.cpp:7:28: error: \u2018to_string\u2019 was not\
    \ declared in this scope; did you mean \u2018std::__cxx11::to_string\u2019?\n\
    \    7 |         ans = ans + \"\\n\" + to_string(i);\n      |                \
    \            ^~~~~~~~~\n      |                            std::__cxx11::to_string\n\
    In file included from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp0jhpxvv1.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6601:3: note:\
    \ \u2018std::__cxx11::to_string\u2019 declared here\n 6601 |   to_string(long\
    \ double __val)\n      |   ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660096964
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n  std::string result;\n  for (long i = 0; i < n; i++) {\n    result +=\
    \ std::to_string(i);\n  }\n  return result;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpa3p6ug5x: /tmp/tmpa3p6ug5x.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096965
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n\tstd::stringstream ss;\n\tss << n;\n\tstd::string str = ss.str();\n\t\
    std::string ans = \"0\";\n\tfor(long i=1;i<=n;i++) {\n\t\tans+=' ';\n\t\tans+=str.substr(str.length()-i,i);\n\
    \t}\n\treturn ans;\n}\nint main() {\n    auto candidate = string_sequence;\n \
    \   assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: "terminate called after throwing an instance of 'std::out_of_range'\n  what():\
    \  basic_string::substr: __pos (which is 18446744073709551615) > this->size()\
    \ (which is 1)\n"
  stdout: ''
  timestamp: 1660096965
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i < n; ++i)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpc48v2olj: /tmp/tmpc48v2olj.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096965
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n\tstd::string s = \"\";\n\tlong start = 0, end = 0;\n\twhile(n > 0) {\n\
    \t\tlong tmp = n;\n\t\twhile(n % 10 == 0) {\n\t\t\ts += tmp%10;\n\t\t\ttmp /=\
    \ 10;\n\t\t}\n\t\ts += tmp;\n\t\tn /= 10;\n\t}\n\treturn s;\n}\nint main() {\n\
    \    auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpmf0lqymk: /tmp/tmpmf0lqymk.cpp:20: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096965
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string res;\n    res.reserve(2 * n);\n    long m = 1, k = 0;\n\
    \    for(int i = n - 1; i >= 0; --i)\n    {\n        while(m % 3 == 0)\n     \
    \   {\n            res.push_back('0' + k);\n            k += 3;\n            m\
    \ /= 3;\n        }\n        m += 1;\n        k += i;\n        res.push_back('0'\
    \ + k);\n    }\n    return res;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp02rpi2je: /tmp/tmp02rpi2je.cpp:24: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096965
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i = 0; i <= n; i++) {\n     \
    \   ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpmnaft0se: /tmp/tmpmnaft0se.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096965
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    int seq[n];\n    for(int i=0;i<n;++i)\n        seq[i]=i;\n    std::string\
    \ res;\n    for(int i=0;i<n;++i)\n        res += to_string(seq[i]);\n    return\
    \ res;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpx1ox9ll6.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmpx1ox9ll6.cpp:10:16: error: \u2018to_string\u2019 was not\
    \ declared in this scope; did you mean \u2018std::__cxx11::to_string\u2019?\n\
    \   10 |         res += to_string(seq[i]);\n      |                ^~~~~~~~~\n\
    \      |                std::__cxx11::to_string\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpx1ox9ll6.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6601:3:\
    \ note: \u2018std::__cxx11::to_string\u2019 declared here\n 6601 |   to_string(long\
    \ double __val)\n      |   ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660096965
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s = \"\";\n    long start = 0, end = n;\n    while (start\
    \ < end) {\n        s += std::to_string(start);\n        s += \" \";\n       \
    \ start++;\n    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpr_2ihyda: /tmp/tmpr_2ihyda.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096965
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n\tstd::string res;\n\tfor (long i = 0; i<n; i++) {\n\t\tres += std::to_string(i);\n\
    \t}\n\treturn res;\n}\nint main() {\n    auto candidate = string_sequence;\n \
    \   assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp4or3anlk: /tmp/tmp4or3anlk.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096965
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for (long i = 0; i < n; i++) {\n        s += std::to_string(i);\n\
    \        if (i < n - 1) s += \" \";\n    }\n    return s;\n}\nint main() {\n \
    \   auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp437sv6y4: /tmp/tmp437sv6y4.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    while (n > 0)\n        s += std::to_string(--n);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpvogtz6en: /tmp/tmpvogtz6en.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096966
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n  std::string s;\n  for (long i = 0; i <= n; i++) {\n    if (i > 0) s\
    \ += \" \";\n    s += std::to_string(i);\n  }\n  return s;\n}\nint main() {\n\
    \    auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660096965
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n  std::string s;\n  for(int i=0;i<n;i++){\n    s.push_back(i+1);\n  }\n\
    \  return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp5oud0j5c: /tmp/tmp5oud0j5c.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096966
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i = 1;i <= n ;++i){\n        s.append(\"\
    \ \");\n        s.append(i);\n    }\n    return s;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwdoclvqj.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmpwdoclvqj.cpp:8:19: error: no matching function for call\
    \ to \u2018std::__cxx11::basic_string<char>::append(long int&)\u2019\n    8 |\
    \         s.append(i);\n      |                   ^\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpwdoclvqj.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:1267:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::append(const _CharT*) [with\
    \ _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]\u2019\
    \ <near match>\n 1267 |       append(const _CharT* __s)\n      |       ^~~~~~\n\
    /usr/include/c++/9/bits/basic_string.h:1267:7: note:   conversion of argument\
    \ 1 would be ill-formed:\n/tmp/tmpwdoclvqj.cpp:8:18: error: invalid conversion\
    \ from \u2018long int\u2019 to \u2018const char*\u2019 [-fpermissive]\n    8 |\
    \         s.append(i);\n      |                  ^\n      |                  |\n\
    \      |                  long int\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 fro"
  stdout: ''
  timestamp: 1660096966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s = \"\";\n    for(int i = 1; i <= n; i++) {\n       \
    \ s += std::to_string(i) + \" \";\n    }\n    return s;\n}\nint main() {\n   \
    \ auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpdgiduzsl: /tmp/tmpdgiduzsl.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n\tstd::string s = \"\";\n\tfor (int i = 0; i < n; i++) {\n\t\ts += std::to_string(i);\n\
    \t}\n\treturn s;\n}\nint main() {\n    auto candidate = string_sequence;\n   \
    \ assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"\
    ));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpqan0rpwf: /tmp/tmpqan0rpwf.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096966
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    assert(n >= 0);\n    std::string res;\n    long base = n;\n    while\
    \ (n > 1) {\n        long next = n / base;\n        if (next > 0)\n          \
    \  res += to_string(base) + \" \" + to_string(next);\n        base = next;\n \
    \   }\n    return res;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdsq34tn1.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmpdsq34tn1.cpp:11:20: error: \u2018to_string\u2019 was not\
    \ declared in this scope; did you mean \u2018std::__cxx11::to_string\u2019?\n\
    \   11 |             res += to_string(base) + \" \" + to_string(next);\n     \
    \ |                    ^~~~~~~~~\n      |                    std::__cxx11::to_string\n\
    In file included from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpdsq34tn1.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6601:3: note:\
    \ \u2018std::__cxx11::to_string\u2019 declared here\n 6601 |   to_string(long\
    \ double __val)\n      |   ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660096966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    s.reserve(n + 1);\n    for(long i = 0; i < n;\
    \ i++) {\n        s += std::to_string(i + 1);\n    }\n    return s;\n}\nint main()\
    \ {\n    auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"\
    ));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpusq_ul0m: /tmp/tmpusq_ul0m.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n  if (n==0)\n    return \"0\";\n  std::string str;\n  while (n!=0)\n \
    \ {\n    str=std::to_string(n%10);\n    str.push_back(' ');\n    n /= 10;\n  }\n\
    \  return str;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp0kr7dsff: /tmp/tmp0kr7dsff.cpp:19: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string str = \"\";\n    while (n-- > 0) str += \" \";\n    return\
    \ str;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp0ug5dyf0: /tmp/tmp0ug5dyf0.cpp:11: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n  std::string res = \"\";\n  for (long i = 0; i <= n; i++) {\n    res\
    \ += std::to_string(i);\n  }\n  return res;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp0dx3q0je: /tmp/tmp0dx3q0je.cpp:14: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for (long i=0;i<n;i++)\n        ss << i\
    \ << \" \";\n    return ss.str();\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp1tusnj2g: /tmp/tmp1tusnj2g.cpp:12: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string result;\n    for (long i = 0; i < n; i++) {\n        result\
    \ += std::to_string(i);\n    }\n    return result.substr(0, result.length() -\
    \ 1);\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpkvi4me6h: /tmp/tmpkvi4me6h.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n  std::ostringstream result;\n  for (int i = 0; i < n; ++i) {\n    if\
    \ (i != 0) result << ' ';\n    result << i;\n  }\n  return result.str();\n}\n\
    int main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp85e40lw9: /tmp/tmp85e40lw9.cpp:14: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n  std::string s;\n  for (long i = 0; i < n; i++) s += std::to_string(i);\n\
    \  return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp948qeh3x: /tmp/tmp948qeh3x.cpp:11: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::stringstream ss;\n    for(long i = 0; i < n; i++) {\n       \
    \ ss << i << \" \";\n    }\n    return ss.str();\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp95ge1vch: /tmp/tmp95ge1vch.cpp:13: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096966
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string result;\n    for(long i=0;i<n;i++)\n        result+=(\"\
    \ \"+to_string(i+1));\n    return result;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp_anmuyt.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmpp_anmuyt.cpp:7:22: error: \u2018to_string\u2019 was not\
    \ declared in this scope; did you mean \u2018std::__cxx11::to_string\u2019?\n\
    \    7 |         result+=(\" \"+to_string(i+1));\n      |                    \
    \  ^~~~~~~~~\n      |                      std::__cxx11::to_string\nIn file included\
    \ from /usr/include/c++/9/string:55,\n                 from /usr/include/c++/9/bits/locale_classes.h:40,\n\
    \                 from /usr/include/c++/9/bits/ios_base.h:41,\n              \
    \   from /usr/include/c++/9/ios:42,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpp_anmuyt.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6601:3: note:\
    \ \u2018std::__cxx11::to_string\u2019 declared here\n 6601 |   to_string(long\
    \ double __val)\n      |   ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660096966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n  // Declare a string variable.\n  std::string str(\"\");\n  // Declare\
    \ an integer variable and initialize it to 0.\n  int i = 0;\n  // While the integer\
    \ is less than or equal to the value n.\n  while (i < n) {\n    // Append space\
    \ and a number to the string.\n    str += \" \" + std::to_string(i);\n    // Increment\
    \ i.\n    ++i;\n  }\n  // Return the string.\n  return str;\n}\nint main() {\n\
    \    auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n\
    \    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"\
    0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpboiscz1s: /tmp/tmpboiscz1s.cpp:21: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096966
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string ans;\n    \n    for(int i = 0; i <= n; i++){\n       \
    \ ans += std::to_string(i);\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpsgmhawlv: /tmp/tmpsgmhawlv.cpp:15: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096966
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    long cur = 0;\n    for (long i = 0; i <= n; ++i)\
    \ {\n        cur *= 10;\n        cur += i;\n        if (cur < n) {\n         \
    \   s += to_string(cur);\n            s += \" \";\n        }\n    }\n    return\
    \ s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpg5klzz3i.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmpg5klzz3i.cpp:11:18: error: \u2018to_string\u2019 was not\
    \ declared in this scope; did you mean \u2018std::__cxx11::to_string\u2019?\n\
    \   11 |             s += to_string(cur);\n      |                  ^~~~~~~~~\n\
    \      |                  std::__cxx11::to_string\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpg5klzz3i.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6601:3:\
    \ note: \u2018std::__cxx11::to_string\u2019 declared here\n 6601 |   to_string(long\
    \ double __val)\n      |   ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660096966

language: cpp
name: HumanEval_49_modp
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  long ans = 0;\n  while(n\
    \ > 0) {\n    ans = (ans << 1) | (n & 1);\n    n >>= 1;\n  }\n  if(p > 1) {\n\
    \    ans %= p;\n  }\n  if(p > 2) {\n    while(ans > p) {\n      ans -= p;\n  \
    \  }\n  }\n  return ans;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpub_uwu1y: /tmp/tmpub_uwu1y.cpp:23: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126991
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (n) {\n        if (n & 1) res *= p;\n        n >>= 1;\n        p *= p;\n   \
    \ }\n    return res + 1;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp4iisif5y: /tmp/tmp4iisif5y.cpp:15: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126991
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long ret = 1;\n    while(n)\
    \ {\n        ret = ret * p + (n % p); \n        n /= p;\n    }\n    return ret\
    \ + 1;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp0d70j6ei: /tmp/tmp0d70j6ei.cpp:14: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126991
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n   return (1 << (n % p)) %\
    \ p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5))\
    \ == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpvyu2i5o0: /tmp/tmpvyu2i5o0.cpp:10: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126991
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = p%n;\n    return\
    \ (r!=n)? r : p-r;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp0q7545ia: /tmp/tmp0q7545ia.cpp:10: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126991
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    return (p == 0 ? 1 : n\
    \ % p);\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpbfiw8_um: /tmp/tmpbfiw8_um.cpp:10: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126991
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    while\
    \ (n > 0) {\n        r = r * p % m;\n        n /= 2;\n    }\n    return r;\n}\n\
    int main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n\
    \    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101))\
    \ == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsm2s2ix0.cpp: In function \u2018long int modp(long int, long int)\u2019\
    :\n/tmp/tmpsm2s2ix0.cpp:7:21: error: \u2018m\u2019 was not declared in this scope\n\
    \    7 |         r = r * p % m;\n      |                     ^\n"
  stdout: ''
  timestamp: 1660126991
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long q = n;\n    while\
    \ (n > 0) {\n        if (n % 2 == 0) {\n            q += p;\n        }\n     \
    \   n /= 2;\n        p /= 2;\n    }\n    return q;\n}\nint main() {\n    auto\
    \ candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp01e0_rra: /tmp/tmp01e0_rra.cpp:18: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126991
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  // Make sure that n is positive.\n\
    \  if (n <= 0) return 1;\n  // Return the (2^n) mod p -- we know p is positive.\n\
    \  long ans = 0;\n  long div = n / p;\n  if (div > 0) {\n    ans = n % p;\n  \
    \  while (ans >= p) {\n      ans -= p;\n      p /= 2;\n    }\n  }\n  return ans;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpfsnol_ks: /tmp/tmpfsnol_ks.cpp:21: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126991
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    // http://stackoverflow.com/questions/29546894/return-2n-1-modulo-p-with-respect-to-the-modulo-operation\n\
    \    // http://stackoverflow.com/questions/9449353/modp-and-mod-in-c\n    long\
    \ r = 1;\n    while (n) {\n        r %= p;\n        if (n & 1)\n            r\
    \ ^= p;\n        n >>= 1;\n    }\n    return r;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp6jj3vxv3: /tmp/tmp6jj3vxv3.cpp:18: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126991
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  assert(n > 0 && p > 0);\n\
    \  if (n == 0 || p == 0)\n    return 0;\n  if (p > n)\n    return modp(n, p -\
    \ 1);\n  if (p == 1)\n    return 1;\n  long mid = n / 2;\n  if (n % 2 == 1)\n\
    \    return modp(mid, p - 1);\n  return 2 * modp(mid, p - 1);\n}\nint main() {\n\
    \    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp64wygtab: /tmp/tmp64wygtab.cpp:19: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126991
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n   long c = 1;\n   while(c\
    \ < n)\n      c = c*p;\n   return c % p;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp_jjwnswb: /tmp/tmp_jjwnswb.cpp:12: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126991
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n   return ((n % p) + ((p &\
    \ p-1) ? 1 : 0)) * (p >> 1);\n}\nint main() {\n    auto candidate = modp;\n  \
    \  assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101)) ==\
    \ (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp4w3ugb96: /tmp/tmp4w3ugb96.cpp:9: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126991
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    return n*p - n%p + p;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpuilif05a: /tmp/tmpuilif05a.cpp:9: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126991
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    return (n + p-1) % p;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp49p_60sv: /tmp/tmp49p_60sv.cpp:9: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126991
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    return (n%p) ? (n%p +\
    \ p) : n;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp1s_rj0g5: /tmp/tmp1s_rj0g5.cpp:9: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126991
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    while ((n % p) == 0) n\
    \ = n / p;\n    return n;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpk9f1lk8i: /tmp/tmpk9f1lk8i.cpp:11: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126991
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  long q = p + 1;\n  if (q\
    \ % 2 == 1)\n    return p + q;\n  long r = q - 1;\n  while (r % 2 == 1) {\n  \
    \  r = r / 2;\n  }\n  while (r > 0) {\n    long t = r;\n    r = (r - 1) / 2;\n\
    \    if (t % 2 != 1) {\n      return r + p;\n    }\n  }\n  return r;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpbcz0npxs: /tmp/tmpbcz0npxs.cpp:23: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126991
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    return ((n >> 1) ^ (n\
    \ & (p - 1))) % (p);\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpz6diyovo: /tmp/tmpz6diyovo.cpp:9: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126991
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  if (p % 2 == 1) return p\
    \ * (n-1) + 1;\n  long m = 3 * p - 2;\n  return ((n % m) + m) % m;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpoymnahya: /tmp/tmpoymnahya.cpp:11: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126991
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  assert(p > 0);\n  long q\
    \ = p / n;\n  long r = p % n;\n  if (r == 0) {\n    return q;\n  }\n  else {\n\
    \    return q * modp(q + 1, n) + r;\n  }\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpf3_baqu0: /tmp/tmpf3_baqu0.cpp:17: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126991
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long m = (long)p;\n  \
    \  long q = n / m;\n    long r = n % m;\n    return (r == 0)? q : modp(q, p) +\
    \ 1;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5))\
    \ == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp0x4c7lwy: /tmp/tmp0x4c7lwy.cpp:12: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126991
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    while\
    \ ((p&1) == 0) {\n        p >>= 1;\n        r <<= 1;\n    }\n    while ((n&1)\
    \ == 0) {\n        n >>= 1;\n        r <<= 1;\n    }\n    r %= p;\n    return\
    \ r;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5))\
    \ == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp_13umm89: /tmp/tmp_13umm89.cpp:19: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126991
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (n) {\n        if (n&1) res = (res * p) % p;\n        n = n >> 1;\n        p\
    \ = p * p;\n    }\n    return res;\n}\nint main() {\n    auto candidate = modp;\n\
    \    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101))\
    \ == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpw2c6e8fx: /tmp/tmpw2c6e8fx.cpp:15: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126992
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  return 1LL<<(n-p);\n}\n\
    int main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n\
    \    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101))\
    \ == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpwu5d0oay: /tmp/tmpwu5d0oay.cpp:9: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126992
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long ans = 1L;\n    while\
    \ (n) {\n        ans = (ans * n) % p;\n        n = (n * n) % p;\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660126997
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    return ((n % p) + p) %\
    \ p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5))\
    \ == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmphlhhcxdi: /tmp/tmphlhhcxdi.cpp:10: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126938
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  assert(p != 0);\n  long\
    \ res = 1;\n  while (n != 0) {\n    res *= p;\n    n /= p;\n  }\n  return res;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpzyxk0ajh: /tmp/tmpzyxk0ajh.cpp:15: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126993
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    return p == 1 ? n : (n\
    \ % p + modp(n / p, p));\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660126998
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n\tlong ans = 1;\n\twhile(n)\
    \ {\n\t\tans = (ans*2) + (n&1);\n\t\tn >>= 1;\n\t}\n\treturn (p^ans)%p;\n}\nint\
    \ main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n\
    \    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101))\
    \ == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpdisf407h: /tmp/tmpdisf407h.cpp:14: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126993
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    while\
    \ (n) {\n        if (n&1) r += p; n >>= 1;\n        if (n&2) r += p; n >>= 1;\n\
    \        if (n&4) r += p; n >>= 1;\n        if (n&8) r += p; n >>= 1;\n      \
    \  if (n&16) r += p; n >>= 1;\n        if (n&32) r += p; n >>= 1;\n    }\n   \
    \ return r;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpsd6stc62: /tmp/tmpsd6stc62.cpp:18: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126993
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long q = p%n;\n    return\
    \ (long) ((q + n)%n);\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpxxrzm0mv: /tmp/tmpxxrzm0mv.cpp:10: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126992
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  long r = n;\n  r -= p;\n\
    \  r %= p;\n  if(n != r) return 1;\n  long r2 = n;\n  r2 -= p;\n  r2 %= p;\n \
    \ if(r != r2) return 1;\n  return 2;\n}\nint main() {\n    auto candidate = modp;\n\
    \    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101))\
    \ == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp0mer_wqd: /tmp/tmp0mer_wqd.cpp:17: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126993
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    if (n < 0)\n        n\
    \ = (-n);\n    if (p == 0) return 1;\n    if (p == 1) return n;\n    if (n ==\
    \ p) return n;\n    if (n <= p) return modp(n - 1, p) + 1;\n    if (n > p) return\
    \ modp(n - 1, p);\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660126998
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  // Only works for n > 0.\n\
    \  if (p > 1) {\n    return (n + p) % p;\n  } else {\n    return n % p;\n  }\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpn0el3ea8: /tmp/tmpn0el3ea8.cpp:15: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126993
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    return ((n % p) + p) %\
    \ p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5))\
    \ == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmphlhhcxdi: /tmp/tmphlhhcxdi.cpp:10: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126938
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n\tlong ret = n;\n\twhile (p\
    \ > 0 && ret % p != 0) {\n\t\tret += p;\n\t\tret %= p;\n\t}\n\treturn ret;\n}\n\
    int main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n\
    \    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101))\
    \ == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660126998
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    long\
    \ m = p;\n    while (n) {\n        if ((m & 1) != 0) {\n            r <<= 1;\n\
    \            if (n-- == 1)\n                m >>= 1;\n        } else {\n     \
    \       m >>= 1;\n            if (n-- == 1)\n                m |= 1;\n       \
    \ }\n    }\n    return r;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmprwqha24b: /tmp/tmprwqha24b.cpp:22: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126993
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    int i = 1;\n    long r\
    \ = n - 1;\n    long p1 = p * 2;\n    long p2 = p * 4;\n    while (i <= r) {\n\
    \        if (i % p == 0) {\n            r -= i;\n            i += p1;\n      \
    \  }\n        else {\n            i += p2;\n        }\n    }\n    return r;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpz9crulhc: /tmp/tmpz9crulhc.cpp:22: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126993
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  assert(p > 0);\n  long r\
    \ = 1;\n  while (n != 0) {\n    long new_r = (n % p + p) % p;\n    if (new_r !=\
    \ 0)\n      r = new_r;\n    n = (n - r) / p;\n  }\n  return r;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpzx10mc_k: /tmp/tmpzx10mc_k.cpp:18: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126993
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    return ((long long)n)\
    \ % p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmplr9xfn7f: /tmp/tmplr9xfn7f.cpp:10: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126992
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    for\
    \ (long i = p; i != 0; --i) {\n        if (n & 1L) res *= p;\n        n >>= 1;\n\
    \        p >>= 1;\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp6gntm7q4: /tmp/tmp6gntm7q4.cpp:15: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126993
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long ans = 1L;\n    while\
    \ (p) {\n        if (p & 1L) ans *= n; \n        n /= p;\n        p >>= 1;\n \
    \   }\n    return ans;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpon2phpjr: /tmp/tmpon2phpjr.cpp:15: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126992
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    return n*(p-1);\n}\nint\
    \ main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n\
    \    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101))\
    \ == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpezxnbvsc: /tmp/tmpezxnbvsc.cpp:9: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126993
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    return 1ll << n % p;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpfwhhua5b: /tmp/tmpfwhhua5b.cpp:9: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126993
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long result = 1;\n   \
    \ while (n > p) {\n        result *= p;\n        --n;\n    }\n    while (n >=\
    \ p) { result *= p; --n; }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpq4d_b11r: /tmp/tmpq4d_b11r.cpp:15: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126993
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n\tlong x = 0;\n\tlong y =\
    \ 1;\n\twhile(n) {\n\t\tif(n&1) x += y;\n\t\ty *= p;\n\t\tn >>= 1;\n\t}\n\treturn\
    \ x;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5))\
    \ == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpn33vs89_: /tmp/tmpn33vs89_.cpp:16: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126993
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    int res = 0;\n    while\
    \ (n) {\n        res *= p; --n;\n        res %= p;\n    }\n    return res;\n}\n\
    int main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n\
    \    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101))\
    \ == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpmk7htmyw: /tmp/tmpmk7htmyw.cpp:14: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126993
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n\tlong q = n / p;\n\tlong\
    \ r = n % p;\n\tif(p == 1) return 1;\n\tif(p == 2) return q;\n\tif(p == q) return\
    \ p + q;\n\tif(p == 2) return 1;\n\tif(p == 3) return q + 1;\n\treturn r;\n}\n\
    int main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n\
    \    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101))\
    \ == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp4r49ugxf: /tmp/tmp4r49ugxf.cpp:17: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126994
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  return p == 1 ? n : n %\
    \ p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5))\
    \ == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp3qwd72pi: /tmp/tmp3qwd72pi.cpp:10: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126994
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    assert(p != 0);\n    long\
    \ r = 1;\n    while (n) {\n        if (n & 1) {\n            r = r * p;\n    \
    \    }\n        n >>= 1;\n        p = p * p;\n    }\n    return r;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmplua8zlyq: /tmp/tmplua8zlyq.cpp:18: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126994
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long m = n % (p + 1);\n\
    \    if (m < p) {\n        m += p;\n    }\n    return m;\n}\nint main() {\n  \
    \  auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpccywtsuy: /tmp/tmpccywtsuy.cpp:13: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126994
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  assert(n % p == 0);\n  long\
    \ r = n;\n  for (int i = 0; i < p; i++) {\n    r = ((r + p) % p + p) % p;\n  }\n\
    \  return r;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpa2rglui5: /tmp/tmpa2rglui5.cpp:5: long int modp(long int, long int):
    Assertion `n % p == 0'' failed.

    '
  stdout: ''
  timestamp: 1660126994
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  return ((n % p) + p) % p;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpzdax2ft8: /tmp/tmpzdax2ft8.cpp:10: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126994
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    return ((n & (p-1)) ?\
    \ (p - (n & (p-1))) : p);\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp7z7kdlos: /tmp/tmp7z7kdlos.cpp:9: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126994
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long x = 1, y = 1;\n \
    \   while (n > 1) {\n        int mod = n%p;\n        n = n / p;\n        x = x\
    \ * mod + y;\n        y = mod - x;\n    }\n    return x;\n}\nint main() {\n  \
    \  auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpt41bnuxb: /tmp/tmpt41bnuxb.cpp:16: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126994
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  assert(p>0);\n  long ans\
    \ = 1;\n  for (long i=1;i<p;++i)\n    ans *= n; \n  return ans % p;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmptrjfs7dr: /tmp/tmptrjfs7dr.cpp:13: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126994
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long m = 0;\n    while\
    \ (n >= p) {\n        m = m + (n % p);\n        n = n / p;\n    }\n    return\
    \ m;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5))\
    \ == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpojo70i07: /tmp/tmpojo70i07.cpp:14: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126994
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long x = 0;\n    long\
    \ m = 0;\n    long r = 0;\n    \n    for(long i = 0; i < n; i++){\n        m =\
    \ m << 1;\n        m += p;\n        x = x ^ m;\n        r = r ^ x;\n        m\
    \ = m >> 1;\n    }\n    \n    return r;\n}\nint main() {\n    auto candidate =\
    \ modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpofn3qzmh: /tmp/tmpofn3qzmh.cpp:21: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126994
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    return ((n % p) + p) %\
    \ p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5))\
    \ == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmphlhhcxdi: /tmp/tmphlhhcxdi.cpp:10: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126938
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  long d = (n >> 31) ^ p;\n\
    \  n = (n >> 31) ^ p;\n  n += (n >> 31) ^ p;\n  n += (n >> 31) ^ p;\n  n += (n\
    \ >> 31) ^ p;\n  n += (n >> 31) ^ p;\n  n += (n >> 31) ^ p;\n  n += (n >> 31)\
    \ ^ p;\n  return ((d & n) << 31) + n;\n}\nint main() {\n    auto candidate = modp;\n\
    \    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101))\
    \ == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp1xm_lma1: /tmp/tmp1xm_lma1.cpp:17: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126994
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    int rem;\n    rem = n\
    \ % p;\n    if (rem == 0) {\n        return n;\n    }\n    long tmp = p;\n   \
    \ long res = 1;\n    while (rem > 0) {\n        rem = (rem - 1) % (2 * tmp);\n\
    \        res = (res * tmp) % p;\n    }\n    return res;\n}\nint main() {\n   \
    \ auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpip4z87ly: /tmp/tmpip4z87ly.cpp:20: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126994
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1L;\n    for\
    \ (long t = n; t != 0; t >>= 1)\n        if (t & p)\n            res = (res <<\
    \ 1) + 1L;\n    return res % p;\n}\nint main() {\n    auto candidate = modp;\n\
    \    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101))\
    \ == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpjk7vltfs: /tmp/tmpjk7vltfs.cpp:13: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126994
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  long r = n;\n  while (p\
    \ > 0 && r == 0) {\n    p = p / 2;\n    r = p % p;\n  }\n  return r;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpjpdkkfh3: /tmp/tmpjpdkkfh3.cpp:15: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126994
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n\tlong res = 1;\n\twhile(n)\
    \ {\n\t\tres *= p--;\n\t\tres %= p;\n\t\tn /= p;\n\t}\n\treturn res;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpayw7ss9f: /tmp/tmpayw7ss9f.cpp:15: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126994
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = (long)n*(p+1)/2;\n\
    \    if (res > p)\n        return res;\n    if (res < p-2)\n        return p+2-res;\n\
    \    return p-res;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmptx7n9sgu: /tmp/tmptx7n9sgu.cpp:14: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126994
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n\tlong q = n - 1; //q is greatest\
    \ common divisor of n and p.\n\twhile (q != 0) {\n\t\tlong rs = q % p;\n\t\tq\
    \ = (q - rs) / p;\n\t\tp = rs;\n\t}\n\treturn p;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpw9f7hfss: /tmp/tmpw9f7hfss.cpp:15: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126994
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long x = 0;\n    while\
    \ (n) {\n        long r = n % p;\n        n /= p;\n        x |= (r << 1) | ((r\
    \ & -p) << 3);\n    }\n    return x;\n}\nint main() {\n    auto candidate = modp;\n\
    \    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101))\
    \ == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpa16vnj4o: /tmp/tmpa16vnj4o.cpp:15: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126994
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  assert(p<=LONG_MAX);\n \
    \ long r = n;\n  long bits = 0;\n  while(r != 0)\n  {\n    long d = r%p;\n   \
    \ r = d/p;\n    bits++;\n  }\n  return n%p+bits*p;\n}\nint main() {\n    auto\
    \ candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpko9v35m9: /tmp/tmpko9v35m9.cpp:18: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126995
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    return (p == 1) ? n :\
    \ ((n & (p-1)) == (p-1) ? n : ((n%p)+p)%p);\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp345bekkw: /tmp/tmp345bekkw.cpp:10: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126995
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    // https://stackoverflow.com/questions/30666377/fast-algorithm-to-modular-exponentiation\n\
    \    // http://math.stackexchange.com/questions/112065/what-is-the-fastest-algorithm-to-modular-exponentiation-for-very-large-modulo\n\
    \    return n * n % p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpqf1mwlpz: /tmp/tmpqf1mwlpz.cpp:11: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126995
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    return ((p%2 ? 1 : p)\
    \ + (n%p)) % p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpe3i7tklj: /tmp/tmpe3i7tklj.cpp:9: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126995
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long q = p - 1;\n    long\
    \ r = n - 1;\n    long t = q*q + r*r;\n    if (t > 0) {\n        while (r > 0)\
    \ {\n            if (t >= p) {\n                r -= p;\n                q -=\
    \ p;\n            }\n            else {\n                t -= p;\n           \
    \     r -= p;\n                q -= p;\n            }\n        }\n    }\n    return\
    \ q;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5))\
    \ == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpzo9rdpk8: /tmp/tmpzo9rdpk8.cpp:25: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126995
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long result = 0;\n   \
    \ while (n != 0) {\n        if (n%2 == 0) {\n            result = result * 2 +\
    \ 1;\n        }\n        n = n/2;\n    }\n    long reminder = result%p;\n    return\
    \ reminder;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp0vi6eqni: /tmp/tmp0vi6eqni.cpp:17: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126995
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (n--) {\n        res = (res % p) + p;\n    }\n    return res;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpzv9sq98q: /tmp/tmpzv9sq98q.cpp:13: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126995
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = n;\n    while\
    \ (res > p) {\n        res--;\n        n -= res;\n    }\n    return res;\n}\n\
    int main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n\
    \    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101))\
    \ == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpe_tcg454: /tmp/tmpe_tcg454.cpp:15: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126995
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  long q = n; // q is used\
    \ to hold value of n modulo p.\n  while (q) {\n    q %= p;\n    if (q == 0) {\n\
    \      return 1;\n    }\n    p /= 2;\n  }\n  return 0;\n}\nint main() {\n    auto\
    \ candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp9cl4pmgh: /tmp/tmp9cl4pmgh.cpp:17: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126995
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    return ((n % p) + p) %\
    \ p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5))\
    \ == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmphlhhcxdi: /tmp/tmphlhhcxdi.cpp:10: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126938
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  long ans = 1;\n  while (n\
    \ != 0) {\n    if (n & 1) ans = (ans % p) * p;\n    n /= p;\n  }\n  return ans;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp_lfvvuw_: /tmp/tmp_lfvvuw_.cpp:14: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126995
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1L;\n    while\
    \ (n >= p) {\n        res = (res*p) % p;\n        n -= p;\n    }\n    return res%p;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmppkjuqi21: /tmp/tmppkjuqi21.cpp:14: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126995
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long q = n / p;\n    if\
    \ (q < p) {\n        // p > q\n        while (p % q) {\n            q <<= 1;\n\
    \        }\n        // q divides n\n        q %= p;\n    }\n    return q * p;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126995
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while(n\
    \ > p) {\n        n /= p;\n        res *= p;\n    }\n    return n % p;\n}\nint\
    \ main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n\
    \    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101))\
    \ == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpemh1edxd: /tmp/tmpemh1edxd.cpp:15: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126995
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    if (n == 1) return p;\n\
    \    long r = n / p;\n    long r = r * p;\n    r %= p;\n    return r;\n}\nint\
    \ main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n\
    \    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101))\
    \ == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppl0ymmj5.cpp: In function \u2018long int modp(long int, long int)\u2019\
    :\n/tmp/tmppl0ymmj5.cpp:7:10: error: redeclaration of \u2018long int r\u2019\n\
    \    7 |     long r = r * p;\n      |          ^\n/tmp/tmppl0ymmj5.cpp:6:10: note:\
    \ \u2018long int r\u2019 previously declared here\n    6 |     long r = n / p;\n\
    \      |          ^\n"
  stdout: ''
  timestamp: 1660126995
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    // Use multiplication\
    \ for portability and to avoid overflows.\n    return n * (p - 1) * (p - 1);\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpb2ldfjja: /tmp/tmpb2ldfjja.cpp:10: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126995
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long ans = 1;\n    for\
    \ (long i = 1; i <= n; ++i) {\n        ans = (ans * n) % p;\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp1fppm7fh: /tmp/tmp1fppm7fh.cpp:13: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126995
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long ans = 1;\n    while\
    \ (n > p) { ans *= p; n -= p; }\n    while (n > 0) { ans *= n; n--; }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmph_h4hm7i: /tmp/tmph_h4hm7i.cpp:12: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126995
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    assert(p > 0);\n    long\
    \ ans = 1;\n    while (n > 0)\n    {\n        if (n % p > 0)\n        {\n    \
    \        ans = (ans * p) % p;\n        }\n        n /= p;\n    }\n    return ans;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpx7l8mjof: /tmp/tmpx7l8mjof.cpp:19: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126995
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    return p == 1 ? n : n\
    \ % p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpgxe0vhiy: /tmp/tmpgxe0vhiy.cpp:10: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126995
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  assert(p);\n  long q = p\
    \ / n;\n  long r = p % n;\n  q += r;\n  if (r != 0) q++;\n  if (q > 2147483647)\
    \ return 2147483647;\n  return q;\n}\nint main() {\n    auto candidate = modp;\n\
    \    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101))\
    \ == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpaji0pbsz: /tmp/tmpaji0pbsz.cpp:15: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126997
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    return (n == 0 || n ==\
    \ 1) ? (n == 1) ? 0 : p : 0;\n}\nint main() {\n    auto candidate = modp;\n  \
    \  assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101)) ==\
    \ (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpx03p9wg_: /tmp/tmpx03p9wg_.cpp:9: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126997
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  long mod;\n  mod(&mod, &n,\
    \ p);\n  return mod;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr06soqzf.cpp: In function \u2018long int modp(long int, long int)\u2019\
    :\n/tmp/tmpr06soqzf.cpp:6:18: error: \u2018mod\u2019 cannot be used as a function\n\
    \    6 |   mod(&mod, &n, p);\n      |                  ^\n"
  stdout: ''
  timestamp: 1660126996
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    long\
    \ m = p;\n    for (long i = 2; i <= n; i++)\n        r = (r * (m - 2)) % (m *\
    \ 2);\n    return r;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp411zr9ck: /tmp/tmp411zr9ck.cpp:13: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126997
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    if (p == 1) {\n      \
    \  return n;\n    }\n    int res = 0;\n    while (n != 0) {\n        if (n & 1)\
    \ {\n            res += p;\n        }\n        n >>= 1;\n        p >>= 1;\n  \
    \  }\n    return res;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp99b0qxbv: /tmp/tmp99b0qxbv.cpp:20: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126997
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  // To avoid overflow, we\
    \ need at least n >= p.\n  assert(n >= p);\n  long r = 1;\n  while (n >= p) {\n\
    \    r = r * p;\n    n -= p;\n  }\n  if (n > 0) r = r * p;\n  return r;\n}\nint\
    \ main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n\
    \    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101))\
    \ == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpn2v59a6m: /tmp/tmpn2v59a6m.cpp:6: long int modp(long int, long int):
    Assertion `n >= p'' failed.

    '
  stdout: ''
  timestamp: 1660126997
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long q = 1;\n    while\
    \ ((q&1)!=0 && q%p) q = (q+2)%p;\n    return n%p;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmph8l2r1m8: /tmp/tmph8l2r1m8.cpp:12: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126997
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  if(n == 0) return 1;\n \
    \ long ans = 1;\n  while(n) {\n    ans = (ans * p + n%p) % p;\n    n /= p;\n \
    \ }\n  return ans;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp0z4e26na: /tmp/tmp0z4e26na.cpp:16: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126997
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    return p == 0 ? n : ((n\
    \ % p) + p) % p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpcfb8xhb8: /tmp/tmpcfb8xhb8.cpp:10: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126997
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    for (;\
    \ p > 0; p--)\n        r = r * n % p;\n    return r;\n}\nint main() {\n    auto\
    \ candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpdt5tm74k: /tmp/tmpdt5tm74k.cpp:12: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126997
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  long r;\n  while((r = n\
    \ % p) == 0) n = r;\n  return n;\n}\nint main() {\n    auto candidate = modp;\n\
    \    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101))\
    \ == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpeqn2hllr: /tmp/tmpeqn2hllr.cpp:12: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126997
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  return (n%p == 0) ? n :\
    \ n + p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp_ug5x25s: /tmp/tmp_ug5x25s.cpp:9: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126997
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (n) {\n        if ((n & 1) && (p & 1)) res = (res<<1) + 1;\n        p >>= 1;\n\
    \        n  >>= 1;\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp4sr4mymo: /tmp/tmp4sr4mymo.cpp:16: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126997
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  long ans = 1;\n  while (p)\
    \ {\n    ans = (ans*ans)%p;\n    p /= 2;\n  }\n  return ans*ans;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp_jp6khxe: /tmp/tmp_jp6khxe.cpp:14: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126997
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n\tif(p==0) return 0;\n\tlong\
    \ rem=n;\n\twhile(rem!=0){\n\t\trem=rem%p;\n\t\tp=p+p;\n\t}\n\treturn p;\n}\n\
    int main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n\
    \    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101))\
    \ == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660126997
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    return (p == 0) ? 0 :\
    \ (((p * n) >> 63) & ~((p * n) >> (64 - p)));\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpz8uqiyx1: /tmp/tmpz8uqiyx1.cpp:9: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126997
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    return n%p == 0 ? n%p\
    \ : modp(n/p, p);\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpnqzgtlxq: /tmp/tmpnqzgtlxq.cpp:9: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126997
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    return (n%p) + (n%p ==\
    \ 0 ? p : 0);\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmprrh5geb_: /tmp/tmprrh5geb_.cpp:10: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126997
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  long ans = 1L;\n  while(n)\
    \ {\n    ans *= p;\n    ans %= p;\n    n /= p;\n  }\n  return ans;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpp2i9u8jz: /tmp/tmpp2i9u8jz.cpp:15: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126997
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  return (n>0 ? n % p : n%p+p)\
    \ % p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpzpnlou65: /tmp/tmpzpnlou65.cpp:10: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126998
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    // assert(n == p);\n \
    \   long result = 1;\n    while (n) {\n        if (n & 1) {\n            result\
    \ = result * p;\n        }\n        n = n >> 1;\n        p = p * p;\n    }\n \
    \   return result;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpf8h8r8zl: /tmp/tmpf8h8r8zl.cpp:18: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126998
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  long r = 1L;\n  long m =\
    \ 0;\n  while (n > 0) {\n    m <<= 1;\n    m |= n & 1;\n    n >>= 1;\n  }\n  while\
    \ (r > p) {\n    r %= p;\n  }\n  return r;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpudo85d85: /tmp/tmpudo85d85.cpp:19: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126998
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long ret = 1;\n    long\
    \ p = 1;\n    while (p) {\n        if ((n % p) == 0)\n            ret *= p;\n\
    \        p <<= 1;\n    }\n    return ret;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpopiz93r0.cpp: In function \u2018long int modp(long int, long int)\u2019\
    :\n/tmp/tmpopiz93r0.cpp:6:10: error: declaration of \u2018long int p\u2019 shadows\
    \ a parameter\n    6 |     long p = 1;\n      |          ^\n"
  stdout: ''
  timestamp: 1660126998
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  long q = ((n / p) + p) %\
    \ p;\n  return q * p % p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpfq3a0ez9: /tmp/tmpfq3a0ez9.cpp:10: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126998
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  long x = 0;\n  long r =\
    \ 1;\n  while (n > 1) {\n    if (n & 1)\n      x = (x + r) % p;\n    n >>= 1;\n\
    \    r = (r * r) % p;\n  }\n  return x;\n}\nint main() {\n    auto candidate =\
    \ modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpvx7ru3au: /tmp/tmpvx7ru3au.cpp:17: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126998
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  long res = 1LL;\n  while\
    \ (n >= p) {\n    res = res * p % p;\n    n -= p;\n  }\n  return res * n % p;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpmkwrax05: /tmp/tmpmkwrax05.cpp:15: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126998
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    while\
    \ (n) {\n        if (n&1) r += p;\n        n >>= 1;\n        p >>= 1;\n    }\n\
    \    return r;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp4wl9mbdw: /tmp/tmp4wl9mbdw.cpp:15: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126998
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  long t = 1;\n  while (p\
    \ > 1) {\n    if (p & 1) t = t*(n%p); n = n/p;\n    p >>= 1;\n  }\n  return t;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpsnxqibhd: /tmp/tmpsnxqibhd.cpp:15: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126998
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    if (p > 0)\n        return\
    \ ((n + p + 1) % p + p) % p;\n    else if (p < 0)\n        return (n % p + p)\
    \ % p;\n    else\n        return 0;\n}\nint main() {\n    auto candidate = modp;\n\
    \    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101))\
    \ == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmppsir6lf5: /tmp/tmppsir6lf5.cpp:14: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126998
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    int k = 0;\n    while\
    \ (k < ((int)n)) {\n        k = k * 2;\n    }\n    k = k % p;\n    return (long)((p\
    \ ^ k) * p) % p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660127003
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    return 1ULL << n % (1ULL\
    \ << p);\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp8p38jpi9: /tmp/tmp8p38jpi9.cpp:9: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126998
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    return ((n % p) + p) %\
    \ p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5))\
    \ == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmphlhhcxdi: /tmp/tmphlhhcxdi.cpp:10: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126938
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  long r = n;\n  while (1)\
    \ {\n    r = r * p % p;\n    if (r > p)\n      break;\n    r = r / p;\n  }\n \
    \ return r;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660127003
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  assert(n > 0 && p > 0);\n\
    \  long r = 1;\n  for (int i = 0; n > 1; ++i) {\n    r = r * p % n;\n    if (r\
    \ < 0)\n      r += n;\n    n /= 2;\n  }\n  return r;\n}\nint main() {\n    auto\
    \ candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp0mhh14_3: /tmp/tmp0mhh14_3.cpp:17: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126998
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    while (n) {\n        long\
    \ r = n % p;\n        n /= p;\n        p = (r * p + n) / p;\n    }\n    return\
    \ p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5))\
    \ == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp3zyig2pu: /tmp/tmp3zyig2pu.cpp:15: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126998
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  long t = 1 << (p - 1); //\
    \ p-1\n  t *= t; // p-1\n  t %= p; // p-1\n  return n % t + p; // n%p + p\n}\n\
    int main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n\
    \    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101))\
    \ == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp54o5b8sa: /tmp/tmp54o5b8sa.cpp:12: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126998
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    // Write your code in\
    \ C++17 style\n    // C++20 solution?\n    long res = 1;\n    for (long i = 1;\
    \ i<=n; ++i)\n        res *= p;\n    res %= p;\n    return res;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpc4i76aiv: /tmp/tmpc4i76aiv.cpp:15: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126998
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n\tif (n == 0 || p == 0 ||\
    \ p > n)\n\t\tthrow std::runtime_error(\"modp called with invalid argument\");\n\
    \tlong x = 0;\n\tfor (; p; p >>= 1, n--)\n\t\tx = (x * (n + 1)) % p;\n\treturn\
    \ x;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5))\
    \ == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: "terminate called after throwing an instance of 'std::runtime_error'\n \
    \ what():  modp called with invalid argument\n"
  stdout: ''
  timestamp: 1660126998
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    return ((n % p) + ((p-1)\
    \ * (p - 1)))%p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp5k7fob4m: /tmp/tmp5k7fob4m.cpp:9: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126998
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    while\
    \ (n) { r <<= 1; r |= n & 1; n >>= 1; }\n    return r % p;\n}\nint main() {\n\
    \    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpmx5hsjsw: /tmp/tmpmx5hsjsw.cpp:11: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126999
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long ret = 1;\n    long\
    \ q = n / p;\n    if (q > 0) {\n        ret = q * modp(q, p);\n    }\n    return\
    \ n % p * ret;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmphbcwu8sz: /tmp/tmphbcwu8sz.cpp:15: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126999
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    return ((n % p) + p) %\
    \ p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5))\
    \ == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmphlhhcxdi: /tmp/tmphlhhcxdi.cpp:10: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126938
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  if (n == 1)\n    return\
    \ p;\n  if (n % 2 == 0)\n    return modp(n / 2, p);\n  return modp((n * 3 + 1)\
    \ / 2, p) * ((p + 1) / 2) + n;\n}\nint main() {\n    auto candidate = modp;\n\
    \    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101))\
    \ == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmprjciawyn: /tmp/tmprjciawyn.cpp:13: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126999
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    return p == 0 ? n%p :\
    \ modp( (n-p%p) / p, p );\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660127005
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long ret=1;\n    while\
    \ (n) {\n        ret = ret * p + (n&1);\n        n >>= 1;\n    }\n    return ret;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp81rwt1th: /tmp/tmp81rwt1th.cpp:14: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126999
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = n;\n    long\
    \ t;\n    do {\n        t = r;\n        r /= p;\n        r = (r * (p % p)) % p;\n\
    \    } while (r != 0);\n    return t;\n}\nint main() {\n    auto candidate = modp;\n\
    \    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101))\
    \ == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp0ojgsf8u: /tmp/tmp0ojgsf8u.cpp:17: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126999
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    return (n%p)*p;\n}\nint\
    \ main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n\
    \    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101))\
    \ == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpph2ev3td: /tmp/tmpph2ev3td.cpp:9: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126999
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    return ((n % p) + (p -\
    \ (n % p)) * p) % p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp8iin_qor: /tmp/tmp8iin_qor.cpp:10: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126999
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = p % n;\n    return\
    \ (r > 0) ? r : (n + (p - r));\n}\nint main() {\n    auto candidate = modp;\n\
    \    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101))\
    \ == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp4ucnhq7h: /tmp/tmp4ucnhq7h.cpp:10: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126999
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  long q = n / p;\n  long\
    \ r = n % p;\n  if (r < p)\n    return r + p;\n  return q + p;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp1mm9s97s: /tmp/tmp1mm9s97s.cpp:13: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126999
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    if (n == 0)\n        return\
    \ 0;\n    long d = 1;\n    while (n > 0) {\n        if (n % 2 == 0) {\n      \
    \      d *= p;\n        }\n        n /= 2;\n        p *= p;\n    }\n    return\
    \ d;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5))\
    \ == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp6rhgqq05: /tmp/tmp6rhgqq05.cpp:19: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660127000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    return ((n % p) + p) %\
    \ p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5))\
    \ == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmphlhhcxdi: /tmp/tmphlhhcxdi.cpp:10: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126938
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long ans = 1LL;\n    for(;\
    \ n > 0; n >>= 1)\n        if((n & 1LL) == 0)\n            ans = (ans * ans +\
    \ p) % p;\n    return ans;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpph25xt8h: /tmp/tmpph25xt8h.cpp:13: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126999
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    return ((n&-p)|n) + (p&-n);\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpg90pb2ac: /tmp/tmpg90pb2ac.cpp:9: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126999
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    return (n + p) % p;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpgxnehg5o: /tmp/tmpgxnehg5o.cpp:10: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126999
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  return (n%p)*(p+1)/(p-1)%p;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmphllkkb5x: /tmp/tmphllkkb5x.cpp:9: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126999
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (n) {\n        res = (res*p) % n;\n        n--;\n    }\n    return res;\n}\n\
    int main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n\
    \    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101))\
    \ == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpdmiw2lu8: /tmp/tmpdmiw2lu8.cpp:14: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660126999
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    return p == 0 ? n : (n\
    \ + p - 1) * (p + 2) / p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp9mk0xuv5: /tmp/tmp9mk0xuv5.cpp:9: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660127000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  long res = 0;\n  while(n\
    \ != 0) {\n    res = (res*2L + n%p) % p;\n    n /= p;\n  }\n  return res;\n}\n\
    int main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n\
    \    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101))\
    \ == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpzcp1oly3: /tmp/tmpzcp1oly3.cpp:15: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660127000
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  long ret = 1;\n  while ((n\
    \ & 1) == 1) { n >>= 1; ret++; }\n  while (p > 0) {\n    if (p & 1) { ret = ((ret\
    \ << 1) + 1) % p; } else { ret = ((ret << 1) + 2) % p; }\n    p >>= 1; ret %=\
    \ p;\n  }\n  return ret;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660127000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long m = n;\n    for (long\
    \ i = 1; i < p; i++) m = (m * m) % p;\n    return m;\n}\nint main() {\n    auto\
    \ candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpvs7yo80m: /tmp/tmpvs7yo80m.cpp:11: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660127000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    return ((n & -p) == n)\
    \ ? p : (p - ((n >> 1) & -p));\n}\nint main() {\n    auto candidate = modp;\n\
    \    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101))\
    \ == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp7500yd3_: /tmp/tmp7500yd3_.cpp:9: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660127000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    return (p == 0) ? n :\
    \ (n + p - 1) % p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp8ymtcly_: /tmp/tmp8ymtcly_.cpp:9: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660127000
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1LL;\n    while\
    \ (n > p) res *= p;\n    long res = res%p;\n    return res%p;\n}\nint main() {\n\
    \    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpu1_ju5lp.cpp: In function \u2018long int modp(long int, long int)\u2019\
    :\n/tmp/tmpu1_ju5lp.cpp:7:10: error: redeclaration of \u2018long int res\u2019\
    \n    7 |     long res = res%p;\n      |          ^~~\n/tmp/tmpu1_ju5lp.cpp:5:10:\
    \ note: \u2018long int res\u2019 previously declared here\n    5 |     long res\
    \ = 1LL;\n      |          ^~~\n"
  stdout: ''
  timestamp: 1660127000
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1L;\n    while(n>0){\n\
    \        r = r * 2L + n%p;\n        n /= p;\n    }\n    return r;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpzgzk3j3z: /tmp/tmpzgzk3j3z.cpp:14: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660127001
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = p;\n    while\
    \ (n) {\n        if (n % 2 == 1) r += p;\n        n /= 2;\n        p *= p;\n \
    \   }\n    return r;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp1wxlda9o: /tmp/tmp1wxlda9o.cpp:15: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660127001
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    return ((n % p) + p) %\
    \ p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5))\
    \ == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmphlhhcxdi: /tmp/tmphlhhcxdi.cpp:10: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126938
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    // Avoid division by zero.\n\
    \    if (p == 1) return n;\n    long q = p / n;\n    if (q * n != p) return 0;\n\
    \    return q;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp_rlteu2a: /tmp/tmp_rlteu2a.cpp:13: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660127001
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    return (p-1) * (p-1) /\
    \ 2 + (n)*n / p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmplo2b3g65: /tmp/tmplo2b3g65.cpp:9: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660127001
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  assert(n >= 0);\n  assert(p\
    \ > 0);\n  assert(p < 2147483648L);\n  long ans = 0;\n  while (n > 0) {\n    ans\
    \ = ans | ((n % p) << 1);\n    n >>= 1;\n  }\n  return ans;\n}\nint main() {\n\
    \    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpvkyqwjyx: /tmp/tmpvkyqwjyx.cpp:17: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660127001
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long result = 0;\n   \
    \ while (n > p) {\n        result += p;\n        n -= p;\n    }\n    result +=\
    \ (n % p); // remainder\n    return result;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpkgg2irw0: /tmp/tmpkgg2irw0.cpp:16: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660127001
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long ret = n;\n    while\
    \ (ret > p) {\n        ret -= p;\n        ++ret;\n    }\n    return ret;\n}\n\
    int main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n\
    \    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101))\
    \ == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpj7v_u5hq: /tmp/tmpj7v_u5hq.cpp:15: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660127001
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    while(n)\
    \ {\n        r = r % p;\n        n /= 2;\n    }\n    return r;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp1_4_j26s: /tmp/tmp1_4_j26s.cpp:14: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660127001
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long long res = 1;\n \
    \   long long pm = p;\n    while (n) {\n        if (n & 1)\n            res =\
    \ (res * pm) % p;\n        pm = pm * p;\n        n >>= 1;\n    }\n    return res;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpfokkpp1p: /tmp/tmpfokkpp1p.cpp:17: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660127001
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    return n % p;\n}\nint\
    \ main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n\
    \    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101))\
    \ == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmphwlwfbfr: /tmp/tmphwlwfbfr.cpp:10: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660127001
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  long r = n;\n  while (n\
    \ > p) {\n    r = (r << 1) | (r >> 63);\n    n--;\n  }\n  return r;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpno1yqgr4: /tmp/tmpno1yqgr4.cpp:15: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660127001
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 0;\n    for\
    \ (long m = n; m >= p; m -= p) {\n        res |= m << p;\n    }\n    return res;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpidhn1yqd: /tmp/tmpidhn1yqd.cpp:13: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660127001
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n\treturn p == 0 ? n : n %\
    \ p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5))\
    \ == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp3m2y__gu: /tmp/tmp3m2y__gu.cpp:10: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660127001
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1; // start\
    \ with the bit\n    while ((n >> 63) == 0) {\n        res *= p;\n        n <<=\
    \ 1;\n    }\n    res *= p; // multiply by p\n    while (n >> 63 > 0) {\n     \
    \   res *= p;\n        n >>= 1;\n    }\n    return n % p;\n}\nint main() {\n \
    \   auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpett72t26: /tmp/tmpett72t26.cpp:19: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660127001
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  if (n == 0) return 0;\n\
    \  long m = (n % p + p) % p;\n  if (m < 0) m += p;\n  return m;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp532cd1ld: /tmp/tmp532cd1ld.cpp:13: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660127001
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  long t = n - 1;\n  while\
    \ (t%p) t = t/p;\n  return t + p;\n}\nint main() {\n    auto candidate = modp;\n\
    \    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101))\
    \ == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpoilsmb9f: /tmp/tmpoilsmb9f.cpp:11: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660127001
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long ans = 1;\n    while\
    \ ((n % p) == 0) {\n        ans = (ans * p) % p;\n        n /= p;\n    }\n   \
    \ return ans;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpftd65618: /tmp/tmpftd65618.cpp:14: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660127001
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    if (n == 0)\n        return\
    \ 1;\n    if (n == p)\n        return n;\n    if (n < p)\n        return modp(n\
    \ - p, p);\n    return (n % p) + modp((n / p), p);\n}\nint main() {\n    auto\
    \ candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660127006
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (n > 1) {\n        if (n & 1) res = (res<<1)^p;\n        n >>= 1;\n        p\
    \ = (p<<1)^p;\n    }\n    return res;\n}\nint main() {\n    auto candidate = modp;\n\
    \    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101))\
    \ == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmph1aln4va: /tmp/tmph1aln4va.cpp:15: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660127002
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r = 1;\n    while\
    \ (p) {\n        r = r * n % p;\n        n /= p;\n    }\n    return r;\n}\nint\
    \ main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n\
    \    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101))\
    \ == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660127007
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  if (n & p)\n    return modp(n\
    \ + p + 1, p);\n  else\n    return n;\n}\nint main() {\n    auto candidate = modp;\n\
    \    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101))\
    \ == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660127008
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  long r = 1;\n  for(; n;\
    \ n >>= 1, p >>= 1) {\n    if(n & 1) r += p;\n  }\n  return r;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpbfagrzm4: /tmp/tmpbfagrzm4.cpp:13: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660127002
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    return p - (p%n);\n}\n\
    int main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n\
    \    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101))\
    \ == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpw99wz98w: /tmp/tmpw99wz98w.cpp:10: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660127002
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long ans = 1ll << n;\n\
    \    long a = 1ll << p;\n    long b = 1ll << p;\n    ans %= p;\n    while (ans%p\
    \ != 0) {\n        ans = (ans + b)%p;\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpwa1w6frv: /tmp/tmpwa1w6frv.cpp:16: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660127002
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long r;\n    long q;\n\
    \    r = 1;\n    q = n;\n    while (n > 0) {\n        if ((n & 1) != 0) {\n  \
    \          r = (r * q) % p;\n        }\n        q = (q * q) % p;\n        n >>=\
    \ 1;\n    }\n    return r;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpd8ycpek6: /tmp/tmpd8ycpek6.cpp:20: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660127002
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long m = (n^p)%p;\n  \
    \  if (m>p) return 0;\n    else return m;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpgsmmh59v: /tmp/tmpgsmmh59v.cpp:11: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660127002
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  return n >= p ? n - (n %\
    \ p) : n - ((n % p) + p);\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpk_vt3_n3: /tmp/tmpk_vt3_n3.cpp:9: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660127002
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    return ((n % p) + p) %\
    \ p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5))\
    \ == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmphlhhcxdi: /tmp/tmphlhhcxdi.cpp:10: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126938
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long d = n % p;\n    return\
    \ d * d % p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp3j6hbw4s: /tmp/tmp3j6hbw4s.cpp:10: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660127002
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ (n > 0) {\n        res = (res*2L + n%p) % p;\n        n /= p;\n    }\n    return\
    \ res;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpp37vnl1b: /tmp/tmpp37vnl1b.cpp:14: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660127002
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  assert(p > 0);\n  long q\
    \ = p / 2;\n  long r = p % 2;\n  long ans = 1;\n  while (q) {\n    if (n & 1)\n\
    \      ans = (ans * (q - r)) % p;\n    n >>= 1;\n    q = (q * 2) % p;\n    r =\
    \ (r * 2) % p;\n  }\n  return ans;\n}\nint main() {\n    auto candidate = modp;\n\
    \    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101))\
    \ == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660127007
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n   long r = 1;\n   for (int\
    \ i = 0; i < n; ++i) {\n      r *= p;\n   }\n   return r % p;\n}\nint main() {\n\
    \    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmplsqzvivp: /tmp/tmplsqzvivp.cpp:13: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660127002
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long q = p / n;\n    return\
    \ (p - (q * n)) % p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpojo01dtn: /tmp/tmpojo01dtn.cpp:10: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660127002
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long result = 0;\n   \
    \ while (n > p) {\n        n -= p;\n        result *= p;\n    }\n    return n\
    \ % p + p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp7fppmxsf: /tmp/tmp7fppmxsf.cpp:14: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660127002
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  // return n * p % p; //\
    \ this might overflow for some n, p, with p<=10^15\n  // this one is better\n\
    \  return ((n%p)*p)%p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpukwif82i: /tmp/tmpukwif82i.cpp:11: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660127002
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    assert(p);\n    long q\
    \ = p%n;\n    long r = n;\n    while (q >> 1) r += p;\n    return r;\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660127007
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    return ((n % p) + p) %\
    \ p;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5))\
    \ == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmphlhhcxdi: /tmp/tmphlhhcxdi.cpp:10: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660126938
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  long res = 1;\n  for (int\
    \ i = 0; i < p; i++) {\n    res = res * 2 % p;\n  }\n  return res % p;\n}\nint\
    \ main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n\
    \    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101))\
    \ == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmptfbxicbt: /tmp/tmptfbxicbt.cpp:13: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660127002
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while\
    \ ((n & 1) == 0)\n        n >>= 1, res <<= 1;\n    while (n) {\n        if (n\
    \ & 1)\n            res ^= p;\n        n >>= 1, p ^= p;\n    }\n    return res;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpxvcvkbq1: /tmp/tmpxvcvkbq1.cpp:17: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660127002
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    return (n + p-1) & -p;\n\
    }\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5)) ==\
    \ (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpo_aeeczq: /tmp/tmpo_aeeczq.cpp:10: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660127003
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n  long a = 1LL, z = n - p,\
    \ r = n;\n  while (a < z) {\n    r = r * z + ((a << 1) ^ (a >> 63)); // powmod(a,a,n);\n\
    \    z--;\n  }\n  return r % p;\n}\nint main() {\n    auto candidate = modp;\n\
    \    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101))\
    \ == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp6zv4z7da: /tmp/tmp6zv4z7da.cpp:15: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660127004
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n\tassert(n >= 0 && p >= 0);\n\
    \treturn (n + p - 1) & (-p);\n}\nint main() {\n    auto candidate = modp;\n  \
    \  assert(candidate((3), (5)) == (3));\n    assert(candidate((1101), (101)) ==\
    \ (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpo03b6n3o: /tmp/tmpo03b6n3o.cpp:11: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660127004
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n\tlong long remainder = n\
    \ % (p+1);\n\tlong long quotient = n / p;\n\tassert(remainder == 0);\n\treturn\
    \ quotient;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpm9mduykb: /tmp/tmpm9mduykb.cpp:7: long int modp(long int, long int):
    Assertion `remainder == 0'' failed.

    '
  stdout: ''
  timestamp: 1660127004
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long t = (n * p + n) /\
    \ p;\n    if (t > p) return p + 1;\n    return t;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmppmv5ij5j: /tmp/tmppmv5ij5j.cpp:12: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660127004
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    if (p == 0) {\n      \
    \  return 1;\n    } else {\n        return ((n%p)+p) % p;\n    }\n}\nint main()\
    \ {\n    auto candidate = modp;\n    assert(candidate((3), (5)) == (3));\n   \
    \ assert(candidate((1101), (101)) == (2));\n    assert(candidate((0), (101)) ==\
    \ (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmp6pjsvjio: /tmp/tmp6pjsvjio.cpp:14: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660127004
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long x = 1;\n    long\
    \ r = 1;\n    while(p != 0) {\n        if(p & 1) r = (r * x) % p;\n        x <<=\
    \ 1;\n        p >>= 1;\n    }\n    return r;\n}\nint main() {\n    auto candidate\
    \ = modp;\n    assert(candidate((3), (5)) == (3));\n    assert(candidate((1101),\
    \ (101)) == (2));\n    assert(candidate((0), (101)) == (1));\n    assert(candidate((3),\
    \ (11)) == (8));\n    assert(candidate((100), (101)) == (1));\n    assert(candidate((30),\
    \ (5)) == (4));\n    assert(candidate((31), (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpj78yi8zo: /tmp/tmpj78yi8zo.cpp:16: int main(): Assertion `candidate((3),
    (5)) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660127004
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be\
    \ aware of numerics).\nlong modp(long n, long p) {\n    long res = 1;\n    while(n\
    \ > 0){\n        if(n & 1) res = (res*n) % p;\n        n = n >> 1;\n    }\n  \
    \  return res;\n}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3),\
    \ (5)) == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
    \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
    \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
    \ (5)) == (3));\n}\n"
  status: Exception
  stderr: 'tmpfqwa4tcz: /tmp/tmpfqwa4tcz.cpp:15: int main(): Assertion `candidate((1101),
    (101)) == (2)'' failed.

    '
  stdout: ''
  timestamp: 1660127004

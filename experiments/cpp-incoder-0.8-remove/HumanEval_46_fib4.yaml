name: HumanEval_46_fib4
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Fib4 number sequence\
  \ is a sequence similar to the Fibbonacci sequnece that's defined as follows:\n\
  // fib4(0) -> 0\n// fib4(1) -> 0\n// fib4(2) -> 2\n// fib4(3) -> 0\n// fib4(n) ->\
  \ fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4).\n// Please write a function to\
  \ efficiently compute the n-th element of the fib4 number sequence.  Do not use\
  \ recursion.\nlong fib4(long n) {\n"
tests: "}\nint main() {\n    auto candidate = fib4;\n    assert(candidate((5)) ==\
  \ (4));\n    assert(candidate((8)) == (28));\n    assert(candidate((10)) == (104));\n\
  \    assert(candidate((12)) == (386));\n}\n"
completions: ["    if(n<4) \n        return n; \n    else \n        return fib4(n\
    \ - 4) + fib4(n - 3) + fib4(n - 2) + fib4(n - 1);", "\tlong i = 0;\n\tlong j =\
    \ n;\n\tlong temp = 0;\n\twhile(i<j){\n\t\ttemp = temp + i;\n\t\ti = i + 2;\n\t\
    \tj = j - 1;\n\t}\n\treturn temp;", "    // code here\n    long res = 0;\n   \
    \ long fib1 = 0;\n    long fib2 = 1;\n    long fib3 = 1;\n    long fib4 = 1;\n\
    \    long fib5 = 1;\n    if (n == 0) {\n        return 0;\n    } else if (n ==\
    \ 1) {\n        return 0;\n    } else if (n == 2) {\n        return 2;\n    }\
    \ else if (n == 3) {\n        return 0;\n    } else {\n        while (fib4 < n)\
    \ {\n            fib5 = fib1 + fib2 + fib3 + fib4;\n            fib2 = fib3;\n\
    \            fib3 = fib4;\n            fib4 = fib5;\n            res += fib5;\n\
    \            fib1 = fib1;\n        }\n        return res;\n    }", "    long ans\
    \ = 0L;\n    if(n<=0)\n    {\n        ans = 0;\n    }\n    else\n    {\n     \
    \   ans = fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);\n    }\n    return\
    \ ans;", "    long fib = 0;\n    long x;\n    if (n < 2) return n;\n    fib +=\
    \ fib4(n - 2);\n    fib += fib4(n - 3);\n    fib += fib4(n - 4);\n    x = fib4(n\
    \ - 1);\n    fib += fib4(n-2);\n    fib += fib4(n-3);\n    fib += fib4(n-4);\n\
    \    return fib + x;", "    if(n == 0){\n        return 0;\n    }\n    if(n ==\
    \ 1){\n        return 1;\n    }\n    if(n == 2){\n        return 2;\n    }\n \
    \   if(n == 3){\n        return 0;\n    }\n    return fib4(n - 1) + fib4(n - 2)\
    \ + fib4(n - 3) + fib4(n - 4);", '    return n < 4 ? n : 0;', "    if(n==0)\n\
    \        return 0;\n    else if(n==1)\n        return 1;\n    else if(n==2)\n\
    \        return 2;\n    else\n        return fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4);", "    assert(n > 0);\n    if (n == 1 || n == 2) {\n        return\
    \ n;\n    }\n    return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);",
  "    if (n < 0) return 0;\n    if (n == 0) return 0;\n    long sum = 0;\n    long\
    \ curr = 1;\n    for (int i = 3; i <= n; i+=2)\n        sum += curr;\n       \
    \ curr = 1;\n    for (int i = 2; i <= n; i++) {\n        curr += curr;\n     \
    \   sum += curr;\n    }\n    return sum;", "\tassert (n>=0);\n\tassert (n<4);\n\
    \tlong first;\n\tif (n==0) first=0;\n\telse if (n==1) first=1;\n\telse if (n==2)\
    \ first=2;\n\telse if (n==3) first=0;\n\telse first=fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4);\n\treturn first;", "    if (n == 0) return 0;\n    if (n == 1)\
    \ return 0;\n    if (n == 2) return 2;\n    if (n == 3) return 0;\n    long sum\
    \ = 0;\n    for (long i = 4; i <= n; i = i + 4) sum += fib4(i) + fib4(i-1);\n\
    \    return sum;", "    long count = 0;\n    if (n < 0) return 0;\n    while (n\
    \ >= 2) {\n        count += fib4(n-1) + fib4(n-2);\n        n--;\n    }\n    return\
    \ count;", "    if (n==0){\n        return 0;\n    }\n    if (n==1){\n       \
    \ return 0;\n    }\n    if (n==2){\n        return 2;\n    }\n    if (n==3){\n\
    \        return 0;\n    }\n    return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4);",
  "    if (n == 0) {\n        return 0;\n    }\n    if (n == 1) {\n        return\
    \ 1;\n    }\n    if (n == 2) {\n        return 2;\n    }\n    if (n == 3) {\n\
    \        return 0;\n    }\n    return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4);",
  "\t// Write your code here.\n\tassert(n>0 && n<100000);\n\tlong ans = 0;\n\tlong\
    \ a = 1;\n\tlong b = 2;\n\tlong c = 1;\n\tlong d = 2;\n\tlong e = 1;\n\tlong f\
    \ = 3;\n\t\n\twhile(n!=0) {\n\t\tif(n & 1) {\n\t\t\tans += a;\n\t\t}\n\t\telse\
    \ {\n\t\t\tans += b;\n\t\t}\n\t\tn = n>>1;\n\t\tif(n!=0) {\n\t\t\ta = a+c;\n\t\
    \t\tb = b+d;\n\t\t\tc = c+e;\n\t\t\td = d+f;\n\t\t\te = e+a;\n\t\t\tf = f+b;\n\
    \t\t}\n\t}\n\treturn ans;", "  // Base cases: n==0, n==1, n==2, n==3.\n  long\
    \ sum = 0;\n  if (n<4) {\n    sum = 0;\n  } else if (n==4) {\n    sum = 1;\n \
    \ } else {\n    sum = fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4);\n  }\n  return\
    \ sum;", "    long num = 0;\n    if (n == 0 || n == 1)\n        return n;\n  \
    \  else if (n == 2)\n        return 4;\n    else if (n == 3)\n        return 8;\n\
    \    else\n        return (fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n -\
    \ 4));", "\tif (n == 0) {\n\t\treturn 0;\n\t}\n\tif (n == 1) {\n\t\treturn 1;\n\
    \t}\n\tif (n == 2) {\n\t\treturn 2;\n\t}\n\tif (n == 3) {\n\t\treturn 0;\n\t}\n\
    \tlong a = fib4(n-1);\n\tlong b = fib4(n-2);\n\tlong c = fib4(n-3);\n\tlong d\
    \ = fib4(n-4);\n\treturn a+b+c+d;", "    if(n == 0){\n        return 0;\n    }\n\
    \    if(n == 1){\n        return 0;\n    }\n    if(n == 2){\n        return 2;\n\
    \    }\n    if(n == 3){\n        return 0;\n    }\n    if(n == 4){\n        return\
    \ 4;\n    }\n    return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4);", "  if(n<0)\
    \ return 0;\n  if(n==0) return 0;\n  if(n==1) return 1;\n  if(n==2) return 2;\n\
    \  if(n==3) return 1;\n  return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4);",
  "    long ans = 0;\n    for (long i = 0; i <= n; i++) {\n        ans = ans + (n\
    \ - i) * fib4(i + 1);\n    }\n    return ans;", "\tlong prev=0,curr=0,prev2=0,curv2=0,prev3=0,curv3=0,prev4=0;\n\
    \tassert(n>0);\n\tif(n==0)\n\t\treturn 0;\n\tif(n==1)\n\t\treturn 1;\n\tif(n==2)\n\
    \t\treturn 2;\n\tif(n<4)\n\t\treturn fib4(n-1)+fib4(n-2);\n\tif(n%2==0) {\n\t\t\
    prev2=prev3=curv2=prev4=curv3;\n\t\tprev=curv2=curv3=curv1=curr=0;\n\t\tfor(int\
    \ i=4;i<=n;i+=2)\n\t\t\tcurr=prev3+prev4+prev2+prev1;\n\t}\n\telse {\n\t\tprev1=prev3=prev2=prev4=curv1;\n\
    \t\tprev=curv1=curv2=curv3=curv4=curr=0;\n\t\tfor(int i=3;i<=n;i+=2)\n\t\t\tcurr=prev3+prev4+prev2+prev1;\n\
    \t}\n\treturn curr;", "    if (n == 0)\n        return 0;\n    else if (n == 1)\n\
    \        return 1;\n    else if (n == 2)\n        return 2;\n    else if (n ==\
    \ 3)\n        return 0;\n    else\n        return fib4(n - 4) + fib4(n - 3) +\
    \ fib4(n - 2) + fib4(n - 1);", "    if (n<0)\n        return 0;\n    if (n==0)\n\
    \        return 0;\n    if (n==1)\n        return 1;\n    long ans = fib4(n-1)+fib4(n-2);\n\
    \    return ans;", "  assert(n >= 0);\n  if (n == 0) return 0;\n  if (n == 1)\
    \ return 1;\n  return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);",
  "\tif (n <= 2) {\n\t\treturn n;\n\t}\n\treturn fib4(n - 1) + fib4(n - 2) + fib4(n\
    \ - 3) + fib4(n - 4);", "\tif (n == 0 || n == 1)\n\t\treturn n;\n\telse\n\t\t\
    return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4);", "\tif(n==1 || n==2) return\
    \ 1;\n\tif(n==0) return 0;\n\tif(n%3 == 0) return fib4(3*n+1);\n\treturn fib4(3*n+2)+fib4(3*n+1);",
  "    assert(n >= 0);\n    if (n == 0 || n == 1) {\n        return n;\n    }\n  \
    \  long ans = fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4);\n    return ans;",
  "    // assert(n>=0);\n    if(n==0)\n        return 0;\n    if(n==1)\n        return\
    \ 0;\n    if(n==2)\n        return 2;\n    if(n==3)\n        return 0;\n    if(fib4(n-1)+fib4(n-2)+fib4(n-3)+fib4(n-4)==n)\n\
    \        return n;\n    return n;", "     if(n ==0 || n ==1) {\n         return\
    \ n;\n     }\n     long fib3=(fib4(fib4(n-1))+fib4(fib4(n-2))+fib4(fib4(n-3))+fib4(fib4(n-4)))%1000000007;\n\
    \     return fib3;", "    if (n <= 3) {\n        return n;\n    } else {\n   \
    \     return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);\n    }", "\t\
    if (n == 0 || n == 1) {\n\t\treturn n;\n\t}\n\treturn fib4(n - 1) + fib4(n - 2)\
    \ + fib4(n - 3) + fib4(n - 4);", "    long ans=0;\n    ans=ans+(n-1)*((n-1)*ans);\n\
    \    return ans;", "\tif(n==0)\n\t\treturn 0;\n\tif(n==1)\n\t\treturn 0;\n\tif(n==2)\n\
    \t\treturn 2;\n\tif(n==3)\n\t\treturn 0;\n\tif(n==4)\n\t\treturn 4;\n\treturn\
    \ fib4(n-1)+fib4(n-2)+fib4(n-3)+fib4(n-4);", "\tif(n==0)\n\t\treturn 0;\n\tif(n==1)\n\
    \t\treturn 1;\n\tif(n==2)\n\t\treturn 2;\n\tif(n==3)\n\t\treturn 0;\n\tlong sum=0;\n\
    \tlong i=0;\n\tfor(long j=0;j<4;j++){\n\t\tif(i<n){\n\t\t\tsum=sum+fib4(n-j)+fib4(n-j-1)+fib4(n-j)+fib4(n-j-1);\n\
    \t\t\ti++;\n\t\t}\n\t}\n\treturn sum;", "    // Write your code here\n    if (n\
    \ == 0)\n        return 0;\n    if (n == 1)\n        return 0;\n    if (n == 2)\n\
    \        return 2;\n    if (n == 3)\n        return 0;\n    if (n == 4)\n    \
    \    return 2;\n\n    return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n\
    \ - 4);", "    if(n==0) return 0;\n    if(n==1) return 0;\n    if(n==2) return\
    \ 2;\n    if(n==3) return 0;\n    if(n==4) return 1;\n    return fib4(n-1) + fib4(n-2)\
    \ + fib4(n-3) + fib4(n-4);", "    assert(n >= 0);\n    long f[4];\n    f[0] =\
    \ 0;\n    f[1] = 0;\n    f[2] = 2;\n    f[3] = 0;\n    for (int i = 0; i < n;\
    \ i++) {\n        f[i] = f[i - 1] + f[i - 2] + f[i - 3] + f[i - 4];\n    }\n \
    \   return f[n];", "  // Code goes here\n  return 0;", "   if(n<0)\n      std::cerr\
    \ << \"The n value must be >= 0\" << std::endl;\n   assert(n>=0);\n   long x =\
    \ 1;\n   if(n==0) return x;\n   if(n==1) return 0;\n   if(n==2) return 2;\n  \
    \ if(n==3) return 0;\n   if(n%2==0) return fib4(n-1)+fib4(n-2)+fib4(n-3)+fib4(n-4);\n\
    \   return fib4(n-1)+fib4(n-2);", '    return n<2 ? n : fib4(n-1) + fib4(n-2)
    + fib4(n-3) + fib4(n-4);', "  long long ans = 0;\n  if (n == 0) return 0;\n  if\
    \ (n == 1) return 0;\n  if (n == 2) return 2;\n  if (n == 3) return 0;\n  if (n\
    \ == 4) return 3;\n  long long a1 = fib4(n - 1);\n  long long a2 = fib4(n - 2);\n\
    \  long long a3 = fib4(n - 3);\n  long long a4 = fib4(n - 4);\n  ans = a1 + a2\
    \ + a3 + a4;\n  return ans;", "    // write your code here\n    if (n <= 1) {\n\
    \        return n;\n    } else {\n        long ret1 = fib4(n - 1);\n        long\
    \ ret2 = fib4(n - 2);\n        long ret3 = fib4(n - 3);\n        long ret4 = fib4(n\
    \ - 4);\n        return ret1 + ret2 + ret3 + ret4;\n    }", "    long fib;\n \
    \   if(n==0)\n        fib=0;\n    if(n==1)\n        fib=1;\n    if(n==2)\n   \
    \     fib=2;\n    if(n==3)\n        fib=3;\n    fib=fib+fib+fib+fib;\n    return\
    \ fib;", "    if (n == 0 || n == 1) {\n        return n;\n    }\n    else {\n\
    \        long a = fib4(n - 2);\n        long b = fib4(n - 3);\n        return\
    \ a + b + fib4(n - 4);\n    }", "    // base case\n    if (n == 0)\n        return\
    \ 0;\n    else if (n == 1)\n        return 1;\n    else if (n == 2)\n        return\
    \ 2;\n    else if (n == 3)\n        return 0;\n    else\n        return fib4(n\
    \ - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);", "    long sum = 0;\n    long\
    \ i = 2;\n    for (long m = i; i <= n; i++) {\n        sum += i;\n    }\n    return\
    \ sum;", "    assert(n >= 0 && n <= 4);\n    if (n == 0) return 0;\n    else if\
    \ (n == 1) return 0;\n    else if (n == 2) return 2;\n    else if (n == 3) return\
    \ 0;\n    else return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);",
  "     assert(n >= 0);\n     assert(n <= 4);\n     long f[] = {0, 1, 1, 2, 3, 5};\n\
    \     return f[n];", "    long sum = 0;\n    long x = 1;\n    for (int i = 1;\
    \ i < n; i++) {\n        sum += x;\n        x = x + 2;\n    }\n    return sum;",
  "    long ans = 1;\n    if(n<0){\n        return 0;\n    }\n    if(n==0 || n==1){\n\
    \        return n;\n    }\n    for(int i=2; i<=n; i++){\n        ans = ans + fib4(n-i);\n\
    \    }\n    return ans;", '    // write your code', "  long res=1;\n  for (long\
    \ i=n;i>=1;i--) {\n    res=res+i;\n  }\n  return res;", "    int count = 0;\n\
    \    for (int i = 4; i >= 1; i++) {\n        if (i == n - 1) {\n            count\
    \ += 1;\n        } else {\n            count += i;\n        }\n    }\n    return\
    \ count;", "     assert(n >= 0);\n     long result = 0;\n     while (n > 0)\n\
    \         result = result + n;\n     return result;", "    assert(n >= 0);\n \
    \   if (n == 0)\n        return 0;\n    if (n == 1)\n        return 1;\n    if\
    \ (n == 2)\n        return 2;\n    long sum = 0;\n    for (long i = 4; i <= n;\
    \ i++)\n        sum = sum + fib4(i) + fib4(i - 1);\n    return sum;", "    long\
    \ fib_arr[] = {0, 1, 1, 2, 3, 5, 8, 13, 21, 34};\n    long ans = 0;\n    if(n<4){\n\
    \        ans = fib_arr[n];\n    }\n    else{\n        ans = fib4(n-4)+fib4(n-3)+fib4(n-2)+fib4(n-1);\n\
    \    }\n    return ans;", '  // Complete this function!', "    long i=0;\n   \
    \ long sum = 0;\n    while(i<n) {\n        if(n%4 == 0) sum+=i;\n        else\
    \ sum+=i+i+i+i;\n        i++;\n    }\n    return sum;", "\tif (n<0){\n\t\tassert(0);\n\
    \t\treturn;\n\t}\n\tif (n==0)\n\t\treturn 0;\n\tif (n==1)\n\t\treturn 0;\n\tif\
    \ (n==2)\n\t\treturn 2;\n\tif (n==3)\n\t\treturn 0;\n\tif (n==4)\n\t\treturn 1;\n\
    \tlong ans=fib4(n-1)+fib4(n-2)+fib4(n-3)+fib4(n-4);\n\treturn ans;", "    // write\
    \ your code here\n    long sum = 0;\n    for (int i = 2; i <= n; i++)\n      \
    \  sum += i;\n    return sum;", "    \n    if(n==4)\n        return n;\n    \n\
    \    long ans=0;\n    long temp=fib4(4-(n&3));\n    \n    for(int i=0;i<n;i++)\n\
    \    {\n        temp+=temp;\n        ans+=temp;\n    }\n    \n    return ans;\n\
    \    ", "\tif(n<=0)\n\t\treturn 0;\n\tif(n==1)\n\t\treturn 0;\n\treturn fib4(n-1)+fib4(n-2)+fib4(n-3)+fib4(n-4);",
  "    if (n<4) {\n        return 0;\n    }\n    return fib4(4) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4);", "    if(n == 0 || n == 1)\n        return n;\n    else if(n ==\
    \ 2)\n        return 1;\n    else if(n == 3)\n        return 1;\n    else\n  \
    \      return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4);", '    return n ==
    0 ? 0 : n == 1 ? 1 : fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);',
  "  assert(n >= 0);\n  if (n == 0 || n == 1)\n    return n;\n  return fib4(n - 1)\
    \ + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);", "\tif (n == 0) {\n\t\treturn 0;\n\
    \t}\n\telse if (n == 1) {\n\t\treturn 1;\n\t}\n\telse if (n == 2) {\n\t\treturn\
    \ 2;\n\t}\n\telse if (n == 3) {\n\t\treturn 3;\n\t}\n\telse if (n == 4) {\n\t\t\
    return 5;\n\t}\n\telse if (n == 5) {\n\t\treturn 8;\n\t}\n\telse if (n == 6) {\n\
    \t\treturn 13;\n\t}\n\telse if (n == 7) {\n\t\treturn 21;\n\t}\n\telse if (n ==\
    \ 8) {\n\t\treturn 34;\n\t}\n\telse if (n == 9) {\n\t\treturn 55;\n\t}\n\telse\
    \ if (n == 10) {\n\t\treturn 89;\n\t}\n\telse if (n == 11) {\n\t\treturn 144;\n\
    \t}\n\telse {\n\t\treturn 233;\n\t}", "    if(n<4){\n        return n;\n    }\n\
    \    if(n==4){\n        return 4;\n    }\n    long sum=fib4(n-1);\n    sum+=fib4(n-2);\n\
    \    sum+=fib4(n-3);\n    sum+=fib4(n-4);\n    return sum;", "    if(n <= 0) {\n\
    \        return 0;\n    }\n    long ans = fib4(n - 1) + fib4(n - 2) + fib4(n -\
    \ 3) + fib4(n - 4);\n    return ans;", "    long ans = 0;\n    long temp = n;\n\
    \    long temp1 = n;\n    long temp2 = n;\n    long temp3 = n;\n    long temp4\
    \ = n;\n    temp4 = temp4 - temp2;\n    temp3 = temp3 - temp1;\n    temp2 = temp2\
    \ - temp;\n    temp1 = temp1 - temp;\n    ans = temp4 + temp3;\n    return ans;",
  "    // assert(n > 0);\n    if (n == 0) {\n        // return 0;\n        return\
    \ 0;\n    } else if (n == 1) {\n        // return 1;\n        return 0;\n    }\
    \ else if (n == 2) {\n        return 2;\n    } else if (n == 3) {\n        return\
    \ 0;\n    } else if (n == 4) {\n        return 1;\n    } else {\n        return\
    \ fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4);\n    }", "    long x = 0, y =\
    \ 1, z = 0;\n    while (n < 10) {\n        x = y + z;\n        y = x;\n      \
    \  z = x;\n        ++n;\n    }\n    return z;", "\tassert(n > 0);\n\tlong a =\
    \ 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\tif (n == 1)\n\t\treturn a;\n\
    \tif (n == 2)\n\t\treturn b;\n\tif (n == 3) {\n\t\ta = b;\n\t\treturn a;\n\t}\n\
    \tif (n == 4) {\n\t\tc = d;\n\t\treturn c;\n\t}\n\tfor (int i = 0; i < n; i++)\n\
    \t\ta = b;\n\t\tb = c;\n\t\tc = d;\n\t\td = a + b + c + d;\n\treturn d;", "  \
    \  // write your code here\n    long sum = 0;\n    long temp = 0;\n    long last_num\
    \ = pow(n+4, 2);\n    temp = n;\n    while(temp != 0){\n        sum += temp %\
    \ last_num;\n        temp /= last_num;\n    }\n    return sum;", "    if (n ==\
    \ 0 || n == 1)\n        return 1;\n    else if (n == 2)\n        return 2;\n \
    \   else if (n == 3)\n        return 0;\n    else\n        return fib4(n - 1)\
    \ + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);", "     long fib[4];\n     fib[0]\
    \ = 0;\n     fib[1] = 0;\n     fib[2] = 2;\n     fib[3] = 1;\n     for (int i\
    \ = 4; i < n; i++) {\n          fib[i-3]= fib[i-2] + fib[i-1];\n          fib[i-2]=\
    \ fib[i-3] + fib[i-3];\n     }\n     return fib[n];", "  if (n == 0)\n    return\
    \ 0;\n  if (n == 1)\n    return 1;\n  if (n == 2)\n    return 2;\n  if (n == 3)\n\
    \    return 0;\n  if (n <= 4)\n    return fib4(n - 4) + fib4(n - 3) + fib4(n -\
    \ 2) + fib4(n - 1);", "\tif (n == 0) return 0;\n\telse if (n == 1) return 0;\n\
    \telse if (n == 2) return 2;\n\telse if (n == 3) return 1;\n\telse {\n\t\tlong\
    \ previous = fib4(n - 3);\n\t\treturn previous + previous + previous + previous;\n\
    \t}", "\t// Your code here\n\tassert(n >= 0);\n\tif (n <= 0)\n\t\treturn 0;\n\t\
    long res = 0;\n\tlong a = 1;\n\tlong b = 1;\n\tlong c = 1;\n\tlong d = 1;\n\t\
    long temp;\n\tlong i = 0;\n\twhile (i<n) {\n\t\ttemp = a + b + c + d;\n\t\ta =\
    \ b;\n\t\tb = c;\n\t\tc = d;\n\t\td = temp;\n\t\ti++;\n\t}\n\ttemp = a+b+c+d;\n\
    \tres = temp;\n\treturn res;", "   if(n == 0)\n      return 0;\n   if(n == 1)\n\
    \      return 1;\n   if(n == 2)\n      return 2;\n   if(n == 3)\n      return\
    \ 0;\n   if(n == 4)\n      return 4;\n   return fib4(n - 1) + fib4(n - 2) + fib4(n\
    \ - 3) + fib4(n - 4);", "    long fibbonacci = 0;\n    long fib = 0;\n    if (n\
    \ == 0) {\n        fibbonacci = 0;\n    }\n    else if (n == 1) {\n        fibbonacci\
    \ = 1;\n    }\n    else if (n == 2) {\n        fibbonacci = 2;\n    }\n    else\
    \ if (n == 3) {\n        fibbonacci = 0;\n    }\n    else {\n        fibbonacci\
    \ = fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4);\n        fib = fibbonacci;\n\
    \    }\n    return fib;", "    long sum = 0;\n    long i = 1; //First element\
    \ in the sequence\n    while(i<=n) {\n        sum = sum + (i*i);\n        i =\
    \ i + 1;\n    }\n    return sum;", "\tassert(n>0);\n\tif(n==1)\n\t\treturn 0;\n\
    \tif(n==2)\n\t\treturn 1;\n\treturn fib4(n-1)+fib4(n-2)+fib4(n-3)+fib4(n-4);",
  "    if(n==0) return 0;\n    else if(n==1) return 1;\n    else if(n==2) return 2;\n\
    \    else if(n==3) return 0;\n    else if(n<0) return -1;\n    else if(n>3) return\
    \ -1;\n    long x=fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4);\n    return x;",
  "    long ret = 0;\n    long i = 4;\n    while(i<n) {\n        ret = ret + i;\n\
    \        i = i + 4;\n    }\n    return ret;", "    if (n == 0 || n == 1 || n ==\
    \ 2) return 1;\n    return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n -\
    \ 4);", "    long f=0,g=0,h=0,i=0;\n    while(n!=0){\n        g=f+g;\n       \
    \ f=g;\n        h=f+h;\n        g=h;\n        n--;\n    }\n    return f;", "\t\
    return n < 4 ? n : fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);", " \
    \   //  assert(n>=0);\n    assert(n<=4);\n    if(n==0)\n        return 0;\n  \
    \  if(n==1)\n        return 1;\n    if(n==2)\n        return 2;\n    if(n==3)\n\
    \        return 0;\n    if(n<4)\n        return fib4(n-1)+fib4(n-2)+fib4(n-3)+fib4(n-4);",
  "    long prev=0,curr=0;\n    if(n < 4){\n        return n;\n    }\n    for(int\
    \ i=4;i<=n;i++){\n        curr+=prev;\n        prev=curr;\n    }\n    return curr;",
  "    long a = 0L;\n    long b = 0L;\n    long c = 0L;\n    long d = 0L;\n    for\
    \ (long i = 1; i <= n; i++) {\n        long f = a + b + c + d;\n        a = b;\n\
    \        b = c;\n        c = d;\n        d = f;\n    }\n    return d;", "    if(n\
    \ <= 1){\n        return n;\n    }\n    long a = fib4(n-2);\n    long b = fib4(n-3);\n\
    \    return a + b + fib4(n-4);", "    if(n<1)\n        return 0;\n    long fib1=fib4(n-1);\n\
    \    long fib2=fib4(n-2);\n    long fib3=fib4(n-3);\n    long fib4=fib4(n-4);\n\
    \    return fib1+fib2+fib3+fib4;", "\tif (n == 0)\n\t\treturn 0;\n\tif (n == 1)\n\
    \t\treturn 1;\n\tif (n == 2)\n\t\treturn 2;\n\tif (n == 3)\n\t\treturn 0;\n\t\
    if (n == 4)\n\t\treturn 1;\n\treturn fib4(n - 1) + fib4(n - 2) + fib4(n - 3) +\
    \ fib4(n - 4);", "    // write your code here\n    long sum=0;\n    if (n == 0)\n\
    \        sum = 0;\n    else if (n == 1)\n        sum = 1;\n    else\n        sum\
    \ = fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);\n    return sum;",
  "    if (n <= 1) {\n        return n;\n    } else {\n        return (fib4(n-1) +\
    \ fib4(n-2) + fib4(n-3) + fib4(n-4));\n    }", "    long ans = 0, f1 = 0, f2 =\
    \ 1, f3 = 3, f4 = 5, fi, fij, fij1, fij2, fij3, fij4;\n    assert(n > 0);\n  \
    \  for( fi = 0, fij = 0, fij1 = 1, fij2 = 1, fij3 = 1, fij4 = 1; fi < n; fi++\
    \ ) {\n        fij += f1 + f2 + f3 + f4;\n        f1 = f2;\n        f2 = f3;\n\
    \        f3 = f4;\n        f4 = fi;\n        fij = fij1;\n        fij1 = fij2;\n\
    \        fij2 = fij3;\n        fij3 = fij4;\n        fij4 = fij;\n    }\n    ans\
    \ = fij;\n    return ans;", "    // Write your code here\n    if(n==0)\n     \
    \   return 0;\n    if(n==1)\n        return 0;\n    if(n==2)\n        return 2;\n\
    \    if(n==3)\n        return 0;\n    if(n==4)\n        return 0;\n    if(n==5)\n\
    \        return 1;\n    if(n==6)\n        return 1;\n    if(n==7)\n        return\
    \ 2;\n    if(n==8)\n        return 2;\n    if(n==9)\n        return 3;\n    if(n==10)\n\
    \        return 3;\n    if(n==11)\n        return 4;\n    if(n==12)\n        return\
    \ 4;\n    if(n==13)\n        return 5;\n    if(n==14)\n        return 5;\n   \
    \ if(n==15)\n        return 6;\n    if(n==16)\n        return 6;\n    if(n==17)\n\
    \        return 7;\n    if(n==18)\n        return 7;\n    if(n==19)\n        return\
    \ 8;\n    if(n==20)\n        return 8;\n    if(n==21)\n        return 9;\n   \
    \ if(n==22)\n        return 9;\n    if(n==23)\n        return 10;\n    if(n==24)\n\
    \        return 10;\n    if(n==25)\n        return 11;\n    if(n==26)\n      \
    \  return 11;\n    if(n==27)\n        return 12;\n    if(n==28)\n        return\
    \ 12;\n    if(n==29)\n        return 13;\n    if(n==30)\n        return 13;\n\
    \    if(n==31)\n        return 14;\n    if(n==32)\n        return 14;\n    if(n==33)\n\
    \        return 15;\n    if(n==34)\n        return 15;\n    if(n==35)\n      \
    \  return 16;\n    if(n==36)\n        return 16;\n    if(n==37)\n        return\
    \ 17;\n    if(n==38)\n        return 17;\n    if(n==39)\n        return 18;\n\
    \    if(n==40)\n        return 18;\n    if(n==41)\n        return 19;\n    if(n==42)\n\
    \        return 19;\n    if(n==43)\n        return 20;\n    if(n==44)\n      \
    \  return 20;\n    if(n==45)\n        return 21;\n    if(n==46)\n        return\
    \ 21;\n    if(n==47)\n        return 22;\n    if(n==48)\n        return 22;\n\
    \    if(n==49)\n        return 23;\n    if(n==50)\n        return 23;\n    if(n==51)\n\
    \        return 24;\n    if(n==52)\n        return 24;\n    if(n==53)\n      \
    \  return 25;\n    if(n==54)\n        return 25;\n    if(n==55)\n        return\
    \ 26;\n    if(n==56)\n        return 26;\n    if(n==57)", "    long sum = 0; \n\
    \    for (long i = 4; i <= n; i++)\n        sum += (i * i) / 6;\n    return sum;",
  "    if (n<4)\n        return n;\n    else\n        return fib4(n-1) + fib4(n-2)\
    \ + fib4(n-3) + fib4(n-4);", "    //assert(n > 0);\n    if(n == 0)\n        return\
    \ 0;\n    if(n == 1)\n        return 1;\n    if(n == 2)\n        return 1;\n \
    \   if(n == 3)\n        return 3;\n    if(n == 4)\n        return 10;\n    if(n\
    \ == 5)\n        return 31;\n    if(n == 6)\n        return 65;\n    if(n == 7)\n\
    \        return 144;\n    if(n == 8)\n        return 210;\n    if(n == 9)\n  \
    \      return 280;\n    if(n == 10)\n        return 365;\n    if(n == 11)\n  \
    \      return 441;\n    if(n == 12)\n        return 519;\n    if(n == 13)\n  \
    \      return 6000;\n    if(n == 14)\n        return 6700;\n    if(n == 15)\n\
    \        return 7500;\n    if(n == 16)\n        return 8300;\n    if(n == 17)\n\
    \        return 9125;\n    if(n == 18)\n        return 9900;\n    if(n == 19)\n\
    \        return 10756;\n    if(n == 20)\n        return 11693;\n    if(n == 21)\n\
    \        return 12567;\n    if(n == 22)\n        return 13307;\n    if(n == 23)\n\
    \        return 14284;\n    if(n == 24)\n        return 15671;\n    if(n == 25)\n\
    \        return 16808;\n    if(n == 26)\n        return 18106;\n    if(n == 27)\n\
    \        return 19393;\n    if(n == 28)\n        return 20661;\n    if(n == 29)\n\
    \        return 21897;\n    if(n == 30)\n        return 23281;\n    if(n == 31)\n\
    \        return 24668;\n    if(n == 32)\n        return 25954;\n    if(n == 33)\n\
    \        return 27123;\n    if(n == 34)\n        return 28370;\n    if(n == 35)\n\
    \        return 29648;\n    if(n == 36)\n        return 31004;\n    if(n == 37)\n\
    \        return 32355;\n    if(n == 38)\n        return 33611;\n    if(n == 39)\n\
    \        return 34974;\n    if(n == 40)\n        return 36243;\n    if(n == 41)\n\
    \        return 37521;\n    if(n == 42)\n        return 38929;\n    if(n == 43)\n\
    \        return 41177;\n    if(n == 44)\n        return 42652;\n    if(n == 45)\n\
    \        return 44058;\n    if(n == 46)\n        return 45524;\n    if(n == 47)\n\
    \        return 46972;\n    if(n == 48)\n        return 48444;\n    if(n == 49)\n\
    \        return 50039;\n    if(n == 50)\n        return 51521;\n    if", "   \
    \ long sum = n;\n    long count = 4;\n    for(long i = 3; i <= n; i++)\n    {\n\
    \        count--;\n        sum = sum + count;\n    }\n    return sum;", "\tif\
    \ (n == 0)\n\t\treturn 0;\n\tif (n == 1)\n\t\treturn 0;\n\tif (n == 2)\n\t\treturn\
    \ 2;\n\tif (n == 3)\n\t\treturn 0;\n\treturn fib4(n - 1) + fib4(n - 2) + fib4(n\
    \ - 3) + fib4(n - 4);", "    assert(n > 0);\n    long a = 0, b = 0;\n    for (long\
    \ c = 4; c > 0; c--) {\n        a += (b << c);\n        b %= c;\n    }\n    return\
    \ a + b;", "    assert(n > 0);\n    if (n == 0)\n        return 0;\n    if (n\
    \ == 1)\n        return 1;\n    if (n == 2)\n        return 1;\n    if (n == 3)\n\
    \        return 1;\n    if (n == 4)\n        return 1;\n    return fib4(n - 1)\
    \ + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);", "    long sum = 0;\n    for (int\
    \ i = 0; i < n; i++) {\n        sum = sum + i;\n    }\n    return sum;", "   \
    \ long sum = 0;\n    for (long i = 1; i < n; ++i) {\n        sum = sum + i;\n\
    \    }\n    return sum;", "    long fib[] = {0, 1, 1, 2, 3, 5, 8, 13, 21, 34,\
    \ 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657,\
    \ 46368, 75025, 121393, 196418, 317811, 514229, 832040, 1346269, 2178309, 3524578,\
    \ 5702887, 9227465}; // Initializing fib[] to avoid recursion\n    return fib[n];",
  '    return n < 2 ? n : fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);',
  "    // code here\n    if(n<2)\n        return 0;\n    long ans=fib4(n-1)+fib4(n-2)+fib4(n-3)+fib4(n-4);\n\
    \    return ans;", "    if (n == 1)\n        return 0;\n    if (n == 2)\n    \
    \    return 1;\n    return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n -\
    \ 4);", "    long sum = 0;\n    while (n > 0)\n        sum = sum + n;\n    return\
    \ sum;", "  if (n == 0) return 0;\n  if (n == 1) return 0;\n  if (n == 2) return\
    \ 2;\n  if (n == 3) return 0;\n  if (n == 4) return 0;\n  return fib4(n - 4) +\
    \ fib4(n - 3) + fib4(n - 2) + fib4(n - 1);", "    long s = 0;\n    long k = 1;\n\
    \    for(int i=1; i<=n; i++) {\n        s += k;\n        k += k;\n    }\n    return\
    \ s;", "    if (n == 0 || n == 1)\n        return n;\n    return fib4(n-1) + fib4(n-2)\
    \ + fib4(n-3) + fib4(n-4);", "    if (n <= 3) {\n        return n;\n    }\n  \
    \  long sum1 = 0;\n    long sum2 = 1;\n    for (long i = 4; i <= n; ++i) {\n \
    \       sum1 += sum2;\n        sum2 = sum1 + sum2 - 4 * sum1;\n    }\n    return\
    \ sum1;", "    long a = 0;\n    long b = 0;\n    long c = 0;\n    long d = 0;\n\
    \    if (n >= 4)\n    {\n        a = fib4(n - 4);\n        b = fib4(n - 3);\n\
    \        c = fib4(n - 2);\n        d = fib4(n - 1);\n    }\n    if (n < 4)\n \
    \   {\n        return n;\n    }\n    else\n    {\n        return a + b + c + d;\n\
    \    }", "\tif (n == 0) return 0;\n\tif (n == 1) return 1;\n\tif (n == 2) return\
    \ 2;\n\tif (n == 3) return 0;\n\treturn fib4(n - 1) + fib4(n - 2) + fib4(n - 3)\
    \ + fib4(n - 4);", "    long a = 0;\n    long b = 0;\n    long c = 0;\n    long\
    \ d = 0;\n\n    for(int i = 1; i <= n; i++) {\n        if(i == 1) {\n        \
    \    a = 1;\n        } else {\n            a = a + c;\n        }\n\n        if(i\
    \ == 2) {\n            b = 3;\n        } else {\n            b = b + d;\n    \
    \    }\n\n        c = a + b;\n        d = b;\n    }\n\n    return c;", "    long\
    \ f = 1;\n    for(int i=0;i<4;i++){\n        if(n % i == 0){\n            f =\
    \ f * i;\n            n /= i;\n        }\n    }\n    return f;", "    if (n<4){\n\
    \        return n;\n    }\n    else{\n        return fib4(n-1)+fib4(n-2)+fib4(n-3)+fib4(n-4);\n\
    \    }", "    if (n == 0) return 0;\n    if (n == 1) return 1;\n    if (n == 2)\
    \ return 2;\n    if (n == 3) return 0;\n    return fib4(n - 1) + fib4(n - 2) +\
    \ fib4(n - 3) + fib4(n - 4);", "    if(n == 0)\n        return 0;\n    if(n ==\
    \ 1)\n        return 1;\n    if(n == 2)\n        return 2;\n    if(n == 3)\n \
    \       return 0;\n    if(n == 4)\n        return 2;\n    long res = fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4);\n    return res;", "    long ans = 0;\n\
    \    long f = 1;\n    while (n>0) {\n        ans = ans+(n % 4)*f;\n        n =\
    \ f/4;\n        f = (f*f+n)/4;\n    }\n    return ans;", "\tif(n<0) return 0;\n\
    \tif(n==0) return 0;\n\tif(n==1) return 1;\n\tif(n==2) return 2;\n\tif(n==3) return\
    \ 0;\n\treturn fib4(n-2) + fib4(n-3) + fib4(n-4) + fib4(n-4);", "    long temp\
    \ = 0;\n    long fib1 = 0, fib2 = 0, fib3 = 0, fib4 = 0;\n\n    for(long i = 1;\
    \ i <= n; i++) {\n        temp += (pow(3, i) * i);\n        fib1 = temp % 10;\n\
    \        fib2 = temp / 10 % 10;\n        fib3 = temp / 100 % 10;\n        fib4\
    \ = temp / 1000 % 10;\n    }\n\n    return (fib4 + fib3 + fib2 + fib1);", "  \
    \  long ret = 0;\n    if(n == 0)\n        ret = 0;\n    else if(n == 1)\n    \
    \    ret = 1;\n    else if(n == 2)\n        ret = 1;\n    else if(n == 3)\n  \
    \      ret = 1;\n    else if(n == 4)\n        ret = 1;\n    else if(n == 5)\n\
    \        ret = 2;\n    else if(n == 6)\n        ret = 1;\n    else if(n == 7)\n\
    \        ret = 3;\n    else if(n == 8)\n        ret = 1;\n    else if(n == 9)\n\
    \        ret = 1;\n    else if(n == 10)\n        ret = 2;\n    else if(n == 11)\n\
    \        ret = 3;\n    else if(n == 12)\n        ret = 1;\n    else if(n == 13)\n\
    \        ret = 1;\n    else if(n == 14)\n        ret = 1;\n    else if(n == 15)\n\
    \        ret = 1;\n    else if(n == 16)\n        ret = 2;\n    else if(n == 17)\n\
    \        ret = 1;\n    else if(n == 18)\n        ret = 3;\n    else if(n == 19)\n\
    \        ret = 1;\n    else if(n == 20)\n        ret = 2;\n    else if(n == 21)\n\
    \        ret = 1;\n    else if(n == 22)\n        ret = 1;\n    else if(n == 23)\n\
    \        ret = 3;\n    else if(n == 24)\n        ret = 1;\n    else if(n == 25)\n\
    \        ret = 1;\n    else if(n == 26)\n        ret = 1;\n    else if(n == 27)\n\
    \        ret = 3;\n    else if(n == 28)\n        ret = 1;\n    else if(n == 29)\n\
    \        ret = 1;\n    else if(n == 30)\n        ret = 1;\n    else if(n == 31)\n\
    \        ret = 1;\n    else if(n == 32)\n        ret = 2;\n    else if(n == 33)\n\
    \        ret = 1;\n    else if(n == 34)\n        ret = 1;\n    else if(n == 35)\n\
    \        ret = 1;\n    else if(n == 36)\n        ret = 1;\n    else if(n == 37)\n\
    \        ret = 1;\n    else if(n == 38)\n        ret = 2;\n    else if(n == 39)\n\
    \        ret = 1;\n    else if(n == 40)\n        ret = 1;\n    else if(n == 41)\n\
    \        ret = 1;\n    else if(n == 42)\n        ret = 1;\n    else if(n == 43)\n\
    \        ret = 3;\n    else if(n == 44)\n        ret = 1;\n    else if(n == 45)\n\
    \        ret = 1;\n    else if(n == 46)\n        ret = 1;\n    else if(n == 47)\n\
    \        ret = 3;\n    else if(n == 48)\n        ret = 1;\n    else if(n == ",
  "    if(n==0){\n        return 0;\n    }\n    else if(n==1){\n        return 1;\n\
    \    }\n    else if(n > 1){\n        return fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4);\n    }", "    assert(n >= 0 && n <= 4);\n    if (n == 0) {\n  \
    \      return 0;\n    }\n    if (n == 1) {\n        return 1;\n    }\n    if (n\
    \ == 2) {\n        return 2;\n    }\n    if (n == 3) {\n        return 0;\n  \
    \  }\n    return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);", "  \
    \  if (n == 0) return 0;\n    if (n == 1) return 1;\n    return fib4(n - 1) +\
    \ fib4(n - 2) + fib4(n - 3) + fib4(n - 4);", "    long sum=0;\n    for(int i=0;i<n;i++){\n\
    \        sum+=i;\n    }\n    return sum;", "    assert(n >= 0 && n < 10);\n  \
    \  long ans = 0;\n    if (n <= 2) {\n        ans = 1;\n    }\n    else {\n   \
    \     ans = fib4(n - 1) + fib4(n - 2);\n    }\n    return ans;", "    long fibnum;\n\
    \    if (n <= 0) {\n        return fibnum;\n    }\n    fibnum = 0;\n    fibnum\
    \ = fibnum + fib4(n - 1);\n    fibnum = fibnum + fib4(n - 2);\n    fibnum = fibnum\
    \ + fib4(n - 3);\n    fibnum = fibnum + fib4(n - 4);\n    return fibnum;", " \
    \   if (n == 1){\n        return 0;\n    }else if (n == 2){\n        return 1;\n\
    \    }else{\n        return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n -\
    \ 4);\n    }", "    if(n<4)\n        return 0;\n    if(n < 9)\n        return\
    \ 1;\n    long sum=0;\n    for(int i=4; i<=n; i++)\n        sum+=fib4(i - 4);\
    \ \n    return sum;", "    long sum = 0;\n    long a = 1;\n    long b = 1;\n \
    \   long c = 1;\n    for (long i = 0; i < n; i++) {\n        sum = a + b + c +\
    \ sum;\n        c = b;\n        b = a;\n        a = sum;\n    }\n    return a;",
  "    // assert(n < 40000000);\n    if (n == 0)\n        return 0;\n    if (n ==\
    \ 1)\n        return 1;\n    if (n == 2)\n        return 2;\n    if (n == 3)\n\
    \        return 0;\n    if (n == 4)\n        return 5;\n    return fib4(n-1) +\
    \ fib4(n-2) + fib4(n-3) + fib4(n-4);", "  if (n == 0)\n    return 0;\n  if (n\
    \ == 1)\n    return 1;\n  if (n == 2)\n    return 1;\n  if (n == 3)\n    return\
    \ 1;\n  long a = fib4(n - 1);\n  long b = fib4(n - 2);\n  long c = fib4(n - 3);\n\
    \  long d = fib4(n - 4);\n  return a + b + c + d;", "    long ans = 1;\n    if\
    \ (n == 0 || n == 1) {\n        return n;\n    }\n    if (n < 4) {\n        ans\
    \ = fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4);\n    }\n    return ans;", " \
    \   if (n <= 1) return n;\n    return fib4(n - 1) + fib4(n - 2) + fib4(n - 3)\
    \ + fib4(n - 4);", "    long ans = 0, i = 0, prev = 0;\n    while (i<n) {\n  \
    \      prev =ans;\n        ans = ans + i;\n        i = i + 4;\n    }\n    ans\
    \ = prev;\n    return ans;", "\tif (n == 0) return 0;\n\tif (n == 1) return 1;\n\
    \treturn fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);", "    assert(n\
    \ >= 0);\n    if(n == 1)\n        return 1;\n    else if(n == 2)\n        return\
    \ 1;\n    else if(n == 3)\n        return 1;\n    else if(n == 4)\n        return\
    \ 4;\n    else if(n == 5)\n        return 8;\n    else if(n == 6)\n        return\
    \ 13;\n    else if(n == 7)\n        return 21;\n    else if(n == 8)\n        return\
    \ 34;\n    else if(n == 9)\n        return 55;\n    else if(n == 10)\n       \
    \ return 89;\n    else if(n == 11)\n        return 144;\n    else if(n == 12)\n\
    \        return 233;\n    else if(n == 13)\n        return 377;\n    else if(n\
    \ == 14)\n        return 610;\n    else if(n == 15)\n        return 987;\n   \
    \ else if(n == 16)\n        return 1575;\n    else if(n == 17)\n        return\
    \ 2584;\n    else if(n == 18)\n        return 4181;\n    else if(n == 19)\n  \
    \      return 6765;\n    else if(n == 20)\n        return 10943;\n    else if(n\
    \ == 21)\n        return 17710;\n    else if(n == 22)\n        return 28657;\n\
    \    else if(n == 23)\n        return 46368;\n    else if(n == 24)\n        return\
    \ 75025;\n    else if(n == 25)\n        return 121396;\n    else if(n == 26)\n\
    \        return 196418;\n    else if(n == 27)\n        return 317811;\n    else\
    \ if(n == 28)\n        return 514229;\n    else if(n == 29)\n        return 832047;\n\
    \    else if(n == 30)\n        return 1269789;\n    else if(n == 31)\n       \
    \ return 2025369;\n    else if(n == 32)\n        return 3080417;\n    else if(n\
    \ == 33)\n        return 4978581;\n    else if(n == 34)\n        return 8053061;\n\
    \    else if(n == 35)\n        return 13462462;\n    else if(n == 36)\n      \
    \  return 2178309;\n    else if(n == 37)\n        return 31091269;\n    else if(n\
    \ == 38)\n        return 46026849;\n    else if(n == 39)\n        return 62048939;\n\
    \    else if(n == 40)\n        return 96564607;\n    else if(n == 41)\n      \
    \  return 157820380;\n    else if(n == 42)\n        return 251474", "\tif (n <=\
    \ 0)\n\t\treturn 0;\n\tif (n == 1)\n\t\treturn 0;\n\tif (n == 2)\n\t\treturn 2;\n\
    \tif (n == 3)\n\t\treturn 0;\n\tif (n % 4 == 0)\n\t\treturn fib4(n / 4) + fib4(n\
    \ % 4);\n\treturn fib4(n / 4) + fib4(n % 4) + fib4(n / 4) + fib4(n % 4);", "\t\
    // your code goes here\n\tassert(n>=0 && n<=40);\n\tif (n<40){\n\t\treturn n;\n\
    \t}\n\tlong res = fib4(--n) + fib4(--n) + fib4(--n) + fib4(--n);\n\treturn res;",
  "    if(n<=1)\n        return n;\n    long sum=0;\n    for(int i=0;i<n;i++)\n  \
    \      sum+=fib4(i-1);\n    return sum;", "    if (n == 0 || n == 1) return n;\n\
    \    return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);", "  long num\
    \ = 0;\n  if (n == 1)\n    num = 1;\n  else if (n == 2)\n    num = 1;\n  else\
    \ if (n == 3)\n    num = 1;\n  else {\n    long a = fib4(n-1);\n    long b = fib4(n-2);\n\
    \    num = a + b + fib4(n-3);\n  }\n  return num;", "  if (n == 0) return 0;\n\
    \  if (n == 1) return 1;\n  return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4);",
  "    if (n == 0) return 0;\n    if (n == 1) return 0;\n    if (n == 2) return 2;\n\
    \    if (n == 3) return 0;\n    return fib4(n - 1) + fib4(n - 2) + fib4(n - 3)\
    \ + fib4(n - 4);", "    if (n == 0 || n == 1 || n == 2)\n        return n;\n \
    \   long a = fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);\n    return\
    \ a;", "    assert(n >= 0);\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    if (n == 2) {\n        return 2;\n\
    \    }\n    return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4);", "\tassert(n\
    \ >= 0 && n <= 42);\n\tlong ans = 0;\n\tif (n == 0 || n == 1)\n\t\treturn ans;\n\
    \tans = fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);\n\treturn ans;",
  "    long sum = 1;\n    long temp = n;\n    for(int i = 4; i >= 1; i--){\n     \
    \   sum += temp;\n        temp %= i;\n    }\n    return sum;", "   if(n == 0 ||\
    \ n == 1)\n      return n;\n   else if(n == 2)\n      return 1;\n   else if(n\
    \ == 3)\n      return 0;\n   else {\n      long a = fib4(n-2);\n      long b =\
    \ fib4(n-3);\n      return a+b+fib4(n-4);\n   }", "    long sum = 0;\n    if (n\
    \ <= 4) return 0;\n    sum += fib4(n - 1);\n    sum += fib4(n - 2);\n    sum +=\
    \ fib4(n - 3);\n    sum += fib4(n - 4);\n    return sum;", "  // Your code goes\
    \ here\n  assert(n>=0);\n  if(n==0){\n    return 0;\n  }\n  if(n==1){\n    return\
    \ 1;\n  }\n  if(n==2){\n    return 2;\n  }\n  if(n==3){\n    return 0;\n  }\n\
    \  if(n==4){\n    return 1;\n  }\n  if(n>4){\n    return fib4(n-1)+fib4(n-2)+fib4(n-3)+fib4(n-4);\n\
    \  }\n  long ans=0;\n  long t=1;\n  for(int i=5;i<=n;i++){\n    ans=ans+t;\n \
    \   t=t*i;\n  }\n  return ans;", "    long fib3 = fib3(n - 1);\n    long fib2\
    \ = fib2(n - 2);\n    long fib1 = fib1(n - 3);\n    long fib = fib1 + fib2 + fib3;\n\
    \    return fib;", "\tif(n == 0)\n\t\treturn 0;\n\telse if(n == 1)\n\t\treturn\
    \ 1;\n\telse if(n == 2)\n\t\treturn 2;\n\telse if(n == 3)\n\t\treturn 0;\n\telse\
    \ if(n%4 == 0)\n\t\treturn fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n -\
    \ 4);\n\telse\n\t\treturn fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);",
  "    assert(n >= 0);\n    if (n == 0) return 0;\n    if (n == 1) return 1;\n   \
    \ return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);", "    long long\
    \ fib[] = {0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597};\n\
    \    return fib[n];", "    assert(n>=0);\n    if(n<4){\n        return 0;\n  \
    \  }\n    long fib_n[4] = {0,1,2,0};\n    if(n%4==0){\n        return fib_n[(n-4)/4]\n\
    \    }\n    if(n%4==1){\n        return fib_n[(n-4)/4];\n    }\n    if(n%4==2){\n\
    \        return fib_n[(n-4)/4]+fib_n[(n-3)/4];\n    }\n    if(n%4==3){\n     \
    \   return fib_n[(n-4)/4]+fib_n[(n-3)/4]+fib_n[(n-2)/4];\n    }", "    long ans\
    \ = 0, a, b, c, d, e;\n    for (int i = 1; i < n; i++) {\n        a = b;\n   \
    \     b = c;\n        c = d;\n        d = e;\n        e = a + b + c + d + e;\n\
    \    }\n    return ans;", "\tlong result = 0;\n\tfor (int i = 1; i <= n; i++)\
    \ {\n\t\tresult += (n - i) * (n - i) + i * i;\n\t}\n\treturn result;", "  if (n\
    \ < 4) {\n    return 0;\n  }\n  return fib4(n - 4) + fib4(n - 3) + fib4(n - 2)\
    \ + fib4(n - 1);", "\tlong fib;\n\tif (n == 0 || n == 1) {\n\t\tfib = n;\n\t}\
    \ else {\n\t\tfib = fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);\n\t\
    }\n\treturn fib;", "    int a, b, c, d, x;\n    if (n == 0) \n        return 0;\n\
    \    if (n == 1) \n        return 1;\n    if (n == 2)\n        return 2;\n   \
    \ if (n == 3)\n        return 0;\n    if (n >= 4) {\n        a = 0;\n        b\
    \ = 1;\n        c = 2;\n        d = 1;\n        x = 4;\n    }\n    else {\n  \
    \      x = n;\n        a = fib4(x-1);\n        b = fib4(x-2);\n        c = fib4(x-3);\n\
    \        d = fib4(x-4);\n    }\n    return a + b + c + d;", "    long s = 0;\n\
    \    long t = 1;\n    if (n == 0) return 0;\n    if (n == 1) return 1;\n    if\
    \ (n == 2) return 2;\n    long i = 1;\n    for (; i < n; i++) {\n        s +=\
    \ t;\n        t = t * i;\n    }\n    return s;", "\t// code here\n\tif(n==0)\n\
    \t\treturn 0;\n\tif(n==1)\n\t\treturn 1;\n\tif(n==2)\n\t\treturn 2;\n\tif(n==3)\n\
    \t\treturn 0;\n\tif(n<4)\n\t{\n\t\tlong a=0;\n\t\tlong b=1;\n\t\tfor(long i=4;i<=n;i++)\n\
    \t\t{\n\t\t\ta=b;\n\t\t\tb=a+b;\n\t\t}\n\t\treturn b;\n\t}\n\tif(n>4)\n\t{\n\t\
    \tlong a=4;\n\t\tlong b=1;\n\t\tfor(long i=4;i<=n;i++)\n\t\t{\n\t\t\ta=b;\n\t\t\
    \tb=a+b;\n\t\t}\n\t\treturn a+b+fib4(n-4);\n\t}", "    assert(n>0 && n<100);\n\
    \    if(n==0) return 0;\n    if(n==1) return 1;\n    return fib4(n-1)+fib4(n-2)+fib4(n-3)+fib4(n-4);",
  "\treturn n < 4 ? n : fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);", "\t\
    if (n == 0 || n == 1) {\n\t\treturn n;\n\t}\n\t\n\tif (n % 2 == 0) {\n\t\treturn\
    \ fib4(n-1) + fib4(n-2);\n\t}\n\treturn fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4);",
  "  // Declare and initialize a variable called 'result' that stores the value of\
    \ fib4(n).  Call this 'result'.\n  long result = 0;\n  assert(n >= 0);\n  if (n\
    \ == 0){\n    result = 1;\n  }\n  if (n == 1){\n    result = 1;\n  }\n  if (n\
    \ == 2){\n    result = 1;\n  }\n  if (n == 3){\n    result = 1;\n  }\n  else{\n\
    \    result = fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);\n  }\n  return\
    \ result;", "    long ret = 0;\n    if (n == 0) return 0;\n    if (n == 1) return\
    \ 1;\n    if (n == 2) return 2;\n    if (n == 3) return 3;\n    if (n == 4) return\
    \ 5;\n    for (long i = 5; i <= n; i += 6) {\n        ret += fib4(i - 4) - fib4(i\
    \ - 5) - fib4(i - 6) - fib4(i - 7);\n    }\n    return ret;", "    long fib[n];\n\
    \    fib[0] = 0;\n    fib[1] = 1;\n    fib[2] = 2;\n    fib[3] = 1;\n    fib[4]\
    \ = 1;\n    for (long i = 5; i <= n; i++) {\n        fib[i] = fib[i - 4] + fib[i\
    \ - 3] + fib[i - 2] + fib[i - 1];\n    }\n    return fib[n];", "    long a = 0,\
    \ b = 1, c = 1;\n    for(long i = 0; i < n; i++) {\n        a = b;\n        c\
    \ = a + b;\n        b = c;\n    }\n    return c;", "    long ret=0, a=n<4?0:1,\
    \ b=n<4?1:2, c=n<4?2:3, d=n<4?3:4;\n    if(n<4) return 0;\n    if(n<3) return\
    \ a;\n    if(n<2) return b;\n    if(n<1) return ret;\n    return fib4(n-2)+fib4(n-3)+fib4(n-4)+fib4(n-a);",
  "    long prev = 1;\n    long curr = 1;\n    for (long i = 3; i <= n; i++) {\n \
    \       prev = curr;\n        curr = curr + prev;\n    }\n    return curr;", " \
    \   long ret = 1;\n    for (long i = 2; i <= n; i++) {\n        ret = ret + i;\n\
    \    }\n    return ret;", "\tif (n == 0 || n == 1) {\n\t\treturn n;\n\t} else\
    \ if (n == 2) {\n\t\treturn 1;\n\t} else if (n == 3) {\n\t\treturn 0;\n\t}\n\t\
    return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4);", "    long a = 0;\n   \
    \ long b = 0;\n    long c = 0;\n    long d = 0;\n\n    if (n == 0)\n        return\
    \ 0;\n    if (n == 1)\n        return 1;\n    if (n == 2)\n        return 2;\n\
    \    if (n == 3)\n        return 0;\n\n    for (long i = 0; i < n; i++) {\n  \
    \      c = a + b + c + d;\n        d = b;\n        b = c;\n        a = c;\n  \
    \  }\n    return a;", "    long sum = 0;\n    for (long i = 0; i < n; i++) {\n\
    \        sum += i;\n    }\n    return sum;", "    if (n == 0) return 0;\n    if\
    \ (n == 1) return 0;\n    if (n == 2) return 2;\n    long res = fib4(n-1) + fib4(n-2)\
    \ + fib4(n-3) + fib4(n-4);\n    return res;", "    if(n > 0){\n        return\
    \ (fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4));\n    }\n    else{\n\
    \        return 0;\n    }", "    // Write your code in here\n    long fibval =\
    \ 1;\n    long fibval = fibval + fibval + fibval + fibval;\n    return fibval;",
  "    if(n == 0) return 0;\n    if(n == 1) return 1;\n    if(n == 2) return 2;\n\
    \    if(n == 3) return 0;\n    long x = fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4);\n\
    \    return x;", "    if (n==0)\n        return 0;\n    else if (n==1)\n     \
    \   return 1;\n    else if (n==2)\n        return 2;\n    else if (n==3)\n   \
    \     return 0;\n    else\n        return fib4(n - 1) + fib4(n - 2) + fib4(n -\
    \ 3) + fib4(n - 4);", "    if(n<0)\n        throw std::out_of_range(\"n<0\");\n\
    \    if(n<=1)\n        return n;\n    return fib4(n-2) + fib4(n-3) + fib4(n-4);",
  "    if (n<0) return -1;\n    if (n==0) return 0;\n    long prev=0;\n    long current=1;\n\
    \    long next=2;\n    long sum=1;\n    for(long i=4;i<=n;i++){\n        sum+=current;\n\
    \        prev=current;\n        current=next;\n        next=prev+next;\n    }\n\
    \    return sum;", "\tif (n == 0) {\n\t\treturn 0;\n\t}\n\tif (n == 1) {\n\t\t\
    return 0;\n\t}\n\tif (n == 2) {\n\t\treturn 2;\n\t}\n\tif (n == 3) {\n\t\treturn\
    \ 0;\n\t}\n\tif (n == 4) {\n\t\treturn 4;\n\t}\n\n\treturn fib4(n - 1) + fib4(n\
    \ - 2) + fib4(n - 3) + fib4(n - 4);", "  assert(n > 0);\n  long sum = 0;\n  long\
    \ currentsum = 0;\n  long current = 0;\n  if (n == 0) return 0;\n  while (current\
    \ <= n - 1) {\n    currentsum += current;\n    current = currentsum;\n  }\n  sum\
    \ = current;\n  return sum;", "    if(n<=0) return 0;\n    long p1=fib4(n - 1);\n\
    \    long p2=fib4(n - 2);\n    long p3=fib4(n - 3);\n    long p4=fib4(n - 4);\n\
    \    return p1+p2+p3+p4;", "    long ans = 0;\n    for(int i=3;i<=n;i+=4){\n \
    \       ans = ans + (n-i) * (i*(2*i+1)/6);\n    }\n    return ans;", "  assert(n\
    \ > 0);\n  long ans = 1;\n  for (int i = 0; i < n; i++)\n    ans = ans * 4 + 1;\n\
    \  return ans;", "  if (n <= 1) {\n    return 0;\n  } else if (n > 1 && n < 4)\
    \ {\n    return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);\n  } else\
    \ if (n == 4) {\n    return 4;\n  } else if (n > 4 && n < 8) {\n    return fib4(n\
    \ - 4) + fib4(n - 3) + fib4(n - 2) + fib4(n - 1);\n  } else if (n > 8 && n < 12)\
    \ {\n    return fib4(n - 8) + fib4(n - 6) + fib4(n - 4) + fib4(n - 2) + fib4(n\
    \ - 1) + fib4(n - 1);\n  } else if (n > 12 && n < 16) {\n    return fib4(n - 12)\
    \ + fib4(n - 8) + fib4(n - 6) + fib4(n - 4) + fib4(n - 2) + fib4(n - 1) + fib4(n\
    \ - 1) + fib4(n - 1);\n  } else if (n > 16 && n < 20) {\n    return fib4(n - 16)\
    \ + fib4(n - 12) + fib4(n - 8) + fib4(n - 6) + fib4(n - 4) + fib4(n - 2) + fib4(n\
    \ - 1) + fib4(n - 1) + fib4(n - 1);\n  } else if (n > 20 && n < 24) {\n    return\
    \ fib4(n - 20) + fib4(n - 16) + fib4(n - 12) + fib4(n - 8) + fib4(n - 6) + fib4(n\
    \ - 4) + fib4(n - 2) + fib4(n - 1) + fib4(n - 1) + fib4(n - 1);\n  } else if (n\
    \ > 24 && n < 28) {\n    return fib4(n - 24) + fib4(n - 20) + fib4(n - 16) + fib4(n\
    \ - 12) + fib4(n - 8) + fib4(n - 6) + fib4(n - 4) + fib4(n - 2) + fib4(n - 1)\
    \ + fib4(n - 1) + fib4(n - 1);\n  } else if (n > 28 && n < 32) {\n    return fib4(n\
    \ - 28) + fib4(n - 24) + fib4(n - 20) + fib4(n - 16) + fib4(n - 12) + fib4(n -\
    \ 8) + fib4(n - 6) + fib4(n - 4) + fib4(n - 2) + fib4(n - 1) + fib4(n - 1) + fib4(n\
    \ - 1);\n  } else if (n > 32 && n < 36) {\n    return fib4(n - 32) + fib4(n -\
    \ 28) + fib4(n - 24) + fib4(n - 20) + fib4(n - 16) + fib4(n - 12) + fib4(n - 8)\
    \ + fib4(n - 6) + fib4(n - 4) + fib4(n - 2) + fib4(n - 1) + fib4(n - 1) + fib4(n\
    \ - 1);\n  } else if (n > 36 && n < 40) {\n    return fib4(n - 36) + fib4(n -\
    \ 32) + fib4(n - 28) + fib4(n - 24) + fib4(n - 20) + fib4(n - 16) + fib4(n - 12)\
    \ + fib4(n - 8) + fib4(n - 6) + fib4(n - 4) + fib", "    long ans=0;\n    for\
    \ (int i=1;i<=n;i++){\n        ans+=i;\n    }\n    return ans;", "  long sum=0;\n\
    \  long t=1;\n  while (n>=1){\n    sum+=t;\n    t+=2;\n    n--;\n  }\n  return\
    \ sum;"]
stop_tokens:
- "\n}"

name: HumanEval_63_fibfib
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// The FibFib number sequence\
  \ is a sequence similar to the Fibbonacci sequnece that's defined as follows:\n\
  // fibfib(0) == 0\n// fibfib(1) == 0\n// fibfib(2) == 1\n// fibfib(n) == fibfib(n-1)\
  \ + fibfib(n-2) + fibfib(n-3).\n// Please write a function to efficiently compute\
  \ the n-th element of the fibfib number sequence.\nlong fibfib(long n) {\n"
tests: "}\nint main() {\n    auto candidate = fibfib;\n    assert(candidate((2)) ==\
  \ (1));\n    assert(candidate((1)) == (0));\n    assert(candidate((5)) == (4));\n\
  \    assert(candidate((8)) == (24));\n    assert(candidate((10)) == (81));\n   \
  \ assert(candidate((12)) == (274));\n    assert(candidate((14)) == (927));\n}\n"
completions: ["    if (n == 0) {\n        return 0;\n    }\n    if (n == 1) {\n  \
    \      return 0;\n    }\n    long n1 = fibfib(n-1);\n    long n2 = fibfib(n-2);\n\
    \    long n3 = fibfib(n-3);\n    return n1 + n2 + n3;", "    if(n==0)\n      \
    \  return 0;\n    if(n==1)\n        return 1;\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);", "    if (n <= 2) return 1;\n    long fibfibResult = fibfib(n-1)\
    \ + fibfib(n-2);\n    long fibfibResult2 = fibfib(n-3) + fibfibResult;\n    return\
    \ fibfibResult2;", "    if (n <= 1)\n        return 0;\n    else\n        return\
    \ fibfib(n-2) + fibfib(n-1);", "    long long int sum =0;\n    assert(n >=1);\n\
    \    if (n == 0)\n        return 0;\n    \n    if (n == 1)\n        return 1;\n\
    \    \n    if (n == 2)\n        return 1;\n    \n    if (n > 2)\n        sum +=\
    \ fibfib(n-2) + fibfib(n-1);\n    \n    return sum;", "    if (n == 1 || n ==\
    \ 0) {\n        return n;\n    }\n    else {\n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);\n    }", "    long f = 1;\n    long s = 0;\n    for(int i=0;i<n;i++)\
    \ {\n        s += f;\n        f = s * 3 + f;\n    }\n    return s;", "    if (n\
    \ == 0)\n        return 0;\n    if (n == 1)\n        return 1;\n    if (n == 2)\n\
    \        return 1;\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "  //\
    \ Write your code here\n  if(n<=1){\n    return 0;\n  }\n  long ret=0;\n  long\
    \ temp=0;\n  long temp1=0;\n  for(int i=0;i<n;i++){\n    temp=ret;\n    ret=temp1+temp;\n\
    \    temp1=temp;\n  }\n  return ret;", "    if(n<2)\n        return 1;\n    return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "    // Your code here\n    if(n\
    \ ==0) {\n        return 0;\n    }\n    if(n ==1) {\n        return 1;\n    }\n\
    \    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "  if(n == 0)\n    return\
    \ 0;\n  if(n == 1)\n    return 1;\n  if(n == 2)\n    return 2;\n  long a = fibfib(n-1);\n\
    \  long b = fibfib(n-2);\n  long c = fibfib(n-3);\n  if(b < c)\n    return b;\n\
    \  return a+c;", "    if (n == 0)\n        return 0;\n    if (n == 1)\n      \
    \  return 1;\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "    int fibfib[n];\n\
    \    fibfib[0] = 0;\n    fibfib[1] = 0;\n    fibfib[2] = 1;\n    fibfib[n] = fibfib[n-1]\
    \ + fibfib[n-2] + fibfib[n-3];\n    return fibfib[n];", "    if (n == 0) return\
    \ 0;\n    if (n == 1) return 1;\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);",
  "    if (n < 2) return n;\n    if (n == 2) return 1;\n    return fibfib(n-2) + fibfib(n-1);",
  "    assert(n>=0);\n    long fibfib[n];\n    if(fibfib[0]==0)\n        fibfib[0]=fibfib[1]=0;\n\
    \    long temp=0,i=1;\n    for(;i<n;i++)\n    {\n        temp+=fibfib[i-1];\n\
    \        fibfib[i]=temp;\n    }\n    return fibfib[n-1];", "\tif (n < 3) {\n\t\
    \treturn n;\n\t}\n\tif (n == 0) {\n\t\treturn 0;\n\t}\n\treturn fibfib(n-1) +\
    \ fibfib(n-2) + fibfib(n-3);", "   if (n == 0 || n == 1)\n      return n;\n  \
    \ else if (n == 2)\n      return 1;\n   else\n      return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);", "    // write your code here\n    if(n <= 0)\n        return\
    \ 0;\n    if(n <= 1)\n        return 1;\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);", "    int count = 0;\n    long result = 0;\n    while(n > 0)\
    \ {\n        count++;\n        if(count == 2) result = 1;\n        result = result\
    \ + fibfib(n-1);\n        n = n - 2;\n    }\n    return result;", "    assert(n\
    \ >= 0);\n    if(n==0)\n        return 0;\n    if(n==1)\n        return 1;\n \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "\tlong fibfib[n];\n\tassert(n>0);\n\
    \tfibfib[0] = 0;\n\tfibfib[1] = 0;\n\tfibfib[2] = 1;\n\tfor (int i=3; i<n; i++)\
    \ {\n\t\tfibfib[i] = fibfib[i-1]+fibfib[i-2]+fibfib[i-3];\n\t}\n\treturn fibfib[n-1];",
  "    long ans=0, fibnum;\n    if(n == 0) ans=0;\n    else if(n == 1) ans=1;\n  \
    \  else {\n        fibnum= fibfib(n-1)+fibfib(n-2);\n        ans=fibnum;\n   \
    \ }\n    return ans;", "    long fib_number = 0, fibfib = 0;\n    if (n == 0)\
    \ {\n        return 0;\n    }\n    if (n == 1) {\n        return 0;\n    }\n \
    \   while (fib_number < n) {\n        fib_number = fibfib;\n        fib = fib\
    \ + fib_number;\n        fibfib = fib_number;\n    }\n    return fibfib;", " \
    \   assert(n>=0);\n    if(n==0 || n==1 || n==2){\n        return 0;\n    }\n \
    \   return fibfib(n-1)+fibfib(n-2)+fibfib(n-3);", "\tassert(n >= 0);\n\tif (n\
    \ == 0) {\n\t\treturn 0;\n\t}\n\tif (n == 1) {\n\t\treturn 0;\n\t}\n\tif (n ==\
    \ 2) {\n\t\treturn 1;\n\t}\n\tlong ans = fibfib(n-1) + fibfib(n-2);\n\treturn\
    \ ans;", "    long result = 0;\n    if (n >= 2) {\n        result = fibfib(n-1)\
    \ + fibfib(n-2);\n    }\n    return result;", "    if(n<0) return -1;\n    if(n==0)\
    \ return 0;\n    if(n==1) return 1;\n    return fibfib(n-1)+fibfib(n-2);", " \
    \   if (n<=1) {\n        return 0;\n    }\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);", "\t// Complete this function\n\tif(n<0)\n\t\treturn 0;\n\t\
    if(n==0)\n\t\treturn 0;\n\tif(n==1)\n\t\treturn 0;\n\tlong sum=0;\n\tfor(long\
    \ i=2;i<=n;i++)\n\t\tsum+=i;\n\treturn sum;", "     assert(n>=0);\n     if (n==0)\n\
    \         return 0;\n     if (n==1)\n         return 1;\n     return fibfib(n-2)\
    \ + fibfib(n-1);", "    if (n <= 0)\n        return 0;\n    if (n == 1)\n    \
    \    return 0;\n    if (n == 2)\n        return 1;\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);", "    assert ( n >= 0 && n <=3L);\n    if(n==0 || n==1)\n  \
    \      return 0;\n    if(n==2)\n        return 1;\n    return fibfib(n-1) + fibfib(n-2);",
  "    long fibfib[n];\n    fibfib[0] = 0;\n    fibfib[1] = 0;\n    fibfib[2] = 1;\n\
    \    long i = 2;\n    while (i <= n) {\n        fibfib[i] = fibfib[i-1] + fibfib[i-2];\n\
    \        i++;\n    }\n    return fibfib[n];", "\tif(n<0) return 0;\n\tif(n==0)\
    \ return 0;\n\tif(n==1) return 1;\n\tlong sum = 0;\n\tfor(int i=2;i<=n;i++){\n\
    \t\tsum+=fibfib(i-1) + fibfib(i-2);\n\t}\n\treturn sum;", "    if (n == 0)\n \
    \       return 0;\n    if (n == 1)\n        return 1;\n    if (n == 2)\n     \
    \   return 1;\n    if (n == 3)\n        return 2;\n    if (n > 3)\n        return\
    \ (fibfib(n-3) + fibfib(n-2) + fibfib(n-1));", "    long sum = 0;\n    long temp;\n\
    \    if (n==0)\n        return 0;\n    else if(n==1)\n        return 1;\n    else\
    \ if(n==2)\n        return 1;\n    else\n    {\n        temp = fibfib(n-1);\n\
    \        sum = sum + temp;\n        sum = sum + fibfib(n-2);\n        sum = sum\
    \ + temp;\n        return sum;\n    }", "  assert(n > 0 && n <= 31);\n  long first\
    \ = 0;\n  long second = 1;\n  long third = 1;\n  long current = 3;\n  while (current\
    \ < n) {\n    third = second;\n    second = first;\n    first = current;\n   \
    \ current = third + second + first;\n  }\n  return current;", "    long a = 1;\n\
    \    long b = 1;\n    long temp = 0;\n    long i = 1;\n    while(i<n) {\n    \
    \    temp = a;\n        a = b;\n        b = temp + a + b;\n        i++;\n    }\n\
    \    return b;", "\tif (n < 3)\n\t\treturn n;\n\tlong fibfib;\n\tfibfib = (long)\
    \ (fibfib(n-1) + fibfib(n-2) + fibfib(n-3));\n\treturn fibfib;", "    if (n <=\
    \ 3) return 1;\n    long result = fibfib(n-2) + fibfib(n-1);\n    return result;",
  "    long fib = 0;\n    for (int i = 1; i < n; i++) {\n        fib += i;\n    }\n\
    \    return fib;", "  if (n == 0) {\n    return 0;\n  }\n  if (n == 1) {\n   \
    \ return 1;\n  }\n  if (n == 2) {\n    return 2;\n  }\n  if (n <= 3) {\n    return\
    \ fibfib(n-1) + fibfib(n-2);\n  }\n  return fibfib(n-2) + fibfib(n-3) + fibfib(n-1);",
  "  assert(n >= 0);\n  if (n < 3) {\n    return 1;\n  }\n  else {\n    return (fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3));\n  }", "    // Code here\n    if (n==0 || n==1)\n\
    \        return n;\n    if (n==2)\n        return 1;\n    if (n>3)\n        return\
    \ fibfib(n-1) + fibfib(n-2);", "   assert(n>0);\n   long p1=1;\n   long p2=1;\n\
    \   long p3=1;\n   long p4=1;\n   long sum=0;\n   if(n==1){\n     return 0;\n\
    \   }\n   if(n==2){\n     return 1;\n   }\n   if(n==3){\n     return 1;\n   }\n\
    \   for(long i=4;i<=n;i++){\n      p1=p4;\n      p2=p3;\n      p3=p4;\n      p4=p1+p2+p3;\n\
    \      sum=sum+p4;\n   }\n   return sum;", "    if (n <= 0)\n        return 0;\n\
    \    if (n == 1)\n        return 0;\n    if (n == 2)\n        return 1;\n    return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "    \n    if (n <= 1)\n        return\
    \ 1;\n    long sum = 0;\n    for (int i = 0; i <= n; i++) {\n        sum = sum\
    \ + fibfib(i-1);\n    }\n    return sum;", "    if(n==0) return 0;\n    if(n==1)\
    \ return 1;\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", '     return
    (n<2) ? 1 : fibfib(n-1) + fibfib(n-2) + fibfib(n-3);', "    // Base case is when\
    \ n = 0.\n    if (n == 0)\n        return 0;\n    if (n == 1)\n        return\
    \ 0;\n    // Base case is when n = 1.\n    if (n == 2)\n        return 1;\n  \
    \  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "\tif (n == 0) {\n\t\treturn\
    \ 0;\n\t} else if (n == 1) {\n\t\treturn 1;\n\t} else if (n == 2) {\n\t\treturn\
    \ 1;\n\t} else {\n\t\treturn fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\t}", "\t\
    if (n == 1 || n == 0) return 0;\n\tlong a = fibfib(n-1);\n\tlong b = fibfib(n-2);\n\
    \tlong c = fibfib(n-3);\n\treturn a + b + c;", "    long prev = 0;\n    long prevprev\
    \ = 0;\n    long prevprevprevprev = 0;\n    long sum = 0;\n    long i;\n    for\
    \ (i = 0; i <= n; i++) {\n        sum = prev + prevprev + prevprevprev;\n    \
    \    prev = prevprev;\n        prevprev = prevprevprev;\n        prevprevprev\
    \ = sum;\n    }\n    return prevprevprev;", "    // Write code here\n    assert(n\
    \ >= 0);\n    long sum = 0;\n    if(n < 2){\n        sum = n;\n    }\n    else{\n\
    \        sum = fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n    }\n    return sum;",
  "    if(n > 2){\n        return fibfib(n-2) + fibfib(n-1);\n    }\n    if(n < 0){\n\
    \        return -1;\n    }\n    if(n == 0){\n        return 0;\n    }\n    if(n\
    \ == 1){\n        return 1;\n    }\n    if(n == 2){\n        return 1;\n    }\n\
    \    return -1;", "    //  assert(n >= 0);\n    long num = 0;\n    long sum =\
    \ 0;\n    long temp;\n    long i;\n    long rem;\n    long tempSum = 0;\n    \n\
    \    // The first part of the Fibonacci sequence\n    if (n == 0) {\n        num\
    \ = 0;\n        sum = 0;\n    }\n    else {\n        // Find the Fibonacci sequence\
    \ element\n        temp = n - 1;\n        while (temp > 0) {\n            temp\
    \ = temp - 1;\n        }\n        \n        // Add the last two numbers of the\
    \ sequence\n        sum = temp;\n        num = temp;\n    }\n    \n    // The\
    \ second part of the Fibonacci sequence\n    for (i = 1; i < num; i++) {\n   \
    \     temp = num;\n        num = i;\n        tempSum = sum;\n        sum = tempSum\
    \ + temp;\n    }\n    \n    // Return the result\n    return sum;", "    if(n<0)\n\
    \        return 0;\n    if(n==0)\n        return 0;\n    if(n==1)\n        return\
    \ 1;\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "    if(n<=2){\n \
    \       return 1;\n    }else{\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \    }", "\tassert(n >= 0);\n\tlong s = 0;\n\tif (n == 0 || n == 1) return n;\n\
    \ts = fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\treturn s;", "     long res =\
    \ 0;\n     for (int i = 1; i < n; i++) {\n         res = res + i;\n     }\n  \
    \   return res;", "    long fibfib = 0;\n    long temp = 0;\n    long a = 0, b\
    \ = 1, c = 2;\n    while (n != 0) {\n        temp = a + b + c;\n        fibfib\
    \ = temp;\n        a = b;\n        b = c;\n        c = temp;\n        n--;\n \
    \   }\n    return fibfib;", "    assert(n>0 && n<=33);\n    if(n==0) {\n     \
    \   return 0;\n    }\n    if(n==1) {\n        return 1;\n    }\n    if(n==2) {\n\
    \        return 2;\n    }\n    long ans = fibfib(n-1);\n    ans += fibfib(n-2);\n\
    \    ans += fibfib(n-3);\n    return ans;", "    long num = 0;\n    if(n>1) num+=fibfib(n-1);\n\
    \    if(n>2) num+=fibfib(n-2);\n    if(n>3) num+=fibfib(n-3);\n    return num;",
  "    if (n <= 1) {\n        return n;\n    }\n    long ans = fibfib(n-2) + fibfib(n-1);\n\
    \    ans = ans + fibfib(n-3);\n    return ans;", "    long sum = 0;\n    long\
    \ fibfibnum = 0;\n    if (n < 1) {\n        return 0;\n    } else if (n == 1)\
    \ {\n        return 0;\n    } else {\n        for (long i = 0; i < n; i++) {\n\
    \            sum += fibfibnum;\n            fibfibnum = fibfibnum + sum;\n   \
    \     }\n        return sum;\n    }", "    // write your code here\n    long sum\
    \ = 0;\n    if(n==0)\n        return 0;\n    else if(n==1)\n        return 1;\n\
    \    else{\n        sum=fibfib(n-1);\n        sum+=fibfib(n-2);\n        sum+=fibfib(n-3);\n\
    \    }\n    return sum;", "  if (n==0 || n==1)\n    return n;\n  return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);", "    if (n < 2) {\n        return n;\n    }\n\
    \    long fibfib[n + 1] = {0, 1};\n    for (int i = 2; i <= n; i++) {\n      \
    \  fibfib[i] = fibfib[i - 1] + fibfib[i - 2];\n    }\n    return fibfib[n];",
  "  assert(n >= 0 && n < 1000000000);\n  if (n < 3) {\n    return n;\n  } else {\n\
    \    long a = fibfib(n-2);\n    long b = fibfib(n-1);\n    return a + b + fibfib(n);\n\
    \  }", "  if (n <= 3)\n    return 1;\n  else\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);", "   if(n <= 1) return n;\n   return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);", "// write your code here\n    if(n<0)\n        return fibfib(-n);\n\
    \    if(n==0)\n        return 0;\n    if(n==1)\n        return 1;\n    long temp;\n\
    \    temp=fibfib(n-2)+fibfib(n-1);\n    return temp;", "  assert(n >= 0 && n <=\
    \ 3);\n  long prev = 0;\n  long ans = 0;\n  if (n == 0 || n == 1) {\n    ans =\
    \ n;\n  }\n  else {\n    ans = fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n  }\n\
    \  return ans;", "    long fibfib[n];\n    fibfib[0] = 0;\n    fibfib[1] = 0;\n\
    \    fibfib[2] = 1;\n    long sum = 0;\n    long count = 0;\n    for(int i = 3;\
    \ i<=n; i++){\n        sum = fibfib[i-1] + fibfib[i-2];\n        fibfib[i] = sum;\n\
    \        count++;\n    }\n    return fibfib[n-1];", "  // Write your code here\n\
    \  long ans = 0;\n  long a = 0;\n  long b = 0;\n  long c = 1;\n  for (int i =\
    \ 3; i <= n; i++) {\n    a = a + c;\n    b = b + c;\n    c = a + b;\n    ans =\
    \ ans + c;\n  }\n  return ans;", "    //code here\n    if(n<3){\n        return\
    \ 0;\n    }\n    if(n%2==0){\n        return fibfib(n/2);\n    }\n    return fibfib(n-1)+fibfib(n-2);",
  "    long sum = 0;\n    long fibfib(int n){\n        if (n<0){\n            return\
    \ 0;\n        }\n        if (n==0){\n            return 1;\n        }\n      \
    \  else if (n==1){\n            return 0;\n        }\n        else {\n       \
    \     long a = fibfib(n-2);\n            long b = fibfib(n-3);\n            return\
    \ a+b;\n        }\n    }\n    for(int i=3;i<=n;i++){\n        sum = sum + fibfib(i);\n\
    \    }\n    return sum;", "\tif (n == 0 || n == 1) return 0;\n\treturn fibfib(n-2)\
    \ + fibfib(n-1);", "  // code goes here\n  long retVal = 0;\n  for (long i = 0;\
    \ i < n; i++) {\n    retVal = retVal * 2 + i;\n  }\n  return retVal;", "    if(n<2)\n\
    \        return 0;\n    long ans=fibfib(n-2);\n    return ans+fibfib(n-3);", "\t\
    long f1, f2, f3;\n\tassert(n >= 0);\n\tif (n == 0)\n\t\treturn 0;\n\tif (n ==\
    \ 1)\n\t\treturn 1;\n\tif (n == 2)\n\t\treturn 1;\n\tf1 = fibfib(n-1);\n\tf2 =\
    \ fibfib(n-2);\n\tf3 = fibfib(n-3);\n\treturn f1 + f2 + f3;", "    if(n<0)\n \
    \       return 0;\n    if(n==1)\n        return 0;\n    if(n==2)\n        return\
    \ 1;\n    return fibfib(n-1)+fibfib(n-2)+fibfib(n-3);", "\tif (n <= 1) return\
    \ 1;\n\treturn fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "\tassert(n >= 1);\n\
    \tif (n == 0) return 0;\n\tlong x = 0;\n\tfor (long i = 3; i <= n; i++) {\n\t\t\
    x += i;\n\t}\n\treturn x;", "   long ans=0,f1,f2,f3;\n   assert(n>=0);\n   f1=1;\n\
    \   f2=1;\n   f3=1;\n   while (n > 0)\n   {\n       f1 = f1+f2+f3;\n       f2\
    \ = f2;\n       f3 = f3;\n       ans = ans+f1;\n       f2 = f3;\n       f3 = f1;\n\
    \       n = n-1;\n   }\n   return ans;", "    if(n<0){\n        cout<<\"n is not\
    \ a valid fibonacci number\";\n        return 0;\n    }\n    if(n == 0){\n   \
    \     return 0;\n    }\n    if(n==1){\n        return 1;\n    }\n    if(n==2){\n\
    \        return 1;\n    }\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);",
  "    long sum = 0;\n    if(n == 0){\n        sum = 0;\n    }\n    else if(n == 1){\n\
    \        sum = 1;\n    }\n    else if(n == 2){\n        sum = 2;\n    }\n    else{\n\
    \        sum = fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n    }\n    return sum;",
  "    if(n==0 || n==1)\n        return n;\n    return fibfib(n-1)+fibfib(n-2);",
  "    // Write your code here\n    if(n==1)\n        return 0;\n    if(n==2)\n  \
    \      return 1;\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "    if\
    \ (n==0 || n==1)\n        return n;\n    else\n        return fibfib(n-2) + fibfib(n-1);",
  "    long fib = 1;\n    while (n >= 2) {\n        fib += fib;\n        fib += fib;\n\
    \        n -= 2;\n    }\n    return fib;", "    if(n == 0 || n == 1)\n       \
    \ return 0;\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "    if(n <=\
    \ 1) return 0;\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "  assert(n\
    \ >= 0);\n  long count = 0;\n  if (n == 0 || n == 1) {\n    count = 1;\n  } else\
    \ {\n    long left = fibfib(n-1);\n    long right = fibfib(n-2);\n    long middle\
    \ = fibfib(n-3);\n    count = (left + right + middle);\n  }\n  return count;",
  "    if(n <= 1) return n;\n    long a0 = fibfib(n-1);\n    long a1 = fibfib(n-2);\n\
    \    long a2 = fibfib(n-3);\n    return a0 + a1 + a2;", "\tif (n <= 1)\n\t\treturn\
    \ 0;\n\telse\n\t\treturn fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "    // write\
    \ your code in C++11\n    if (n == 0 || n == 1) {\n        return n;\n    }\n\
    \    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "\tif (n == 0)\n\t\treturn\
    \ 0;\n\tif (n == 1)\n\t\treturn 1;\n\tif (n == 2)\n\t\treturn 2;\n\treturn fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);", "  if (n<0) return 0;\n  if (n==1) return 1;\n\
    \  long ans=fibfib(n-1)+fibfib(n-2);\n  return ans;", "    long prev = 0;\n  \
    \  for (long i = 0; i <= n; i++) {\n        prev = prev + i;\n    }\n    return\
    \ prev;", "    // Your code goes here\n    if(n<2)\n    {\n        return 0;\n\
    \    }\n    long a=fibfib(n-1);\n    long b=fibfib(n-2);\n    long c=fibfib(n-3);\n\
    \    return a+b+c;", "    if (n <= 3) {\n        return 0;\n    }\n    return\
    \ fibfib(n-2) + fibfib(n-3) + fibfib(n-1);", "    if (n == 0)\n        return\
    \ 0;\n    else if (n == 1)\n        return 1;\n    else if (n == 2)\n        return\
    \ 2;\n    else\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "  \
    \  long f = 1;\n    long fi = 1, fa = 1;\n    for(int i = 3; i <= n; i++){\n \
    \       f = fi;\n        fi = fi + fa;\n        fa = f*fa;\n    }\n    return\
    \ f;", "    // your code goes here\n    assert(n>=0);\n    if (n==0) return 0;\n\
    \    if (n==1) return 1;\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);",
  "    assert(n > 0);\n    if (n == 0)\n        return 0;\n    if (n == 1)\n     \
    \   return 1;\n    return fibfib(n - 2) + fibfib(n - 1);", "    // assert(n>=0);\n\
    \    if (n == 0 || n == 1)\n        return n;\n    else if (n == 2)\n        return\
    \ 1;\n    else {\n        // assert(n>=3);\n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);\n    }", "    // assert(n >= 0);\n    // assert(n < 5);\n   \
    \ if (n == 0 || n == 1) {\n        return n;\n    } else if (n == 2) {\n     \
    \   return 1;\n    } else {\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \    }", '    return n==0 || n==1 ? n : fibfib(n-1) + fibfib(n-2) + fibfib(n-3);',
  "   if(n == 0)\n      return 0;\n   if(n == 1)\n      return 1;\n   return fibfib(n-2)\
    \ + fibfib(n-3);", "    long fibfib = 0;\n    while (n>0)\n    {\n        if (n%2==0)\n\
    \        {\n            fibfib = fibfib+n;\n        }\n        else\n        {\n\
    \            fibfib = fibfib+n+1;\n        }\n        n = n/2;\n    }\n    return\
    \ fibfib;", "    if(n==0) return 0;\n    if(n==1) return 1;\n    long ans = fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n    return ans;", "\tassert (n>0);\n\tlong fibfib[n];\n\
    \tfibfib[0] = 0;\n\tfibfib[1] = 0;\n\tfibfib[2] = 1;\n\tfibfib[n] = fibfib[n-1]\
    \ + fibfib[n-2] + fibfib[n-3];\n\treturn fibfib[n];", "    if(n<3)\n        return\
    \ 1;\n    if(n==3)\n        return 2;\n    return fibfib(n-2) + fibfib(n-1);",
  "    long previous = 0;\n    long current = 1;\n    for (int i = 1; i <= n; i++)\
    \ {\n        previous = current;\n        current += previous + previous + previous;\n\
    \    }\n    return current;", "    long fibfib=0;\n    if (n == 0)\n    {\n  \
    \      fibfib = 0;\n    }\n    else if (n == 1)\n    {\n        fibfib = 1;\n\
    \    }\n    else if (n == 2)\n    {\n        fibfib = 2;\n    }\n    else\n  \
    \  {\n        fibfib=fibfib(n-1)+fibfib(n-2)+fibfib(n-3);\n    }\n    return fibfib;",
  "    assert(n >= 0 && n <= 3);\n    long a = 1;\n    long b = 1;\n    for (long\
    \ i = 3; i <= n; i++)\n    {\n        // a = fibfib(i-1)\n        // b = fibfib(i-2)\
    \ + a\n        a = (b * b);\n        b = a;\n    }\n    return a;", "    long\
    \ num = 0;\n    long fibfib = 0;\n    long fibfib2 = 0;\n    // your code goes\
    \ here\n    if (n >= 2) {\n        fibfib2 = fibfib(n-2);\n        fibfib = fibfib2\
    \ + fibfib(n-1);\n        num = fibfib + fibfib2;\n    } else {\n        fibfib2\
    \ = fibfib(n-3);\n        fibfib = fibfib2 + fibfib(n-2);\n        num = fibfib\
    \ + fibfib2;\n    }\n    return num;", "    assert(n>=0);\n    if(n==1)\n    \
    \    return 0;\n    else if(n==2)\n        return 1;\n    else\n        return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "    long fibfib[n+1];\n    fibfib[0]\
    \ = 0;\n    fibfib[1] = 0;\n    fibfib[2] = 1;\n    for (int i = 2; i <= n; i++)\
    \ {\n        fibfib[i] = fibfib[i-1] + fibfib[i-2];\n    }\n    return fibfib[n];",
  "    // code here\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    if (n%2\
    \ == 0) {\n        z += x;\n    }\n    for (int i = 3; i <= n; i++) {\n      \
    \  x = y;\n        y = z + x;\n        z = y;\n    }\n    return z;", "\tlong\
    \ fibfib[n];\n\tfibfib[0] = 0;\n\tfibfib[1] = 0;\n\tfibfib[2] = 1;\n\tfibfib[3]\
    \ = 1;\n\tfor (long i = 4; i < n; i++) {\n\t\tlong j = fibfib[i-3];\n\t\tlong\
    \ k = fibfib[i-2];\n\t\tlong x = fibfib[i-1];\n\t\tfibfib[i] = (j + k + x) % 10;\n\
    \t}\n\treturn fibfib[n];", "  if(n<=1)\n    return 0;\n  long prev=fibfib(n-2);\n\
    \  long curr=fibfib(n-3);\n  return curr+prev;", "    if (n == 0)\n        return\
    \ 0;\n    if (n == 1)\n        return 1;\n    if (n == 2)\n        return 1;\n\
    \    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "    // assert(n<1000000000);\n\
    \    if (n == 0) {\n        return 0;\n    }\n    if (n == 1) {\n        return\
    \ 1;\n    }\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "    assert(n\
    \ >= 0 && n <= 33);\n    long result = 0;\n    long sum = 0;\n    while (n > 1)\
    \ {\n        sum += n;\n        result += sum;\n        n -= 2;\n    }\n    return\
    \ result;", "    // your code here\n    if (n < 3)\n        return 0;\n    long\
    \ a = fibfib(n-2);\n    long b = fibfib(n-1);\n    return a + b + fibfib(n);",
  "    if(n == 0)\n        return 0;\n    if(n == 1)\n        return 1;\n    if(n\
    \ == 2)\n        return 2;\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);",
  "\tassert(n>=0 && n<=30);\n\tlong sum = 0;\n\tlong i = 2;\n\tlong m = 0;\n\twhile(i\
    \ < n) {\n\t\tm = i;\n\t\tsum = (sum + m);\n\t\ti++;\n\t}\n\treturn sum;", "\t\
    assert((n>=1)&&(n<=31));\n\tlong sum=1;\n\tif(n==1){\n\t\treturn sum;\n\t}\n\t\
    if(n==2){\n\t\treturn sum;\n\t}\n\tif(n==3){\n\t\treturn sum;\n\t}\n\tif(n%2==0){\n\
    \t\tsum=fibfib(n-1)+fibfib(n-2);\n\t}\n\telse{\n\t\tsum=fibfib(n-1)+fibfib(n-2)+fibfib(n-3);\n\
    \t}\n\treturn sum;", "    long result = 0;\n    if(n==0)\n        return 0;\n\
    \    if(n==1)\n        return 1;\n    if(n==2)\n        return 1;\n    for(long\
    \ i=3;i<=n;i++)\n    {\n        result = result + fibfib(i-1)+fibfib(i-2);\n \
    \   }\n    return result;", "    //Write your code here\n     if (n == 0)\n  \
    \      return 0;\n    if (n == 1)\n        return 1;\n    if (n == 2)\n      \
    \  return 1;\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "    if(n==0)\
    \ return 0;\n    if(n==1) return 1;\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);",
  "  if (n <= 2)\n    return 0;\n  else\n    return (fibfib(n-1) + fibfib(n-2) + fibfib(n-3));",
  "    if (n <= 1) {\n        return n;\n    } else {\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n    }", "    if(n<0){\n        printf(\"\\nOut\
    \ of range\");\n        return 0;\n    }\n    if(n==0 || n==1){\n        return\
    \ 0;\n    }\n    if(n==2){\n        return 1;\n    }\n    long long a,b,c,d;\n\
    \    a=b=c=d=0;\n    long long fibfib(n-2);\n    for(int i=0; i<n-2; i++){\n \
    \       long long num=fibfib(i);\n        a=a+num;\n        b=b+num;\n       \
    \ c=b+c;\n        d=b+d;\n    }\n    return fibfib(n-2);", "    long sum = 0;\n\
    \    for(int i = 0; i < n; i++) {\n        sum += fibfib(n-i);\n    }\n    return\
    \ sum;", "    // Write your code here\n    if(n <= 0) return 0;\n    if(n <= 1)\
    \ return 1;\n    return fibfib(n-2) + fibfib(n-3); ", "    if(n == 0)\n      \
    \  return 0;\n    if(n == 1)\n        return 1;\n    if(n == 2)\n        return\
    \ 2;\n    long r = fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n    return r;", " \
    \   if(n<=1){\n        return n;\n    }\n    long ret=fibfib(n-1);\n    ret=ret+fibfib(n-2);\n\
    \    return ret;", "  if (n == 0 || n == 1) {\n    return 0;\n  }\n  else {\n\
    \    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n  }", "    if (n == 0)\n\
    \        return 0;\n    if (n == 1)\n        return 0;\n    if (n == 2)\n    \
    \    return 1;\n    if (n > (LONG_MAX / 2) || n == (LONG_MAX / 2))\n        return\
    \ 0;\n    long ans = fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n    return ans;",
  "    if (n == 0 || n == 1) {\n        return n;\n    }\n    long fib_1 = fibfib(n-1);\n\
    \    long fib_2 = fibfib(n-2);\n    long fib_3 = fibfib(n-3);\n    return fib_1\
    \ + fib_2 + fib_3;", "\tlong prev = 0;\n\tlong next = 1;\n\tlong res = 1;\n\t\
    while (n > 0) {\n\t\tnext = prev + next;\n\t\tprev = next;\n\t\tn -= 1;\n\t\t\
    res += prev;\n\t}\n\treturn res;", "    if (n == 0 || n == 1) return 0;\n    else\
    \ return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "    assert(n >= 0 && n <\
    \ 1000000);\n    if (n == 0 || n == 1) {\n        return n;\n    } else if (n\
    \ == 2) {\n        return 1;\n    } else {\n        return fibfib(n-1) + fibfib(n-2);\n\
    \    }", "     long fibfib = 0;\n     if(n==0)\n         fibfib = 0;\n     else\
    \ if(n==1)\n         fibfib = 0;\n     else if(n==2)\n         fibfib = 1;\n \
    \    else\n         fibfib = fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n     return\
    \ fibfib;", "    if (n == 0 || n == 1) {\n        return n;\n    }\n    if (n\
    \ == 2) {\n        return 2;\n    }\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);",
  "    int arr[1000], sum;\n    arr[0] = 0, arr[1] = 0;\n    for(int i=2; i<n; i++)\
    \ {\n        arr[i] = arr[i-2] + arr[i-1];\n    }\n    for(int i=2; i<n; i++)\
    \ {\n        sum = arr[i] + arr[i - 1];\n        arr[i] = sum;\n    }\n    return\
    \ arr[n];", "\tif (n <= 0) {\n\t\treturn 0;\n\t}\n\tlong a = fibfib(n-2);\n\t\
    long b = fibfib(n-1);\n\treturn a + b + fibfib(n-2);", "  assert(n >= 0 && n <=\
    \ 21);\n  long result = 0;\n  for (long i = 1; i <= n; ++i) {\n    result += fibfib(n-i);\n\
    \  }\n  return result;", "    if(n<2)\n        return 0;\n    long fib = fibfib(n-1)+fibfib(n-2);\n\
    \    return fibfib(n-3)+fib;", "    long prev = 0;\n    if (n == 0) return 0;\n\
    \    if (n == 1) return 1;\n    if (n == 2) return 2;\n    long current = fibfib(n-1);\n\
    \    long next = current + fibfib(n-2);\n    return prev + next;", "\tassert(n\
    \ >= 0);\n\tif (n == 0)\n\t\treturn 0;\n\tif (n == 1)\n\t\treturn 0;\n\tif (n\
    \ == 2)\n\t\treturn 1;\n\treturn fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", " \
    \   //assert if n<0: return -1;\n    if(n==1)\n        return 0;\n    if(n==2)\n\
    \        return 1;\n    if(n==0)\n        return 0;\n    long ans=fibfib(n-1)+fibfib(n-2);\n\
    \    return ans;", "    if (n <= 0)\n        return 0;\n    if (n <= 2)\n    \
    \    return n;\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "    if\
    \ (n < 3)\n        return n;\n    long f1 = 0, f2 = 1, f3 = 0;\n    for (long\
    \ i = 2; i <= n; i++) {\n        f3 = f1 + f2 + f3;\n        f2 = f1;\n      \
    \  f1 = f3;\n    }\n    return f3;", "  if (n < 3) return 0;\n  else if (n ==\
    \ 3) return 1;\n  else {\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \  }", "    long sum = 0;\n    long c = 1;\n    long d = 2;\n    while (n > 1)\
    \ {\n        sum = c + d;\n        c = d;\n        d = sum;\n        n--;\n  \
    \  }\n    return sum;", "    long fibfib = 0;\n    if (n == 0)\n    {\n      \
    \  fibfib = 0;\n    }\n    else\n    {\n        if (n == 1)\n        {\n     \
    \       fibfib = 0;\n        }\n        else\n        {\n            fibfib =\
    \ (fibfib + fibfib(n - 2)) + fibfib(n - 3);\n        }\n    }\n    return fibfib;",
  "    long prev=0,curr=1;\n    long sum = 0;\n    long i,j;\n    long count= 1;\n\
    \    for(i=0;i<n;i++) {\n        prev=curr;\n        curr=prev+curr;\n       \
    \ sum+=curr;\n    }\n    for(j=1;j<n;j++) {\n        sum+=prev;\n        prev=curr;\n\
    \        curr=prev+curr;\n    }\n    return sum;", "    long long int x = 0;\n\
    \    long long int y = 1;\n    for (int i = 0; i < n; i++) {\n        long long\
    \ int z = x + y;\n        x = y;\n        y = z;\n    }\n    return y;", "   \
    \ if(n==1 || n==2)\n        return 1;\n    else if(n==0)\n        return 0;\n\
    \    else if(fibfib(n-1) == 0)\n        return 0;\n    else if(fibfib(n-2) ==\
    \ 1)\n        return 1;\n    else return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);",
  "\tif (n <= 1) return 0;\n\tlong a = fibfib(n-1);\n\tlong b = fibfib(n-2);\n\treturn\
    \ a+b+fibfib(n-3);", "    long fibfib = 0;\n    long currentfib = 0;\n    long\
    \ currentfibprevious = 0;\n    long currentnumber = 0;\n    long count = 0;\n\
    \    long start = 0;\n    long end = 0;\n    long length = 0;\n    if (n == 1)\
    \ {\n        fibfib = 1;\n    }\n    else if (n == 2) {\n        fibfib = 0;\n\
    \    }\n    else {\n        current = n;\n        while (current > 0) {\n    \
    \        count++;\n            currentnumber = currentfibprevious + currentfib;\n\
    \            if (currentnumber == 0) {\n                fibfib = 0;\n        \
    \        break;\n            }\n            else {\n                currentfibprevious\
    \ = currentfib;\n                fibfib = currentnumber;\n            }\n    \
    \        current = count - 1;\n        }\n    }\n    return fibfib;", "  if(n<=1)\
    \ return n;\n  else return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "    if\
    \ (n==0)\n        return 0;\n    if (n==1)\n        return 1;\n    if (n==2)\n\
    \        return 2;\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "\t\
    // your code here\n\tlong int fibfib[10] = {0,1,1,2,1,3,3,3,5};\n\treturn fibfib[n];",
  "\tassert(n >= 0);\n\tif (n == 0 || n == 1)\n\t\treturn n;\n\tif (n == 2)\n\t\t\
    return 1;\n\treturn fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "    if(n < 2)\n\
    \        return n;\n    return fibfib(n-2) + fibfib(n-1);", "    if (n <= 3) return\
    \ 1;\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "    // assert(n >=\
    \ 0);\n    // assert(n <= 30);\n\n    if (n==0) return 0;\n    if (n==1) return\
    \ 1;\n    if (n==2) return 2;\n    if (n<=3) return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);\n    \n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3) + fibfib(n-4);",
  "\t// TODO: Write your code here\n\treturn 0;", "\tif (n == 0 || n == 1)\n\t\treturn\
    \ 0;\n\tif (n == 2)\n\t\treturn 1;\n\treturn fibfib(n-1) + fibfib(n-2) + fibfib(n-3);",
  "    long sum = 0, i = 1;\n    for (; i <= n; i++) {\n        sum += i;\n    }\n\
    \    return sum;", "    if (n == 0)\n        return 0;\n    else if (n == 1)\n\
    \        return 1;\n    else if (n == 2)\n        return 2;\n    else\n      \
    \  return fibfib(n-2) + fibfib(n-1);", "    // code here\n    if (n <= 1)\n  \
    \      return 0;\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "    long\
    \ f = 1;\n    for(int i = 1; i <= n; ++i) {\n        f = f + i;\n    }\n    return\
    \ f;", "    // write your code\n    assert(n > 0);\n    if(n <= 1){\n        return\
    \ 0;\n    }\n    long f1 = 1;\n    long f2 = 1;\n    long f3 = 1;\n    long num;\n\
    \    long f4 = f1;\n    for(int i = 3; i <= n; i++) {\n        num = f4;\n   \
    \     f4 = f3 + f2;\n        f3 = f2;\n        f2 = f1;\n        f1 = num;\n \
    \   }\n    return f1;", "\tassert(n > 0);\n\tlong a = 0, b = 0;\n\tfor(long i\
    \ = 2; i <= n; i++){\n\t\ta = b;\n\t\tb += a;\n\t}\n\treturn b;", "    // Write\
    \ your code here\n    assert(n >= 0 && n < 10);\n    if (n == 0 || n == 1)\n \
    \       return n;\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "  if\
    \ (n == 0)\n    return 0;\n  if (n == 1)\n    return 1;\n  return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);", "    if(n < 2) return n;\n    return fibfib(n-2)\
    \ + fibfib(n-3) + fibfib(n-4);", // Your code here, "    if (n == 0) return 0;\n\
    \    if (n == 1) return 1;\n    if (n == 2) return 1;\n    if (n == 3) return\
    \ 1;\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "    if (n == 0 ||\
    \ n == 1)\n        return n;\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);",
  "    assert(n > 2);\n    if (n == 0) return 0;\n    if (n == 1) return 1;\n    return\
    \ fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3);", "\t// Complete this function\n\
    \tif(n==0)\n\t\treturn 0;\n\tif(n==1)\n\t\treturn 0;\n\tif(n==2)\n\t\treturn 1;\n\
    \treturn fibfib(n-1) + fibfib(n-2) + fibfib(n-3);", "    long long res = 0;\n\
    \    if(n<=1){\n        res = 1;\n    }\n    else{\n        res = fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n    }\n    return res;", "\tassert(n>0 && \"Incorrect\
    \ value for n\");\n\tif (n==0)\n\t\treturn 0;\n\tif (n==1)\n\t\treturn 1;\n\t\
    if (n==2)\n\t\treturn 1;\n\treturn fibfib(n-1)+fibfib(n-2)+fibfib(n-3);", "  \
    \  if(n<2){\n        return 0;\n    }\n    long result = fibfib(n-2) + fibfib(n-3);\n\
    \    return result;", "    if(n == 0) {\n        return 0;\n    }\n    if(n ==\
    \ 1) {\n        return 1;\n    }\n    if(n == 2) {\n        return 2;\n    }\n\
    \    if(n == 3){\n        return 5;\n    }\n    if(n == 4) {\n        return 8;\n\
    \    }\n    if(n == 5) {\n        return 15;\n    }\n    if(n == 6) {\n      \
    \  return 21;\n    }\n    if(n == 7) {\n        return 34;\n    }\n    if(n ==\
    \ 8) {\n        return 55;\n    }\n    if(n == 9) {\n        return 89;\n    }\n\
    \    if(n == 10) {\n        return 135;\n    }\n    if(n == 11) {\n        return\
    \ 181;\n    }\n    if(n == 12) {\n        return 225;\n    }\n    if(n == 13)\
    \ {\n        return 277;\n    }\n    if(n == 14) {\n        return 323;\n    }\n\
    \    if(n == 15) {\n        return 379;\n    }\n    if(n == 16) {\n        return\
    \ 425;\n    }\n    if(n == 17) {\n        return 475;\n    }\n    if(n == 18)\
    \ {\n        return 513;\n    }\n    if(n == 19) {\n        return 557;\n    }\n\
    \    if(n == 20) {\n        return 611;\n    }\n    if(n == 21) {\n        return\
    \ 663;\n    }\n    if(n == 22) {\n        return 729;\n    }\n    if(n == 23)\
    \ {\n        return 787;\n    }\n    if(n == 24) {\n        return 843;\n    }\n\
    \    if(n == 25) {\n        return 897;\n    }\n    if(n == 26) {\n        return\
    \ 955;\n    }\n    if(n == 27) {\n        return 1013;\n    }\n    if(n == 28)\
    \ {\n        return 1069;\n    }\n    if(n == 29) {\n        return 1135;\n  \
    \  }\n    if(n == 30) {\n        return 1199;\n    }\n    if(n == 31) {\n    \
    \    return 1265;\n    }\n    if(n == 32) {\n        return 1331;\n    }\n   \
    \ if(n == 33) {\n        return 1399;\n    }\n    if(n == 34) {\n        return\
    \ 1465;\n    }\n    if(n == 35) {\n        return 1531;\n    }\n    if(n == 36)\
    \ {\n        return 1599;\n    }\n    if(n == 37) {\n        return 1665;\n  \
    \  }\n    if(n == 38) {\n        return 1731;\n    }\n    if(n == 39) {\n    \
    \    return 1799;\n    }\n    if(n == 40) {\n        return 1865;\n    }\n   \
    \ if(n == 41) {\n        return 1931;\n    }\n    if(n == 42) {\n        return\
    \ 1999;\n    }\n    if(n == ", "\tlong result = 1;\n\tif(n==1)\n\t\tresult = 1;\n\
    \telse if(n==2)\n\t\tresult = 1;\n\telse\n\t\tresult = fibfib(n-1) + fibfib(n-2);\n\
    \n\treturn result;", "    if (n == 1 || n == 0)\n        return 0;\n    long result\
    \ = fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n    return result;", "  if (n ==\
    \ 0) return 0;\n  if (n == 1) return 0;\n  if (n == 2) return 1;\n  if (n < 0)\
    \ return -1;\n  long fib = 0;\n  fib = fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \  return fib;", "    if (n <= 1)\n        return n;\n    return fibfib(n-1) +\
    \ fibfib(n-2) + fibfib(n-3);", "\tif(n<0) return 0;\n\tif(n==0) return 0;\n\t\
    if(n==1) return 1;\n\treturn fibfib(n-1)+fibfib(n-2)+fibfib(n-3);", "    long\
    \ count=0, i=2;\n    long j=1;\n    while(i<n) {\n        count+=j;\n        i+=2;\n\
    \        j+=i;\n    }\n    return count;"]
stop_tokens:
- "\n}"

name: HumanEval_92_any_int
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that takes\
  \ 3 numbers.\n// Returns true if one of the numbers is equal to the sum of the other\
  \ two, and all numbers are integers.\n// Returns false in any other cases.\n// Examples\n\
  bool any_int(long x, long y, long z) {\n"
tests: "}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((2),\
  \ (3), (1)) == (true));\n    assert(candidate((long(2.5)), (2), (3)) == (false));\n\
  \    assert(candidate((long(1.5)), (5), (long(3.5))) == (false));\n    assert(candidate((2),\
  \ (6), (2)) == (false));\n    assert(candidate((4), (2), (2)) == (true));\n    assert(candidate((long(2.2)),\
  \ (long(2.2)), (long(2.2))) == (false));\n    assert(candidate((-4), (6), (2)) ==\
  \ (true));\n    assert(candidate((2), (1), (1)) == (true));\n    assert(candidate((3),\
  \ (4), (7)) == (true));\n    assert(candidate((long(3.0)), (4), (7)) == (false));\n\
  }\n"
completions: []
stop_tokens:
- "\n}"

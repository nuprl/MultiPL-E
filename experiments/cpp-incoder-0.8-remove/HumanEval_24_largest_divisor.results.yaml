language: cpp
name: HumanEval_24_largest_divisor
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n\tlong largest_divisor = 1;\n\tlong divisor = 2;\n\twhile (divisor <=\
    \ n && n % divisor == 0) {\n\t\tlargest_divisor = divisor;\n\t\tdivisor++;\n\t\
    }\n\tassert(divisor <= n);\n\twhile (n / largest_divisor > largest_divisor) {\n\
    \t\tlargest_divisor++;\n\t}\n\treturn largest_divisor;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmpl3quq49_: /tmp/tmpl3quq49_.cpp:19: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092076
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long max_divisor = 0;\n    for (long i = 2; i <= n; i++) {\n     \
    \   if (n % i == 0) {\n            assert(i % 2 == 0);\n            max_divisor\
    \ = i;\n        }\n    }\n    return max_divisor;\n}\nint main() {\n    auto candidate\
    \ = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmppzfxqloi: /tmp/tmppzfxqloi.cpp:8: long int largest_divisor(long int):
    Assertion `i % 2 == 0'' failed.

    '
  stdout: ''
  timestamp: 1660092077
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long max_divisor = n;\n    long max_divisor_tmp = n;\n    for (long\
    \ i = 1; i*i <= n; i++) {\n        long tmp = (max_divisor * i);\n        if (tmp%n\
    \ == 0) {\n            if (tmp > max_divisor_tmp)\n                max_divisor_tmp\
    \ = tmp;\n        } else {\n            if (tmp > max_divisor)\n             \
    \   max_divisor = tmp;\n        }\n    }\n    return max_divisor_tmp;\n}\nint\
    \ main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3)) ==\
    \ (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n\
    \    assert(candidate((100)) == (50));\n    assert(candidate((49)) == (7));\n\
    }\n"
  status: Exception
  stderr: 'tmpjvjytj01: /tmp/tmpjvjytj01.cpp:21: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092077
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long divisor =1;\n    long flag=0;\n    long remainder = 0;\n    for(long\
    \ i=2; i<=n; i++) {\n        remainder = n % i;\n        flag = 0;\n        for(long\
    \ j=1; j<=remainder; j++) {\n            if(j%i == 0)\n            {\n       \
    \         flag = 1;\n                break;\n            }\n        }\n      \
    \  if(flag)\n            divisor = i;\n    }\n    return divisor;\n}\nint main()\
    \ {\n    auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n\
    \    assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n   \
    \ assert(candidate((100)) == (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmpg2zvhlw2: /tmp/tmpg2zvhlw2.cpp:27: int main(): Assertion `candidate((10))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660092076
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long max_div = -1;\n    for (long i = 2; i <= n; i++) {\n        if\
    \ (n % i == 0) {\n            if (max_div < i) max_div = i;\n        }\n    }\n\
    \    return max_div;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: Exception
  stderr: 'tmpznmpalko: /tmp/tmpznmpalko.cpp:15: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092077
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest_div = 1;\n    long div = 2;\n    for(long i=3;i<=n;i=i*div)\
    \ \n        if(n%i == 0)\n            if(n/i == i)\n                largest_div\
    \ = i;\n                else\n            largest_div = i;\n    return largest_div;\n\
    }\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: Exception
  stderr: 'tmpn7eyludb: /tmp/tmpn7eyludb.cpp:17: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092077
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long l=n;\n    for(;l*l<n;l++) {\n        if(n % l == 0) return l;\
    \ // n is a perfect square, no other divisor smaller than n\n    }\n    return\
    \ n; // n is a perfect square\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: Exception
  stderr: 'tmpo0yesf7p: /tmp/tmpo0yesf7p.cpp:13: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092077
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n\tassert(n >= 0);\n\tlong res = n;\n\tlong d = 1;\n\twhile (n > res) {\n\
    \t\td = d * (n /= res);\n\t}\n\treturn d;\n}\nint main() {\n    auto candidate\
    \ = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmpnyeei5n8: /tmp/tmpnyeei5n8.cpp:17: int main(): Assertion `candidate((10))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660092077
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long l = 0;\n    for (long i = 0; i <= n; i++)\n        if (i % 2\
    \ != 0 && i > n)\n            return n;\n        if (i % 2 == 0) {\n         \
    \   l = i;\n        }\n    return l;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmysgn0el.cpp: In function \u2018long int largest_divisor(long int)\u2019\
    :\n/tmp/tmpmysgn0el.cpp:9:13: error: \u2018i\u2019 was not declared in this scope\n\
    \    9 |         if (i % 2 == 0) {\n      |             ^\n"
  stdout: ''
  timestamp: 1660092076
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n\tlong long maxdiv = n;\n\twhile (n > 0) {\n\t\tlong long a = n % maxdiv;\n\
    \t\tmaxdiv = maxdiv / a;\n\t\tif (maxdiv == 1) {\n\t\t\tbreak;\n\t\t}\n\t\tn =\
    \ a;\n\t}\n\treturn maxdiv;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660092076
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long res = 0;\n    while (n % 2 == 0) {\n        n /= 2;\n       \
    \ res = max(res, 1);\n    }\n    while ((n % 4) == 0) {\n        n /= 4;\n   \
    \     res = max(res, 1);\n    }\n    while ((n % 8) == 0) {\n        n /= 8;\n\
    \        res = max(res, 1);\n    }\n    while ((n % 16) == 0) {\n        n /=\
    \ 16;\n        res = max(res, 1);\n    }\n    while ((n % 32) == 0) {\n      \
    \  n /= 32;\n        res = max(res, 1);\n    }\n    while ((n % 64) == 0) {\n\
    \        n /= 64;\n        res = max(res, 1);\n    }\n    while ((n % 128) ==\
    \ 0) {\n        n /= 128;\n        res = max(res, 1);\n    }\n    while ((n %\
    \ 256) == 0) {\n        n /= 256;\n        res = max(res, 1);\n    }\n    while\
    \ ((n % 512) == 0) {\n        n /= 512;\n        res = max(res, 1);\n    }\n \
    \   while ((n % 1024) == 0) {\n        n /= 1024;\n        res = max(res, 1);\n\
    \    }\n    while ((n % 2048) == 0) {\n        n /= 2048;\n        res = max(res,\
    \ 1);\n    }\n    while ((n % 4096) == 0) {\n        n /= 4096;\n        res =\
    \ max(res, 1);\n    }\n    while ((n % 8192) == 0) {\n        n /= 8192;\n   \
    \     res = max(res, 1);\n    }\n    while ((n % 16384) == 0) {\n        n /=\
    \ 16384;\n        res = max(res, 1);\n    }\n    while ((n % 32768) == 0) {\n\
    \        n /= 32768;\n        res = max(res, 1);\n    }\n    while ((n % 65536)\
    \ == 0) {\n        n /= 65536;\n        res = max(res, 1);\n    }\n    while ((n\
    \ % 131072) == 0) {\n        n /= 131072;\n        res = max(res, 1);\n    }\n\
    \    while ((n % 262144) == 0) {\n        n /= 262144;\n        res = max(res,\
    \ 1);\n    }\n    while ((n % 524288) == 0) {\n        n /= 524288;\n        res\
    \ = max(res, 1);\n    }\n    while ((n % 1048576) == 0) {\n        n /= 1048576;\n\
    \        res = max(res, 1);\n    }\n    while ((n % 2097152) == 0) {\n       \
    \ n /= 2097152;\n        res = max(res, 1);\n    }\n    while ((n % 4194304) ==\
    \ 0) {\n        n /= 4194304;\n        res = max(res, 1);\n    }\n    while ((n\
    \ % 8388608) == 0) {\n        n /= 8388608;\n        res = max(res, 1);\n    }\n\
    \    while ((n % 16777216) == 0) {\n        n /= 16777216;\n        res = max(res,\
    \ 1);\n    }\n}\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphz47156f.cpp: In function \u2018long int largest_divisor(long int)\u2019\
    :\n/tmp/tmphz47156f.cpp:8:15: error: \u2018max\u2019 was not declared in this\
    \ scope; did you mean \u2018std::max\u2019?\n    8 |         res = max(res, 1);\n\
    \      |               ^~~\n      |               std::max\nIn file included from\
    \ /usr/include/c++/9/algorithm:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmphz47156f.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:3468:5:\
    \ note: \u2018std::max\u2019 declared here\n 3468 |     max(initializer_list<_Tp>\
    \ __l, _Compare __comp)\n      |     ^~~\n/tmp/tmphz47156f.cpp:12:15: error: \u2018\
    max\u2019 was not declared in this scope; did you mean \u2018std::max\u2019?\n\
    \   12 |         res = max(res, 1);\n      |               ^~~\n      |      \
    \         std::max\nIn file included from /usr/include/c++/9/algorithm:62,\n \
    \                from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmphz47156f.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:3468:5:\
    \ note: \u2018std::max\u2019 declared here\n 3468 |     max(initializer_list<_Tp>\
    \ __l, _Compare __comp)\n      |     ^~~\n/tmp/tmphz47156f.cpp:16:15: error: \u2018\
    max\u2019 was not declared in this scope; did you mean \u2018std::max\u2019?\n\
    \   16 |         res = max(res, 1);\n      |               ^~~\n      |      \
    \         std::max\nIn file included from /usr/include/c++/9/algorithm:62,\n \
    \                from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmphz47156f.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:3468:5:\
    \ note: \u2018std::max\u2019 declared here\n 3468 |     max(initializer_list<_Tp>\
    \ __l, _Compare __comp)\n      |     ^~~\n/tmp/tmphz47156f.cpp:20:15: error: \u2018\
    max\u2019 was not declared in this scope; did you mean \u2018std::max\u2019?\n\
    \   20 |         res = max(res, 1);\n      |               ^~~\n      |      \
    \         std::max\nIn file included from /usr/include/c++/9/algorithm:62,\n \
    \                from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmphz47156f.cpp:2:\n/usr/includ"
  stdout: ''
  timestamp: 1660092076
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    // Your code here\n    long long int max_div;\n    long long int temp\
    \ = n;\n    long long int divisor;\n    while (temp != 0) {\n        divisor =\
    \ temp % 10;\n        if (divisor % 2 == 0) {\n            max_div = divisor;\n\
    \        } else {\n            if (max_div > divisor) max_div = divisor;\n   \
    \     }\n        temp /= 10;\n    }\n    return max_div;\n}\nint main() {\n  \
    \  auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n   \
    \ assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100))\
    \ == (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmp5x5w8c25: /tmp/tmp5x5w8c25.cpp:22: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092076
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long maxdiv = 1, curdiv = 1;\n    long diff = n;\n    while (diff\
    \ > 0) {\n        if (diff % 2 == 0)\n            curdiv++;\n        else\n  \
    \          curdiv--;\n        if (curdiv > maxdiv)\n            maxdiv = curdiv;\n\
    \        diff /= 2;\n    }\n    return maxdiv;\n}\nint main() {\n    auto candidate\
    \ = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmpc8x802hk: /tmp/tmpc8x802hk.cpp:22: int main(): Assertion `candidate((10))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660092076
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n  assert(n != 0);\n  long largest = n;\n  for (int i = 1; i < n; ++i)\
    \ {\n    if (n % i == 0) {\n      largest = i;\n    }\n  }\n  return largest;\n\
    }\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092077
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long k = 0;\n    // Initializing k to 0\n    for (int i = 1; i <=\
    \ n/2; i++)\n        k = (k*2)+i;\n    k = n/k;\n    while ((n % k) != 0) {\n\
    \        k++;\n    }\n    return k;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: Exception
  stderr: 'tmp087osgch: /tmp/tmp087osgch.cpp:17: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092076
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    if (n % 2 == 0) {\n        return n;\n    }\n    long max_div = n;\n\
    \    long max_div_to_be_div = max_div;\n    while (max_div_to_be_div % 2 == 0)\
    \ {\n        max_div_to_be_div = max_div_to_be_div / 2;\n    }\n    long div_of_max_div_to_be_div\
    \ = max_div_to_be_div;\n    while (div_of_max_div_to_be_div <= max_div) {\n  \
    \      if (n % div_of_max_div_to_be_div == 0) {\n            return div_of_max_div_to_be_div;\n\
    \        }\n        div_of_max_div_to_be_div++;\n    }\n    return max_div;\n\
    }\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: Exception
  stderr: 'tmpywus_vzr: /tmp/tmpywus_vzr.cpp:24: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092077
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    int i = 2;\n    long res = 1;\n    while (i < n / i) {\n        res\
    \ *= i;\n        i++;\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmpy6fs0rt9: /tmp/tmpy6fs0rt9.cpp:16: int main(): Assertion `candidate((7))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092077
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest = n;\n    long d = 2;\n    while(d < n) {\n        if(n\
    \ % d == 0) {\n            largest = d;\n        }\n        d += 2;\n    }\n \
    \   return largest;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: Exception
  stderr: 'tmpe2tdz8gx: /tmp/tmpe2tdz8gx.cpp:17: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092077
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long res = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n\
    \ % i == 0) {\n            res = i;\n        }\n    }\n    return res;\n}\nint\
    \ main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3)) ==\
    \ (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n\
    \    assert(candidate((100)) == (50));\n    assert(candidate((49)) == (7));\n\
    }\n"
  status: Exception
  stderr: 'tmpz0hvhbrj: /tmp/tmpz0hvhbrj.cpp:15: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092076
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest_divisor = n;\n    long smallest_divisor = n;\n    while\
    \ (n > 1) {\n        long temp = smallest_divisor;\n        smallest_divisor =\
    \ largest_divisor;\n        largest_divisor = temp;\n        long temp_n = (n-1)\
    \ / largest_divisor;\n        if (temp_n % 2 == 0)\n            break;\n     \
    \   n = temp_n;\n    }\n    return largest_divisor;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmpp65taudw: /tmp/tmpp65taudw.cpp:20: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092077
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long res = 1;\n    long d = 1;\n    for (long x = 2; x * x <= n; x++)\
    \ {\n        if (n % x == 0) {\n            res = max(res, x);\n            if\
    \ (res / x == n)\n                return res;\n            if (res / x < n)\n\
    \                d = x / res + 1;\n        }\n    }\n    return res;\n}\nint main()\
    \ {\n    auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n\
    \    assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n   \
    \ assert(candidate((100)) == (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfj7s94tl.cpp: In function \u2018long int largest_divisor(long int)\u2019\
    :\n/tmp/tmpfj7s94tl.cpp:9:19: error: \u2018max\u2019 was not declared in this\
    \ scope; did you mean \u2018std::max\u2019?\n    9 |             res = max(res,\
    \ x);\n      |                   ^~~\n      |                   std::max\nIn file\
    \ included from /usr/include/c++/9/algorithm:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpfj7s94tl.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:3468:5:\
    \ note: \u2018std::max\u2019 declared here\n 3468 |     max(initializer_list<_Tp>\
    \ __l, _Compare __comp)\n      |     ^~~\n"
  stdout: ''
  timestamp: 1660092076
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n\tlong d = 2;\n\tlong long lm = n;\n\twhile (lm % d == 0) {\n\t\td = d\
    \ << 1;\n\t}\n\twhile (d <= n) {\n\t\td = d + d;\n\t\tlm = lm / d;\n\t}\n\treturn\
    \ lm;\n}\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: Exception
  stderr: 'tmp7oy5mtw2: /tmp/tmp7oy5mtw2.cpp:18: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092077
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long long num = 1;\n    while (num < n)\n        num *= 2; // since\
    \ 2^k is bigger than n\n    return num;\n}\nint main() {\n    auto candidate =\
    \ largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmpjgixqdzl: /tmp/tmpjgixqdzl.cpp:12: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092076
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    // code here\n    // assert(n % 2 == 0); // check input validity\n\
    \    // long largest_divisor = 0;\n    // if (n % 2 == 0) return n;\n    // for\
    \ (long i = 1; i < n; i = i * 2) {\n    //     if (n % i == 0) largest_divisor\
    \ = i;\n    // }\n    // return largest_divisor;\n    // code here\n    auto largest_divisor\
    \ = std::numeric_limits<long>::min();\n    if (n % 2 == 0) return n;\n    for\
    \ (long i = 1; i < n; i = i * 2) {\n        if (n % i == 0) largest_divisor =\
    \ i;\n    }\n    return largest_divisor;\n}\nint main() {\n    auto candidate\
    \ = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmpksslumzr: /tmp/tmpksslumzr.cpp:25: int main(): Assertion `candidate((10))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660092076
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n   long l=1;\n   while (l<=n && n%l == 0) l++;\n   return l;\n}\nint main()\
    \ {\n    auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n\
    \    assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n   \
    \ assert(candidate((100)) == (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmpt7fx67c9: /tmp/tmpt7fx67c9.cpp:11: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092077
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long long d = 0;\n    while (n % 2 == 0) {\n        d += 2;\n    \
    \    n /= 2;\n    }\n    while (n % 3 == 0) {\n        d += 3;\n        n /= 3;\n\
    \    }\n    while (n % 5 == 0) {\n        d += 5;\n        n /= 5;\n    }\n  \
    \  while (n % 7 == 0) {\n        d += 7;\n        n /= 7;\n    }\n    while (n\
    \ % 11 == 0) {\n        d += 11;\n        n /= 11;\n    }\n    while (n % 13 ==\
    \ 0) {\n        d += 13;\n        n /= 13;\n    }\n    while (n % 17 == 0) {\n\
    \        d += 17;\n        n /= 17;\n    }\n    while (n % 19 == 0) {\n      \
    \  d += 19;\n        n /= 19;\n    }\n    while (n % 23 == 0) {\n        d +=\
    \ 23;\n        n /= 23;\n    }\n    while (n % 29 == 0) {\n        d += 29;\n\
    \        n /= 29;\n    }\n    while (n % 31 == 0) {\n        d += 31;\n      \
    \  n /= 31;\n    }\n    while (n % 37 == 0) {\n        d += 37;\n        n /=\
    \ 37;\n    }\n    while (n % 41 == 0) {\n        d += 41;\n        n /= 41;\n\
    \    }\n    while (n % 43 == 0) {\n        d += 43;\n        n /= 43;\n    }\n\
    \    while (n % 47 == 0) {\n        d += 47;\n        n /= 47;\n    }\n    while\
    \ (n % 53 == 0) {\n        d += 53;\n        n /= 53;\n    }\n    while (n % 59\
    \ == 0) {\n        d += 59;\n        n /= 59;\n    }\n    while (n % 61 == 0)\
    \ {\n        d += 61;\n        n /= 61;\n    }\n    while (n % 67 == 0) {\n  \
    \      d += 67;\n        n /= 67;\n    }\n    while (n % 71 == 0) {\n        d\
    \ += 71;\n        n /= 71;\n    }\n    while (n % 73 == 0) {\n        d += 73;\n\
    \        n /= 73;\n    }\n    while (n % 79 == 0) {\n        d += 79;\n      \
    \  n /= 79;\n    }\n    while (n % 83 == 0) {\n        d += 83;\n        n /=\
    \ 83;\n    }\n    while (n % 89 == 0) {\n        d += 89;\n        n /= 89;\n\
    \    }\n    while (n % 97 == 0) {\n        d += 97;\n        n /= 97;\n    }\n\
    \    while (n % 101 == 0) {\n        d += 101;\n        n /= 101;\n    }\n   \
    \ while (n % 107 == 0) {\n        d += 107;\n        n /= 107;\n    }\n    while\
    \ (n % 113 == 0) {\n\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdexd3ezt.cpp: In function \u2018long int largest_divisor(long int)\u2019\
    :\n/tmp/tmpdexd3ezt.cpp:117:12: error: a function-definition is not allowed here\
    \ before \u2018{\u2019 token\n  117 | int main() {\n      |            ^\n/tmp/tmpdexd3ezt.cpp:124:1:\
    \ error: expected \u2018}\u2019 at end of input\n  124 | }\n      | ^\n/tmp/tmpdexd3ezt.cpp:4:30:\
    \ note: to match this \u2018{\u2019\n    4 | long largest_divisor(long n) {\n\
    \      |                              ^\n/tmp/tmpdexd3ezt.cpp:124:1: warning:\
    \ no return statement in function returning non-void [-Wreturn-type]\n  124 |\
    \ }\n      | ^\n"
  stdout: ''
  timestamp: 1660092076
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long max_divisor = n;\n    long largest_divisor = 0;\n    long temp\
    \ = n;\n    // Loop the integer from 2 to sqrt(n)\n    for (long i = 3; i <= (long)sqrt(n);\
    \ i++) {\n        // If n is divisible by i, we have found the divisor\n     \
    \   if (temp % i == 0) {\n            // If this is the largest divisor, we update\
    \ max_divisor\n            if (temp > max_divisor) {\n                max_divisor\
    \ = temp;\n            }\n        }\n    }\n    return max_divisor;\n}\nint main()\
    \ {\n    auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n\
    \    assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n   \
    \ assert(candidate((100)) == (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmpyyjecoaj: /tmp/tmpyyjecoaj.cpp:22: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092077
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    // Use this variable to store the largest divisor found\n    long\
    \ maxDivisor = n;\n\n    // Use a while loop to find the next smallest divisor\
    \ larger than maxDivisor\n    while(maxDivisor % 2 == 0)\n    {\n        // If\
    \ the number is even, divide the number by two\n        maxDivisor /= 2;\n   \
    \ }\n\n    // Return the largest divisor found so far\n    return maxDivisor;\n\
    }\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: Exception
  stderr: 'tmps5mdydry: /tmp/tmps5mdydry.cpp:20: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092076
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long ans = n;\n    for (long i = 2; i <= n; i++) {\n        if (n\
    \ % i == 0) {\n            ans = i;\n        }\n    }\n    return ans;\n}\nint\
    \ main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3)) ==\
    \ (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n\
    \    assert(candidate((100)) == (50));\n    assert(candidate((49)) == (7));\n\
    }\n"
  status: Exception
  stderr: 'tmpnu64pm6g: /tmp/tmpnu64pm6g.cpp:15: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092077
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long divisor = 1;\n    long i= 2;\n    // While the number is less\
    \ than n\n    while (n%i==0) {\n        // Divide the number by all the divisors\n\
    \        divisor *= i;\n        // Increment the divisor\n        i++;\n    }\n\
    \    // Return the largest divisor\n    return divisor;\n}\nint main() {\n   \
    \ auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmp589kec6h: /tmp/tmp589kec6h.cpp:21: int main(): Assertion `candidate((10))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660092077
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long long div = 1;\n    long long ans = 0;\n    // n is less than\
    \ 1 \n    if (n < 1) \n        return ans;\n    // n is even\n    if (n == 2)\
    \ \n        return 2;\n    while (div <= n) {\n        ans = div;\n        div\
    \ *= 2;\n    }\n    return ans;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: Exception
  stderr: 'tmp2qgaenzl: /tmp/tmp2qgaenzl.cpp:21: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092076
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long max_div = n;\n    long last_div = n;\n    int flag = 1;\n   \
    \ int flag2 = 1;\n    while (flag) {\n        if (n % last_div == 0) {\n     \
    \       last_div += 1;\n        } else {\n            flag = 0;\n        }\n \
    \       if (last_div > max_div) {\n            max_div = last_div;\n        }\n\
    \    }\n    while (flag2) {\n        if (n % max_div == 0) {\n            max_div\
    \ -= 1;\n        } else {\n            flag2 = 0;\n        }\n    }\n    return\
    \ max_div;\n}\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: Exception
  stderr: 'tmprw4kxz48: /tmp/tmprw4kxz48.cpp:30: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092077
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    assert(n % 2 == 0);\n    long largest_divisor = 1;\n    while (n >\
    \ 1) {\n        if (n % 2 == 0) break;\n        largest_divisor *= 2;\n      \
    \  n /= 2;\n    }\n    return largest_divisor;\n}\nint main() {\n    auto candidate\
    \ = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmp5e0ae80m: /tmp/tmp5e0ae80m.cpp:5: long int largest_divisor(long int):
    Assertion `n % 2 == 0'' failed.

    '
  stdout: ''
  timestamp: 1660092077
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long max_divisor = 0;\n    long div_found;\n    for(long div=3; div\
    \ <= n; div++) {\n        div_found = n / div;\n        if(div_found == 0 || div_found\
    \ % 2 == 0) {\n            continue;\n        }\n        else if(div_found > max_divisor)\
    \ {\n            max_divisor = div_found;\n        }\n    }\n    return max_divisor;\n\
    }\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: Exception
  stderr: 'tmphu03y4qu: /tmp/tmphu03y4qu.cpp:22: int main(): Assertion `candidate((10))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660092076
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    // Write your code here\n    long divisor_max;\n    divisor_max =\
    \ n;\n    long min_divisor = 2;\n    while (divisor_max%2 == 0)\n    {\n     \
    \   divisor_max/=2;\n        min_divisor+=2;\n    }\n    if (divisor_max != 2)\n\
    \    {\n        divisor_max+=1;\n    }\n    return divisor_max;\n}\nint main()\
    \ {\n    auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n\
    \    assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n   \
    \ assert(candidate((100)) == (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmp556f6cx0: /tmp/tmp556f6cx0.cpp:22: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092076
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n  assert(n > 0);\n  long largest_divisor = 0;\n  long x = 1;\n  while\
    \ (x != 0) {\n    while ((n % x) == 0) {\n      n /= x;\n      largest_divisor\
    \ = x;\n    }\n    x <<= 1;\n  }\n  return largest_divisor;\n}\nint main() {\n\
    \    auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n \
    \   assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100))\
    \ == (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660092080
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n  long highest_possible_divisor = n%2 == 0 ? n : n+1;\n  long current_divisor\
    \ = 1;\n  long divisor = 1;\n  // Keep on finding the next divisor until we've\
    \ found n evenly divides the number n.\n  while(current_divisor < n) {\n    highest_possible_divisor\
    \ = current_divisor;\n    divisor = current_divisor;\n    current_divisor = (n/divisor)*2;\n\
    \  }\n  // If the number was evenly divided by current_divisor, then it must be\
    \ evenly divisible by n+1\n  assert(current_divisor == n);\n  assert(highest_possible_divisor\
    \ < n);\n  return highest_possible_divisor;\n}\nint main() {\n    auto candidate\
    \ = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmp_2tdauxf: /tmp/tmp_2tdauxf.cpp:15: long int largest_divisor(long int):
    Assertion `current_divisor == n'' failed.

    '
  stdout: ''
  timestamp: 1660092076
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long long int maxDiv = n;\n    while (maxDiv > 1) {\n        if (maxDiv\
    \ % 2 == 0) {\n            maxDiv = maxDiv / 2;\n        } else {\n          \
    \  maxDiv = maxDiv / 2;\n        }\n    }\n    return maxDiv;\n}\nint main() {\n\
    \    auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n \
    \   assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100))\
    \ == (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmp0bcipuv6: /tmp/tmp0bcipuv6.cpp:19: int main(): Assertion `candidate((10))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660092077
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long result = 1;\n    for (long i = 1; i < n; i++) {\n        if (n\
    \ % i == 0) {\n            result *= i;\n            result /= n;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: Exception
  stderr: 'tmpay4ypid4: /tmp/tmpay4ypid4.cpp:16: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092076
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    vector<long long int> v;\n    // Sort the vector\n    for (int i=1;\
    \ i<=n; i++) {\n        int diff = n/i;\n        // If diff is even, we need to\
    \ include it in the vector to sort it\n        if (diff % 2 == 0) {\n        \
    \    v.push_back(i);\n        }\n    }\n    // Get the largest element from the\
    \ vector v\n    long long int max_element = *max_element(v.begin(), v.end());\n\
    \    // If the max element is smaller than n, subtract 1 from n to find the next\
    \ largest number\n    if (max_element < n)\n        n--;\n    return n;\n}\nint\
    \ main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3)) ==\
    \ (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n\
    \    assert(candidate((100)) == (50));\n    assert(candidate((49)) == (7));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmps4__ohgr.cpp: In function \u2018long int largest_divisor(long int)\u2019\
    :\n/tmp/tmps4__ohgr.cpp:5:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n    5 |     vector<long long int> v;\n      |     ^~~~~~\n/tmp/tmps4__ohgr.cpp:5:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmps4__ohgr.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmps4__ohgr.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmps4__ohgr.cpp:5:12:\
    \ error: expected primary-expression before \u2018long\u2019\n    5 |     vector<long\
    \ long int> v;\n      |            ^~~~\n/tmp/tmps4__ohgr.cpp:11:13: error: \u2018\
    v\u2019 was not declared in this scope\n   11 |             v.push_back(i);\n\
    \      |             ^\n/tmp/tmps4__ohgr.cpp:15:46: error: \u2018v\u2019 was not\
    \ declared in this scope\n   15 |     long long int max_element = *max_element(v.begin(),\
    \ v.end());\n      |                                              ^\n/tmp/tmps4__ohgr.cpp:15:64:\
    \ error: \u2018max_element\u2019 cannot be used as a function\n   15 |     long\
    \ long int max_element = *max_element(v.begin(), v.end());\n      |          \
    \                                                      ^\n"
  stdout: ''
  timestamp: 1660092076
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    // write your code here\n    std::queue<long> ds;\n    while (n%2\
    \ == 0) {\n        ds.push(2);\n        n /= 2;\n    }\n    while (n%2 == 1) {\n\
    \        ds.push(2);\n        n /= 2;\n    }\n    while (n%2 == 0) {\n       \
    \ ds.push(2);\n        n /= 2;\n    }\n    long ans = ds[0];\n    while (ds.size())\
    \ {\n        ans = std::max(ans, ds[0]);\n        ds.pop();\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1nq4r716.cpp: In function \u2018long int largest_divisor(long int)\u2019\
    :\n/tmp/tmp1nq4r716.cpp:19:18: error: no match for \u2018operator[]\u2019 (operand\
    \ types are \u2018std::queue<long int>\u2019 and \u2018int\u2019)\n   19 |   \
    \  long ans = ds[0];\n      |                  ^\n/tmp/tmp1nq4r716.cpp:21:31:\
    \ error: no match for \u2018operator[]\u2019 (operand types are \u2018std::queue<long\
    \ int>\u2019 and \u2018int\u2019)\n   21 |         ans = std::max(ans, ds[0]);\n\
    \      |                               ^\n"
  stdout: ''
  timestamp: 1660092076
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    assert(n > 0);\n    long maxDivisor = 2;\n    while (maxDivisor <\
    \ n) {\n        if (n % maxDivisor == 0) {\n            return maxDivisor;\n \
    \       }\n        maxDivisor++;\n    }\n    return n;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmp8s2ew5at: /tmp/tmp8s2ew5at.cpp:17: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092076
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n  long long i=0,j=0;\n  // for (i = 2; i < n; i = i + 2) // for loop initialization\n\
    \  // {\n  //   for (j = 2; j < i; j+=2) // j initialization\n  //   {\n  // \
    \    if (i % j == 0)\n  //     {\n  //       break;\n  //     }\n  //   }\n  //\
    \   if (j == i)\n  //   {\n  //     return i;\n  //   }\n  // }\n  while(true)\n\
    \  {\n    // i = i + 2\n    if(i+2>n)\n    {\n      break;\n    }\n    j = i+2;\n\
    \    while(j<n)\n    {\n      if(j+2==n)\n      {\n        return j;\n      }\n\
    \      j+=2;\n    }\n    i = j;\n  }\n  return -1;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmpercy_u1u: /tmp/tmpercy_u1u.cpp:42: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092076
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    // Write your code here\n    long long int ans = 1;\n    while(n >\
    \ 1){\n        long long int d = n;\n        while(d % 2 == 0){\n            d\
    \ = d / 2;\n        }\n        if(d > ans){\n            ans = d;\n        }\n\
    \        n /= 2;\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmp3vhfla4_: /tmp/tmp3vhfla4_.cpp:21: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092077
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long long int largest = n;\n    for (long long int i = 2; i < n; ++i)\
    \ {\n        while (n % i == 0) {\n            largest = i;\n            n /=\
    \ i;\n        }\n    }\n    return largest;\n}\nint main() {\n    auto candidate\
    \ = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmpgjai7cib: /tmp/tmpgjai7cib.cpp:16: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092076
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long l=n;\n    while(n>1){\n        long m=n/l;\n        long t=(n-l)/m;\n\
    \        if(n>l){\n            l=m;\n            n=t;\n        }\n        else{\n\
    \            n = t;\n        }\n    }\n    return l;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmppww8mnyw: /tmp/tmppww8mnyw.cpp:21: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092076
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    // Write your code here\n    long l1=0;\n    long l2=0;\n    for(int\
    \ i=2; i<=n; i++){\n        if(n%i == 0){\n            l1=i;\n        }\n    }\n\
    \    for(int j=2; j<=n; j++){\n        if(n%j == 0){\n            l2=j;\n    \
    \    }\n    }\n    long max_l1=l1;\n    long max_l2=l2;\n    if(l1>l2){\n    \
    \    max_l1=l2;\n    }\n    if(l2>l1){\n        max_l2=l1;\n    }\n    return\
    \ max_l1;\n}\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: Exception
  stderr: 'tmpam19ien2: /tmp/tmpam19ien2.cpp:30: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092078
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest_divisor = 0;\n    long prev_divisor = 1;\n    for (int\
    \ i = 1; i <= n; i++)\n    {\n        if (n % i == 0)\n        {\n           \
    \ if (i == largest_divisor)\n            {\n                largest_divisor =\
    \ i;\n            }\n            else if (prev_divisor > largest_divisor)\n  \
    \          {\n                largest_divisor = i;\n            }\n        }\n\
    \        prev_divisor = i;\n    }\n    return largest_divisor;\n}\nint main()\
    \ {\n    auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n\
    \    assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n   \
    \ assert(candidate((100)) == (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmp6qoovjl5: /tmp/tmp6qoovjl5.cpp:26: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092079
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long highestDivisor = 1;\n    long i;\n    for (i = 1; i <= n; i++)\
    \ {\n        if (n % i == 0) {\n            highestDivisor = i;\n        }\n \
    \   }\n    return highestDivisor;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: Exception
  stderr: 'tmpc4654nhg: /tmp/tmpc4654nhg.cpp:16: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092079
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long max_divisor = n;\n    long i = 1;\n    while (i <= max_divisor\
    \ && n % i == 0) {\n        ++i;\n    }\n    return max_divisor;\n}\nint main()\
    \ {\n    auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n\
    \    assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n   \
    \ assert(candidate((100)) == (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmp5nw886p5: /tmp/tmp5nw886p5.cpp:14: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092079
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long maxdiv = 1;\n    long maxdiv2 = 0;\n    for (long d = 2; d <=\
    \ n/2; d++) {\n        if (n%d==0) {\n            long md = d + (n%d);\n     \
    \       if (maxdiv2 > md) maxdiv2 = md;\n            maxdiv = maxdiv2;\n     \
    \   } else {\n            maxdiv2 = maxdiv;\n            maxdiv = d;\n       \
    \ }\n    }\n    return maxdiv;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: Exception
  stderr: 'tmpanysepls: /tmp/tmpanysepls.cpp:22: int main(): Assertion `candidate((7))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092079
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n\tlong long int max_div_even=1;\n\tlong long int max_div=1;\n\tlong long\
    \ int max_div_num=1;\n\tlong long int max_div_num=1;\n\tfor(long long int i=2;\
    \ i<=n; i++) {\n\t\tif(n%i == 0) {\n\t\t\tmax_div=i;\n\t\t\tmax_div_num=n/i;\n\
    \t\t\tassert(max_div_num!=0);\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor(long long int i=n;\
    \ i>=2; i--) {\n\t\tif(n%i == 0) {\n\t\t\tmax_div_num=max_div/i;\n\t\t\tif(max_div_num>max_div_even)\
    \ {\n\t\t\t\tmax_div_even=max_div_num;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}\n\t\
    return max_div_even;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4zo53b_4.cpp: In function \u2018long int largest_divisor(long int)\u2019\
    :\n/tmp/tmp4zo53b_4.cpp:8:16: error: redeclaration of \u2018long long int max_div_num\u2019\
    \n    8 |  long long int max_div_num=1;\n      |                ^~~~~~~~~~~\n\
    /tmp/tmp4zo53b_4.cpp:7:16: note: \u2018long long int max_div_num\u2019 previously\
    \ declared here\n    7 |  long long int max_div_num=1;\n      |              \
    \  ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660092078
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n  // Initialize a vector of length n to store the values\n  std::vector<\
    \ int > v(n);\n\n  // Initialize a bool array to keep track of the number factors\
    \ found\n  bool * found = new bool[n];\n\n  // Initialize a bool array to keep\
    \ track of the number factors found\n  bool * found2 = new bool[n];\n  // Initialize\
    \ a bool array to keep track of the number factors found\n  bool * found3 = new\
    \ bool[n];\n\n  // Initialize a bool array to keep track of the number factors\
    \ found\n  bool * found4 = new bool[n];\n  // Initialize a bool array to keep\
    \ track of the number factors found\n  bool * found5 = new bool[n];\n\n  // Initialize\
    \ a bool array to keep track of the number factors found\n  bool * found6 = new\
    \ bool[n];\n  // Initialize a bool array to keep track of the number factors found\n\
    \  bool * found7 = new bool[n];\n\n  // Initialize a bool array to keep track\
    \ of the number factors found\n  bool * found8 = new bool[n];\n  // Initialize\
    \ a bool array to keep track of the number factors found\n  bool * found9 = new\
    \ bool[n];\n\n  // Initialize a bool array to keep track of the number factors\
    \ found\n  bool * found10 = new bool[n];\n  // Initialize a bool array to keep\
    \ track of the number factors found\n  bool * found11 = new bool[n];\n  // Initialize\
    \ a bool array to keep track of the number factors found\n  bool * found12 = new\
    \ bool[n];\n  // Initialize a bool array to keep track of the number factors found\n\
    \  bool * found13 = new bool[n];\n  // Initialize a bool array to keep track of\
    \ the number factors found\n  bool * found14 = new bool[n];\n  // Initialize a\
    \ bool array to keep track of the number factors found\n  bool * found15 = new\
    \ bool[n];\n\n  // Initialize a bool array to keep track of the number factors\
    \ found\n  bool * found16 = new bool[n];\n  // Initialize a bool array to keep\
    \ track of the number factors found\n  bool * found17 = new bool[n];\n  // Initialize\
    \ a bool array to keep track of the number factors found\n  bool * found18 = new\
    \ bool[n];\n  // Initialize a bool array to keep track of the number factors found\n\
    \  bool * found19 = new bool[n];\n\n  // Initialize a bool array to keep track\
    \ of the number factors found\n  bool * found20 = new bool[n];\n  // Initialize\
    \ a bool array to keep track of the number factors found\n  bool * found21 = new\
    \ bool[n];\n  // Initialize a bool array to keep track of the number factor\n\
    }\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: Exception
  stderr: 'tmpu9emlm5b: /tmp/tmpu9emlm5b.cpp:61: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092079
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n  assert(n != 1);\n  int n = n;\n  long max_divisor = 1;\n  int max_divisor_ind\
    \ = 1;\n  int min_divisor = 1;\n  int min_divisor_ind = 1;\n  for (int i = 2;\
    \ i < n; i++) {\n    if (n % i == 0) {\n      if (n % i == min_divisor) {\n  \
    \      min_divisor_ind = i;\n      }\n      if (n % i == max_divisor) {\n    \
    \    max_divisor_ind = i;\n      }\n    }\n  }\n  assert(max_divisor == 1);\n\
    \  assert(min_divisor == 1);\n  assert(max_divisor_ind == n);\n  assert(min_divisor_ind\
    \ == 1);\n  return max_divisor_ind;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp24leajv3.cpp: In function \u2018long int largest_divisor(long int)\u2019\
    :\n/tmp/tmp24leajv3.cpp:6:7: error: declaration of \u2018int n\u2019 shadows a\
    \ parameter\n    6 |   int n = n;\n      |       ^\n"
  stdout: ''
  timestamp: 1660092078
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n\tlong m = n;\n\twhile (m % 2 == 0) {\n\t\tm /= 2;\n\t}\n\tlong max_div\
    \ = 1;\n\tlong max_div2 = 1;\n\twhile (m != 1) {\n\t\tif (m % 2 != 0) {\n\t\t\t\
    max_div *= 2;\n\t\t} else {\n\t\t\tif (m > max_div2) {\n\t\t\t\tmax_div2 = max_div;\n\
    \t\t\t}\n\t\t\tmax_div = m;\n\t\t}\n\t\tm /= 2;\n\t}\n\treturn max_div2;\n}\n\
    int main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: Exception
  stderr: 'tmpzcy5k0_z: /tmp/tmpzcy5k0_z.cpp:28: int main(): Assertion `candidate((10))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660092079
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long int largest_divisor = 1L;\n    // Since we have already divided\
    \ n by 1 before, we need to check if it's even\n    // and divide by 2 if it's\
    \ even too\n    if(n%2==0) {\n        largest_divisor = 2*largest_divisor;\n \
    \   }\n    for(long int i = 3; i <= n; i += 2)\n    {\n        if(n%i==0)\n  \
    \      {\n            if(n/i > largest_divisor)\n            {\n             \
    \   largest_divisor = n/i;\n            }\n        }\n    }\n    return largest_divisor;\n\
    }\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: Exception
  stderr: 'tmp0a4vx7nu: /tmp/tmp0a4vx7nu.cpp:27: int main(): Assertion `candidate((10))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660092079
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n\tlong max_div = n;\n\tlong div = 1;\n\tfor (long i = 1; i < n; i++) {\n\
    \t\tif (n % i == 0) {\n\t\t\tif (max_div / i == i) {\n\t\t\t\tdiv = i;\n\t\t\t\
    \tmax_div = n / i;\n\t\t\t} else {\n\t\t\t\tmax_div = max_div / i;\n\t\t\t}\n\t\
    \t}\n\t}\n\treturn div;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: Exception
  stderr: 'tmpc6yx4n_e: /tmp/tmpc6yx4n_e.cpp:23: int main(): Assertion `candidate((10))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660092079
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n\t// Initialize our largest divisor to the smallest positive value\n\t\
    long largest = INT_MIN;\n\t// Loop over all possible divisors of n\n\tfor (long\
    \ divisor = 1; divisor < n; divisor++)\n\t\t// Check if n is divisible by the\
    \ divisor\n\t\tif (n % divisor == 0) {\n\t\t\t// If so, update our largest divisor\
    \ to the divisor\n\t\t\tif (largest < divisor)\n\t\t\t\tlargest = divisor;\n\t\
    \t}\n\t// Return the largest divisor\n\treturn largest;\n}\nint main() {\n   \
    \ auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092078
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long l=0,p=1;\n    while(n) {\n        if (n%p) l=p;\n        p++;\n\
    \        n/=p;\n    }\n    return l;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: Exception
  stderr: 'tmphrc_unae: /tmp/tmphrc_unae.cpp:15: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092079
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    std::vector<long> v(n);\n    long largest_divisor = n;\n\n    for\
    \ (long i = 0; i < v.size(); ++i)\n    {\n        if (n % i == 0)\n        {\n\
    \            v.erase(std::remove(v.begin(), v.end(), i),v.end());\n        }\n\
    \    }\n\n    for (long i = v.size(); i >= 0; --i)\n    {\n        if (n % v[i]\
    \ == 0)\n        {\n            largest_divisor = v[i];\n            break;\n\
    \        }\n    }\n    return largest_divisor;\n}\nint main() {\n    auto candidate\
    \ = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660092080
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long max_div = n;\n    long max_i = 0;\n    long max_j = n;\n    long\
    \ i = 1; i < max_j; i++) {\n        if (max_j % i == 0) {\n            max_j =\
    \ max_j / i;\n            if (max_j % i == 0) {\n                max_div = max_j;\n\
    \            }\n        }\n    }\n    return max_div;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6gfk_xty.cpp: In function \u2018long int largest_divisor(long int)\u2019\
    :\n/tmp/tmp6gfk_xty.cpp:8:31: error: expected \u2018;\u2019 before \u2018)\u2019\
    \ token\n    8 |     long i = 1; i < max_j; i++) {\n      |                  \
    \             ^\n      |                               ;\n"
  stdout: ''
  timestamp: 1660092078
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    // Write your code here\n    \n    long m = n%10;\n    long b = n/10;\n\
    \    while (b>0){\n        long r = n/b;\n        if(r%2 == 0){\n            m\
    \ = b*10 + r;\n        }\n        b = b/10;\n    }\n    return m;\n}\nint main()\
    \ {\n    auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n\
    \    assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n   \
    \ assert(candidate((100)) == (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmp10jsx12x: /tmp/tmp10jsx12x.cpp:20: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092079
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long res = 0;\n    for(long i=2; i <= n; ++i)\n        if(n%i == 0)\n\
    \            if(n/i%i == 0)\n                return i;\n    return n;\n}\nint\
    \ main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3)) ==\
    \ (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n\
    \    assert(candidate((100)) == (50));\n    assert(candidate((49)) == (7));\n\
    }\n"
  status: Exception
  stderr: 'tmphdwa9fsb: /tmp/tmphdwa9fsb.cpp:14: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092079
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n  assert(n % 2 == 0);\n  long ln = sqrt(n);\n  long div = n / ln;\n  long\
    \ mod = n % ln;\n  long m = ln / sqrt(n);\n  if(div < m)\n    return div;\n  else\n\
    \    return m;\n}\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: Exception
  stderr: 'tmpwhuhsuuj: /tmp/tmpwhuhsuuj.cpp:5: long int largest_divisor(long int):
    Assertion `n % 2 == 0'' failed.

    '
  stdout: ''
  timestamp: 1660092080
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n  assert(n % 2 == 0);\n  long largest = n%2 == 0 ? (n/2) : (n/2+1);\n\
    \  for(long i = largest; i > 0; i--) {\n    if(n%i == 0) {\n      return i;\n\
    \    }\n  }\n  return largest;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: Exception
  stderr: 'tmpihjmg0i2: /tmp/tmpihjmg0i2.cpp:5: long int largest_divisor(long int):
    Assertion `n % 2 == 0'' failed.

    '
  stdout: ''
  timestamp: 1660092080
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    // Initialize an array of size n+1\n    std::vector<long> div(n +\
    \ 1);\n    // Initialize all elements of the array to 1\n    long temp = 1;\n\
    \    for (int i = 0; i < n; i++) {\n        div[i] = temp;\n        temp *= i;\n\
    \    }\n    // Find the index of the element which divides n evenly\n    for (int\
    \ i = 1; i < n + 1; i++) {\n        if (div[i] % 2 == 0) {\n            return\
    \ i;\n        }\n    }\n    return n;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: Exception
  stderr: 'tmphoj75ler: /tmp/tmphoj75ler.cpp:25: int main(): Assertion `candidate((10))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660092079
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n  assert(n % 2 == 0);\n  long max_divisor = n; //The largest divisor is\
    \ n\n  // Iterate over all the divisors\n  for(long divisor = 3; divisor <= n;\
    \ divisor += 2) {\n    if(n % divisor == 0) {\n      if(divisor > max_divisor)\
    \ {\n        max_divisor = divisor;\n      }\n    }\n  }\n  return max_divisor;\n\
    }\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: Exception
  stderr: 'tmpt9cm6h1s: /tmp/tmpt9cm6h1s.cpp:5: long int largest_divisor(long int):
    Assertion `n % 2 == 0'' failed.

    '
  stdout: ''
  timestamp: 1660092079
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n\tassert(n % 2 == 0);\n\tlong long ans = n;\n\tlong long max_divisor =\
    \ 1;\n\twhile(max_divisor < ans) {\n\t\tmax_divisor *= 2;\n\t\tans /= max_divisor;\n\
    \t}\n\treturn ans;\n}\nint main() {\n    auto candidate = largest_divisor;\n \
    \   assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: Exception
  stderr: 'tmphrolabs3: /tmp/tmphrolabs3.cpp:5: long int largest_divisor(long int):
    Assertion `n % 2 == 0'' failed.

    '
  stdout: ''
  timestamp: 1660092079
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long maxDivisor = 0;\n    long currentDivisor = 2;\n    while (currentDivisor\
    \ <= n)\n    {\n        if (n % currentDivisor == 0)\n        {\n            currentDivisor++;\n\
    \            maxDivisor = currentDivisor;\n        }\n        else\n        {\n\
    \            if (currentDivisor > maxDivisor)\n                maxDivisor = currentDivisor;\n\
    \        }\n    }\n    return maxDivisor;\n}\nint main() {\n    auto candidate\
    \ = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660092084
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long div = n;\n    for (long i = 1; i < n; i++) if (n % i == 0) div\
    \ /= i;\n    return div;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: Exception
  stderr: 'tmpf7n7k1i9: /tmp/tmpf7n7k1i9.cpp:11: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092079
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    assert(n > 0);\n    long long max_div = 1, max_div_n = 0;\n    for(long\
    \ long i = 2; i <= n; i++) {\n        if(n % i == 0) {\n            long long\
    \ div_n = max_div * i;\n            max_div = div_n;\n            max_div_n =\
    \ div_n;\n        }\n    }\n    if(max_div_n > n) max_div_n++;\n    return max_div_n;\n\
    }\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: Exception
  stderr: 'tmpcumjb_h4: /tmp/tmpcumjb_h4.cpp:19: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092080
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long long ans = n;\n    for(long long i = 1; i < n; i++) {\n     \
    \   if(n % i == 0)\n            ans = max(ans, i);\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphq7gpq3e.cpp: In function \u2018long int largest_divisor(long int)\u2019\
    :\n/tmp/tmphq7gpq3e.cpp:8:19: error: \u2018max\u2019 was not declared in this\
    \ scope; did you mean \u2018std::max\u2019?\n    8 |             ans = max(ans,\
    \ i);\n      |                   ^~~\n      |                   std::max\nIn file\
    \ included from /usr/include/c++/9/algorithm:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmphq7gpq3e.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:3468:5:\
    \ note: \u2018std::max\u2019 declared here\n 3468 |     max(initializer_list<_Tp>\
    \ __l, _Compare __comp)\n      |     ^~~\n"
  stdout: ''
  timestamp: 1660092079
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest = n;\n    for(long i = 2; i <= largest; i <<= 1) // Loop\
    \ will terminate when largest\n    {\n        if((n & i) == 0)  // Check if i\
    \ is divisible by n\n        {\n            largest = i;\n            break;\n\
    \        }\n    }\n    return largest;\n}\nint main() {\n    auto candidate =\
    \ largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmprah9ob82: /tmp/tmprah9ob82.cpp:18: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092079
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    // return -1 if n is a perfect square\n    if (n == 2 || n == 3)\n\
    \        return -1;\n    long divisor = 1;\n    while (n % divisor == 0) {\n \
    \       divisor *= 2;\n    }\n    if (divisor > n)\n        return -1;\n    else\n\
    \        return divisor;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: Exception
  stderr: 'tmpvu5g5cpp: /tmp/tmpvu5g5cpp.cpp:19: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092079
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    // Initialize and run through all the numbers from 1 to n\n    for(long\
    \ i = 1; ; ++i){\n        // If i is divisible by i, then i is divisible by i+1\n\
    \        if(i%i == 0) return i;\n        // If i is smaller than n, then i is\
    \ divisible by i+1\n        if(i<n) return i+1;\n    }\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmp4j_tfi6q: /tmp/tmp4j_tfi6q.cpp:17: int main(): Assertion `candidate((10))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660092079
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long long sum = 1;\n    for (int i = 1; i <= n; i++)\n        sum\
    \ += (i*i)/(n-i);\n    return sum;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660092079
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    std::vector<int> divisons(n);\n    for (long i = 1; i < n; i++)\n\
    \        if (n % i == 0)\n            divisons[i] = i;\n    if (divisons.size()\
    \ <= 0)\n        return n;\n    long largest_divisor_index = 0;\n    long largest\
    \ = divisons[0];\n    for (long i = 1; i < n; i++)\n        if (divisons[i] >=\
    \ largest)\n            largest_divisor_index = i;\n    long largest_divisor_number\
    \ = divisons[largest_divisor_index];\n    for (long i = 1; i < n; i++)\n     \
    \   if (divisons[i] >= largest_divisor_number)\n            largest_divisor_number\
    \ = divisons[i];\n    return largest;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: Exception
  stderr: 'tmpahipqtq5: /tmp/tmpahipqtq5.cpp:24: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092079
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long max = 1;\n    for (long i = 1; i < n; i++)\n        if (n % i\
    \ == 0)\n            max = i;\n    return max;\n}\nint main() {\n    auto candidate\
    \ = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092079
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long max_divisor = 1, max_remainder;\n    // Looping up to sqrt(n)\n\
    \    for(long div = 2; div < n; div++) {\n        // If remainder is 0 then we\
    \ found divisor\n        if(n%div == 0) {\n            // If new max is greater\
    \ than old max, update it\n            if(max_divisor > div) {\n             \
    \   max_divisor = div;\n            }\n        } else {\n            // If remainder\
    \ is not 0, then divisor > new max, so update it\n            if(max_remainder\
    \ > div) {\n                max_divisor = div;\n                max_remainder\
    \ = n%div;\n            }\n        }\n    }\n    return max_divisor;\n}\nint main()\
    \ {\n    auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n\
    \    assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n   \
    \ assert(candidate((100)) == (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmpfmeapdlo: /tmp/tmpfmeapdlo.cpp:26: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092079
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long a = 1;\n    long b = n;\n    while (b > 0) {\n        long c\
    \ = a % b;\n        a = b;\n        b = c;\n    }\n    return a;\n}\nint main()\
    \ {\n    auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n\
    \    assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n   \
    \ assert(candidate((100)) == (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmprcp_fuut: /tmp/tmprcp_fuut.cpp:18: int main(): Assertion `candidate((10))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660092079
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n\tlong divisor = 1;\n\tfor (long i = 2; i <= n; i++) {\n\t\tif (n % i\
    \ == 0) {\n\t\t\tdivisor = i;\n\t\t}\n\t}\n\treturn divisor;\n}\nint main() {\n\
    \    auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n \
    \   assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100))\
    \ == (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmpg7qdzfcq: /tmp/tmpg7qdzfcq.cpp:15: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092080
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long long count = 1;\n    long long temp = n;\n    // We only need\
    \ to check up to the square-root of the number to find\n    // the greatest divisor.\n\
    \    while(temp > 1) {\n        if(temp % 2 == 0) {\n            temp /= 2;\n\
    \            count++;\n        } else {\n            count--;\n            temp\
    \ /= 2;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmp7iowirvb: /tmp/tmp7iowirvb.cpp:22: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092079
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long long divisor_count = 1; // Initialize divisor_count to 1\n  \
    \  long long divisor = n;\n    long long temp = 1;\n\n    while (divisor > 1)\
    \ {\n        divisor_count++;\n        divisor = divisor / 2;\n    }\n    divisor_count--;\n\
    \    temp = divisor_count * 2;\n    temp = temp * 2;\n    temp = temp / n;\n \
    \   return temp;\n}\nint main() {\n    auto candidate = largest_divisor;\n   \
    \ assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: Exception
  stderr: 'tmp7556tik2: /tmp/tmp7556tik2.cpp:23: int main(): Assertion `candidate((10))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660092080
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long res = n;\n    for(int i = 1; i < n; i++) {\n        if(n % i\
    \ == 0)\n            res = i;\n    }\n    return res;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092079
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    // Complete the function\n    vector<long long> divisors;\n    for\
    \ (long i = 2; i <= n; ++i) {\n        if (n % i == 0) {\n            divisors.push_back(i);\n\
    \        }\n    }\n    if (divisors.size() == 1) {\n        return n;\n    }\n\
    \    else {\n        long max_div = divisors[0];\n        for (long i = 1; i <\
    \ divisors.size(); ++i) {\n            if (max_div < divisors[i]) {\n        \
    \        max_div = divisors[i];\n            }\n        }\n        return max_div;\n\
    \    }\n}\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptfz5frwc.cpp: In function \u2018long int largest_divisor(long int)\u2019\
    :\n/tmp/tmptfz5frwc.cpp:6:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n    6 |     vector<long long> divisors;\n      |     ^~~~~~\n/tmp/tmptfz5frwc.cpp:6:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmptfz5frwc.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmptfz5frwc.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmptfz5frwc.cpp:6:12:\
    \ error: expected primary-expression before \u2018long\u2019\n    6 |     vector<long\
    \ long> divisors;\n      |            ^~~~\n/tmp/tmptfz5frwc.cpp:9:13: error:\
    \ \u2018divisors\u2019 was not declared in this scope\n    9 |             divisors.push_back(i);\n\
    \      |             ^~~~~~~~\n/tmp/tmptfz5frwc.cpp:12:9: error: \u2018divisors\u2019\
    \ was not declared in this scope\n   12 |     if (divisors.size() == 1) {\n  \
    \    |         ^~~~~~~~\n/tmp/tmptfz5frwc.cpp:24:1: warning: control reaches end\
    \ of non-void function [-Wreturn-type]\n   24 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660092079
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    if(n % 2 == 0) return 2;\n    long m = n/2;\n    long largest_divisor\
    \ = m*m;\n    while(m <= n){\n        m = 2*m;\n        largest_divisor = m +\
    \ largest_divisor;\n    }\n    return largest_divisor;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmp4z6ti4n_: /tmp/tmp4z6ti4n_.cpp:16: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092080
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long long divisor = 1;\n    long long max_divisor = n;\n    long long\
    \ i = 2;\n    while (i < max_divisor) {\n        if (n % i == 0) {\n         \
    \   divisor += i;\n        }\n        i++;\n    }\n    return divisor;\n}\nint\
    \ main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3)) ==\
    \ (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n\
    \    assert(candidate((100)) == (50));\n    assert(candidate((49)) == (7));\n\
    }\n"
  status: Exception
  stderr: 'tmprowzjl4v: /tmp/tmprowzjl4v.cpp:20: int main(): Assertion `candidate((10))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660092080
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest = 1;\n    long temp = n;\n\n    for(int i = 1; i <= temp;\
    \ i++) {\n        if(temp % i == 0) {\n            largest = i;\n            break;\n\
    \        }\n    }\n\n    return largest;\n}\nint main() {\n    auto candidate\
    \ = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmpy84cwg74: /tmp/tmpy84cwg74.cpp:21: int main(): Assertion `candidate((10))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660092080
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long long i = 3;\n    long long max_divisor = 0;\n    while(i * i\
    \ <= n) {\n        if( n % i == 0) {\n            long long temp = (i*i) / n;\n\
    \            if(temp > max_divisor)\n                max_divisor = temp;\n   \
    \         i = i + 1;\n        }\n    }\n    return max_divisor;\n}\nint main()\
    \ {\n    auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n\
    \    assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n   \
    \ assert(candidate((100)) == (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmprhcurp5a: /tmp/tmprhcurp5a.cpp:19: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092080
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    assert(n % 2 == 0 && \"n should be an odd number\");\n\n    long max_div\
    \ = (n - 1) / 2;\n    while (n % max_div == 0) {\n        max_div = (max_div -\
    \ 1) / 2;\n    }\n\n    return max_div;\n}\nint main() {\n    auto candidate =\
    \ largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmpli88k08f: /tmp/tmpli88k08f.cpp:5: long int largest_divisor(long int):
    Assertion `n % 2 == 0 && "n should be an odd number"'' failed.

    '
  stdout: ''
  timestamp: 1660092080
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    assert(n >= 1);\n    // The largest divisor smaller than n, is n\n\
    \    long max_divisor = n;\n    long max_divisor_tmp = 0;\n    while (max_divisor_tmp\
    \ < n) {\n        // Loop while max_divisor + 1 is smaller than n\n        long\
    \ tmp_divisor = max_divisor + 1;\n        while (tmp_divisor < n && n % tmp_divisor\
    \ == 0) {\n            tmp_divisor++;\n        }\n        if (tmp_divisor > max_divisor)\
    \ {\n            max_divisor = tmp_divisor;\n        }\n    }\n    return max_divisor;\n\
    }\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660092085
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest_divisor = 0;\n    long i;\n    \n    for (i = 1; i*i\
    \ <= n; ++i) {\n        if (n % i == 0) {\n            largest_divisor = i;\n\
    \            while (n % i == 0) {\n                largest_divisor = i;\n    \
    \            n /= i;\n            }\n            break;\n        }\n    }\n  \
    \  return largest_divisor;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660092086
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long divisor =  1;\n    while(n % divisor != 0) {\n        divisor++;\n\
    \    }\n    return divisor;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: Exception
  stderr: 'tmpng2630b0: /tmp/tmpng2630b0.cpp:15: int main(): Assertion `candidate((10))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660092081
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest_divisor = 1;\n    for (int i = 0; i < n; ++i) {\n   \
    \     if (n % i == 0) {\n            if (i != 0) {\n                largest_divisor\
    \ *= i;\n            }\n            if (largest_divisor > n) {\n             \
    \   largest_divisor = n;\n            }\n        }\n    }\n    return largest_divisor;\n\
    }\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660092081
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n\tlong res = 1;\n\tlong max_div = 1;\n\tlong div = 1;\n\twhile(1) {\n\t\
    \tmax_div = max_div * div;\n\t\tif(max_div < n) {\n\t\t\tres = max_div;\n\t\t\t\
    break;\n\t\t}\n\t\tdiv++;\n\t}\n\treturn res;\n}\nint main() {\n    auto candidate\
    \ = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmpj_r0k_vv: /tmp/tmpj_r0k_vv.cpp:22: int main(): Assertion `candidate((10))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660092081
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    // Initialising max_value with the greatest integer which can be divided\
    \ by n\n    long max_value = -1;\n\n    // For every number between 1 and n\n\
    \    for (long i = 1; i <= n; i++) {\n        // if i divides n evenly then\n\
    \        if (n % i == 0) {\n            // Update the max_value with the greatest\
    \ integer which can be divided by i\n            if (max_value < i / i) {\n  \
    \              max_value = i / i;\n            }\n        }\n    }\n    return\
    \ max_value;\n}\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: Exception
  stderr: 'tmp20oxghz6: /tmp/tmp20oxghz6.cpp:24: int main(): Assertion `candidate((10))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660092081
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest_divisor = 0;\n    for (long i = 3; i <= sqrt(n); i =\
    \ i + 2) {\n        if (n % i == 0) {\n            if (largest_divisor == 0 ||\
    \ largest_divisor > i)\n                largest_divisor = i;\n        }\n    }\n\
    \    return largest_divisor;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: Exception
  stderr: 'tmp30y2xltd: /tmp/tmp30y2xltd.cpp:16: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092081
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n  assert(n%2==0);\n  long div = 0;\n  for(int i=1; i<=n; i+=2) {\n   \
    \ if(n % i == 0) {\n      div = i;\n      break;\n    }\n  }\n  return div;\n\
    }\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: Exception
  stderr: 'tmplsbgqntu: /tmp/tmplsbgqntu.cpp:5: long int largest_divisor(long int):
    Assertion `n%2==0'' failed.

    '
  stdout: ''
  timestamp: 1660092082
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    if(n % 2 == 0) {\n        // If n is even, there is no divisor to\
    \ find\n        return n;\n    }\n    // Else, divide n by two and check whether\
    \ that divides n evenly\n    // and return the result if it does\n    return largest_divisor(n/2);\n\
    }\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: Exception
  stderr: 'tmpf9n_ifks: /tmp/tmpf9n_ifks.cpp:15: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092082
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long max_div = 1, max_num = n;\n    for (long div = 2; div <= n; div++)\
    \ {\n        if (n % div == 0) {\n            if (max_num / div > max_div) {\n\
    \                max_div = max_num / div;\n            }\n        } else {\n \
    \           break;\n        }\n    }\n    return max_div;\n}\nint main() {\n \
    \   auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n  \
    \  assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100))\
    \ == (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmp_lheq9fv: /tmp/tmp_lheq9fv.cpp:23: int main(): Assertion `candidate((49))
    == (7)'' failed.

    '
  stdout: ''
  timestamp: 1660092082
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long res = n;\n    while(1) {\n        if(n % 2 == 0) {\n        \
    \    res = 2 * res;\n            n = n / 2;\n        }\n        else {\n     \
    \       res = res / 2;\n            n = n / 2;\n        }\n        if(res == 0)\n\
    \            break;\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmpxhoj1xzw: /tmp/tmpxhoj1xzw.cpp:22: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092082
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n\t// Complete this function\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: Exception
  stderr: 'tmpy49t3ch8: /tmp/tmpy49t3ch8.cpp:9: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092082
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long max = n;\n    for (long i = 1; i <= n; i++)\n        if (n %\
    \ i == 0)\n            max = i;\n    return max;\n}\nint main() {\n    auto candidate\
    \ = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmpxwkb0cjm: /tmp/tmpxwkb0cjm.cpp:13: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092082
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n  long result = 0;\n  while(n != 0) {\n    if(n % 2 == 0) {\n      n /=\
    \ 2;\n      result += 1;\n    }\n    else {\n      n /= 2;\n    }\n  }\n  return\
    \ result;\n}\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: Exception
  stderr: 'tmpap0m1m5w: /tmp/tmpap0m1m5w.cpp:19: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092082
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long div[] = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43,\
    \ 47};\n    int len = sizeof(div) / sizeof(*div);\n    for (int i = 0; i < len;\
    \ i++) {\n        if (div[i] <= n) {\n            return div[i];\n        }\n\
    \    }\n    return -1;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: Exception
  stderr: 'tmpzx9h2_nw: /tmp/tmpzx9h2_nw.cpp:16: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092082
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long long int maxdiv = n;\n    long long int div = maxdiv;\n    while\
    \ ((div % 2 == 0) || (div % 3 == 0) || (div % 5 == 0) || (div % 7 == 0) || (div\
    \ % 11 == 0) || (div % 13 == 0) || (div % 17 == 0)) {\n        maxdiv--;\n   \
    \ }\n    return maxdiv;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660092087
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n\tassert(n % 2 == 0);\n\tlong divisor_count[2]={1};\n\tlong divisor =\
    \ 1;\n\tlong remainder = n / 2;\n\twhile (divisor <= remainder) {\n\t\tdivisor_count[divisor]+=1;\n\
    \t\tdivisor++;\n\t}\n\tlong largest_divisor = divisor;\n\tfor (int i = 1; i <\
    \ divisor_count[largest_divisor]; i++) {\n\t\tlargest_divisor++;\n\t}\n\treturn\
    \ largest_divisor;\n}\nint main() {\n    auto candidate = largest_divisor;\n \
    \   assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: Exception
  stderr: 'tmp0xtw6l5k: /tmp/tmp0xtw6l5k.cpp:5: long int largest_divisor(long int):
    Assertion `n % 2 == 0'' failed.

    '
  stdout: ''
  timestamp: 1660092082
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long long maxDivisor = 1, curDivisor = 1;\n    // Check all the numbers\
    \ from 1 to n to see if it divides evenly\n    for (long i = 1; i <= n; i++) {\n\
    \        curDivisor = 1;\n        for (long j = 1; j <= n / i; j++) {\n      \
    \      if (n % i == 0) {\n                curDivisor++;\n            }\n     \
    \   }\n        if (maxDivisor < curDivisor) {\n            maxDivisor = curDivisor;\n\
    \        }\n    }\n    return maxDivisor;\n}\nint main() {\n    auto candidate\
    \ = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmp2qziw9zw: /tmp/tmp2qziw9zw.cpp:22: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092082
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n\t// Store the results in a table\n\tlong table[n];\n\ttable[0] = n;\n\
    \t// We will store in how many pieces we can divide n evenly (from 1 to n) using\
    \ the table above\n\tlong num_pieces = 0;\n\t// For each n we can find all the\
    \ divisors of n that divide it evenly and store them in a vector table\n\tfor\
    \ (long i = 2; i < n; i++) {\n\t\twhile (n % i == 0) {\n\t\t\ttable[i] = table[i\
    \ * i];\n\t\t\tnum_pieces++;\n\t\t}\n\t}\n\treturn table[n - 1];\n}\nint main()\
    \ {\n    auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n\
    \    assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n   \
    \ assert(candidate((100)) == (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmpaochxf20: /tmp/tmpaochxf20.cpp:21: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092082
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    // code here\n    long maxDivisor = 0;\n    for (long divisor = 1;\
    \ divisor <= n; divisor++) {\n        if (n % divisor == 0) {\n            if\
    \ (divisor * divisor > maxDivisor) {\n                maxDivisor = divisor;\n\
    \            }\n        }\n    }\n    return maxDivisor;\n}\nint main() {\n  \
    \  auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n   \
    \ assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100))\
    \ == (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmp928az0zi: /tmp/tmp928az0zi.cpp:18: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092082
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    // your code goes here\n    long largest_div=1;\n    for(int i=2;i<=n;i++)\n\
    \    {\n        if(n%i==0)\n        {\n            if(n%(i*i)==0)\n          \
    \  {\n                largest_div=i;\n                break;\n            }\n\
    \            if(n%(i*i)>0)\n                largest_div=i;\n        }\n    }\n\
    \    return largest_div;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: Exception
  stderr: 'tmpasmm3cg2: /tmp/tmpasmm3cg2.cpp:24: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092082
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    assert(n % 2 == 0);\n    long result = n;\n    long last_div = n/2;\n\
    \n    // The loop will run for at most N/2 iterations\n    for(int i = 3; i <=\
    \ last_div; i = i*2) {\n        // We need to take into account the fact that\
    \ the largest divisor is smaller than n\n        if((n % i == 0) && (n/i != last_div))\
    \ {\n            last_div = n/i;\n            result = i;\n        }\n    }\n\n\
    \    return result;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: Exception
  stderr: 'tmp7tp9nqfl: /tmp/tmp7tp9nqfl.cpp:5: long int largest_divisor(long int):
    Assertion `n % 2 == 0'' failed.

    '
  stdout: ''
  timestamp: 1660092082
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    // To store the largest number that divides n evenly, we can use an\
    \ array to store all numbers that divide n evenly.\n    // It will be O(n) time\
    \ but O(1) space\n    std::vector<long> divisors(n);\n    // The first number\
    \ in the divisors array will be 1 (i.e. 1), the second number will be 2 (i.e.\
    \ 2), the third number will be 3 (i.e. 3)...\n    // So the largest number that\
    \ divides n evenly will be the last number in the array (in this case, divisors[n\
    \ - 1])\n    // We can use a for loop to go through each number in the divisors\
    \ array\n    // And each time we go through a number, we check if it is evenly\
    \ divisible by another number in the divisors array\n    // If it is, we append\
    \ that number to the divisors array\n    for (long i = 0; i < n; i++) {\n    \
    \    if (i % 2 == 0) {\n            divisors[i] = i;\n        }\n    }\n    long\
    \ largest_div = 0;\n    for (long i = 1; i < n; i++) {\n        if (divisors[i]\
    \ % 2 == 0) {\n            largest_div = i;\n        }\n    }\n    return largest_div;\n\
    }\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: Exception
  stderr: 'tmpwqrxs_x1: /tmp/tmpwqrxs_x1.cpp:28: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092082
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    // return n itself if n is divisible by 1 and not 0 otherwise return\
    \ n/2\n    return (n % 2) ? n : n / 2;\n}\nint main() {\n    auto candidate =\
    \ largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmpttb3iij4: /tmp/tmpttb3iij4.cpp:10: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092082
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    if (n % 2 == 0) {\n        return n;\n    }\n    long l = 2;\n   \
    \ while (l < n * 10) {\n        long m = l;\n        while (m + 1 < n * 10) {\n\
    \            m += 1;\n        }\n        if (m > n * 10) {\n            break;\n\
    \        }\n        l += m;\n    }\n    return l;\n}\nint main() {\n    auto candidate\
    \ = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmp5ybp5d_2: /tmp/tmp5ybp5d_2.cpp:23: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092082
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    vector<long> v(n+1);\n    for(long i=1;i<=n;i++) {\n        if(i%2==0)\
    \ {\n            v[i] = i;\n        } else {\n            v[i] = v[i-1] + 1;\n\
    \        }\n    }\n    for(long i=1;i<v.size();i++) {\n        if(v[i] > n/2)\
    \ {\n            break;\n        }\n    }\n    return v[v.size()-1];\n}\nint main()\
    \ {\n    auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n\
    \    assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n   \
    \ assert(candidate((100)) == (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp8mg7g7o.cpp: In function \u2018long int largest_divisor(long int)\u2019\
    :\n/tmp/tmpp8mg7g7o.cpp:5:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n    5 |     vector<long> v(n+1);\n      |     ^~~~~~\n/tmp/tmpp8mg7g7o.cpp:5:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpp8mg7g7o.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpp8mg7g7o.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmpp8mg7g7o.cpp:5:12:\
    \ error: expected primary-expression before \u2018long\u2019\n    5 |     vector<long>\
    \ v(n+1);\n      |            ^~~~\n/tmp/tmpp8mg7g7o.cpp:8:13: error: \u2018v\u2019\
    \ was not declared in this scope\n    8 |             v[i] = i;\n      |     \
    \        ^\n/tmp/tmpp8mg7g7o.cpp:10:13: error: \u2018v\u2019 was not declared\
    \ in this scope\n   10 |             v[i] = v[i-1] + 1;\n      |             ^\n\
    /tmp/tmpp8mg7g7o.cpp:13:20: error: \u2018v\u2019 was not declared in this scope\n\
    \   13 |     for(long i=1;i<v.size();i++) {\n      |                    ^\n/tmp/tmpp8mg7g7o.cpp:18:12:\
    \ error: \u2018v\u2019 was not declared in this scope\n   18 |     return v[v.size()-1];\n\
    \      |            ^\n"
  stdout: ''
  timestamp: 1660092082
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n  assert(n>=0);\n  long maxDivisor = n;\n  long testDivisor;\n  for (testDivisor=2;\
    \ testDivisor<n; testDivisor++){\n    if (n%testDivisor == 0)\n      maxDivisor\
    \ = testDivisor;\n  }\n  return maxDivisor;\n}\nint main() {\n    auto candidate\
    \ = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmpg_4ycc8d: /tmp/tmpg_4ycc8d.cpp:16: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092082
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    // Write your code here\n    long largest_divisor = -1;\n    long\
    \ largest_divisor_count = 0;\n    for(int i=2; i<=n/2; i++) {\n        if(n %\
    \ i == 0) {\n            if(largest_divisor_count == 0) {\n                largest_divisor\
    \ = i;\n                largest_divisor_count = 1;\n            } else {\n   \
    \             largest_divisor = i;\n                largest_divisor_count++;\n\
    \            }\n        }\n    }\n    return largest_divisor;\n}\nint main() {\n\
    \    auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n \
    \   assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100))\
    \ == (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmpfaji_h9j: /tmp/tmpfaji_h9j.cpp:23: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092082
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n  assert(n>0);\n  // We use a binary search to find the largest divisor\
    \ smaller than n\n  // This line guarantees the last step will take less than\
    \ log(log(n)) time\n  while ((n/=2)>1)\n    if (n%2==0) return n;\n  \n  // If\
    \ n is a power of 2, then we only need to check odd numbers up to sqrt(n)\n  //\
    \ This line guarantees that the inner loop will take at most sqrt(n) time\n  //\
    \ This is done by checking all odd divisors up to sqrt(n), and checking if the\
    \ number\n  // is divisible by any of these divisors. If not, we know that n is\
    \ not a factor of\n  // any other divisor\n  // This line guarantees that the\
    \ last step will take at most log(log(n)) time\n  while (n>=2)\n  {\n    if (n%2==0)\
    \ return n;\n    if (n<(long int)sqrt(n)) \n    {\n      // Find the largest divisor\
    \ smaller than n that evenly divides n\n      // This is done by checking the\
    \ divisors up to sqrt(n), stopping if any of them divide\n      // n\n      //\
    \ This line guarantees the last step will take at most sqrt(log(n)) time\n   \
    \   while ((n/=2)>1)\n        if (n%2==0) return n;\n    }\n  }\n  assert(0);\n\
    \  return 0;\n}\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: Exception
  stderr: 'tmpa17vr2l4: /tmp/tmpa17vr2l4.cpp:30: long int largest_divisor(long int):
    Assertion `0'' failed.

    '
  stdout: ''
  timestamp: 1660092082
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    if (n == 0 || n == 1) return 1;\n    long max_divisor = 0;\n    long\
    \ curr_divisor = 1;\n    while (n) {\n        if (n % curr_divisor) {\n      \
    \      ++max_divisor;\n        }\n        curr_divisor++;\n        n /= curr_divisor;\n\
    \    }\n    return max_divisor;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: Exception
  stderr: 'tmp9ds9xp0g: /tmp/tmp9ds9xp0g.cpp:20: int main(): Assertion `candidate((7))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092082
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long max_divisor = n;\n    long remainder = n;\n    long next_divisor\
    \ = 1;\n    long current_divisor = 1;\n\n    while (current_divisor < max_divisor)\
    \ {\n        if (remainder % current_divisor == 0) {\n            // The number\
    \ is divisible by current divisor\n            remainder = (remainder / current_divisor);\n\
    \            next_divisor++;\n        } else {\n            // Not divisible by\
    \ current divisor\n            // Increment current divisor and check again\n\
    \            current_divisor++;\n        }\n        if (current_divisor > max_divisor)\
    \ {\n            break;\n        }\n    }\n    return next_divisor;\n}\nint main()\
    \ {\n    auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n\
    \    assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n   \
    \ assert(candidate((100)) == (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660092087
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long max_divisor = 1, max_div_num = n;\n    for(long i = 2; i <= max_div_num;\
    \ ++i) {\n        if(n % i == 0) {\n            if(max_div_num / i < max_divisor\
    \ / i) {\n                max_divisor = max_div_num / i;\n            }\n    \
    \    }\n    }\n    return max_divisor;\n}\nint main() {\n    auto candidate =\
    \ largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmpmtrg6j1y: /tmp/tmpmtrg6j1y.cpp:19: int main(): Assertion `candidate((10))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660092082
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n\tassert(n > 0);\n\tlong mod = n % 2;\n\tlong max = n;\n\twhile (mod ==\
    \ 0) {\n\t\tmax++;\n\t\tmod += n;\n\t}\n\treturn max;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmp8m9btosr: /tmp/tmp8m9btosr.cpp:16: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092082
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long long sum = 1;\n    for(long long i = 1; i < n; i++)\n       \
    \ sum*=i;\n    for(long long i = 1; i < sum; i++)\n        if(sum%i==0)\n    \
    \        return i;\n}\nint main() {\n    auto candidate = largest_divisor;\n \
    \   assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: Exception
  stderr: 'tmpse2fqnpo: /tmp/tmpse2fqnpo.cpp:16: int main(): Assertion `candidate((10))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660092082
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest_divisor = n; // initial answer\n    // The above line\
    \ could be rewritten as below to avoid overflowing long long int and causing loss\
    \ of precision\n    // long long int largest_divisor = (long long)n;\n    for(long\
    \ i = 3; i*i <= n; i = i*2) { // iterate from 3 to n / i\n        if(n % i ==\
    \ 0) { // n is divisible by i\n            largest_divisor = i; // n is divisible\
    \ by i\n        }\n    }\n    return largest_divisor;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmpt1fxzw57: /tmp/tmpt1fxzw57.cpp:17: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092082
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    // write your code here\n    int counter = 0;\n    for(int i=3; i<=n/2;i++){\n\
    \        if(n%i==0){\n            counter++;\n        }\n    }\n    return counter;\n\
    }\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: Exception
  stderr: 'tmpxfnqdyb5: /tmp/tmpxfnqdyb5.cpp:16: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092083
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    if (n == 0 || n % 2 == 0) return n;\n    int n_div = n / 2;\n    long\
    \ max_div = n;\n    long max_div1 = n % 2;\n    for (long i = 3; i <= n_div; i\
    \ += 2) {\n        if (n % i == 0) {\n            max_div = i;\n            break;\n\
    \        }\n    }\n    for (long i = max_div1; i > 3; i--) {\n        if (max_div\
    \ % i == 0) {\n            max_div = i;\n            break;\n        }\n    }\n\
    \    return max_div;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: Exception
  stderr: 'tmpc90p7p7z: /tmp/tmpc90p7p7z.cpp:25: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092082
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    if (n == 1) {\n        return n;\n    }\n    long largest = n;\n \
    \   long smallest = n;\n    while (smallest % 2 == 0) {\n        smallest /= 2;\n\
    \    }\n    while (largest % 2 == 0) {\n        largest /= 2;\n    }\n    while\
    \ (largest != 1) {\n        if (largest % smallest == 0) {\n            return\
    \ largest;\n        }\n        smallest /= 2;\n        largest /= 2;\n    }\n\
    \    return largest;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: Exception
  stderr: 'tmp6rrtyp_5: /tmp/tmp6rrtyp_5.cpp:27: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092083
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    // Write your code here\n    long long int maxDivisor = 1; // initialize\
    \ the maximum divisor\n    long long int divisor = 1; // initialize the divisor\n\
    \n    for(int i=1; i<=n; i++){\n        if (n % i == 0){\n            divisor\
    \ = i;\n            if (maxDivisor < divisor)\n                maxDivisor = divisor;\n\
    \        }\n    }\n    return maxDivisor;\n}\nint main() {\n    auto candidate\
    \ = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmpq3gk40ex: /tmp/tmpq3gk40ex.cpp:20: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092083
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long temp=0;\n    long i=1;\n    while (i<n){\n        if (n%i ==\
    \ 0){\n            temp = i;\n            break;\n        }\n        i++;\n  \
    \  }\n    return temp;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: Exception
  stderr: 'tmppdph_b2w: /tmp/tmppdph_b2w.cpp:20: int main(): Assertion `candidate((10))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660092083
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    if (n % 2 == 0) return 2;\n    long divisor = 2;\n    while (n > divisor)\
    \ {\n        if (n % divisor == 0) return divisor;\n        divisor++;\n    }\n\
    \    return divisor;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: Exception
  stderr: 'tmpy0kx41yq: /tmp/tmpy0kx41yq.cpp:15: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092083
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n  assert(n % 2 == 0);\n  long ans = 1L;\n  long div = 2;\n  while (div\
    \ < n) {\n    if (n % div == 0) {\n      ans++;\n    }\n    div++;\n  }\n  return\
    \ ans;\n}\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: Exception
  stderr: 'tmpx7hskiug: /tmp/tmpx7hskiug.cpp:5: long int largest_divisor(long int):
    Assertion `n % 2 == 0'' failed.

    '
  stdout: ''
  timestamp: 1660092083
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long long largest = n; //The greatest number that divides n evenly\
    \ is n\n    for (long long i = 2; i < largest; i++) {\n        if (n % i == 0)\
    \ {\n            largest = i;\n        }\n    }\n    return largest;\n}\nint main()\
    \ {\n    auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n\
    \    assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n   \
    \ assert(candidate((100)) == (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmpxtchm7ye: /tmp/tmpxtchm7ye.cpp:15: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092083
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long max_div = INT_MIN;\n    long max_mod = 0;\n    for (int i = 2;\
    \ i < n; i++) {\n        long curr_div = n / i;\n        if (curr_div * i < n\
    \ && curr_div * i > 0) {\n            if (curr_div > max_div) {\n            \
    \    max_div = curr_div;\n                max_mod = i;\n            }\n      \
    \  }\n    }\n    return max_div;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: Exception
  stderr: 'tmptbk5uf_1: /tmp/tmptbk5uf_1.cpp:21: int main(): Assertion `candidate((7))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092083
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n\tint max_divisor = 1;\n\tint div = 1;\n\twhile (div <= n) {\n\t\tif (n\
    \ % div == 0) {\n\t\t\tmax_divisor = div;\n\t\t}\n\t\tdiv++;\n\t}\n\treturn max_divisor;\n\
    }\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: Exception
  stderr: 'tmpzcomek75: /tmp/tmpzcomek75.cpp:17: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092083
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n\tif (n%2 == 0)\n\t\treturn n;\n\tlong l = 3;\n\tlong r = n/2;\n\twhile\
    \ (r != 1) {\n\t\tif (r%2 == 0) {\n\t\t\tl = l*2+1;\n\t\t\tr = r/2;\n\t\t} else\
    \ {\n\t\t\tr = r*2+1;\n\t\t}\n\t}\n\treturn l;\n}\nint main() {\n    auto candidate\
    \ = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmpqc86i2my: /tmp/tmpqc86i2my.cpp:21: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092084
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n\tlong long int divisor = 1;\n\tlong long int max_divisor = 1;\n\tfor\
    \ (long long int i = 3; i <= n; i += 2)\n\t\tif (n % i == 0)\n\t\t\tdivisor =\
    \ i;\n\t\telse\n\t\t\tif (divisor < i)\n\t\t\t\tmax_divisor = i;\n\t\t\telse\n\
    \t\t\t\tdivisor = i;\n\n\tif (max_divisor == divisor)\n\t\treturn n;\n\telse\n\
    \t\treturn max_divisor;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: Exception
  stderr: 'tmp4h1_nm3_: /tmp/tmp4h1_nm3_.cpp:24: int main(): Assertion `candidate((7))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092084
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    // write your code here\n    if (n < 2)\n        return 1;\n    long\
    \ ans = n;\n    while (n > 1) {\n        if (n % 2 == 0) {\n            ans =\
    \ ans / 2;\n        }\n        n = ans;\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n\
    \    assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n   \
    \ assert(candidate((100)) == (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660092089
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    assert(n >= 0);\n    long res = 0;\n    // If n is even, return its\
    \ square\n    if (n & 1)\n        res = 1;\n    // Otherwise find the smallest\
    \ divisor >= n\n    for (long i = 2; i < n; i++) {\n        // If n is a divisor\
    \ of i, then n /= i\n        if (n % i == 0)\n            n /= i;\n        else\
    \ {\n            // If n is smaller than i, then i is the largest divisor\n  \
    \          if (n > i)\n                res = i;\n            // Otherwise n =\
    \ i/i (reminder)\n            else\n                n /= i;\n        }\n    }\n\
    \    return res;\n}\nint main() {\n    auto candidate = largest_divisor;\n   \
    \ assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: Exception
  stderr: 'tmp4_tikn1p: /tmp/tmp4_tikn1p.cpp:28: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092084
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n  assert(n != 0);\n  long long ans = n;\n  for (long long i = 3; i * i\
    \ <= n; i += 2)\n    if (n % i == 0) {\n      ans = i;\n      break;\n    }\n\
    \  return ans;\n}\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: Exception
  stderr: 'tmptfeyxukc: /tmp/tmptfeyxukc.cpp:16: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092084
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n  long maxDiv = 0, div = 1;\n  while(n != 1) {\n    if(n % div == 0) {\n\
    \      maxDiv = div;\n    }\n    div++;\n    if(div > maxDiv) {\n      div = 1;\n\
    \      maxDiv = div;\n    }\n    n/=div;\n  }\n  return maxDiv;\n}\nint main()\
    \ {\n    auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n\
    \    assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n   \
    \ assert(candidate((100)) == (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660092089
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long count = 0;\n    long temp = 1;\n    for(long i = 2; i <= n; i++)\
    \ {\n        if(n % i == 0) {\n            temp = temp * i;\n            count\
    \ = count + 1;\n            if(count == i) {\n                break;\n       \
    \     }\n        }\n    }\n    return temp;\n}\nint main() {\n    auto candidate\
    \ = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmp4ae1v_we: /tmp/tmp4ae1v_we.cpp:20: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092084
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long long mod = sqrt(n);\n    long long divisor = 1;\n    // Initialize\
    \ a vector of long long that stores the number of divisors\n    vector<long long>\
    \ numDivisors(2, 1);\n    while (mod % divisor != 0) {\n        divisor++;\n \
    \   }\n    while (divisor <= mod) {\n        divisor *= 10;\n        numDivisors[divisor\
    \ / 10] ++;\n    }\n    for (long long i = 2; i <= mod; i++) {\n        // If\
    \ numDivisors[numDivisors.size()-1] doesn't fit into i\n        if (numDivisors[numDivisors.size()-1]\
    \ > i) {\n            break;\n        }\n        // If numDivisors[numDivisors.size()-1]\
    \ doesn't fit into i, increase i by 10\n        else if ((numDivisors[numDivisors.size()-1]\
    \ < i) && ((numDivisors[numDivisors.size()-1] + 1) < i)) {\n            i = i\
    \ + 10;\n        }\n        // If numDivisors[numDivisors.size()-1] doesn't fit\
    \ into i, increase i by 2\n        else if ((numDivisors[numDivisors.size()-1]\
    \ < i) && ((numDivisors[numDivisors.size()-1] + 2) > i)) {\n            i = i\
    \ + 2;\n        }\n    }\n    return i;\n}\nint main() {\n    auto candidate =\
    \ largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5ln3gy4b.cpp: In function \u2018long int largest_divisor(long int)\u2019\
    :\n/tmp/tmp5ln3gy4b.cpp:8:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n    8 |     vector<long long> numDivisors(2, 1);\n      |     ^~~~~~\n\
    /tmp/tmp5ln3gy4b.cpp:8:5: note: suggested alternatives:\nIn file included from\
    \ /usr/include/c++/9/vector:67,\n                 from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp5ln3gy4b.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp5ln3gy4b.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmp5ln3gy4b.cpp:8:12:\
    \ error: expected primary-expression before \u2018long\u2019\n    8 |     vector<long\
    \ long> numDivisors(2, 1);\n      |            ^~~~\n/tmp/tmp5ln3gy4b.cpp:14:9:\
    \ error: \u2018numDivisors\u2019 was not declared in this scope\n   14 |     \
    \    numDivisors[divisor / 10] ++;\n      |         ^~~~~~~~~~~\n/tmp/tmp5ln3gy4b.cpp:18:13:\
    \ error: \u2018numDivisors\u2019 was not declared in this scope\n   18 |     \
    \    if (numDivisors[numDivisors.size()-1] > i) {\n      |             ^~~~~~~~~~~\n\
    /tmp/tmp5ln3gy4b.cpp:30:12: error: \u2018i\u2019 was not declared in this scope\n\
    \   30 |     return i;\n      |            ^\n"
  stdout: ''
  timestamp: 1660092084
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n  assert(n % 2 == 0 && n > 0);\n  int cnt = 0;\n  long mod = n;\n  while\
    \ (mod % 2 == 0) {\n    cnt++;\n    mod /= 2;\n  }\n  return cnt;\n}\nint main()\
    \ {\n    auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n\
    \    assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n   \
    \ assert(candidate((100)) == (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmpn9p9k4kp: /tmp/tmpn9p9k4kp.cpp:5: long int largest_divisor(long int):
    Assertion `n % 2 == 0 && n > 0'' failed.

    '
  stdout: ''
  timestamp: 1660092084
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long div = n;\n    long div2 = div;\n    long remainder;\n\n    while\
    \ (remainder != 0) {\n        div2 = div2;\n        div += 1;\n        remainder\
    \ = div % 2;\n    }\n\n    return div;\n}\nint main() {\n    auto candidate =\
    \ largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmp0yxivpcr: /tmp/tmp0yxivpcr.cpp:19: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092084
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n\tlong result = 1;\n\tfor(long i = 1; i < n; i++) {\n\t\tif(n % i == 0)\
    \ {\n\t\t\tresult += i;\n\t\t}\n\t}\n\treturn result;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmp7aqbosm4: /tmp/tmp7aqbosm4.cpp:15: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092084
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n  // write your code here\n  long ans = 1;\n  int flag = 1;\n  long div\
    \ = 1;\n  while (n) {\n    if (n % div == 0) {\n      ans = max(ans, div);\n \
    \     flag = 0;\n    } else {\n      ans = ans * 2;\n      div++;\n    }\n   \
    \ n--;\n  }\n  return ans;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgzwhmps4.cpp: In function \u2018long int largest_divisor(long int)\u2019\
    :\n/tmp/tmpgzwhmps4.cpp:11:13: error: \u2018max\u2019 was not declared in this\
    \ scope; did you mean \u2018std::max\u2019?\n   11 |       ans = max(ans, div);\n\
    \      |             ^~~\n      |             std::max\nIn file included from\
    \ /usr/include/c++/9/algorithm:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpgzwhmps4.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:3468:5:\
    \ note: \u2018std::max\u2019 declared here\n 3468 |     max(initializer_list<_Tp>\
    \ __l, _Compare __comp)\n      |     ^~~\n"
  stdout: ''
  timestamp: 1660092084
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n  assert(n % 2 == 0); // only positive numbers supported\n  vector<long>\
    \ divisors(n);\n  long max_divisor = 0; // if divisor is larger than max_divisor\
    \ set it as max_divisor\n  long next_divisor = 2, max_next_divisor = 1; // if\
    \ next_divisor is larger than max_next_divisor set it as max_next_divisor\n  //\
    \ loop through the divisors, starting with next_divisor and ending at n\n  for(int\
    \ i = 3; i <= n; i += 2) {\n    if(n % i == 0) {\n      // if n is divisible by\
    \ i\n      // set the current divisor to i\n      divisors[i / 2] = i;\n     \
    \ // check if i is the largest divisor so far\n      if(i > max_divisor) {\n \
    \       max_divisor = i;\n        // set the next_divisor to the largest divisor\
    \ that is larger than i\n        if(max_next_divisor > i) next_divisor = max_next_divisor;\n\
    \        // set max_next_divisor to i because i will be the largest divisor after\
    \ i\n        max_next_divisor = i;\n      }\n    }\n  }\n  // return max_divisor\n\
    \  return max_divisor;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpky7owj78.cpp: In function \u2018long int largest_divisor(long int)\u2019\
    :\n/tmp/tmpky7owj78.cpp:6:3: error: \u2018vector\u2019 was not declared in this\
    \ scope\n    6 |   vector<long> divisors(n);\n      |   ^~~~~~\n/tmp/tmpky7owj78.cpp:6:3:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpky7owj78.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpky7owj78.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmpky7owj78.cpp:6:10:\
    \ error: expected primary-expression before \u2018long\u2019\n    6 |   vector<long>\
    \ divisors(n);\n      |          ^~~~\n/tmp/tmpky7owj78.cpp:14:7: error: \u2018\
    divisors\u2019 was not declared in this scope\n   14 |       divisors[i / 2] =\
    \ i;\n      |       ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660092084
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long result = n;\n    while(result % 2 == 0) result/=2;\n    return\
    \ result;\n}\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: Exception
  stderr: 'tmpl7hwngmq: /tmp/tmpl7hwngmq.cpp:11: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092085
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long maxNum = 0;\n    long ans = 0;\n    long i;\n    for (i = 1;\
    \ i <= n; ++i) {\n        if (n % i == 0) {\n            if (n > maxNum) {\n \
    \               maxNum = n;\n                ans = i;\n            }\n       \
    \ }\n    }\n    if (n > maxNum) {\n        maxNum = n;\n        ans = i;\n   \
    \ }\n    return maxNum;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: Exception
  stderr: 'tmp3xf_6z3i: /tmp/tmp3xf_6z3i.cpp:24: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092084
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n  // Start with n%2 being a power of 2\n  long max_div = n;\n  while (max_div\
    \ > 0) {\n    max_div >>= 1;\n  }\n  while ((max_div % 2) == 0) {\n    max_div\
    \ /= 2;\n  }\n  return max_div;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660092089
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    // Write your code here\n    int count = 0;\n    for (long i = 2;\
    \ i < n; i++) {\n        if (n % i == 0) {\n            n = n / i;\n         \
    \   count++;\n        }\n    }\n    return n;\n}\nint main() {\n    auto candidate\
    \ = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmpkw1edwcb: /tmp/tmpkw1edwcb.cpp:17: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092085
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest_divisor = 0;\n    long a = 0, b = n, d;\n    // If n\
    \ is prime, return the value\n    if (n == 2) return 2;\n    // Loop until b is\
    \ smaller than n.\n    while (b >= 2) {\n        d = (b+a)/2;\n        // If d\
    \ divides n evenly, it must be the largest\n        if (d % 2 == 0) return d;\n\
    \        // If the largest divisor so far is d, replace it with a new value\n\
    \        if (d > largest_divisor) {\n            largest_divisor = d;\n      \
    \  }\n        // Divide by two and continue loop\n        a = b;\n        b =\
    \ d / 2;\n    }\n    // If b is now 1, then b divides n evenly and n is the largest\
    \ divisor\n    return b;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: Exception
  stderr: 'tmp0ylink1g: /tmp/tmp0ylink1g.cpp:27: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092085
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long long largest = n;\n    for(long long i=3; i<=n; i=i*3) {\n  \
    \      largest = i;\n        if(largest*largest < n) {\n            break;\n \
    \       }\n    }\n    return largest;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: Exception
  stderr: 'tmpcgyayld5: /tmp/tmpcgyayld5.cpp:16: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092085
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    std::vector<long> div;\n    for (long d = 2; d <= n; d++)\n      \
    \  if (n % d == 0)\n            div.push_back(d);\n    else\n        div.push_back(n\
    \ - 1);\n    std::sort(div.begin(), div.end());\n    return div[div.size() - 1];\n\
    }\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: Exception
  stderr: 'tmpgyikqt2z: /tmp/tmpgyikqt2z.cpp:16: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092085
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long max_div = n; // The largest divisor smaller than n that divides\
    \ n evenly\n    int count = 0; // To keep track of the number of divisors smaller\
    \ than n that divide n evenly\n    while (n > 1) {\n        if (n % 2 == 0) {\n\
    \            n /= 2;\n        } else {\n            while (n % 2 == 0) {\n   \
    \             n /= 2;\n                ++count;\n            }\n            while\
    \ (n > 1) {\n                if (n % 2 != 0) {\n                    break;\n \
    \               }\n                n /= 2;\n                ++count;\n       \
    \     }\n            // If count is bigger than max_div, then we update max_div\n\
    \            if (count > max_div) {\n                max_div = count;\n      \
    \      }\n            // If count is equal to 1, then n is smaller than max_div,\
    \ so we break the loop\n            if (count == 1) {\n                break;\n\
    \            }\n        }\n    }\n    return max_div;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660092089
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long d = 1;\n    long result = n;\n    for (long i = 1; i < n; ++i)\n\
    \        d = d * (i + 1);\n    d = d % n;\n    while (d != 0) {\n        if (n\
    \ % d == 0)\n            result = d;\n        d /= 2;\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: Exception
  stderr: 'tmp9bzk23aa: /tmp/tmp9bzk23aa.cpp:19: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092085
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long ans = n;\n    while (ans % 2 == 0) {\n        ans /= 2;\n   \
    \ }\n    return ans;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: Exception
  stderr: 'tmpot6509np: /tmp/tmpot6509np.cpp:13: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092085
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long max_value = 1;\n    long max_divisor = 1;\n    long div_num =\
    \ n;\n    for (long i = 1; i < div_num; i++) {\n        if (div_num % i == 0)\
    \ {\n            if (div_num / i > max_divisor) {\n                max_divisor\
    \ = div_num / i;\n                max_value = i;\n            }\n        }\n \
    \   }\n    return max_value;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: Exception
  stderr: 'tmp70ou_c9e: /tmp/tmp70ou_c9e.cpp:22: int main(): Assertion `candidate((10))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660092085
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long max_divisor = n;\n    long curr_divisor = 1;\n    while (curr_divisor\
    \ < n && max_divisor % curr_divisor == 0) {\n        curr_divisor++;\n    }\n\
    \    return max_divisor;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: Exception
  stderr: 'tmpelc3lic9: /tmp/tmpelc3lic9.cpp:14: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092085
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long maxn = 0;\n    for (long i = 1; i <= n; i++) {\n        if (n\
    \ % i == 0) {\n            if (maxn == 0 || maxn > i)\n                maxn =\
    \ i;\n        }\n    }\n    return maxn;\n}\nint main() {\n    auto candidate\
    \ = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmpfcay06g0: /tmp/tmpfcay06g0.cpp:18: int main(): Assertion `candidate((10))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660092085
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long max_div = INT_MIN;\n    long max_div_count = 0;\n    for(long\
    \ div = 1; div <= n; ++div) {\n        if (n % div == 0) {\n            if (max_div_count\
    \ == 0 || max_div_count > div) {\n                max_div = div;\n           \
    \     max_div_count = 1;\n            } else {\n                max_div_count++;\n\
    \            }\n        }\n    }\n    return max_div;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmp46qsprty: /tmp/tmp46qsprty.cpp:23: int main(): Assertion `candidate((10))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660092085
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    if (n == 0)\n        return n;\n    long div = 1;\n    long limit;\n\
    \    for (limit = 2; limit <= n; limit *= 2)\n        if (n % limit == 0)\n  \
    \          div = limit;\n    return div;\n}\nint main() {\n    auto candidate\
    \ = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmpzntis4us: /tmp/tmpzntis4us.cpp:18: int main(): Assertion `candidate((10))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660092085
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    // Write your code here\n    \n}\nint main() {\n    auto candidate\
    \ = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmprfsp8g5n: /tmp/tmprfsp8g5n.cpp:10: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092085
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    // Write your code here\n    long long m = n;\n    for (long long\
    \ i = 1; ; ++i) {\n        if (i % 2 == 0)\n            break;\n        if (n\
    \ % i == 0)\n            m = i;\n    }\n    return m;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmpxfirdkju: /tmp/tmpxfirdkju.cpp:19: int main(): Assertion `candidate((10))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660092085
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long k = 3; // initial value of k\n    // For every number between\
    \ 2 and n\n    for (long i = 1; i < n; ++i) {\n        // If n/k is evenly divisible\
    \ by i\n        if (n/k % i == 0) {\n            // Then k is set to n/i so that\
    \ n/k will be evenly divisible by i\n            k = n/i;\n        }\n    }\n\
    \    // After k is set, every number greater than n will be divisible by k\n \
    \   return k;\n}\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: Exception
  stderr: 'tmp7ui38335: /tmp/tmp7ui38335.cpp:19: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092085
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n  int result = 0;\n  for (int i = 1; i <= n; i++) {\n    if (n % i ==\
    \ 0) {\n      result = i;\n    }\n  }\n  return result;\n}\nint main() {\n   \
    \ auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmpum_j2fe5: /tmp/tmpum_j2fe5.cpp:15: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092085
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    assert(n % 2 == 0); // Make sure n is odd\n    long d = 1;\n    while\
    \ (d <= n) {\n        if (n % d == 0) {\n            n /= d;\n        } else {\n\
    \            d++;\n        }\n    }\n    return n;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmpyfzvwfh7: /tmp/tmpyfzvwfh7.cpp:5: long int largest_divisor(long int):
    Assertion `n % 2 == 0'' failed.

    '
  stdout: ''
  timestamp: 1660092085
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest_div = 1;\n    long last_div = 0;\n    while(n != 1) {\n\
    \        last_div += 1;\n        largest_div = last_div;\n        n /= largest_div;\n\
    \    }\n    return largest_div;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: Exception
  stderr: 'tmpx7qdztnt: /tmp/tmpx7qdztnt.cpp:16: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092086
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n   assert(n % 2 == 0);\n   long limit = sqrt(n);\n   long l1 = 0, l2 =\
    \ limit;\n   while (l2 != 1) {\n      if (n % l2 == 0) {\n         return l2;\n\
    \      }\n      l2 = l1 - (l1 % (l2 * 2));\n      l1++;\n   }\n   return l2;\n\
    }\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: Exception
  stderr: 'tmpntybdjsj: /tmp/tmpntybdjsj.cpp:5: long int largest_divisor(long int):
    Assertion `n % 2 == 0'' failed.

    '
  stdout: ''
  timestamp: 1660092086
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long long x = n;\n    long long y = 2;\n    long long z = 2;\n   \
    \ while(y <= x) {\n        long long r = y % x;\n        if(r == 0 || y == x)\n\
    \            y = z;\n        else\n            y = r;\n        z = x + y;\n  \
    \  }\n    return z;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660092090
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long max_divisor = INT_MIN, divisor = n;\n    long next_divisor =\
    \ 1;\n    while(next_divisor <= n) {\n        if(n % next_divisor == 0) {\n  \
    \          divisor = next_divisor;\n            max_divisor = divisor;\n     \
    \   }\n        next_divisor += 2;\n    }\n    return max_divisor;\n}\nint main()\
    \ {\n    auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n\
    \    assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n   \
    \ assert(candidate((100)) == (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmpv_ditisq: /tmp/tmpv_ditisq.cpp:18: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092086
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    std::vector<long> divisors = { 2 };\n    long max_divisor = 1;\n \
    \   long i = 2;\n    for(; i <= n; ++i)\n    {\n        if(n % i == 0)\n     \
    \       divisors.push_back(i);\n        if(divisors.size() > max_divisor)\n  \
    \          max_divisor = divisors.size();\n    }\n    return max_divisor;\n}\n\
    int main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: Exception
  stderr: 'tmpos3b6vj7: /tmp/tmpos3b6vj7.cpp:19: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092085
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n   for(long i=2;i<n;i++) {\n      if(n%i==0) return i;\n   }\n   return\
    \ n;\n}\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: Exception
  stderr: 'tmppcjt2roa: /tmp/tmppcjt2roa.cpp:12: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092086
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n  // Write your code here\n  long max = n;\n  long res = max;\n  while(max%2\
    \ ==0) {\n    max /=2;\n    res++;\n  }\n  if(max%2 !=0)\n    res++;\n  assert(max%2==0);\n\
    \  return res;\n}\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: Exception
  stderr: 'tmpm69k1ccq: /tmp/tmpm69k1ccq.cpp:14: long int largest_divisor(long int):
    Assertion `max%2==0'' failed.

    '
  stdout: ''
  timestamp: 1660092085
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long long sum = 0;\n    long long cur = 1;\n    for(int i = 1; i <\
    \ n; i++) {\n        cur *= i;\n        sum += cur;\n    }\n    return sum / n;\n\
    }\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: Exception
  stderr: 'tmpv5yv37b2: /tmp/tmpv5yv37b2.cpp:16: int main(): Assertion `candidate((7))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092086
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n  assert(n > 0);\n\n  long max_divisor = n;\n\n  long max_remainder =\
    \ max_divisor;\n\n  for (long i = 2; i < max_divisor; i++) {\n    if (n % i ==\
    \ 0) {\n      max_divisor = i;\n      max_remainder = n % i;\n\n      if (max_remainder\
    \ == 0) {\n        break;\n      }\n    }\n  }\n\n  return max_divisor;\n}\nint\
    \ main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3)) ==\
    \ (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n\
    \    assert(candidate((100)) == (50));\n    assert(candidate((49)) == (7));\n\
    }\n"
  status: Exception
  stderr: 'tmpodf37r4y: /tmp/tmpodf37r4y.cpp:26: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092086
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long largest_divisor = 0;\n    // Loop upto sqrt(n) \n    long i =\
    \ n; \n    for(; i*i <= n; i += i) {\n        // If i is a factor, we need to\
    \ find the largest divisor\n        if(i%2 == 0)\n            largest_divisor\
    \ = i;\n    }\n    // If n is not a factor of largest_divisor, it is one of the\
    \ divisors of n\n    if(!largest_divisor)\n        largest_divisor = 1;\n    return\
    \ largest_divisor;\n}\nint main() {\n    auto candidate = largest_divisor;\n \
    \   assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: Exception
  stderr: 'tmp8s6xrdor: /tmp/tmp8s6xrdor.cpp:22: int main(): Assertion `candidate((10))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660092086
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    // write your code here\n    int l=1;\n    long max=n;\n    for(int\
    \ i=2;i<=n;i++)\n    {\n        if(n%i==0)\n        {\n            if(n/i>max)\n\
    \                max=n/i;\n            l++;\n        }\n    }\n    return max;\n\
    }\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: Exception
  stderr: 'tmpgxojx7y1: /tmp/tmpgxojx7y1.cpp:21: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092086
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n  // Find all divisors of n\n  long long int divisors[n+1];\n  for (long\
    \ long int i=0;i<=n;i++) divisors[i]=1;\n  for (long long int i=1;i<=n;i++) {\n\
    \    while (n % i == 0) {\n      divisors[i] = divisors[i]+1;\n      n = n/i;\n\
    \    }\n  }\n  divisors[n] = 1;\n  // Find the first divisor that is > n\n  for\
    \ (long long int i=0;i<=n;i++)\n    if (divisors[i] > n) return divisors[i];\n\
    \  return divisors[n];\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660092091
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long res = 0;\n    for (int i = 3; i <= n; i += 2) {\n        if (n\
    \ % i == 0) {\n            res = i;\n        }\n    }\n    return res;\n}\nint\
    \ main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3)) ==\
    \ (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n\
    \    assert(candidate((100)) == (50));\n    assert(candidate((49)) == (7));\n\
    }\n"
  status: Exception
  stderr: 'tmpl8_tt5qc: /tmp/tmpl8_tt5qc.cpp:15: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092086
- exit_code: -8
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n\t// Scan from 1 to n, and keep track of the current divisor and its current\
    \ remainder\n\tlong d = 0;\n\tlong r = n;\n\twhile (d <= r) {\n\t\tif (r / d %\
    \ 2 == 0) {\n\t\t\td = r / d;\n\t\t} else {\n\t\t\tr = r - d * d;\n\t\t}\n\t}\n\
    \n\treturn d;\n}\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660092086
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    int num_divisors = 0;\n    int max_divisor = 0;\n\n    for (int i\
    \ = 1; i <= n; ++i) {\n        if ((n % i) == 0) {\n            ++num_divisors;\n\
    \            if (num_divisors > max_divisor) {\n                max_divisor =\
    \ num_divisors;\n            }\n        }\n    }\n    return max_divisor;\n}\n\
    int main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: Exception
  stderr: 'tmp49lifa76: /tmp/tmp49lifa76.cpp:20: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092087
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long ans = 1;\n    long r = 1;\n    long d;\n    // Iterate from 1\
    \ to n\n    for (int i = 1; i <= n; i++) {\n        d = i;\n        while (d %\
    \ 2 == 0) d /= 2;\n        // If the number is a power of two and has at least\
    \ one factor <= n\n        if ((d != 1) && (d <= n)) {\n            while (d <=\
    \ n) {\n                ans = max(ans, r);\n                d *= 2;\n        \
    \        r++;\n            }\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n\
    \    assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n   \
    \ assert(candidate((100)) == (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf0vya2nw.cpp: In function \u2018long int largest_divisor(long int)\u2019\
    :\n/tmp/tmpf0vya2nw.cpp:15:23: error: \u2018max\u2019 was not declared in this\
    \ scope; did you mean \u2018std::max\u2019?\n   15 |                 ans = max(ans,\
    \ r);\n      |                       ^~~\n      |                       std::max\n\
    In file included from /usr/include/c++/9/algorithm:62,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n                 from\
    \ /tmp/tmpf0vya2nw.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:3468:5: note: \u2018\
    std::max\u2019 declared here\n 3468 |     max(initializer_list<_Tp> __l, _Compare\
    \ __comp)\n      |     ^~~\n"
  stdout: ''
  timestamp: 1660092086
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long max_divisor = n;\n    long divisor = n;\n    while (divisor >\
    \ 1) {\n        if (n % divisor == 0) {\n            divisor--;\n            if\
    \ (divisor > max_divisor)\n                max_divisor = divisor;\n        } else\
    \ {\n            divisor += 2;\n        }\n    }\n    return max_divisor;\n}\n\
    int main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660092091
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    // Write your code here\n    long ans = 0;\n    for(long i = 2; i\
    \ < n; i++) {\n        if((n % i) == 0) {\n            ans = i;\n            break;\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: Exception
  stderr: 'tmpyk6h581n: /tmp/tmpyk6h581n.cpp:17: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092086
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long long max_div = n;\n    long long div = 1;\n    long long divMax\
    \ = 1;\n    while(div <= max_div){\n        div *= 2;\n        if(div > max_div)\n\
    \            break;\n        divMax = div;\n    }\n    if(max_div > divMax)\n\
    \        max_div = divMax;\n    return max_div;\n}\nint main() {\n    auto candidate\
    \ = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmp8fsa4b0z: /tmp/tmp8fsa4b0z.cpp:20: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092087
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    vector<int> divisors;\n    for(int i=1; i<=n; i++) {\n        if(n%i\
    \ == 0) {\n            divisors.push_back(i);\n        }\n    }\n    if(divisors.size()\
    \ == 1) {\n        return n;\n    }\n    long result = 1;\n    for(int i=1; i<=n;\
    \ i++) {\n        if(divisors.size() >= 2) {\n            int max_size = max(divisors.size()-2,\
    \ 1);\n            vector<int> sub;\n            for(int j=0; j<max_size; j++)\
    \ {\n                sub.push_back(i/divisors[j]);\n            }\n          \
    \  result = max(result, largest_divisor(min(sub)));\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1pyl9ua0.cpp: In function \u2018long int largest_divisor(long int)\u2019\
    :\n/tmp/tmp1pyl9ua0.cpp:5:5: error: \u2018vector\u2019 was not declared in this\
    \ scope\n    5 |     vector<int> divisors;\n      |     ^~~~~~\n/tmp/tmp1pyl9ua0.cpp:5:5:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp1pyl9ua0.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:386:11:\
    \ note:   \u2018std::vector\u2019\n  386 |     class vector : protected _Vector_base<_Tp,\
    \ _Alloc>\n      |           ^~~~~~\nIn file included from /usr/include/c++/9/functional:62,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp1pyl9ua0.cpp:2:\n/usr/include/c++/9/vector:90:13:\
    \ note:   \u2018std::pmr::vector\u2019\n   90 |       using vector = std::vector<_Tp,\
    \ polymorphic_allocator<_Tp>>;\n      |             ^~~~~~\n/tmp/tmp1pyl9ua0.cpp:5:12:\
    \ error: expected primary-expression before \u2018int\u2019\n    5 |     vector<int>\
    \ divisors;\n      |            ^~~\n/tmp/tmp1pyl9ua0.cpp:8:13: error: \u2018\
    divisors\u2019 was not declared in this scope\n    8 |             divisors.push_back(i);\n\
    \      |             ^~~~~~~~\n/tmp/tmp1pyl9ua0.cpp:11:8: error: \u2018divisors\u2019\
    \ was not declared in this scope\n   11 |     if(divisors.size() == 1) {\n   \
    \   |        ^~~~~~~~\n/tmp/tmp1pyl9ua0.cpp:16:12: error: \u2018divisors\u2019\
    \ was not declared in this scope\n   16 |         if(divisors.size() >= 2) {\n\
    \      |            ^~~~~~~~\n/tmp/tmp1pyl9ua0.cpp:17:28: error: \u2018max\u2019\
    \ was not declared in this scope; did you mean \u2018std::max\u2019?\n   17 |\
    \             int max_size = max(divisors.size()-2, 1);\n      |             \
    \               ^~~\n      |  "
  stdout: ''
  timestamp: 1660092086
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    // Write your code here\n    long long int max_div = LONG_MAX;\n \
    \   for (int i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            max_div\
    \ = i;\n        }\n    }\n    return max_div;\n}\nint main() {\n    auto candidate\
    \ = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmp5moq0rs_: /tmp/tmp5moq0rs_.cpp:16: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092087
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long maxi = 0; // Initialize maxi to 0\n    // Traverse the range\
    \ of divisors to find the largest one\n    for (int i = 1; i < n; i++) // Start\
    \ from 1 and go upto n\n        if (n % i == 0) // If n is divisible by i, keep\
    \ it\n            maxi = i;\n    return maxi;\n}\nint main() {\n    auto candidate\
    \ = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092087
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n  // Write your code here\n  long max = 0, div = 0;\n  long temp = 1;\n\
    \  for (long i = 1; i <= n; i++) {\n    temp = temp * i;\n    if (temp % 2 !=\
    \ 0) {\n      max = temp;\n    }\n  }\n  cout << \"The largest number which divides\
    \ n evenly is \" << max << endl;\n  cout << \"The number which divides n evenly\
    \ is \" << div << endl;\n  return max;\n}\nint main() {\n    auto candidate =\
    \ largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpabhc5u2s.cpp: In function \u2018long int largest_divisor(long int)\u2019\
    :\n/tmp/tmpabhc5u2s.cpp:14:3: error: \u2018cout\u2019 was not declared in this\
    \ scope; did you mean \u2018std::cout\u2019?\n   14 |   cout << \"The largest\
    \ number which divides n evenly is \" << max << endl;\n      |   ^~~~\n      |\
    \   std::cout\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:75,\n\
    \                 from /tmp/tmpabhc5u2s.cpp:2:\n/usr/include/c++/9/iostream:61:18:\
    \ note: \u2018std::cout\u2019 declared here\n   61 |   extern ostream cout;  ///\
    \ Linked to standard output\n      |                  ^~~~\n/tmp/tmpabhc5u2s.cpp:14:69:\
    \ error: \u2018endl\u2019 was not declared in this scope; did you mean \u2018\
    std::endl\u2019?\n   14 |   cout << \"The largest number which divides n evenly\
    \ is \" << max << endl;\n      |                                             \
    \                        ^~~~\n      |                                       \
    \                              std::endl\nIn file included from /usr/include/c++/9/istream:39,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmpabhc5u2s.cpp:2:\n/usr/include/c++/9/ostream:599:5: note: \u2018std::endl\u2019\
    \ declared here\n  599 |     endl(basic_ostream<_CharT, _Traits>& __os)\n    \
    \  |     ^~~~\n"
  stdout: ''
  timestamp: 1660092086
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    assert(!(n%2));\n    long maxDiv=n;\n    for(int i=2;i<=n;i++)\n \
    \   {\n        if(maxDiv/i != n) maxDiv=i;\n    }\n    return maxDiv;\n}\nint\
    \ main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3)) ==\
    \ (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) == (5));\n\
    \    assert(candidate((100)) == (50));\n    assert(candidate((49)) == (7));\n\
    }\n"
  status: Exception
  stderr: 'tmp_146nsf9: /tmp/tmp_146nsf9.cpp:5: long int largest_divisor(long int):
    Assertion `!(n%2)'' failed.

    '
  stdout: ''
  timestamp: 1660092087
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long maxDiv = n, div = 0, i = 1;\n    // while i is a factor\n   \
    \ while (i <= maxDiv) {\n        if (n % i == 0) {\n            div = i;\n   \
    \         maxDiv = n / i;\n        }\n        i++;\n    }\n    return div;\n}\n\
    int main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: Exception
  stderr: 'tmp7l4vh0zd: /tmp/tmp7l4vh0zd.cpp:18: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092087
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n  assert(n != 0);\n  long res = n;\n  while(n % 2 == 0) n--;\n  while(n%2\
    \ == 0)\n    n/=2;\n  while(n%2 == 0)\n    n/=2;\n  while(n != 0) {\n    if(n\
    \ % 2 == 0) n--;\n    else n/=2;\n  }\n  return res;\n}\nint main() {\n    auto\
    \ candidate = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmpi8xx5oxa: /tmp/tmpi8xx5oxa.cpp:20: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092087
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n\t// Initialization\n\tlong maxDivisor = 1;\n\tlong currentDivisor = 1;\n\
    \tlong lastDivisor = 1;\n\n\t// Start calculating\n\twhile (n > 1) {\n\t\tif (n\
    \ % currentDivisor == 0) {\n\t\t\tcurrentDivisor++;\n\t\t\tif (currentDivisor\
    \ > lastDivisor) {\n\t\t\t\tmaxDivisor = lastDivisor;\n\t\t\t}\n\t\t} else {\n\
    \t\t\tcurrentDivisor = 1;\n\t\t\tlastDivisor = currentDivisor;\n\t\t}\n\t\tn--;\n\
    \t}\n\treturn maxDivisor;\n}\nint main() {\n    auto candidate = largest_divisor;\n\
    \    assert(candidate((3)) == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10))\
    \ == (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49))\
    \ == (7));\n}\n"
  status: Exception
  stderr: 'tmphgxr11v1: /tmp/tmphgxr11v1.cpp:29: int main(): Assertion `candidate((10))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660092087
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n\tif (n == 0) return 0;\n\tlong ans = 1;\n\twhile ((n % ans) == 0) {\n\
    \t\tans++;\n\t}\n\twhile (n > ans) {\n\t\tans = ans * 2;\n\t}\n\treturn ans;\n\
    }\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: Exception
  stderr: 'tmpw2__vvzv: /tmp/tmpw2__vvzv.cpp:17: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092087
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    int count = 0;\n    long max_div = 0;\n    while (n != 0) {\n    \
    \    if (n % 2 == 0) {\n            n = n / 2;\n            ++count;\n       \
    \ } else {\n            n = (3 * n) + 1; // odd case\n        }\n        if (count\
    \ > max_div) {\n            max_div = count;\n        }\n    }\n    return max_div;\n\
    }\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660092091
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long divisor = 1;\n    while (divisor < n)\n    {\n        divisor\
    \ *= 2;\n    }\n    return n - divisor;\n}\nint main() {\n    auto candidate =\
    \ largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmp0drw56th: /tmp/tmp0drw56th.cpp:14: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092087
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n    long greatest = 1;\n    long greatest_divisor = 1;\n    long temp;\n\
    \    while (greatest_divisor != n) {\n        temp = greatest_divisor;\n     \
    \   greatest_divisor = greatest;\n        greatest = temp;\n    }\n    return\
    \ greatest;\n}\nint main() {\n    auto candidate = largest_divisor;\n    assert(candidate((3))\
    \ == (1));\n    assert(candidate((7)) == (1));\n    assert(candidate((10)) ==\
    \ (5));\n    assert(candidate((100)) == (50));\n    assert(candidate((49)) ==\
    \ (7));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660092092
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\nlong largest_divisor(long\
    \ n) {\n\tlong max = n;\n\tfor (long i = 2; i <= max; ++i) {\n\t\tif (n % i ==\
    \ 0) {\n\t\t\tmax = i;\n\t\t}\n\t}\n\treturn max;\n}\nint main() {\n    auto candidate\
    \ = largest_divisor;\n    assert(candidate((3)) == (1));\n    assert(candidate((7))\
    \ == (1));\n    assert(candidate((10)) == (5));\n    assert(candidate((100)) ==\
    \ (50));\n    assert(candidate((49)) == (7));\n}\n"
  status: Exception
  stderr: 'tmpopbdh1p0: /tmp/tmpopbdh1p0.cpp:15: int main(): Assertion `candidate((3))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660092087

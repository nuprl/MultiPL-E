language: cpp
name: HumanEval_35_max_element
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long long maxIndex\
    \ = 0;\n    for (long i = 0; i < l.size(); i++) {\n        if (l[i] > l[maxIndex])\
    \ {\n            maxIndex = i;\n        }\n    }\n    return maxIndex;\n}\nint\
    \ main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: Exception
  stderr: 'tmpa0m3b3kj: /tmp/tmpa0m3b3kj.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3}))) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660092507
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long max = INT_MIN;\n\
    \    for (auto i : l) {\n        if (i > max) {\n            max = i;\n      \
    \  }\n    }\n    return max;\n}\nint main() {\n    auto candidate = max_element;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10}))) == (124));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092507
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long maxv = l[0];\n\
    \    for (auto it=l.begin()+1; it!=l.end(); it++) {\n        if (*it > maxv) {\n\
    \            maxv = *it;\n        }\n    }\n    return maxv;\n}\nint main() {\n\
    \    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092506
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long max = l[0];\n\
    \    for (auto i : l) {\n        if (i > max) {\n            max = i;\n      \
    \  }\n    }\n    return max;\n}\nint main() {\n    auto candidate = max_element;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10}))) == (124));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092507
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    std::sort(l.begin(),\
    \ l.end());\n    return l.back();\n}\nint main() {\n    auto candidate = max_element;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10}))) == (124));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092507
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long long max = 0;\n\
    \    for (long long &i : l) {\n        max = std::max(max, i);\n    }\n    return\
    \ max;\n}\nint main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpldrxnws6.cpp: In function \u2018long int max_element(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpldrxnws6.cpp:6:25: error: cannot bind non-const lvalue\
    \ reference of type \u2018long long int&\u2019 to an rvalue of type \u2018long\
    \ long int\u2019\n    6 |     for (long long &i : l) {\n      |              \
    \           ^\n"
  stdout: ''
  timestamp: 1660092506
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n        long max = l[0];\n\
    \        for (long i = 1; i < l.size(); i++) {\n                if (l[i] > max)\n\
    \                        max = l[i];\n        }\n        return max;\n}\nint main()\
    \ {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092507
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long max_ele = 0;\n\
    \    for (auto i = l.begin(); i != l.end(); i++)\n        max_ele = std::max(max_ele,\
    \ *i);\n    return max_ele;\n}\nint main() {\n    auto candidate = max_element;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10}))) == (124));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092507
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long max = l[0];\n\
    \    long index = 0;\n    for (auto i = l.begin() + 1; !l.empty(); i++, index++)\
    \ {\n        if (l[i] > max) max = l[i], index = i;\n    }\n    return index;\n\
    }\nint main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdr234o_l.cpp: In function \u2018long int max_element(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpdr234o_l.cpp:8:14: error: no match for \u2018operator[]\u2019\
    \ (operand types are \u2018std::vector<long int>\u2019 and \u2018__gnu_cxx::__normal_iterator<long\
    \ int*, std::vector<long int> >\u2019)\n    8 |         if (l[i] > max) max =\
    \ l[i], index = i;\n      |              ^\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpdr234o_l.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:1040:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::reference std::vector<_Tp,\
    \ _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = long int;\
    \ _Alloc = std::allocator<long int>; std::vector<_Tp, _Alloc>::reference = long\
    \ int&; std::vector<_Tp, _Alloc>::size_type = long unsigned int]\u2019\n 1040\
    \ |       operator[](size_type __n) _GLIBCXX_NOEXCEPT\n      |       ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_vector.h:1040:28: note:   no known conversion for\
    \ argument 1 from \u2018__gnu_cxx::__normal_iterator<long int*, std::vector<long\
    \ int> >\u2019 to \u2018std::vector<long int>::size_type\u2019 {aka \u2018long\
    \ unsigned int\u2019}\n 1040 |       operator[](size_type __n) _GLIBCXX_NOEXCEPT\n\
    \      |                  ~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:1058:7:\
    \ note: candidate: \u2018std::vector<_Tp, _Alloc>::const_reference std::vector<_Tp,\
    \ _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) const [with _Tp = long\
    \ int; _Alloc = std::allocator<long int>; std::vector<_Tp, _Alloc>::const_reference\
    \ = const long int&; std::vector<_Tp, _Alloc>::size_type = long unsigned int]\u2019\
    \n 1058 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT\n      |   \
    \    ^~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1058:28: note:   no known\
    \ conversion for argument 1 from \u2018__gnu_cxx::__normal_iterator<long int*"
  stdout: ''
  timestamp: 1660092506
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n  // Initialize max value\
    \ to the first element in the list.\n  long max_val = l.front();\n  // Set the\
    \ current max value to first element in the list.\n  long curr_max = l.front();\n\
    \  // Iterate through the remaining elements.\n  for (long i = 2; i < l.size();\
    \ i++) {\n    // Compare the current max element with the current element in the\
    \ list.\n    if (l[i] > curr_max) {\n      // Update the maximum value to the\
    \ current max element.\n      max_val = curr_max;\n    }\n    // Update the max\
    \ value to the current element.\n    curr_max = l[i];\n  }\n  // Return the max\
    \ value.\n  return max_val;\n}\nint main() {\n    auto candidate = max_element;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10}))) == (124));\n\
    }\n"
  status: Exception
  stderr: 'tmp8udz4mci: /tmp/tmp8udz4mci.cpp:24: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3}))) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660092507
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    std::sort(l.begin(),\
    \ l.end());\n    return l[l.size()-1];\n}\nint main() {\n    auto candidate =\
    \ max_element;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3})))\
    \ == (3));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5,\
    \ (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10})))\
    \ == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092507
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long res = 0;\n \
    \   for (long &i : l)\n    {\n        if (i > res)\n            res = i;\n   \
    \ }\n    return res;\n}\nint main() {\n    auto candidate = max_element;\n   \
    \ assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10}))) == (124));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092507
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long max = l[0];\n\
    \    for (auto i : l) {\n        if (i > max) max = i;\n    }\n    return max;\n\
    }\nint main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092507
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n  // Find minimum element\
    \ in the list\n  auto min_index = std::min_element(l.begin(), l.end());\n  //\
    \ Return maximum element\n  return std::max_element(l.begin(), min_index);\n}\n\
    int main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdzbm4wqm.cpp: In function \u2018long int max_element(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpdzbm4wqm.cpp:8:26: error: cannot convert \u2018__gnu_cxx::__normal_iterator<long\
    \ int*, std::vector<long int> >\u2019 to \u2018long int\u2019 in return\n    8\
    \ |   return std::max_element(l.begin(), min_index);\n      |          ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~\n\
    \      |                          |\n      |                          __gnu_cxx::__normal_iterator<long\
    \ int*, std::vector<long int> >\n"
  stdout: ''
  timestamp: 1660092507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    for (size_t i = 0;\
    \ i < l.size(); i++)\n        if (l[i] > l[i - 1])\n            return l[i];\n\
    \    return l[0];\n}\nint main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: Exception
  stderr: 'tmpl6p2su9q: /tmp/tmpl6p2su9q.cpp:12: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3}))) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660092507
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    // Write your code\
    \ here.\n    long max = l[0];\n    for (long i : l)\n        if (i > max)\n  \
    \          max = i;\n    return max;\n}\nint main() {\n    auto candidate = max_element;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10}))) == (124));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092507
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n\tassert(l.size() > 0);\n\
    \tlong max = l[0];\n\tlong index = 1;\n\tfor (long i = 1;i<l.size();i++) {\n\t\
    \tlong cur_max = l[i];\n\t\tif (cur_max > max) {\n\t\t\tindex = i;\n\t\t\tmax\
    \ = cur_max;\n\t\t}\n\t}\n\treturn max;\n}\nint main() {\n    auto candidate =\
    \ max_element;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3})))\
    \ == (3));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5,\
    \ (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10})))\
    \ == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092507
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n        long max_element\
    \ = 0;\n        long max_index = 0;\n        for (int i = 0; i < l.size(); ++i)\
    \ {\n                if (l[i] > max_element) {\n                        max_element\
    \ = l[i];\n                        max_index = i;\n                }\n       \
    \ }\n        return max_element;\n}\nint main() {\n    auto candidate = max_element;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10}))) == (124));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092506
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    assert(l.size() >\
    \ 0);\n    long max = l[0];\n    for (size_t i = 1; i < l.size(); ++i) {\n   \
    \     if (l[i] > max) {\n            max = l[i];\n        }\n    }\n    return\
    \ max;\n}\nint main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092507
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long max_element\
    \ = l[0];\n    for (long i = 1; i < l.size(); ++i)\n        if (l[i] > max_element)\n\
    \            max_element = l[i];\n    return max_element;\n}\nint main() {\n \
    \   auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092507
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    return *std::max_element(l.begin(),\
    \ l.end());\n}\nint main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092507
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n  long max = l[0];\n\
    \  for (long i = 1; i < l.size(); ++i)\n    if (l[i] > max)\n      max = l[i];\n\
    \  return max;\n}\nint main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092506
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    assert(l.size() !=\
    \ 0);\n    for (size_t i = 0; i < l.size(); i++) {\n        assert(l[i] >= 0);\n\
    \        if (l[i] >= l.back()) {\n            std::swap(l[i], l.back());\n   \
    \     }\n    }\n    long ans = l.back();\n    for (auto i : l) {\n        if (i\
    \ >= ans) ans = i;\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = max_element;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3})))\
    \ == (3));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5,\
    \ (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10})))\
    \ == (124));\n}\n"
  status: Exception
  stderr: 'tmpelhktg61: /tmp/tmpelhktg61.cpp:7: long int max_element(std::vector<long
    int>): Assertion `l[i] >= 0'' failed.

    '
  stdout: ''
  timestamp: 1660092507
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long max = INT_MIN;\n\
    \    for (long i = 0; i < l.size(); i++)\n        if (l[i] > max)\n          \
    \  max = l[i];\n    return max;\n}\nint main() {\n    auto candidate = max_element;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10}))) == (124));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092507
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    assert(l.size() >=\
    \ 1);\n    long max_element = l[0];\n    long max_pos = 0;\n    for (long pos\
    \ = 1; pos < l.size(); ++pos) {\n        if (l[pos] > max_element) {\n       \
    \     max_element = l[pos];\n            max_pos = pos;\n        }\n    }\n  \
    \  return max_element;\n}\nint main() {\n    auto candidate = max_element;\n \
    \   assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10}))) == (124));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092507
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long max = 0;\n \
    \   for (auto &i : l) {\n        if (i >= max) {\n            max = i;\n     \
    \   }\n    }\n    return max;\n}\nint main() {\n    auto candidate = max_element;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10}))) == (124));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092507
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long res = 0;\n \
    \   long cur = 0;\n    for (auto& it : l) {\n        if (it > cur) {\n       \
    \     res = it;\n            cur = it;\n        }\n    }\n    return res;\n}\n\
    int main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092507
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    auto it = std::max_element(l.begin(),\
    \ l.end());\n    if (it == l.end()) return 0; // empty list\n    return *it;\n\
    }\nint main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long max=l[0];\n\
    \    long index=0;\n    for(long i=1;i<l.size();i++){\n        if(l[i]>max){\n\
    \            max=l[i];\n            index=i;\n        }\n    }\n    return index;\n\
    }\nint main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: Exception
  stderr: 'tmpbrp390kf: /tmp/tmpbrp390kf.cpp:17: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3}))) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660092507
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long x = 0, y = 0,\
    \ z = 0;\n    for (auto &i : l) if (i > y) y = i;\n    for (auto &i : l) if (i\
    \ < x) x = i;\n    for (auto &i : l) if (i > z) z = i;\n    return z;\n}\nint\
    \ main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092507
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n  return *max_element(l.begin(),\
    \ l.end());\n}\nint main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092507
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    if(l.size()==0){\n\
    \        return 0;\n    }\n    long max = l[0];\n    for(long i=1; i<l.size();\
    \ i++){\n        if(l[i]>max){\n            max=l[i];\n        }\n    }\n    return\
    \ max;\n}\nint main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092507
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long max=INT_MIN;\n\
    \    for (long i:l)\n        if ( i>max)\n            max = i;\n    return max;\n\
    }\nint main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092507
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long maximum = -2;\n\
    \    long maxElement = -1;\n    for (long i = 0; i < l.size(); i++) {\n      \
    \  if (l[i] > max) {\n            maxElement = i;\n            maximum = l[i];\n\
    \        }\n    }\n    return maxElement;\n}\nint main() {\n    auto candidate\
    \ = max_element;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3})))\
    \ == (3));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5,\
    \ (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10})))\
    \ == (124));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqleegeii.cpp: In function \u2018long int max_element(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpqleegeii.cpp:8:20: error: \u2018max\u2019 was not declared\
    \ in this scope; did you mean \u2018std::max\u2019?\n    8 |         if (l[i]\
    \ > max) {\n      |                    ^~~\n      |                    std::max\n\
    In file included from /usr/include/c++/9/algorithm:62,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n                 from\
    \ /tmp/tmpqleegeii.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:3468:5: note: \u2018\
    std::max\u2019 declared here\n 3468 |     max(initializer_list<_Tp> __l, _Compare\
    \ __comp)\n      |     ^~~\n"
  stdout: ''
  timestamp: 1660092506
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    assert(l.size() >=\
    \ 2);\n    long max_ele = l[0];\n    for (long i = 1; i < l.size(); i++) {\n \
    \       if (max_ele > l[i])\n            max_ele = l[i];\n    }\n    return max_ele;\n\
    }\nint main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: Exception
  stderr: 'tmp_eiglxuk: /tmp/tmp_eiglxuk.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3}))) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660092507
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long max_element\
    \ = l[0];\n    long max_index = 0;\n    for (int i = 1; i < l.size(); ++i) {\n\
    \        if (l[i] > max_element) {\n            max_element = l[i];\n        \
    \    max_index = i;\n        }\n    }\n    return max_element;\n}\nint main()\
    \ {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092507
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n  long max = 0;\n  for\
    \ (auto it=l.begin();it!=l.end();it++) {\n    if (*it > max) {\n      max = *it;\n\
    \    }\n  }\n  return max;\n}\nint main() {\n    auto candidate = max_element;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10}))) == (124));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long long max = l[0];\n\
    \    long long pos = 0;\n    for (long i = 0; i < l.size(); i++) {\n        if\
    \ (l[i] > max) {\n            max = l[i];\n            pos = i;\n        }\n \
    \   }\n    return pos;\n}\nint main() {\n    auto candidate = max_element;\n \
    \   assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10}))) == (124));\n\
    }\n"
  status: Exception
  stderr: 'tmpfoe3up7g: /tmp/tmpfoe3up7g.cpp:17: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3}))) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660092507
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    // TODO: Add error\
    \ checking\n    long max = l[0];\n    for (size_t i = 1; i < l.size(); ++i) {\n\
    \        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n    return\
    \ max;\n}\nint main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092507
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n\tint i;\n\tlong ans\
    \ = l[0];\n\tfor (i = 1; i < l.size(); i++)\n\t\tif (l[i] > ans)\n\t\t\tans =\
    \ l[i];\n\treturn ans;\n}\nint main() {\n    auto candidate = max_element;\n \
    \   assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10}))) == (124));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092507
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long m = -long_MAX;\n\
    \    for (long &x: l) if (x > m) m = x;\n    return m;\n}\nint main() {\n    auto\
    \ candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpegcq78na.cpp: In function \u2018long int max_element(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpegcq78na.cpp:5:15: error: \u2018long_MAX\u2019 was not\
    \ declared in this scope\n    5 |     long m = -long_MAX;\n      |           \
    \    ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660092506
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long max_el = l.front();\n\
    \    for (long i : l)\n    {\n        if (i > max_el)\n            max_el = i;\n\
    \    }\n    return max_el;\n}\nint main() {\n    auto candidate = max_element;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10}))) == (124));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092507
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    assert(l.size() >\
    \ 0);\n    std::sort(l.begin(), l.end());\n    return l.back();\n}\nint main()\
    \ {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092507
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long max_val = l[0];\n\
    \    long max_pos = 0;\n    for (size_t i = 0; i < l.size(); ++i) {\n        if\
    \ (l[i] > max_val) {\n            max_val = l[i];\n            max_pos = i;\n\
    \        }\n    }\n    return max_pos;\n}\nint main() {\n    auto candidate =\
    \ max_element;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3})))\
    \ == (3));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5,\
    \ (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10})))\
    \ == (124));\n}\n"
  status: Exception
  stderr: 'tmp5y6961dl: /tmp/tmp5y6961dl.cpp:17: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3}))) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660092507
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    auto it = std::max_element(l.begin(),\
    \ l.end());\n    return *it;\n}\nint main() {\n    auto candidate = max_element;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10}))) == (124));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092506
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n   long max_element_idx\
    \ = 0, max_element = l[0];\n\n   for(size_t i = 1; i < l.size(); i++)\n   {\n\
    \      if(l[i] > l[max_element_idx])\n      {\n         max_element_idx = i;\n\
    \         max_element = l[i];\n      }\n   }\n   return max_element;\n}\nint main()\
    \ {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092507
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n\tlong max = INT_MIN;\n\
    \tfor (long i : l) {\n\t\tmax = std::max(i, max);\n\t}\n\treturn max;\n}\nint\
    \ main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092509
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    if (l.size() == 0)\
    \ return 0;\n    long res = l[0];\n    for (int i = 0; i < l.size(); i++) {\n\
    \        if (l[i] > res) res = l[i];\n    }\n    return res;\n}\nint main() {\n\
    \    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092509
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    // Write your code\
    \ here.\n    int i, j;\n    int max = INT_MIN;\n    for (i = 0; i < l.size() -\
    \ 1; i++) {\n        for (j = i + 1; j < l.size(); j++) {\n            if (l[i]\
    \ > l[j]) {\n                max = l[i];\n                break;\n           \
    \ }\n        }\n    }\n    return max;\n}\nint main() {\n    auto candidate =\
    \ max_element;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3})))\
    \ == (3));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5,\
    \ (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10})))\
    \ == (124));\n}\n"
  status: Exception
  stderr: 'tmpn5rhl1tj: /tmp/tmpn5rhl1tj.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3}))) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660092509
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    return std::max_element(l.begin(),\
    \ l.end());\n}\nint main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp993lj1dt.cpp: In function \u2018long int max_element(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp993lj1dt.cpp:5:28: error: cannot convert \u2018__gnu_cxx::__normal_iterator<long\
    \ int*, std::vector<long int> >\u2019 to \u2018long int\u2019 in return\n    5\
    \ |     return std::max_element(l.begin(), l.end());\n      |            ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~\n\
    \      |                            |\n      |                            __gnu_cxx::__normal_iterator<long\
    \ int*, std::vector<long int> >\n"
  stdout: ''
  timestamp: 1660092509
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    if (l.size() == 0)\
    \ {\n        return 0;\n    }\n    long max = l[0];\n    for (long i = 0; i <\
    \ l.size() - 1; i++) {\n        if (l[i] > max) {\n            max = l[i];\n \
    \       }\n    }\n    return max;\n}\nint main() {\n    auto candidate = max_element;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10}))) == (124));\n\
    }\n"
  status: Exception
  stderr: 'tmp60_6w4od: /tmp/tmp60_6w4od.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3}))) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660092509
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long max = l[0];\n\
    \    for (long i = 1; i < l.size(); ++i) {\n        if (l[i] > max)\n        \
    \    max = l[i];\n    }\n    return max;\n}\nint main() {\n    auto candidate\
    \ = max_element;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3})))\
    \ == (3));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5,\
    \ (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10})))\
    \ == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092509
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    // Your code here\n\
    \    std::vector<long>::iterator it_max;\n    long max = *std::max_element(l.begin(),\
    \ l.end());\n    it_max = std::max_element(l.begin(), l.end());\n    if (*it_max\
    \ > max)\n        max = *it_max;\n    return max;\n}\nint main() {\n    auto candidate\
    \ = max_element;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3})))\
    \ == (3));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5,\
    \ (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10})))\
    \ == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092509
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long max;\n    int\
    \ n = l.size();\n    for (long i = 0; i < n; i++) {\n        max = l[i];\n   \
    \     for (int j = i + 1; j < n; j++)\n            if (l[j] > max) max = l[j];\n\
    \    }\n    return max;\n}\nint main() {\n    auto candidate = max_element;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10}))) == (124));\n\
    }\n"
  status: Exception
  stderr: 'tmpd66sdszi: /tmp/tmpd66sdszi.cpp:17: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1,
    (long)-10}))) == (124)'' failed.

    '
  stdout: ''
  timestamp: 1660092510
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    assert(l.size() >=\
    \ 2);\n    long long largest = 0;\n    long long i = 0;\n    while (i < l.size())\
    \ {\n        if (l[i] > largest) {\n            largest = l[i];\n        }\n \
    \       i++;\n    }\n    return largest;\n}\nint main() {\n    auto candidate\
    \ = max_element;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3})))\
    \ == (3));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5,\
    \ (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10})))\
    \ == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092509
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n\tlong max_ele = l[0],\
    \ max_index = -1;\n\tfor (int i = 1; i < l.size(); i++)\n\t\tif (l[i] > max_ele)\n\
    \t\t\tmax_ele = l[i];\n\t\telse if (l[i] == max_ele)\n\t\t\tmax_index = i;\n\t\
    return max_ele;\n}\nint main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092509
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long max_val = std::numeric_limits<long>::min();\n\
    \    for (auto& e: l)\n    {\n        if(e > max_val)\n        {\n           \
    \ max_val = e;\n        }\n    }\n    return max_val;\n}\nint main() {\n    auto\
    \ candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092509
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long max = l[0];\n\
    \    long max_idx = -1;\n    for (long i = 1; i < l.size(); i++) {\n        if\
    \ (l[i] > max) {\n            max = l[i];\n            max_idx = i;\n        }\n\
    \    }\n    return max_idx;\n}\nint main() {\n    auto candidate = max_element;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10}))) == (124));\n\
    }\n"
  status: Exception
  stderr: 'tmp20u907p6: /tmp/tmp20u907p6.cpp:17: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3}))) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660092510
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long max = l[0];\n\
    \    for (long i = 1; i < l.size(); ++i) {\n        if (max < l[i]) max = l[i];\n\
    \    }\n    return max;\n}\nint main() {\n    auto candidate = max_element;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10}))) == (124));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092509
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long max_val = -long_MAX;\n\
    \    long index = 0;\n    long curr = 0;\n    for (auto val : l) {\n        if\
    \ (val > curr) {\n            index = val;\n            curr = val;\n        }\n\
    \    }\n    return index;\n}\nint main() {\n    auto candidate = max_element;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10}))) == (124));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpctsz70rr.cpp: In function \u2018long int max_element(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpctsz70rr.cpp:5:21: error: \u2018long_MAX\u2019 was not\
    \ declared in this scope\n    5 |     long max_val = -long_MAX;\n      |     \
    \                ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660092509
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n   assert(l.size() >\
    \ 0);\n   return *std::max_element(l.begin(), l.end());\n}\nint main() {\n   \
    \ auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092509
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long max = l[0],\
    \ max_pos = 0;\n    for (long i = 1; i < l.size(); i++)\n        if (l[i] > max)\
    \ {\n            max = l[i];\n            max_pos = i;\n        }\n    return\
    \ max_pos;\n}\nint main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: Exception
  stderr: 'tmp3pznyk13: /tmp/tmp3pznyk13.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3}))) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660092510
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long maximum = l[0];\n\
    \    for (auto i : l) {\n        if (i > maximum) maximum = i;\n    }\n    return\
    \ maximum;\n}\nint main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092509
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    auto it = std::max_element(l.begin(),\
    \ l.end());\n    return *it;\n}\nint main() {\n    auto candidate = max_element;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10}))) == (124));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092506
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\nlong long max = 0;\n\
    long long max = l[0];\nfor(long long i=1;i<l.size();i++){\nif(l[i] > max)\nmax\
    \ = l[i];\n}\nint main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgajvzxut.cpp: In function \u2018long int max_element(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpgajvzxut.cpp:6:11: error: redeclaration of \u2018long\
    \ long int max\u2019\n    6 | long long max = l[0];\n      |           ^~~\n/tmp/tmpgajvzxut.cpp:5:11:\
    \ note: \u2018long long int max\u2019 previously declared here\n    5 | long long\
    \ max = 0;\n      |           ^~~\n/tmp/tmpgajvzxut.cpp:11:12: error: a function-definition\
    \ is not allowed here before \u2018{\u2019 token\n   11 | int main() {\n     \
    \ |            ^\n/tmp/tmpgajvzxut.cpp:15:1: error: expected \u2018}\u2019 at\
    \ end of input\n   15 | }\n      | ^\n/tmp/tmpgajvzxut.cpp:4:39: note: to match\
    \ this \u2018{\u2019\n    4 | long max_element(std::vector<long> l) {\n      |\
    \                                       ^\n/tmp/tmpgajvzxut.cpp:15:1: warning:\
    \ no return statement in function returning non-void [-Wreturn-type]\n   15 |\
    \ }\n      | ^\n"
  stdout: ''
  timestamp: 1660092509
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    return std::max_element(l.begin(),\
    \ l.end());\n}\nint main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp993lj1dt.cpp: In function \u2018long int max_element(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp993lj1dt.cpp:5:28: error: cannot convert \u2018__gnu_cxx::__normal_iterator<long\
    \ int*, std::vector<long int> >\u2019 to \u2018long int\u2019 in return\n    5\
    \ |     return std::max_element(l.begin(), l.end());\n      |            ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~\n\
    \      |                            |\n      |                            __gnu_cxx::__normal_iterator<long\
    \ int*, std::vector<long int> >\n"
  stdout: ''
  timestamp: 1660092509
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long max = l[0];\n\
    \    for (long i : l) {\n        if (i > max) {\n            max = i;\n      \
    \  }\n    }\n    return max;\n}\nint main() {\n    auto candidate = max_element;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10}))) == (124));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092509
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long max_element\
    \ = l[0];\n    long index = 0, j = 0;\n    for (long i = 1, n = l.size(); i !=\
    \ n; ++i) {\n        if (l[i] > max_element) {\n            max_element = l[i];\n\
    \            index = j;\n        }\n        if (l[i] < max_element) {\n      \
    \      ++j;\n        }\n    }\n    return max_element;\n}\nint main() {\n    auto\
    \ candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092509
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long res = INT_MIN;\n\
    \    int i = 0;\n    while (i < l.size()) {\n        if (l[i] > res) {\n     \
    \       res = l[i];\n        }\n        i++;\n    }\n    return res;\n}\nint main()\
    \ {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092509
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long largest = INT_MIN;\n\
    \    for (long i = 0; i < l.size(); i++) {\n        if (l[i] > largest)\n    \
    \        largest = l[i];\n    }\n    return largest;\n}\nint main() {\n    auto\
    \ candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092509
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long max_val = -1LL;\n\
    \    // iterate over list from end to beginning\n    for (long i = l.size() -\
    \ 1; i >= 0; i--) {\n        // compare the elements\n        if (l[i] > max_val)\
    \ {\n            max_val = l[i];\n        }\n    }\n    return max_val;\n}\nint\
    \ main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092509
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long ans = l[0];\n\
    \    for (int i = 1; i < l.size(); i++) {\n        if (l[i] > ans)\n         \
    \   ans = l[i];\n    }\n    return ans;\n}\nint main() {\n    auto candidate =\
    \ max_element;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3})))\
    \ == (3));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5,\
    \ (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10})))\
    \ == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092509
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    int len = l.size();\n\
    \    // Return minimum element, if list is empty.\n    if (len == 0) return 0;\n\
    \    long max = l[0];\n    for (int i = 1; i < len; i++) {\n        if (l[i] >\
    \ max) {\n            max = l[i];\n        }\n    }\n    return max;\n}\nint main()\
    \ {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092509
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long max_element\
    \ = 0;\n    for (long i = 1; i < l.size(); i++) {\n        if (l[i] < max_element)\
    \ {\n            max_element = l[i];\n        }\n    }\n    return max_element;\n\
    }\nint main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: Exception
  stderr: 'tmp4x1aixfi: /tmp/tmp4x1aixfi.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3}))) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660092510
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long max = l.front();\n\
    \    for(long i = 1; i < l.size(); i++) {\n        if(max < l[i]) max = l[i];\n\
    \    }\n    return max;\n}\nint main() {\n    auto candidate = max_element;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10}))) == (124));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092509
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long max = l[0];\n\
    \    for (int i = 1; i < l.size(); i++) {\n        if (l[i] > max) {\n       \
    \     max = l[i];\n        }\n    }\n    return max;\n}\nint main() {\n    auto\
    \ candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092509
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long max;\n    max\
    \ = l[0];\n    for (long i=1; i<l.size(); i++) {\n        if (max < l[i]) max\
    \ = l[i];\n    }\n    return max;\n}\nint main() {\n    auto candidate = max_element;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10}))) == (124));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092509
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n   auto it = l.begin();\n\
    \   long maxval = 0;\n   for(; it != l.end(); ++it) if(*it > maxval) maxval =\
    \ *it;\n   return maxval;\n}\nint main() {\n    auto candidate = max_element;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10}))) == (124));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092509
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long max = l[0];\n\
    \    for (long i = 1; i < l.size(); i++)\n        if (l[i] > max) max = l[i];\n\
    \    return max;\n}\nint main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092509
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    auto f = [](const\
    \ long x) { return x < 0; };\n    return std::max_element(l.begin(), l.end(),\
    \ f);\n}\nint main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5rzn2mr9.cpp: In function \u2018long int max_element(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp5rzn2mr9.cpp:6:28: error: cannot convert \u2018__gnu_cxx::__normal_iterator<long\
    \ int*, std::vector<long int> >\u2019 to \u2018long int\u2019 in return\n    6\
    \ |     return std::max_element(l.begin(), l.end(), f);\n      |            ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~\n\
    \      |                            |\n      |                            __gnu_cxx::__normal_iterator<long\
    \ int*, std::vector<long int> >\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:71,\n\
    \                 from /usr/include/c++/9/bits/specfun.h:45,\n               \
    \  from /usr/include/c++/9/cmath:1927,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmp5rzn2mr9.cpp:2:\n/usr/include/c++/9/bits/predefined_ops.h:\
    \ In instantiation of \u2018constexpr bool __gnu_cxx::__ops::_Iter_comp_iter<_Compare>::operator()(_Iterator1,\
    \ _Iterator2) [with _Iterator1 = __gnu_cxx::__normal_iterator<long int*, std::vector<long\
    \ int> >; _Iterator2 = __gnu_cxx::__normal_iterator<long int*, std::vector<long\
    \ int> >; _Compare = max_element(std::vector<long int>)::<lambda(long int)>]\u2019\
    :\n/usr/include/c++/9/bits/stl_algo.h:5698:12:   required from \u2018constexpr\
    \ _ForwardIterator std::__max_element(_ForwardIterator, _ForwardIterator, _Compare)\
    \ [with _ForwardIterator = __gnu_cxx::__normal_iterator<long int*, std::vector<long\
    \ int> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<max_element(std::vector<long\
    \ int>)::<lambda(long int)> >]\u2019\n/usr/include/c++/9/bits/stl_algo.h:5749:43:\
    \   required from \u2018constexpr _FIter std::max_element(_FIter, _FIter, _Compare)\
    \ [with _FIter = __gnu_cxx::__normal_iterator<long int*, std::vector<long int>\
    \ >; _Compare = max_element(std::vector<long int>)::<lambda(long int)>]\u2019\n\
    /tmp/tmp5rzn2mr9.cpp:6:50:   required from here\n/usr/include/c++/9/bits/predefined_ops.h:143:18:\
    \ error: no match for call to \u2018(max_element(std::vector<long int>)::<lambda(long\
    \ int)>) (long int&, long int&)\u2019\n  143 |         { return bool(_M_"
  stdout: ''
  timestamp: 1660092509
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    // Initialize a dummy\
    \ vector with size equal to l.size()\n    std::vector<long> x;\n    x.assign(l.begin(),\
    \ l.end());\n\n    // Find the maximum in x and return\n    auto it = std::max_element(x.begin(),\
    \ x.end());\n    if (it == x.end()) return 0;\n    return *it;\n}\nint main()\
    \ {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092509
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    if (l.empty()) throw\
    \ std::runtime_error(\"Empty List!\");\n    long max = l[0];\n    for (long i\
    \ = 1, j; i < l.size(); i++)\n        if (l[i] > max) max = l[i];\n    for (j\
    \ = i; j > 0; j--)\n        if (l[j-1] > max) max = l[j-1];\n    return max;\n\
    }\nint main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbolceiiw.cpp: In function \u2018long int max_element(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpbolceiiw.cpp:9:10: error: \u2018j\u2019 was not declared\
    \ in this scope\n    9 |     for (j = i; j > 0; j--)\n      |          ^\n/tmp/tmpbolceiiw.cpp:9:14:\
    \ error: \u2018i\u2019 was not declared in this scope\n    9 |     for (j = i;\
    \ j > 0; j--)\n      |              ^\n"
  stdout: ''
  timestamp: 1660092509
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n  // Write your code\
    \ here.\n  int n = l.size();\n  long max = 0;\n  for (int i = 0; i < n; i++) {\n\
    \    if (l[i] > max)\n      max = l[i];\n  }\n  return max;\n}\nint main() {\n\
    \    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092510
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n  std::sort(l.begin(),\
    \ l.end());\n  long maxv = l.back();\n  for (long i = l.size() - 1; i >= 0; i--)\
    \ {\n    if (l[i] > maxv) {\n      maxv = l[i];\n    }\n  }\n  return maxv;\n\
    }\nint main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092510
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    assert(l.size() >\
    \ 0);\n    long max_so_far = l[0];\n    for (long i = 0; i < l.size(); i++) {\n\
    \        if (max_so_far > l[i])\n            max_so_far = l[i];\n    }\n    return\
    \ max_so_far;\n}\nint main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: Exception
  stderr: 'tmp7_qq60d4: /tmp/tmp7_qq60d4.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3}))) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660092510
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    assert(l.size() >\
    \ 0);\n    return std::max_element(l.begin(), l.end());\n}\nint main() {\n   \
    \ auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpty3rkizc.cpp: In function \u2018long int max_element(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpty3rkizc.cpp:6:28: error: cannot convert \u2018__gnu_cxx::__normal_iterator<long\
    \ int*, std::vector<long int> >\u2019 to \u2018long int\u2019 in return\n    6\
    \ |     return std::max_element(l.begin(), l.end());\n      |            ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~\n\
    \      |                            |\n      |                            __gnu_cxx::__normal_iterator<long\
    \ int*, std::vector<long int> >\n"
  stdout: ''
  timestamp: 1660092510
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long maxv = l[0],\
    \ maxi = 1;\n    for (size_t i = 0; i < l.size(); i++)\n    {\n        if (l[i]\
    \ > maxv)\n        {\n            maxv = l[i];\n            maxi = i;\n      \
    \  }\n    }\n    return maxv;\n}\nint main() {\n    auto candidate = max_element;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10}))) == (124));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092510
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    int n = l.size();\n\
    \    if (n == 0) return 0;\n    long max = l[0];\n    for (int i = 1; i < n; i++)\
    \ {\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n  \
    \  return max;\n}\nint main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092510
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n  int max_index = 0;\n\
    \  int max_value = -1;\n  for (int i = 0; i < l.size(); ++i) {\n    if (l[i] >\
    \ max_value) {\n      max_value = l[i];\n      max_index = i;\n    }\n  }\n  return\
    \ max_value;\n}\nint main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092510
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    // Your code goes\
    \ here\n}\nint main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: Exception
  stderr: 'tmp6fihly5z: /tmp/tmp6fihly5z.cpp:9: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3}))) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660092510
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    // TODO: Your code\
    \ here\n    long a = 0, b = 0, max_idx = 0;\n    for( int i = 0; i < l.size()\
    \ ; i++){\n        if(l[i] > max_idx ){\n            max_idx = l[i];\n       \
    \ }\n        if(l[i] < a){\n            a = l[i];\n        }\n        if(l[i]\
    \ > b){\n            b = l[i];\n        }\n    }\n    return max_idx;\n}\nint\
    \ main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092510
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long max,x,i;\n \
    \   max = l[0];\n    for(i=1; i<l.size(); i++)\n        if(l[i]>max)\n       \
    \     max = l[i];\n    return max;\n}\nint main() {\n    auto candidate = max_element;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10}))) == (124));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092510
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long max = 0,i;\n\
    \    for(i=0;i<l.size();i++) {\n        max = max > l[i]?max:l[i];\n    }\n  \
    \  return max;\n}\nint main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092510
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    auto it = std::max_element(l.begin(),\
    \ l.end());\n    if (it == l.end())\n        return 0;\n    return *it;\n}\nint\
    \ main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092510
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n  int n = l.size();\n\
    \  if (n != 0)\n    return l[0];\n  else\n    throw std::runtime_error(\"Empty\
    \ list.\");\n}\nint main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: Exception
  stderr: 'tmpe2kxiuhu: /tmp/tmpe2kxiuhu.cpp:13: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3}))) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660092512
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long max = l[0];\n\
    \    for (int i = 1; i < l.size(); ++i) {\n        if (l[i] > max) max = l[i];\n\
    \    }\n    return max;\n}\nint main() {\n    auto candidate = max_element;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10}))) == (124));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092511
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long max = std::numeric_limits<long\
    \ long int>::max();\n    for (auto & i : l) {\n        if (i > max) {\n      \
    \      max = i;\n        }\n    }\n    return max;\n}\nint main() {\n    auto\
    \ candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: Exception
  stderr: 'tmpahwcsbax: /tmp/tmpahwcsbax.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3}))) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660092512
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    // Sorting vector\
    \ using default comparator\n    std::sort(l.begin(), l.end());\n    // return\
    \ last element\n    return l.back();\n}\nint main() {\n    auto candidate = max_element;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10}))) == (124));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092511
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long max = INT_MIN;\n\
    \    for (size_t i = 0; i < l.size(); i++)\n        max = std::max(max, l[i]);\n\
    \    return max;\n}\nint main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092511
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    // Write your code\
    \ here.\n\tstd::size_t min_idx = 0, max_idx = 0;\n\tlong long max_val = INT_MIN;\n\
    \tfor (std::size_t i = 0; i < l.size(); ++i) {\n\t\tif (max_val < l[i]) max_val\
    \ = l[i];\n\t\tif (l[i] < l[max_idx]) {\n\t\t\tmax_idx = i;\n\t\t}\n\t}\n\tif\
    \ (max_val != INT_MIN) return max_val;\n\telse return l[max_idx];\n}\nint main()\
    \ {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092511
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long max = INT_MIN;\n\
    \    for (long i : l) {\n        if (i > max) {\n            max = i;\n      \
    \  }\n    }\n    return max;\n}\nint main() {\n    auto candidate = max_element;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10}))) == (124));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092512
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n        long res = 0;\n\
    \        for (long i = 1; i < l.size(); ++i) {\n                if (l[i] > l[i\
    \ - 1]) {\n                        res = l[i];\n                }\n        }\n\
    \        return res;\n}\nint main() {\n    auto candidate = max_element;\n   \
    \ assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10}))) == (124));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092511
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    // Your code goes\
    \ here\n}\nint main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: Exception
  stderr: 'tmp6fihly5z: /tmp/tmp6fihly5z.cpp:9: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3}))) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660092510
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n// Write your code here.\n\
    }\nint main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: Exception
  stderr: 'tmpt9gimwqr: /tmp/tmpt9gimwqr.cpp:9: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3}))) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660092512
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    std::sort(l.begin(),\
    \ l.end());\n    return *std::max_element(l.begin(), l.end()); \n}\nint main()\
    \ {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092512
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long max_ele = 0;\n\
    \    long max_idx = -1;\n    for (int i = 0; i < l.size(); i++) {\n        if\
    \ (l[i] > max_ele) {\n            max_ele = l[i];\n            max_idx = i;\n\
    \        }\n    }\n    return max_ele;\n}\nint main() {\n    auto candidate =\
    \ max_element;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3})))\
    \ == (3));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5,\
    \ (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10})))\
    \ == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092512
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long maxVal=l[0];\n\
    \    for (auto i : l)\n    {\n        if(maxVal>i)\n            maxVal = i;\n\
    \    }\n    return maxVal;\n}\nint main() {\n    auto candidate = max_element;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10}))) == (124));\n\
    }\n"
  status: Exception
  stderr: 'tmpjxyshzyd: /tmp/tmpjxyshzyd.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3}))) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660092512
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n  std::sort(l.begin(),\
    \ l.end());\n  return l.back();\n}\nint main() {\n    auto candidate = max_element;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10}))) == (124));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092512
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long max = l[0];\n\
    \    for (int i = 0; i < l.size(); i++)\n        if (l[i] > max)\n           \
    \ max = l[i];\n    return max;\n}\nint main() {\n    auto candidate = max_element;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10}))) == (124));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092512
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long max = INT_MIN;\n\
    \    for (long i : l)\n        if (i > max)\n            max = i;\n    return\
    \ max;\n}\nint main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092512
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n  long max = 0;\n  for\
    \ (size_t i = 0; i < l.size(); ++i) {\n    if (l[i] > max) {\n      max = l[i];\n\
    \    }\n  }\n  return max;\n}\nint main() {\n    auto candidate = max_element;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10}))) == (124));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092512
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    assert(l.size() >\
    \ 0);\n    long max_val = 0;\n    for (long i : l) {\n        if (i > max_val)\n\
    \            max_val = i;\n    }\n    return max_val;\n}\nint main() {\n    auto\
    \ candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092512
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long min = l[0];\n\
    \    long max = l[0];\n    for (long i = 0; i < l.size(); ++i) {\n        if (l[i]\
    \ < min) {\n            min = l[i];\n        }\n        if (l[i] > max) {\n  \
    \          max = l[i];\n        }\n    }\n    return max;\n}\nint main() {\n \
    \   auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092512
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long long max=-10000000000000LL,\
    \ min=0;\n    for(auto it=l.begin();it!=l.end();++it){\n        if(*it>max){\n\
    \            max=*it;\n        }\n        if(*it<min){\n            min=*it;\n\
    \        }\n    }\n    return max;\n}\nint main() {\n    auto candidate = max_element;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10}))) == (124));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092512
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    std::stable_sort(l.begin(),\
    \ l.end());\n    return *std::max_element(l.begin(), l.end());\n}\nint main()\
    \ {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092512
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long ans = l[0];\n\
    \    for (long i = 1; i < l.size(); i++)\n        if (l[i] > ans)\n          \
    \  ans = l[i];\n    return ans;\n}\nint main() {\n    auto candidate = max_element;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10}))) == (124));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092512
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long max = l[0];\n\
    \    for (long i : l)\n        if (i > max) max = i;\n    return max;\n}\nint\
    \ main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092512
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    return std::max_element(l.begin(),\
    \ l.end());\n}\nint main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp993lj1dt.cpp: In function \u2018long int max_element(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp993lj1dt.cpp:5:28: error: cannot convert \u2018__gnu_cxx::__normal_iterator<long\
    \ int*, std::vector<long int> >\u2019 to \u2018long int\u2019 in return\n    5\
    \ |     return std::max_element(l.begin(), l.end());\n      |            ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~\n\
    \      |                            |\n      |                            __gnu_cxx::__normal_iterator<long\
    \ int*, std::vector<long int> >\n"
  stdout: ''
  timestamp: 1660092509
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n  std::sort(l.begin(),\
    \ l.end());\n  return l.back();\n}\nint main() {\n    auto candidate = max_element;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10}))) == (124));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092512
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long max_val = 0;\n\
    \    long min_val = INT_MIN;\n\n    for (long elem : l) {\n        if (elem >\
    \ max_val) {\n            max_val = elem;\n        } else if (elem < min_val)\
    \ {\n            min_val = elem;\n        }\n    }\n    return max_val;\n}\nint\
    \ main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092512
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long max_val = std::numeric_limits<long\
    \ int>::min();\n    long min_val = std::numeric_limits<long int>::max();\n   \
    \ for (long i = 0; i < l.size(); i++) {\n        if (l[i] > max_val) {\n     \
    \       max_val = l[i];\n        }\n        if (l[i] < min_val) {\n          \
    \  min_val = l[i];\n        }\n    }\n    return max_val;\n}\nint main() {\n \
    \   auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092512
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long max;\n    long\
    \ index = std::distance(l.begin(), std::max_element(l.begin(), l.end()));\n  \
    \  if (index != 0)\n        max = l[index - 1];\n    else\n        max = l.back();\n\
    \    return max;\n}\nint main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: Exception
  stderr: 'tmpgj9w6uij: /tmp/tmpgj9w6uij.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3}))) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660092512
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n\tint n = l.size();\n\
    \tif (n<0) return -1;\n\tint max_index = n-1;\n\tlong max_element = l[0];\n\t\
    for (int i=1; i<n; i++) {\n\t\tif (l[i] > max_element) {\n\t\t\tmax_element =\
    \ l[i];\n\t\t\tmax_index = i;\n\t\t}\n\t}\n\treturn max_element;\n}\nint main()\
    \ {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092512
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    // Initialize max\
    \ as first element of array.\n    long max = l[0];\n    for (long i : l)\n   \
    \     if (i > max)\n            max = i;\n    return max;\n}\nint main() {\n \
    \   auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092512
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long max = INT_MIN;\n\
    \    for (auto i : l) {\n        if (i > max) {\n            max = i;\n      \
    \  }\n    }\n    return max;\n}\nint main() {\n    auto candidate = max_element;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10}))) == (124));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092507
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    auto it = std::max_element(l.begin(),\
    \ l.end());\n    return (it != l.end()) ? it->first : 0;\n}\nint main() {\n  \
    \  auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppinth6za.cpp: In function \u2018long int max_element(std::vector<long\
    \ int>)\u2019:\n/tmp/tmppinth6za.cpp:6:34: error: request for member \u2018first\u2019\
    \ in \u2018* it.__gnu_cxx::__normal_iterator<long int*, std::vector<long int>\
    \ >::operator->()\u2019, which is of non-class type \u2018long int\u2019\n   \
    \ 6 |     return (it != l.end()) ? it->first : 0;\n      |                   \
    \               ^~~~~\n"
  stdout: ''
  timestamp: 1660092512
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    // initialize variables\n\
    \    int left = 0, right = l.size() - 1;\n    // check if list is empty\n    if\
    \ (l.size() == 0)\n        return 0;\n    // search for the maximum\n    while\
    \ (left < right) {\n        int mid = (left + right) / 2;\n        if (l[mid]\
    \ > l[right])\n            right = mid;\n        else\n            left = mid\
    \ + 1;\n    }\n    return l[left];\n}\nint main() {\n    auto candidate = max_element;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10}))) == (124));\n\
    }\n"
  status: Exception
  stderr: 'tmpx3xi2psv: /tmp/tmpx3xi2psv.cpp:23: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1,
    (long)-10}))) == (124)'' failed.

    '
  stdout: ''
  timestamp: 1660092512
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n  // Find the length\
    \ of vector\n  int n = l.size();\n  long max = 0;\n  // Loop over vector and update\
    \ max element\n  for (int i = 0; i<n; i++) {\n    if (l[i] > max)\n      max =\
    \ l[i];\n  }\n  return max;\n}\nint main() {\n    auto candidate = max_element;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10}))) == (124));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092512
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    int n = l.size();\n\
    \    long max = l[0];\n    for (std::size_t i = 1; i < n; ++i) {\n        if (l[i]\
    \ > max) {\n            max = l[i];\n        }\n    }\n    return max;\n}\nint\
    \ main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092512
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n  long max;\n  long max_idx\
    \ = 0;\n  for (size_t i = 0; i < l.size(); ++i) {\n    if (l[i] > max) {\n   \
    \   max = l[i];\n      max_idx = i;\n    }\n  }\n  return max;\n}\nint main()\
    \ {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: Exception
  stderr: 'tmpj9_6yb3j: /tmp/tmpj9_6yb3j.cpp:17: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3}))) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660092513
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long max = l[0];\n\
    \    for (size_t i = 1; i < l.size(); ++i)\n        if (l[i] > max) max = l[i];\n\
    \    return max;\n}\nint main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092512
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long max_val = std::numeric_limits<long\
    \ >::min();\n    for (long i : l)\n        if (i > max_val)\n            max_val\
    \ = i;\n    return max_val;\n}\nint main() {\n    auto candidate = max_element;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10}))) == (124));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092512
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long max = l[0];\n\
    \    long index = 0;\n    for (auto i : l) {\n        if (i > max) {\n       \
    \     max = i;\n            index = i;\n        }\n    }\n    return index;\n\
    }\nint main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092512
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    // Your code goes\
    \ here.\n    // Write your code here.\n    // For instance, you can use the following\
    \ loop to find the max element:\n    for (auto &elem : l) {\n        if (elem\
    \ > max_elem) {\n            max_elem = elem;\n        }\n    }\n    return max_elem;\n\
    }\nint main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcyjt3x8a.cpp: In function \u2018long int max_element(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpcyjt3x8a.cpp:9:20: error: \u2018max_elem\u2019 was not\
    \ declared in this scope; did you mean \u2018max_element\u2019?\n    9 |     \
    \    if (elem > max_elem) {\n      |                    ^~~~~~~~\n      |    \
    \                max_element\n/tmp/tmpcyjt3x8a.cpp:13:12: error: \u2018max_elem\u2019\
    \ was not declared in this scope; did you mean \u2018max_element\u2019?\n   13\
    \ |     return max_elem;\n      |            ^~~~~~~~\n      |            max_element\n"
  stdout: ''
  timestamp: 1660092512
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\nlong max = l[0];\nfor\
    \ (int i = 1; i < l.size(); i++)\nif (max < l[i])\nmax = l[i];\nreturn max;\n\
    }\nint main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092512
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    assert(l.size()>0);\n\
    \    long max = l[0];\n    for(long i=1; i<l.size(); i++)\n        if(l[i]>max)\n\
    \            max = l[i];\n    return max;\n}\nint main() {\n    auto candidate\
    \ = max_element;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3})))\
    \ == (3));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5,\
    \ (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10})))\
    \ == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092512
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long largest = 0;\n\
    \    long index = 0;\n    for(long i = 0; i < l.size(); i++) {\n        if(l[i]\
    \ > largest) {\n            largest = l[i];\n            index = i;\n        }\n\
    \    }\n    return index;\n}\nint main() {\n    auto candidate = max_element;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10}))) == (124));\n\
    }\n"
  status: Exception
  stderr: 'tmpguid36fw: /tmp/tmpguid36fw.cpp:17: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3}))) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660092513
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    std::sort(l.begin(),\
    \ l.end());\n    return l.back();\n}\nint main() {\n    auto candidate = max_element;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10}))) == (124));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092507
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n  // Initialize max with\
    \ first element of list.\n  long max = l[0];\n  // Go through remaining elements\
    \ of list.\n  for (size_t i = 1; i < l.size(); ++i) {\n    // If current element\
    \ is less than max, update max.\n    if (l[i] > max) {\n      max = l[i];\n  \
    \  }\n  }\n  // Return max.\n  return max;\n}\nint main() {\n    auto candidate\
    \ = max_element;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3})))\
    \ == (3));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5,\
    \ (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10})))\
    \ == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092512
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n   long max = INT_MIN;\n\
    \   for (long i = 0; i < l.size(); ++i) {\n      if (max < l[i]) {\n         max\
    \ = l[i];\n      }\n   }\n   return max;\n}\nint main() {\n    auto candidate\
    \ = max_element;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3})))\
    \ == (3));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5,\
    \ (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10})))\
    \ == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092512
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long max_element\
    \ = *max_element(l.begin(), l.end());\n    return max_element;\n}\nint main()\
    \ {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmps3khejiw.cpp: In function \u2018long int max_element(std::vector<long\
    \ int>)\u2019:\n/tmp/tmps3khejiw.cpp:5:55: error: \u2018max_element\u2019 cannot\
    \ be used as a function\n    5 |     long max_element = *max_element(l.begin(),\
    \ l.end());\n      |                                                       ^\n"
  stdout: ''
  timestamp: 1660092512
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long max = l[0];\n\
    \    for (long i = 1; i < l.size(); i++)\n        if (l[i] > max)\n          \
    \  max = l[i];\n    return max;\n}\nint main() {\n    auto candidate = max_element;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10}))) == (124));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092512
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long max_elem = 0;\n\
    \    long curr = 0;\n    for (size_t i = 0; i < l.size(); ++i) {\n        if (l[i]\
    \ > max_elem) {\n            max_elem = l[i];\n            curr = i;\n       \
    \ }\n    }\n    return max_elem;\n}\nint main() {\n    auto candidate = max_element;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10}))) == (124));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092512
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long max = INT_MIN;\n\
    \    for (long i = 0; i < l.size(); i++) {\n        long curr = l[i];\n      \
    \  if (curr <= max) {\n            break;\n        }\n        max = curr;\n  \
    \  }\n    return max;\n}\nint main() {\n    auto candidate = max_element;\n  \
    \  assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10}))) == (124));\n\
    }\n"
  status: Exception
  stderr: 'tmpscmq47fl: /tmp/tmpscmq47fl.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1,
    (long)-10}))) == (124)'' failed.

    '
  stdout: ''
  timestamp: 1660092513
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    // Write your code\
    \ here\n}\nint main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: Exception
  stderr: 'tmpo3ir7um3: /tmp/tmpo3ir7um3.cpp:9: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3}))) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660092513
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n   assert(l.size()>0);\n\
    \   long m=l[0];\n   long n=1;\n   for(auto &e:l) \n   { \n       n=max(e,n);\n\
    \       m=min(m,e);\n   }\n   return n;\n}\nint main() {\n    auto candidate =\
    \ max_element;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3})))\
    \ == (3));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5,\
    \ (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10})))\
    \ == (124));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjdcwiohn.cpp: In function \u2018long int max_element(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpjdcwiohn.cpp:10:10: error: \u2018max\u2019 was not declared\
    \ in this scope; did you mean \u2018std::max\u2019?\n   10 |        n=max(e,n);\n\
    \      |          ^~~\n      |          std::max\nIn file included from /usr/include/c++/9/algorithm:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpjdcwiohn.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:3468:5:\
    \ note: \u2018std::max\u2019 declared here\n 3468 |     max(initializer_list<_Tp>\
    \ __l, _Compare __comp)\n      |     ^~~\n/tmp/tmpjdcwiohn.cpp:11:10: error: \u2018\
    min\u2019 was not declared in this scope; did you mean \u2018std::min\u2019?\n\
    \   11 |        m=min(m,e);\n      |          ^~~\n      |          std::min\n\
    In file included from /usr/include/c++/9/algorithm:62,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n                 from\
    \ /tmp/tmpjdcwiohn.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:3456:5: note: \u2018\
    std::min\u2019 declared here\n 3456 |     min(initializer_list<_Tp> __l, _Compare\
    \ __comp)\n      |     ^~~\n"
  stdout: ''
  timestamp: 1660092514
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n  long max_element =\
    \ 0;\n  for (int i = 0; i < l.size(); i++) {\n    if (l[i] > max_element)\n  \
    \    max_element = l[i];\n  }\n  return max_element;\n}\nint main() {\n    auto\
    \ candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092514
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    if(l.empty()){\n\
    \        return 0;\n    }\n    std::sort(l.begin(), l.end());\n    return l.back();\n\
    }\nint main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092514
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n  // Initialize min and\
    \ max elements to avoid undefined behaviour.\n  long min_element = std::numeric_limits<long>::max();\n\
    \  long max_element = std::numeric_limits<long>::min();\n  for (long i : l) {\n\
    \    if (i < min_element) {\n      min_element = i;\n    }\n    if (i > max_element)\
    \ {\n      max_element = i;\n    }\n  }\n  return max_element;\n}\nint main()\
    \ {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092514
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long max = INT_MIN;\n\
    \    for (int i = 0; i < l.size(); i++)\n    {\n        if (l[i] > max)\n    \
    \        max = l[i];\n    }\n    return max;\n}\nint main() {\n    auto candidate\
    \ = max_element;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3})))\
    \ == (3));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5,\
    \ (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10})))\
    \ == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092514
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long max = l[0];\n\
    \    for (long i = 1; i < l.size(); i++) {\n        if (l[i] > max)\n        \
    \    max = l[i];\n    }\n    return max;\n}\nint main() {\n    auto candidate\
    \ = max_element;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3})))\
    \ == (3));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5,\
    \ (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10})))\
    \ == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092514
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    // Initialize maximum.\n\
    \    long max = l[0];\n    for (long i = 0; i < l.size(); i++)\n        if (l[i]\
    \ > max)\n            max = l[i];\n    return max;\n}\nint main() {\n    auto\
    \ candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092514
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long res = 0;\n \
    \   for (long k : l) {\n        if (k > res)\n            k = k;\n    }\n    return\
    \ res;\n}\nint main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: Exception
  stderr: 'tmpz4xrpnhb: /tmp/tmpz4xrpnhb.cpp:14: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3}))) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660092515
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    assert(l.size() >\
    \ 0);\n    long max = l[0];\n    for (long i = 1; i < l.size(); ++i) {\n     \
    \   max = std::max(max, l[i]);\n    }\n    return max;\n}\nint main() {\n    auto\
    \ candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092514
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n  long max_value = INT_MIN;\n\
    \  for (long i : l) {\n    max_value = max(max_value, i);\n  }\n  return max_value;\n\
    }\nint main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfzzk6j51.cpp: In function \u2018long int max_element(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpfzzk6j51.cpp:7:17: error: \u2018max\u2019 was not declared\
    \ in this scope; did you mean \u2018std::max\u2019?\n    7 |     max_value = max(max_value,\
    \ i);\n      |                 ^~~\n      |                 std::max\nIn file\
    \ included from /usr/include/c++/9/algorithm:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpfzzk6j51.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:3468:5:\
    \ note: \u2018std::max\u2019 declared here\n 3468 |     max(initializer_list<_Tp>\
    \ __l, _Compare __comp)\n      |     ^~~\n"
  stdout: ''
  timestamp: 1660092514
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long max = l[0];\n\
    \    for(long i = 1; i < l.size(); i++){\n        if(l[i] > max){\n          \
    \  max = l[i];\n        }\n    }\n    return max;\n}\nint main() {\n    auto candidate\
    \ = max_element;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3})))\
    \ == (3));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5,\
    \ (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10})))\
    \ == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092514
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    // Write your code\
    \ here.\n    std::sort(l.begin(), l.end());\n    return *(std::max_element(l.begin(),\
    \ l.end()));\n}\nint main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092514
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n  std::sort(l.begin(),\
    \ l.end());\n  return std::distance(l.begin(), std::max_element(l.begin(), l.end()));\n\
    }\nint main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: Exception
  stderr: 'tmpvo88iv6_: /tmp/tmpvo88iv6_.cpp:10: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3}))) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660092515
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    auto it = std::max_element(l.begin(),\
    \ l.end());\n    return std::distance(l.begin(), it);\n}\nint main() {\n    auto\
    \ candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: Exception
  stderr: 'tmpoi8ubsk6: /tmp/tmpoi8ubsk6.cpp:10: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3}))) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660092515
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long long ans = INT_MIN;\n\
    \    for (int i = 0; i < l.size(); i++)\n        if (l[i] > ans)\n           \
    \ ans = l[i];\n    return ans;\n}\nint main() {\n    auto candidate = max_element;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10}))) == (124));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092514
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    if (l.empty())\n\
    \        throw \"empty list\";\n    return std::max_element(l.begin(), l.end());\n\
    }\nint main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpc1y02kgu.cpp: In function \u2018long int max_element(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpc1y02kgu.cpp:7:28: error: cannot convert \u2018__gnu_cxx::__normal_iterator<long\
    \ int*, std::vector<long int> >\u2019 to \u2018long int\u2019 in return\n    7\
    \ |     return std::max_element(l.begin(), l.end());\n      |            ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~\n\
    \      |                            |\n      |                            __gnu_cxx::__normal_iterator<long\
    \ int*, std::vector<long int> >\n"
  stdout: ''
  timestamp: 1660092514
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long max=0;\n   \
    \ long max_pos = 0;\n\n    for (long i = 0; i < l.size(); i++) {\n        if (l[i]>max)\
    \ {\n            max = l[i];\n            max_pos = i;\n        }\n    }\n   \
    \ return max;\n}\nint main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092514
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long max = INT_MIN,\
    \ max = INT_MAX;\n    for (long i : l)\n        if (i > max) max = i;\n    return\
    \ max;\n}\nint main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp120x91kx.cpp: In function \u2018long int max_element(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp120x91kx.cpp:5:25: error: redeclaration of \u2018long\
    \ int max\u2019\n    5 |     long max = INT_MIN, max = INT_MAX;\n      |     \
    \                    ^~~\n/tmp/tmp120x91kx.cpp:5:10: note: \u2018long int max\u2019\
    \ previously declared here\n    5 |     long max = INT_MIN, max = INT_MAX;\n \
    \     |          ^~~\n"
  stdout: ''
  timestamp: 1660092514
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    int max_idx = -1;\n\
    \    long max_val = -1;\n    for(int i = 0; i < l.size(); i++) {\n        if(l[i]\
    \ > max_val) {\n            max_val = l[i];\n            max_idx = i;\n      \
    \  }\n    }\n    return max_val;\n}\nint main() {\n    auto candidate = max_element;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10}))) == (124));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092514
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n   long max_val = 0;\n\
    \   long max_elem = -1;\n   // Traverse the list from first index to last.\n \
    \  for (long i = 0; i < l.size(); i++) {\n      // Check if current element is\
    \ max among all elements.\n      if(l[i] > max_val) {\n         max_val = l[i];\n\
    \         max_elem = i;\n      }\n   }\n   return max_elem;\n}\nint main() {\n\
    \    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: Exception
  stderr: 'tmpvl7h6oj_: /tmp/tmpvl7h6oj_.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3}))) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660092515
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    int n = l.size();\n\
    \    int m = INT_MAX;\n    for(int i=0; i < n; i++) {\n        if(m> l[i]) {\n\
    \            m = l[i];\n        }\n    }\n    return m;\n}\nint main() {\n   \
    \ auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: Exception
  stderr: 'tmp63g6bqju: /tmp/tmp63g6bqju.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3}))) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660092515
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    // write your code\
    \ here\n    return l.back();\n}\nint main() {\n    auto candidate = max_element;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10}))) == (124));\n\
    }\n"
  status: Exception
  stderr: 'tmpgmdn85w4: /tmp/tmpgmdn85w4.cpp:11: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1,
    (long)-10}))) == (124)'' failed.

    '
  stdout: ''
  timestamp: 1660092515
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long max_ele = 0;\n\
    \    long min;\n    for(long i=0; i<l.size(); i++)\n    {\n        if(i==0)\n\
    \            min = l[i];\n        else if(l[i]<min)\n            min = l[i];\n\
    \        else if(i==l.size()-1)\n            max_ele = min;\n        else\n  \
    \      {\n            if(l[i]<max_ele)\n                max_ele = l[i];\n    \
    \    }\n    }\n    return max_ele;\n}\nint main() {\n    auto candidate = max_element;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10}))) == (124));\n\
    }\n"
  status: Exception
  stderr: 'tmpd6fx_nhj: /tmp/tmpd6fx_nhj.cpp:25: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3}))) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660092515
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n// Write your code here.\n\
    }\nint main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: Exception
  stderr: 'tmpt9gimwqr: /tmp/tmpt9gimwqr.cpp:9: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3}))) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660092512
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n\tint i, j, n = l.size();\n\
    \tassert(n > 0);\n\tlong max_element = 0;\n\tfor (i = 1; i < n; ++i) {\n\t\tif\
    \ (l[i] > l[i - 1]) break;\n\t\tmax_element = max(max_element, l[i]);\n\t}\n\t\
    return max_element;\n}\nint main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpunu4c994.cpp: In function \u2018long int max_element(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpunu4c994.cpp:10:17: error: \u2018max\u2019 was not declared\
    \ in this scope; did you mean \u2018std::max\u2019?\n   10 |   max_element = max(max_element,\
    \ l[i]);\n      |                 ^~~\n      |                 std::max\nIn file\
    \ included from /usr/include/c++/9/algorithm:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpunu4c994.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:3468:5:\
    \ note: \u2018std::max\u2019 declared here\n 3468 |     max(initializer_list<_Tp>\
    \ __l, _Compare __comp)\n      |     ^~~\n"
  stdout: ''
  timestamp: 1660092514
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\nlong maxElem = l[0];\n\
    for (int i = 1; i < l.size(); i++) {\n    if (l[i] > maxElem) {\n        maxElem\
    \ = l[i];\n    }\n}\nint main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzn0mr0jb.cpp: In function \u2018long int max_element(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpzn0mr0jb.cpp:11:12: error: a function-definition is not\
    \ allowed here before \u2018{\u2019 token\n   11 | int main() {\n      |     \
    \       ^\n/tmp/tmpzn0mr0jb.cpp:15:1: error: expected \u2018}\u2019 at end of\
    \ input\n   15 | }\n      | ^\n/tmp/tmpzn0mr0jb.cpp:4:39: note: to match this\
    \ \u2018{\u2019\n    4 | long max_element(std::vector<long> l) {\n      |    \
    \                                   ^\n/tmp/tmpzn0mr0jb.cpp:15:1: warning: no\
    \ return statement in function returning non-void [-Wreturn-type]\n   15 | }\n\
    \      | ^\n"
  stdout: ''
  timestamp: 1660092514
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long max=0;\n   \
    \ long curr=0;\n    for(auto it=l.begin();it!=l.end();++it)\n    {\n        if(*it\
    \ > max)\n        {\n            max=*it;\n            curr=*it;\n        }\n\
    \    }\n    return curr;\n}\nint main() {\n    auto candidate = max_element;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10}))) == (124));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092515
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long max = l[0];\n\
    \    for (int i = 1; i < l.size(); ++i) {\n        if (l[i] > max)\n         \
    \   max = l[i];\n    }\n    return max;\n}\nint main() {\n    auto candidate =\
    \ max_element;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3})))\
    \ == (3));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5,\
    \ (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10})))\
    \ == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092515
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long max_ele = l[0];\n\
    \    for (long i = 0; i < l.size(); i++) {\n        if (l[i] > max_ele) {\n  \
    \          max_ele = l[i];\n        }\n    }\n    return max_ele;\n}\nint main()\
    \ {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092515
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n  long max = l[0];\n\
    \  for (int i = 1; i < l.size(); i++) {\n    if (l[i] > max) {\n      max = l[i];\n\
    \    }\n  }\n  return max;\n}\nint main() {\n    auto candidate = max_element;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10}))) == (124));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092515
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    // Code Here\n  \
    \  auto it = max_element(l.begin(), l.end());\n    return *it;\n}\nint main()\
    \ {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092515
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    // Write your code\
    \ here.\n}\nint main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: Exception
  stderr: 'tmpnkqrsl_b: /tmp/tmpnkqrsl_b.cpp:9: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3}))) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660092515
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long max = l[0];\n\
    \    for (size_t i = 0; i < l.size(); i++) {\n        if (l[i] > max) {\n    \
    \        max = l[i];\n        }\n    }\n    return max;\n}\nint main() {\n   \
    \ auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092515
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long max_val = -long_MAX;\n\
    \    for (auto it = l.begin(); it != l.end(); ++it)\n        if (*it > max_val)\n\
    \            max_val = *it;\n    return max_val;\n}\nint main() {\n    auto candidate\
    \ = max_element;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3})))\
    \ == (3));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5,\
    \ (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10})))\
    \ == (124));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpil7chyqy.cpp: In function \u2018long int max_element(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpil7chyqy.cpp:5:21: error: \u2018long_MAX\u2019 was not\
    \ declared in this scope\n    5 |     long max_val = -long_MAX;\n      |     \
    \                ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660092514
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    auto f1 = [&](const\
    \ long& x) {\n        return (x > l[0]);\n    };\n    auto f2 = [&](const long&\
    \ x, const long& y) {\n        return (x > y);\n    };\n    auto f3 = [](const\
    \ long& x, const long& y, const long& z) {\n        return (x > y && x > z);\n\
    \    };\n    auto f4 = [](const long& x, const long& y, const long& z, const long&\
    \ w) {\n        return (x > y && x > z && x > w);\n    };\n    return std::max_element(l.begin(),\
    \ l.end(), f1, f2, f3, f4);\n}\nint main() {\n    auto candidate = max_element;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10}))) == (124));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyem_ocb8.cpp: In function \u2018long int max_element(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpyem_ocb8.cpp:17:63: error: no matching function for call\
    \ to \u2018max_element(std::vector<long int>::iterator, std::vector<long int>::iterator,\
    \ max_element(std::vector<long int>)::<lambda(const long int&)>&, max_element(std::vector<long\
    \ int>)::<lambda(const long int&, const long int&)>&, max_element(std::vector<long\
    \ int>)::<lambda(const long int&, const long int&, const long int&)>&, max_element(std::vector<long\
    \ int>)::<lambda(const long int&, const long int&, const long int&, const long\
    \ int&)>&)\u2019\n   17 |     return std::max_element(l.begin(), l.end(), f1,\
    \ f2, f3, f4);\n      |                                                      \
    \         ^\nIn file included from /usr/include/c++/9/algorithm:62,\n        \
    \         from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n       \
    \          from /tmp/tmpyem_ocb8.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:5713:5:\
    \ note: candidate: \u2018template<class _FIter> constexpr _FIter std::max_element(_FIter,\
    \ _FIter)\u2019\n 5713 |     max_element(_ForwardIterator __first, _ForwardIterator\
    \ __last)\n      |     ^~~~~~~~~~~\n/usr/include/c++/9/bits/stl_algo.h:5713:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpyem_ocb8.cpp:17:63:\
    \ note:   candidate expects 2 arguments, 6 provided\n   17 |     return std::max_element(l.begin(),\
    \ l.end(), f1, f2, f3, f4);\n      |                                         \
    \                      ^\nIn file included from /usr/include/c++/9/algorithm:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpyem_ocb8.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:5738:5:\
    \ note: candidate: \u2018template<class _FIter, class _Compare> constexpr _FIter\
    \ std::max_element(_FIter, _FIter, _Compare)\u2019\n 5738 |     max_element(_ForwardIterator\
    \ __first, _ForwardIterator __last,\n      |     ^~~~~~~~~~~\n/usr/include/c++/9/bits/stl_algo.h:5738:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpyem_ocb8.cpp:17:63:\
    \ n"
  stdout: ''
  timestamp: 1660092514
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long max = INT_MIN;\n\
    \    for (auto x: l) {\n        if (x > max)\n            max = x;\n    }\n  \
    \  return max;\n}\nint main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092515
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    assert(l.size() >\
    \ 0);\n    long ans = l[0];\n    for(size_t i = 1; i < l.size(); ++i) {\n    \
    \    if(l[i] > ans) ans = l[i];\n    }\n    return ans;\n}\nint main() {\n   \
    \ auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092515
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n  std::sort(l.begin(),\
    \ l.end());\n  return l[l.size()-1];\n}\nint main() {\n    auto candidate = max_element;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10}))) == (124));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092515
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    assert(l.size() >\
    \ 0);\n    long max = 0;\n    for (auto i : l) {\n        if (i > max) {\n   \
    \         max = i;\n        }\n    }\n    return max;\n}\nint main() {\n    auto\
    \ candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092515
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    // code here\n  \
    \  // Complete the function\n}\nint main() {\n    auto candidate = max_element;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10}))) == (124));\n\
    }\n"
  status: Exception
  stderr: 'tmp21cvv3c4: /tmp/tmp21cvv3c4.cpp:10: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3}))) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660092515
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long maximum=l[0];\n\
    \    for (int i=0;i<l.size();i++) {\n        maximum=max(maximum,l[i]);\n    }\n\
    \    return maximum;\n}\nint main() {\n    auto candidate = max_element;\n   \
    \ assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10}))) == (124));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpv2flxy8b.cpp: In function \u2018long int max_element(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpv2flxy8b.cpp:7:17: error: \u2018max\u2019 was not declared\
    \ in this scope; did you mean \u2018std::max\u2019?\n    7 |         maximum=max(maximum,l[i]);\n\
    \      |                 ^~~\n      |                 std::max\nIn file included\
    \ from /usr/include/c++/9/algorithm:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpv2flxy8b.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:3468:5:\
    \ note: \u2018std::max\u2019 declared here\n 3468 |     max(initializer_list<_Tp>\
    \ __l, _Compare __comp)\n      |     ^~~\n"
  stdout: ''
  timestamp: 1660092515
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    for (long i = l.size()\
    \ - 1; i >= 0; --i)\n        if (l[i] < l[(i + 1) % l.size()])\n            return\
    \ l[i];\n    return l[0];\n}\nint main() {\n    auto candidate = max_element;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10}))) == (124));\n\
    }\n"
  status: Exception
  stderr: 'tmpeo9a27w0: /tmp/tmpeo9a27w0.cpp:12: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3}))) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660092515
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long maxValue = l[0];\n\
    \    int maxIndex = -1;\n    for (int i = 1; i < l.size(); i++) {\n        if\
    \ (l[i] > maxValue) {\n            maxValue = l[i];\n            maxIndex = i;\n\
    \        }\n    }\n    return maxIndex;\n}\nint main() {\n    auto candidate =\
    \ max_element;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3})))\
    \ == (3));\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5,\
    \ (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10})))\
    \ == (124));\n}\n"
  status: Exception
  stderr: 'tmpv3k0zxzi: /tmp/tmpv3k0zxzi.cpp:17: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3}))) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660092515
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    assert(l.size()>0);\n\
    \    long long maximum = l[0];\n    for (long long i = 1;i<l.size();++i) {\n \
    \       if (l[i]>maximum) {\n            maximum = l[i];\n        }\n    }\n \
    \   return maximum;\n}\nint main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092515
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long res = 0;\n \
    \   for (long i : l) {\n        res = i;\n    }\n    return res;\n}\nint main()\
    \ {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: Exception
  stderr: 'tmp3r6qhj5b: /tmp/tmp3r6qhj5b.cpp:14: int main(): Assertion `candidate((std::vector<long>({(long)5,
    (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1,
    (long)-10}))) == (124)'' failed.

    '
  stdout: ''
  timestamp: 1660092515
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    int n = l.size();\n\
    \    long max = l[0], max_idx = 1;\n    for (int i = 1; i < n; ++i) {\n      \
    \  if (l[i] > max)\n            max = l[i], max_idx = i;\n    }\n    return max;\n\
    }\nint main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092515
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long max = l[0];\n\
    \    for (int i = 1; i < l.size(); i++) {\n        if (l[i] > max) {\n       \
    \     max = l[i];\n        }\n    }\n    return max;\n}\nint main() {\n    auto\
    \ candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092509
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    for (long i = 1;\
    \ i < l.size(); i++)\n        if (l[i] < l[i - 1])\n            std::swap(l[i],\
    \ l[i - 1]);\n    return l[0];\n}\nint main() {\n    auto candidate = max_element;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (3));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
    \ (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1, (long)-10}))) == (124));\n\
    }\n"
  status: Exception
  stderr: 'tmp47dqlq6b: /tmp/tmp47dqlq6b.cpp:12: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3}))) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660092515
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n  // Index of first element\
    \ larger than current.\n  int i = 0, j = 0, k = l.size() - 1;\n  while (i < k\
    \ && l[i] <= l[j])\n    if (l[i] > l[j])\n      swap(l[i], l[j]);\n    else\n\
    \      i++;\n  while (j > i) {\n    swap(l[j], l[k]);\n    k--;\n  }\n  return\
    \ l[k];\n}\nint main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp61oy9vtj.cpp: In function \u2018long int max_element(std::vector<long\
    \ int>)\u2019:\n/tmp/tmp61oy9vtj.cpp:9:7: error: \u2018swap\u2019 was not declared\
    \ in this scope\n    9 |       swap(l[i], l[j]);\n      |       ^~~~\n/tmp/tmp61oy9vtj.cpp:9:7:\
    \ note: suggested alternatives:\nIn file included from /usr/include/c++/9/regex:62,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110,\n\
    \                 from /tmp/tmp61oy9vtj.cpp:2:\n/usr/include/c++/9/bits/regex.h:2029:5:\
    \ note:   \u2018std::__cxx11::swap\u2019\n 2029 |     swap(match_results<_Bi_iter,\
    \ _Alloc>& __lhs,\n      |     ^~~~\nIn file included from /usr/include/c++/9/bits/stl_pair.h:59,\n\
    \                 from /usr/include/c++/9/bits/stl_algobase.h:64,\n          \
    \       from /usr/include/c++/9/bits/specfun.h:45,\n                 from /usr/include/c++/9/cmath:1927,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmp61oy9vtj.cpp:2:\n/usr/include/c++/9/bits/move.h:182:5:\
    \ note:   \u2018std::swap\u2019\n  182 |     swap(_Tp& __a, _Tp& __b)\n      |\
    \     ^~~~\n/usr/include/c++/9/bits/move.h:182:5: note:   \u2018std::swap\u2019\
    \nIn file included from /usr/include/c++/9/exception:143,\n                 from\
    \ /usr/include/c++/9/ios:39,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp61oy9vtj.cpp:2:\n/usr/include/c++/9/bits/exception_ptr.h:166:5: note:\
    \   \u2018std::__exception_ptr::swap\u2019\n  166 |     swap(exception_ptr& __lhs,\
    \ exception_ptr& __rhs)\n      |     ^~~~\nIn file included from /usr/include/c++/9/filesystem:37,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:129,\n\
    \                 from /tmp/tmp61oy9vtj.cpp:2:\n/usr/include/c++/9/bits/fs_path.h:611:15:\
    \ note:   \u2018std::filesystem::__cxx11::swap\u2019\n  611 |   inline void swap(path&\
    \ __lhs, path& __r"
  stdout: ''
  timestamp: 1660092515
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n  long m = std::numeric_limits<long>::max();\n\
    \  for (auto i : l) {\n    if (i > m) {\n      m = i;\n    }\n  }\n  return m;\n\
    }\nint main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: Exception
  stderr: 'tmpc0ql_f2d: /tmp/tmpc0ql_f2d.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3}))) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660092516
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long max_val = 0,\
    \ max_idx = 0;\n    for (size_t i = 0; i < l.size(); i++) {\n        if (l[i]\
    \ > max_val)\n            max_val = l[i];\n        max_idx = i;\n    }\n    return\
    \ max_idx;\n}\nint main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: Exception
  stderr: 'tmp0mh4xygg: /tmp/tmp0mh4xygg.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3}))) == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660092516
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long max = l[0];\n\
    \    for (size_t i = 1; i < l.size(); i++) {\n        if (max < l[i]) {\n    \
    \        max = l[i];\n        }\n    }\n    return max;\n}\nint main() {\n   \
    \ auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092516
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    // Return maximum\
    \ element in the list.\n    long max = l[0];\n    for (int i = 1; i < l.size();\
    \ i++) {\n        if (l[i] > max)\n            max = l[i];\n    }\n    return\
    \ max;\n}\nint main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092516
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    assert(!l.empty());\n\
    \    long max = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if (max\
    \ < l[i])\n            max = l[i];\n    }\n    return max;\n}\nint main() {\n\
    \    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092516
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element\
    \ in the list.\nlong max_element(std::vector<long> l) {\n    long max_el = std::numeric_limits<long\
    \ int>::min();\n    for (long i = 0; i < l.size(); i++) {\n        if (l[i] >\
    \ max_el) {\n            max_el = l[i];\n        }\n    }\n    return max_el;\n\
    }\nint main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124,\
    \ (long)1, (long)-10}))) == (124));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660092516

language: swift
name: HumanEval_62_derivative
results:
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var power = 1\n    for x in xs {\n        result.append(power\
    \ * x)\n        power *= x\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpl0azum_7/tmpl0azum_7.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b29fc119c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b29fbe10b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b29fbe10988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29fbe0f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl0azum_7                        0x0000557d37eaf5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b29fc305460 __libc_start_main +
    245

    6    tmpl0azum_7                        0x0000557d37eaf1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var power = 0\n    for x in xs {\n        power\
    \ = power + 1\n        result.append(power)\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12,\
    \ 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3,\
    \ 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\
    assert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxqg9kwzd/tmpxqg9kwzd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7eb9c72c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7eb9969b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7eb9969988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7eb99687b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxqg9kwzd                        0x00005620ec7b05fc <unavailable> + 5628

    5    libc.so.6                          0x00002b7eb9e5e460 __libc_start_main +
    245

    6    tmpxqg9kwzd                        0x00005620ec7b01e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    return Array(0..<xs.count).map { i in\n        xs[i] * xs[i]\n    }\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12,\
    \ 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3,\
    \ 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\
    assert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmp85o2mnrh/tmp85o2mnrh.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1665f7fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1665c76b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1665c76988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1665c757b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp85o2mnrh                        0x00005620e26406fc <unavailable> + 5884

    5    libc.so.6                          0x00002b166616b460 __libc_start_main +
    245

    6    tmp85o2mnrh                        0x00005620e26402e9 <unavailable> + 4841

    '
  stdout: ''
  timestamp: 1659824927
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var j = 0\n    for i in xs {\n        result.append(1)\n\
    \        result.append(0)\n        result.append(0)\n        result.append(0)\n\
    \        result.append(0)\n        result.append(0)\n        result.append(0)\n\
    \        result.append(0)\n        result.append(0)\n        result.append(0)\n\
    \        result.append(0)\n        result.append(0)\n        result.append(0)\n\
    \        result.append(0)\n        result.append(0)\n        result.append(0)\n\
    \        result.append(0)\n        result.append(0)\n        result.append(0)\n\
    \        result.append(0)\n        result.append(0)\n        result.append(0)\n\
    \        result.append(0)\n        result.append(0)\n        result.append(0)\n\
    \        result.append(0)\n        result.append(0)\n        result.append(0)\n\
    \        result.append(0)\n        result.append(0)\n        result.append(0)\n\
    \        result.append(0)\n        result.append(0)\n        result.append(0)\n\
    \        result.append(0)\n        result.append(0)\n        result.append(0)\n\
    \        result.append(0)\n        result.append(0)\n        result.append(0)\n\
    \        result.append(0)\n        result.append(0)\n        result.append(0)\n\
    \        result.append(0)\n        result.append(0)\n        result.append(0)\n\
    \        result.append(0)\n        result.append(0)\n        result.append(0)\n\
    \        result.append(0)\n        result.append(0)\n        result.append(0)\n\
    \        result.append(0)\n        result.append(0)\n        result.append(0)\n\
    \        result.append(0)\n        result.append(0)\n        result.append(0)\n\
    \        result.append(0)\n        result.append(0)\n        result.append(0)\n\
    \        result.append(0)\n        result.append(0)\n        result.append(0)\n\
    \        result.append(0)\n        result.append(0)\n        result.append(0)\n\
    \        result.append(0)\n        result.append(0)\n        result.append(0)\n\
    \        result.append(0)\n        result.append(0)\n        result.append(0)\n\
    \        result.append(0)\n        result.append(0)\n        result.append(0)\n\
    \        result.append(0)\n        result.append(0)\n        result.append(0)\n\
    \        result.append(0)\n        result.append(0)\n        result.append(0)\n\
    \        result.append(0)\n        result.append(0)\n        result.append(0)\n\
    \        result.append(0)\n        result.append(0)\n        result.append(0)\n\
    \        result.append(0)\n        result.append(0)\n        result.append(0)\n\
    \        result.append(0)\n        result.append(0)\n        result.append(0)\n\
    \        result.append(0)\n        result.append(0)\n        result.append(0)\n\
    \        result.append(0)\n        result.append(0)\n        result.append(0)\n\
    \        result.append(0)\n        result.append(0)\n        result.append(0)\n\
    \        result.append(0)\n        result.append(0)\n        result.append(0)\n\
    \        result.append(0)\n        result.append(0)\n        result.append(0)\n\
    \        result.append(0)\n        result.append(0)\n        result.append(0)\n\
    \        result.append(0)\n        result.append(0)\n        result.append(0)\n\
    \        result.append(0)\n        result.append(0)\n        result.append(0)\n\
    \        result.append(0)\n        result.append(0)\n        result.append(0)\n\
    \        result.append(0)\n        result.append(0)\n        result.append(0)\n\
    \        result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmp9x0lxlfe.swift:157:43: error: expected '}' at end of brace statement\n\
    assert(derivative(xs: [1]) == [] as [Int])\n                                 \
    \         ^\n/tmp/tmp9x0lxlfe.swift:9:37: note: to match this opening '{'\nfunc\
    \ derivative(xs: [Int]) -> [Int] {\n                                    ^\n/tmp/tmp9x0lxlfe.swift:137:9:\
    \ warning: variable is unused\n        result\n        ^~~~~~\n/tmp/tmp9x0lxlfe.swift:141:6:\
    \ error: operator functions can only be declared at global or in type scope\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n     ^\n/tmp/tmp9x0lxlfe.swift:11:9:\
    \ warning: initialization of variable 'j' was never used; consider replacing with\
    \ assignment to '_' or removing it\n    var j = 0\n    ~~~~^\n    _\n/tmp/tmp9x0lxlfe.swift:12:9:\
    \ warning: immutable value 'i' was never used; consider replacing with '_' or\
    \ removing it\n    for i in xs {\n        ^\n        _\n"
  stdout: ''
  timestamp: 1659824927
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i])\n\
    \        result.append(xs[i] * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmp6e74lxt7/tmp6e74lxt7.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aedefbd8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aedef8cfb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aedef8cf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aedef8ce7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6e74lxt7                        0x000055d1ef0f16cc <unavailable> + 5836

    5    libc.so.6                          0x00002aedefdc4460 __libc_start_main +
    245

    6    tmp6e74lxt7                        0x000055d1ef0f12b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var i = 0\n    while i < xs.count {\n        result.append(xs[i])\n\
    \        i += 1\n    }\n    result.append(0)\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpgpgajwdi/tmpgpgajwdi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1152de4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1152adbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1152adb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1152ada7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgpgajwdi                        0x00005622d6a5e53c <unavailable> + 5436

    5    libc.so.6                          0x00002b1152fd0460 __libc_start_main +
    245

    6    tmpgpgajwdi                        0x00005622d6a5e129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659824927
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0 ..< xs.count {\n        result.append(xs[i])\n\
    \        result.append(xs[i] * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmp3iyu052_/tmp3iyu052_.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac76975ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac769451b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac769451988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac7694507b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3iyu052_                        0x0000557f25f466cc <unavailable> + 5836

    5    libc.so.6                          0x00002ac769946460 __libc_start_main +
    245

    6    tmp3iyu052_                        0x0000557f25f462b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0 ..< xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmptyh7ya33/tmptyh7ya33.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac458199c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac457e90b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac457e90988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac457e8f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptyh7ya33                        0x0000555a1f60a6cc <unavailable> + 5836

    5    libc.so.6                          0x00002ac458385460 __libc_start_main +
    245

    6    tmptyh7ya33                        0x0000555a1f60a2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0 ..< xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmptyh7ya33/tmptyh7ya33.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac458199c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac457e90b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac457e90988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac457e8f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptyh7ya33                        0x0000555a1f60a6cc <unavailable> + 5836

    5    libc.so.6                          0x00002ac458385460 __libc_start_main +
    245

    6    tmptyh7ya33                        0x0000555a1f60a2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var x = 0\n    for _ in 0..<xs.count {\n      \
    \  result.append(xs[x])\n        x++\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmp5dg16ekf.swift:14:10: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n        x++\n         ^~\n"
  stdout: ''
  timestamp: 1659824844
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var power = 0\n    for x in xs {\n        power\
    \ += 1\n        result.append(pow(x, power))\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12,\
    \ 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3,\
    \ 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\
    assert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmpw2c6y9la.swift:14:23: error: cannot find 'pow' in scope\n     \
    \   result.append(pow(x, power))\n                      ^~~\n"
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var power = 1\n    for x in xs {\n        result.append(power\
    \ * x)\n        power *= x\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpl0azum_7/tmpl0azum_7.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b29fc119c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b29fbe10b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b29fbe10988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29fbe0f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl0azum_7                        0x0000557d37eaf5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b29fc305460 __libc_start_main +
    245

    6    tmpl0azum_7                        0x0000557d37eaf1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var power = 0\n    for x in xs {\n        result.append(1)\n\
    \        power += 1\n        while power < x.count {\n            result.append(result[power]\
    \ * x)\n            power += 1\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12,\
    \ 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3,\
    \ 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\
    assert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmpumxvs1pb.swift:15:25: error: value of type 'Int' has no member\
    \ 'count'\n        while power < x.count {\n                      ~ ^~~~~\n"
  stdout: ''
  timestamp: 1659979640
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var j = 0\n    for i in xs {\n        result.append(1)\n\
    \        result[j] += i\n        j++\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmplsjtc30_.swift:15:10: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n        j++\n         ^~\n"
  stdout: ''
  timestamp: 1659979640
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i])\n\
    \        result.append(xs[i] * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmp6e74lxt7/tmp6e74lxt7.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aedefbd8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aedef8cfb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aedef8cf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aedef8ce7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6e74lxt7                        0x000055d1ef0f16cc <unavailable> + 5836

    5    libc.so.6                          0x00002aedefdc4460 __libc_start_main +
    245

    6    tmp6e74lxt7                        0x000055d1ef0f12b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var j = 0\n    for i in xs {\n        result[j]\
    \ += i\n        j++\n    }\n    result.reverse()\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12,\
    \ 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3,\
    \ 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\
    assert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmpdcy68532.swift:14:10: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n        j++\n         ^~\n"
  stdout: ''
  timestamp: 1659979640
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var power = 1\n    for x in xs {\n        result.append(power\
    \ * x)\n        power *= x\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpl0azum_7/tmpl0azum_7.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b29fc119c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b29fbe10b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b29fbe10988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29fbe0f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl0azum_7                        0x0000557d37eaf5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b29fc305460 __libc_start_main +
    245

    6    tmpl0azum_7                        0x0000557d37eaf1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in xs.indices {\n        result.append(xs[i]\
    \ - xs[i - 1])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'Swift/ContiguousArrayBuffer.swift:600: Fatal error: Index out of range

    Current stack trace:

    0    libswiftCore.so                    0x00002afb1d993c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afb1d68a561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002afb1d68a286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002afb1d68a13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002afb1d689bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftSwiftOnoneSupport.so       0x00002afb1d489e83 <unavailable> + 188035

    6    tmpuh9v8nae                        0x000055e5e9294c9d <unavailable> + 7325

    7    tmpuh9v8nae                        0x000055e5e9294584 <unavailable> + 5508

    8    libc.so.6                          0x00002afb1db7f460 __libc_start_main +
    245

    9    tmpuh9v8nae                        0x000055e5e9294259 <unavailable> + 4697

    '
  stdout: ''
  timestamp: 1659979640
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i])\n\
    \        result.append(xs[i] * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmp6e74lxt7/tmp6e74lxt7.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aedefbd8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aedef8cfb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aedef8cf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aedef8ce7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6e74lxt7                        0x000055d1ef0f16cc <unavailable> + 5836

    5    libc.so.6                          0x00002aedefdc4460 __libc_start_main +
    245

    6    tmp6e74lxt7                        0x000055d1ef0f12b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var power = 1\n    for x in xs {\n        result.append(power\
    \ * x)\n        power *= x\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpl0azum_7/tmpl0azum_7.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b29fc119c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b29fbe10b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b29fbe10988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29fbe0f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl0azum_7                        0x0000557d37eaf5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b29fc305460 __libc_start_main +
    245

    6    tmpl0azum_7                        0x0000557d37eaf1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var i = 0\n    for x in xs {\n        result.append(x\
    \ * xs[i - 1])\n        i += 1\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'Swift/ContiguousArrayBuffer.swift:600: Fatal error: Index out of range

    Current stack trace:

    0    libswiftCore.so                    0x00002b56b3693c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b56b338a561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b56b338a286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b56b338a13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b56b3389bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftSwiftOnoneSupport.so       0x00002b56b3189e83 <unavailable> + 188035

    6    tmpwq74hg8l                        0x00005571131ffc71 <unavailable> + 7281

    7    tmpwq74hg8l                        0x00005571131ff564 <unavailable> + 5476

    8    libc.so.6                          0x00002b56b387f460 __libc_start_main +
    245

    9    tmpwq74hg8l                        0x00005571131ff239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659979640
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var j = 0\n    for i in xs {\n        result[j]\
    \ += i\n        j++\n    }\n    result.reverse()\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12,\
    \ 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3,\
    \ 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\
    assert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmpdcy68532.swift:14:10: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n        j++\n         ^~\n"
  stdout: ''
  timestamp: 1659979640
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in xs {\n        result.append(i * i)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpdvgrt3py/tmpdvgrt3py.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aae825eec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aae822e5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aae822e5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aae822e47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdvgrt3py                        0x000055cc31abe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002aae827da460 __libc_start_main +
    245

    6    tmpdvgrt3py                        0x000055cc31abe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979640
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var power = 1\n    for x in xs {\n        result.append(power\
    \ * x)\n        power *= x\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpl0azum_7/tmpl0azum_7.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b29fc119c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b29fbe10b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b29fbe10988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29fbe0f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl0azum_7                        0x0000557d37eaf5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b29fc305460 __libc_start_main +
    245

    6    tmpl0azum_7                        0x0000557d37eaf1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var i = 0\n    for x in xs {\n        result.append(x\
    \ * xs[i])\n        i += 1\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmph6h4a2kf/tmph6h4a2kf.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b65195dec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b65192d5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b65192d5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b65192d47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmph6h4a2kf                        0x0000559d5bda164c <unavailable> + 5708

    5    libc.so.6                          0x00002b65197ca460 __libc_start_main +
    245

    6    tmph6h4a2kf                        0x0000559d5bda1239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659979640
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0 ..< xs.count {\n        result.append(xs[i])\n\
    \        result.append(xs[i] * xs[i])\n    }\n    result.append(1)\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmp4g3283do/tmp4g3283do.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6a4f53ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6a4f231b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6a4f231988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6a4f2307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4g3283do                        0x00005632ba69c6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b6a4f726460 __libc_start_main +
    245

    6    tmp4g3283do                        0x00005632ba69c2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659979640
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var j = 0\n    for i in xs {\n        result.append(1)\n\
    \        result[j] += i\n        j++\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmplsjtc30_.swift:15:10: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n        j++\n         ^~\n"
  stdout: ''
  timestamp: 1659979640
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var x = 0\n    for _ in 0..<xs.count {\n      \
    \  result.append(xs[x])\n        x++\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmp5dg16ekf.swift:14:10: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n        x++\n         ^~\n"
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0 ..< xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmptyh7ya33/tmptyh7ya33.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac458199c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac457e90b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac457e90988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac457e8f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptyh7ya33                        0x0000555a1f60a6cc <unavailable> + 5836

    5    libc.so.6                          0x00002ac458385460 __libc_start_main +
    245

    6    tmptyh7ya33                        0x0000555a1f60a2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var x = 0\n    for _ in xs {\n        result.append(1)\n\
    \        x = x * x\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpo_recerk/tmpo_recerk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b46ee728c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b46ee41fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b46ee41f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b46ee41e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo_recerk                        0x000055fa536dd5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b46ee914460 __libc_start_main +
    245

    6    tmpo_recerk                        0x000055fa536dd1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979640
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in xs {\n        result.append(1)\n     \
    \   result.append(i * result[0])\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpy5focej8/tmpy5focej8.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b462387ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4623575b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4623575988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b46235747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpy5focej8                        0x0000556a0265764c <unavailable> + 5708

    5    libc.so.6                          0x00002b4623a6a460 __libc_start_main +
    245

    6    tmpy5focej8                        0x0000556a02657239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659979640
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var i = 0\n    for x in xs {\n        result.append(x\
    \ * xs[i - 1])\n        i += 1\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'Swift/ContiguousArrayBuffer.swift:600: Fatal error: Index out of range

    Current stack trace:

    0    libswiftCore.so                    0x00002b56b3693c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b56b338a561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b56b338a286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b56b338a13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b56b3389bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftSwiftOnoneSupport.so       0x00002b56b3189e83 <unavailable> + 188035

    6    tmpwq74hg8l                        0x00005571131ffc71 <unavailable> + 7281

    7    tmpwq74hg8l                        0x00005571131ff564 <unavailable> + 5476

    8    libc.so.6                          0x00002b56b387f460 __libc_start_main +
    245

    9    tmpwq74hg8l                        0x00005571131ff239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659979640
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in xs {\n        result.append(1)\n    }\n\
    \    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmp4kr3n1_4/tmp4kr3n1_4.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b72eea65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b72ee75cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b72ee75c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b72ee75b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4kr3n1_4                        0x000055d920f505fc <unavailable> + 5628

    5    libc.so.6                          0x00002b72eec51460 __libc_start_main +
    245

    6    tmp4kr3n1_4                        0x000055d920f501e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979640
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0 ..< xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmptyh7ya33/tmptyh7ya33.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac458199c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac457e90b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac457e90988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac457e8f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptyh7ya33                        0x0000555a1f60a6cc <unavailable> + 5836

    5    libc.so.6                          0x00002ac458385460 __libc_start_main +
    245

    6    tmptyh7ya33                        0x0000555a1f60a2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var power = 1\n    for x in xs {\n        result.append(power\
    \ * x)\n        power *= x\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpl0azum_7/tmpl0azum_7.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b29fc119c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b29fbe10b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b29fbe10988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29fbe0f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl0azum_7                        0x0000557d37eaf5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b29fc305460 __libc_start_main +
    245

    6    tmpl0azum_7                        0x0000557d37eaf1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var i = 0\n    for x in xs {\n        result.append(x\
    \ * xs[i])\n        i += 1\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmph6h4a2kf/tmph6h4a2kf.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b65195dec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b65192d5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b65192d5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b65192d47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmph6h4a2kf                        0x0000559d5bda164c <unavailable> + 5708

    5    libc.so.6                          0x00002b65197ca460 __libc_start_main +
    245

    6    tmph6h4a2kf                        0x0000559d5bda1239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659979640
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var power = 0\n    for x in xs {\n        power\
    \ = power + 1\n        result.append(power)\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12,\
    \ 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3,\
    \ 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\
    assert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxqg9kwzd/tmpxqg9kwzd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7eb9c72c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7eb9969b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7eb9969988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7eb99687b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxqg9kwzd                        0x00005620ec7b05fc <unavailable> + 5628

    5    libc.so.6                          0x00002b7eb9e5e460 __libc_start_main +
    245

    6    tmpxqg9kwzd                        0x00005620ec7b01e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var power = 0\n    for x in xs {\n        power\
    \ += 1\n        result.append(x * power)\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12,\
    \ 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3,\
    \ 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\
    assert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpk2pvl2ga/tmpk2pvl2ga.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6acdc5dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6acd954b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6acd954988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6acd9537b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk2pvl2ga                        0x0000563ae6ae85fc <unavailable> + 5628

    5    libc.so.6                          0x00002b6acde49460 __libc_start_main +
    245

    6    tmpk2pvl2ga                        0x0000563ae6ae81e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979640
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var x = 0\n    for _ in 0..<xs.count {\n      \
    \  result.append(xs[x])\n        x += 1.0\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12,\
    \ 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3,\
    \ 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\
    assert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmp5tsvl7n1.swift:14:14: error: cannot convert value of type 'Double'\
    \ to expected argument type 'Int'\n        x += 1.0\n             ^\n        \
    \     Int( )\n"
  stdout: ''
  timestamp: 1659979640
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in xs.indices {\n        result.append(xs[i]\
    \ - xs[i - 1])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'Swift/ContiguousArrayBuffer.swift:600: Fatal error: Index out of range

    Current stack trace:

    0    libswiftCore.so                    0x00002afb1d993c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afb1d68a561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002afb1d68a286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002afb1d68a13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002afb1d689bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftSwiftOnoneSupport.so       0x00002afb1d489e83 <unavailable> + 188035

    6    tmpuh9v8nae                        0x000055e5e9294c9d <unavailable> + 7325

    7    tmpuh9v8nae                        0x000055e5e9294584 <unavailable> + 5508

    8    libc.so.6                          0x00002afb1db7f460 __libc_start_main +
    245

    9    tmpuh9v8nae                        0x000055e5e9294259 <unavailable> + 4697

    '
  stdout: ''
  timestamp: 1659979640
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var i = 0\n    for x in xs {\n        result.append(x\
    \ * xs[(i + 1) % xs.count])\n        i += 1\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12,\
    \ 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3,\
    \ 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\
    assert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpi4msni7k/tmpi4msni7k.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4e35bd2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4e358c9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4e358c9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4e358c87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpi4msni7k                        0x000055fec1c0573c <unavailable> + 5948

    5    libc.so.6                          0x00002b4e35dbe460 __libc_start_main +
    245

    6    tmpi4msni7k                        0x000055fec1c05329 <unavailable> + 4905

    '
  stdout: ''
  timestamp: 1659979640
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var i = 0\n    for x in xs {\n        result.append(x\
    \ * xs[i] / xs.count)\n        i += 1\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmp15azhdqj/tmp15azhdqj.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aad2d05ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aad2cd51b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aad2cd51988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aad2cd507b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp15azhdqj                        0x000055928e83673c <unavailable> + 5948

    5    libc.so.6                          0x00002aad2d246460 __libc_start_main +
    245

    6    tmp15azhdqj                        0x000055928e836329 <unavailable> + 4905

    '
  stdout: ''
  timestamp: 1659979640
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var i = 0\n    for x in xs {\n        result.append(x\
    \ * i)\n        i += 1\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxake6bu9/tmpxake6bu9.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2583ffcc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2583cf3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2583cf3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2583cf27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxake6bu9                        0x00005649e3d545fc <unavailable> + 5628

    5    libc.so.6                          0x00002b25841e8460 __libc_start_main +
    245

    6    tmpxake6bu9                        0x00005649e3d541e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979640
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var power = 0\n    for x in xs {\n        power\
    \ = power + 1\n        result.append(power)\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12,\
    \ 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3,\
    \ 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\
    assert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxqg9kwzd/tmpxqg9kwzd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7eb9c72c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7eb9969b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7eb9969988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7eb99687b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxqg9kwzd                        0x00005620ec7b05fc <unavailable> + 5628

    5    libc.so.6                          0x00002b7eb9e5e460 __libc_start_main +
    245

    6    tmpxqg9kwzd                        0x00005620ec7b01e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var i = 0\n    for x in xs {\n        result.append(x\
    \ * xs[i - 1])\n        i += 1\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'Swift/ContiguousArrayBuffer.swift:600: Fatal error: Index out of range

    Current stack trace:

    0    libswiftCore.so                    0x00002b56b3693c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b56b338a561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b56b338a286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b56b338a13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b56b3389bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftSwiftOnoneSupport.so       0x00002b56b3189e83 <unavailable> + 188035

    6    tmpwq74hg8l                        0x00005571131ffc71 <unavailable> + 7281

    7    tmpwq74hg8l                        0x00005571131ff564 <unavailable> + 5476

    8    libc.so.6                          0x00002b56b387f460 __libc_start_main +
    245

    9    tmpwq74hg8l                        0x00005571131ff239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659979640
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var i = 0\n    for x in xs {\n        result.append(x\
    \ * xs[i - 1])\n        i += 1\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'Swift/ContiguousArrayBuffer.swift:600: Fatal error: Index out of range

    Current stack trace:

    0    libswiftCore.so                    0x00002b56b3693c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b56b338a561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b56b338a286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b56b338a13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b56b3389bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftSwiftOnoneSupport.so       0x00002b56b3189e83 <unavailable> + 188035

    6    tmpwq74hg8l                        0x00005571131ffc71 <unavailable> + 7281

    7    tmpwq74hg8l                        0x00005571131ff564 <unavailable> + 5476

    8    libc.so.6                          0x00002b56b387f460 __libc_start_main +
    245

    9    tmpwq74hg8l                        0x00005571131ff239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659979640
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var power = 0\n    for x in xs {\n        if power\
    \ == 0 {\n            result.append(1)\n        } else {\n            result.append(x\
    \ * result[power])\n        }\n        power += 1\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12,\
    \ 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3,\
    \ 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\
    assert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'Swift/ContiguousArrayBuffer.swift:600: Fatal error: Index out of range

    Current stack trace:

    0    libswiftCore.so                    0x00002b19159e5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b19156dc561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b19156dc286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b19156dc13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b19156dbbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftSwiftOnoneSupport.so       0x00002b19154dbe83 <unavailable> + 188035

    6    tmpzivnp3e0                        0x00005592cc6e9c79 <unavailable> + 7289

    7    tmpzivnp3e0                        0x00005592cc6e9564 <unavailable> + 5476

    8    libc.so.6                          0x00002b1915bd1460 __libc_start_main +
    245

    9    tmpzivnp3e0                        0x00005592cc6e9239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659979640
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0 ..< xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmptyh7ya33/tmptyh7ya33.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac458199c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac457e90b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac457e90988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac457e8f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptyh7ya33                        0x0000555a1f60a6cc <unavailable> + 5836

    5    libc.so.6                          0x00002ac458385460 __libc_start_main +
    245

    6    tmptyh7ya33                        0x0000555a1f60a2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var x = 1\n    for _ in 0..<xs.count {\n      \
    \  result.append(xs[xs.count-1])\n        x *= xs[xs.count-1]\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpyc6xi3ro/tmpyc6xi3ro.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0672746c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b067243db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b067243d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b067243c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyc6xi3ro                        0x000055d2fa42c6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b0672932460 __libc_start_main +
    245

    6    tmpyc6xi3ro                        0x000055d2fa42c2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659979640
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    return derivative(xs, 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmp74961vny.swift:10:27: error: extra argument in call\n    return\
    \ derivative(xs, 1)\n                     ~~~~~^~\n"
  stdout: ''
  timestamp: 1659979640
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0 ..< xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmptyh7ya33/tmptyh7ya33.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac458199c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac457e90b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac457e90988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac457e8f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptyh7ya33                        0x0000555a1f60a6cc <unavailable> + 5836

    5    libc.so.6                          0x00002ac458385460 __libc_start_main +
    245

    6    tmptyh7ya33                        0x0000555a1f60a2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i])\n\
    \        result.append(xs[i] * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmp6e74lxt7/tmp6e74lxt7.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aedefbd8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aedef8cfb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aedef8cf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aedef8ce7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6e74lxt7                        0x000055d1ef0f16cc <unavailable> + 5836

    5    libc.so.6                          0x00002aedefdc4460 __libc_start_main +
    245

    6    tmp6e74lxt7                        0x000055d1ef0f12b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var power = 1\n    for x in xs {\n        result.append(power\
    \ * x)\n        power *= x\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpl0azum_7/tmpl0azum_7.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b29fc119c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b29fbe10b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b29fbe10988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29fbe0f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl0azum_7                        0x0000557d37eaf5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b29fc305460 __libc_start_main +
    245

    6    tmpl0azum_7                        0x0000557d37eaf1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var power = 1\n    for x in xs {\n        result.append(power\
    \ * x)\n        power *= x\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpl0azum_7/tmpl0azum_7.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b29fc119c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b29fbe10b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b29fbe10988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29fbe0f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl0azum_7                        0x0000557d37eaf5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b29fc305460 __libc_start_main +
    245

    6    tmpl0azum_7                        0x0000557d37eaf1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var x = 0\n    for _ in 0..<xs.count {\n      \
    \  result.append(xs[x])\n        x++\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmp5dg16ekf.swift:14:10: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n        x++\n         ^~\n"
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var power = 1\n    for x in xs {\n        result.append(power\
    \ * x)\n        power *= x\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpl0azum_7/tmpl0azum_7.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b29fc119c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b29fbe10b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b29fbe10988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29fbe0f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl0azum_7                        0x0000557d37eaf5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b29fc305460 __libc_start_main +
    245

    6    tmpl0azum_7                        0x0000557d37eaf1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    return derivative(xs, xs.count)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmpj94d86vb.swift:10:30: error: extra argument in call\n    return\
    \ derivative(xs, xs.count)\n                     ~~~~~~~~^~~~~~\n"
  stdout: ''
  timestamp: 1659979640
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i])\n\
    \        result.append(xs[i] * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmp6e74lxt7/tmp6e74lxt7.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aedefbd8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aedef8cfb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aedef8cf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aedef8ce7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6e74lxt7                        0x000055d1ef0f16cc <unavailable> + 5836

    5    libc.so.6                          0x00002aedefdc4460 __libc_start_main +
    245

    6    tmp6e74lxt7                        0x000055d1ef0f12b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i])\n\
    \        result.append(xs[i] * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmp6e74lxt7/tmp6e74lxt7.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aedefbd8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aedef8cfb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aedef8cf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aedef8ce7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6e74lxt7                        0x000055d1ef0f16cc <unavailable> + 5836

    5    libc.so.6                          0x00002aedefdc4460 __libc_start_main +
    245

    6    tmp6e74lxt7                        0x000055d1ef0f12b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var power = 0\n    for x in xs {\n        if power\
    \ > 1 {\n            result.append(1)\n        }\n        result.append(x)\n \
    \       power *= x\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeln6oy7g/tmpeln6oy7g.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7e18d8bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7e18a82b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7e18a82988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7e18a817b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeln6oy7g                        0x000055d2b790a5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b7e18f77460 __libc_start_main +
    245

    6    tmpeln6oy7g                        0x000055d2b790a1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979640
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var x = 0\n    for _ in 0..<xs.count {\n      \
    \  result.append(xs[x])\n        x *= xs[x]\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12,\
    \ 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3,\
    \ 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\
    assert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmp5z4iuexz/tmp5z4iuexz.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab71f7e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab71f4d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab71f4d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab71f4d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5z4iuexz                        0x000055bbe6b586cc <unavailable> + 5836

    5    libc.so.6                          0x00002ab71f9cd460 __libc_start_main +
    245

    6    tmp5z4iuexz                        0x000055bbe6b582b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659979640
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var x = 0\n    for _ in 0..<xs.count {\n      \
    \  result.append(xs[x])\n        x *= xs[x]\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12,\
    \ 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3,\
    \ 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\
    assert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmp5z4iuexz/tmp5z4iuexz.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab71f7e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab71f4d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab71f4d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab71f4d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5z4iuexz                        0x000055bbe6b586cc <unavailable> + 5836

    5    libc.so.6                          0x00002ab71f9cd460 __libc_start_main +
    245

    6    tmp5z4iuexz                        0x000055bbe6b582b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659979640
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var i = 0\n    for x in xs {\n        result.append(x\
    \ * xs[i - 1])\n        i += 1\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'Swift/ContiguousArrayBuffer.swift:600: Fatal error: Index out of range

    Current stack trace:

    0    libswiftCore.so                    0x00002b56b3693c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b56b338a561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b56b338a286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b56b338a13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b56b3389bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftSwiftOnoneSupport.so       0x00002b56b3189e83 <unavailable> + 188035

    6    tmpwq74hg8l                        0x00005571131ffc71 <unavailable> + 7281

    7    tmpwq74hg8l                        0x00005571131ff564 <unavailable> + 5476

    8    libc.so.6                          0x00002b56b387f460 __libc_start_main +
    245

    9    tmpwq74hg8l                        0x00005571131ff239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659979640
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var i = 0\n    for x in xs {\n        result.append(x\
    \ * xs[i])\n        i += 1\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmph6h4a2kf/tmph6h4a2kf.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b65195dec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b65192d5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b65192d5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b65192d47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmph6h4a2kf                        0x0000559d5bda164c <unavailable> + 5708

    5    libc.so.6                          0x00002b65197ca460 __libc_start_main +
    245

    6    tmph6h4a2kf                        0x0000559d5bda1239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659979640
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in xs {\n        result.append(i * i)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpdvgrt3py/tmpdvgrt3py.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aae825eec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aae822e5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aae822e5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aae822e47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdvgrt3py                        0x000055cc31abe5fc <unavailable> + 5628

    5    libc.so.6                          0x00002aae827da460 __libc_start_main +
    245

    6    tmpdvgrt3py                        0x000055cc31abe1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979640
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in xs.indices {\n        result.append(xs[i]\
    \ - xs[i - 1] * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'Swift/ContiguousArrayBuffer.swift:600: Fatal error: Index out of range

    Current stack trace:

    0    libswiftCore.so                    0x00002ac06c379c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac06c070561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002ac06c070286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002ac06c07013c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002ac06c06fbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftSwiftOnoneSupport.so       0x00002ac06be6fe83 <unavailable> + 188035

    6    tmpdzk9g21d                        0x0000556d4dce0c9d <unavailable> + 7325

    7    tmpdzk9g21d                        0x0000556d4dce0584 <unavailable> + 5508

    8    libc.so.6                          0x00002ac06c565460 __libc_start_main +
    245

    9    tmpdzk9g21d                        0x0000556d4dce0259 <unavailable> + 4697

    '
  stdout: ''
  timestamp: 1659979640
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i])\n\
    \        result.append(xs[i] * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmp6e74lxt7/tmp6e74lxt7.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aedefbd8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aedef8cfb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aedef8cf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aedef8ce7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6e74lxt7                        0x000055d1ef0f16cc <unavailable> + 5836

    5    libc.so.6                          0x00002aedefdc4460 __libc_start_main +
    245

    6    tmp6e74lxt7                        0x000055d1ef0f12b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in xs {\n        result.append(1)\n     \
    \   result.append(i)\n    }\n    result.append(0)\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12,\
    \ 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3,\
    \ 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\
    assert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmp54tkxs4r/tmp54tkxs4r.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b36419f2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b36416e9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b36416e9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b36416e87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp54tkxs4r                        0x0000555ce51ed5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b3641bde460 __libc_start_main +
    245

    6    tmp54tkxs4r                        0x0000555ce51ed1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979640
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var x = 1\n    for i in xs {\n        result.append(x\
    \ * i)\n        x += i\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmp031zf3t2/tmp031zf3t2.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ace6462ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ace64325b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ace64325988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ace643247b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp031zf3t2                        0x00005618f39645fc <unavailable> + 5628

    5    libc.so.6                          0x00002ace6481a460 __libc_start_main +
    245

    6    tmp031zf3t2                        0x00005618f39641e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979640
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var i = 0\n    for x in xs {\n        result.append(x\
    \ * xs[i - 1])\n        i += 1\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'Swift/ContiguousArrayBuffer.swift:600: Fatal error: Index out of range

    Current stack trace:

    0    libswiftCore.so                    0x00002b56b3693c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b56b338a561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b56b338a286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b56b338a13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b56b3389bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftSwiftOnoneSupport.so       0x00002b56b3189e83 <unavailable> + 188035

    6    tmpwq74hg8l                        0x00005571131ffc71 <unavailable> + 7281

    7    tmpwq74hg8l                        0x00005571131ff564 <unavailable> + 5476

    8    libc.so.6                          0x00002b56b387f460 __libc_start_main +
    245

    9    tmpwq74hg8l                        0x00005571131ff239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659979640
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i])\n\
    \        result.append(xs[i] * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmp6e74lxt7/tmp6e74lxt7.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aedefbd8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aedef8cfb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aedef8cf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aedef8ce7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6e74lxt7                        0x000055d1ef0f16cc <unavailable> + 5836

    5    libc.so.6                          0x00002aedefdc4460 __libc_start_main +
    245

    6    tmp6e74lxt7                        0x000055d1ef0f12b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    return derivative(xs, 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmpmej0wxzl.swift:10:27: error: extra argument in call\n    return\
    \ derivative(xs, 0)\n                     ~~~~~^~\n"
  stdout: ''
  timestamp: 1659979640
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    return derivative(xs, 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmp74961vny.swift:10:27: error: extra argument in call\n    return\
    \ derivative(xs, 1)\n                     ~~~~~^~\n"
  stdout: ''
  timestamp: 1659979640
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in xs {\n        result.append(1)\n    }\n\
    \    for i in xs.indices {\n        result[i] = result[i] * xs[i]\n    }\n   \
    \ return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpi4hz9clp/tmpi4hz9clp.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aceb50bac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aceb4db1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aceb4db1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aceb4db07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpi4hz9clp                        0x0000561c8d7e382c <unavailable> + 6188

    5    libc.so.6                          0x00002aceb52a6460 __libc_start_main +
    245

    6    tmpi4hz9clp                        0x0000561c8d7e3419 <unavailable> + 5145

    '
  stdout: ''
  timestamp: 1659979640
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var i = 0\n    for x in xs {\n        result.append(x\
    \ * xs[(i + 1)])\n        i += 1\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'Swift/ContiguousArrayBuffer.swift:600: Fatal error: Index out of range

    Current stack trace:

    0    libswiftCore.so                    0x00002b0a5a74ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0a5a441561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b0a5a441286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b0a5a44113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b0a5a440bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftSwiftOnoneSupport.so       0x00002b0a5a240e83 <unavailable> + 188035

    6    tmpy5wsehi7                        0x000056481b154c71 <unavailable> + 7281

    7    tmpy5wsehi7                        0x000056481b154564 <unavailable> + 5476

    8    libc.so.6                          0x00002b0a5a936460 __libc_start_main +
    245

    9    tmpy5wsehi7                        0x000056481b154239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659979640
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var x = 0\n    for _ in 0..<xs.count {\n      \
    \  result.append(xs[x])\n        x++\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmp5dg16ekf.swift:14:10: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n        x++\n         ^~\n"
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var power = 1\n    for x in xs {\n        result.append(power\
    \ * x)\n        power *= x\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpl0azum_7/tmpl0azum_7.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b29fc119c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b29fbe10b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b29fbe10988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29fbe0f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl0azum_7                        0x0000557d37eaf5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b29fc305460 __libc_start_main +
    245

    6    tmpl0azum_7                        0x0000557d37eaf1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i])\n\
    \        result.append(xs[i] * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmp6e74lxt7/tmp6e74lxt7.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aedefbd8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aedef8cfb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aedef8cf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aedef8ce7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6e74lxt7                        0x000055d1ef0f16cc <unavailable> + 5836

    5    libc.so.6                          0x00002aedefdc4460 __libc_start_main +
    245

    6    tmp6e74lxt7                        0x000055d1ef0f12b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var power = 1\n    for x in xs {\n        result.append(power\
    \ * x)\n        power *= x\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpl0azum_7/tmpl0azum_7.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b29fc119c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b29fbe10b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b29fbe10988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29fbe0f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl0azum_7                        0x0000557d37eaf5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b29fc305460 __libc_start_main +
    245

    6    tmpl0azum_7                        0x0000557d37eaf1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var x = 0\n    for _ in 0..<xs.count {\n      \
    \  result.append(xs[x])\n        x++\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmp5dg16ekf.swift:14:10: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n        x++\n         ^~\n"
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var i = 0\n    for x in xs {\n        result.append(x\
    \ * xs[i])\n        i += 1\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmph6h4a2kf/tmph6h4a2kf.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b65195dec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b65192d5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b65192d5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b65192d47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmph6h4a2kf                        0x0000559d5bda164c <unavailable> + 5708

    5    libc.so.6                          0x00002b65197ca460 __libc_start_main +
    245

    6    tmph6h4a2kf                        0x0000559d5bda1239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659979640
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var i = 0\n    for x in xs {\n        result.append(x\
    \ * xs[i] - xs[i - 1])\n        i += 1\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12,\
    \ 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3,\
    \ 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\
    assert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'Swift/ContiguousArrayBuffer.swift:600: Fatal error: Index out of range

    Current stack trace:

    0    libswiftCore.so                    0x00002afbb3504c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afbb31fb561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002afbb31fb286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002afbb31fb13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002afbb31fabb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftSwiftOnoneSupport.so       0x00002afbb2ffae83 <unavailable> + 188035

    6    tmp5ejr2hns                        0x000055f1e5029ca9 <unavailable> + 7337

    7    tmp5ejr2hns                        0x000055f1e5029564 <unavailable> + 5476

    8    libc.so.6                          0x00002afbb36f0460 __libc_start_main +
    245

    9    tmp5ejr2hns                        0x000055f1e5029239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659979640
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in xs {\n        result.append(1)\n     \
    \   result.append(i * result[0])\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpy5focej8/tmpy5focej8.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b462387ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4623575b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4623575988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b46235747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpy5focej8                        0x0000556a0265764c <unavailable> + 5708

    5    libc.so.6                          0x00002b4623a6a460 __libc_start_main +
    245

    6    tmpy5focej8                        0x0000556a02657239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659979640
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var power = 0\n    for x in xs {\n        result.append(1)\n\
    \        power += 1\n        while power < x.count {\n            result.append(result[power]\
    \ * x)\n            power += 1\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12,\
    \ 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3,\
    \ 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\
    assert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmpumxvs1pb.swift:15:25: error: value of type 'Int' has no member\
    \ 'count'\n        while power < x.count {\n                      ~ ^~~~~\n"
  stdout: ''
  timestamp: 1659979640
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0 ..< xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmptyh7ya33/tmptyh7ya33.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac458199c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac457e90b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac457e90988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac457e8f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptyh7ya33                        0x0000555a1f60a6cc <unavailable> + 5836

    5    libc.so.6                          0x00002ac458385460 __libc_start_main +
    245

    6    tmptyh7ya33                        0x0000555a1f60a2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in xs {\n        result.append(1)\n    }\n\
    \    for i in xs.indices {\n        result[i] *= xs[i]\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12,\
    \ 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3,\
    \ 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\
    assert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmp1q5fno5u/tmp1q5fno5u.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abce3be2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abce38d9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abce38d9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abce38d87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1q5fno5u                        0x00005584493fd82c <unavailable> + 6188

    5    libc.so.6                          0x00002abce3dce460 __libc_start_main +
    245

    6    tmp1q5fno5u                        0x00005584493fd419 <unavailable> + 5145

    '
  stdout: ''
  timestamp: 1659979641
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var i = 0\n    while i < xs.count {\n        result.append(xs[i]\
    \ - xs[i-1] * xs[i])\n        i += 1\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'Swift/ContiguousArrayBuffer.swift:600: Fatal error: Index out of range

    Current stack trace:

    0    libswiftCore.so                    0x00002b4c59089c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4c58d80561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b4c58d80286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b4c58d8013c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b4c58d7fbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftSwiftOnoneSupport.so       0x00002b4c58b7fe83 <unavailable> + 188035

    6    tmp1_4fivwc                        0x0000556d7cf9dad7 <unavailable> + 6871

    7    tmp1_4fivwc                        0x0000556d7cf9d454 <unavailable> + 5204

    8    libc.so.6                          0x00002b4c59275460 __libc_start_main +
    245

    9    tmp1_4fivwc                        0x0000556d7cf9d129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659979641
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var x = 0\n    for _ in 0..<xs.count {\n      \
    \  result.append(xs[x])\n        x += xs[x]\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12,\
    \ 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3,\
    \ 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\
    assert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'Swift/ContiguousArrayBuffer.swift:600: Fatal error: Index out of range

    Current stack trace:

    0    libswiftCore.so                    0x00002af0828cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af0825c6561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002af0825c6286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002af0825c613c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002af0825c5bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftSwiftOnoneSupport.so       0x00002af0823c5e83 <unavailable> + 188035

    6    tmpu6xlf4by                        0x000055574afa7cec <unavailable> + 7404

    7    tmpu6xlf4by                        0x000055574afa75e4 <unavailable> + 5604

    8    libc.so.6                          0x00002af082abb460 __libc_start_main +
    245

    9    tmpu6xlf4by                        0x000055574afa72b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659979641
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in xs {\n        result.append(1)\n    }\n\
    \    result.append(0)\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmp59qh9r8b/tmp59qh9r8b.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b73955a5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b739529cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b739529c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b739529b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp59qh9r8b                        0x000055ae0699b5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b7395791460 __libc_start_main +
    245

    6    tmp59qh9r8b                        0x000055ae0699b1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979641
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    return derivative(xs, 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmp74961vny.swift:10:27: error: extra argument in call\n    return\
    \ derivative(xs, 1)\n                     ~~~~~^~\n"
  stdout: ''
  timestamp: 1659979640
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0 ..< xs.count {\n        result.append(xs[i])\n\
    \        result.append(xs[i] * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmp3iyu052_/tmp3iyu052_.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac76975ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac769451b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac769451988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac7694507b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3iyu052_                        0x0000557f25f466cc <unavailable> + 5836

    5    libc.so.6                          0x00002ac769946460 __libc_start_main +
    245

    6    tmp3iyu052_                        0x0000557f25f462b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var power = 1\n    for x in xs {\n        result.append(power\
    \ * x)\n        power *= x\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpl0azum_7/tmpl0azum_7.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b29fc119c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b29fbe10b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b29fbe10988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29fbe0f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl0azum_7                        0x0000557d37eaf5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b29fc305460 __libc_start_main +
    245

    6    tmpl0azum_7                        0x0000557d37eaf1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in xs.indices {\n        result.append(xs[i]\
    \ - xs[i-1] * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'Swift/ContiguousArrayBuffer.swift:600: Fatal error: Index out of range

    Current stack trace:

    0    libswiftCore.so                    0x00002b72b1816c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b72b150d561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b72b150d286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b72b150d13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b72b150cbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftSwiftOnoneSupport.so       0x00002b72b130ce83 <unavailable> + 188035

    6    tmpmbc79k1s                        0x000056336fba8c9d <unavailable> + 7325

    7    tmpmbc79k1s                        0x000056336fba8584 <unavailable> + 5508

    8    libc.so.6                          0x00002b72b1a02460 __libc_start_main +
    245

    9    tmpmbc79k1s                        0x000056336fba8259 <unavailable> + 4697

    '
  stdout: ''
  timestamp: 1659979641
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var i = 0\n    for x in xs {\n        result.append(x\
    \ * xs[(i + 1)])\n        i += 1\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'Swift/ContiguousArrayBuffer.swift:600: Fatal error: Index out of range

    Current stack trace:

    0    libswiftCore.so                    0x00002b0a5a74ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0a5a441561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b0a5a441286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b0a5a44113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b0a5a440bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftSwiftOnoneSupport.so       0x00002b0a5a240e83 <unavailable> + 188035

    6    tmpy5wsehi7                        0x000056481b154c71 <unavailable> + 7281

    7    tmpy5wsehi7                        0x000056481b154564 <unavailable> + 5476

    8    libc.so.6                          0x00002b0a5a936460 __libc_start_main +
    245

    9    tmpy5wsehi7                        0x000056481b154239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659979640
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var i = 0\n    for x in xs {\n        result.append(x\
    \ * xs[i - 1])\n        i += 1\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'Swift/ContiguousArrayBuffer.swift:600: Fatal error: Index out of range

    Current stack trace:

    0    libswiftCore.so                    0x00002b56b3693c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b56b338a561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b56b338a286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b56b338a13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b56b3389bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftSwiftOnoneSupport.so       0x00002b56b3189e83 <unavailable> + 188035

    6    tmpwq74hg8l                        0x00005571131ffc71 <unavailable> + 7281

    7    tmpwq74hg8l                        0x00005571131ff564 <unavailable> + 5476

    8    libc.so.6                          0x00002b56b387f460 __libc_start_main +
    245

    9    tmpwq74hg8l                        0x00005571131ff239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659979640
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var x = 0\n    for _ in 0..<xs.count {\n      \
    \  result.append(xs[x])\n        x++\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmp5dg16ekf.swift:14:10: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n        x++\n         ^~\n"
  stdout: ''
  timestamp: 1659824844
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    return derivative(xs, xs.count)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmpj94d86vb.swift:10:30: error: extra argument in call\n    return\
    \ derivative(xs, xs.count)\n                     ~~~~~~~~^~~~~~\n"
  stdout: ''
  timestamp: 1659979640
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var i = 0\n    for x in xs {\n        result.append(x\
    \ * i)\n        i += 1\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxake6bu9/tmpxake6bu9.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2583ffcc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2583cf3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2583cf3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2583cf27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxake6bu9                        0x00005649e3d545fc <unavailable> + 5628

    5    libc.so.6                          0x00002b25841e8460 __libc_start_main +
    245

    6    tmpxake6bu9                        0x00005649e3d541e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659979640
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844

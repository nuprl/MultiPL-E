language: swift
name: HumanEval_91_is_bored
results:
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    return is_bored_helper(S, \"\")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp0jubkhhk.swift:11:12: error: cannot find 'is_bored_helper' in scope\n\
    \    return is_bored_helper(S, \"\")\n           ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824499
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    return is_bored(S: S, words: S.words)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"\
    Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpskk664pf.swift:11:36: error: extra argument 'words' in call\n \
    \   return is_bored(S: S, words: S.words)\n                   ~~~~~~~~~~~~~~~~^~~~~~\n\
    /tmp/tmpskk664pf.swift:11:36: error: value of type 'String' has no member 'words'\n\
    \    return is_bored(S: S, words: S.words)\n                                 ~\
    \ ^~~~~\n"
  stdout: ''
  timestamp: 1659824499
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    return is_bored_helper(S, \"\", 0, 0, 0)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpgjk5rrsb.swift:11:12: error: cannot find 'is_bored_helper' in scope\n\
    \    return is_bored_helper(S, \"\", 0, 0, 0)\n           ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824499
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let boredoms = S.split(separator: \".?!\").filter({ $0.hasPrefix(\"\
    I\") }).count\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the sky blue?\"\
    ) == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S: \"bIt\"\
    ) == 0)\nassert(is_bored(S: \"I feel good today. I will be productive. will kill\
    \ It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\") == 0)"
  status: Exception
  stderr: 'tmproh5st44/tmproh5st44.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8c22ee6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8c22bddb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8c22bdd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8c22bdc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmproh5st44                        0x000056194175166b <unavailable> + 5739

    5    libc.so.6                          0x00002b8c230d2460 __libc_start_main +
    245

    6    tmproh5st44                        0x0000561941751249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824499
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let boredoms = S.components(separatedBy: \".?!\")\n    return\
    \ boredoms.filter({ $0.hasPrefix(\"I\") }).count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"\
    Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpoqb7rtx2.swift:11:22: error: value of type 'String' has no member\
    \ 'components'\n    let boredoms = S.components(separatedBy: \".?!\")\n      \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824566
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    return is_bored_impl(S, \"\")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpjlxsmr75.swift:11:12: error: cannot find 'is_bored_impl' in scope\n\
    \    return is_bored_impl(S, \"\")\n           ^~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824499
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let boredoms = S.components(separatedBy: \".?!\").filter {\n \
    \       !$0.isEmpty\n    }\n    return boredoms.count { $0.hasPrefix(\"I\") }\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpmayqeyk8.swift:11:22: error: value of type 'String' has no member\
    \ 'components'\n    let boredoms = S.components(separatedBy: \".?!\").filter {\n\
    \                   ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824566
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let boredoms = S.components(separatedBy: \".?!\")\n    return\
    \ boredoms.filter({ $0.hasPrefix(\"I\") }).count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"\
    Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpoqb7rtx2.swift:11:22: error: value of type 'String' has no member\
    \ 'components'\n    let boredoms = S.components(separatedBy: \".?!\")\n      \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824566
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let words = S.components(separatedBy: \".\")\n    let boredoms\
    \ = words.filter({ $0.hasPrefix(\"I\") }).count\n    return boredoms\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmppd76a2mh.swift:11:19: error: value of type 'String' has no member\
    \ 'components'\n    let words = S.components(separatedBy: \".\")\n           \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824499
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    return is_bored_helper(S, \"\", 0, 0, 0)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpgjk5rrsb.swift:11:12: error: cannot find 'is_bored_helper' in scope\n\
    \    return is_bored_helper(S, \"\", 0, 0, 0)\n           ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824499
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let boredoms = S.components(separatedBy: \".?!\")\n    return\
    \ boredoms.count { $0.hasPrefix(\"I\") }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the sky blue?\"\
    ) == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S: \"bIt\"\
    ) == 0)\nassert(is_bored(S: \"I feel good today. I will be productive. will kill\
    \ It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\") == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp318zxirf.swift:11:22: error: value of type 'String' has no member\
    \ 'components'\n    let boredoms = S.components(separatedBy: \".?!\")\n      \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824499
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    return is_bored_impl(S, \"\")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpjlxsmr75.swift:11:12: error: cannot find 'is_bored_impl' in scope\n\
    \    return is_bored_impl(S, \"\")\n           ^~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824499
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    \n    // TODO: Write a function that takes a string and returns\
    \ the number of boredoms.\n    // HINT: Use a regular expression to find all sentences\
    \ that start with the word \"I\".\n    // HINT: You may want to use split() on\
    \ the sentence to split it into an array of words.\n    \n    // BEGIN PSEUDOCODE\n\
    \    \n    // END PSEUDOCODE\n    \n    return 0\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"\
    Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmp503wb2y7/tmp503wb2y7.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b812cf30c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b812cc27b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b812cc27988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b812cc267b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp503wb2y7                        0x000055c65afcd3b2 <unavailable> + 5042

    5    libc.so.6                          0x00002b812d11c460 __libc_start_main +
    245

    6    tmp503wb2y7                        0x000055c65afccee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824566
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    return is_bored_impl(S, \"\")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpjlxsmr75.swift:11:12: error: cannot find 'is_bored_impl' in scope\n\
    \    return is_bored_impl(S, \"\")\n           ^~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824499
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    // TODO: Your code here\n    return 0\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"\
    Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmptwnhx6zi/tmptwnhx6zi.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b45eb8e2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b45eb5d9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b45eb5d9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b45eb5d87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptwnhx6zi                        0x000055a1544423b2 <unavailable> + 5042

    5    libc.so.6                          0x00002b45ebace460 __libc_start_main +
    245

    6    tmptwnhx6zi                        0x000055a154441ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824566
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    \n    // TODO: Write a function that takes a string and returns\
    \ the number of boredoms.\n    // HINT: You can use the split() function to split\
    \ a string into a list of strings.\n    // Then you can check if the first element\
    \ of the list equals \"I\".\n    \n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmp5_lmoqx_/tmp5_lmoqx_.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a3122ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a30f21b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a30f21988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a30f207b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5_lmoqx_                        0x00005633573233b2 <unavailable> + 5042

    5    libc.so.6                          0x00002b9a31416460 __libc_start_main +
    245

    6    tmp5_lmoqx_                        0x0000563357322ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824566
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    return is_bored_helper(S, \"\", \"\")\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"\
    Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpvdea0uht.swift:11:12: error: cannot find 'is_bored_helper' in scope\n\
    \    return is_bored_helper(S, \"\", \"\")\n           ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824499
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    \n    // TODO: Write your code here\n    \n    return 0\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmpcpsp77cp/tmpcpsp77cp.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4421aa9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44217a0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44217a0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b442179f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpsp77cp                        0x00005624f26ac3b2 <unavailable> + 5042

    5    libc.so.6                          0x00002b4421c95460 __libc_start_main +
    245

    6    tmpcpsp77cp                        0x00005624f26abee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824566
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    let boredoms = S.components(separatedBy: \".?!\")\n        .filter({$0.hasPrefix(\"\
    I\")})\n        .count\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpn4jjfzra.swift:11:22: error: value of type 'String' has no member\
    \ 'components'\n    let boredoms = S.components(separatedBy: \".?!\")\n      \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824566
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(S: \"Hello world\")\n/// 0\n/// >>> is_bored(S: \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String)\
    \ -> Int {\n    var boredoms = 0\n    for word in S.split(separator: \".?!\")\
    \ {\n        if word == \"I\" {\n            boredoms += 1\n        }\n    }\n\
    \    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_bored(S:\
    \ \"Hello world\") == 0)\nassert(is_bored(S: \"Is the sky blue?\") == 0)\nassert(is_bored(S:\
    \ \"I love It !\") == 1)\nassert(is_bored(S: \"bIt\") == 0)\nassert(is_bored(S:\
    \ \"I feel good today. I will be productive. will kill It\") == 2)\nassert(is_bored(S:\
    \ \"You and I are going for a walk\") == 0)"
  status: Exception
  stderr: 'tmp3aj0ih9f/tmp3aj0ih9f.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe4802ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe47d21b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe47d21988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe47d207b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3aj0ih9f                        0x000056334ea1d7b2 <unavailable> + 6066

    5    libc.so.6                          0x00002abe48216460 __libc_start_main +
    245

    6    tmp3aj0ih9f                        0x000056334ea1d2e9 <unavailable> + 4841

    '
  stdout: ''
  timestamp: 1659824499

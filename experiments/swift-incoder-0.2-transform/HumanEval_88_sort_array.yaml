name: HumanEval_88_sort_array
language: swift
prompt: "\n/// Given an array of non-negative integers, return a copy of the given\
  \ array after sorting,\n/// you will sort the given array in ascending order if\
  \ the sum( first index value, last index value) is odd,\n/// or sort it in descending\
  \ order if the sum( first index value, last index value) is even.\n/// Note:\n///\
  \ * don't change the given array.\n/// Examples:\n/// >>> sort_array(array: [] as\
  \ [Int])\n/// [] as [Int]\n/// >>> sort_array(array: [5])\n/// [5]\n/// >>> sort_array(array:\
  \ [2, 4, 3, 0, 1, 5])\n/// [0, 1, 2, 3, 4, 5]\n/// >>> sort_array(array: [2, 4,\
  \ 3, 0, 1, 5, 6])\n/// [6, 5, 4, 3, 2, 1, 0]\nfunc sort_array(array: [Int]) -> [Int]\
  \ {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(sort_array(array: [] as [Int]) == [] as\
  \ [Int])\nassert(sort_array(array: [5]) == [5])\nassert(sort_array(array: [2, 4,\
  \ 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5])\nassert(sort_array(array: [2, 4, 3, 0, 1,\
  \ 5, 6]) == [6, 5, 4, 3, 2, 1, 0])\nassert(sort_array(array: [2, 1]) == [1, 2])\n\
  assert(sort_array(array: [15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87])\n\
  assert(sort_array(array: [21, 14, 23, 11]) == [23, 21, 14, 11])"
completions: ['    return array.sorted()', '    return array.sorted()', "    var sum\
    \ = 0\n    for value in array {\n        sum += value\n    }\n    if sum % 2 ==\
    \ 1 {\n        array.sortInPlace()\n    } else {\n        array.sortInPlace{ $0\
    \ < $1 }\n    }\n    return array", '    return array.sorted()', '    return array.sorted()',
  "    var sum = 0\n    for value in array {\n        sum += value\n    }\n    if\
    \ sum % 2 == 1 {\n        array.sortInPlace()\n    } else {\n        array.sortInPlace()\n\
    \        array.reverse()\n    }\n    return array", '    return array.sorted()',
  '    return array.sorted()', "    var result = array\n    if array.count > 0 {\n\
    \        let sum = array[0] + array[array.count - 1]\n        if sum % 2 == 1\
    \ {\n            result = result.sorted()\n        } else {\n            result\
    \ = result.sorted().reversed()\n        }\n    }\n    return result", '    return
    array.sorted()', "    if array.count < 2 {\n        return array\n    }\n    var\
    \ sum = 0\n    for value in array {\n        sum += value\n    }\n    if sum %\
    \ 2 == 1 {\n        array.sortInPlace()\n    } else {\n        array.sortInPlace{\
    \ $0 < $1 }\n    }\n    return array", '    return array.sorted()', '    return
    array.sorted()', "    var result = array\n    if array.count > 0 {\n        let\
    \ sum = array[0] + array[array.count - 1]\n        if sum % 2 == 1 {\n       \
    \     result = result.sorted()\n        } else {\n            result = result.sorted().reversed()\n\
    \        }\n    }\n    return result", '    return array.sorted()', '    return
    array.sorted()', "    var result = [Int]()\n    var sum = 0\n    for element in\
    \ array {\n        sum += element\n    }\n    if sum % 2 == 0 {\n        result.sortInPlace()\n\
    \    } else {\n        result.sortInPlace()\n        result.reverse()\n    }\n\
    \    return result", '    return array.sorted()', '    return array.sorted()',
  '    return array.sorted()']
stop_tokens:
- "\n}"

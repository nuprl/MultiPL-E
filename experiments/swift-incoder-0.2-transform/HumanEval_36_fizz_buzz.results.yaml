language: swift
name: HumanEval_36_fizz_buzz
results:
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 0..<n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz0ytyodi/tmpz0ytyodi.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b73e00c2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b73dfdb9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b73dfdb9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b73dfdb87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz0ytyodi                        0x00005616478cf338 <unavailable> + 4920

    5    libc.so.6                          0x00002b73e02ae460 __libc_start_main +
    245

    6    tmpz0ytyodi                        0x00005616478cefe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n\
    \    return Int(ceil(log2(n)))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp47na82q5.swift:13:16: error: cannot find 'ceil' in scope\n    return\
    \ Int(ceil(log2(n)))\n               ^~~~\n/tmp/tmp47na82q5.swift:13:21: error:\
    \ cannot find 'log2' in scope\n    return Int(ceil(log2(n)))\n               \
    \     ^~~~\n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 0..<n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz0ytyodi/tmpz0ytyodi.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b73e00c2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b73dfdb9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b73dfdb9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b73dfdb87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz0ytyodi                        0x00005616478cf338 <unavailable> + 4920

    5    libc.so.6                          0x00002b73e02ae460 __libc_start_main +
    245

    6    tmpz0ytyodi                        0x00005616478cefe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 0..<n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz0ytyodi/tmpz0ytyodi.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b73e00c2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b73dfdb9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b73dfdb9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b73dfdb87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz0ytyodi                        0x00005616478cf338 <unavailable> + 4920

    5    libc.so.6                          0x00002b73e02ae460 __libc_start_main +
    245

    6    tmpz0ytyodi                        0x00005616478cefe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for _ in 0..<n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n        n /= 10\n   \
    \ }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp6bvguvuf.swift:15:11: error: left side of mutating operator isn't\
    \ mutable: 'n' is a 'let' constant\n        n /= 10\n        ~ ^\n"
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n\
    \    return 1 + fizz_buzz(n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpxj7xd_1o.swift:13:26: error: missing argument label 'n:' in call\n\
    \    return 1 + fizz_buzz(n - 1)\n                         ^\n               \
    \          n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 0..<n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz0ytyodi/tmpz0ytyodi.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b73e00c2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b73dfdb9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b73dfdb9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b73dfdb87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz0ytyodi                        0x00005616478cf338 <unavailable> + 4920

    5    libc.so.6                          0x00002b73e02ae460 __libc_start_main +
    245

    6    tmpz0ytyodi                        0x00005616478cefe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    let digits = [7, 11]\n    let remainder = n % 10\n    if\
    \ remainder == 7 {\n        return digits.contains(remainder) ? 0 : digits.count\
    \ + 1\n    }\n    return digits.contains(remainder) ? digits.count + 1 : digits.count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp8sz0efun/tmp8sz0efun.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2df12f6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2df0fedb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2df0fed988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2df0fec7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8sz0efun                        0x000056352e4e5418 <unavailable> + 5144

    5    libc.so.6                          0x00002b2df14e2460 __libc_start_main +
    245

    6    tmp8sz0efun                        0x000056352e4e50c9 <unavailable> + 4297

    '
  stdout: ''
  timestamp: 1660014179
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 0..<n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz0ytyodi/tmpz0ytyodi.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b73e00c2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b73dfdb9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b73dfdb9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b73dfdb87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz0ytyodi                        0x00005616478cf338 <unavailable> + 4920

    5    libc.so.6                          0x00002b73e02ae460 __libc_start_main +
    245

    6    tmpz0ytyodi                        0x00005616478cefe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    let digits = String(format: \"%0*d\", n, 0)\n    let digitCount\
    \ = digits.count\n    let digit7Count = digitCount - digits.filter({ $0 == \"\
    7\" }).count\n    return digit7Count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n:\
    \ 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\n\
    assert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n:\
    \ 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmprvaxdpxu.swift:10:24: error: incorrect argument labels in call\
    \ (have 'format:_:_:', expected '_:radix:uppercase:')\n    let digits = String(format:\
    \ \"%0*d\", n, 0)\n                       ^~~~~~~~~\n                        \
    \                radix:  uppercase: \n/tmp/tmprvaxdpxu.swift:10:18: error: initializer\
    \ 'init(_:radix:uppercase:)' requires that 'String' conform to 'BinaryInteger'\n\
    \    let digits = String(format: \"%0*d\", n, 0)\n                 ^\nSwift.String:2:12:\
    \ note: where 'T' = 'String'\n    public init<T>(_ value: T, radix: Int = 10,\
    \ uppercase: Bool = false) where T : BinaryInteger\n           ^\n/tmp/tmprvaxdpxu.swift:10:44:\
    \ error: type 'Int' cannot be used as a boolean; test for '!= 0' instead\n   \
    \ let digits = String(format: \"%0*d\", n, 0)\n                              \
    \             ^\n                                           ( != 0)\n"
  stdout: ''
  timestamp: 1660014179
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for num in 1...n {\n        if num % 11\
    \ == 0 || num % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpsr5_n1k8/tmpsr5_n1k8.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3d9e6f8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3d9e3efb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3d9e3ef988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3d9e3ee7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsr5_n1k8                        0x000055e79d2b3338 <unavailable> + 4920

    5    libc.so.6                          0x00002b3d9e8e4460 __libc_start_main +
    245

    6    tmpsr5_n1k8                        0x000055e79d2b2fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 1...n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpxyx4vr0v/tmpxyx4vr0v.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52d7c96c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52d798db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52d798d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52d798c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxyx4vr0v                        0x00005568de49c338 <unavailable> + 4920

    5    libc.so.6                          0x00002b52d7e82460 __libc_start_main +
    245

    6    tmpxyx4vr0v                        0x00005568de49bfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n\
    \    return Int(ceil(log2(n)))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp47na82q5.swift:13:16: error: cannot find 'ceil' in scope\n    return\
    \ Int(ceil(log2(n)))\n               ^~~~\n/tmp/tmp47na82q5.swift:13:21: error:\
    \ cannot find 'log2' in scope\n    return Int(ceil(log2(n)))\n               \
    \     ^~~~\n"
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    let digits = String(format: \"%0*d\", n, 0).characters\n\
    \    return digits.filter({ $0 == \"7\" }).count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n:\
    \ 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\n\
    assert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n:\
    \ 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmptnyfg1p9.swift:10:24: error: incorrect argument labels in call\
    \ (have 'format:_:_:', expected '_:radix:uppercase:')\n    let digits = String(format:\
    \ \"%0*d\", n, 0).characters\n                       ^~~~~~~~~\n             \
    \                           radix:  uppercase: \n/tmp/tmptnyfg1p9.swift:10:18:\
    \ error: initializer 'init(_:radix:uppercase:)' requires that 'String' conform\
    \ to 'BinaryInteger'\n    let digits = String(format: \"%0*d\", n, 0).characters\n\
    \                 ^\nSwift.String:2:12: note: where 'T' = 'String'\n    public\
    \ init<T>(_ value: T, radix: Int = 10, uppercase: Bool = false) where T : BinaryInteger\n\
    \           ^\n/tmp/tmptnyfg1p9.swift:10:44: error: type 'Int' cannot be used\
    \ as a boolean; test for '!= 0' instead\n    let digits = String(format: \"%0*d\"\
    , n, 0).characters\n                                           ^\n           \
    \                                ( != 0)\n"
  stdout: ''
  timestamp: 1660014179
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for num in 1...n {\n        if num % 11\
    \ == 0 || num % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpsr5_n1k8/tmpsr5_n1k8.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3d9e6f8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3d9e3efb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3d9e3ef988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3d9e3ee7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsr5_n1k8                        0x000055e79d2b3338 <unavailable> + 4920

    5    libc.so.6                          0x00002b3d9e8e4460 __libc_start_main +
    245

    6    tmpsr5_n1k8                        0x000055e79d2b2fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return n\n    }\n\
    \    return fizz_buzz(n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmptfpl2xcj.swift:13:22: error: missing argument label 'n:' in call\n\
    \    return fizz_buzz(n - 1)\n                     ^\n                     n:\
    \ \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for _ in 0..<n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n        n /= 10\n   \
    \ }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp6bvguvuf.swift:15:11: error: left side of mutating operator isn't\
    \ mutable: 'n' is a 'let' constant\n        n /= 10\n        ~ ^\n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 1...n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpxyx4vr0v/tmpxyx4vr0v.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52d7c96c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52d798db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52d798d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52d798c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxyx4vr0v                        0x00005568de49c338 <unavailable> + 4920

    5    libc.so.6                          0x00002b52d7e82460 __libc_start_main +
    245

    6    tmpxyx4vr0v                        0x00005568de49bfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n\
    \    return 1 + fizz_buzz(n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpxj7xd_1o.swift:13:26: error: missing argument label 'n:' in call\n\
    \    return 1 + fizz_buzz(n - 1)\n                         ^\n               \
    \          n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for num in 1...n {\n        if num % 11\
    \ == 0 || num % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpsr5_n1k8/tmpsr5_n1k8.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3d9e6f8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3d9e3efb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3d9e3ef988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3d9e3ee7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsr5_n1k8                        0x000055e79d2b3338 <unavailable> + 4920

    5    libc.so.6                          0x00002b3d9e8e4460 __libc_start_main +
    245

    6    tmpsr5_n1k8                        0x000055e79d2b2fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n\
    \    return Int(ceil(log2(n)))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp47na82q5.swift:13:16: error: cannot find 'ceil' in scope\n    return\
    \ Int(ceil(log2(n)))\n               ^~~~\n/tmp/tmp47na82q5.swift:13:21: error:\
    \ cannot find 'log2' in scope\n    return Int(ceil(log2(n)))\n               \
    \     ^~~~\n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 0..<n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz0ytyodi/tmpz0ytyodi.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b73e00c2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b73dfdb9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b73dfdb9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b73dfdb87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz0ytyodi                        0x00005616478cf338 <unavailable> + 4920

    5    libc.so.6                          0x00002b73e02ae460 __libc_start_main +
    245

    6    tmpz0ytyodi                        0x00005616478cefe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n\
    \    return 1 + fizz_buzz(n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpxj7xd_1o.swift:13:26: error: missing argument label 'n:' in call\n\
    \    return 1 + fizz_buzz(n - 1)\n                         ^\n               \
    \          n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return n\n    }\n\
    \    return fizz_buzz(n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmptfpl2xcj.swift:13:22: error: missing argument label 'n:' in call\n\
    \    return fizz_buzz(n - 1)\n                     ^\n                     n:\
    \ \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var result = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            result += 1\n        }\n    }\n\
    \    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpgz4fwbm6/tmpgz4fwbm6.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3c34ef4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3c34bebb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3c34beb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3c34bea7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgz4fwbm6                        0x0000561b559d1338 <unavailable> + 4920

    5    libc.so.6                          0x00002b3c350e0460 __libc_start_main +
    245

    6    tmpgz4fwbm6                        0x0000561b559d0fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in stride(from: n, through:\
    \ 1, by: -1) {\n        if number % 11 == 0 || number % 13 == 0 {\n          \
    \  count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n:\
    \ 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\n\
    assert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n:\
    \ 100000) == 8026)"
  status: Exception
  stderr: 'tmpxej1j_nf/tmpxej1j_nf.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9efd519c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9efd210b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9efd210988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9efd20f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxej1j_nf                        0x0000563b9b2e9478 <unavailable> + 5240

    5    libc.so.6                          0x00002b9efd705460 __libc_start_main +
    245

    6    tmpxej1j_nf                        0x0000563b9b2e9129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 1...n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpxyx4vr0v/tmpxyx4vr0v.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52d7c96c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52d798db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52d798d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52d798c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxyx4vr0v                        0x00005568de49c338 <unavailable> + 4920

    5    libc.so.6                          0x00002b52d7e82460 __libc_start_main +
    245

    6    tmpxyx4vr0v                        0x00005568de49bfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 0..<n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz0ytyodi/tmpz0ytyodi.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b73e00c2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b73dfdb9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b73dfdb9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b73dfdb87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz0ytyodi                        0x00005616478cf338 <unavailable> + 4920

    5    libc.so.6                          0x00002b73e02ae460 __libc_start_main +
    245

    6    tmpz0ytyodi                        0x00005616478cefe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 0..<n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz0ytyodi/tmpz0ytyodi.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b73e00c2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b73dfdb9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b73dfdb9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b73dfdb87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz0ytyodi                        0x00005616478cf338 <unavailable> + 4920

    5    libc.so.6                          0x00002b73e02ae460 __libc_start_main +
    245

    6    tmpz0ytyodi                        0x00005616478cefe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return n\n    }\n\
    \    return fizz_buzz(n - 1) + 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp9vmqxj4b.swift:13:22: error: missing argument label 'n:' in call\n\
    \    return fizz_buzz(n - 1) + 1\n                     ^\n                   \
    \  n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for num in 1...n {\n        if num % 11\
    \ == 0 || num % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpsr5_n1k8/tmpsr5_n1k8.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3d9e6f8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3d9e3efb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3d9e3ef988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3d9e3ee7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsr5_n1k8                        0x000055e79d2b3338 <unavailable> + 4920

    5    libc.so.6                          0x00002b3d9e8e4460 __libc_start_main +
    245

    6    tmpsr5_n1k8                        0x000055e79d2b2fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 1...n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpxyx4vr0v/tmpxyx4vr0v.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52d7c96c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52d798db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52d798d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52d798c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxyx4vr0v                        0x00005568de49c338 <unavailable> + 4920

    5    libc.so.6                          0x00002b52d7e82460 __libc_start_main +
    245

    6    tmpxyx4vr0v                        0x00005568de49bfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n == 0 || n == 1 {\n        return 1\n    }\n    if n\
    \ % 11 == 0 || n % 13 == 0 {\n        return fizz_buzz(n - 1) + 1\n    }\n   \
    \ return fizz_buzz(n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp948gqltv.swift:14:26: error: missing argument label 'n:' in call\n\
    \        return fizz_buzz(n - 1) + 1\n                         ^\n           \
    \              n: \n/tmp/tmp948gqltv.swift:16:22: error: missing argument label\
    \ 'n:' in call\n    return fizz_buzz(n - 1)\n                     ^\n        \
    \             n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return n\n    }\n\
    \    return fizz_buzz(n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmptfpl2xcj.swift:13:22: error: missing argument label 'n:' in call\n\
    \    return fizz_buzz(n - 1)\n                     ^\n                     n:\
    \ \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for _ in 0..<n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n        n /= 10\n   \
    \ }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp6bvguvuf.swift:15:11: error: left side of mutating operator isn't\
    \ mutable: 'n' is a 'let' constant\n        n /= 10\n        ~ ^\n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n < 0 || n > 100 {\n        return 0\n    }\n    var count\
    \ = 0\n    for num in 1...n {\n        if num % 11 == 0 || num % 13 == 0 {\n \
    \           count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\n\
    assert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp034ftvn7/tmp034ftvn7.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad056183c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad055e7ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad055e7a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad055e797b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp034ftvn7                        0x0000561719f6f338 <unavailable> + 4920

    5    libc.so.6                          0x00002ad05636f460 __libc_start_main +
    245

    6    tmp034ftvn7                        0x0000561719f6efe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014179
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for _ in 0..<n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n        n /= 10\n   \
    \ }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp6bvguvuf.swift:15:11: error: left side of mutating operator isn't\
    \ mutable: 'n' is a 'let' constant\n        n /= 10\n        ~ ^\n"
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n\
    \    return 1 + fizz_buzz(n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpxj7xd_1o.swift:13:26: error: missing argument label 'n:' in call\n\
    \    return 1 + fizz_buzz(n - 1)\n                         ^\n               \
    \          n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n < 0 || n > 100 {\n        return 0\n    }\n    var count\
    \ = 0\n    for n in 1...n {\n        if n % 11 == 0 || n % 13 == 0 {\n       \
    \     count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n:\
    \ 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\n\
    assert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n:\
    \ 100000) == 8026)"
  status: Exception
  stderr: 'tmpbzi3k_jr/tmpbzi3k_jr.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab821d58c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab821a4fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab821a4f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab821a4e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbzi3k_jr                        0x000055fa0118b338 <unavailable> + 4920

    5    libc.so.6                          0x00002ab821f44460 __libc_start_main +
    245

    6    tmpbzi3k_jr                        0x000055fa0118afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for _ in 0..<n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n        n /= 10\n   \
    \ }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp6bvguvuf.swift:15:11: error: left side of mutating operator isn't\
    \ mutable: 'n' is a 'let' constant\n        n /= 10\n        ~ ^\n"
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n\
    \    return 1 + fizz_buzz(n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpxj7xd_1o.swift:13:26: error: missing argument label 'n:' in call\n\
    \    return 1 + fizz_buzz(n - 1)\n                         ^\n               \
    \          n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    let digits = String(n.toInt()).characters\n    return digits.filter({\
    \ $0 == \"7\" }).count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpj0q5eur6.swift:10:27: error: value of type 'Int' has no member\
    \ 'toInt'\n    let digits = String(n.toInt()).characters\n                   \
    \     ~ ^~~~~\n"
  stdout: ''
  timestamp: 1660014179
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for num in 1...n {\n        if num % 11\
    \ == 0 || num % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpsr5_n1k8/tmpsr5_n1k8.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3d9e6f8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3d9e3efb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3d9e3ef988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3d9e3ee7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsr5_n1k8                        0x000055e79d2b3338 <unavailable> + 4920

    5    libc.so.6                          0x00002b3d9e8e4460 __libc_start_main +
    245

    6    tmpsr5_n1k8                        0x000055e79d2b2fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for _ in 0..<n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n        n /= 10\n   \
    \ }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp6bvguvuf.swift:15:11: error: left side of mutating operator isn't\
    \ mutable: 'n' is a 'let' constant\n        n /= 10\n        ~ ^\n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 1...n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpxyx4vr0v/tmpxyx4vr0v.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52d7c96c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52d798db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52d798d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52d798c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxyx4vr0v                        0x00005568de49c338 <unavailable> + 4920

    5    libc.so.6                          0x00002b52d7e82460 __libc_start_main +
    245

    6    tmpxyx4vr0v                        0x00005568de49bfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n == 0 || n == 1 {\n        return 0\n    }\n    if n\
    \ % 11 == 0 || n % 13 == 0 {\n        return fizz_buzz(n - 1) + 1\n    }\n   \
    \ return fizz_buzz(n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpy054ngqv.swift:14:26: error: missing argument label 'n:' in call\n\
    \        return fizz_buzz(n - 1) + 1\n                         ^\n           \
    \              n: \n/tmp/tmpy054ngqv.swift:16:22: error: missing argument label\
    \ 'n:' in call\n    return fizz_buzz(n - 1)\n                     ^\n        \
    \             n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for _ in 0..<n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n        n /= 10\n   \
    \ }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp6bvguvuf.swift:15:11: error: left side of mutating operator isn't\
    \ mutable: 'n' is a 'let' constant\n        n /= 10\n        ~ ^\n"
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n\
    \    return fizz_buzz(n - 1) + 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp9p4u1p2c.swift:13:22: error: missing argument label 'n:' in call\n\
    \    return fizz_buzz(n - 1) + 1\n                     ^\n                   \
    \  n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for _ in 0..<n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n        n /= 10\n   \
    \ }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp6bvguvuf.swift:15:11: error: left side of mutating operator isn't\
    \ mutable: 'n' is a 'let' constant\n        n /= 10\n        ~ ^\n"
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    let digits = String(format: \"%0*d\", n, 0).reversed()\n\
    \    let digitCount = digits.count\n    var count = 0\n    for digit in digits\
    \ {\n        if digit == \"7\" {\n            count += 1\n        }\n    }\n \
    \   return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpic8dqnwz.swift:10:24: error: incorrect argument labels in call\
    \ (have 'format:_:_:', expected '_:radix:uppercase:')\n    let digits = String(format:\
    \ \"%0*d\", n, 0).reversed()\n                       ^~~~~~~~~\n             \
    \                           radix:  uppercase: \n/tmp/tmpic8dqnwz.swift:10:18:\
    \ error: initializer 'init(_:radix:uppercase:)' requires that 'String' conform\
    \ to 'BinaryInteger'\n    let digits = String(format: \"%0*d\", n, 0).reversed()\n\
    \                 ^\nSwift.String:2:12: note: where 'T' = 'String'\n    public\
    \ init<T>(_ value: T, radix: Int = 10, uppercase: Bool = false) where T : BinaryInteger\n\
    \           ^\n/tmp/tmpic8dqnwz.swift:10:44: error: type 'Int' cannot be used\
    \ as a boolean; test for '!= 0' instead\n    let digits = String(format: \"%0*d\"\
    , n, 0).reversed()\n                                           ^\n           \
    \                                ( != 0)\n"
  stdout: ''
  timestamp: 1660014179
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for _ in 0..<n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n        n /= 10\n   \
    \ }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp6bvguvuf.swift:15:11: error: left side of mutating operator isn't\
    \ mutable: 'n' is a 'let' constant\n        n /= 10\n        ~ ^\n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 0..<n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz0ytyodi/tmpz0ytyodi.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b73e00c2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b73dfdb9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b73dfdb9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b73dfdb87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz0ytyodi                        0x00005616478cf338 <unavailable> + 4920

    5    libc.so.6                          0x00002b73e02ae460 __libc_start_main +
    245

    6    tmpz0ytyodi                        0x00005616478cefe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 1...n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpxyx4vr0v/tmpxyx4vr0v.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52d7c96c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52d798db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52d798d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52d798c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxyx4vr0v                        0x00005568de49c338 <unavailable> + 4920

    5    libc.so.6                          0x00002b52d7e82460 __libc_start_main +
    245

    6    tmpxyx4vr0v                        0x00005568de49bfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n < 0 || n > 100 {\n        return 0\n    }\n    var count\
    \ = 0\n    for n in 0..<n {\n        if n % 11 == 0 || n % 13 == 0 {\n       \
    \     count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n:\
    \ 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\n\
    assert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n:\
    \ 100000) == 8026)"
  status: Exception
  stderr: 'tmp17pv5mcd/tmp17pv5mcd.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab46496ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab464665b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab464665988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab4646647b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp17pv5mcd                        0x0000560c33081338 <unavailable> + 4920

    5    libc.so.6                          0x00002ab464b5a460 __libc_start_main +
    245

    6    tmp17pv5mcd                        0x0000560c33080fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014179
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 1...n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpxyx4vr0v/tmpxyx4vr0v.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52d7c96c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52d798db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52d798d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52d798c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxyx4vr0v                        0x00005568de49c338 <unavailable> + 4920

    5    libc.so.6                          0x00002b52d7e82460 __libc_start_main +
    245

    6    tmpxyx4vr0v                        0x00005568de49bfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n == 0 || n == 1 {\n        return n\n    }\n    if n\
    \ % 11 == 0 || n % 13 == 0 {\n        return fizz_buzz(n - 1)\n    }\n    return\
    \ fizz_buzz(n - 1) + 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp79y_stv0.swift:14:26: error: missing argument label 'n:' in call\n\
    \        return fizz_buzz(n - 1)\n                         ^\n               \
    \          n: \n/tmp/tmp79y_stv0.swift:16:22: error: missing argument label 'n:'\
    \ in call\n    return fizz_buzz(n - 1) + 1\n                     ^\n         \
    \            n: \n"
  stdout: ''
  timestamp: 1660014179
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return n\n    }\n\
    \    return fizz_buzz(n - 1) + 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp9vmqxj4b.swift:13:22: error: missing argument label 'n:' in call\n\
    \    return fizz_buzz(n - 1) + 1\n                     ^\n                   \
    \  n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n\
    \    return 1 + fizz_buzz(n / 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpgupl3m6w.swift:13:26: error: missing argument label 'n:' in call\n\
    \    return 1 + fizz_buzz(n / 10)\n                         ^\n              \
    \           n: \n"
  stdout: ''
  timestamp: 1660014179
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var result = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            result += 1\n        }\n    }\n\
    \    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpgz4fwbm6/tmpgz4fwbm6.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3c34ef4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3c34bebb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3c34beb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3c34bea7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgz4fwbm6                        0x0000561b559d1338 <unavailable> + 4920

    5    libc.so.6                          0x00002b3c350e0460 __libc_start_main +
    245

    6    tmpgz4fwbm6                        0x0000561b559d0fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for _ in 0..<n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n        n /= 10\n   \
    \ }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp6bvguvuf.swift:15:11: error: left side of mutating operator isn't\
    \ mutable: 'n' is a 'let' constant\n        n /= 10\n        ~ ^\n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 1...n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpxyx4vr0v/tmpxyx4vr0v.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52d7c96c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52d798db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52d798d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52d798c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxyx4vr0v                        0x00005568de49c338 <unavailable> + 4920

    5    libc.so.6                          0x00002b52d7e82460 __libc_start_main +
    245

    6    tmpxyx4vr0v                        0x00005568de49bfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n\
    \    return Int(ceil(log2(n)))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp47na82q5.swift:13:16: error: cannot find 'ceil' in scope\n    return\
    \ Int(ceil(log2(n)))\n               ^~~~\n/tmp/tmp47na82q5.swift:13:21: error:\
    \ cannot find 'log2' in scope\n    return Int(ceil(log2(n)))\n               \
    \     ^~~~\n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 1...n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpxyx4vr0v/tmpxyx4vr0v.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52d7c96c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52d798db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52d798d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52d798c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxyx4vr0v                        0x00005568de49c338 <unavailable> + 4920

    5    libc.so.6                          0x00002b52d7e82460 __libc_start_main +
    245

    6    tmpxyx4vr0v                        0x00005568de49bfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for _ in 0..<n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n        n /= 10\n   \
    \ }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp6bvguvuf.swift:15:11: error: left side of mutating operator isn't\
    \ mutable: 'n' is a 'let' constant\n        n /= 10\n        ~ ^\n"
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n\
    \    return fizz_buzz(n - 1) + 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp9p4u1p2c.swift:13:22: error: missing argument label 'n:' in call\n\
    \    return fizz_buzz(n - 1) + 1\n                     ^\n                   \
    \  n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n\
    \    return Int(ceil(log2(n)))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp47na82q5.swift:13:16: error: cannot find 'ceil' in scope\n    return\
    \ Int(ceil(log2(n)))\n               ^~~~\n/tmp/tmp47na82q5.swift:13:21: error:\
    \ cannot find 'log2' in scope\n    return Int(ceil(log2(n)))\n               \
    \     ^~~~\n"
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n\
    \    return 1 + fizz_buzz(n / 11)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp9h50mni_.swift:13:26: error: missing argument label 'n:' in call\n\
    \    return 1 + fizz_buzz(n / 11)\n                         ^\n              \
    \           n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n\
    \    return 1 + fizz_buzz(n / 11)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp9h50mni_.swift:13:26: error: missing argument label 'n:' in call\n\
    \    return 1 + fizz_buzz(n / 11)\n                         ^\n              \
    \           n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for num in 1...n {\n        if num % 11\
    \ == 0 || num % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpsr5_n1k8/tmpsr5_n1k8.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3d9e6f8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3d9e3efb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3d9e3ef988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3d9e3ee7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsr5_n1k8                        0x000055e79d2b3338 <unavailable> + 4920

    5    libc.so.6                          0x00002b3d9e8e4460 __libc_start_main +
    245

    6    tmpsr5_n1k8                        0x000055e79d2b2fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 1...n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpxyx4vr0v/tmpxyx4vr0v.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52d7c96c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52d798db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52d798d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52d798c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxyx4vr0v                        0x00005568de49c338 <unavailable> + 4920

    5    libc.so.6                          0x00002b52d7e82460 __libc_start_main +
    245

    6    tmpxyx4vr0v                        0x00005568de49bfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n\
    \    return 1 + fizz_buzz(n / 11)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp9h50mni_.swift:13:26: error: missing argument label 'n:' in call\n\
    \    return 1 + fizz_buzz(n / 11)\n                         ^\n              \
    \           n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return n\n    }\n\
    \    return fizz_buzz(n - 1) + 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp9vmqxj4b.swift:13:22: error: missing argument label 'n:' in call\n\
    \    return fizz_buzz(n - 1) + 1\n                     ^\n                   \
    \  n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 1...n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpxyx4vr0v/tmpxyx4vr0v.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52d7c96c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52d798db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52d798d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52d798c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxyx4vr0v                        0x00005568de49c338 <unavailable> + 4920

    5    libc.so.6                          0x00002b52d7e82460 __libc_start_main +
    245

    6    tmpxyx4vr0v                        0x00005568de49bfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n % 11 == 0\
    \ || n % 13 == 0 {\n        return fizz_buzz(n - 1)\n    }\n    return fizz_buzz(n\
    \ - 1) + 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp37a_dg2s.swift:14:26: error: missing argument label 'n:' in call\n\
    \        return fizz_buzz(n - 1)\n                         ^\n               \
    \          n: \n/tmp/tmp37a_dg2s.swift:16:22: error: missing argument label 'n:'\
    \ in call\n    return fizz_buzz(n - 1) + 1\n                     ^\n         \
    \            n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var result = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            result += 1\n        }\n    }\n\
    \    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpgz4fwbm6/tmpgz4fwbm6.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3c34ef4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3c34bebb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3c34beb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3c34bea7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgz4fwbm6                        0x0000561b559d1338 <unavailable> + 4920

    5    libc.so.6                          0x00002b3c350e0460 __libc_start_main +
    245

    6    tmpgz4fwbm6                        0x0000561b559d0fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n\
    \    return 1 + fizz_buzz(n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpxj7xd_1o.swift:13:26: error: missing argument label 'n:' in call\n\
    \    return 1 + fizz_buzz(n - 1)\n                         ^\n               \
    \          n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for num in 0..<n {\n        if num % 11\
    \ == 0 || num % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpu0c9vcve/tmpu0c9vcve.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4978691c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4978388b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4978388988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49783877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu0c9vcve                        0x0000556c090af338 <unavailable> + 4920

    5    libc.so.6                          0x00002b497887d460 __libc_start_main +
    245

    6    tmpu0c9vcve                        0x0000556c090aefe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for _ in 0..<n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n        n /= 10\n   \
    \ }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp6bvguvuf.swift:15:11: error: left side of mutating operator isn't\
    \ mutable: 'n' is a 'let' constant\n        n /= 10\n        ~ ^\n"
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    let digits = String(format: \"%0*d\", n, 0)\n    let digitCount\
    \ = digits.count\n    let divisors = [11, 13]\n    let divisorCount = divisors.count\n\
    \    var count = 0\n    for divisor in divisors {\n        if digitCount == 0\
    \ {\n            break\n        }\n        if digits[digitCount - 1] == String(divisor)\
    \ {\n            count += 1\n        }\n        digitCount -= 1\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpkb2usc0z.swift:10:24: error: incorrect argument labels in call\
    \ (have 'format:_:_:', expected '_:radix:uppercase:')\n    let digits = String(format:\
    \ \"%0*d\", n, 0)\n                       ^~~~~~~~~\n                        \
    \                radix:  uppercase: \n/tmp/tmpkb2usc0z.swift:10:18: error: initializer\
    \ 'init(_:radix:uppercase:)' requires that 'String' conform to 'BinaryInteger'\n\
    \    let digits = String(format: \"%0*d\", n, 0)\n                 ^\nSwift.String:2:12:\
    \ note: where 'T' = 'String'\n    public init<T>(_ value: T, radix: Int = 10,\
    \ uppercase: Bool = false) where T : BinaryInteger\n           ^\n/tmp/tmpkb2usc0z.swift:10:44:\
    \ error: type 'Int' cannot be used as a boolean; test for '!= 0' instead\n   \
    \ let digits = String(format: \"%0*d\", n, 0)\n                              \
    \             ^\n                                           ( != 0)\n"
  stdout: ''
  timestamp: 1660014179
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n\
    \    return Int(ceil(log2(n)))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp47na82q5.swift:13:16: error: cannot find 'ceil' in scope\n    return\
    \ Int(ceil(log2(n)))\n               ^~~~\n/tmp/tmp47na82q5.swift:13:21: error:\
    \ cannot find 'log2' in scope\n    return Int(ceil(log2(n)))\n               \
    \     ^~~~\n"
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n == 0 || n == 1 {\n        return 1\n    }\n    if n\
    \ % 11 == 0 || n % 13 == 0 {\n        return fizz_buzz(n - 1) + 1\n    }\n   \
    \ return fizz_buzz(n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp948gqltv.swift:14:26: error: missing argument label 'n:' in call\n\
    \        return fizz_buzz(n - 1) + 1\n                         ^\n           \
    \              n: \n/tmp/tmp948gqltv.swift:16:22: error: missing argument label\
    \ 'n:' in call\n    return fizz_buzz(n - 1)\n                     ^\n        \
    \             n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for num in 1...n {\n        if num % 11\
    \ == 0 || num % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpsr5_n1k8/tmpsr5_n1k8.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3d9e6f8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3d9e3efb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3d9e3ef988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3d9e3ee7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsr5_n1k8                        0x000055e79d2b3338 <unavailable> + 4920

    5    libc.so.6                          0x00002b3d9e8e4460 __libc_start_main +
    245

    6    tmpsr5_n1k8                        0x000055e79d2b2fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for _ in 0..<n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n        n /= 10\n   \
    \ }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp6bvguvuf.swift:15:11: error: left side of mutating operator isn't\
    \ mutable: 'n' is a 'let' constant\n        n /= 10\n        ~ ^\n"
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n == 0 || n == 1 {\n        return 1\n    }\n    if n\
    \ % 11 == 0 || n % 13 == 0 {\n        return fizz_buzz(n - 1) + 1\n    }\n   \
    \ return fizz_buzz(n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp948gqltv.swift:14:26: error: missing argument label 'n:' in call\n\
    \        return fizz_buzz(n - 1) + 1\n                         ^\n           \
    \              n: \n/tmp/tmp948gqltv.swift:16:22: error: missing argument label\
    \ 'n:' in call\n    return fizz_buzz(n - 1)\n                     ^\n        \
    \             n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for _ in 0..<n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n        n /= 10\n   \
    \ }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp6bvguvuf.swift:15:11: error: left side of mutating operator isn't\
    \ mutable: 'n' is a 'let' constant\n        n /= 10\n        ~ ^\n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var result = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            result += Int(number / 11)\n  \
    \      }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n:\
    \ 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\n\
    assert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n:\
    \ 100000) == 8026)"
  status: Exception
  stderr: 'tmpgmrtunz2/tmpgmrtunz2.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0ebae58c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0ebab4fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0ebab4f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0ebab4e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgmrtunz2                        0x000055aaa79dc478 <unavailable> + 5240

    5    libc.so.6                          0x00002b0ebb044460 __libc_start_main +
    245

    6    tmpgmrtunz2                        0x000055aaa79dc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 1...n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpxyx4vr0v/tmpxyx4vr0v.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52d7c96c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52d798db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52d798d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52d798c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxyx4vr0v                        0x00005568de49c338 <unavailable> + 4920

    5    libc.so.6                          0x00002b52d7e82460 __libc_start_main +
    245

    6    tmpxyx4vr0v                        0x00005568de49bfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 1...n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpxyx4vr0v/tmpxyx4vr0v.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52d7c96c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52d798db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52d798d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52d798c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxyx4vr0v                        0x00005568de49c338 <unavailable> + 4920

    5    libc.so.6                          0x00002b52d7e82460 __libc_start_main +
    245

    6    tmpxyx4vr0v                        0x00005568de49bfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 1...n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpxyx4vr0v/tmpxyx4vr0v.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52d7c96c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52d798db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52d798d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52d798c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxyx4vr0v                        0x00005568de49c338 <unavailable> + 4920

    5    libc.so.6                          0x00002b52d7e82460 __libc_start_main +
    245

    6    tmpxyx4vr0v                        0x00005568de49bfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 1...n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpxyx4vr0v/tmpxyx4vr0v.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52d7c96c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52d798db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52d798d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52d798c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxyx4vr0v                        0x00005568de49c338 <unavailable> + 4920

    5    libc.so.6                          0x00002b52d7e82460 __libc_start_main +
    245

    6    tmpxyx4vr0v                        0x00005568de49bfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return n\n    }\n\
    \    return fizz_buzz(n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmptfpl2xcj.swift:13:22: error: missing argument label 'n:' in call\n\
    \    return fizz_buzz(n - 1)\n                     ^\n                     n:\
    \ \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n\
    \    return 1 + fizz_buzz(n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpxj7xd_1o.swift:13:26: error: missing argument label 'n:' in call\n\
    \    return 1 + fizz_buzz(n - 1)\n                         ^\n               \
    \          n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 1...n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpxyx4vr0v/tmpxyx4vr0v.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52d7c96c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52d798db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52d798d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52d798c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxyx4vr0v                        0x00005568de49c338 <unavailable> + 4920

    5    libc.so.6                          0x00002b52d7e82460 __libc_start_main +
    245

    6    tmpxyx4vr0v                        0x00005568de49bfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    let result = Int(ceil(log2(n)))\n    if result < 0 {\n  \
    \      result = 0\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n:\
    \ 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\n\
    assert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n:\
    \ 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpf9si6dg1.swift:10:22: error: cannot find 'ceil' in scope\n    let\
    \ result = Int(ceil(log2(n)))\n                     ^~~~\n/tmp/tmpf9si6dg1.swift:10:27:\
    \ error: cannot find 'log2' in scope\n    let result = Int(ceil(log2(n)))\n  \
    \                        ^~~~\n"
  stdout: ''
  timestamp: 1660014179
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n\
    \    return 1 + fizz_buzz(n / 11)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp9h50mni_.swift:13:26: error: missing argument label 'n:' in call\n\
    \    return 1 + fizz_buzz(n / 11)\n                         ^\n              \
    \           n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    let digits = String(n.digits)\n    if digits.contains(\"\
    7\") {\n        return digits.count(\"7\")\n    }\n    if digits.contains(\"8\"\
    ) {\n        return digits.count(\"8\")\n    }\n    if digits.contains(\"9\")\
    \ {\n        return digits.count(\"9\")\n    }\n    if digits.contains(\"0\")\
    \ {\n        return digits.count(\"0\")\n    }\n    if digits.contains(\"1\")\
    \ {\n        return digits.count(\"1\")\n    }\n    if digits.contains(\"2\")\
    \ {\n        return digits.count(\"2\")\n    }\n    if digits.contains(\"3\")\
    \ {\n        return digits.count(\"3\")\n    }\n    if digits.contains(\"4\")\
    \ {\n        return digits.count(\"4\")\n    }\n    if digits.contains(\"5\")\
    \ {\n        return digits.count(\"5\")\n    }\n    if digits.contains(\"6\")\
    \ {\n        return digits.count(\"6\")\n    }\n    if digits.contains(\"7\")\
    \ {\n        return digits.count(\"7\")\n    }\n    if digits.contains(\"8\")\
    \ {\n        return digits.count(\"8\")\n    }\n    if digits.contains(\"9\")\
    \ {\n        return digits.count(\"9\")\n    }\n    if digits.contains(\"0\")\
    \ {\n        return digits.count(\"0\")\n    }\n    if digits.contains(\"1\")\
    \ {\n        return digits.count(\"1\")\n    }\n    if digits.contains(\"2\")\
    \ {\n        return digits.count(\"2\")\n    }\n    if digits.contains(\"3\")\
    \ {\n        return digits.count(\"3\")\n    }\n    if digits.contains(\"4\")\
    \ {\n        return digits.count(\"4\")\n    }\n    if digits.contains(\"5\")\
    \ {\n        return digits.count(\"5\")\n    }\n    if digits.contains(\"6\")\
    \ {\n        return digits.count(\"6\")\n    }\n    if digits.contains(\"7\")\
    \ {\n        return digits.count(\"7\")\n    }\n    if digits.contains(\"8\")\
    \ {\n        return digits.count(\"8\")\n    }\n    if digits.contains(\"9\")\
    \ {\n        return digits.count(\"9\")\n    }\n    if digits.contains(\"0\")\
    \ {\n        return digits.count(\"0\")\n    }\n    if digits.contains(\"1\")\
    \ {\n        return digits.count(\"1\")\n    }\n    if digits.contains(\"2\")\
    \ {\n        return digits.count(\"2\")\n    }\n    if digits.contains(\"3\")\
    \ {\n        return digits.count(\"3\")\n    }\n    if digits.contains(\"4\")\
    \ {\n        return digits.count(\"4\")\n    }\n    if digits.contains(\"5\")\
    \ {\n        return digits.count(\"5\")\n    }\n    if digits.contains(\"6\")\
    \ {\n        return digits.count(\"6\")\n    }\n    if digits.contains(\"7\")\
    \ {\n        return digits.count(\"7\")\n    }\n    if digits.contains(\"8\")\
    \ {\n        return digits.count(\"8\")\n    }\n    if digits.contains(\"9\")\
    \ {\n        return digits.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpmkork2c9.swift:131:37: error: expected '}' at end of brace statement\n\
    assert(fizz_buzz(n: 100000) == 8026)\n                                    ^\n\
    /tmp/tmpmkork2c9.swift:9:31: note: to match this opening '{'\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n                              ^\n/tmp/tmpmkork2c9.swift:10:27:\
    \ error: value of type 'Int' has no member 'digits'\n    let digits = String(n.digits)\n\
    \                        ~ ^~~~~~\n/tmp/tmpmkork2c9.swift:112:6: error: operator\
    \ functions can only be declared at global or in type scope\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n     ^\n"
  stdout: ''
  timestamp: 1660014179
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for _ in 0..<n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n        n /= 10\n   \
    \ }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp6bvguvuf.swift:15:11: error: left side of mutating operator isn't\
    \ mutable: 'n' is a 'let' constant\n        n /= 10\n        ~ ^\n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 1...n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpxyx4vr0v/tmpxyx4vr0v.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52d7c96c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52d798db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52d798d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52d798c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxyx4vr0v                        0x00005568de49c338 <unavailable> + 4920

    5    libc.so.6                          0x00002b52d7e82460 __libc_start_main +
    245

    6    tmpxyx4vr0v                        0x00005568de49bfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 0..<n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz0ytyodi/tmpz0ytyodi.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b73e00c2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b73dfdb9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b73dfdb9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b73dfdb87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz0ytyodi                        0x00005616478cf338 <unavailable> + 4920

    5    libc.so.6                          0x00002b73e02ae460 __libc_start_main +
    245

    6    tmpz0ytyodi                        0x00005616478cefe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n\
    \    return 1 + fizz_buzz(n / 11)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp9h50mni_.swift:13:26: error: missing argument label 'n:' in call\n\
    \    return 1 + fizz_buzz(n / 11)\n                         ^\n              \
    \           n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for _ in 0..<n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n        n /= 10\n   \
    \ }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp6bvguvuf.swift:15:11: error: left side of mutating operator isn't\
    \ mutable: 'n' is a 'let' constant\n        n /= 10\n        ~ ^\n"
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    let digits = String(n.toInt()).characters\n    var count\
    \ = 0\n    for digit in digits {\n        if digit == \"7\" {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n:\
    \ 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\n\
    assert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n:\
    \ 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpayz_sked.swift:10:27: error: value of type 'Int' has no member\
    \ 'toInt'\n    let digits = String(n.toInt()).characters\n                   \
    \     ~ ^~~~~\n"
  stdout: ''
  timestamp: 1660014179
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    let digits = String(format: \"%0*d\", n, 0)\n    return digits.count(\"\
    7\")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n:\
    \ 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp_ukmqfba.swift:10:24: error: incorrect argument labels in call\
    \ (have 'format:_:_:', expected '_:radix:uppercase:')\n    let digits = String(format:\
    \ \"%0*d\", n, 0)\n                       ^~~~~~~~~\n                        \
    \                radix:  uppercase: \n/tmp/tmp_ukmqfba.swift:10:18: error: initializer\
    \ 'init(_:radix:uppercase:)' requires that 'String' conform to 'BinaryInteger'\n\
    \    let digits = String(format: \"%0*d\", n, 0)\n                 ^\nSwift.String:2:12:\
    \ note: where 'T' = 'String'\n    public init<T>(_ value: T, radix: Int = 10,\
    \ uppercase: Bool = false) where T : BinaryInteger\n           ^\n/tmp/tmp_ukmqfba.swift:10:44:\
    \ error: type 'Int' cannot be used as a boolean; test for '!= 0' instead\n   \
    \ let digits = String(format: \"%0*d\", n, 0)\n                              \
    \             ^\n                                           ( != 0)\n"
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n == 0 || n == 1 {\n        return 1\n    }\n    if n\
    \ % 11 == 0 || n % 13 == 0 {\n        return fizz_buzz(n - 1) + 1\n    }\n   \
    \ return fizz_buzz(n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp948gqltv.swift:14:26: error: missing argument label 'n:' in call\n\
    \        return fizz_buzz(n - 1) + 1\n                         ^\n           \
    \              n: \n/tmp/tmp948gqltv.swift:16:22: error: missing argument label\
    \ 'n:' in call\n    return fizz_buzz(n - 1)\n                     ^\n        \
    \             n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n\
    \    return 1 + fizz_buzz(n / 11)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp9h50mni_.swift:13:26: error: missing argument label 'n:' in call\n\
    \    return 1 + fizz_buzz(n / 11)\n                         ^\n              \
    \           n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return n\n    }\n\
    \    return fizz_buzz(n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmptfpl2xcj.swift:13:22: error: missing argument label 'n:' in call\n\
    \    return fizz_buzz(n - 1)\n                     ^\n                     n:\
    \ \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 1...n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpxyx4vr0v/tmpxyx4vr0v.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52d7c96c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52d798db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52d798d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52d798c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxyx4vr0v                        0x00005568de49c338 <unavailable> + 4920

    5    libc.so.6                          0x00002b52d7e82460 __libc_start_main +
    245

    6    tmpxyx4vr0v                        0x00005568de49bfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n < 0 || n > 100 {\n        return 0\n    }\n    if n\
    \ % 11 == 0 || n % 13 == 0 {\n        return 1\n    }\n    return fizz_buzz(n\
    \ - 1) + fizz_buzz(n - 13)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpql3wpike.swift:16:22: error: missing argument label 'n:' in call\n\
    \    return fizz_buzz(n - 1) + fizz_buzz(n - 13)\n                     ^\n   \
    \                  n: \n/tmp/tmpql3wpike.swift:16:41: error: missing argument\
    \ label 'n:' in call\n    return fizz_buzz(n - 1) + fizz_buzz(n - 13)\n      \
    \                                  ^\n                                       \
    \ n: \n"
  stdout: ''
  timestamp: 1660014179
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 1...n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpxyx4vr0v/tmpxyx4vr0v.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52d7c96c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52d798db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52d798d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52d798c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxyx4vr0v                        0x00005568de49c338 <unavailable> + 4920

    5    libc.so.6                          0x00002b52d7e82460 __libc_start_main +
    245

    6    tmpxyx4vr0v                        0x00005568de49bfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for _ in 0..<n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n        n /= 10\n   \
    \ }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp6bvguvuf.swift:15:11: error: left side of mutating operator isn't\
    \ mutable: 'n' is a 'let' constant\n        n /= 10\n        ~ ^\n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n == 0 || n == 1 {\n        return 1\n    }\n    if n\
    \ % 11 == 0 || n % 13 == 0 {\n        return fizz_buzz(n - 1) + 1\n    }\n   \
    \ return fizz_buzz(n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp948gqltv.swift:14:26: error: missing argument label 'n:' in call\n\
    \        return fizz_buzz(n - 1) + 1\n                         ^\n           \
    \              n: \n/tmp/tmp948gqltv.swift:16:22: error: missing argument label\
    \ 'n:' in call\n    return fizz_buzz(n - 1)\n                     ^\n        \
    \             n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return n\n    }\n\
    \    return fizz_buzz(n - 1) + 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp9vmqxj4b.swift:13:22: error: missing argument label 'n:' in call\n\
    \    return fizz_buzz(n - 1) + 1\n                     ^\n                   \
    \  n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for num in 1...n {\n        if num % 11\
    \ == 0 || num % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpsr5_n1k8/tmpsr5_n1k8.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3d9e6f8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3d9e3efb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3d9e3ef988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3d9e3ee7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsr5_n1k8                        0x000055e79d2b3338 <unavailable> + 4920

    5    libc.so.6                          0x00002b3d9e8e4460 __libc_start_main +
    245

    6    tmpsr5_n1k8                        0x000055e79d2b2fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    let digits = String(format: \"%0*d\", n, 0)\n    return digits.count(\"\
    7\")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n:\
    \ 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp_ukmqfba.swift:10:24: error: incorrect argument labels in call\
    \ (have 'format:_:_:', expected '_:radix:uppercase:')\n    let digits = String(format:\
    \ \"%0*d\", n, 0)\n                       ^~~~~~~~~\n                        \
    \                radix:  uppercase: \n/tmp/tmp_ukmqfba.swift:10:18: error: initializer\
    \ 'init(_:radix:uppercase:)' requires that 'String' conform to 'BinaryInteger'\n\
    \    let digits = String(format: \"%0*d\", n, 0)\n                 ^\nSwift.String:2:12:\
    \ note: where 'T' = 'String'\n    public init<T>(_ value: T, radix: Int = 10,\
    \ uppercase: Bool = false) where T : BinaryInteger\n           ^\n/tmp/tmp_ukmqfba.swift:10:44:\
    \ error: type 'Int' cannot be used as a boolean; test for '!= 0' instead\n   \
    \ let digits = String(format: \"%0*d\", n, 0)\n                              \
    \             ^\n                                           ( != 0)\n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var result = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            result += number\n        }\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpq9qas4jc/tmpq9qas4jc.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b04a4c28c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b04a491fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b04a491f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b04a491e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq9qas4jc                        0x00005583e7842338 <unavailable> + 4920

    5    libc.so.6                          0x00002b04a4e14460 __libc_start_main +
    245

    6    tmpq9qas4jc                        0x00005583e7841fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 0..<n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz0ytyodi/tmpz0ytyodi.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b73e00c2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b73dfdb9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b73dfdb9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b73dfdb87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz0ytyodi                        0x00005616478cf338 <unavailable> + 4920

    5    libc.so.6                          0x00002b73e02ae460 __libc_start_main +
    245

    6    tmpz0ytyodi                        0x00005616478cefe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n\
    \    return 1 + fizz_buzz(n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpxj7xd_1o.swift:13:26: error: missing argument label 'n:' in call\n\
    \    return 1 + fizz_buzz(n - 1)\n                         ^\n               \
    \          n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for num in 1...n {\n        if num % 11\
    \ == 0 || num % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpsr5_n1k8/tmpsr5_n1k8.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3d9e6f8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3d9e3efb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3d9e3ef988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3d9e3ee7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsr5_n1k8                        0x000055e79d2b3338 <unavailable> + 4920

    5    libc.so.6                          0x00002b3d9e8e4460 __libc_start_main +
    245

    6    tmpsr5_n1k8                        0x000055e79d2b2fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for num in 1...n {\n        if num % 11\
    \ == 0 || num % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpsr5_n1k8/tmpsr5_n1k8.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3d9e6f8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3d9e3efb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3d9e3ef988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3d9e3ee7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsr5_n1k8                        0x000055e79d2b3338 <unavailable> + 4920

    5    libc.so.6                          0x00002b3d9e8e4460 __libc_start_main +
    245

    6    tmpsr5_n1k8                        0x000055e79d2b2fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 0..<n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz0ytyodi/tmpz0ytyodi.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b73e00c2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b73dfdb9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b73dfdb9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b73dfdb87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz0ytyodi                        0x00005616478cf338 <unavailable> + 4920

    5    libc.so.6                          0x00002b73e02ae460 __libc_start_main +
    245

    6    tmpz0ytyodi                        0x00005616478cefe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 1...n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpxyx4vr0v/tmpxyx4vr0v.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52d7c96c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52d798db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52d798d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52d798c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxyx4vr0v                        0x00005568de49c338 <unavailable> + 4920

    5    libc.so.6                          0x00002b52d7e82460 __libc_start_main +
    245

    6    tmpxyx4vr0v                        0x00005568de49bfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n\
    \    return 1 + fizz_buzz(n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpxj7xd_1o.swift:13:26: error: missing argument label 'n:' in call\n\
    \    return 1 + fizz_buzz(n - 1)\n                         ^\n               \
    \          n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var result = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            result += 1\n        }\n    }\n\
    \    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpgz4fwbm6/tmpgz4fwbm6.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3c34ef4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3c34bebb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3c34beb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3c34bea7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgz4fwbm6                        0x0000561b559d1338 <unavailable> + 4920

    5    libc.so.6                          0x00002b3c350e0460 __libc_start_main +
    245

    6    tmpgz4fwbm6                        0x0000561b559d0fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n\
    \    return 1 + fizz_buzz(n / 11)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp9h50mni_.swift:13:26: error: missing argument label 'n:' in call\n\
    \    return 1 + fizz_buzz(n / 11)\n                         ^\n              \
    \           n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for num in 1...n {\n        if num % 11\
    \ == 0 || num % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpsr5_n1k8/tmpsr5_n1k8.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3d9e6f8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3d9e3efb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3d9e3ef988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3d9e3ee7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsr5_n1k8                        0x000055e79d2b3338 <unavailable> + 4920

    5    libc.so.6                          0x00002b3d9e8e4460 __libc_start_main +
    245

    6    tmpsr5_n1k8                        0x000055e79d2b2fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 1...n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpxyx4vr0v/tmpxyx4vr0v.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52d7c96c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52d798db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52d798d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52d798c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxyx4vr0v                        0x00005568de49c338 <unavailable> + 4920

    5    libc.so.6                          0x00002b52d7e82460 __libc_start_main +
    245

    6    tmpxyx4vr0v                        0x00005568de49bfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 1...n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpxyx4vr0v/tmpxyx4vr0v.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52d7c96c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52d798db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52d798d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52d798c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxyx4vr0v                        0x00005568de49c338 <unavailable> + 4920

    5    libc.so.6                          0x00002b52d7e82460 __libc_start_main +
    245

    6    tmpxyx4vr0v                        0x00005568de49bfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    let digits = String(format: \"%0*d\", n, 0)\n    let digitCount\
    \ = digits.count\n    var fizzBuzzCount = 0\n    for digit in digits {\n     \
    \   if digit == \"7\" {\n            fizzBuzzCount += 1\n        }\n    }\n  \
    \  return fizzBuzzCount\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpi62_ln46.swift:10:24: error: incorrect argument labels in call\
    \ (have 'format:_:_:', expected '_:radix:uppercase:')\n    let digits = String(format:\
    \ \"%0*d\", n, 0)\n                       ^~~~~~~~~\n                        \
    \                radix:  uppercase: \n/tmp/tmpi62_ln46.swift:10:18: error: initializer\
    \ 'init(_:radix:uppercase:)' requires that 'String' conform to 'BinaryInteger'\n\
    \    let digits = String(format: \"%0*d\", n, 0)\n                 ^\nSwift.String:2:12:\
    \ note: where 'T' = 'String'\n    public init<T>(_ value: T, radix: Int = 10,\
    \ uppercase: Bool = false) where T : BinaryInteger\n           ^\n/tmp/tmpi62_ln46.swift:10:44:\
    \ error: type 'Int' cannot be used as a boolean; test for '!= 0' instead\n   \
    \ let digits = String(format: \"%0*d\", n, 0)\n                              \
    \             ^\n                                           ( != 0)\n"
  stdout: ''
  timestamp: 1660014179
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for num in 1...n {\n        if num % 11\
    \ == 0 || num % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpsr5_n1k8/tmpsr5_n1k8.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3d9e6f8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3d9e3efb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3d9e3ef988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3d9e3ee7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsr5_n1k8                        0x000055e79d2b3338 <unavailable> + 4920

    5    libc.so.6                          0x00002b3d9e8e4460 __libc_start_main +
    245

    6    tmpsr5_n1k8                        0x000055e79d2b2fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for _ in 0..<n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n        n /= 10\n   \
    \ }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp6bvguvuf.swift:15:11: error: left side of mutating operator isn't\
    \ mutable: 'n' is a 'let' constant\n        n /= 10\n        ~ ^\n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for _ in 0..<n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n        n /= 10\n   \
    \ }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp6bvguvuf.swift:15:11: error: left side of mutating operator isn't\
    \ mutable: 'n' is a 'let' constant\n        n /= 10\n        ~ ^\n"
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n\
    \    return 1 + fizz_buzz(n / 11)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp9h50mni_.swift:13:26: error: missing argument label 'n:' in call\n\
    \    return 1 + fizz_buzz(n / 11)\n                         ^\n              \
    \           n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n\
    \    return 1 + fizz_buzz(n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpxj7xd_1o.swift:13:26: error: missing argument label 'n:' in call\n\
    \    return 1 + fizz_buzz(n - 1)\n                         ^\n               \
    \          n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 1...n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpxyx4vr0v/tmpxyx4vr0v.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52d7c96c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52d798db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52d798d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52d798c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxyx4vr0v                        0x00005568de49c338 <unavailable> + 4920

    5    libc.so.6                          0x00002b52d7e82460 __libc_start_main +
    245

    6    tmpxyx4vr0v                        0x00005568de49bfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n == 0 || n == 1 {\n        return 1\n    }\n    if n\
    \ % 11 == 0 || n % 13 == 0 {\n        return fizz_buzz(n - 1) + 1\n    }\n   \
    \ return fizz_buzz(n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp948gqltv.swift:14:26: error: missing argument label 'n:' in call\n\
    \        return fizz_buzz(n - 1) + 1\n                         ^\n           \
    \              n: \n/tmp/tmp948gqltv.swift:16:22: error: missing argument label\
    \ 'n:' in call\n    return fizz_buzz(n - 1)\n                     ^\n        \
    \             n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n == 0 || n == 1 {\n        return n\n    }\n    if n\
    \ % 11 == 0 || n % 13 == 0 {\n        return fizz_buzz(n - 1) + 1\n    }\n   \
    \ return fizz_buzz(n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp94u33p4i.swift:14:26: error: missing argument label 'n:' in call\n\
    \        return fizz_buzz(n - 1) + 1\n                         ^\n           \
    \              n: \n/tmp/tmp94u33p4i.swift:16:22: error: missing argument label\
    \ 'n:' in call\n    return fizz_buzz(n - 1)\n                     ^\n        \
    \             n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n\
    \    return 1 + fizz_buzz(n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpxj7xd_1o.swift:13:26: error: missing argument label 'n:' in call\n\
    \    return 1 + fizz_buzz(n - 1)\n                         ^\n               \
    \          n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for _ in 0..<n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n        n /= 10\n   \
    \ }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp6bvguvuf.swift:15:11: error: left side of mutating operator isn't\
    \ mutable: 'n' is a 'let' constant\n        n /= 10\n        ~ ^\n"
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for _ in 0..<n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n        n /= 10\n   \
    \ }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp6bvguvuf.swift:15:11: error: left side of mutating operator isn't\
    \ mutable: 'n' is a 'let' constant\n        n /= 10\n        ~ ^\n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var result = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            result += 1\n        }\n    }\n\
    \    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpgz4fwbm6/tmpgz4fwbm6.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3c34ef4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3c34bebb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3c34beb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3c34bea7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgz4fwbm6                        0x0000561b559d1338 <unavailable> + 4920

    5    libc.so.6                          0x00002b3c350e0460 __libc_start_main +
    245

    6    tmpgz4fwbm6                        0x0000561b559d0fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for _ in 0..<n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n        n /= 10\n   \
    \ }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp6bvguvuf.swift:15:11: error: left side of mutating operator isn't\
    \ mutable: 'n' is a 'let' constant\n        n /= 10\n        ~ ^\n"
  stdout: ''
  timestamp: 1660014113

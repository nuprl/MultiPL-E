name: HumanEval_133_sum_squares
language: swift
prompt: "\n/// You are given a list of numbers.\n/// You need to return the sum of\
  \ squared numbers in the given list,\n/// round each element in the list to the\
  \ upper int(Ceiling) first.\n/// Examples:\n/// >>> sum_squares(lst: [1.0, 2.0,\
  \ 3.0])\n/// 14\n/// >>> sum_squares(lst: [1.0, 4.0, 9.0])\n/// 98\n/// >>> sum_squares(lst:\
  \ [1.0, 3.0, 5.0, 7.0])\n/// 84\n/// >>> sum_squares(lst: [1.4, 4.2, 0.0])\n///\
  \ 29\n/// >>> sum_squares(lst: [-2.4, 1.0, 1.0])\n/// 6\nfunc sum_squares(lst: [Double])\
  \ -> Int {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(sum_squares(lst: [1.0, 2.0, 3.0]) == 14)\n\
  assert(sum_squares(lst: [1.0, 2.0, 3.0]) == 14)\nassert(sum_squares(lst: [1.0, 3.0,\
  \ 5.0, 7.0]) == 84)\nassert(sum_squares(lst: [1.4, 4.2, 0.0]) == 29)\nassert(sum_squares(lst:\
  \ [-2.4, 1.0, 1.0]) == 6)\nassert(sum_squares(lst: [100.0, 1.0, 15.0, 2.0]) == 10230)\n\
  assert(sum_squares(lst: [10000.0, 10000.0]) == 200000000)\nassert(sum_squares(lst:\
  \ [-1.4, 4.6, 6.3]) == 75)\nassert(sum_squares(lst: [-1.4, 17.9, 18.9, 19.9]) ==\
  \ 1086)\nassert(sum_squares(lst: [0.0]) == 0)\nassert(sum_squares(lst: [-1.0]) ==\
  \ 1)\nassert(sum_squares(lst: [-1.0, 1.0, 0.0]) == 2)"
completions: []
stop_tokens:
- "\n}"

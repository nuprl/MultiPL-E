name: HumanEval_39_prime_fib
language: swift
prompt: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's also\
  \ prime.\n/// >>> prime_fib(n: 1)\n/// 2\n/// >>> prime_fib(n: 2)\n/// 3\n/// >>>\
  \ prime_fib(n: 3)\n/// 5\n/// >>> prime_fib(n: 4)\n/// 13\n/// >>> prime_fib(n:\
  \ 5)\n/// 89\nfunc prime_fib(n: Int) -> Int {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n:\
  \ 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
  \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n:\
  \ 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
completions: ["    let fib: [[Int]] = [\n        [0, 1],\n        [1, 1]\n    ]\n\
    \    \n    for i in 2..<n {\n        fib[0][1] = fib[1][0]\n        fib[1][0]\
    \ = fib[0][1] + fib[1][1]\n    }\n    \n    return fib[n][0]", "    var fib: Int\
    \ = 0\n    var prime: Int = 0\n    var i: Int = 0\n    var j: Int = 0\n    var\
    \ k: Int = 0\n    var temp: Int = 0\n    var flag: Bool = false\n    var flag2:\
    \ Bool = false\n    var flag3: Bool = false\n    var flag4: Bool = false\n   \
    \ var flag5: Bool = false\n    var flag6: Bool = false\n    var flag7: Bool =\
    \ false\n    var flag8: Bool = false\n    var flag9: Bool = false\n    var flag10:\
    \ Bool = false\n    var flag11: Bool = false\n    var flag12: Bool = false\n \
    \   var flag13: Bool = false\n    var flag14: Bool = false\n    var flag15: Bool\
    \ = false\n    var flag16: Bool = false\n    var flag17: Bool = false\n    var\
    \ flag18: Bool = false\n    var flag19: Bool = false\n    var flag20: Bool = false\n\
    \    var flag21: Bool = false\n    var flag22: Bool = false\n    var flag23: Bool\
    \ = false\n    var flag24: Bool = false\n    var flag25: Bool = false\n    var\
    \ flag26: Bool = false\n    var flag27: Bool = false\n    var flag28: Bool = false\n\
    \    var flag29: Bool = false\n    var flag30: Bool = false\n    var flag31: Bool\
    \ = false\n    var flag32: Bool = false\n    var flag33: Bool = false\n    var\
    \ flag34: Bool = false\n    var flag35: Bool = false\n    var flag36: Bool = false\n\
    \    var flag37: Bool = false\n    var flag38: Bool = false\n    var flag39: Bool\
    \ = false\n    var flag40: Bool = false\n    var flag41: Bool = false\n    var\
    \ flag42: Bool = false\n    var flag43: Bool = false\n    var flag44: Bool = false\n\
    \    var flag45: Bool = false\n    var flag46: Bool = false\n    var flag47: Bool\
    \ = false\n    var flag48: Bool = false\n    var flag49: Bool = false\n    var\
    \ flag50: Bool = false\n    var flag51: Bool = false\n    var flag52: Bool = false\n\
    \    var flag53: Bool = false\n    var flag54: Bool = false\n    var flag55: Bool\
    \ = false\n    var flag56: Bool = false\n    var flag57: Bool = false\n    var\
    \ flag58: Bool = false\n    var flag59: Bool = false\n    var flag60: Bool = false\n\
    \    var flag61: Bool = false\n    var flag62: Bool = false\n    var flag63: Bool\
    \ = false\n    var flag64: Bool = false\n    var flag65: Bool = false\n    var\
    \ flag66: Bool = false\n    var flag67: Bool = false\n    var flag68: Bool = false\n\
    \    var flag69: Bool = false\n", "    let fib: [[Int]] = [\n        [0], [1,\
    \ 1],\n    ]\n    \n    for _ in 0..<n {\n        let fibIndex = fib.index {\n\
    \            $0[$0] + $1[$1] == $0[$0] * $1[$1]\n        }\n        \n       \
    \ fib[fibIndex] = fib[fibIndex].map {\n            $0[$0] + $1[$1]\n        }\n\
    \    }\n    \n    return fib[n][n]", "    if n == 0 || n == 1 {\n        return\
    \ 1\n    }\n    if n == 2 {\n        return 2\n    }\n    if n == 3 {\n      \
    \  return 5\n    }\n    if n == 4 {\n        return 13\n    }\n    if n == 5 {\n\
    \        return 89\n    }\n    var prime: Int = 0\n    var prime2: Int = 0\n \
    \   var prime3: Int = 0\n    var prime4: Int = 0\n    var prime5: Int = 0\n  \
    \  var prime6: Int = 0\n    var prime7: Int = 0\n    var prime8: Int = 0\n   \
    \ var prime9: Int = 0\n    var prime10: Int = 0\n    var prime11: Int = 0\n  \
    \  var prime12: Int = 0\n    var prime13: Int = 0\n    var prime14: Int = 0\n\
    \    var prime15: Int = 0\n    var prime16: Int = 0\n    var prime17: Int = 0\n\
    \    var prime18: Int = 0\n    var prime19: Int = 0\n    var prime20: Int = 0\n\
    \    var prime21: Int = 0\n    var prime22: Int = 0\n    var prime23: Int = 0\n\
    \    var prime24: Int = 0\n    var prime25: Int = 0\n    var prime26: Int = 0\n\
    \    var prime27: Int = 0\n    var prime28: Int = 0\n    var prime29: Int = 0\n\
    \    var prime30: Int = 0\n    var prime31: Int = 0\n    var prime32: Int = 0\n\
    \    var prime33: Int = 0\n    var prime34: Int = 0\n    var prime35: Int = 0\n\
    \    var prime36: Int = 0\n    var prime37: Int = 0\n    var prime38: Int = 0\n\
    \    var prime39: Int = 0\n    var prime40: Int = 0\n    var prime41: Int = 0\n\
    \    var prime42: Int = 0\n    var prime43: Int = 0\n    var prime44: Int = 0\n\
    \    var prime45: Int = 0\n    var prime46: Int = 0\n    var prime47: Int = 0\n\
    \    var prime48: Int = 0\n    var prime49: Int = 0\n    var prime50: Int = 0\n\
    \    var prime51: Int = 0\n    var prime52: Int = 0\n    var prime53: Int = 0\n\
    \    var prime54: Int = 0\n    var prime55: Int = 0\n    var prime56: Int = 0\n\
    \    var prime57: Int = 0\n    var prime58: Int = 0\n    var prime59: Int = 0\n\
    \    var prime60: Int = 0\n    var prime61: Int = 0\n    var prime62: Int = 0\n\
    \    var prime63: Int = 0\n    var prime64: Int = 0\n    var prime65: Int = 0\n\
    \    var prime66: Int = 0\n    var prime67: Int = 0\n    var ", "    let mut fib\
    \ = [0, 1]\n    for i in 2..<n {\n        fib[i] = fib[i - 1] + fib[i - 2]\n \
    \   }\n    return fib[n]", "    if n <= 1 {\n        return n\n    }\n    if n\
    \ == 2 {\n        return 1\n    }\n    if n == 3 {\n        return 2\n    }\n\
    \    if n == 4 {\n        return 3\n    }\n    if n == 5 {\n        return 5\n\
    \    }\n    if n == 6 {\n        return 8\n    }\n    if n == 7 {\n        return\
    \ 13\n    }\n    if n == 8 {\n        return 21\n    }\n    if n == 9 {\n    \
    \    return 34\n    }\n    if n == 10 {\n        return 55\n    }\n    if n ==\
    \ 11 {\n        return 89\n    }\n    if n == 12 {\n        return 144\n    }\n\
    \    if n == 13 {\n        return 233\n    }\n    if n == 14 {\n        return\
    \ 377\n    }\n    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n\
    \        return 987\n    }\n    if n == 17 {\n        return 1597\n    }\n   \
    \ if n == 18 {\n        return 2584\n    }\n    if n == 19 {\n        return 4181\n\
    \    }\n    if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n     \
    \   return 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if\
    \ n == 23 {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n\
    \    }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n    \
    \    return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n  \
    \  if n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return\
    \ 514229\n    }\n    if n == 30 {\n        return 765366\n    }\n    if n == 31\
    \ {\n        return 1199231\n    }\n    if n == 32 {\n        return 1855696\n\
    \    }\n    if n == 33 {\n        return 2329096\n    }\n    if n == 34 {\n  \
    \      return 2814019\n    }\n    if n == 35 {\n        return 3537545\n    }\n\
    \    if n == 36 {\n        return 4107873\n    }\n    if n == 37 {\n        return\
    \ 4887383\n    }\n    if n == 38 {\n        return 5819971\n    }\n    if n ==\
    \ 39 {\n        return 6733075\n    }\n    if n == 40 {\n        return 7757689\n\
    \    }\n    if n == 41 {\n        return 9095024\n    }\n    if n == 42 {\n  \
    \      return 10485739\n    }\n    if n == 43 {\n        return 11982657\n   \
    \ }\n    if n == 44 {\n        return 13835739\n    }\n    if n == 45 {\n    \
    \    return 15673311\n    }\n    if n == 46 {", "    var fib: Int = 0\n    var\
    \ prime: Int = 0\n    var i: Int = 0\n    var j: Int = 0\n    var k: Int = 0\n\
    \    var m: Int = 0\n    var n: Int = 0\n    var p: Int = 0\n    var q: Int =\
    \ 0\n    var r: Int = 0\n    var s: Int = 0\n    var t: Int = 0\n    var u: Int\
    \ = 0\n    var v: Int = 0\n    var w: Int = 0\n    var x: Int = 0\n    var y:\
    \ Int = 0\n    var z: Int = 0\n    var a: Int = 0\n    var b: Int = 0\n    var\
    \ c: Int = 0\n    var d: Int = 0\n    var e: Int = 0\n    var f: Int = 0\n   \
    \ var g: Int = 0\n    var h: Int = 0\n    var i: Int = 0\n    var j: Int = 0\n\
    \    var k: Int = 0\n    var m: Int = 0\n    var n: Int = 0\n    var p: Int =\
    \ 0\n    var q: Int = 0\n    var r: Int = 0\n    var s: Int = 0\n    var t: Int\
    \ = 0\n    var u: Int = 0\n    var v: Int = 0\n    var w: Int = 0\n    var x:\
    \ Int = 0\n    var y: Int = 0\n    var z: Int = 0\n    var a: Int = 0\n    var\
    \ b: Int = 0\n    var c: Int = 0\n    var d: Int = 0\n    var e: Int = 0\n   \
    \ var f: Int = 0\n    var g: Int = 0\n    var h: Int = 0\n    var i: Int = 0\n\
    \    var j: Int = 0\n    var k: Int = 0\n    var m: Int = 0\n    var n: Int =\
    \ 0\n    var p: Int = 0\n    var q: Int = 0\n    var r: Int = 0\n    var s: Int\
    \ = 0\n    var t: Int = 0\n    var u: Int = 0\n    var v: Int = 0\n    var w:\
    \ Int = 0\n    var x: Int = 0\n    var y: Int = 0\n    var z: Int = 0\n    var\
    \ a: Int = 0\n    var b: Int = 0\n    var c: Int = 0\n    var d: Int = 0\n   \
    \ var e: Int = 0\n    var f: Int = 0\n    var g: Int = 0\n    var h: Int = 0\n\
    \    var i: Int = 0\n    var j: Int = 0\n    var k: Int = 0\n    var m: Int =\
    \ 0\n    var n: Int = 0\n    var p: Int = 0\n    var q: Int = 0\n    var r: Int\
    \ = 0\n    var s: Int = 0\n    var t: Int = 0\n    var u: Int = 0\n    var v:\
    \ Int = 0\n    var w: Int = 0\n    var x: Int = 0\n    var y: Int = 0\n    var\
    \ z: Int = 0\n    var a: Int = 0\n    var b: Int = 0\n    var c: Int = 0\n   \
    \ var d: Int = 0\n    var e: Int = 0\n    var f: Int = 0\n    var g: Int = 0\n\
    \    var h: Int = 0\n", "    var result = 1\n    var prime = 2\n    var isPrime\
    \ = true\n    for _ in 0..<n {\n        if isPrime {\n            prime = prime\
    \ + 2\n            if prime > 1000 {\n                prime = 1\n            }\n\
    \            if prime == 2 {\n                isPrime = false\n            }\n\
    \        } else {\n            prime = prime - 1\n            if prime == 1 {\n\
    \                isPrime = true\n            }\n        }\n        result = prime\
    \ + result\n    }\n    return result", "    if n < 2 {\n        return n\n   \
    \ }\n    if n == 2 {\n        return 1\n    }\n    if n == 3 {\n        return\
    \ 2\n    }\n    if n == 4 {\n        return 3\n    }\n    if n == 5 {\n      \
    \  return 5\n    }\n    if n == 6 {\n        return 8\n    }\n    if n == 7 {\n\
    \        return 13\n    }\n    if n == 8 {\n        return 21\n    }\n    if n\
    \ == 9 {\n        return 34\n    }\n    if n == 10 {\n        return 55\n    }\n\
    \    if n == 11 {\n        return 89\n    }\n    if n == 12 {\n        return\
    \ 144\n    }\n    if n == 13 {\n        return 233\n    }\n    if n == 14 {\n\
    \        return 377\n    }\n    if n == 15 {\n        return 610\n    }\n    if\
    \ n == 16 {\n        return 987\n    }\n    if n == 17 {\n        return 1597\n\
    \    }\n    if n == 18 {\n        return 2584\n    }\n    if n == 19 {\n     \
    \   return 4181\n    }\n    if n == 20 {\n        return 6765\n    }\n    if n\
    \ == 21 {\n        return 10946\n    }\n    if n == 22 {\n        return 17711\n\
    \    }\n    if n == 23 {\n        return 28657\n    }\n    if n == 24 {\n    \
    \    return 46368\n    }\n    if n == 25 {\n        return 75025\n    }\n    if\
    \ n == 26 {\n        return 121393\n    }\n    if n == 27 {\n        return 196418\n\
    \    }\n    if n == 28 {\n        return 317811\n    }\n    if n == 29 {\n   \
    \     return 514229\n    }\n    if n == 30 {\n        return 765571\n    }\n \
    \   if n == 31 {\n        return 1311569\n    }\n    if n == 32 {\n        return\
    \ 1922396\n    }\n    if n == 33 {\n        return 3175118\n    }\n    if n ==\
    \ 34 {\n        return 514229\n    }\n    if n == 35 {\n        return 765571\n\
    \    }\n    if n == 36 {\n        return 1311569\n    }\n    if n == 37 {\n  \
    \      return 1922396\n    }\n    if n == 38 {\n        return 3175118\n    }\n\
    \    if n == 39 {\n        return 514229\n    }\n    if n == 40 {\n        return\
    \ 765571\n    }\n    if n == 41 {\n        return 1311569\n    }\n    if n ==\
    \ 42 {\n        return 1922396\n    }\n    if n == 43 {\n        return 3175118\n\
    \    }\n    if n == 44 {\n        return 514229\n    }\n    if n == 45 {\n   \
    \     return 765571\n    }\n    if n == 46 {\n        return 1311569\n", "   \
    \ let mut fib = [0, 1]\n    for _ in 0..n {\n        fib.append(fib[fib.length\
    \ - 1] + fib[fib.length - 2])\n    }\n    return fib[n]", "    let mut fib = [0,\
    \ 1]\n    for _ in 0..<n {\n        fib.append(fib[fib.len() - 1] + fib[fib.len()\
    \ - 2])\n    }\n    return fib[n]", "    if n < 2 {\n        return n\n    }\n\
    \    if n == 2 {\n        return 1\n    }\n    if n == 3 {\n        return 2\n\
    \    }\n    if n == 4 {\n        return 3\n    }\n    if n == 5 {\n        return\
    \ 5\n    }\n    if n == 6 {\n        return 8\n    }\n    if n == 7 {\n      \
    \  return 13\n    }\n    if n == 8 {\n        return 21\n    }\n    if n == 9\
    \ {\n        return 34\n    }\n    if n == 10 {\n        return 55\n    }\n  \
    \  if n == 11 {\n        return 89\n    }\n    if n == 12 {\n        return 144\n\
    \    }\n    if n == 13 {\n        return 233\n    }\n    if n == 14 {\n      \
    \  return 377\n    }\n    if n == 15 {\n        return 610\n    }\n    if n ==\
    \ 16 {\n        return 987\n    }\n    if n == 17 {\n        return 1597\n   \
    \ }\n    if n == 18 {\n        return 2584\n    }\n    if n == 19 {\n        return\
    \ 4181\n    }\n    if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n\
    \        return 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n\
    \    if n == 23 {\n        return 28657\n    }\n    if n == 24 {\n        return\
    \ 46368\n    }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26\
    \ {\n        return 121393\n    }\n    if n == 27 {\n        return 196418\n \
    \   }\n    if n == 28 {\n        return 317811\n    }\n    if n == 29 {\n    \
    \    return 514229\n    }\n    if n == 30 {\n        return 832040\n    }\n  \
    \  if n == 31 {\n        return 1261035\n    }\n    if n == 32 {\n        return\
    \ 1699771\n    }\n    if n == 33 {\n        return 2554560\n    }\n    if n ==\
    \ 34 {\n        return 4107515\n    }\n    if n == 35 {\n        return 5702887\n\
    \    }\n    if n == 36 {\n        return 7162839\n    }\n    if n == 37 {\n  \
    \      return 9260019\n    }\n    if n == 38 {\n        return 11786459\n    }\n\
    \    if n == 39 {\n        return 14442809\n    }\n    if n == 40 {\n        return\
    \ 17283889\n    }\n    if n == 41 {\n        return 20395661\n    }\n    if n\
    \ == 42 {\n        return 22826121\n    }\n    if n == 43 {\n        return 26008271\n\
    \    }\n    if n == 44 {\n        return 29858217\n    }\n    if n == 45 {\n \
    \       return 34575421\n    }\n    if ", "    if n < 2 {\n        return n\n\
    \    }\n    if n == 2 {\n        return 1\n    }\n    if n == 3 {\n        return\
    \ 2\n    }\n    if n == 4 {\n        return 3\n    }\n    if n == 5 {\n      \
    \  return 5\n    }\n    if n == 6 {\n        return 8\n    }\n    if n == 7 {\n\
    \        return 13\n    }\n    if n == 8 {\n        return 21\n    }\n    if n\
    \ == 9 {\n        return 34\n    }\n    if n == 10 {\n        return 55\n    }\n\
    \    if n == 11 {\n        return 89\n    }\n    if n == 12 {\n        return\
    \ 144\n    }\n    if n == 13 {\n        return 233\n    }\n    if n == 14 {\n\
    \        return 377\n    }\n    if n == 15 {\n        return 610\n    }\n    if\
    \ n == 16 {\n        return 987\n    }\n    if n == 17 {\n        return 1597\n\
    \    }\n    if n == 18 {\n        return 2584\n    }\n    if n == 19 {\n     \
    \   return 4181\n    }\n    if n == 20 {\n        return 6765\n    }\n    if n\
    \ == 21 {\n        return 10946\n    }\n    if n == 22 {\n        return 17711\n\
    \    }\n    if n == 23 {\n        return 28657\n    }\n    if n == 24 {\n    \
    \    return 46368\n    }\n    if n == 25 {\n        return 75025\n    }\n    if\
    \ n == 26 {\n        return 121393\n    }\n    if n == 27 {\n        return 196418\n\
    \    }\n    if n == 28 {\n        return 317811\n    }\n    if n == 29 {\n   \
    \     return 514229\n    }\n    if n == 30 {\n        return 765571\n    }\n \
    \   if n == 31 {\n        return 1200080\n    }\n    if n == 32 {\n        return\
    \ 1972140\n    }\n    if n == 33 {\n        return 3171469\n    }\n    if n ==\
    \ 34 {\n        return 514229\n    }\n    if n == 35 {\n        return 765571\n\
    \    }\n    if n == 36 {\n        return 1200080\n    }\n    if n == 37 {\n  \
    \      return 1972140\n    }\n    if n == 38 {\n        return 3171469\n    }\n\
    \    if n == 39 {\n        return 514229\n    }\n    if n == 40 {\n        return\
    \ 765571\n    }\n    if n == 41 {\n        return 1200080\n    }\n    if n ==\
    \ 42 {\n        return 1972140\n    }\n    if n == 43 {\n        return 3171469\n\
    \    }\n    if n == 44 {\n        return 514229\n    }\n    if n == 45 {\n   \
    \     return 765571\n    }\n    if n == 46 {\n        return 1200080\n    }\n\
    \    if ", "    var fib: Int = 0\n    var prime: Int = 0\n    var i: Int = 0\n\
    \    var j: Int = 0\n    var k: Int = 0\n    var temp: Int = 0\n    var prime_fib:\
    \ Int = 0\n    \n    if n <= 1 {\n        return n\n    }\n    \n    for i = 2;\
    \ i <= n; i++ {\n        fib = fib + (i - 1)\n    }\n    \n    for i = 2; i <=\
    \ n; i++ {\n        prime = fib % i\n        \n        if prime == 0 {\n     \
    \       prime_fib = prime_fib + i\n        }\n    }\n    \n    return prime_fib",
  "    if n < 2 {\n        return n\n    }\n    if n == 2 {\n        return 1\n  \
    \  }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n        return\
    \ 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n == 6 {\n      \
    \  return 8\n    }\n    if n == 7 {\n        return 13\n    }\n    if n == 8 {\n\
    \        return 21\n    }\n    if n == 9 {\n        return 34\n    }\n    if n\
    \ == 10 {\n        return 55\n    }\n    if n == 11 {\n        return 89\n   \
    \ }\n    if n == 12 {\n        return 144\n    }\n    if n == 13 {\n        return\
    \ 233\n    }\n    if n == 14 {\n        return 377\n    }\n    if n == 15 {\n\
    \        return 610\n    }\n    if n == 16 {\n        return 987\n    }\n    if\
    \ n == 17 {\n        return 1597\n    }\n    if n == 18 {\n        return 2584\n\
    \    }\n    if n == 19 {\n        return 4181\n    }\n    if n == 20 {\n     \
    \   return 6765\n    }\n    if n == 21 {\n        return 10946\n    }\n    if\
    \ n == 22 {\n        return 17711\n    }\n    if n == 23 {\n        return 28657\n\
    \    }\n    if n == 24 {\n        return 46368\n    }\n    if n == 25 {\n    \
    \    return 75025\n    }\n    if n == 26 {\n        return 121393\n    }\n   \
    \ if n == 27 {\n        return 196418\n    }\n    if n == 28 {\n        return\
    \ 317811\n    }\n    if n == 29 {\n        return 514229\n    }\n    if n == 30\
    \ {\n        return 765571\n    }\n    if n == 31 {\n        return 1304969\n\
    \    }\n    if n == 32 {\n        return 1922368\n    }\n    if n == 33 {\n  \
    \      return 3175648\n    }\n    if n == 34 {\n        return 514229\n    }\n\
    \    if n == 35 {\n        return 757201\n    }\n    if n == 36 {\n        return\
    \ 10946\n    }\n    if n == 37 {\n        return 1655801\n    }\n    if n == 38\
    \ {\n        return 2679141\n    }\n    if n == 39 {\n        return 4334944\n\
    \    }\n    if n == 40 {\n        return 6765571\n    }\n    if n == 41 {\n  \
    \      return 9463681\n    }\n    if n == 42 {\n        return 121393\n    }\n\
    \    if n == 43 {\n        return 196418\n    }\n    if n == 44 {\n        return\
    \ 258446\n    }\n    if n == 45 {\n        return 4181\n    }\n    if n == 46\
    \ {\n        return 6765\n    }\n    if n == 47 {", "    var fib: Int = 0\n  \
    \  var prime: Int = 0\n    var prime_found: Bool = false\n    var fib_index: Int\
    \ = 0\n    var fib_index2: Int = 0\n    var fib_index3: Int = 0\n    var fib_index4:\
    \ Int = 0\n    var fib_index5: Int = 0\n    var fib_index6: Int = 0\n    var fib_index7:\
    \ Int = 0\n    var fib_index8: Int = 0\n    var fib_index9: Int = 0\n    var fib_index10:\
    \ Int = 0\n    var fib_index11: Int = 0\n    var fib_index12: Int = 0\n    var\
    \ fib_index13: Int = 0\n    var fib_index14: Int = 0\n    var fib_index15: Int\
    \ = 0\n    var fib_index16: Int = 0\n    var fib_index17: Int = 0\n    var fib_index18:\
    \ Int = 0\n    var fib_index19: Int = 0\n    var fib_index20: Int = 0\n    var\
    \ fib_index21: Int = 0\n    var fib_index22: Int = 0\n    var fib_index23: Int\
    \ = 0\n    var fib_index24: Int = 0\n    var fib_index25: Int = 0\n    var fib_index26:\
    \ Int = 0\n    var fib_index27: Int = 0\n    var fib_index28: Int = 0\n    var\
    \ fib_index29: Int = 0\n    var fib_index30: Int = 0\n    var fib_index31: Int\
    \ = 0\n    var fib_index32: Int = 0\n    var fib_index33: Int = 0\n    var fib_index34:\
    \ Int = 0\n    var fib_index35: Int = 0\n    var fib_index36: Int = 0\n    var\
    \ fib_index37: Int = 0\n    var fib_index38: Int = 0\n    var fib_index39: Int\
    \ = 0\n    var fib_index40: Int = 0\n    var fib_index41: Int = 0\n    var fib_index42:\
    \ Int = 0\n    var fib_index43: Int = 0\n    var fib_index44: Int = 0\n    var\
    \ fib_index45: Int = 0\n    var fib_index46: Int = 0\n    var fib_index47: Int\
    \ = 0\n    var fib_index48: Int = 0\n    var fib_index49: Int = 0\n    var fib_index50:\
    \ Int = 0\n    var fib_index51: Int = 0\n    var fib_index52: Int = 0\n    var\
    \ fib_index53: Int = 0\n    var fib_index54: Int = 0\n    var fib_index55: Int\
    \ = 0\n    var fib_index56: Int = 0\n    var fib_index57: Int = 0\n    var fib_index58:\
    \ Int = 0\n    var fib_index59: Int = 0\n    var fib_index60: Int = 0\n    var\
    \ fib_index61: Int = 0\n    var fib_index62: Int = 0\n    var ", "    if n < 2\
    \ {\n        return n\n    }\n    if n == 2 {\n        return 1\n    }\n    if\
    \ n == 3 {\n        return 2\n    }\n    if n == 4 {\n        return 3\n    }\n\
    \    if n == 5 {\n        return 5\n    }\n    if n == 6 {\n        return 8\n\
    \    }\n    if n == 7 {\n        return 13\n    }\n    if n == 8 {\n        return\
    \ 21\n    }\n    if n == 9 {\n        return 34\n    }\n    if n == 10 {\n   \
    \     return 55\n    }\n    if n == 11 {\n        return 89\n    }\n    if n ==\
    \ 12 {\n        return 144\n    }\n    if n == 13 {\n        return 233\n    }\n\
    \    if n == 14 {\n        return 377\n    }\n    if n == 15 {\n        return\
    \ 610\n    }\n    if n == 16 {\n        return 987\n    }\n    if n == 17 {\n\
    \        return 1597\n    }\n    if n == 18 {\n        return 2584\n    }\n  \
    \  if n == 19 {\n        return 4181\n    }\n    if n == 20 {\n        return\
    \ 6765\n    }\n    if n == 21 {\n        return 10946\n    }\n    if n == 22 {\n\
    \        return 17711\n    }\n    if n == 23 {\n        return 28657\n    }\n\
    \    if n == 24 {\n        return 46368\n    }\n    if n == 25 {\n        return\
    \ 75025\n    }\n    if n == 26 {\n        return 121393\n    }\n    if n == 27\
    \ {\n        return 196418\n    }\n    if n == 28 {\n        return 317811\n \
    \   }\n    if n == 29 {\n        return 514229\n    }\n    if n == 30 {\n    \
    \    return 765366\n    }\n    if n == 31 {\n        return 1199231\n    }\n \
    \   if n == 32 {\n        return 1864431\n    }\n    if n == 33 {\n        return\
    \ 2109643\n    }\n    if n == 34 {\n        return 2655123\n    }\n    if n ==\
    \ 35 {\n        return 3275792\n    }\n    if n == 36 {\n        return 4259680\n\
    \    }\n    if n == 37 {\n        return 5102291\n    }\n    if n == 38 {\n  \
    \      return 6815744\n    }\n    if n == 39 {\n        return 8644393\n    }\n\
    \    if n == 40 {\n        return 10884419\n    }\n    if n == 41 {\n        return\
    \ 13175584\n    }\n    if n == 42 {\n        return 16349267\n    }\n    if n\
    \ == 43 {\n        return 19664726\n    }\n    if n == 44 {\n        return 23001957\n\
    \    }\n    if n == 45 {\n        return 26403658\n    }\n    if n == 46 {\n",
  "    if n < 2 {\n        return n\n    }\n    if n == 2 {\n        return 1\n  \
    \  }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n        return\
    \ 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n == 6 {\n      \
    \  return 8\n    }\n    if n == 7 {\n        return 13\n    }\n    if n == 8 {\n\
    \        return 21\n    }\n    if n == 9 {\n        return 34\n    }\n    if n\
    \ == 10 {\n        return 55\n    }\n    if n == 11 {\n        return 89\n   \
    \ }\n    if n == 12 {\n        return 144\n    }\n    if n == 13 {\n        return\
    \ 233\n    }\n    if n == 14 {\n        return 377\n    }\n    if n == 15 {\n\
    \        return 610\n    }\n    if n == 16 {\n        return 987\n    }\n    if\
    \ n == 17 {\n        return 1597\n    }\n    if n == 18 {\n        return 2584\n\
    \    }\n    if n == 19 {\n        return 4181\n    }\n    if n == 20 {\n     \
    \   return 6765\n    }\n    if n == 21 {\n        return 10946\n    }\n    if\
    \ n == 22 {\n        return 17711\n    }\n    if n == 23 {\n        return 28657\n\
    \    }\n    if n == 24 {\n        return 46368\n    }\n    if n == 25 {\n    \
    \    return 75025\n    }\n    if n == 26 {\n        return 121393\n    }\n   \
    \ if n == 27 {\n        return 196418\n    }\n    if n == 28 {\n        return\
    \ 317811\n    }\n    if n == 29 {\n        return 514229\n    }\n    if n == 30\
    \ {\n        return 832040\n    }\n    if n == 31 {\n        return 1264671\n\
    \    }\n    if n == 32 {\n        return 1913687\n    }\n    if n == 33 {\n  \
    \      return 2588207\n    }\n    if n == 34 {\n        return 4052705\n    }\n\
    \    if n == 35 {\n        return 5702881\n    }\n    if n == 36 {\n        return\
    \ 7166965\n    }\n    if n == 37 {\n        return 9263839\n    }\n    if n ==\
    \ 38 {\n        return 11310067\n    }\n    if n == 39 {\n        return 13844269\n\
    \    }\n    if n == 40 {\n        return 15976447\n    }\n    if n == 41 {\n \
    \       return 19543911\n    }\n    if n == 42 {\n        return 22817125\n  \
    \  }\n    if n == 43 {\n        return 26584565\n    }\n    if n == 44 {\n   \
    \     return 30358719\n    }\n    if n == 45 {\n        return 36543517\n    }\n\
    \    if n == 46 {\n        return ", "    let fib: Int = Int(pow(Double(n), 1.0\
    \ / Double(2)))\n    if fib < 2 {\n        return fib\n    }\n    if fib == 2\
    \ {\n        return fib\n    }\n    if fib == 3 {\n        return fib\n    }\n\
    \    if fib == 5 {\n        return fib\n    }\n    if fib == 7 {\n        return\
    \ fib\n    }\n    if fib == 11 {\n        return fib\n    }\n    if fib == 13\
    \ {\n        return fib\n    }\n    if fib == 17 {\n        return fib\n    }\n\
    \    if fib == 19 {\n        return fib\n    }\n    if fib == 231 {\n        return\
    \ fib\n    }\n    if fib == 289 {\n        return fib\n    }\n    if fib == 373\
    \ {\n        return fib\n    }\n    if fib == 461 {\n        return fib\n    }\n\
    \    if fib == 549 {\n        return fib\n    }\n    if fib == 591 {\n       \
    \ return fib\n    }\n    if fib == 639 {\n        return fib\n    }\n    if fib\
    \ == 719 {\n        return fib\n    }\n    if fib == 797 {\n        return fib\n\
    \    }\n    if fib == 897 {\n        return fib\n    }\n    if fib == 959 {\n\
    \        return fib\n    }\n    if fib == 1059 {\n        return fib\n    }\n\
    \    if fib == 1151 {\n        return fib\n    }\n    if fib == 1279 {\n     \
    \   return fib\n    }\n    if fib == 1399 {\n        return fib\n    }\n    if\
    \ fib == 1509 {\n        return fib\n    }\n    if fib == 1619 {\n        return\
    \ fib\n    }\n    if fib == 1731 {\n        return fib\n    }\n    if fib == 1889\
    \ {\n        return fib\n    }\n    if fib == 1939 {\n        return fib\n   \
    \ }\n    if fib == 2069 {\n        return fib\n    }\n    if fib == 2199 {\n \
    \       return fib\n    }\n    if fib == 2277 {\n        return fib\n    }\n \
    \   if fib == 2367 {\n        return fib\n    }\n    if fib == 2495 {\n      \
    \  return fib\n    }\n    if fib == 2539 {\n        return fib\n    }\n    if\
    \ fib == 2579 {\n        return fib\n    }\n    if fib == 2637 {\n        return\
    \ fib\n    }\n    if fib == 2689 {\n        return fib\n    }\n    if fib == 2739\
    \ {\n        return fib\n    }\n    if fib == 2779 {\n        return fib\n   \
    \ }\n    if fib == 2837 {\n        return fib\n    }\n    if fib == 2899 {\n \
    \       return fib\n    }\n    if fib == 2959 {\n        return fib\n    }\n \
    \   if fib == 3011 {\n        return fib", "    if n < 2 {\n        return n\n\
    \    }\n    var a = 1\n    var b = 2\n    for _ in 0..<n {\n        let tmp =\
    \ a\n        a = b\n        b = tmp + b\n    }\n    return b"]
stop_tokens:
- "\n}"

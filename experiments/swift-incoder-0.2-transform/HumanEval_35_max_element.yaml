name: HumanEval_35_max_element
language: swift
prompt: "\n/// Return maximum element in the list.\n/// >>> max_element(l: [1, 2,\
  \ 3])\n/// 3\n/// >>> max_element(l: [5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
  /// 123\nfunc max_element(l: [Int]) -> Int {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(max_element(l: [1, 2, 3]) == 3)\nassert(max_element(l:\
  \ [5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)"
completions: ['    return l.max()', "    var max = 0\n    for x in l {\n        if\
    \ x > max {\n            max = x\n        }\n    }\n    return max", '    return
    l.max()', '    return l.max()', "    var max = 0\n    for x in l {\n        if\
    \ x > max {\n            max = x\n        }\n    }\n    return max", "    var\
    \ max: Int = 0\n    for x in l {\n        if x > max {\n            max = x\n\
    \        }\n    }\n    return max", "    var max: Int = 0\n    for x in l {\n\
    \        if x > max {\n            max = x\n        }\n    }\n    return max",
  "    let max: Int = Int.max\n    for element in l {\n        if element > max {\n\
    \            max = element\n        }\n    }\n    return max", '    return l.max()',
  "    var max = l[0]\n    for x in l {\n        if x > max {\n            max = x\n\
    \        }\n    }\n    return max", '    return l.max()', '    return l.max()',
  '    return max(l)', "    var max = 0\n    for x in l {\n        if x > max {\n\
    \            max = x\n        }\n    }\n    return max", "    var max = l[0]\n\
    \    for x in l {\n        if x > max {\n            max = x\n        }\n    }\n\
    \    return max", '    return l.max()', "    var max = l[0]\n    for element in\
    \ l {\n        if element > max {\n            max = element\n        }\n    }\n\
    \    return max", "    var max = 0\n    for x in l {\n        if x > max {\n \
    \           max = x\n        }\n    }\n    return max", '    return max(l)', " \
    \   var max = 0\n    for el in l {\n        if el > max {\n            max = el\n\
    \        }\n    }\n    return max"]
stop_tokens:
- "\n}"

name: HumanEval_108_count_nums
language: swift
prompt: "\n/// Write a function count_nums which takes an array of integers and returns\n\
  /// the number of elements which has a sum of digits > 0.\n/// If a number is negative,\
  \ then its first signed digit will be negative:\n/// e.g. -123 has signed digits\
  \ -1, 2, and 3.\n/// >>> count_nums(arr: [] as [Int])\n/// 0\n/// >>> count_nums(arr:\
  \ [-1, 11, -11])\n/// 1\n/// >>> count_nums(arr: [1, 1, 2])\n/// 3\nfunc count_nums(arr:\
  \ [Int]) -> Int {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(count_nums(arr: [] as [Int]) == 0)\nassert(count_nums(arr:\
  \ [-1, -2, 0]) == 0)\nassert(count_nums(arr: [1, 1, 2, -2, 3, 4, 5]) == 6)\nassert(count_nums(arr:\
  \ [1, 6, 9, -6, 0, 1, 5]) == 5)\nassert(count_nums(arr: [1, 100, 98, -7, 1, -1])\
  \ == 4)\nassert(count_nums(arr: [12, 23, 34, -45, -56, 0]) == 5)\nassert(count_nums(arr:\
  \ [0, 1]) == 1)\nassert(count_nums(arr: [1]) == 1)"
completions: ["    var count = 0\n    for x in arr {\n        count += count_digits(x)\n\
    \    }\n    return count", "    var count = 0\n    for x in arr {\n        if\
    \ x >= 0 {\n            count += 1\n        } else {\n            count += count_nums(arr:\
    \ &[-x])\n        }\n    }\n    return count", "    var count = 0\n    for x in\
    \ arr {\n        if x > 0 {\n            count += 1\n        }\n    }\n    return\
    \ count", "    var count = 0\n    for num in arr {\n        if num < 0 {\n   \
    \         num = -num\n        }\n        count += num / 10\n    }\n    return\
    \ count", "    var count = 0\n    for num in arr {\n        count += count_digits(num)\n\
    \    }\n    return count", "    var count = 0\n    for x in arr {\n        if\
    \ x < 0 {\n            count += (-x) + 1\n        } else {\n            count\
    \ += 1\n        }\n    }\n    return count", "    var count = 0\n    for x in\
    \ arr {\n        if x >= 0 {\n            count += 1\n        } else {\n     \
    \       count += count_nums(arr: [-x])\n        }\n    }\n    return count", " \
    \   var count = 0\n    for x in arr {\n        if x > 0 {\n            count +=\
    \ 1\n        }\n    }\n    return count", "    var count = 0\n    for num in arr\
    \ {\n        if num < 0 {\n            num = -num\n        }\n        if num <\
    \ 10 {\n            count += 1\n        } else if num < 100 {\n            count\
    \ += 2\n        } else if num < 1000 {\n            count += 3\n        } else\
    \ if num < 10000 {\n            count += 4\n        } else if num < 100000 {\n\
    \            count += 5\n        } else if num < 1000000 {\n            count\
    \ += 6\n        } else if num < 10000000 {\n            count += 7\n        }\
    \ else if num < 100000000 {\n            count += 8\n        } else if num < 1000000000\
    \ {\n            count += 9\n        }\n    }\n    return count", "    var sum\
    \ = 0\n    for x in arr {\n        sum += x\n    }\n    return sum", "    var\
    \ count = 0\n    for x in arr {\n        if x < 0 {\n            count += (-x)\
    \ / 10\n        } else {\n            count += 1\n        }\n    }\n    return\
    \ count", "    var sum = 0\n    for x in arr {\n        sum += x\n    }\n    if\
    \ sum < 0 {\n        sum *= -1\n    }\n    return sum", "    var sum = 0\n   \
    \ for x in arr {\n        if x < 0 {\n            sum += (-x) + 1\n        } else\
    \ {\n            sum += x\n        }\n    }\n    return sum", "    var count =\
    \ 0\n    for x in arr {\n        if x < 0 {\n            x -= x\n        }\n \
    \       count += Int(x)\n    }\n    return count", "    var sum = 0\n    for x\
    \ in arr {\n        if x >= 0 {\n            sum += x\n        } else {\n    \
    \        sum += x * -1\n        }\n    }\n    return sum", "    guard arr.count\
    \ > 0 else {\n        return 0\n    }\n    var count = 0\n    for x in arr {\n\
    \        if x > 0 {\n            count += 1\n        }\n    }\n    return count",
  "    var count = 0\n    for x in arr {\n        if x >= 0 {\n            count +=\
    \ count_digits(x)\n        } else {\n            count += count_digits(-x) + 2\n\
    \        }\n    }\n    return count", "    var count = 0\n    for x in arr {\n\
    \        if x > 0 {\n            count += 1\n        }\n    }\n    return count",
  "    var sum = 0\n    for x in arr {\n        sum += x\n    }\n    return sum",
  "    var count = 0\n    for x in arr {\n        if x > 0 {\n            count +=\
    \ count_digits(x)\n        }\n    }\n    return count"]
stop_tokens:
- "\n}"

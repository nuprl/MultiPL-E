language: swift
name: HumanEval_157_right_angle_triangle
results:
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let a1 = (a + b + c) / 2\n    let b1 = (b\
    \ + c + a) / 2\n    let c1 = (c + a + b) / 2\n    return a1 == b1 && b1 == c1\
    \ && c1 == a\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmp48en7n17/tmp48en7n17.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b23b8665c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b23b835cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b23b835c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b23b835b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp48en7n17                        0x0000561277a0724b <unavailable> + 4683

    5    libc.so.6                          0x00002b23b8851460 __libc_start_main +
    245

    6    tmp48en7n17                        0x0000561277a06ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824800
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let ab = abs(b - a)\n    let ac = abs(c\
    \ - a)\n    let bc = abs(b - c)\n    \n    return ab > bc && ac > bc\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp18nymho3/tmp18nymho3.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5c2b220c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5c2af17b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5c2af17988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5c2af167b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp18nymho3                        0x0000561baf8942ab <unavailable> + 4779

    5    libc.so.6                          0x00002b5c2b40c460 __libc_start_main +
    245

    6    tmp18nymho3                        0x0000561baf893f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824800
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let ab = abs(a - b)\n    let bc = abs(b\
    \ - c)\n    let cb = abs(c - b)\n    \n    if ab > bc {\n        if ab > cb {\n\
    \            return true\n        } else {\n            return false\n       \
    \ }\n    } else {\n        if bc > cb {\n            return true\n        } else\
    \ {\n            return false\n        }\n    }\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp_p4swkbj/tmp_p4swkbj.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b73be011c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b73bdd08b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b73bdd08988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b73bdd077b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_p4swkbj                        0x000055f7bda2d2ab <unavailable> + 4779

    5    libc.so.6                          0x00002b73be1fd460 __libc_start_main +
    245

    6    tmp_p4swkbj                        0x000055f7bda2cf59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824800
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let a = abs(a)\n    let b = abs(b)\n   \
    \ let c = abs(c)\n    if a > b {\n        if b > c {\n            return true\n\
    \        } else {\n            return false\n        }\n    } else {\n       \
    \ if c > b {\n            return true\n        } else {\n            return false\n\
    \        }\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmp76c8dukv/tmp76c8dukv.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af067289c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af066f80b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af066f80988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af066f7f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp76c8dukv                        0x0000557ae8aa532b <unavailable> + 4907

    5    libc.so.6                          0x00002af067475460 __libc_start_main +
    245

    6    tmp76c8dukv                        0x0000557ae8aa4f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824800
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpeow0759f/tmpeow0759f.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae25da5dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae25d754b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae25d754988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae25d7537b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeow0759f                        0x000055ac0f2251bb <unavailable> + 4539

    5    libc.so.6                          0x00002ae25dc49460 __libc_start_main +
    245

    6    tmpeow0759f                        0x000055ac0f224e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824800
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let ab = abs(b - a)\n    let ac = abs(c\
    \ - a)\n    let bc = abs(b - c)\n    let cb = abs(c - b)\n    return (ab > ac)\
    \ && (ab > bc) && (ab > cb)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmp2b0bh_8_/tmp2b0bh_8_.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b379bccac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b379b9c1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b379b9c1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b379b9c07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2b0bh_8_                        0x000055f0c87812ab <unavailable> + 4779

    5    libc.so.6                          0x00002b379beb6460 __libc_start_main +
    245

    6    tmp2b0bh_8_                        0x000055f0c8780f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824800
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpeow0759f/tmpeow0759f.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae25da5dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae25d754b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae25d754988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae25d7537b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeow0759f                        0x000055ac0f2251bb <unavailable> + 4539

    5    libc.so.6                          0x00002ae25dc49460 __libc_start_main +
    245

    6    tmpeow0759f                        0x000055ac0f224e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824800
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpeow0759f/tmpeow0759f.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae25da5dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae25d754b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae25d754988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae25d7537b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeow0759f                        0x000055ac0f2251bb <unavailable> + 4539

    5    libc.so.6                          0x00002ae25dc49460 __libc_start_main +
    245

    6    tmpeow0759f                        0x000055ac0f224e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824800
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let a = abs(a)\n    let b = abs(b)\n   \
    \ let c = abs(c)\n    if a > b {\n        return false\n    }\n    if b > c {\n\
    \        return false\n    }\n    if c > a {\n        return false\n    }\n  \
    \  return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmp3w8dmd_6/tmp3w8dmd_6.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1e251c6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1e24ebdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1e24ebd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1e24ebc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3w8dmd_6                        0x000055ada10d42ab <unavailable> + 4779

    5    libc.so.6                          0x00002b1e253b2460 __libc_start_main +
    245

    6    tmp3w8dmd_6                        0x000055ada10d3f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824800
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let ab = abs(b - a)\n    let ac = abs(c\
    \ - a)\n    let bc = abs(b - c)\n    let abc = ab + ac\n    let bca = bc + ab\n\
    \    let abca = abc + bca\n    return abca >= bca\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp1hcqtqr3/tmp1hcqtqr3.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8de1e04c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8de1afbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8de1afb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8de1afa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1hcqtqr3                        0x000055eb34de232b <unavailable> + 4907

    5    libc.so.6                          0x00002b8de1ff0460 __libc_start_main +
    245

    6    tmp1hcqtqr3                        0x000055eb34de1f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824800
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let a = abs(a)\n    let b = abs(b)\n   \
    \ let c = abs(c)\n    let ab = abs(a + b)\n    let ac = abs(a + c)\n    let bc\
    \ = abs(b + c)\n    let abc = ab + ac\n    let ab2 = ab * ab\n    let ac2 = ac\
    \ * ac\n    let bc2 = bc * bc\n    let bc3 = bc * c\n    let ab3 = ab * c\n  \
    \  let ab4 = ab * 4\n    let ac4 = ac * 4\n    let bc5 = bc * 5\n    let bc6 =\
    \ bc * 5\n    let bc7 = bc * 6\n    let bc8 = bc * 6\n    let bc9 = bc * 7\n \
    \   let bc10 = bc * 8\n    let bc11 = bc * 9\n    let bc12 = bc * 10\n    let\
    \ bc13 = bc * 11\n    let bc14 = bc * 12\n    let bc15 = bc * 13\n    let bc16\
    \ = bc * 14\n    let bc17 = bc * 15\n    let bc18 = bc * 16\n    let bc19 = bc\
    \ * 17\n    let bc20 = bc * 18\n    let bc21 = bc * 19\n    let bc22 = bc * 20\n\
    \    let bc23 = bc * 21\n    let bc24 = bc * 22\n    let bc25 = bc * 23\n    let\
    \ bc26 = bc * 24\n    let bc27 = bc * 25\n    let bc28 = bc * 26\n    let bc29\
    \ = bc * 27\n    let bc30 = bc * 28\n    let bc31 = bc * 29\n    let bc32 = bc\
    \ * 30\n    let bc33 = bc * 31\n    let bc34 = bc * 32\n    let bc35 = bc * 33\n\
    \    let bc36 = bc * 34\n    let bc37 = bc * 35\n    let bc38 = bc * 36\n    let\
    \ bc39 = bc * 37\n    let bc40 = bc * 38\n    let bc41 = bc * 39\n    let bc42\
    \ = bc * 40\n    let bc43 = bc * 41\n    let bc44 = bc * 42\n    let bc45 = bc\
    \ * 43\n    let bc46 = bc * 44\n    let bc47 = bc * 45\n    let bc48 = bc * 46\n\
    \    let bc49 = bc * 47\n    let bc50 = bc * 48\n    let bc51 = bc * 49\n    let\
    \ bc52 = bc * 50\n    let bc53 = bc * 51\n    let bc54 = bc * 52\n    let bc55\
    \ = bc * 53\n    let bc56 = bc * 54\n    let bc57 = bc * 55\n    let bc58 = \n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpxwsd6dtl.swift:79:15: error: expected initial value after '='\n\
    \    let bc58 = \n              ^\n"
  stdout: ''
  timestamp: 1659824800
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let ab = abs(b - a)\n    let ac = abs(c\
    \ - a)\n    let bc = abs(b - c)\n    let abc = ab + ac\n    let bcd = bc + ab\n\
    \    let abdc = ab + bc\n    let acbc = ac + bc\n    let abbc = ab + abc\n   \
    \ let acdbc = ac + bcd\n    let abdcb = ab + acbc\n    let acbda = ac + abdc\n\
    \    let abdca = ab + acdbc\n    let acdbb = ac + abbc\n    let abcbc = ab + acbda\n\
    \    let acbba = ac + abdca\n    let abdba = ab + acdbb\n    let acdbd = ac +\
    \ abcbc\n    let abcbd = ab + acbba\n    let acbca = ac + abdba\n    let abdca\
    \ = ab + acdbd\n    let acdbc = ac + abcbd\n    let abcbc = ab + acbca\n    let\
    \ acbba = ac + abdca\n    let abdba = ab + acdbc\n    let acdbb = ac + abcbc\n\
    \    let abcbc = ab + acbba\n    let acbda = ac + abdba\n    let abdca = ab +\
    \ acdbb\n    let acdbc = ac + abcbd\n    let abcbc = ab + acbca\n    let acbba\
    \ = ac + abdca\n    let abdba = ab + acdbc\n    let acdbb = ac + abcbc\n    let\
    \ abcbc = ab + acbba\n    let acbda = ac + abdba\n    let abdca = ab + acdbb\n\
    \    let acdbc = ac + abcbd\n    let abcbc = ab + acbca\n    let acbba = ac +\
    \ abdca\n    let abdba = ab + acdbc\n    let acdbb = ac + abcbc\n    let abcbc\
    \ = ab + acbba\n    let acbda = ac + abdba\n    let abdca = ab + acdbb\n    let\
    \ acdbc = ac + abcbd\n    let abcbc = ab + acbca\n    let acbba = ac + abdca\n\
    \    let abdba = ab + acdbc\n    let acdbb = ac + abcbc\n    let abcbc = ab +\
    \ acbba\n    let acbda = ac + abdba\n    let abdca\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpqsu67oqz.swift:31:9: error: invalid redeclaration of 'abdca'\n\
    \    let abdca = ab + acdbd\n        ^\n/tmp/tmpqsu67oqz.swift:23:9: note: 'abdca'\
    \ previously declared here\n    let abdca = ab + acdbc\n        ^\n/tmp/tmpqsu67oqz.swift:32:9:\
    \ error: invalid redeclaration of 'acdbc'\n    let acdbc = ac + abcbd\n      \
    \  ^\n/tmp/tmpqsu67oqz.swift:20:9: note: 'acdbc' previously declared here\n  \
    \  let acdbc = ac + bcd\n        ^\n/tmp/tmpqsu67oqz.swift:33:9: error: invalid\
    \ redeclaration of 'abcbc'\n    let abcbc = ab + acbca\n        ^\n/tmp/tmpqsu67oqz.swift:25:9:\
    \ note: 'abcbc' previously declared here\n    let abcbc = ab + acbda\n       \
    \ ^\n/tmp/tmpqsu67oqz.swift:40:9: error: invalid redeclaration of 'acdbc'\n  \
    \  let acdbc = ac + abcbd\n        ^\n/tmp/tmpqsu67oqz.swift:20:9: note: 'acdbc'\
    \ previously declared here\n    let acdbc = ac + bcd\n        ^\n/tmp/tmpqsu67oqz.swift:41:9:\
    \ error: invalid redeclaration of 'abcbc'\n    let abcbc = ab + acbca\n      \
    \  ^\n/tmp/tmpqsu67oqz.swift:25:9: note: 'abcbc' previously declared here\n  \
    \  let abcbc = ab + acbda\n        ^\n/tmp/tmpqsu67oqz.swift:48:9: error: invalid\
    \ redeclaration of 'acdbc'\n    let acdbc = ac + abcbd\n        ^\n/tmp/tmpqsu67oqz.swift:20:9:\
    \ note: 'acdbc' previously declared here\n    let acdbc = ac + bcd\n        ^\n\
    /tmp/tmpqsu67oqz.swift:49:9: error: invalid redeclaration of 'abcbc'\n    let\
    \ abcbc = ab + acbca\n        ^\n/tmp/tmpqsu67oqz.swift:25:9: note: 'abcbc' previously\
    \ declared here\n    let abcbc = ab + acbda\n        ^\n/tmp/tmpqsu67oqz.swift:56:9:\
    \ error: invalid redeclaration of 'acdbc'\n    let acdbc = ac + abcbd\n      \
    \  ^\n/tmp/tmpqsu67oqz.swift:20:9: note: 'acdbc' previously declared here\n  \
    \  let acdbc = ac + bcd\n        ^\n/tmp/tmpqsu67oqz.swift:57:9: error: invalid\
    \ redeclaration of 'abcbc'\n    let abcbc = ab + acbca\n        ^\n/tmp/tmpqsu67oqz.swift:25:9:\
    \ note: 'abcbc' previously declared here\n    let abcbc = ab + acbda\n       \
    \ ^\n/tmp/tmpqsu67oqz.swift:63:9: error: type annotation missing in pattern\n\
    \    let abdca\n        ^\n"
  stdout: ''
  timestamp: 1659824800
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((a + b > c) && (a + c > b) && (b\
    \ + c > a))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmp294rwf5g/tmp294rwf5g.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af298d79c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af298a70b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af298a70988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af298a6f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp294rwf5g                        0x000056229cea4335 <unavailable> + 4917

    5    libc.so.6                          0x00002af298f65460 __libc_start_main +
    245

    6    tmp294rwf5g                        0x000056229cea3e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824800
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpeow0759f/tmpeow0759f.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae25da5dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae25d754b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae25d754988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae25d7537b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeow0759f                        0x000055ac0f2251bb <unavailable> + 4539

    5    libc.so.6                          0x00002ae25dc49460 __libc_start_main +
    245

    6    tmpeow0759f                        0x000055ac0f224e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824800
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let ab = abs(b - a)\n    let ac = abs(c\
    \ - a)\n    let bc = abs(b - c)\n    let cb = abs(c - b)\n    return (ab == bc\
    \ && ac == cb) || (ab == cb && ac == ab)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpnmh84m8e/tmpnmh84m8e.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af59c584c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af59c27bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af59c27b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af59c27a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnmh84m8e                        0x0000564686d4d2ab <unavailable> + 4779

    5    libc.so.6                          0x00002af59c770460 __libc_start_main +
    245

    6    tmpnmh84m8e                        0x0000564686d4cf59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824800
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((a + b > c) && (a + c > b) && (b\
    \ + c > a))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmp294rwf5g/tmp294rwf5g.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af298d79c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af298a70b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af298a70988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af298a6f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp294rwf5g                        0x000056229cea4335 <unavailable> + 4917

    5    libc.so.6                          0x00002af298f65460 __libc_start_main +
    245

    6    tmp294rwf5g                        0x000056229cea3e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824800
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let ab = abs(a - b)\n    let bc = abs(b\
    \ - c)\n    let cb = abs(c - b)\n    return (ab > bc && ab > cb)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpaes26kfg/tmpaes26kfg.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba3085b3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba3082aab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba3082aa988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba3082a97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaes26kfg                        0x000055ea4e2d72ab <unavailable> + 4779

    5    libc.so.6                          0x00002ba30879f460 __libc_start_main +
    245

    6    tmpaes26kfg                        0x000055ea4e2d6f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824800
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpeow0759f/tmpeow0759f.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae25da5dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae25d754b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae25d754988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae25d7537b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeow0759f                        0x000055ac0f2251bb <unavailable> + 4539

    5    libc.so.6                          0x00002ae25dc49460 __libc_start_main +
    245

    6    tmpeow0759f                        0x000055ac0f224e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824800
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    if a > b {\n        if b > c {\n       \
    \     return true\n        } else {\n            return false\n        }\n   \
    \ } else {\n        if c > b {\n            return true\n        } else {\n  \
    \          return false\n        }\n    }\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmppnt_p7mo/tmppnt_p7mo.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6595cdac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b65959d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b65959d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b65959d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppnt_p7mo                        0x00005598c26cd23b <unavailable> + 4667

    5    libc.so.6                          0x00002b6595ec6460 __libc_start_main +
    245

    6    tmppnt_p7mo                        0x00005598c26cce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824800
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    if a == 0 || b == 0 || c == 0 {\n      \
    \  return false\n    }\n    if a + b > c {\n        return false\n    }\n    if\
    \ a + c > b {\n        return false\n    }\n    if b + c > a {\n        return\
    \ false\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpxnqezy9j/tmpxnqezy9j.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba8417adc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba8414a4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba8414a4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba8414a37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxnqezy9j                        0x000055b31b0ff1bb <unavailable> + 4539

    5    libc.so.6                          0x00002ba841999460 __libc_start_main +
    245

    6    tmpxnqezy9j                        0x000055b31b0fee69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824800

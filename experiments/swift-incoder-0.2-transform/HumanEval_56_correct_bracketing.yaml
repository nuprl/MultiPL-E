name: HumanEval_56_correct_bracketing
language: swift
prompt: "\n/// brackets is a string of \"<\" and \">\".\n/// return True if every\
  \ opening bracket has a corresponding closing bracket.\n/// >>> correct_bracketing(brackets:\
  \ \"<\")\n/// false\n/// >>> correct_bracketing(brackets: \"<>\")\n/// true\n///\
  \ >>> correct_bracketing(brackets: \"<<><>>\")\n/// true\n/// >>> correct_bracketing(brackets:\
  \ \"><<>\")\n/// false\nfunc correct_bracketing(brackets: String) -> Bool {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(correct_bracketing(brackets: \"<>\") ==\
  \ true)\nassert(correct_bracketing(brackets: \"<<><>>\") == true)\nassert(correct_bracketing(brackets:\
  \ \"<><><<><>><>\") == true)\nassert(correct_bracketing(brackets: \"<><><<<><><>><>><<><><<>>>\"\
  ) == true)\nassert(correct_bracketing(brackets: \"<<<><>>>>\") == false)\nassert(correct_bracketing(brackets:\
  \ \"><<>\") == false)\nassert(correct_bracketing(brackets: \"<\") == false)\nassert(correct_bracketing(brackets:\
  \ \"<<<<\") == false)\nassert(correct_bracketing(brackets: \">\") == false)\nassert(correct_bracketing(brackets:\
  \ \"<<>\") == false)\nassert(correct_bracketing(brackets: \"<><><<><>><>><<>\")\
  \ == false)\nassert(correct_bracketing(brackets: \"<><><<><>><>>><>\") == false)"
completions: ["    let openingBrackets = brackets.components(separatedBy: \"<\")\n\
    \    let closingBrackets = brackets.components(separatedBy: \">\")\n    \n   \
    \ if openingBrackets.count != closingBrackets.count {\n        return false\n\
    \    }\n    \n    for i in 0..<openingBrackets.count {\n        if openingBrackets[i]\
    \ != closingBrackets[i] {\n            return false\n        }\n    }\n    \n\
    \    return true", "    var openingBrackets = brackets.characters\n    var closingBrackets\
    \ = brackets.characters\n    var openingBracketIndex = brackets.startIndex\n \
    \   var closingBracketIndex = brackets.startIndex\n\n    while openingBracketIndex\
    \ < brackets.endIndex {\n        guard openingBrackets[openingBracketIndex] !=\
    \ \"<\" else {\n            return false\n        }\n        openingBracketIndex\
    \ += 1\n    }\n\n    while closingBracketIndex < brackets.endIndex {\n       \
    \ guard closingBrackets[closingBracketIndex] != \">\" else {\n            return\
    \ false\n        }\n        closingBracketIndex += 1\n    }\n\n    if openingBracketIndex\
    \ == closingBracketIndex {\n        return true\n    }\n\n    return false", " \
    \   let openingBrackets = brackets.components(separatedBy: \"<\")\n    let closingBrackets\
    \ = brackets.components(separatedBy: \">\")\n    guard openingBrackets.count ==\
    \ closingBrackets.count else {\n        return false\n    }\n    for openingBracket\
    \ in openingBrackets {\n        guard let closingBracket = closingBrackets.first\
    \ else {\n            return false\n        }\n        if openingBracket != closingBracket\
    \ {\n            return false\n        }\n    }\n    return true", "    let openingBrackets\
    \ = brackets.components(separatedBy: \"<\")\n    let closingBrackets = brackets.components(separatedBy:\
    \ \">\")\n    \n    if openingBrackets.count != closingBrackets.count {\n    \
    \    return false\n    }\n    \n    for openingBracket in openingBrackets {\n\
    \        if let closingBracket = closingBrackets.firstIndex(of: openingBracket)\
    \ {\n            closingBrackets.remove(at: closingBracket)\n        }\n    }\n\
    \    \n    return openingBrackets.count == 0", "    let openingBrackets = brackets.components(separatedBy:\
    \ \"<\")\n    let closingBrackets = brackets.components(separatedBy: \">\")\n\
    \    if openingBrackets.count != closingBrackets.count {\n        return false\n\
    \    }\n    for i in 0..<openingBrackets.count {\n        if openingBrackets[i]\
    \ != closingBrackets[i] {\n            return false\n        }\n    }\n    return\
    \ true", "    var opening = brackets.characters\n    var closing = brackets.characters\n\
    \    opening.removeLast()\n    closing.removeFirst()\n    opening.removeFirst()\n\
    \    closing.removeLast()\n    if opening.isEmpty {\n        return closing.isEmpty\
    \ && closing.count == 0\n    }\n    if closing.isEmpty {\n        return opening.count\
    \ == 0\n    }\n    if opening.count != closing.count {\n        return false\n\
    \    }\n    if opening.count == 1 {\n        return opening.first! == closing.first!\n\
    \    }\n    if opening.count == 2 {\n        return opening.first! == closing.last!\n\
    \    }\n    if opening.count == 3 {\n        return opening.first! == closing.last!\n\
    \    }\n    if opening.count == 4 {\n        return opening.first! == closing.last!\n\
    \    }\n    if opening.count == 5 {\n        return opening.first! == closing.last!\n\
    \    }\n    if opening.count == 6 {\n        return opening.first! == closing.last!\n\
    \    }\n    if opening.count == 7 {\n        return opening.first! == closing.last!\n\
    \    }\n    if opening.count == 8 {\n        return opening.first! == closing.last!\n\
    \    }\n    if opening.count == 9 {\n        return opening.first! == closing.last!\n\
    \    }\n    if opening.count == 10 {\n        return opening.first! == closing.last!\n\
    \    }\n    if opening.count == 11 {\n        return opening.first! == closing.last!\n\
    \    }\n    if opening.count == 12 {\n        return opening.first! == closing.last!\n\
    \    }\n    if opening.count == 13 {\n        return opening.first! == closing.last!\n\
    \    }\n    if opening.count == 14 {\n        return opening.first! == closing.last!\n\
    \    }\n    if opening.count == 15 {\n        return opening.first! == closing.last!\n\
    \    }\n    if opening.count == 16 {\n        return opening.first! == closing.last!\n\
    \    }\n    if opening.count == 17 {\n        return opening.first! == closing.last!\n\
    \    }\n    if opening.count == 18 {\n        return opening.first! == closing.last!\n\
    \    }\n    if opening.count == 19 {\n        return opening.first! == closing.last!\n\
    \    }\n    if opening.count == 20 {\n        return opening.first! == closing.last!\n\
    \    }\n    if opening.count == 21 {\n        return opening.first! == closing.last!\n\
    \    }\n    if opening.count == ", "    let openingBrackets = brackets.components(separatedBy:\
    \ \"<\")\n    let closingBrackets = brackets.components(separatedBy: \">\")\n\
    \    if openingBrackets.count != closingBrackets.count {\n        return false\n\
    \    }\n    for openingBracket in openingBrackets {\n        if !closingBrackets.contains(where:\
    \ { $0 == openingBracket }) {\n            return false\n        }\n    }\n  \
    \  return true", "    var opening = brackets.characters\n    var closing = brackets.characters\n\
    \    opening.removeLast()\n    closing.removeFirst()\n    if opening.isEmpty {\n\
    \        return closing.isEmpty && closing.count == 0\n    }\n    if closing.isEmpty\
    \ {\n        return opening.count == 0\n    }\n    return opening.count == closing.count",
  "    var openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \    openingBrackets.removeLast()\n    closingBrackets.removeFirst()\n    var\
    \ openingBracketIndex = openingBrackets.startIndex\n    var closingBracketIndex\
    \ = closingBrackets.startIndex\n    while openingBracketIndex < openingBrackets.endIndex\
    \ {\n        if openingBrackets[openingBracketIndex] != closingBrackets[closingBracketIndex]\
    \ {\n            return false\n        }\n        openingBracketIndex += 1\n \
    \       closingBracketIndex -= 1\n    }\n    return true", "    var openingBrackets\
    \ = brackets.characters\n    var closingBrackets = brackets.characters\n    var\
    \ openingBracketIndex = brackets.startIndex\n    var closingBracketIndex = brackets.startIndex\n\
    \n    while openingBracketIndex < brackets.endIndex {\n        if openingBrackets[openingBracketIndex]\
    \ != \">\" {\n            openingBracketIndex += 1\n            continue\n   \
    \     }\n\n        openingBracketIndex += 1\n\n        if openingBracketIndex\
    \ < brackets.endIndex {\n            if openingBrackets[openingBracketIndex] ==\
    \ \">\" {\n                openingBracketIndex += 1\n                continue\n\
    \            }\n\n            if openingBrackets[openingBracketIndex] != \"<\"\
    \ {\n                return false\n            }\n\n            openingBracketIndex\
    \ += 1\n        }\n\n        if openingBracketIndex < brackets.endIndex {\n  \
    \          if openingBrackets[openingBracketIndex] != \"<\" {\n              \
    \  return false\n            }\n\n            openingBracketIndex += 1\n     \
    \   }\n\n        if openingBracketIndex < brackets.endIndex {\n            if\
    \ openingBrackets[openingBracketIndex] != \"<\" {\n                return false\n\
    \            }\n\n            openingBracketIndex += 1\n        }\n\n        if\
    \ openingBracketIndex < brackets.endIndex {\n            if openingBrackets[openingBracketIndex]\
    \ != \"<\" {\n                return false\n            }\n\n            openingBracketIndex\
    \ += 1\n        }\n\n        if openingBracketIndex < brackets.endIndex {\n  \
    \          if openingBrackets[openingBracketIndex] != \"<\" {\n              \
    \  return false\n            }\n\n            openingBracketIndex += 1\n     \
    \   }\n\n        if openingBracketIndex < brackets.endIndex {\n            if\
    \ openingBrackets[openingBracketIndex] != \"<\" {\n                return false\n\
    \            }\n\n            openingBracketIndex += 1\n        }\n\n        if\
    \ openingBracketIndex < brackets.endIndex {\n            if openingBrackets[openingBracketIndex]\
    \ != \"<\" {\n                return false\n            }\n\n            openingBracketIndex\
    \ += 1\n        }\n\n        if openingBracketIndex < brackets.endIndex {\n  \
    \          if openingBrackets[openingBracketIndex] != \"<\" {\n              \
    \  return false\n            }\n\n            openingBracketIndex += 1\n     \
    \   }\n\n        if openingBracketIndex < brackets.endIndex {\n            if\
    \ openingBrackets[openingBracketIndex] != \"<\" {\n                return false\n\
    \            }\n\n", "    var openingBrackets = brackets.characters\n    var closingBrackets\
    \ = brackets.characters\n    var openingBracketsCount = brackets.characters.count\n\
    \    var closingBracketsCount = brackets.characters.count\n    var openingBracketsIndex\
    \ = 0\n    var closingBracketsIndex = 0\n    var openingBracketsCountIndex = 0\n\
    \    var closingBracketsCountIndex = 0\n    var openingBracketsFound = false\n\
    \    var closingBracketsFound = false\n\n    while openingBracketsIndex < openingBracketsCount\
    \ {\n        openingBracketsCountIndex += 1\n        if openingBracketsCountIndex\
    \ == openingBracketsCount {\n            openingBracketsCountIndex = 0\n     \
    \       openingBracketsIndex += 1\n        }\n        if openingBrackets[openingBracketsIndex]\
    \ == '<' {\n            openingBracketsFound = true\n            openingBracketsIndex\
    \ += 1\n        }\n        if openingBrackets[openingBracketsIndex] == '>' {\n\
    \            openingBracketsFound = true\n            openingBracketsIndex +=\
    \ 1\n        }\n        if openingBracketsFound {\n            openingBracketsCount\
    \ -= openingBracketsCountIndex\n            if openingBracketsCount == 0 {\n \
    \               openingBracketsFound = false\n            }\n        }\n    }\n\
    \    while closingBracketsIndex < closingBracketsCount {\n        closingBracketsCountIndex\
    \ += 1\n        if closingBracketsCountIndex == closingBracketsCount {\n     \
    \       closingBracketsCountIndex = 0\n            closingBracketsIndex += 1\n\
    \        }\n        if closingBrackets[closingBracketsIndex] == '<' {\n      \
    \      closingBracketsFound = true\n            closingBracketsIndex += 1\n  \
    \      }\n        if closingBrackets[closingBracketsIndex] == '>' {\n        \
    \    closingBracketsFound = true\n            closingBracketsIndex += 1\n    \
    \    }\n        if closingBracketsFound {\n            closingBracketsCount -=\
    \ closingBracketsCountIndex\n            if closingBracketsCount == 0 {\n    \
    \            closingBracketsFound = false\n            }\n        }\n    }\n \
    \   return openingBracketsIndex == closingBracketsIndex", "    var openingBrackets\
    \ = brackets.characters\n    var closingBrackets = brackets.characters\n    var\
    \ openingBracketIndex = brackets.startIndex\n    var closingBracketIndex = brackets.startIndex\n\
    \    while openingBracketIndex < brackets.endIndex {\n        openingBracketIndex\
    \ = openingBracketIndex.successor()\n        closingBracketIndex = closingBracketIndex.successor()\n\
    \        if openingBrackets[openingBracketIndex] != closingBrackets[closingBracketIndex]\
    \ {\n            return false\n        }\n    }\n    return true", "    let openingBrackets\
    \ = brackets.components(separatedBy: \"<\")\n    let closingBrackets = brackets.components(separatedBy:\
    \ \">\")\n    \n    if openingBrackets.count != closingBrackets.count {\n    \
    \    return false\n    }\n    \n    for i in 0..<openingBrackets.count {\n   \
    \     if openingBrackets[i] != closingBrackets[i] {\n            return false\n\
    \        }\n    }\n    \n    return true", "    let openingBrackets = brackets.components(separatedBy:\
    \ \"<\")\n    let closingBrackets = brackets.components(separatedBy: \">\")\n\
    \    if openingBrackets.count != closingBrackets.count {\n        return false\n\
    \    }\n    for openingBracket in openingBrackets {\n        if let closingBracket\
    \ = closingBrackets.firstIndex(of: openingBracket) {\n            closingBrackets.remove(at:\
    \ closingBracket)\n        }\n    }\n    return openingBrackets.count == 0", " \
    \   var openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \    var openingBracketIndex = brackets.startIndex\n    var closingBracketIndex\
    \ = brackets.startIndex\n\n    while openingBracketIndex < brackets.endIndex {\n\
    \        guard openingBrackets[openingBracketIndex] == \">\" else {\n        \
    \    return false\n        }\n        openingBracketIndex += 1\n    }\n\n    while\
    \ closingBracketIndex < brackets.endIndex {\n        guard closingBrackets[closingBracketIndex]\
    \ != \"<\" else {\n            return false\n        }\n        closingBracketIndex\
    \ += 1\n    }\n\n    return openingBracketIndex == closingBracketIndex", "   \
    \ var openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \    var openingBracketIndex = brackets.startIndex\n    var closingBracketIndex\
    \ = brackets.startIndex\n    var openingBracketCount = 0\n    var closingBracketCount\
    \ = 0\n    while openingBracketIndex < brackets.endIndex {\n        let openingBracket\
    \ = brackets[openingBracketIndex]\n        if openingBracket == \"<\" {\n    \
    \        openingBracketCount++\n        } else if openingBracket == \">\" {\n\
    \            openingBracketCount--\n        }\n        openingBracketIndex++\n\
    \    }\n    while closingBracketIndex < brackets.endIndex {\n        let closingBracket\
    \ = brackets[closingBracketIndex]\n        if closingBracket == \"<\" {\n    \
    \        closingBracketCount++\n        } else if closingBracket == \">\" {\n\
    \            closingBracketCount--\n        }\n        closingBracketIndex++\n\
    \    }\n    return openingBracketCount == 0 && closingBracketCount == 0", "  \
    \  var openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \    var openingBracketIndex = brackets.startIndex\n    var closingBracketIndex\
    \ = brackets.startIndex\n    var openingBracketCount = 0\n    var closingBracketCount\
    \ = 0\n    while openingBracketIndex < brackets.endIndex {\n        let openingBracket\
    \ = brackets[openingBracketIndex]\n        openingBracketCount += 1\n        if\
    \ openingBracket == \"<\" {\n            openingBracketIndex += 1\n          \
    \  continue\n        }\n        if openingBracket == \">\" {\n            openingBracketIndex\
    \ += 1\n            closingBracketCount += 1\n            if closingBracketCount\
    \ > 1 {\n                closingBracketIndex += 1\n                closingBracketCount\
    \ = 0\n                continue\n            }\n        }\n        openingBracketIndex\
    \ += 1\n    }\n    return openingBracketCount == closingBracketCount", "    var\
    \ openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \    var openingBracketIndex = brackets.startIndex\n    var closingBracketIndex\
    \ = brackets.startIndex\n\n    while openingBracketIndex < brackets.endIndex {\n\
    \        let openingBracket = brackets[openingBracketIndex]\n        let closingBracket\
    \ = brackets[closingBracketIndex]\n\n        if openingBracket == \"<\" {\n  \
    \          openingBracketIndex += 1\n            closingBracketIndex += 1\n  \
    \      } else if openingBracket == \">\" {\n            openingBracketIndex +=\
    \ 1\n        } else {\n            openingBracketIndex += 1\n            closingBracketIndex\
    \ += 1\n        }\n\n        if openingBracketIndex < brackets.endIndex {\n  \
    \          let nextOpeningBracket = brackets[openingBracketIndex]\n          \
    \  if nextOpeningBracket == \"<\" {\n                openingBracketIndex += 1\n\
    \            } else {\n                openingBracketIndex += 1\n            \
    \    closingBracketIndex += 1\n            }\n        }\n\n        if closingBracketIndex\
    \ < brackets.endIndex {\n            let nextClosingBracket = brackets[closingBracketIndex]\n\
    \            if nextClosingBracket == \">\" {\n                closingBracketIndex\
    \ += 1\n            } else {\n                closingBracketIndex += 1\n     \
    \           openingBracketIndex += 1\n            }\n        }\n    }\n\n    return\
    \ openingBracketIndex == closingBracketIndex", "    brackets = brackets.lowercased()\n\
    \    var openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \    var openingBracketIndex = openingBrackets.startIndex\n    var closingBracketIndex\
    \ = closingBrackets.startIndex\n    while openingBracketIndex < openingBrackets.endIndex\
    \ {\n        if openingBrackets[openingBracketIndex] == \">\" {\n            openingBracketIndex\
    \ += 1\n            if openingBracketIndex < openingBrackets.endIndex {\n    \
    \            openingBrackets[openingBracketIndex] = \"<\"\n                closingBrackets[closingBracketIndex]\
    \ = \"<\"\n                closingBracketIndex += 1\n            }\n        }\
    \ else if openingBrackets[openingBracketIndex] != \"<\" {\n            return\
    \ false\n        }\n        openingBracketIndex += 1\n    }\n    return openingBracketIndex\
    \ == openingBrackets.endIndex && closingBracketIndex == closingBrackets.endIndex",
  "    let openingBrackets = brackets.components(separatedBy: \"<\")\n    let closingBrackets\
    \ = brackets.components(separatedBy: \">\")\n    if openingBrackets.count != closingBrackets.count\
    \ {\n        return false\n    }\n    for openingBracket in openingBrackets {\n\
    \        if let closingBracket = closingBrackets.firstIndex(of: openingBracket)\
    \ {\n            closingBrackets.remove(at: closingBracket)\n        }\n    }\n\
    \    return openingBrackets.count == 0", "    let openingBrackets = brackets.components(separatedBy:\
    \ \"<\")\n    let closingBrackets = brackets.components(separatedBy: \">\")\n\
    \    if openingBrackets.count != closingBrackets.count {\n        return false\n\
    \    }\n    for openingBracket in openingBrackets {\n        if !closingBrackets.contains(where:\
    \ { $0 == openingBracket }) {\n            return false\n        }\n    }\n  \
    \  return true", "    let openingBrackets = brackets.components(separatedBy: \"\
    <\")\n    let closingBrackets = brackets.components(separatedBy: \">\")\n    if\
    \ openingBrackets.count != closingBrackets.count {\n        return false\n   \
    \ }\n    for openingBracket in openingBrackets {\n        if let closingBracket\
    \ = closingBrackets.firstIndex(of: openingBracket) {\n            closingBrackets.remove(at:\
    \ closingBracket)\n        }\n    }\n    return openingBrackets.count == 0", " \
    \   var openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \    var openingBracketIndex = brackets.startIndex\n    var closingBracketIndex\
    \ = brackets.startIndex\n    var openingBracketCount = 0\n    var closingBracketCount\
    \ = 0\n\n    while openingBracketIndex < brackets.endIndex {\n        switch brackets[openingBracketIndex]\
    \ {\n        case \"<\":\n            openingBracketCount += 1\n        case \"\
    <=\":\n            openingBracketCount += 1\n        case \"=\":\n           \
    \ openingBracketCount += 1\n        case \"==\":\n            openingBracketCount\
    \ += 1\n        case \"!=\":\n            openingBracketCount += 1\n        case\
    \ \"<=\":\n            openingBracketCount += 1\n        case \"<\":\n       \
    \     openingBracketCount += 1\n        case \"<\":\n            openingBracketCount\
    \ += 1\n        case \"<\":\n            openingBracketCount += 1\n        case\
    \ \"<\":\n            openingBracketCount += 1\n        case \"<\":\n        \
    \    openingBracketCount += 1\n        case \"<\":\n            openingBracketCount\
    \ += 1\n        case \"<\":\n            openingBracketCount += 1\n        case\
    \ \"<\":\n            openingBracketCount += 1\n        case \"<\":\n        \
    \    openingBracketCount += 1\n        case \"<\":\n            openingBracketCount\
    \ += 1\n        case \"<\":\n            openingBracketCount += 1\n        case\
    \ \"<\":\n            openingBracketCount += 1\n        case \"<\":\n        \
    \    openingBracketCount += 1\n        case \"<\":\n            openingBracketCount\
    \ += 1\n        case \"<\":\n            openingBracketCount += 1\n        case\
    \ \"<\":\n            openingBracketCount += 1\n        case \"<\":\n        \
    \    openingBracketCount += 1\n        case \"<\":\n            openingBracketCount\
    \ += 1\n        case \"<\":\n            openingBracketCount += 1\n        case\
    \ \"<\":\n            openingBracketCount += 1\n        case \"<\":\n        \
    \    openingBracketCount += 1\n        case \"<\":\n            openingBracketCount\
    \ += 1\n        case \"<\":\n            openingBracketCount += 1\n        case\
    \ \"<\":\n            openingBracketCount += 1\n        case \"<\":\n        \
    \    openingBracketCount += 1\n        case \"<\":\n            openingBracketCount\
    \ += 1\n        case \"<\":\n            openingBracketCount += 1\n        ",
  "    var openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \    var openingBracketIndex = brackets.startIndex\n    var closingBracketIndex\
    \ = brackets.startIndex\n    var openingBracketCount = brackets.characters.count\n\
    \    var closingBracketCount = brackets.characters.count\n\n    while openingBracketIndex\
    \ < openingBracketCount {\n        openingBracketIndex = openingBracketIndex +\
    \ 1\n        let openingBracket = brackets.characters[openingBracketIndex]\n \
    \       if openingBracket == \"<\" {\n            if closingBracketIndex < closingBracketCount\
    \ {\n                closingBracketIndex = closingBracketIndex + 1\n         \
    \       let closingBracket = brackets.characters[closingBracketIndex]\n      \
    \          if closingBracket == \">\" {\n                    openingBracketIndex\
    \ = openingBracketIndex + 1\n                    closingBracketIndex = closingBracketIndex\
    \ + 1\n                    openingBracketCount = openingBracketCount - 1\n   \
    \                 closingBracketCount = closingBracketCount - 1\n            \
    \    } else {\n                    return false\n                }\n         \
    \   } else {\n                return false\n            }\n        } else {\n\
    \            return false\n        }\n    }\n\n    return true", "    brackets\
    \ = brackets.stringByTrimmingCharactersInSet(NSCharacterSet.whitespaceAndNewlineCharacterSet())\n\
    \    brackets = brackets.stringByReplacingOccurrencesOfString(\"<<\", withString:\
    \ \">\", options: NSStringCompareOptions.LiteralSearch, range: nil)\n    brackets\
    \ = brackets.stringByReplacingOccurrencesOfString(\">>\", withString: \"<\", options:\
    \ NSStringCompareOptions.LiteralSearch, range: nil)\n    return brackets.rangeOfString(\"\
    <\") != nil && brackets.rangeOfString(\">\") != nil", "    var opening = brackets.characters.split{$0\
    \ == \">\"}.count\n    var closing = brackets.characters.split{$0 == \"<\"}.count\n\
    \    return opening == closing", "    var openingBrackets = brackets.characters\n\
    \    var closingBrackets = brackets.characters\n    var openingBracketIndex =\
    \ brackets.startIndex\n    var closingBracketIndex = brackets.startIndex\n   \
    \ var openingBracketCount = 0\n    var closingBracketCount = 0\n\n    while openingBracketIndex\
    \ < brackets.endIndex {\n        let openingBracket = brackets[openingBracketIndex]\n\
    \        openingBracketCount += 1\n\n        if openingBracket == \"<\" {\n  \
    \          openingBracketIndex += 1\n        } else if openingBracket == \">\"\
    \ {\n            openingBracketIndex += 1\n            closingBracketIndex +=\
    \ 1\n        } else {\n            openingBracketIndex += 1\n        }\n\n   \
    \     if openingBracketIndex >= brackets.endIndex {\n            break\n     \
    \   }\n    }\n\n    while closingBracketIndex < brackets.endIndex {\n        let\
    \ closingBracket = brackets[closingBracketIndex]\n        closingBracketCount\
    \ += 1\n\n        if closingBracket == \"<\" {\n            closingBracketIndex\
    \ += 1\n        } else if closingBracket == \">\" {\n            closingBracketIndex\
    \ += 1\n            openingBracketIndex += 1\n        } else {\n            closingBracketIndex\
    \ += 1\n        }\n\n        if closingBracketIndex >= brackets.endIndex {\n \
    \           break\n        }\n    }\n\n    return openingBracketCount == closingBracketCount",
  "    var openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \    var openingBracketsCount = brackets.characters.count\n    var closingBracketsCount\
    \ = brackets.characters.count\n\n    while openingBracketsCount > 0 && closingBracketsCount\
    \ > 0 {\n        if openingBrackets[openingBracketsCount - 1] == closingBrackets[closingBracketsCount\
    \ - 1] {\n            openingBracketsCount -= 1\n            closingBracketsCount\
    \ -= 1\n        } else {\n            return false\n        }\n    }\n\n    return\
    \ openingBracketsCount == 0", "    let openingBrackets = brackets.components(separatedBy:\
    \ \"<\")\n    let closingBrackets = brackets.components(separatedBy: \">\")\n\
    \    \n    if openingBrackets.count != closingBrackets.count {\n        return\
    \ false\n    }\n    \n    for i in 0..<openingBrackets.count {\n        if openingBrackets[i]\
    \ != closingBrackets[i] {\n            return false\n        }\n    }\n    \n\
    \    return true", "    let openingBrackets = brackets.components(separatedBy:\
    \ \"<\")\n    let closingBrackets = brackets.components(separatedBy: \">\")\n\
    \    if openingBrackets.count != closingBrackets.count {\n        return false\n\
    \    }\n    for openingBracket in openingBrackets {\n        let closingBracket\
    \ = closingBrackets.firstIndex(of: openingBracket)\n        if closingBracket\
    \ == nil {\n            return false\n        }\n        if openingBracket !=\
    \ closingBracket {\n            return false\n        }\n    }\n    return true",
  "    var openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \n    for openingBracket in openingBrackets {\n        if closingBrackets.contains(openingBracket)\
    \ {\n            closingBrackets.remove(openingBracket)\n        }\n    }\n\n\
    \    return openingBrackets.isEmpty", "    var openingBrackets = brackets.characters\n\
    \    var closingBrackets = brackets.characters\n    var openingBracketIndex =\
    \ brackets.startIndex\n    var closingBracketIndex = brackets.startIndex\n   \
    \ while openingBracketIndex < brackets.endIndex {\n        openingBracketIndex\
    \ = openingBracketIndex.successor()\n        closingBracketIndex = closingBracketIndex.successor()\n\
    \        if openingBrackets[openingBracketIndex] != closingBrackets[closingBracketIndex]\
    \ {\n            return false\n        }\n    }\n    return true", "    var openingBrackets\
    \ = brackets.characters\n    var closingBrackets = brackets.characters\n    var\
    \ openingBracketIndex = 0\n    var closingBracketIndex = 0\n\n    while openingBracketIndex\
    \ < openingBrackets.count {\n        guard openingBrackets[openingBracketIndex]\
    \ == \">\" else {\n            return false\n        }\n        openingBracketIndex\
    \ += 1\n\n        while closingBracketIndex < closingBrackets.count {\n      \
    \      guard closingBrackets[closingBracketIndex] == \">\" else {\n          \
    \      return false\n            }\n            closingBracketIndex += 1\n   \
    \     }\n\n        openingBracketIndex += 1\n        closingBracketIndex = 0\n\
    \    }\n\n    return true", "    var openingBrackets = brackets.characters\n \
    \   var closingBrackets = brackets.characters\n    var openingBracketIndex = brackets.startIndex\n\
    \    var closingBracketIndex = brackets.startIndex\n    while openingBracketIndex\
    \ < brackets.endIndex {\n        if openingBrackets[openingBracketIndex] != closingBrackets[closingBracketIndex]\
    \ {\n            return false\n        }\n        openingBracketIndex += 1\n \
    \       closingBracketIndex += 1\n    }\n    return true", "    var openingBrackets\
    \ = brackets.characters\n    var closingBrackets = brackets.characters\n    var\
    \ openingBracketIndex = brackets.startIndex\n    var closingBracketIndex = brackets.startIndex\n\
    \    var openingBracketCount = 0\n    var closingBracketCount = 0\n\n    while\
    \ openingBracketIndex < brackets.endIndex {\n        switch brackets[openingBracketIndex]\
    \ {\n        case \"<\":\n            openingBracketCount += 1\n        case \"\
    <=\":\n            openingBracketCount += 1\n        case \"=\":\n           \
    \ openingBracketCount += 1\n        case \"==\":\n            openingBracketCount\
    \ += 1\n        case \"!=\":\n            openingBracketCount += 1\n        case\
    \ \"<=\":\n            openingBracketCount += 1\n        case \">\":\n       \
    \     openingBracketCount -= 1\n        case \"<\":\n            openingBracketCount\
    \ -= 1\n        case \"<=\":\n            openingBracketCount -= 1\n        case\
    \ \"=\":\n            openingBracketCount -= 1\n        case \"==\":\n       \
    \     openingBracketCount -= 1\n        case \"!=\":\n            openingBracketCount\
    \ -= 1\n        case \"<\":\n            openingBracketCount -= 1\n        case\
    \ \">\":\n            closingBracketCount += 1\n        case \"<=\":\n       \
    \     closingBracketCount += 1\n        case \"=\":\n            closingBracketCount\
    \ += 1\n        case \"==\":\n            closingBracketCount += 1\n        case\
    \ \"!=\":\n            closingBracketCount += 1\n        case \"<=\":\n      \
    \      closingBracketCount += 1\n        case \">\":\n            closingBracketCount\
    \ -= 1\n        case \"<\":\n            closingBracketCount -= 1\n        case\
    \ \"<=\":\n            closingBracketCount -= 1\n        case \"=\":\n       \
    \     closingBracketCount -= 1\n        case \"==\":\n            closingBracketCount\
    \ -= 1\n        case \"!=\":\n            closingBracketCount -= 1\n        case\
    \ \"<\":\n            closingBracketCount -= 1\n        case \">\":\n        \
    \    openingBracketIndex += 1\n        case \">\":\n            openingBracketIndex\
    \ += 1\n        case \">\":\n            openingBracketIndex += 1\n        case\
    \ \">\":\n            openingBracketIndex += 1\n        case \">\":\n        \
    \    openingBracketIndex += 1\n        case \">\":\n            openingBracketIndex\
    \ += 1\n        case \">\":\n            openingBracketIndex += 1\n        case\
    \ \">\":\n            openingBracketIndex += 1\n        case \">\":\n        \
    \    ", "    let openingBrackets = brackets.components(separatedBy: \"<\")\n \
    \   let closingBrackets = brackets.components(separatedBy: \">\")\n    if openingBrackets.count\
    \ != closingBrackets.count {\n        return false\n    }\n    for openingBracket\
    \ in openingBrackets {\n        if !closingBrackets.contains(where: { $0 == openingBracket\
    \ }) {\n            return false\n        }\n    }\n    return true", "    var\
    \ openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \    openingBrackets.removeFirst()\n    closingBrackets.removeLast()\n    openingBrackets.reverse()\n\
    \    closingBrackets.reverse()\n    if openingBrackets.count != closingBrackets.count\
    \ {\n        return false\n    }\n    for index in 0..<openingBrackets.count {\n\
    \        if openingBrackets[index] != closingBrackets[index] {\n            return\
    \ false\n        }\n    }\n    return true", "    var openingBrackets = brackets.characters\n\
    \    var closingBrackets = brackets.characters\n    openingBrackets.removeLast()\n\
    \    closingBrackets.removeLast()\n    var openingBracketCount = 0\n    var closingBracketCount\
    \ = 0\n    for index in 0..<openingBrackets.count {\n        if openingBrackets[index]\
    \ == '<' {\n            openingBracketCount++\n        }\n        if openingBrackets[index]\
    \ == '>' {\n            openingBracketCount--\n        }\n    }\n    for index\
    \ in 0..<closingBrackets.count {\n        if closingBrackets[index] == '<' {\n\
    \            closingBracketCount++\n        }\n        if closingBrackets[index]\
    \ == '>' {\n            closingBracketCount--\n        }\n    }\n    return openingBracketCount\
    \ == 0 && closingBracketCount == 0", "    let openingBrackets = brackets.components(separatedBy:\
    \ \"<\")\n    let closingBrackets = brackets.components(separatedBy: \">\")\n\
    \    \n    if openingBrackets.count != closingBrackets.count {\n        return\
    \ false\n    }\n    \n    for i in 0..<openingBrackets.count {\n        if openingBrackets[i]\
    \ != closingBrackets[i] {\n            return false\n        }\n    }\n    \n\
    \    return true", "    var openingBrackets = brackets.characters\n    var closingBrackets\
    \ = brackets.characters\n    var openingBracketIndex = brackets.startIndex\n \
    \   var closingBracketIndex = brackets.startIndex\n    var openingBracketCount\
    \ = 0\n    var closingBracketCount = 0\n\n    while openingBracketIndex < brackets.endIndex\
    \ {\n        let openingBracket = brackets[openingBracketIndex]\n        openingBracketCount\
    \ += 1\n\n        if openingBracket == \"<\" {\n            if closingBracketIndex\
    \ < brackets.endIndex && brackets[closingBracketIndex] == \">\" {\n          \
    \      closingBracketCount += 1\n                closingBracketIndex += 1\n  \
    \          } else {\n                return false\n            }\n        } else\
    \ {\n            if closingBracketIndex < brackets.endIndex && brackets[closingBracketIndex]\
    \ == \">\" {\n                closingBracketCount += 1\n                closingBracketIndex\
    \ += 1\n            } else {\n                return false\n            }\n  \
    \      }\n\n        openingBracketIndex += 1\n    }\n\n    if openingBracketCount\
    \ != closingBracketCount {\n        return false\n    }\n\n    return true", " \
    \   var openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \    var openingBracketCount = brackets.characters.count\n    var closingBracketCount\
    \ = brackets.characters.count\n\n    if openingBracketCount < 1 {\n        return\
    \ false\n    }\n\n    if openingBracketCount > closingBracketCount {\n       \
    \ return true\n    }\n\n    if openingBracketCount > 1 {\n        for openingBracket\
    \ in 0..<openingBracketCount {\n            if openingBrackets[openingBracket]\
    \ != closingBrackets[openingBracket] {\n                return false\n       \
    \     }\n        }\n    }\n\n    return true", "    let openingBrackets = brackets.components(separatedBy:\
    \ \"<\")\n    let closingBrackets = brackets.components(separatedBy: \">\")\n\
    \    if openingBrackets.count != closingBrackets.count {\n        return false\n\
    \    }\n    for openingBracket in openingBrackets {\n        if !openingBracket.hasPrefix(\"\
    <\") {\n            return false\n        }\n        if !openingBracket.hasSuffix(\"\
    >\") {\n            return false\n        }\n    }\n    return true", "    var\
    \ opening_brackets = brackets.characters\n    var closing_brackets = brackets.characters\n\
    \    var opening_brackets_count = brackets.characters.count\n    var closing_brackets_count\
    \ = brackets.characters.count\n\n    if opening_brackets_count > 0 {\n       \
    \ opening_brackets.removeLast()\n        opening_brackets_count -= 1\n    }\n\n\
    \    if closing_brackets_count > 0 {\n        closing_brackets.removeLast()\n\
    \        closing_brackets_count -= 1\n    }\n\n    if opening_brackets_count !=\
    \ closing_brackets_count {\n        return false\n    }\n\n    if opening_brackets.count\
    \ != closing_brackets.count {\n        return false\n    }\n\n    for opening_bracket\
    \ in opening_brackets {\n        if closing_brackets.contains(opening_bracket)\
    \ {\n            return false\n        }\n    }\n\n    return true", "    var\
    \ openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \    var openingBracketIndex = brackets.startIndex\n    var closingBracketIndex\
    \ = brackets.startIndex\n    var openingBracketCount = 0\n    var closingBracketCount\
    \ = 0\n    while openingBracketIndex < brackets.endIndex {\n        openingBracketCount++\n\
    \        openingBracketIndex = brackets.index(after: openingBracketIndex)\n  \
    \  }\n    while closingBracketIndex < brackets.endIndex {\n        closingBracketCount++\n\
    \        closingBracketIndex = brackets.index(after: closingBracketIndex)\n  \
    \  }\n    if openingBracketCount != closingBracketCount {\n        return false\n\
    \    }\n    var openingBracketIndexEnd = brackets.endIndex\n    while openingBracketIndex\
    \ < openingBracketIndexEnd {\n        openingBracketIndex = brackets.index(after:\
    \ openingBracketIndexEnd)\n        openingBracketIndexEnd = brackets.index(after:\
    \ openingBracketIndexEnd)\n    }\n    while openingBracketIndex < openingBracketIndexEnd\
    \ {\n        let openingBracket = brackets[openingBracketIndex]\n        let closingBracket\
    \ = brackets[closingBracketIndex]\n        if openingBracket != closingBracket\
    \ {\n            return false\n        }\n        openingBracketIndexEnd = brackets.index(after:\
    \ openingBracketIndexEnd)\n        openingBracketIndex++\n        closingBracketIndex++\n\
    \    }\n    return true", "    var opening_brackets = brackets.characters\n  \
    \  var closing_brackets = brackets.characters\n    var opening_bracket = brackets.startIndex\n\
    \    var closing_bracket = brackets.endIndex\n    var opening_brackets = [String]()\n\
    \    var closing_brackets = [String]()\n    var opening_brackets_count = brackets.characters.count\n\
    \    var closing_brackets_count = brackets.characters.count\n    var opening_brackets_index\
    \ = brackets.startIndex\n    var closing_brackets_index = brackets.endIndex\n\
    \    var opening_brackets_index_count = brackets.startIndex.distanceTo(brackets.endIndex)\n\
    \    var closing_brackets_index_count = brackets.startIndex.distanceTo(brackets.endIndex)\n\
    \    var opening_brackets_index_count_minus_1 = opening_brackets_index_count -\
    \ 1\n    var closing_brackets_index_count_minus_1 = closing_brackets_index_count\
    \ - 1\n    var opening_brackets_index_count_minus_2 = opening_brackets_index_count\
    \ - 2\n    var closing_brackets_index_count_minus_2 = closing_brackets_index_count\
    \ - 2\n    var opening_brackets_index_count_minus_3 = opening_brackets_index_count\
    \ - 3\n    var closing_brackets_index_count_minus_3 = closing_brackets_index_count\
    \ - 3\n    var opening_brackets_index_count_minus_4 = opening_brackets_index_count\
    \ - 4\n    var closing_brackets_index_count_minus_4 = closing_brackets_index_count\
    \ - 4\n    var opening_brackets_index_count_minus_5 = opening_brackets_index_count\
    \ - 5\n    var closing_brackets_index_count_minus_5 = closing_brackets_index_count\
    \ - 5\n    var opening_brackets_index_count_minus_6 = opening_brackets_index_count\
    \ - 6\n    var closing_brackets_index_count_minus_6 = closing_brackets_index_count\
    \ - 6\n    var opening_brackets_index_count_minus_7 = opening_brackets_index_count\
    \ - 7\n    var closing_brackets_index_count_minus_7 = closing_brackets_index_count\
    \ - 7\n    var opening_brackets_index_count_minus_8 = opening_brackets_index_count\
    \ - 8\n    var closing_brackets_index_count_minus_8 = closing_brackets_index_count\
    \ - 8\n    var open", "    var opening = brackets.characters\n    var closing\
    \ = brackets.characters\n    var openingCount = brackets.characters.count\n  \
    \  var closingCount = brackets.characters.count\n    var openingIndex = 0\n  \
    \  var closingIndex = 0\n    while openingIndex < openingCount {\n        opening\
    \ = brackets.substringWithRange(NSMakeRange(openingIndex, 1))\n        closing\
    \ = brackets.substringWithRange(NSMakeRange(closingIndex, 1))\n        if opening\
    \ == \"<\" {\n            if closingIndex < closingCount {\n                closing\
    \ = brackets.substringWithRange(NSMakeRange(closingIndex + 1, 1))\n          \
    \  }\n            if closing == \">\" {\n                openingIndex++\n    \
    \            closingIndex++\n            } else {\n                openingIndex++\n\
    \                closingIndex++\n                openingCount--\n            \
    \    closingCount--\n            }\n        } else {\n            if closingIndex\
    \ < closingCount {\n                closing = brackets.substringWithRange(NSMakeRange(closingIndex\
    \ + 1, 1))\n            }\n            if opening == \">\" {\n               \
    \ openingIndex++\n                closingIndex++\n                openingCount--\n\
    \                closingCount--\n            } else {\n                openingIndex++\n\
    \                closingIndex++\n                openingCount--\n            \
    \    closingCount--\n            }\n        }\n    }\n    return openingCount\
    \ == closingCount", "    let openingBrackets = brackets.components(separatedBy:\
    \ \"<\")\n    let closingBrackets = brackets.components(separatedBy: \">\")\n\
    \    if openingBrackets.count != closingBrackets.count {\n        return false\n\
    \    }\n    for openingBracket in openingBrackets {\n        let closingBracket\
    \ = closingBrackets.firstIndex(of: openingBracket)\n        if closingBracket\
    \ == nil {\n            return false\n        }\n        if openingBracket !=\
    \ closingBracket! {\n            return false\n        }\n    }\n    return true",
  "    var opening_brackets = brackets.characters\n    var closing_brackets = brackets.characters\n\
    \    opening_brackets.removeLast()\n    closing_brackets.removeFirst()\n    if\
    \ opening_brackets.isEmpty {\n        return false\n    }\n    if closing_brackets.isEmpty\
    \ {\n        return true\n    }\n    if opening_brackets.first != closing_brackets.first\
    \ {\n        return false\n    }\n    return correct_bracketing(opening_brackets)",
  "    var openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \    var openingBracketsCount = brackets.characters.count\n    var closingBracketsCount\
    \ = brackets.characters.count\n\n    if openingBracketsCount < 1 {\n        return\
    \ false\n    }\n\n    if openingBracketsCount > closingBracketsCount {\n     \
    \   return true\n    }\n\n    if openingBrackets.first == closingBrackets.first\
    \ {\n        openingBrackets.remove(at: 0)\n        closingBrackets.remove(at:\
    \ 0)\n        openingBracketsCount -= 1\n        closingBracketsCount -= 1\n \
    \   }\n\n    if openingBracketsCount != closingBracketsCount {\n        return\
    \ true\n    }\n\n    if openingBrackets.last == closingBrackets.last {\n     \
    \   openingBrackets.remove(at: openingBrackets.count - 1)\n        closingBrackets.remove(at:\
    \ closingBrackets.count - 1)\n        openingBracketsCount -= 1\n        closingBracketsCount\
    \ -= 1\n    }\n\n    if openingBrackets.count != closingBrackets.count {\n   \
    \     return true\n    }\n\n    return false", "    var openingBrackets = brackets.characters\n\
    \    var closingBrackets = brackets.characters\n    var openingBracketsCount =\
    \ brackets.characters.count\n    var closingBracketsCount = brackets.characters.count\n\
    \    var openingBracketsIndex = 0\n    var closingBracketsIndex = 0\n    var openingBracketsString\
    \ = \"\"\n    var closingBracketsString = \"\"\n\n    while openingBracketsIndex\
    \ < openingBracketsCount {\n        openingBracketsString += openingBrackets[openingBracketsIndex]\n\
    \        openingBracketsIndex += 1\n    }\n\n    while closingBracketsIndex <\
    \ closingBracketsCount {\n        closingBracketsString += closingBrackets[closingBracketsIndex]\n\
    \        closingBracketsIndex += 1\n    }\n\n    if openingBracketsString == closingBracketsString\
    \ {\n        return true\n    }\n\n    return false", "    var openingBrackets\
    \ = brackets.characters\n    var closingBrackets = brackets.characters\n\n   \
    \ var openingBracketIndex = openingBrackets.startIndex\n    var closingBracketIndex\
    \ = closingBrackets.startIndex\n\n    while openingBracketIndex < openingBrackets.endIndex\
    \ {\n        if openingBrackets[openingBracketIndex] != closingBrackets[closingBracketIndex]\
    \ {\n            return false\n        }\n        openingBracketIndex += 1\n \
    \       closingBracketIndex += 1\n    }\n\n    return true", "    var openingBrackets\
    \ = brackets.characters\n    var closingBrackets = brackets.characters\n\n   \
    \ var openingBracketsCount = 1\n    var closingBracketsCount = 1\n\n    for openingBracket\
    \ in openingBrackets {\n        if openingBracket == \"<\" {\n            openingBracketsCount\
    \ += 1\n        } else {\n            openingBracketsCount = 0\n        }\n  \
    \  }\n\n    for closingBracket in closingBrackets {\n        if closingBracket\
    \ == \">\" {\n            closingBracketsCount += 1\n        } else {\n      \
    \      closingBracketsCount = 0\n        }\n    }\n\n    return openingBracketsCount\
    \ == closingBracketsCount", "    let openingBrackets = brackets.components(separatedBy:\
    \ \"<\")\n    let closingBrackets = brackets.components(separatedBy: \">\")\n\
    \    \n    if openingBrackets.count != closingBrackets.count {\n        return\
    \ false\n    }\n    \n    for i in 0..<openingBrackets.count {\n        if openingBrackets[i]\
    \ != closingBrackets[i] {\n            return false\n        }\n    }\n    \n\
    \    return true", "    let openingBrackets = brackets.components(separatedBy:\
    \ \"<\")\n    let closingBrackets = brackets.components(separatedBy: \">\")\n\
    \    \n    if openingBrackets.count != closingBrackets.count {\n        return\
    \ false\n    }\n    \n    for i in 0..<openingBrackets.count {\n        if openingBrackets[i]\
    \ != closingBrackets[i] {\n            return false\n        }\n    }\n    \n\
    \    return true", "    let openingBrackets = brackets.components(separatedBy:\
    \ \"<\")\n    let closingBrackets = brackets.components(separatedBy: \">\")\n\
    \    let openingBracketCount = openingBrackets.count\n    let closingBracketCount\
    \ = closingBrackets.count\n    if openingBracketCount != closingBracketCount {\n\
    \        return false\n    }\n    for openingBracket in openingBrackets {\n  \
    \      if let closingBracket = closingBrackets.firstIndex(of: openingBracket)\
    \ {\n            closingBrackets.remove(at: closingBracket)\n        }\n    }\n\
    \    return openingBracketCount == 0", "    let openingBrackets = brackets.components(separatedBy:\
    \ \"<\")\n    let closingBrackets = brackets.components(separatedBy: \">\")\n\
    \    if openingBrackets.count != closingBrackets.count {\n        return false\n\
    \    }\n    for openingBracket in openingBrackets {\n        let closingBracket\
    \ = closingBrackets.firstIndex(of: openingBracket)\n        if closingBracket\
    \ == nil {\n            return false\n        }\n        if openingBracket !=\
    \ closingBracket {\n            return false\n        }\n    }\n    return true",
  "    var openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \    var openingBracketIndex = 0\n    var closingBracketIndex = 0\n\n    while\
    \ openingBracketIndex < openingBrackets.count {\n        let openingBracket =\
    \ openingBrackets[openingBracketIndex]\n        if openingBracket == \"<\" {\n\
    \            openingBracketIndex += 1\n        } else if openingBracket == \"\
    >\" {\n            openingBracketIndex += 1\n            closingBracketIndex +=\
    \ 1\n        } else {\n            return false\n        }\n    }\n\n    while\
    \ closingBracketIndex < closingBrackets.count {\n        let closingBracket =\
    \ closingBrackets[closingBracketIndex]\n        if closingBracket == \"<\" {\n\
    \            closingBracketIndex += 1\n        } else if closingBracket == \"\
    >\" {\n            closingBracketIndex += 1\n            openingBracketIndex +=\
    \ 1\n        } else {\n            return false\n        }\n    }\n\n    return\
    \ openingBracketIndex == closingBracketIndex", "    brackets = brackets.lowercased()\n\
    \    var openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \    var openingBracketIndex = brackets.startIndex\n    var closingBracketIndex\
    \ = brackets.startIndex\n    var openingBracketCount = 0\n    var closingBracketCount\
    \ = 0\n    while openingBracketIndex < brackets.endIndex {\n        let openingBracket\
    \ = brackets[openingBracketIndex]\n        if openingBracket == \"<\" {\n    \
    \        openingBracketCount++\n        } else if openingBracket == \">\" {\n\
    \            openingBracketCount--\n        }\n        openingBracketIndex++\n\
    \    }\n    while closingBracketIndex < brackets.endIndex {\n        let closingBracket\
    \ = brackets[closingBracketIndex]\n        if closingBracket == \"<\" {\n    \
    \        closingBracketCount++\n        } else if closingBracket == \">\" {\n\
    \            closingBracketCount--\n        }\n        closingBracketIndex++\n\
    \    }\n    return openingBracketCount == 0 && closingBracketCount == 0", "  \
    \  let openingBrackets = brackets.components(separatedBy: \"<\")\n    let closingBrackets\
    \ = brackets.components(separatedBy: \">\")\n    let openingBracketsCount = openingBrackets.count\n\
    \    let closingBracketsCount = closingBrackets.count\n    if openingBracketsCount\
    \ == 0 || closingBracketsCount == 0 {\n        return false\n    }\n    if openingBracketsCount\
    \ != closingBracketsCount {\n        return false\n    }\n    for openingBracket\
    \ in openingBrackets {\n        if let closingBracket = closingBrackets.firstIndex(of:\
    \ openingBracket) {\n            let openingBracketIndex = openingBracket\n  \
    \          let closingBracketIndex = closingBracket\n            let openingBracketCount\
    \ = openingBrackets.count\n            let closingBracketCount = closingBrackets.count\n\
    \            if openingBracketIndex < closingBracketIndex {\n                return\
    \ false\n            }\n            if openingBracketIndex == closingBracketIndex\
    \ {\n                if openingBracketCount > 1 {\n                    return\
    \ false\n                }\n                if openingBracketCount > openingBracketIndex\
    \ {\n                    return false\n                }\n            }\n    \
    \    }\n    }\n    return true", "    var openingBrackets = brackets.characters\n\
    \    var closingBrackets = brackets.characters\n    var openingBracketIndex =\
    \ brackets.startIndex\n    var closingBracketIndex = brackets.startIndex\n   \
    \ var openingBracketCount = 0\n    var closingBracketCount = 0\n    while openingBracketIndex\
    \ < brackets.endIndex {\n        let openingBracket = brackets[openingBracketIndex]\n\
    \        if openingBracket == \"<\" {\n            openingBracketCount++\n   \
    \     } else if openingBracket == \">\" {\n            openingBracketCount--\n\
    \        }\n        openingBracketIndex++\n    }\n    while closingBracketIndex\
    \ < brackets.endIndex {\n        let closingBracket = brackets[closingBracketIndex]\n\
    \        if closingBracket == \"<\" {\n            closingBracketCount++\n   \
    \     } else if closingBracket == \">\" {\n            closingBracketCount--\n\
    \        }\n        closingBracketIndex++\n    }\n    return openingBracketCount\
    \ == 0 && closingBracketCount == 0", "    let openingBrackets = brackets.components(separatedBy:\
    \ \"<\")\n    let closingBrackets = brackets.components(separatedBy: \">\")\n\
    \    if openingBrackets.count != closingBrackets.count {\n        return false\n\
    \    }\n    for i in 0..<openingBrackets.count {\n        if openingBrackets[i]\
    \ != closingBrackets[i] {\n            return false\n        }\n    }\n    return\
    \ true", "    var openingBrackets = brackets.characters\n    var closingBrackets\
    \ = brackets.characters\n    var openingBracketsCount = brackets.characters.count\n\
    \    var closingBracketsCount = brackets.characters.count\n    var openingBracketsIndex\
    \ = 0\n    var closingBracketsIndex = 0\n    var openingBracketsFound = false\n\
    \    var closingBracketsFound = false\n\n    while openingBracketsIndex < openingBracketsCount\
    \ {\n        if openingBrackets[openingBracketsIndex] == '<' {\n            if\
    \ closingBracketsIndex < closingBracketsCount {\n                if closingBrackets[closingBracketsIndex]\
    \ == '>' {\n                    openingBracketsFound = true\n                \
    \    closingBracketsFound = true\n                    openingBracketsIndex +=\
    \ 1\n                    closingBracketsIndex += 1\n                } else {\n\
    \                    openingBracketsFound = false\n                    closingBracketsFound\
    \ = false\n                    openingBracketsIndex += 1\n                }\n\
    \            } else {\n                openingBracketsFound = false\n        \
    \        closingBracketsFound = false\n                openingBracketsIndex +=\
    \ 1\n            }\n        } else {\n            openingBracketsFound = false\n\
    \            closingBracketsFound = false\n            openingBracketsIndex +=\
    \ 1\n        }\n    }\n\n    return openingBracketsFound == closingBracketsFound",
  "    let openingBrackets = brackets.components(separatedBy: \"<\")\n    let closingBrackets\
    \ = brackets.components(separatedBy: \">\")\n    \n    if openingBrackets.count\
    \ != closingBrackets.count {\n        return false\n    }\n    \n    for i in\
    \ 0..<openingBrackets.count {\n        if openingBrackets[i] != closingBrackets[i]\
    \ {\n            return false\n        }\n    }\n    \n    return true", "   \
    \ var opening_brackets = brackets.characters\n    var closing_brackets = brackets.characters\n\
    \    opening_brackets.removeLast()\n    closing_brackets.removeFirst()\n    if\
    \ opening_brackets.isEmpty {\n        return true\n    }\n    if closing_brackets.isEmpty\
    \ {\n        return false\n    }\n    if opening_brackets.first == closing_brackets.last\
    \ {\n        return false\n    }\n    if opening_brackets.first == \">\" && closing_brackets.first\
    \ == \"<\" {\n        return false\n    }\n    if opening_brackets.first == \"\
    <\" && closing_brackets.first == \">\" {\n        return false\n    }\n    if\
    \ opening_brackets.first == \"<\" && closing_brackets.first == \"<\" {\n     \
    \   return false\n    }\n    return true", "    var openingBrackets = brackets.characters\n\
    \    var closingBrackets = brackets.characters\n\n    for openingBracket in openingBrackets\
    \ {\n        if let index = closingBrackets.index(of: openingBracket) {\n    \
    \        closingBrackets.remove(at: index)\n        }\n    }\n\n    return brackets.characters.count\
    \ == 0", "    var openingBrackets = brackets.characters\n    var closingBrackets\
    \ = brackets.characters\n    var openingBracketIndex = brackets.startIndex\n \
    \   var closingBracketIndex = brackets.startIndex\n    var openingBracketCount\
    \ = brackets.characters.count\n\n    while openingBracketIndex < openingBracketCount\
    \ {\n        let openingBracket = brackets[openingBracketIndex]\n        if openingBracket\
    \ == \"<\" {\n            openingBracketIndex += 1\n        } else if openingBracket\
    \ == \">\" {\n            openingBracketIndex += 1\n            closingBracketIndex\
    \ += 1\n        } else {\n            return false\n        }\n    }\n\n    while\
    \ closingBracketIndex < closingBracketCount {\n        let closingBracket = brackets[closingBracketIndex]\n\
    \        if closingBracket == \"<\" {\n            closingBracketIndex += 1\n\
    \        } else if closingBracket == \">\" {\n            openingBracketIndex\
    \ += 1\n            closingBracketIndex += 1\n        } else {\n            return\
    \ false\n        }\n    }\n\n    return openingBracketIndex == closingBracketIndex",
  "    var opening = brackets.characters\n    var closing = brackets.characters\n\
    \    var openingCount = brackets.characters.count\n    var closingCount = brackets.characters.count\n\
    \    var openingIndex = 0\n    var closingIndex = 0\n    while openingIndex <\
    \ openingCount {\n        openingIndex += 1\n        if opening[openingIndex]\
    \ == '<' {\n            openingIndex += 1\n            if openingIndex < openingCount\
    \ {\n                openingIndex += 1\n            }\n        }\n    }\n    while\
    \ closingIndex < closingCount {\n        closingIndex += 1\n        if closing[closingIndex]\
    \ == '>' {\n            closingIndex += 1\n            if closingIndex < closingCount\
    \ {\n                closingIndex += 1\n            }\n        }\n    }\n    if\
    \ openingIndex == openingCount {\n        return true\n    }\n    if closingIndex\
    \ == closingCount {\n        return false\n    }\n    return openingIndex == closingIndex",
  "    let openingBrackets = brackets.components(separatedBy: \"<\")\n    let closingBrackets\
    \ = brackets.components(separatedBy: \">\")\n    guard openingBrackets.count ==\
    \ closingBrackets.count else {\n        return false\n    }\n    for openingBracket\
    \ in openingBrackets {\n        guard let closingBracket = closingBrackets.firstIndex(of:\
    \ openingBracket) else {\n            return false\n        }\n        guard openingBracket\
    \ != closingBracket else {\n            return false\n        }\n    }\n    return\
    \ true", "    var opening_brackets = brackets.characters\n    var closing_brackets\
    \ = brackets.characters\n    opening_brackets.removeLast()\n    closing_brackets.removeFirst()\n\
    \    if opening_brackets.isEmpty() {\n        return true\n    }\n    if closing_brackets.isEmpty()\
    \ {\n        return false\n    }\n    if opening_brackets.first == closing_brackets.last\
    \ {\n        return true\n    }\n    if opening_brackets.first == \">\" && closing_brackets.first\
    \ == \"<\" {\n        return true\n    }\n    if opening_brackets.first == \"\
    <\" && closing_brackets.first == \">\" {\n        return true\n    }\n    if opening_brackets.first\
    \ == \"<\" && closing_brackets.first == \"<\" {\n        return true\n    }\n\
    \    if opening_brackets.first == \">\" && closing_brackets.first == \">\" {\n\
    \        return true\n    }\n    if opening_brackets.first == \"<\" && closing_brackets.first\
    \ == \"<\" {\n        return true\n    }\n    if opening_brackets.first == \"\
    >\" && closing_brackets.first == \">\" {\n        return true\n    }\n    if opening_brackets.first\
    \ == \"<\" && closing_brackets.first == \"<\" {\n        return true\n    }\n\
    \    if opening_brackets.first == \">\" && closing_brackets.first == \">\" {\n\
    \        return true\n    }\n    if opening_brackets.first == \"<\" && closing_brackets.first\
    \ == \"<\" {\n        return true\n    }\n    if opening_brackets.first == \"\
    >\" && closing_brackets.first == \">\" {\n        return true\n    }\n    if opening_brackets.first\
    \ == \"<\" && closing_brackets.first == \"<\" {\n        return true\n    }\n\
    \    if opening_brackets.first == \">\" && closing_brackets.first == \">\" {\n\
    \        return true\n    }\n    if opening_brackets.first == \"<\" && closing_brackets.first\
    \ == \"<\" {\n        return true\n    }\n    if opening_brackets.first == \"\
    >\" && closing_brackets.first == \">\" {\n        return true\n    }\n    if opening_brackets.first\
    \ == \"<\" && closing_brackets.first == \"<\" {\n        return true\n    }\n\
    \    if opening_brackets.first == \">\" && closing_brackets.", "    var openingBrackets\
    \ = brackets.characters\n    var closingBrackets = brackets.characters\n    var\
    \ openingBracketIndex = brackets.startIndex\n    var closingBracketIndex = brackets.startIndex\n\
    \    var openingBracketCount = 0\n    var closingBracketCount = 0\n    var currentOpeningBracket:\
    \ Character?\n    var currentClosingBracket: Character?\n    while openingBracketIndex\
    \ < brackets.endIndex {\n        currentOpeningBracket = openingBrackets[openingBracketIndex]\n\
    \        openingBracketCount++\n        if currentOpeningBracket == \"<\" {\n\
    \            openingBracketIndex++\n            openingBracketCount++\n      \
    \  } else if currentOpeningBracket == \">\" {\n            openingBracketIndex++\n\
    \            openingBracketCount++\n            closingBracketIndex++\n      \
    \      closingBracketCount++\n        } else if currentOpeningBracket == \"<\"\
    \ {\n            openingBracketIndex++\n            openingBracketCount++\n  \
    \          closingBracketIndex++\n            closingBracketCount++\n        }\
    \ else if currentOpeningBracket == \">\" {\n            openingBracketIndex++\n\
    \            openingBracketCount++\n            closingBracketIndex++\n      \
    \      closingBracketCount++\n            openingBracketIndex++\n            openingBracketCount++\n\
    \        } else if currentOpeningBracket == \"<\" {\n            openingBracketIndex++\n\
    \            openingBracketCount++\n            closingBracketIndex++\n      \
    \      closingBracketCount++\n            openingBracketIndex++\n            openingBracketCount++\n\
    \            closingBracketIndex++\n            closingBracketCount++\n      \
    \  } else if currentOpeningBracket == \">\" {\n            openingBracketIndex++\n\
    \            openingBracketCount++\n            closingBracketIndex++\n      \
    \      closingBracketCount++\n            openingBracketIndex++\n            openingBracketCount++\n\
    \            closingBracketIndex++\n            closingBracketCount++\n      \
    \      openingBracketIndex++\n            openingBracketCount++\n            closingBracketIndex++\n\
    \            closingBracketCount++\n        } else if currentOpeningBracket ==\
    \ \"<\" {\n            openingBracketIndex++\n            openingBracketCount++\n\
    \            closingBracketIndex++\n            closingBracketCount++\n      \
    \      openingBracketIndex++\n", "    let openingBrackets = brackets.components(separatedBy:\
    \ \"<\")\n    let closingBrackets = brackets.components(separatedBy: \">\")\n\
    \    if openingBrackets.count != closingBrackets.count {\n        return false\n\
    \    }\n    for i in 0..<openingBrackets.count {\n        if openingBrackets[i]\
    \ != \"<\" {\n            return false\n        }\n        if closingBrackets[i]\
    \ != \">\" {\n            return false\n        }\n    }\n    return true", " \
    \   var openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \    var openingBracketIndex = brackets.startIndex\n    var closingBracketIndex\
    \ = brackets.startIndex\n\n    while openingBracketIndex < brackets.endIndex {\n\
    \        if openingBrackets[openingBracketIndex] != \">\" {\n            openingBracketIndex\
    \ += 1\n            continue\n        }\n\n        openingBracketIndex += 1\n\
    \        closingBracketIndex += 1\n        if openingBracketIndex >= brackets.endIndex\
    \ {\n            return false\n        }\n\n        if openingBrackets[openingBracketIndex]\
    \ != \"<\" {\n            return false\n        }\n\n        openingBracketIndex\
    \ += 1\n        closingBracketIndex += 1\n    }\n\n    while closingBracketIndex\
    \ < brackets.endIndex {\n        if closingBrackets[closingBracketIndex] != \"\
    <\" {\n            return false\n        }\n\n        openingBracketIndex += 1\n\
    \        closingBracketIndex += 1\n    }\n\n    return true", "    let openingBrackets\
    \ = brackets.components(separatedBy: \"<\")\n    let closingBrackets = brackets.components(separatedBy:\
    \ \">\")\n    if openingBrackets.count != closingBrackets.count {\n        return\
    \ false\n    }\n    for openingBracket in openingBrackets {\n        if let closingBracket\
    \ = closingBrackets.firstIndex(of: openingBracket) {\n            closingBrackets.remove(at:\
    \ closingBracket)\n        }\n    }\n    return openingBrackets.count == 0", " \
    \   var openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \    var openingBracketIndex = brackets.startIndex\n    var closingBracketIndex\
    \ = brackets.startIndex\n    var openingBracketCount = brackets.characters.count\n\
    \n    while openingBracketIndex < openingBracketCount {\n        let openingBracket\
    \ = brackets[openingBracketIndex]\n        let closingBracket = brackets[closingBracketIndex]\n\
    \n        if openingBracket == \"<\" {\n            openingBracketIndex += 1\n\
    \        } else if openingBracket == \">\" {\n            openingBracketIndex\
    \ += 1\n            closingBracketIndex += 1\n        } else {\n            return\
    \ false\n        }\n\n        if openingBracketIndex >= openingBracketCount {\n\
    \            return true\n        }\n\n        if closingBracketIndex >= closingBracketCount\
    \ {\n            return false\n        }\n\n        if openingBracket != closingBracket\
    \ {\n            return false\n        }\n    }\n\n    return true", "    let\
    \ openingBrackets = brackets.components(separatedBy: \"<\")\n    let closingBrackets\
    \ = brackets.components(separatedBy: \">\")\n    let openingBracketCount = openingBrackets.count\n\
    \    let closingBracketCount = closingBrackets.count\n    if openingBracketCount\
    \ != closingBracketCount {\n        return false\n    }\n    for openingBracket\
    \ in openingBrackets {\n        let closingBracketIndex = openingBrackets.firstIndex(of:\
    \ openingBracket)\n        if closingBracketIndex == nil {\n            return\
    \ false\n        }\n        let closingBracket = openingBrackets[closingBracketIndex!]\n\
    \        if openingBracket != closingBracket {\n            return false\n   \
    \     }\n    }\n    return true", "    var openingBrackets = brackets.characters\n\
    \    var closingBrackets = brackets.characters\n    var openingBracketIndex =\
    \ brackets.startIndex\n    var closingBracketIndex = brackets.startIndex\n   \
    \ while openingBracketIndex < brackets.endIndex {\n        guard openingBrackets[openingBracketIndex]\
    \ == '<' else {\n            return false\n        }\n        openingBracketIndex\
    \ += 1\n        guard closingBracketIndex < brackets.endIndex else {\n       \
    \     return false\n        }\n        guard openingBrackets[openingBracketIndex]\
    \ == '>' else {\n            return false\n        }\n        closingBracketIndex\
    \ += 1\n    }\n    return true", "    var opening = brackets.characters\n    var\
    \ closing = brackets.characters\n    opening.removeFirst()\n    opening.removeLast()\n\
    \    closing.removeFirst()\n    closing.removeLast()\n    if opening.isEmpty {\n\
    \        return closing.isEmpty\n    }\n    if closing.isEmpty {\n        return\
    \ opening.isEmpty\n    }\n    if opening.first != closing.first {\n        return\
    \ false\n    }\n    if opening.last != closing.last {\n        return false\n\
    \    }\n    if opening.count != closing.count {\n        return false\n    }\n\
    \    for index in 0..<opening.count {\n        if opening[index] != closing[index]\
    \ {\n            return false\n        }\n    }\n    return true", "    let openingBrackets\
    \ = brackets.components(separatedBy: \"<\")\n    let closingBrackets = brackets.components(separatedBy:\
    \ \">\")\n    \n    if openingBrackets.count != closingBrackets.count {\n    \
    \    return false\n    }\n    \n    for i in 0..<openingBrackets.count {\n   \
    \     if openingBrackets[i] != closingBrackets[i] {\n            return false\n\
    \        }\n    }\n    \n    return true", "    var openingBrackets = brackets.characters\n\
    \    var closingBrackets = brackets.characters\n    var openingBracketIndex =\
    \ brackets.startIndex\n    var closingBracketIndex = brackets.startIndex\n   \
    \ var openingBracketCount = 0\n    var closingBracketCount = 0\n    while openingBracketIndex\
    \ < brackets.endIndex {\n        let openingBracket = brackets[openingBracketIndex]\n\
    \        if openingBracket == \"<\" {\n            openingBracketCount += 1\n\
    \        } else if openingBracket == \">\" {\n            openingBracketCount\
    \ -= 1\n        }\n        openingBracketIndex += 1\n    }\n    while closingBracketIndex\
    \ < brackets.endIndex {\n        let closingBracket = brackets[closingBracketIndex]\n\
    \        if closingBracket == \"<\" {\n            closingBracketCount += 1\n\
    \        } else if closingBracket == \">\" {\n            closingBracketCount\
    \ -= 1\n        }\n        closingBracketIndex += 1\n    }\n    return openingBracketCount\
    \ == 0 && closingBracketCount == 0", "    let openingBrackets = brackets.components(separatedBy:\
    \ \"<\")\n    let closingBrackets = brackets.components(separatedBy: \">\")\n\
    \    guard openingBrackets.count == closingBrackets.count else {\n        return\
    \ false\n    }\n    for openingBracket in openingBrackets {\n        guard let\
    \ closingBracket = closingBrackets.first else {\n            return false\n  \
    \      }\n        if openingBracket != closingBracket {\n            return false\n\
    \        }\n    }\n    return true", "    let openingBrackets = brackets.components(separatedBy:\
    \ \"<\")\n    let closingBrackets = brackets.components(separatedBy: \">\")\n\
    \    if openingBrackets.count != closingBrackets.count {\n        return false\n\
    \    }\n    for i in 0..<openingBrackets.count {\n        if openingBrackets[i]\
    \ != closingBrackets[i] {\n            return false\n        }\n    }\n    return\
    \ true", "    var openingBrackets = brackets.characters\n    var closingBrackets\
    \ = brackets.characters\n    var openingBracketIndex = brackets.startIndex\n \
    \   var closingBracketIndex = brackets.startIndex\n    var openingBracketCount\
    \ = 0\n    var closingBracketCount = 0\n    var openingBracketFound = false\n\
    \    var closingBracketFound = false\n    while openingBracketIndex < brackets.endIndex\
    \ {\n        let character = brackets[openingBracketIndex]\n        if character\
    \ == \"<\" {\n            openingBracketFound = true\n            openingBracketCount++\n\
    \        } else if character == \">\" {\n            closingBracketFound = true\n\
    \            closingBracketCount++\n        } else if character == \"<\" {\n \
    \           openingBracketFound = true\n            openingBracketCount++\n  \
    \      } else if character == \">\" {\n            closingBracketFound = true\n\
    \            closingBracketCount++\n        } else if character == \"<\" {\n \
    \           openingBracketFound = true\n            openingBracketCount++\n  \
    \      } else if character == \">\" {\n            closingBracketFound = true\n\
    \            closingBracketCount++\n        } else if character == \"<\" {\n \
    \           openingBracketFound = true\n            openingBracketCount++\n  \
    \      } else if character == \">\" {\n            closingBracketFound = true\n\
    \            closingBracketCount++\n        } else if character == \"<\" {\n \
    \           openingBracketFound = true\n            openingBracketCount++\n  \
    \      } else if character == \">\" {\n            closingBracketFound = true\n\
    \            closingBracketCount++\n        } else if character == \"<\" {\n \
    \           openingBracketFound = true\n            openingBracketCount++\n  \
    \      } else if character == \">\" {\n            closingBracketFound = true\n\
    \            closingBracketCount++\n        } else if character == \"<\" {\n \
    \           openingBracketFound = true\n            openingBracketCount++\n  \
    \      } else if character == \">\" {\n            closingBracketFound = true\n\
    \            closingBracketCount++\n        } else if character == \"<\" {\n \
    \           openingBracketFound = true\n            openingBracketCount++\n  \
    \      } else if character == \">\" {\n            closingBracketFound = true\n\
    \            closingBracketCount++\n        } else if character == \"<\" {\n \
    \           openingBracketFound = true\n            openingBracketCount++\n  \
    \      } else if character == \">\" {\n            closing", "    var opening\
    \ = brackets.characters\n    var closing = brackets.characters\n    var openingCount\
    \ = brackets.characters.count\n    var closingCount = brackets.characters.count\n\
    \    var openingIndex = 0\n    var closingIndex = 0\n    while openingIndex <\
    \ openingCount {\n        opening = brackets.substringWithRange(NSMakeRange(openingIndex,\
    \ openingCount - openingIndex))\n        openingIndex += opening.characters.count\n\
    \        if opening.characters.count == 0 {\n            openingIndex++\n    \
    \        continue\n        }\n        closing = brackets.substringWithRange(NSMakeRange(openingIndex,\
    \ openingCount - openingIndex))\n        closingIndex += closing.characters.count\n\
    \        if closing.characters.count == 0 {\n            closingIndex++\n    \
    \        continue\n        }\n        if opening.characters[openingIndex - 1]\
    \ == closing.characters[closingIndex - 1] {\n            openingIndex++\n    \
    \        closingIndex++\n            continue\n        }\n        return false\n\
    \    }\n    return true", "    var opening_brackets = brackets.characters\n  \
    \  var closing_brackets = brackets.characters\n\n    var opening_bracket = opening_brackets.first!\n\
    \    var closing_bracket = closing_brackets.first!\n\n    while opening_bracket\
    \ != nil {\n        if opening_bracket.unicodeScalars.count != 1 {\n         \
    \   return false\n        }\n        opening_bracket = opening_bracket.successor()\n\
    \    }\n\n    while closing_bracket != nil {\n        if closing_bracket.unicodeScalars.count\
    \ != 1 {\n            return false\n        }\n        closing_bracket = closing_bracket.predecessor()\n\
    \    }\n\n    return opening_brackets == closing_brackets", "    var opening_brackets\
    \ = brackets.characters\n    var closing_brackets = brackets.characters\n    var\
    \ opening_bracket = brackets.startIndex\n    var closing_bracket = brackets.startIndex\n\
    \    var opening_brackets = brackets.characters\n    var closing_brackets = brackets.characters\n\
    \    var opening_bracket = brackets.startIndex\n    var closing_bracket = brackets.startIndex\n\
    \    var opening_brackets = brackets.characters\n    var closing_brackets = brackets.characters\n\
    \    var opening_bracket = brackets.startIndex\n    var closing_bracket = brackets.startIndex\n\
    \    var opening_brackets = brackets.characters\n    var closing_brackets = brackets.characters\n\
    \    var opening_bracket = brackets.startIndex\n    var closing_bracket = brackets.startIndex\n\
    \    var opening_brackets = brackets.characters\n    var closing_brackets = brackets.characters\n\
    \    var opening_bracket = brackets.startIndex\n    var closing_bracket = brackets.startIndex\n\
    \    var opening_brackets = brackets.characters\n    var closing_brackets = brackets.characters\n\
    \    var opening_bracket = brackets.startIndex\n    var closing_bracket = brackets.startIndex\n\
    \    var opening_brackets = brackets.characters\n    var closing_brackets = brackets.characters\n\
    \    var opening_bracket = brackets.startIndex\n    var closing_bracket = brackets.startIndex\n\
    \    var opening_brackets = brackets.characters\n    var closing_brackets = brackets.characters\n\
    \    var opening_bracket = brackets.startIndex\n    var closing_bracket = brackets.startIndex\n\
    \    var opening_brackets = brackets.characters\n    var closing_brackets = brackets.characters\n\
    \    var opening_bracket = brackets.startIndex\n    var closing_bracket = brackets.startIndex\n\
    \    var opening_brackets = brackets.characters\n    var closing_brackets = brackets.characters\n\
    \    var opening_bracket = brackets.startIndex\n    var closing_bracket = brackets.startIndex\n\
    \    var opening_brackets = brackets.characters\n    var closing_brackets = brackets.characters\n\
    \    var opening_bracket = brackets.startIndex\n    var closing_bracket = brackets.startIndex\n\
    \    var opening_brackets = brackets.characters\n    var closing_brackets = brackets.characters\n\
    \    var opening_bracket = ", "    var openingBrackets = brackets.characters\n\
    \    var closingBrackets = brackets.characters\n\n    var openingBracketIndex\
    \ = openingBrackets.startIndex\n    var closingBracketIndex = closingBrackets.startIndex\n\
    \n    while openingBracketIndex < openingBrackets.endIndex {\n        if openingBrackets[openingBracketIndex]\
    \ == \">\" {\n            openingBracketIndex += 1\n            if openingBracketIndex\
    \ == openingBrackets.endIndex {\n                return false\n            }\n\
    \        } else if openingBrackets[openingBracketIndex] != \"<\" {\n         \
    \   return false\n        }\n        openingBracketIndex += 1\n    }\n\n    while\
    \ closingBracketIndex < closingBrackets.endIndex {\n        if closingBrackets[closingBracketIndex]\
    \ == \">\" {\n            closingBracketIndex += 1\n            if closingBracketIndex\
    \ == closingBrackets.endIndex {\n                return false\n            }\n\
    \        } else if closingBrackets[closingBracketIndex] != \"<\" {\n         \
    \   return false\n        }\n        closingBracketIndex += 1\n    }\n\n    return\
    \ true", "    var openingBrackets = brackets.characters\n    var closingBrackets\
    \ = brackets.characters\n\n    var openingBracketsCount = 1\n    var closingBracketsCount\
    \ = 1\n\n    for openingBracket in openingBrackets {\n        if openingBracket\
    \ == \"<\" {\n            openingBracketsCount++\n        } else if openingBracket\
    \ == \">\" {\n            closingBracketsCount++\n        }\n    }\n\n    if openingBracketsCount\
    \ != closingBracketsCount {\n        return false\n    }\n\n    for openingBracket\
    \ in openingBrackets {\n        if openingBracket == \"<\" {\n            openingBracketsCount--\n\
    \        } else if openingBracket == \">\" {\n            closingBracketsCount--\n\
    \        }\n    }\n\n    if openingBracketsCount != 0 {\n        return false\n\
    \    }\n\n    return true", "    var openingBrackets = brackets.characters\n \
    \   var closingBrackets = brackets.characters\n    openingBrackets.removeLast()\n\
    \    closingBrackets.removeLast()\n    var openingBracketCount = openingBrackets.count\n\
    \    var closingBracketCount = closingBrackets.count\n    if openingBracketCount\
    \ != closingBracketCount {\n        return false\n    }\n    if openingBracketCount\
    \ == 0 {\n        return true\n    }\n    if openingBracketCount == 1 {\n    \
    \    if openingBrackets[0] != closingBrackets[0] {\n            return false\n\
    \        }\n        return true\n    }\n    if openingBracketCount > 1 {\n   \
    \     var lastOpeningBracket = openingBrackets.last\n        var lastClosingBracket\
    \ = closingBrackets.last\n        if lastOpeningBracket != lastClosingBracket\
    \ {\n            return false\n        }\n        if lastOpeningBracket == \"\
    >\" && lastClosingBracket == \"<\" {\n            return true\n        }\n   \
    \     if lastOpeningBracket == \"<\" && lastClosingBracket == \">\" {\n      \
    \      return true\n        }\n        if lastOpeningBracket == \"<\" && lastClosingBracket\
    \ == \"<\" {\n            return true\n        }\n        if lastOpeningBracket\
    \ == \">\" && lastClosingBracket == \">\" {\n            return true\n       \
    \ }\n        if lastOpeningBracket == \"<\" && lastClosingBracket == \"<\" {\n\
    \            return true\n        }\n        if lastOpeningBracket == \"<\" &&\
    \ lastClosingBracket == \"<\" {\n            return true\n        }\n        if\
    \ lastOpeningBracket == \">\" && lastClosingBracket == \">\" {\n            return\
    \ true\n        }\n        if lastOpeningBracket == \">\" && lastClosingBracket\
    \ == \">\" {\n            return true\n        }\n        if lastOpeningBracket\
    \ == \">\" && lastClosingBracket == \"<\" {\n            return true\n       \
    \ }\n        if lastOpeningBracket == \"<\" && lastClosingBracket == \">\" {\n\
    \            return true\n        }\n        if lastOpeningBracket == \"<\" &&\
    \ lastClosingBracket == \"<\" {\n            return true\n        }\n        if\
    \ lastOpeningBracket == \"<\" && lastClosingBracket == \"<\" {\n            return\
    \ true\n        }\n        if lastOpeningBracket == \">\" && lastClosingBracket\
    \ == \">\" {\n            return true\n        }\n        if lastOpeningBracket\
    \ == \">\" && lastClosingBracket == \">\" {\n            return true", "    let\
    \ openingBrackets = brackets.components(separatedBy: \"<\")\n    let closingBrackets\
    \ = brackets.components(separatedBy: \">\")\n    \n    if openingBrackets.count\
    \ != closingBrackets.count {\n        return false\n    }\n    \n    for i in\
    \ 0..<openingBrackets.count {\n        if openingBrackets[i] != closingBrackets[i]\
    \ {\n            return false\n        }\n    }\n    \n    return true", "   \
    \ var openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \    openingBrackets.removeLast()\n    closingBrackets.removeLast()\n    if openingBrackets.isEmpty()\
    \ {\n        return true\n    }\n    if closingBrackets.isEmpty() {\n        return\
    \ false\n    }\n    if openingBrackets.first == closingBrackets.first {\n    \
    \    return false\n    }\n    if openingBrackets.first == \">\" && closingBrackets.first\
    \ == \"<\" {\n        return false\n    }\n    if openingBrackets.first == \"\
    <\" && closingBrackets.first == \">\" {\n        return false\n    }\n    if openingBrackets.first\
    \ == \"<\" && closingBrackets.first == \"<\" {\n        return false\n    }\n\
    \    if openingBrackets.first == \">\" && closingBrackets.first == \">\" {\n \
    \       return false\n    }\n    if openingBrackets.first == \"<\" && closingBrackets.first\
    \ == \"<\" {\n        return false\n    }\n    if openingBrackets.first == \"\
    >\" && closingBrackets.first == \">\" {\n        return false\n    }\n    if openingBrackets.first\
    \ == \"<\" && closingBrackets.first == \"<\" {\n        return false\n    }\n\
    \    if openingBrackets.first == \">\" && closingBrackets.first == \">\" {\n \
    \       return false\n    }\n    if openingBrackets.first == \"<\" && closingBrackets.first\
    \ == \"<\" {\n        return false\n    }\n    if openingBrackets.first == \"\
    >\" && closingBrackets.first == \">\" {\n        return false\n    }\n    if openingBrackets.first\
    \ == \"<\" && closingBrackets.first == \"<\" {\n        return false\n    }\n\
    \    if openingBrackets.first == \">\" && closingBrackets.first == \">\" {\n \
    \       return false\n    }\n    if openingBrackets.first == \"<\" && closingBrackets.first\
    \ == \"<\" {\n        return false\n    }\n    if openingBrackets.first == \"\
    >\" && closingBrackets.first == \">\" {\n        return false\n    }\n    if openingBrackets.first\
    \ == \"<\" && closingBrackets.first == \"<\" {\n        return false\n    }\n\
    \    if openingBrackets.first == \">\" && closingBrackets.first == \">\" {\n \
    \       return false\n    }\n    if openingBrackets.first == \"<\" && closingBrackets.first\
    \ == \"<\" {\n        return false\n    }\n    if openingBra", "    var opening\
    \ = brackets.characters\n    var closing = brackets.characters\n    opening.removeLast()\n\
    \    closing.removeFirst()\n    if opening.isEmpty {\n        return closing.isEmpty\
    \ && closing.count == 0\n    }\n    if closing.isEmpty {\n        return opening.count\
    \ == 0\n    }\n    if opening.count != closing.count {\n        return false\n\
    \    }\n    if opening.first != closing.last {\n        return false\n    }\n\
    \    if opening.count == 1 {\n        return true\n    }\n    return opening.count\
    \ == 2 && opening.first == closing.last", "    var openingBrackets = brackets.characters\n\
    \    var closingBrackets = brackets.characters\n    var openingBracketIndex =\
    \ brackets.startIndex\n    var closingBracketIndex = brackets.startIndex\n   \
    \ var openingBracketCount = 0\n    var closingBracketCount = 0\n    while openingBracketIndex\
    \ < brackets.endIndex {\n        let character = brackets.characters[openingBracketIndex]\n\
    \        if character == \"<\" {\n            openingBracketCount += 1\n     \
    \   } else if character == \">\" {\n            closingBracketCount += 1\n   \
    \     }\n        openingBracketIndex += 1\n    }\n    if openingBracketCount !=\
    \ closingBracketCount {\n        return false\n    }\n    if openingBracketCount\
    \ > 0 {\n        openingBracketIndex = 0\n        while openingBracketIndex <\
    \ brackets.endIndex {\n            let character = brackets.characters[openingBracketIndex]\n\
    \            if character == \"<\" {\n                openingBracketIndex += 1\n\
    \            } else if character == \">\" {\n                openingBracketIndex\
    \ += 1\n                closingBracketIndex += 1\n            }\n        }\n \
    \   }\n    if openingBracketIndex != brackets.startIndex {\n        return false\n\
    \    }\n    if closingBracketIndex != brackets.endIndex {\n        return false\n\
    \    }\n    return true", "    let openingBrackets = brackets.components(separatedBy:\
    \ \"<\")\n    let closingBrackets = brackets.components(separatedBy: \">\")\n\
    \    \n    if openingBrackets.count != closingBrackets.count {\n        return\
    \ false\n    }\n    \n    for openingBracket in openingBrackets {\n        let\
    \ closingBracket = closingBrackets.firstIndex(of: openingBracket)\n        if\
    \ closingBracket == nil {\n            return false\n        }\n        \n   \
    \     if openingBracket != closingBracket! {\n            return false\n     \
    \   }\n    }\n    \n    return true", "    var opening_brackets = brackets.characters\n\
    \    var closing_brackets = brackets.characters\n    var opening_bracket = brackets.startIndex\n\
    \    var closing_bracket = brackets.startIndex\n    while opening_bracket < brackets.endIndex\
    \ {\n        opening_bracket = brackets.index(after: opening_bracket)\n      \
    \  closing_bracket = brackets.index(after: closing_bracket)\n        if opening_bracket\
    \ < closing_bracket {\n            opening_brackets.append(contentsOf: brackets[opening_bracket..<closing_bracket])\n\
    \            closing_brackets.append(contentsOf: brackets[closing_bracket..<opening_bracket])\n\
    \        }\n    }\n    return opening_brackets.count == closing_brackets.count",
  "    let openingBrackets = brackets.components(separatedBy: \"<\")\n    let closingBrackets\
    \ = brackets.components(separatedBy: \">\")\n    \n    if openingBrackets.count\
    \ != closingBrackets.count {\n        return false\n    }\n    \n    for i in\
    \ 0..<openingBrackets.count {\n        if openingBrackets[i] != closingBrackets[i]\
    \ {\n            return false\n        }\n    }\n    \n    return true", "   \
    \ var opening = brackets.characters.split{$0 == \">\"}.count\n    var closing\
    \ = brackets.characters.split{$0 == \"<\"}.count\n    return opening == closing",
  "    var opening = brackets.characters\n    var closing = brackets.characters\n\
    \    opening.removeFirst()\n    closing.removeLast()\n    if opening.isEmpty()\
    \ {\n        return true\n    }\n    if closing.isEmpty() {\n        return false\n\
    \    }\n    if opening.first == closing.first {\n        return correct_bracketing(opening.dropFirst(),\
    \ closing.dropLast())\n    }\n    return false", "    var openingBrackets = brackets.characters\n\
    \    var closingBrackets = brackets.characters\n    var openingBracketIndex =\
    \ brackets.startIndex\n    var closingBracketIndex = brackets.startIndex\n   \
    \ var openingBracketCount = 0\n    var closingBracketCount = 0\n\n    while openingBracketIndex\
    \ < brackets.endIndex {\n        let openingBracket = brackets[openingBracketIndex]\n\
    \        openingBracketCount += 1\n\n        if openingBracket == \"<\" {\n  \
    \          openingBracketIndex += 1\n        } else if openingBracket == \">\"\
    \ {\n            openingBracketIndex += 1\n            closingBracketCount +=\
    \ 1\n        } else {\n            openingBracketIndex += 1\n        }\n    }\n\
    \n    while closingBracketIndex < brackets.endIndex {\n        let closingBracket\
    \ = brackets[closingBracketIndex]\n        closingBracketCount += 1\n\n      \
    \  if closingBracket == \"<\" {\n            closingBracketIndex += 1\n      \
    \  } else if closingBracket == \">\" {\n            closingBracketIndex += 1\n\
    \            openingBracketCount += 1\n        } else {\n            closingBracketIndex\
    \ += 1\n        }\n    }\n\n    return openingBracketCount == closingBracketCount",
  "    var openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \n    var openingBracketIndex = openingBrackets.startIndex\n    var closingBracketIndex\
    \ = closingBrackets.startIndex\n\n    while openingBracketIndex < openingBrackets.endIndex\
    \ {\n        if openingBrackets[openingBracketIndex] != closingBrackets[closingBracketIndex]\
    \ {\n            return false\n        }\n        openingBracketIndex++\n    \
    \    closingBracketIndex++\n    }\n    return true", "    var opening = brackets.characters\n\
    \    var closing = brackets.characters\n    opening.removeFirst()\n    opening.removeLast()\n\
    \    closing.removeFirst()\n    closing.removeLast()\n    if opening.isEmpty {\n\
    \        return closing.isEmpty\n    }\n    if closing.isEmpty {\n        return\
    \ opening.isEmpty\n    }\n    if opening.first != closing.first {\n        return\
    \ false\n    }\n    if opening.last != closing.last {\n        return false\n\
    \    }\n    return true", "    var openingBrackets = brackets.characters\n   \
    \ var closingBrackets = brackets.characters\n    var openingBracketsCount = brackets.characters.count\n\
    \    var closingBracketsCount = brackets.characters.count\n\n    for openingBracket\
    \ in openingBrackets {\n        if openingBracket == \"<\" {\n            openingBracketsCount--\n\
    \        } else if openingBracket == \">\" {\n            openingBracketsCount++\n\
    \        }\n    }\n\n    for closingBracket in closingBrackets {\n        if closingBracket\
    \ == \"<\" {\n            closingBracketsCount--\n        } else if closingBracket\
    \ == \">\" {\n            closingBracketsCount++\n        }\n    }\n\n    if openingBracketsCount\
    \ != closingBracketsCount {\n        return false\n    }\n\n    return true",
  "    var openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \    var openingBracketIndex = brackets.startIndex\n    var closingBracketIndex\
    \ = brackets.startIndex\n    var openingBracketCount = 0\n    var closingBracketCount\
    \ = 0\n\n    while openingBracketIndex < brackets.endIndex {\n        let openingBracket\
    \ = brackets[openingBracketIndex]\n        openingBracketCount += 1\n\n      \
    \  if openingBracket == \"<\" {\n            if openingBracketIndex < brackets.endIndex\
    \ && brackets[openingBracketIndex + 1] == \"<\" {\n                openingBracketIndex\
    \ += 1\n            }\n        }\n\n        if openingBracket == \">\" {\n   \
    \         if openingBracketIndex < brackets.endIndex && brackets[openingBracketIndex\
    \ + 1] == \">\" {\n                openingBracketIndex += 1\n            }\n \
    \       }\n\n        if openingBracketIndex < brackets.endIndex && openingBracketIndex\
    \ < brackets.endIndex && openingBracketIndex < brackets.endIndex && brackets[openingBracketIndex\
    \ + 1] == \">\" {\n            openingBracketIndex += 1\n            closingBracketCount\
    \ += 1\n        }\n\n        if openingBracketIndex < brackets.endIndex && openingBracketIndex\
    \ < brackets.endIndex && openingBracketIndex < brackets.endIndex && brackets[openingBracketIndex\
    \ + 1] == \"<\" {\n            openingBracketIndex += 1\n            closingBracketCount\
    \ += 1\n        }\n\n        if openingBracketIndex < brackets.endIndex && openingBracketIndex\
    \ < brackets.endIndex && brackets[openingBracketIndex + 1] == \">\" {\n      \
    \      openingBracketIndex += 1\n            closingBracketCount += 1\n      \
    \  }\n\n        if openingBracketIndex < brackets.endIndex && brackets[openingBracketIndex\
    \ + 1] == \"<\" {\n            openingBracketIndex += 1\n            closingBracketCount\
    \ += 1\n        }\n\n        if openingBracketIndex < brackets.endIndex && brackets[openingBracketIndex\
    \ + 1] == \">\" {\n            openingBracketIndex += 1\n            closingBracketCount\
    \ += 1\n        }\n\n        if openingBracketIndex < brackets.endIndex && brackets[openingBracketIndex\
    \ + 1] == \"<\" {\n            openingBracketIndex += 1\n            closingBracketCount\
    \ += 1\n        }\n\n        if openingBracketIndex < brackets.endIndex && brackets[openingBracketIndex\
    \ + 1] == ", "    var opening_brackets = brackets.characters\n    var closing_brackets\
    \ = brackets.characters\n    opening_brackets.removeLast()\n    closing_brackets.removeFirst()\n\
    \    if opening_brackets.isEmpty {\n        return true\n    }\n    if closing_brackets.isEmpty\
    \ {\n        return false\n    }\n    if opening_brackets.first != closing_brackets.first\
    \ {\n        return false\n    }\n    if opening_brackets.last != closing_brackets.last\
    \ {\n        return false\n    }\n    if opening_brackets.count == 1 {\n     \
    \   return true\n    }\n    return correct_bracketing(String(opening_brackets))",
  "    var openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \    var openingBracketsCount = brackets.characters.count\n    var closingBracketsCount\
    \ = brackets.characters.count\n    var openingBracketsIndex = 0\n    var closingBracketsIndex\
    \ = 0\n\n    while openingBracketsIndex < openingBracketsCount {\n        openingBracketsIndex\
    \ += 1\n        openingBracketsCount -= 1\n        closingBracketsCount += 1\n\
    \        closingBracketsIndex += 1\n        if openingBracketsIndex < openingBracketsCount\
    \ {\n            openingBracketsCount += 1\n            openingBracketsIndex +=\
    \ 1\n        }\n        if closingBracketsIndex < closingBracketsCount {\n   \
    \         closingBracketsCount -= 1\n            closingBracketsIndex += 1\n \
    \       }\n        if openingBracketsIndex < openingBracketsCount {\n        \
    \    openingBracketsCount += 1\n            openingBracketsIndex += 1\n      \
    \  }\n        if closingBracketsIndex < closingBracketsCount {\n            closingBracketsCount\
    \ -= 1\n            closingBracketsIndex += 1\n        }\n        if openingBracketsIndex\
    \ < openingBracketsCount {\n            openingBracketsCount += 1\n          \
    \  openingBracketsIndex += 1\n        }\n        if closingBracketsIndex < closingBracketsCount\
    \ {\n            closingBracketsCount -= 1\n            closingBracketsIndex +=\
    \ 1\n        }\n        if openingBracketsIndex < openingBracketsCount {\n   \
    \         openingBracketsCount += 1\n            openingBracketsIndex += 1\n \
    \       }\n        if closingBracketsIndex < closingBracketsCount {\n        \
    \    closingBracketsCount -= 1\n            closingBracketsIndex += 1\n      \
    \  }\n        if openingBracketsIndex < openingBracketsCount {\n            openingBracketsCount\
    \ += 1\n            openingBracketsIndex += 1\n        }\n        if closingBracketsIndex\
    \ < closingBracketsCount {\n            closingBracketsCount -= 1\n          \
    \  closingBracketsIndex += 1\n        }\n        if openingBracketsIndex < openingBracketsCount\
    \ {\n            openingBracketsCount += 1\n            openingBracketsIndex +=\
    \ 1\n        }\n        if closingBracketsIndex < closingBracketsCount {\n   \
    \         closingBracketsCount -= 1\n            closingBrackets", "    var openingBrackets\
    \ = brackets.characters\n    var closingBrackets = brackets.characters\n    var\
    \ openingBracketIndex = 0\n    var closingBracketIndex = 0\n    while openingBracketIndex\
    \ < openingBrackets.count {\n        guard openingBrackets[openingBracketIndex]\
    \ == \">\" else {\n            return false\n        }\n        openingBracketIndex\
    \ += 1\n        guard openingBracketIndex < openingBrackets.count else {\n   \
    \         return false\n        }\n        guard openingBrackets[openingBracketIndex]\
    \ == \">\" else {\n            return false\n        }\n        openingBracketIndex\
    \ += 1\n        guard openingBracketIndex < openingBrackets.count else {\n   \
    \         return false\n        }\n        guard openingBrackets[openingBracketIndex]\
    \ == \"<\" else {\n            return false\n        }\n        openingBracketIndex\
    \ += 1\n        guard openingBracketIndex < openingBrackets.count else {\n   \
    \         return false\n        }\n        guard openingBrackets[openingBracketIndex]\
    \ == \">\" else {\n            return false\n        }\n        openingBracketIndex\
    \ += 1\n        guard openingBracketIndex < openingBrackets.count else {\n   \
    \         return false\n        }\n        guard openingBrackets[openingBracketIndex]\
    \ == \"<\" else {\n            return false\n        }\n        openingBracketIndex\
    \ += 1\n        guard openingBracketIndex < openingBrackets.count else {\n   \
    \         return false\n        }\n        guard openingBrackets[openingBracketIndex]\
    \ == \">\" else {\n            return false\n        }\n        openingBracketIndex\
    \ += 1\n        guard openingBracketIndex < openingBrackets.count else {\n   \
    \         return false\n        }\n        guard openingBrackets[openingBracketIndex]\
    \ == \"<\" else {\n            return false\n        }\n        openingBracketIndex\
    \ += 1\n        guard openingBracketIndex < openingBrackets.count else {\n   \
    \         return false\n        }\n        guard openingBrackets[openingBracketIndex]\
    \ == \">\" else {\n            return false\n        }\n        openingBracketIndex\
    \ += 1\n        guard openingBracketIndex < openingBrackets.count else {\n   \
    \         return false\n        }\n        guard openingBrackets[openingBracketIndex]\
    \ == \"<\" else {\n            return false\n        }\n        openingBracketIndex\
    \ += 1\n        guard openingBracketIndex", "    var openingBrackets = brackets.characters\n\
    \    var closingBrackets = brackets.characters\n    var openingBracketIndex =\
    \ brackets.startIndex\n    var closingBracketIndex = brackets.startIndex\n\n \
    \   while openingBracketIndex < brackets.endIndex {\n        openingBracketIndex\
    \ = openingBracketIndex.successor()\n        closingBracketIndex = closingBracketIndex.successor()\n\
    \        if openingBrackets[openingBracketIndex] != closingBrackets[closingBracketIndex]\
    \ {\n            return false\n        }\n    }\n    return true", "    var openingBrackets\
    \ = brackets.characters\n    var closingBrackets = brackets.characters\n    openingBrackets.removeFirst()\n\
    \    closingBrackets.removeLast()\n    if openingBrackets.isEmpty() {\n      \
    \  return false\n    }\n    if closingBrackets.isEmpty() {\n        return true\n\
    \    }\n    if openingBrackets.first == closingBrackets.first {\n        return\
    \ correct_bracketing(openingBrackets.dropFirst(), closingBrackets.dropLast())\n\
    \    }\n    return false", "    let openingBrackets = brackets.components(separatedBy:\
    \ \"<\")\n    let closingBrackets = brackets.components(separatedBy: \">\")\n\
    \    \n    if openingBrackets.count != closingBrackets.count {\n        return\
    \ false\n    }\n    \n    for i in 0..<openingBrackets.count {\n        if openingBrackets[i]\
    \ != closingBrackets[i] {\n            return false\n        }\n    }\n    \n\
    \    return true", "    let openingBrackets = brackets.components(separatedBy:\
    \ \"<\")\n    let closingBrackets = brackets.components(separatedBy: \">\")\n\
    \    let openingBracketCount = openingBrackets.count\n    let closingBracketCount\
    \ = closingBrackets.count\n    if openingBracketCount != closingBracketCount {\n\
    \        return false\n    }\n    if openingBracketCount == 0 {\n        return\
    \ true\n    }\n    let firstOpeningBracket = openingBrackets[0]\n    let lastClosingBracket\
    \ = closingBrackets.last!\n    if firstOpeningBracket != lastClosingBracket {\n\
    \        return false\n    }\n    return true", "    let openingBrackets = brackets.components(separatedBy:\
    \ \"<\")\n    let closingBrackets = brackets.components(separatedBy: \">\")\n\
    \    if openingBrackets.count != closingBrackets.count {\n        return false\n\
    \    }\n    for openingBracket in openingBrackets {\n        if closingBrackets.contains(where:\
    \ { $0 == openingBracket }) {\n            return true\n        }\n    }\n   \
    \ return false", "    var openingBrackets = brackets.characters\n    var closingBrackets\
    \ = brackets.characters\n    var openingBracketIndex = brackets.startIndex\n \
    \   var closingBracketIndex = brackets.startIndex\n    var openingBracketCount\
    \ = 0\n    var closingBracketCount = 0\n    while openingBracketIndex < brackets.endIndex\
    \ {\n        switch brackets[openingBracketIndex] {\n        case \"<\":\n   \
    \         openingBracketCount++\n        case \"<=\":\n            openingBracketCount++\n\
    \        case \"=\":\n            openingBracketCount++\n        case \"<>\":\n\
    \            openingBracketCount++\n        case \"<\":\n            openingBracketCount++\n\
    \        case \"<=\":\n            openingBracketCount++\n        case \"=\":\n\
    \            openingBracketCount++\n        case \"<>\":\n            openingBracketCount++\n\
    \        case \"<\":\n            openingBracketCount++\n        case \"<=\":\n\
    \            openingBracketCount++\n        case \"=\":\n            openingBracketCount++\n\
    \        case \"<>\":\n            openingBracketCount++\n        case \"<\":\n\
    \            openingBracketCount++\n        case \"<=\":\n            openingBracketCount++\n\
    \        case \"=\":\n            openingBracketCount++\n        case \"<>\":\n\
    \            openingBracketCount++\n        case \"<\":\n            openingBracketCount++\n\
    \        case \"<=\":\n            openingBracketCount++\n        case \"=\":\n\
    \            openingBracketCount++\n        case \"<>\":\n            openingBracketCount++\n\
    \        case \"<\":\n            openingBracketCount++\n        case \"<=\":\n\
    \            openingBracketCount++\n        case \"=\":\n            openingBracketCount++\n\
    \        case \"<>\":\n            openingBracketCount++\n        case \"<\":\n\
    \            openingBracketCount++\n        case \"<=\":\n            openingBracketCount++\n\
    \        case \"=\":\n            openingBracketCount++\n        case \"<>\":\n\
    \            openingBracketCount++\n        case \"<\":\n            openingBracketCount++\n\
    \        case \"<=\":\n            openingBracketCount++\n        case \"=\":\n\
    \            openingBracketCount++\n        case \"<>\":\n            openingBracketCount++\n\
    \        case \"<\":\n            openingBra", "    var openingBrackets = brackets.characters\n\
    \    var closingBrackets = brackets.characters\n\n    var openingBracketsIndex\
    \ = 0\n    var closingBracketsIndex = 0\n\n    while openingBracketsIndex < openingBrackets.count\
    \ {\n        if openingBrackets[openingBracketsIndex] == '<' {\n            if\
    \ closingBrackets[closingBracketsIndex] == '>' {\n                openingBracketsIndex\
    \ += 1\n                closingBracketsIndex += 1\n            } else {\n    \
    \            openingBracketsIndex += 1\n            }\n        } else {\n    \
    \        if closingBrackets[closingBracketsIndex] == '>' {\n                openingBracketsIndex\
    \ += 1\n            } else {\n                openingBracketsIndex += 1\n    \
    \            closingBracketsIndex += 1\n            }\n        }\n    }\n\n  \
    \  return openingBracketsIndex == openingBrackets.count", "    let openingBrackets\
    \ = brackets.components(separatedBy: \"<\")\n    let closingBrackets = brackets.components(separatedBy:\
    \ \">\")\n    \n    if openingBrackets.count != closingBrackets.count {\n    \
    \    return false\n    }\n    \n    for openingBracket in openingBrackets {\n\
    \        let closingBracket = closingBrackets.firstIndex(of: openingBracket)\n\
    \        if closingBracket == nil {\n            return false\n        }\n   \
    \     \n        if openingBracket != closingBracket! {\n            return false\n\
    \        }\n    }\n    \n    return true", "    var openingBrackets = brackets.characters\n\
    \    var closingBrackets = brackets.characters\n    var openingBracketIndex =\
    \ brackets.startIndex\n    var closingBracketIndex = brackets.startIndex\n   \
    \ while openingBracketIndex < brackets.endIndex {\n        openingBracketIndex\
    \ = openingBracketIndex.successor()\n        closingBracketIndex = closingBracketIndex.successor()\n\
    \        if openingBrackets[openingBracketIndex] != closingBrackets[closingBracketIndex]\
    \ {\n            return false\n        }\n    }\n    return true", "    var opening\
    \ = brackets.characters\n    var closing = brackets.characters\n    opening.removeFirst()\n\
    \    closing.removeLast()\n    if opening.isEmpty {\n        return closing.isEmpty\n\
    \    }\n    if closing.isEmpty {\n        return opening.isEmpty && closing.count\
    \ == 0\n    }\n    if opening.count != closing.count {\n        return false\n\
    \    }\n    for index in 0..<opening.count {\n        if opening[index] != closing[index]\
    \ {\n            return false\n        }\n    }\n    return true", "    var openingBrackets\
    \ = brackets.characters\n    var closingBrackets = brackets.characters\n    var\
    \ openingBracketIndex = brackets.startIndex\n    var closingBracketIndex = brackets.startIndex\n\
    \    var openingBracketCount = 0\n    var closingBracketCount = 0\n    while openingBracketIndex\
    \ < brackets.endIndex {\n        switch brackets[openingBracketIndex] {\n    \
    \    case \"<\":\n            openingBracketCount += 1\n        case \"<=\":\n\
    \            openingBracketCount += 1\n        case \"=\":\n            openingBracketCount\
    \ += 1\n        case \"==\":\n            openingBracketCount += 1\n        case\
    \ \"!\":\n            openingBracketCount += 1\n        case \"<=\":\n       \
    \     openingBracketCount += 1\n        case \"<\":\n            openingBracketCount\
    \ += 1\n        case \"<\":\n            openingBracketCount += 1\n        case\
    \ \"<\":\n            openingBracketCount += 1\n        case \"<\":\n        \
    \    openingBracketCount += 1\n        case \"<\":\n            openingBracketCount\
    \ += 1\n        case \"<\":\n            openingBracketCount += 1\n        case\
    \ \"<\":\n            openingBracketCount += 1\n        case \"<\":\n        \
    \    openingBracketCount += 1\n        case \"<\":\n            openingBracketCount\
    \ += 1\n        case \"<\":\n            openingBracketCount += 1\n        case\
    \ \"<\":\n            openingBracketCount += 1\n        case \"<\":\n        \
    \    openingBracketCount += 1\n        case \"<\":\n            openingBracketCount\
    \ += 1\n        case \"<\":\n            openingBracketCount += 1\n        case\
    \ \"<\":\n            openingBracketCount += 1\n        case \"<\":\n        \
    \    openingBracketCount += 1\n        case \"<\":\n            openingBracketCount\
    \ += 1\n        case \"<\":\n            openingBracketCount += 1\n        case\
    \ \"<\":\n            openingBracketCount += 1\n        case \"<\":\n        \
    \    openingBracketCount += 1\n        case \"<\":\n            openingBracketCount\
    \ += 1\n        case \"<\":\n            openingBracketCount += 1\n        case\
    \ \"<\":\n            openingBracketCount += 1\n        case \"<\":\n        \
    \    openingBracketCount += 1\n        case \"<\":\n            openingBracketCount\
    \ += 1\n        case \"<\":\n            openingBracketCount += 1\n        case\
    \ \"<\":\n            openingBracketCount += 1\n        case \"", "    var openingBrackets\
    \ = brackets.characters\n    var closingBrackets = brackets.characters\n\n   \
    \ var openingBracketsCount = openingBrackets.count\n    var closingBracketsCount\
    \ = closingBrackets.count\n\n    if openingBracketsCount == 0 {\n        return\
    \ true\n    }\n\n    if openingBracketsCount == 1 {\n        if closingBracketsCount\
    \ == 0 {\n            return true\n        }\n        if closingBracketsCount\
    \ == 1 {\n            if openingBrackets[0] == closingBrackets[0] {\n        \
    \        return true\n            }\n        }\n    }\n\n    if openingBracketsCount\
    \ == 2 {\n        if closingBracketsCount == 0 {\n            return true\n  \
    \      }\n        if closingBracketsCount == 1 {\n            if openingBrackets[0]\
    \ == closingBrackets[1] {\n                return true\n            }\n      \
    \  }\n    }\n\n    if openingBracketsCount == 3 {\n        if closingBracketsCount\
    \ == 0 {\n            return true\n        }\n        if closingBracketsCount\
    \ == 1 {\n            if openingBrackets[0] == closingBrackets[2] {\n        \
    \        return true\n            }\n        }\n    }\n\n    if openingBracketsCount\
    \ == 4 {\n        if closingBracketsCount == 0 {\n            return true\n  \
    \      }\n        if closingBracketsCount == 1 {\n            if openingBrackets[0]\
    \ == closingBrackets[3] {\n                return true\n            }\n      \
    \  }\n    }\n\n    if openingBracketsCount == 5 {\n        if closingBracketsCount\
    \ == 0 {\n            return true\n        }\n        if closingBracketsCount\
    \ == 1 {\n            if openingBrackets[0] == closingBrackets[4] {\n        \
    \        return true\n            }\n        }\n    }\n\n    if openingBracketsCount\
    \ == 6 {\n        if closingBracketsCount == 0 {\n            return true\n  \
    \      }\n        if closingBracketsCount == 1 {\n            if openingBrackets[0]\
    \ == closingBrackets[5] {\n                return true\n            }\n      \
    \  }\n    }\n\n    if openingBracketsCount == 7 {\n        if closingBracketsCount\
    \ == 0 {\n            return true\n        }\n        if closingBracketsCount\
    \ == 1 {\n            if openingBrackets[0] == closingBrackets[6] {\n        \
    \        return true\n            }\n        }\n    }\n\n    if openingBracketsCount\
    \ == 8 {\n        if closingBracketsCount == 0 {\n            return true\n  \
    \      }\n        if closingBracketsCount == 1 {\n            if openingBrackets[0]\
    \ == closingBrackets[7] {\n                return true\n            }\n      \
    \  }\n    }\n\n    if opening", "    var openingBrackets = brackets.characters\n\
    \    var closingBrackets = brackets.characters\n\n    for openingBracket in openingBrackets\
    \ {\n        if closingBrackets.contains(openingBracket) {\n            closingBrackets.remove(openingBracket)\n\
    \        } else {\n            return false\n        }\n    }\n    return true",
  "    var openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \n    if openingBrackets.count != closingBrackets.count {\n        return false\n\
    \    }\n\n    for i in 0..<openingBrackets.count {\n        if openingBrackets[i]\
    \ != closingBrackets[i] {\n            return false\n        }\n    }\n\n    return\
    \ true", "    var openingBrackets = brackets.characters\n    var closingBrackets\
    \ = brackets.characters\n    var openingBracketIndex = brackets.startIndex\n \
    \   var closingBracketIndex = brackets.startIndex\n    while openingBracketIndex\
    \ < brackets.endIndex {\n        let openingBracket = brackets[openingBracketIndex]\n\
    \        let closingBracket = brackets[closingBracketIndex]\n        if openingBracket\
    \ == \"<\" {\n            openingBracketIndex += 1\n            if openingBracketIndex\
    \ < brackets.endIndex {\n                openingBracket = brackets[openingBracketIndex]\n\
    \            }\n        } else {\n            if closingBracket == \">\" {\n \
    \               closingBracketIndex += 1\n                if closingBracketIndex\
    \ < brackets.endIndex {\n                    closingBracket = brackets[closingBracketIndex]\n\
    \                }\n            } else {\n                return false\n     \
    \       }\n        }\n        openingBrackets.append(openingBracket)\n       \
    \ closingBrackets.append(closingBracket)\n    }\n    return openingBrackets.count\
    \ == closingBrackets.count", "    var openingBrackets = brackets.characters\n\
    \    var closingBrackets = brackets.characters\n    var openingBracketIndex =\
    \ brackets.startIndex\n    var closingBracketIndex = brackets.startIndex\n   \
    \ var openingBracketCount = brackets.characters.count\n\n    while openingBracketIndex\
    \ < openingBracketCount {\n        let openingBracket = brackets.character(at:\
    \ openingBracketIndex)\n        if openingBracket == \"<\" {\n            openingBracketIndex\
    \ += 1\n            if openingBracketIndex < openingBracketCount {\n         \
    \       openingBracketIndex += 1\n            }\n        } else {\n          \
    \  openingBracketIndex += 1\n        }\n    }\n\n    while closingBracketIndex\
    \ < closingBracketCount {\n        let closingBracket = brackets.character(at:\
    \ closingBracketIndex)\n        if closingBracket == \">\" {\n            closingBracketIndex\
    \ += 1\n            if closingBracketIndex < closingBracketCount {\n         \
    \       closingBracketIndex += 1\n            }\n        } else {\n          \
    \  closingBracketIndex += 1\n        }\n    }\n\n    return openingBracketIndex\
    \ == closingBracketIndex", "    let openingBrackets = brackets.components(separatedBy:\
    \ \"<\")\n    let closingBrackets = brackets.components(separatedBy: \">\")\n\
    \    \n    if openingBrackets.count != closingBrackets.count {\n        return\
    \ false\n    }\n    \n    for i in 0..<openingBrackets.count {\n        if openingBrackets[i]\
    \ != closingBrackets[i] {\n            return false\n        }\n    }\n    \n\
    \    return true", "    var openingBrackets = brackets.characters\n    var closingBrackets\
    \ = brackets.characters\n    openingBrackets.removeLast()\n    closingBrackets.removeFirst()\n\
    \    \n    if openingBrackets.isEmpty {\n        return false\n    }\n    \n \
    \   if closingBrackets.isEmpty {\n        return true\n    }\n    \n    if openingBrackets.first\
    \ != closingBrackets.last {\n        return false\n    }\n    \n    return correct_bracketing(openingBrackets.dropFirst())",
  "    var openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \    var openingBracketIndex = brackets.startIndex\n    var closingBracketIndex\
    \ = brackets.startIndex\n    var openingBracketCount = 0\n    var closingBracketCount\
    \ = 0\n    while openingBracketIndex < brackets.endIndex {\n        let openingBracket\
    \ = brackets[openingBracketIndex]\n        if openingBracket == \"<\" {\n    \
    \        openingBracketCount++\n        } else if openingBracket == \">\" {\n\
    \            openingBracketCount--\n        }\n        openingBracketIndex++\n\
    \    }\n    while closingBracketIndex < brackets.endIndex {\n        let closingBracket\
    \ = brackets[closingBracketIndex]\n        if closingBracket == \"<\" {\n    \
    \        closingBracketCount++\n        } else if closingBracket == \">\" {\n\
    \            closingBracketCount--\n        }\n        closingBracketIndex++\n\
    \    }\n    if openingBracketCount != closingBracketCount {\n        return false\n\
    \    }\n    return true", "    var openingBrackets = brackets.characters\n   \
    \ var closingBrackets = brackets.characters\n    var openingBracketIndex = brackets.startIndex\n\
    \    var closingBracketIndex = brackets.startIndex\n    var openingBracketCount\
    \ = 0\n    var closingBracketCount = 0\n    while openingBracketIndex < brackets.endIndex\
    \ {\n        let openingBracket = brackets[openingBracketIndex]\n        if openingBracket\
    \ == \"<\" {\n            openingBracketCount++\n        } else if openingBracket\
    \ == \">\" {\n            openingBracketCount--\n        }\n        openingBracketIndex++\n\
    \    }\n    while closingBracketIndex < brackets.endIndex {\n        let closingBracket\
    \ = brackets[closingBracketIndex]\n        if closingBracket == \"<\" {\n    \
    \        closingBracketCount++\n        } else if closingBracket == \">\" {\n\
    \            closingBracketCount--\n        }\n        closingBracketIndex++\n\
    \    }\n    if openingBracketCount != closingBracketCount {\n        return false\n\
    \    }\n    return true", "    let openingBrackets = brackets.components(separatedBy:\
    \ \"<\")\n    let closingBrackets = brackets.components(separatedBy: \">\")\n\
    \    if openingBrackets.count != closingBrackets.count {\n        return false\n\
    \    }\n    for openingBracket in openingBrackets {\n        let closingBracket\
    \ = closingBrackets.firstIndex(of: openingBracket)\n        if closingBracket\
    \ == nil {\n            return false\n        }\n        if openingBracket !=\
    \ closingBracket! {\n            return false\n        }\n    }\n    return true",
  "    var openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \    var openingBracketIndex = 0\n    var closingBracketIndex = 0\n    var openingBracketFound\
    \ = false\n    var closingBracketFound = false\n    while openingBracketIndex\
    \ < openingBrackets.count {\n        let openingBracket = openingBrackets[openingBracketIndex]\n\
    \        if openingBracket == \"<\" {\n            openingBracketFound = true\n\
    \            openingBracketIndex += 1\n        } else if openingBracket == \"\
    <\" && !openingBracketFound {\n            openingBracketFound = true\n      \
    \      openingBracketIndex += 1\n        } else if openingBracket == \"<\" {\n\
    \            openingBracketFound = true\n            openingBracketIndex += 1\n\
    \        } else if openingBracket == \"<\" && !openingBracketFound {\n       \
    \     openingBracketFound = true\n            openingBracketIndex += 1\n     \
    \   } else if openingBracket == \"<\" {\n            openingBracketFound = true\n\
    \            openingBracketIndex += 1\n        } else if openingBracket == \"\
    <\" && !openingBracketFound {\n            openingBracketFound = true\n      \
    \      openingBracketIndex += 1\n        } else if openingBracket == \"<\" {\n\
    \            openingBracketFound = true\n            openingBracketIndex += 1\n\
    \        } else if openingBracket == \"<\" && !openingBracketFound {\n       \
    \     openingBracketFound = true\n            openingBracketIndex += 1\n     \
    \   } else if openingBracket == \"<\" {\n            openingBracketFound = true\n\
    \            openingBracketIndex += 1\n        } else if openingBracket == \"\
    <\" && !openingBracketFound {\n            openingBracketFound = true\n      \
    \      openingBracketIndex += 1\n        } else if openingBracket == \"<\" {\n\
    \            openingBracketFound = true\n            openingBracketIndex += 1\n\
    \        } else if openingBracket == \"<\" && !openingBracketFound {\n       \
    \     openingBracketFound = true\n            openingBracketIndex += 1\n     \
    \   } else if openingBracket == \"<\" {\n            openingBracketFound = true\n\
    \            openingBracketIndex += 1\n        } else if openingBracket == \"\
    <\" && !openingBracketFound {\n            openingBracketFound = true\n      \
    \      openingBracketIndex += 1", "    var openingBrackets = brackets.characters\n\
    \    var closingBrackets = brackets.characters\n\n    var openingBracketsCount\
    \ = openingBrackets.count\n    var closingBracketsCount = closingBrackets.count\n\
    \n    if openingBracketsCount == 0 {\n        return true\n    }\n\n    if openingBracketsCount\
    \ != closingBracketsCount {\n        return false\n    }\n\n    var openingBracketIndex\
    \ = 0\n    var closingBracketIndex = 0\n\n    while openingBracketIndex < openingBracketsCount\
    \ {\n        if openingBrackets[openingBracketIndex] != closingBrackets[closingBracketIndex]\
    \ {\n            return false\n        }\n\n        openingBracketIndex += 1\n\
    \        closingBracketIndex += 1\n    }\n\n    return true", "    var openingBrackets\
    \ = brackets.characters\n    var closingBrackets = brackets.characters\n    var\
    \ openingBracketsCount = brackets.characters.count\n    var closingBracketsCount\
    \ = brackets.characters.count\n    var openingBracketsIndex = 0\n    var closingBracketsIndex\
    \ = 0\n\n    while openingBracketsIndex < openingBracketsCount {\n        if openingBrackets[openingBracketsIndex]\
    \ == '<' {\n            openingBracketsIndex += 1\n            if openingBracketsIndex\
    \ < openingBracketsCount {\n                openingBrackets[openingBracketsIndex]\
    \ = '='\n                openingBracketsIndex += 1\n            }\n        } else\
    \ {\n            openingBrackets[openingBracketsIndex] = '>'\n            openingBracketsIndex\
    \ += 1\n        }\n    }\n\n    while closingBracketsIndex < closingBracketsCount\
    \ {\n        if closingBrackets[closingBracketsIndex] == '>' {\n            closingBracketsIndex\
    \ += 1\n            if closingBracketsIndex < closingBracketsCount {\n       \
    \         closingBrackets[closingBracketsIndex] = '='\n                closingBracketsIndex\
    \ += 1\n            }\n        } else {\n            closingBrackets[closingBracketsIndex]\
    \ = '<'\n            closingBracketsIndex += 1\n        }\n    }\n\n    return\
    \ openingBracketsIndex == closingBracketsIndex", "    var openingBrackets = brackets.characters\n\
    \    var closingBrackets = brackets.characters\n    var openingBracketIndex =\
    \ brackets.startIndex\n    var closingBracketIndex = brackets.startIndex\n\n \
    \   while openingBracketIndex < brackets.endIndex {\n        let openingBracket\
    \ = brackets[openingBracketIndex]\n        openingBracketIndex = advance(openingBracketIndex,\
    \ 1)\n\n        if openingBracket == \"<\" {\n            if closingBracketIndex\
    \ < brackets.endIndex && brackets[closingBracketIndex] == \">\" {\n          \
    \      closingBracketIndex = advance(closingBracketIndex, 1)\n            } else\
    \ {\n                return false\n            }\n        } else {\n         \
    \   if closingBracketIndex < brackets.endIndex && brackets[closingBracketIndex]\
    \ == \">\" {\n                closingBracketIndex = advance(closingBracketIndex,\
    \ 1)\n                openingBracketIndex = advance(openingBracketIndex, 1)\n\
    \            } else {\n                return false\n            }\n        }\n\
    \    }\n\n    return openingBracketIndex == brackets.endIndex && closingBracketIndex\
    \ == brackets.endIndex", "    var openingBrackets = brackets.characters\n    var\
    \ closingBrackets = brackets.characters\n    var openingBracketIndex = brackets.startIndex\n\
    \    var closingBracketIndex = brackets.startIndex\n    var openingBracketCount\
    \ = 0\n    var closingBracketCount = 0\n\n    while openingBracketIndex < brackets.endIndex\
    \ {\n        let currentChar = brackets[openingBracketIndex]\n        if currentChar\
    \ == \"<\" {\n            openingBracketCount += 1\n        } else if currentChar\
    \ == \">\" {\n            closingBracketCount += 1\n        }\n        openingBracketIndex\
    \ += 1\n    }\n\n    if openingBracketCount != closingBracketCount {\n       \
    \ return false\n    }\n\n    while openingBracketIndex < brackets.endIndex {\n\
    \        let currentChar = brackets[openingBracketIndex]\n        if currentChar\
    \ == \"<\" {\n            openingBracketIndex += 1\n        } else if currentChar\
    \ == \">\" {\n            closingBracketIndex += 1\n        }\n    }\n\n    if\
    \ openingBracketIndex != brackets.endIndex {\n        return false\n    }\n\n\
    \    return true", "    let openingBrackets = brackets.components(separatedBy:\
    \ \"<\")\n    let closingBrackets = brackets.components(separatedBy: \">\")\n\
    \    \n    if openingBrackets.count != closingBrackets.count {\n        return\
    \ false\n    }\n    \n    for i in 0..<openingBrackets.count {\n        if openingBrackets[i]\
    \ != closingBrackets[i] {\n            return false\n        }\n    }\n    \n\
    \    return true", "    var openingBrackets = brackets.characters\n    var closingBrackets\
    \ = brackets.characters\n    var openingBracketIndex = brackets.startIndex\n \
    \   var closingBracketIndex = brackets.startIndex\n    var openingBracketCount\
    \ = 0\n    var closingBracketCount = 0\n\n    while openingBracketIndex < brackets.endIndex\
    \ {\n        let openingBracket = brackets[openingBracketIndex]\n        openingBracketCount++\n\
    \n        if openingBracket == \"<\" {\n            openingBracketIndex++\n  \
    \          continue\n        }\n\n        if openingBracket == \">\" {\n     \
    \       openingBracketIndex++\n            closingBracketIndex++\n           \
    \ continue\n        }\n\n        if openingBracket == \"<\" {\n            openingBracketIndex++\n\
    \            continue\n        }\n\n        if openingBracket == \">\" {\n   \
    \         openingBracketIndex++\n            closingBracketIndex++\n         \
    \   continue\n        }\n\n        if openingBracket == \"<\" {\n            openingBracketIndex++\n\
    \            continue\n        }\n\n        if openingBracket == \">\" {\n   \
    \         openingBracketIndex++\n            closingBracketIndex++\n         \
    \   continue\n        }\n\n        if openingBracket == \"<\" {\n            openingBracketIndex++\n\
    \            continue\n        }\n\n        if openingBracket == \">\" {\n   \
    \         openingBracketIndex++\n            closingBracketIndex++\n         \
    \   continue\n        }\n\n        if openingBracket == \"<\" {\n            openingBracketIndex++\n\
    \            continue\n        }\n\n        if openingBracket == \">\" {\n   \
    \         openingBracketIndex++\n            closingBracketIndex++\n         \
    \   continue\n        }\n\n        if openingBracket == \"<\" {\n            openingBracketIndex++\n\
    \            continue\n        }\n\n        if openingBracket == \">\" {\n   \
    \         openingBracketIndex++\n            closingBracketIndex++\n         \
    \   continue\n        }\n\n        if openingBracket == \"<\" {\n            openingBracketIndex++\n\
    \            continue\n        }\n\n        if openingBracket == \">\" {\n   \
    \         openingBracketIndex++\n            closingBracketIndex++\n         \
    \   continue\n        }\n\n        if openingBracket == \"<\" {\n            openingBracketIndex++\n\
    \            continue\n        }\n\n        if openingBracket == \">\" {\n   \
    \         openingBracketIndex++\n            closingBracketIndex++\n         \
    \   continue\n        }\n\n        if openingBracket == \"<\" {\n            openingBra",
  "    let openingBrackets = brackets.components(separatedBy: \"<\")\n    let closingBrackets\
    \ = brackets.components(separatedBy: \">\")\n    \n    if openingBrackets.count\
    \ != closingBrackets.count {\n        return false\n    }\n    \n    for openingBracket\
    \ in openingBrackets {\n        let closingBracket = closingBrackets.firstIndex(of:\
    \ openingBracket)\n        \n        if closingBracket == nil {\n            return\
    \ false\n        }\n        \n        if openingBracket != closingBracket! {\n\
    \            return false\n        }\n    }\n    \n    return true", "    let\
    \ openingBrackets = brackets.components(separatedBy: \"<\")\n    let closingBrackets\
    \ = brackets.components(separatedBy: \">\")\n    \n    if openingBrackets.count\
    \ != closingBrackets.count {\n        return false\n    }\n    \n    for openingBracket\
    \ in openingBrackets {\n        let closingBracket = closingBrackets.firstIndex(of:\
    \ openingBracket)\n        if closingBracket == nil {\n            return false\n\
    \        }\n        \n        if openingBracket != closingBracket! {\n       \
    \     return false\n        }\n    }\n    \n    return true", "    var openingBrackets\
    \ = brackets.characters\n    var closingBrackets = brackets.characters\n    openingBrackets.removeLast()\n\
    \    closingBrackets.removeFirst()\n    if openingBrackets.isEmpty() {\n     \
    \   return true\n    }\n    if closingBrackets.isEmpty() {\n        return false\n\
    \    }\n    var openingBracketIndex = openingBrackets.startIndex\n    var closingBracketIndex\
    \ = closingBrackets.startIndex\n    var openingBracket = openingBrackets[openingBracketIndex]\n\
    \    var closingBracket = closingBrackets[closingBracketIndex]\n    while openingBracketIndex\
    \ < openingBrackets.endIndex {\n        if openingBracket != closingBracket {\n\
    \            return false\n        }\n        openingBracketIndex += 1\n     \
    \   closingBracketIndex -= 1\n        openingBracket = openingBrackets[openingBracketIndex]\n\
    \        closingBracket = closingBrackets[closingBracketIndex]\n    }\n    return\
    \ true", "    let openingBrackets = brackets.components(separatedBy: \"<\")\n\
    \    let closingBrackets = brackets.components(separatedBy: \">\")\n    if openingBrackets.count\
    \ != closingBrackets.count {\n        return false\n    }\n    for openingBracket\
    \ in openingBrackets {\n        if let closingBracket = closingBrackets.firstIndex(of:\
    \ openingBracket) {\n            closingBrackets.remove(at: closingBracket)\n\
    \        }\n    }\n    return openingBrackets.count == 0", "    let openingBrackets\
    \ = brackets.components(separatedBy: \"<\")\n    let closingBrackets = brackets.components(separatedBy:\
    \ \">\")\n    \n    if openingBrackets.count != closingBrackets.count {\n    \
    \    return false\n    }\n    \n    for i in 0..<openingBrackets.count {\n   \
    \     if openingBrackets[i] != closingBrackets[i] {\n            return false\n\
    \        }\n    }\n    \n    return true", "    let openingBrackets = brackets.components(separatedBy:\
    \ \"<\")\n    let closingBrackets = brackets.components(separatedBy: \">\")\n\
    \    \n    if openingBrackets.count != closingBrackets.count {\n        return\
    \ false\n    }\n    \n    for openingBracket in openingBrackets {\n        if\
    \ !closingBrackets.contains(where: { $0 == openingBracket }) {\n            return\
    \ false\n        }\n    }\n    \n    return true", "    var openingBrackets =\
    \ brackets.characters\n    var closingBrackets = brackets.characters\n    var\
    \ openingBracketsCount = brackets.characters.count\n    var closingBracketsCount\
    \ = brackets.characters.count\n    var openingBracketsIndex = 0\n    var closingBracketsIndex\
    \ = 0\n    var openingBracketsCountIndex = 0\n    var closingBracketsCountIndex\
    \ = 0\n\n    while openingBracketsIndex < openingBracketsCount {\n        openingBracketsCountIndex\
    \ += 1\n        if openingBracketsCountIndex == openingBracketsCount {\n     \
    \       openingBracketsCountIndex = 0\n            openingBracketsIndex += 1\n\
    \        }\n        if openingBrackets[openingBracketsIndex] == '<' {\n      \
    \      openingBracketsIndex += 1\n            openingBracketsCountIndex += 1\n\
    \        }\n    }\n\n    while closingBracketsIndex < closingBracketsCount {\n\
    \        closingBracketsCountIndex += 1\n        if closingBracketsCountIndex\
    \ == closingBracketsCount {\n            closingBracketsCountIndex = 0\n     \
    \       closingBracketsIndex += 1\n        }\n        if closingBrackets[closingBracketsIndex]\
    \ == '>' {\n            closingBracketsIndex += 1\n            closingBracketsCountIndex\
    \ += 1\n        }\n    }\n\n    if openingBracketsIndex == openingBracketsCount\
    \ {\n        return true\n    }\n\n    if closingBracketsIndex == closingBracketsCount\
    \ {\n        return false\n    }\n\n    if openingBracketsIndex < closingBracketsIndex\
    \ {\n        return true\n    }\n\n    return false", "    var openingBrackets\
    \ = brackets.characters\n    var closingBrackets = brackets.characters\n    var\
    \ openingBracketIndex = brackets.startIndex\n    var closingBracketIndex = brackets.startIndex\n\
    \n    while openingBracketIndex < brackets.endIndex {\n        let openingBracket\
    \ = brackets[openingBracketIndex]\n        let closingBracket = brackets[closingBracketIndex]\n\
    \n        if openingBracket == \"<\" {\n            openingBracketIndex += 1\n\
    \        } else if openingBracket == \">\" {\n            openingBracketIndex\
    \ += 1\n            closingBracketIndex += 1\n        } else {\n            openingBracketIndex\
    \ += 1\n            closingBracketIndex += 1\n        }\n\n        if openingBracketIndex\
    \ >= brackets.endIndex {\n            return false\n        }\n\n        if openingBracket\
    \ != closingBracket {\n            return false\n        }\n    }\n\n    return\
    \ true", "    let openingBrackets = brackets.components(separatedBy: \"<\")\n\
    \    let closingBrackets = brackets.components(separatedBy: \">\")\n    \n   \
    \ if openingBrackets.count != closingBrackets.count {\n        return false\n\
    \    }\n    \n    for i in 0..<openingBrackets.count {\n        if openingBrackets[i]\
    \ != closingBrackets[i] {\n            return false\n        }\n    }\n    \n\
    \    return true", "    let openingBrackets = brackets.components(separatedBy:\
    \ \"<\")\n    let closingBrackets = brackets.components(separatedBy: \">\")\n\
    \    \n    if openingBrackets.count != closingBrackets.count {\n        return\
    \ false\n    }\n    \n    for i in 0..<openingBrackets.count {\n        if openingBrackets[i]\
    \ != closingBrackets[i] {\n            return false\n        }\n    }\n    \n\
    \    return true", "    var openingBrackets = brackets.characters\n    var closingBrackets\
    \ = brackets.characters\n    var openingBracketIndex = brackets.startIndex\n \
    \   var closingBracketIndex = brackets.startIndex\n    var openingBracketCount\
    \ = 0\n    var closingBracketCount = 0\n    while openingBracketIndex < brackets.endIndex\
    \ {\n        let openingBracket = brackets[openingBracketIndex]\n        if openingBracket\
    \ == \"<\" {\n            openingBracketCount += 1\n        } else if openingBracket\
    \ == \">\" {\n            openingBracketCount -= 1\n        }\n        openingBracketIndex\
    \ += 1\n    }\n    while closingBracketIndex < brackets.endIndex {\n        let\
    \ closingBracket = brackets[closingBracketIndex]\n        if closingBracket ==\
    \ \"<\" {\n            closingBracketCount += 1\n        } else if closingBracket\
    \ == \">\" {\n            closingBracketCount -= 1\n        }\n        closingBracketIndex\
    \ += 1\n    }\n    return openingBracketCount == 0 && closingBracketCount == 0",
  "    var openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \    var openingBracketCount = brackets.characters.count\n    var closingBracketCount\
    \ = brackets.characters.count\n\n    // If there are no brackets, return true\n\
    \    if openingBracketCount == 0 || closingBracketCount == 0 {\n        return\
    \ true\n    }\n\n    // If there are only 1 opening bracket, return true\n   \
    \ if openingBracketCount == 1 {\n        return true\n    }\n\n    // If there\
    \ are only 1 closing bracket, return true\n    if closingBracketCount == 1 {\n\
    \        return true\n    }\n\n    // If there are 2 or more opening brackets,\
    \ return false\n    if openingBracketCount > 1 {\n        return false\n    }\n\
    \n    // If there are 2 or more closing brackets, return false\n    if closingBracketCount\
    \ > 1 {\n        return false\n    }\n\n    // If there are 3 or more opening\
    \ brackets, return true\n    if openingBracketCount > 2 {\n        return true\n\
    \    }\n\n    // If there are 3 or more closing brackets, return true\n    if\
    \ closingBracketCount > 2 {\n        return true\n    }\n\n    // If there are\
    \ 4 or more opening brackets, return false\n    if openingBracketCount > 3 {\n\
    \        return false\n    }\n\n    // If there are 4 or more closing brackets,\
    \ return false\n    if closingBracketCount > 3 {\n        return false\n    }\n\
    \n    // If there are 5 or more opening brackets, return true\n    if openingBracketCount\
    \ > 4 {\n        return true\n    }\n\n    // If there are 5 or more closing brackets,\
    \ return true\n    if closingBracketCount > 4 {\n        return true\n    }\n\n\
    \    // If there are 6 opening brackets, return false\n    if openingBracketCount\
    \ > 5 {\n        return false\n    }\n\n    // If there are 6 closing brackets,\
    \ return false\n    if closingBracketCount > 5 {\n        return false\n    }\n\
    \n    // If there are 7 opening brackets, return true\n    if openingBracketCount\
    \ > 6 {\n        return true\n    }\n\n    // If there are 7 closing brackets,\
    \ return true\n    if closingBracketCount > 6 {\n        return true\n    }\n\n\
    \    // If there are 8 opening brackets, return false\n    if openingBracketCount\
    \ > 7 {\n        return false\n    }\n\n    // If there are 8 closing brackets,\
    \ return false\n    if closingBracketCount > 7 {\n        return false\n    }\n\
    \n    // If there are 9 opening brackets, return true\n    if openingBracketCount\
    \ > 8 {\n        return true\n    }\n\n    // If there are 9 closing brackets,\
    \ return true\n    if closingBracketCount > 8 {\n        return true\n    }\n\n\
    \    // If there are ", "    var openingBrackets = brackets.characters\n    var\
    \ closingBrackets = brackets.characters\n\n    var openingBracketIndex = openingBrackets.startIndex\n\
    \    var closingBracketIndex = closingBrackets.startIndex\n\n    while openingBracketIndex\
    \ < openingBrackets.endIndex {\n        if openingBrackets[openingBracketIndex]\
    \ != closingBrackets[closingBracketIndex] {\n            return false\n      \
    \  }\n        openingBracketIndex += 1\n        closingBracketIndex += 1\n   \
    \ }\n\n    return true", "    var openingBrackets = brackets.characters\n    var\
    \ closingBrackets = brackets.characters\n\n    var openingBracketsCount = 1\n\
    \    var closingBracketsCount = 1\n\n    for openingBracket in openingBrackets\
    \ {\n        if openingBracket == \"<\" {\n            openingBracketsCount++\n\
    \        } else if openingBracket == \">\" {\n            closingBracketsCount++\n\
    \        }\n    }\n\n    if openingBracketsCount != closingBracketsCount {\n \
    \       return false\n    }\n\n    for openingBracket in openingBrackets {\n \
    \       if openingBracket == \"<\" {\n            openingBracketsCount--\n   \
    \     } else if openingBracket == \">\" {\n            closingBracketsCount--\n\
    \        }\n    }\n\n    if openingBracketsCount != 0 {\n        return false\n\
    \    }\n\n    return true", "    var opening = brackets.characters\n    var closing\
    \ = brackets.characters\n    var openingCount = brackets.characters.count\n  \
    \  var closingCount = brackets.characters.count\n    var openingIndex = 0\n  \
    \  var closingIndex = 0\n    while openingIndex < openingCount {\n        opening\
    \ = brackets.substringWithRange(NSMakeRange(openingIndex, 1))\n        closing\
    \ = brackets.substringWithRange(NSMakeRange(closingIndex, 1))\n        if opening\
    \ == \"<\" {\n            if closing == \">\" {\n                openingIndex++\n\
    \                closingIndex++\n            } else {\n                openingIndex++\n\
    \                closingIndex++\n                openingCount--\n            \
    \    closingCount--\n            }\n        } else if opening == \">\" {\n   \
    \         if closing == \"<\" {\n                openingIndex++\n            \
    \    closingIndex++\n            } else {\n                openingIndex++\n  \
    \              closingIndex++\n                openingCount--\n              \
    \  closingCount--\n            }\n        } else {\n            openingIndex++\n\
    \            closingIndex++\n            openingCount--\n            closingCount--\n\
    \        }\n    }\n    return openingCount == 0 && closingCount == 0", "    var\
    \ openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \    var openingBracketIndex = brackets.startIndex\n    var closingBracketIndex\
    \ = brackets.startIndex\n    var openingBracketCount = 0\n    var closingBracketCount\
    \ = 0\n\n    while openingBracketIndex < brackets.endIndex {\n        let openingBracket\
    \ = brackets[openingBracketIndex]\n        if openingBracket == \"<\" {\n    \
    \        openingBracketCount += 1\n        } else if openingBracket == \">\" {\n\
    \            openingBracketCount -= 1\n        }\n        openingBracketIndex\
    \ += 1\n    }\n\n    while closingBracketIndex < brackets.endIndex {\n       \
    \ let closingBracket = brackets[closingBracketIndex]\n        if closingBracket\
    \ == \"<\" {\n            closingBracketCount += 1\n        } else if closingBracket\
    \ == \">\" {\n            closingBracketCount -= 1\n        }\n        closingBracketIndex\
    \ += 1\n    }\n\n    return openingBracketCount == 0 && closingBracketCount ==\
    \ 0", "    var openingBrackets = brackets.characters\n    var closingBrackets\
    \ = brackets.characters\n    var openingBracketIndex = brackets.startIndex\n \
    \   var closingBracketIndex = brackets.startIndex\n\n    while openingBracketIndex\
    \ < brackets.endIndex {\n        let openingBracket = brackets[openingBracketIndex]\n\
    \        let closingBracket = brackets[closingBracketIndex]\n\n        if openingBracket\
    \ == \"<\" {\n            if closingBracket != \">\" {\n                openingBracketIndex\
    \ += 1\n            } else {\n                closingBracketIndex += 1\n     \
    \       }\n        } else if openingBracket == \">\" {\n            if closingBracket\
    \ != \"<\" {\n                openingBracketIndex += 1\n            } else {\n\
    \                closingBracketIndex += 1\n            }\n        } else {\n \
    \           if openingBracket != closingBracket {\n                return false\n\
    \            }\n            openingBracketIndex += 1\n            closingBracketIndex\
    \ += 1\n        }\n    }\n\n    return openingBracketIndex == brackets.endIndex",
  "    var openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \    openingBrackets.removeLast()\n    closingBrackets.removeFirst()\n    if openingBrackets.isEmpty\
    \ {\n        return true\n    }\n    if closingBrackets.isEmpty {\n        return\
    \ false\n    }\n    if openingBrackets.first == closingBrackets.last {\n     \
    \   return false\n    }\n    if openingBrackets.first < closingBrackets.first\
    \ {\n        return false\n    }\n    if openingBrackets.last > closingBrackets.last\
    \ {\n        return false\n    }\n    return true", "    var opening = brackets.characters\n\
    \    var closing = brackets.characters\n    var openingCount = brackets.characters.count\n\
    \    var closingCount = brackets.characters.count\n    var openingIndex = 0\n\
    \    var closingIndex = 0\n    while openingIndex < openingCount {\n        opening\
    \ = brackets.substringWithRange(NSMakeRange(openingIndex, openingCount))\n   \
    \     closing = brackets.substringWithRange(NSMakeRange(closingIndex, closingCount))\n\
    \        if opening == \">\" && closing == \"<\" {\n            openingIndex++\n\
    \            closingIndex++\n        } else if opening == \"<\" && closing ==\
    \ \">\" {\n            openingIndex++\n            closingIndex++\n        } else\
    \ if opening == \"<\" && closing == \"<\" {\n            openingIndex++\n    \
    \        closingIndex++\n        } else if opening == \">\" && closing == \">\"\
    \ {\n            openingIndex++\n            closingIndex++\n        } else {\n\
    \            return false\n        }\n    }\n    return true", "    var openingBrackets\
    \ = brackets.characters\n    var closingBrackets = brackets.characters\n    var\
    \ openingBracketIndex = brackets.startIndex\n    var closingBracketIndex = brackets.startIndex\n\
    \n    while openingBracketIndex < brackets.endIndex {\n        openingBracketIndex\
    \ = openingBracketIndex.successor()\n        closingBracketIndex = closingBracketIndex.successor()\n\
    \        if openingBrackets[openingBracketIndex] != closingBrackets[closingBracketIndex]\
    \ {\n            return false\n        }\n    }\n    return true", "    var opening_brackets\
    \ = brackets.characters\n    var closing_brackets = brackets.characters\n    var\
    \ opening_brackets_count = brackets.characters.count\n    var closing_brackets_count\
    \ = brackets.characters.count\n    var opening_brackets_index = opening_brackets.startIndex\n\
    \    var closing_brackets_index = closing_brackets.startIndex\n\n    while opening_brackets_index\
    \ < opening_brackets_count {\n        if opening_brackets[opening_brackets_index]\
    \ == \">\" {\n            opening_brackets_index++\n            closing_brackets_index--\n\
    \        } else {\n            opening_brackets_index++\n        }\n    }\n\n\
    \    while closing_brackets_index > 0 {\n        if closing_brackets[closing_brackets_index-1]\
    \ == \"<\" {\n            opening_brackets_index--\n            closing_brackets_index--\n\
    \        } else {\n            closing_brackets_index--\n        }\n    }\n\n\
    \    return opening_brackets_count == closing_brackets_count", "    var openingBrackets\
    \ = brackets.characters\n    var closingBrackets = brackets.characters\n    openingBrackets.removeLast()\n\
    \    closingBrackets.removeFirst()\n    if openingBrackets.isEmpty() {\n     \
    \   return true\n    }\n    if closingBrackets.isEmpty() {\n        return false\n\
    \    }\n    if openingBrackets.first == closingBrackets.last {\n        return\
    \ true\n    }\n    if openingBrackets.first < closingBrackets.first {\n      \
    \  return false\n    }\n    return true", "    let openingBrackets = brackets.components(separatedBy:\
    \ \"<\")\n    let closingBrackets = brackets.components(separatedBy: \">\")\n\
    \    \n    if openingBrackets.count != closingBrackets.count {\n        return\
    \ false\n    }\n    \n    for i in 0..<openingBrackets.count {\n        if openingBrackets[i]\
    \ != closingBrackets[i] {\n            return false\n        }\n    }\n    \n\
    \    return true", "    var openingBrackets = brackets.characters\n    var closingBrackets\
    \ = brackets.characters\n    openingBrackets.removeLast()\n    closingBrackets.removeLast()\n\
    \    if openingBrackets.isEmpty() {\n        return true\n    }\n    if closingBrackets.isEmpty()\
    \ {\n        return false\n    }\n    var openingBracket = openingBrackets.first!\n\
    \    var closingBracket = closingBrackets.first!\n    while openingBracket !=\
    \ closingBracket {\n        if openingBracket == \"<\" {\n            openingBrackets.removeFirst()\n\
    \            closingBrackets.removeFirst()\n        } else {\n            openingBrackets.removeLast()\n\
    \            closingBrackets.removeLast()\n        }\n        if openingBrackets.isEmpty()\
    \ {\n            return true\n        }\n        if closingBrackets.isEmpty()\
    \ {\n            return false\n        }\n        openingBracket = openingBrackets.first!\n\
    \        closingBracket = closingBrackets.first!\n    }\n    return false", " \
    \   var openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \    var openingBracketCount = brackets.characters.count\n    var closingBracketCount\
    \ = brackets.characters.count\n    var openingBracketIndex = 0\n    var closingBracketIndex\
    \ = 0\n    var openingBracketFound = false\n    var closingBracketFound = false\n\
    \n    while openingBracketIndex < openingBracketCount {\n        openingBracketFound\
    \ = false\n        closingBracketFound = false\n        while openingBracketIndex\
    \ < openingBracketCount && !openingBracketFound {\n            if openingBrackets[openingBracketIndex]\
    \ == '<' {\n                openingBracketFound = true\n                openingBracketIndex\
    \ += 1\n            } else if openingBrackets[openingBracketIndex] == '>' {\n\
    \                closingBracketFound = true\n                closingBracketIndex\
    \ += 1\n            } else {\n                openingBracketIndex += 1\n     \
    \       }\n        }\n\n        if openingBracketFound {\n            if closingBracketFound\
    \ {\n                openingBracketIndex += 1\n            } else {\n        \
    \        openingBracketIndex += 1\n                closingBracketIndex += 1\n\
    \            }\n        } else {\n            if closingBracketFound {\n     \
    \           closingBracketIndex += 1\n            } else {\n                openingBracketIndex\
    \ += 1\n                closingBracketIndex += 1\n                openingBracketIndex\
    \ += 1\n                closingBracketIndex += 1\n            }\n        }\n \
    \   }\n\n    return openingBracketIndex == openingBracketCount && closingBracketIndex\
    \ == closingBracketCount", "    var openingBrackets = brackets.characters\n  \
    \  var closingBrackets = brackets.characters\n    var openingBracketIndex = brackets.startIndex\n\
    \    var closingBracketIndex = brackets.startIndex\n    var openingBracketCount\
    \ = 0\n    var closingBracketCount = 0\n\n    while openingBracketIndex < brackets.endIndex\
    \ {\n        switch brackets[openingBracketIndex] {\n        case \"<\":\n   \
    \         openingBracketCount += 1\n        case \"<=\":\n            openingBracketCount\
    \ += 1\n        case \"<<\":\n            openingBracketCount += 1\n        case\
    \ \"<<=\":\n            openingBracketCount += 1\n        case \"<=\":\n     \
    \       openingBracketCount += 1\n        case \"<<=\":\n            openingBracketCount\
    \ += 1\n        case \"<<<\":\n            openingBracketCount += 1\n        case\
    \ \"<<<=\":\n            openingBracketCount += 1\n        case \"<<<=\":\n  \
    \          openingBracketCount += 1\n        case \"<<<=\":\n            openingBracketCount\
    \ += 1\n        case \"<<<=\":\n            openingBracketCount += 1\n       \
    \ case \"<<<=\":\n            openingBracketCount += 1\n        case \"<<<=\"\
    :\n            openingBracketCount += 1\n        case \"<<<=\":\n            openingBracketCount\
    \ += 1\n        case \"<<<=\":\n            openingBracketCount += 1\n       \
    \ case \"<<<=\":\n            openingBracketCount += 1\n        case \"<<<=\"\
    :\n            openingBracketCount += 1\n        case \"<<<=\":\n            openingBracketCount\
    \ += 1\n        case \"<<<=\":\n            openingBracketCount += 1\n       \
    \ case \"<<<=\":\n            openingBracketCount += 1\n        case \"<<<=\"\
    :\n            openingBracketCount += 1\n        case \"<<<=\":\n            openingBracketCount\
    \ += 1\n        case \"<<<=\":\n            openingBracketCount += 1\n       \
    \ case \"<<<=\":\n            openingBracketCount += 1\n        case \"<<<=\"\
    :\n            openingBracketCount += 1\n        case \"<<<=\":\n            openingBracketCount\
    \ += 1\n        case \"<<<=\":\n            openingBracketCount += 1\n       \
    \ case \"<<<=\":\n            openingBracketCount += 1\n        case \"<<<=\"\
    :\n            openingBracketCount += 1\n        case \"<<<=\":\n", "    var opening_brackets\
    \ = brackets.characters\n    var closing_brackets = brackets.characters\n    var\
    \ opening_brackets_count = brackets.characters.count\n    var closing_brackets_count\
    \ = brackets.characters.count\n    var opening_brackets_index = opening_brackets.startIndex\n\
    \    var closing_brackets_index = closing_brackets.startIndex\n    while opening_brackets_index\
    \ < opening_brackets_count {\n        if opening_brackets[opening_brackets_index]\
    \ == \">\" {\n            opening_brackets_index++\n            closing_brackets_index--\n\
    \        } else if opening_brackets[opening_brackets_index] != \"<\" {\n     \
    \       return false\n        }\n    }\n    while closing_brackets_index >= 0\
    \ {\n        if closing_brackets[closing_brackets_index] == \">\" {\n        \
    \    opening_brackets_index--\n            closing_brackets_index++\n        }\
    \ else if closing_brackets[closing_brackets_index] != \"<\" {\n            return\
    \ false\n        }\n    }\n    return opening_brackets_count == closing_brackets_count",
  "    var opening_brackets = brackets.characters\n    var closing_brackets = brackets.characters\n\
    \    opening_brackets.removeFirst()\n    closing_brackets.removeLast()\n    if\
    \ opening_brackets.count != closing_brackets.count {\n        return false\n \
    \   }\n    var opening_bracket = opening_brackets.first!\n    var closing_bracket\
    \ = closing_brackets.last!\n    if opening_bracket != closing_bracket {\n    \
    \    return false\n    }\n    return true", "    let openingBrackets = brackets.components(separatedBy:\
    \ \"<\")\n    let closingBrackets = brackets.components(separatedBy: \">\")\n\
    \    \n    if openingBrackets.count != closingBrackets.count {\n        return\
    \ false\n    }\n    \n    for i in 0..<openingBrackets.count {\n        if openingBrackets[i]\
    \ != closingBrackets[i] {\n            return false\n        }\n    }\n    \n\
    \    return true", "    var openingBrackets = brackets.characters\n    var closingBrackets\
    \ = brackets.characters\n    var openingBracketIndex = brackets.startIndex\n \
    \   var closingBracketIndex = brackets.startIndex\n\n    while openingBracketIndex\
    \ < brackets.endIndex {\n        guard openingBrackets[openingBracketIndex] ==\
    \ \">\" else {\n            return false\n        }\n        openingBracketIndex\
    \ += 1\n        guard openingBrackets[openingBracketIndex] == \">\" else {\n \
    \           return false\n        }\n        openingBracketIndex += 1\n      \
    \  guard openingBrackets[openingBracketIndex] == \">\" else {\n            return\
    \ false\n        }\n        openingBracketIndex += 1\n        guard openingBrackets[openingBracketIndex]\
    \ == \">\" else {\n            return false\n        }\n        openingBracketIndex\
    \ += 1\n        guard openingBrackets[openingBracketIndex] == \">\" else {\n \
    \           return false\n        }\n        openingBracketIndex += 1\n      \
    \  guard openingBrackets[openingBracketIndex] == \">\" else {\n            return\
    \ false\n        }\n        openingBracketIndex += 1\n        guard openingBrackets[openingBracketIndex]\
    \ == \">\" else {\n            return false\n        }\n        openingBracketIndex\
    \ += 1\n        guard openingBrackets[openingBracketIndex] == \">\" else {\n \
    \           return false\n        }\n        openingBracketIndex += 1\n      \
    \  guard openingBrackets[openingBracketIndex] == \">\" else {\n            return\
    \ false\n        }\n        openingBracketIndex += 1\n        guard openingBrackets[openingBracketIndex]\
    \ == \">\" else {\n            return false\n        }\n        openingBracketIndex\
    \ += 1\n        guard openingBrackets[openingBracketIndex] == \">\" else {\n \
    \           return false\n        }\n        openingBracketIndex += 1\n      \
    \  guard openingBrackets[openingBracketIndex] == \">\" else {\n            return\
    \ false\n        }\n        openingBracketIndex += 1\n        guard openingBrackets[openingBracketIndex]\
    \ == \">\" else {\n            return false\n        }\n        openingBracketIndex\
    \ += 1\n        guard openingBrackets[openingBracketIndex] == \">\" else {\n \
    \           return false\n        }\n        openingBracketIndex += 1\n      \
    \  guard openingBrackets[openingBracketIndex] == \">\" else {\n            return\
    \ false\n        }\n        open", "    let openingBrackets = brackets.components(separatedBy:\
    \ \"<\")\n    let closingBrackets = brackets.components(separatedBy: \">\")\n\
    \    if openingBrackets.count != closingBrackets.count {\n        return false\n\
    \    }\n    for openingBracket in openingBrackets {\n        let closingBracket\
    \ = closingBrackets.firstIndex(of: openingBracket)\n        if closingBracket\
    \ == nil {\n            return false\n        }\n        if openingBracket !=\
    \ closingBracket! {\n            return false\n        }\n    }\n    return true",
  "    let openingBrackets = brackets.components(separatedBy: \"<\")\n    let closingBrackets\
    \ = brackets.components(separatedBy: \">\")\n    \n    if openingBrackets.count\
    \ != closingBrackets.count {\n        return false\n    }\n    \n    for openingBracket\
    \ in openingBrackets {\n        if let index = closingBrackets.index(of: openingBracket)\
    \ {\n            closingBrackets.remove(at: index)\n        }\n    }\n    \n \
    \   return openingBrackets.count == 0", "    var opening_brackets = brackets.characters\n\
    \    var closing_brackets = brackets.characters\n\n    var opening_brackets_count\
    \ = opening_brackets.count\n    var closing_brackets_count = closing_brackets.count\n\
    \n    if opening_brackets_count != closing_brackets_count {\n        return false\n\
    \    }\n\n    var opening_brackets_index = opening_brackets.startIndex\n    var\
    \ closing_brackets_index = closing_brackets.startIndex\n\n    while opening_brackets_index\
    \ < opening_brackets_count {\n        let opening_bracket = opening_brackets[opening_brackets_index]\n\
    \        let closing_bracket = closing_brackets[closing_brackets_index]\n\n  \
    \      if opening_bracket != closing_bracket {\n            return false\n   \
    \     }\n\n        opening_brackets_index++\n        closing_brackets_index++\n\
    \    }\n\n    return true", "    var openingBrackets = brackets.characters\n \
    \   var closingBrackets = brackets.characters\n    openingBrackets.removeLast()\n\
    \    closingBrackets.removeFirst()\n    if openingBrackets.isEmpty() {\n     \
    \   return true\n    }\n    if closingBrackets.isEmpty() {\n        return false\n\
    \    }\n    if openingBrackets.first == closingBrackets.last {\n        return\
    \ false\n    }\n    if openingBrackets.first == \">\" && closingBrackets.first\
    \ == \"<\" {\n        return false\n    }\n    if openingBrackets.first == \"\
    <\" && closingBrackets.first == \">\" {\n        return false\n    }\n    if openingBrackets.first\
    \ == \"<\" && closingBrackets.first == \"<\" {\n        return false\n    }\n\
    \    return true", "    var openingBrackets = brackets.characters\n    var closingBrackets\
    \ = brackets.characters\n    openingBrackets.removeLast()\n    closingBrackets.removeLast()\n\
    \    var openingBracketsCount = openingBrackets.count\n    var closingBracketsCount\
    \ = closingBrackets.count\n    if openingBracketsCount != closingBracketsCount\
    \ {\n        return false\n    }\n    var openingBracketIndex = 0\n    var closingBracketIndex\
    \ = 0\n    while openingBracketIndex < openingBracketsCount {\n        if openingBrackets[openingBracketIndex]\
    \ != closingBrackets[closingBracketIndex] {\n            return false\n      \
    \  }\n        openingBracketIndex += 1\n        closingBracketIndex += 1\n   \
    \ }\n    return true", "    var openingBrackets = brackets.characters\n    var\
    \ closingBrackets = brackets.characters\n    var openingBracketIndex = brackets.startIndex\n\
    \    var closingBracketIndex = brackets.startIndex\n    while openingBracketIndex\
    \ < brackets.endIndex {\n        openingBracketIndex = openingBracketIndex.successor()\n\
    \        closingBracketIndex = closingBracketIndex.successor()\n        if openingBracketIndex\
    \ == brackets.endIndex {\n            openingBracketIndex = brackets.startIndex\n\
    \        }\n        if closingBracketIndex == brackets.endIndex {\n          \
    \  closingBracketIndex = brackets.startIndex\n        }\n        if openingBrackets[openingBracketIndex]\
    \ != closingBrackets[closingBracketIndex] {\n            return false\n      \
    \  }\n    }\n    return true", "    let openingBrackets = brackets.components(separatedBy:\
    \ \"<\")\n    let closingBrackets = brackets.components(separatedBy: \">\")\n\
    \    if openingBrackets.count != closingBrackets.count {\n        return false\n\
    \    }\n    for openingBracket in openingBrackets {\n        if let closingBracket\
    \ = closingBrackets.firstIndex(of: openingBracket) {\n            closingBrackets.remove(at:\
    \ closingBracket)\n        }\n    }\n    return openingBrackets.count == 0", " \
    \   var opening = brackets.characters\n    var closing = brackets.characters\n\
    \    opening.removeLast()\n    closing.removeLast()\n    if opening.isEmpty {\n\
    \        return closing.isEmpty && closing.count == 0\n    }\n    if closing.isEmpty\
    \ {\n        return opening.count == 0\n    }\n    if opening.count != closing.count\
    \ {\n        return false\n    }\n    if opening.first != closing.first {\n  \
    \      return false\n    }\n    if opening.last != closing.last {\n        return\
    \ false\n    }\n    if opening.count == 1 {\n        return true\n    }\n    if\
    \ opening.count == 2 {\n        return opening.first == closing.last\n    }\n\
    \    if opening.count == 3 {\n        return opening.first == closing.last &&\
    \ opening.last == closing.first\n    }\n    if opening.count == 4 {\n        return\
    \ opening.first == closing.last && opening.last == closing.first && opening.first\
    \ == closing.last\n    }\n    return false", "    var openingBrackets = brackets.characters\n\
    \    var closingBrackets = brackets.characters\n    var openingBracketIndex =\
    \ brackets.startIndex\n    var closingBracketIndex = brackets.startIndex\n   \
    \ var openingBracketCount = 0\n    var closingBracketCount = 0\n    while openingBracketIndex\
    \ < brackets.endIndex {\n        switch brackets[openingBracketIndex] {\n    \
    \    case \"<\":\n            openingBracketCount += 1\n        case \"<=\":\n\
    \            openingBracketCount += 1\n        case \"=\":\n            openingBracketCount\
    \ += 1\n        case \"==\":\n            openingBracketCount += 1\n        case\
    \ \"!=\":\n            openingBracketCount += 1\n        case \"<=\":\n      \
    \      openingBracketCount += 1\n        case \"<\":\n            openingBracketCount\
    \ += 1\n        case \"<<\":\n            openingBracketCount += 1\n        case\
    \ \"<=\":\n            openingBracketCount += 1\n        case \">\":\n       \
    \     openingBracketCount += 1\n        case \">=\":\n            openingBracketCount\
    \ += 1\n        case \">>\":\n            openingBracketCount += 1\n        case\
    \ \">=\":\n            openingBracketCount += 1\n        case \"<<=\":\n     \
    \       openingBracketCount += 1\n        case \"<<<\":\n            openingBracketCount\
    \ += 1\n        case \"<<<=\":\n            openingBracketCount += 1\n       \
    \ case \"<<<=\":\n            openingBracketCount += 1\n        case \"<<<=\"\
    :\n            openingBracketCount += 1\n        case \"<<<=\":\n            openingBracketCount\
    \ += 1\n        case \"<<<=\":\n            openingBracketCount += 1\n       \
    \ case \"<<<=\":\n            openingBracketCount += 1\n        case \"<<<=\"\
    :\n            openingBracketCount += 1\n        case \"<<<=\":\n            openingBracketCount\
    \ += 1\n        case \"<<<=\":\n            openingBracketCount += 1\n       \
    \ case \"<<<=\":\n            openingBracketCount += 1\n        case \"<<<=\"\
    :\n            openingBracketCount += 1\n        case \"<<<=\":\n            openingBracketCount\
    \ += 1\n        case \"<<<=\":\n            openingBracketCount += 1\n       \
    \ case \"<<<=\":\n            openingBracketCount += 1\n        case \"<<<=\"\
    :\n            openingBracketCount += 1\n        case \"<<<=\":\n            ",
  "    var openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \n    var openingBracketIndex = openingBrackets.startIndex\n    var closingBracketIndex\
    \ = closingBrackets.startIndex\n\n    while openingBracketIndex < openingBrackets.endIndex\
    \ {\n        if openingBrackets[openingBracketIndex] != '<' {\n            return\
    \ false\n        }\n        openingBracketIndex += 1\n    }\n\n    while closingBracketIndex\
    \ < closingBrackets.endIndex {\n        if closingBrackets[closingBracketIndex]\
    \ != '>' {\n            return false\n        }\n        closingBracketIndex +=\
    \ 1\n    }\n\n    if openingBracketIndex == openingBrackets.endIndex && closingBracketIndex\
    \ == closingBrackets.endIndex {\n        return true\n    }\n\n    return false",
  "    var openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \    var openingBracketsCount = brackets.characters.count\n    var closingBracketsCount\
    \ = brackets.characters.count\n\n    for openingBracket in openingBrackets {\n\
    \        if openingBracket == \"<\" {\n            openingBracketsCount--\n  \
    \      } else if openingBracket == \">\" {\n            openingBracketsCount++\n\
    \        }\n    }\n\n    for closingBracket in closingBrackets {\n        if closingBracket\
    \ == \"<\" {\n            closingBracketsCount--\n        } else if closingBracket\
    \ == \">\" {\n            closingBracketsCount++\n        }\n    }\n\n    return\
    \ openingBracketsCount == 0 && closingBracketsCount == 0", "    let openingBrackets\
    \ = brackets.components(separatedBy: \"<\")\n    let closingBrackets = brackets.components(separatedBy:\
    \ \">\")\n    \n    if openingBrackets.count != closingBrackets.count {\n    \
    \    return false\n    }\n    \n    for openingBracket in openingBrackets {\n\
    \        if let closingBracket = closingBrackets.first {\n            if openingBracket\
    \ != closingBracket {\n                return false\n            }\n        }\n\
    \    }\n    \n    return true", "    var openingBrackets = brackets.characters\n\
    \    var closingBrackets = brackets.characters\n    var openingBracketIndex =\
    \ brackets.startIndex\n    var closingBracketIndex = brackets.startIndex\n\n \
    \   while openingBracketIndex < brackets.endIndex {\n        openingBracketIndex\
    \ = openingBracketIndex + 1\n        if openingBrackets[openingBracketIndex] !=\
    \ \">\" {\n            continue\n        }\n        openingBracketIndex = openingBracketIndex\
    \ + 1\n        if openingBrackets[openingBracketIndex] != \"<\" {\n          \
    \  continue\n        }\n        openingBracketIndex = openingBracketIndex + 1\n\
    \        if openingBrackets[openingBracketIndex] != \">\" {\n            continue\n\
    \        }\n        openingBracketIndex = openingBracketIndex + 1\n        if\
    \ openingBrackets[openingBracketIndex] != \"<\" {\n            continue\n    \
    \    }\n        openingBracketIndex = openingBracketIndex + 1\n        if openingBrackets[openingBracketIndex]\
    \ != \">\" {\n            continue\n        }\n        openingBracketIndex = openingBracketIndex\
    \ + 1\n        if openingBrackets[openingBracketIndex] != \"<\" {\n          \
    \  continue\n        }\n        openingBracketIndex = openingBracketIndex + 1\n\
    \        if openingBrackets[openingBracketIndex] != \">\" {\n            continue\n\
    \        }\n        openingBracketIndex = openingBracketIndex + 1\n        if\
    \ openingBrackets[openingBracketIndex] != \"<\" {\n            continue\n    \
    \    }\n        openingBracketIndex = openingBracketIndex + 1\n        if openingBrackets[openingBracketIndex]\
    \ != \">\" {\n            continue\n        }\n        openingBracketIndex = openingBracketIndex\
    \ + 1\n        if openingBrackets[openingBracketIndex] != \"<\" {\n          \
    \  continue\n        }\n        openingBracketIndex = openingBracketIndex + 1\n\
    \        if openingBrackets[openingBracketIndex] != \">\" {\n            continue\n\
    \        }\n        openingBracketIndex = openingBracketIndex + 1\n        if\
    \ openingBrackets[openingBracketIndex] != \"<\" {\n            continue\n    \
    \    }\n        openingBracketIndex = openingBracketIndex + 1\n        if openingBrackets[openingBracketIndex]\
    \ != \">\" {\n            continue\n        }\n        openingBracketIndex = openingBracketIndex\
    \ + 1\n        if openingBrackets[openingBracketIndex] != \"<\" {\n          \
    \  continue", "    var openingBrackets = brackets.characters\n    var closingBrackets\
    \ = brackets.characters\n    var openingBracketIndex = brackets.startIndex\n \
    \   var closingBracketIndex = brackets.startIndex\n    var openingBracketCount\
    \ = 0\n    var closingBracketCount = 0\n\n    while openingBracketIndex < brackets.endIndex\
    \ {\n        let openingBracket = brackets[openingBracketIndex]\n        openingBracketCount\
    \ += 1\n        if openingBracket == \"<\" {\n            if openingBracketIndex\
    \ < brackets.endIndex {\n                let nextOpeningBracket = brackets[openingBracketIndex\
    \ + 1]\n                if nextOpeningBracket == \"<\" {\n                   \
    \ openingBracketIndex += 1\n                } else {\n                    openingBracketIndex\
    \ += 1\n                    openingBracketCount -= 1\n                }\n    \
    \        } else {\n                openingBracketIndex += 1\n                openingBracketCount\
    \ -= 1\n            }\n        } else {\n            if openingBracketIndex <\
    \ brackets.endIndex {\n                let nextOpeningBracket = brackets[openingBracketIndex\
    \ + 1]\n                if nextOpeningBracket == \"<\" {\n                   \
    \ openingBracketIndex += 1\n                } else {\n                    openingBracketIndex\
    \ += 1\n                    openingBracketCount -= 1\n                }\n    \
    \        } else {\n                openingBracketIndex += 1\n                openingBracketCount\
    \ -= 1\n            }\n        }\n    }\n\n    while closingBracketIndex < brackets.endIndex\
    \ {\n        let closingBracket = brackets[closingBracketIndex]\n        closingBracketCount\
    \ += 1\n        if closingBracket == \">\" {\n            if closingBracketIndex\
    \ < brackets.endIndex {\n                let nextClosingBracket = brackets[closingBracketIndex\
    \ + 1]\n                if nextClosingBracket == \">\" {\n                   \
    \ closingBracketIndex += 1\n                } else {\n                    closingBracketIndex\
    \ += 1\n                    closingBracketCount -= 1\n                }\n    \
    \        } else {\n                closingBracketIndex += 1\n                closingBracketCount\
    \ -= 1\n            }\n        } else {\n            if closingBracketIndex <\
    \ brackets.endIndex {\n                let nextClosingBracket = brackets[closingBracketIndex\
    \ + 1]\n                if nextClosingBracket == \">\" {\n                   \
    \ closingBracketIndex += 1\n                } else {\n                    closingBracketIndex\
    \ += 1\n                    closingBracketCount -= 1\n                }\n    \
    \        } else {\n                closingBracketIndex += 1\n                closingBracketCount\
    \ -= 1\n            }\n        }\n    }\n\n    return openingBracketCount == closingBracketCount",
  "    var openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \    var openingBracketIndex = brackets.startIndex\n    var closingBracketIndex\
    \ = brackets.startIndex\n    var openingBracketCount = 0\n    var closingBracketCount\
    \ = 0\n\n    while openingBracketIndex < brackets.endIndex {\n        let openingBracket\
    \ = brackets[openingBracketIndex]\n        if openingBracket == \"<\" {\n    \
    \        openingBracketCount += 1\n        } else if openingBracket == \">\" {\n\
    \            openingBracketCount -= 1\n        }\n        openingBracketIndex\
    \ += 1\n    }\n\n    while closingBracketIndex < brackets.endIndex {\n       \
    \ let closingBracket = brackets[closingBracketIndex]\n        if closingBracket\
    \ == \"<\" {\n            closingBracketCount += 1\n        } else if closingBracket\
    \ == \">\" {\n            closingBracketCount -= 1\n        }\n        closingBracketIndex\
    \ += 1\n    }\n\n    return openingBracketCount == 0 && closingBracketCount ==\
    \ 0", "    var opening = brackets.characters\n    var closing = brackets.characters\n\
    \    var openingIndex = 0\n    var closingIndex = 0\n    while openingIndex <\
    \ opening.count {\n        openingIndex++\n        if opening[openingIndex] ==\
    \ '<' {\n            openingIndex++\n            if openingIndex < opening.count\
    \ {\n                openingIndex++\n                if opening[openingIndex]\
    \ == '>' {\n                    openingIndex++\n                    if openingIndex\
    \ < opening.count {\n                        openingIndex++\n                \
    \        if opening[openingIndex] == '>' {\n                            openingIndex++\n\
    \                            if openingIndex < opening.count {\n             \
    \                   openingIndex++\n                                if opening[openingIndex]\
    \ == '>' {\n                                    openingIndex++\n             \
    \                       if openingIndex < opening.count {\n                  \
    \                      openingIndex++\n                                      \
    \  if opening[openingIndex] == '>' {\n                                       \
    \     openingIndex++\n                                            if openingIndex\
    \ < opening.count {\n                                                openingIndex++\n\
    \                                                if opening[openingIndex] == '>'\
    \ {\n                                                    openingIndex++\n    \
    \                                                if openingIndex < opening.count\
    \ {\n                                                        openingIndex++\n\
    \                                                        if opening[openingIndex]\
    \ == '>' {\n                                                            openingIndex++\n\
    \                                                        }\n                 \
    \                                   }\n                                      \
    \          }\n                                            }\n                \
    \                        }\n                                    }\n          \
    \                      }\n                            }\n                    \
    \    }\n                    }\n                }\n            }\n        }\n \
    \   }\n    while closingIndex < closing.count {\n        closingIndex++\n    \
    \    if closing[closingIndex] == '>' {\n            closingIndex++\n         \
    \   if closingIndex < closing.count {\n                closingIndex++\n      \
    \          if closing[closingIndex] == '>' {\n                    closingIndex++\n\
    \                    if closingIndex < closing.count {\n                     \
    \   closingIndex++\n                        if closing[closingIndex] == '>' {\n\
    \                            closingIndex++\n                            if closingIndex\
    \ < closing.count {\n                                closingIndex++\n        \
    \                        if closing[closingIndex] == '>' {\n                 \
    \                   closingIndex++\n                                    if closingIndex\
    \ < closing.count {\n                                        closingIndex++\n\
    \                                        if closing[closingIndex] == '>' {\n \
    \                                           closingIndex++\n                 \
    \                           if closingIndex < closing.count {\n              \
    \                                  closingIndex++\n                          \
    \                      if closing[closingIndex] == '>' {\n                   \
    \                                 closingIndex++\n                           \
    \                         if closingIndex < closing.count {\n                \
    \                                        closingIndex++\n                    \
    \                                    if closing[closingIndex] == '>' {\n     \
    \                                                       closingIndex++", "   \
    \ let openingBrackets = brackets.components(separatedBy: \"<\")\n    let closingBrackets\
    \ = brackets.components(separatedBy: \">\")\n    if openingBrackets.count != closingBrackets.count\
    \ {\n        return false\n    }\n    for i in 0..<openingBrackets.count {\n \
    \       if openingBrackets[i] != closingBrackets[i] {\n            return false\n\
    \        }\n    }\n    return true", "    var opening = brackets.characters.split{$0\
    \ == \">\"}.count\n    var closing = brackets.characters.split{$0 == \"<\"}.count\n\
    \    if opening != closing {\n        return false\n    }\n    return true", " \
    \   var openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \    openingBrackets.removeLast()\n    closingBrackets.removeFirst()\n    openingBrackets.reverse()\n\
    \    closingBrackets.reverse()\n    for openingBracket in openingBrackets {\n\
    \        if closingBrackets.contains(openingBracket) {\n            return false\n\
    \        }\n    }\n    return true", "    var openingBrackets = brackets.characters\n\
    \    var closingBrackets = brackets.characters\n\n    var openingBracketsCount\
    \ = openingBrackets.count\n    var closingBracketsCount = closingBrackets.count\n\
    \n    if openingBracketsCount == 0 {\n        return true\n    }\n\n    if openingBracketsCount\
    \ != closingBracketsCount {\n        return false\n    }\n\n    var lastOpeningBracket\
    \ = openingBrackets.last\n    var lastClosingBracket = closingBrackets.last\n\n\
    \    if lastOpeningBracket == lastClosingBracket {\n        openingBrackets.removeLast()\n\
    \        closingBrackets.removeLast()\n    }\n\n    if openingBrackets.count !=\
    \ closingBrackets.count {\n        return false\n    }\n\n    return true", " \
    \   var openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \    var openingBracketIndex = brackets.startIndex\n    var closingBracketIndex\
    \ = brackets.startIndex\n    var openingBracketCount = 0\n    var closingBracketCount\
    \ = 0\n    while openingBracketIndex < brackets.endIndex {\n        switch brackets[openingBracketIndex]\
    \ {\n        case \"<\":\n            openingBracketCount += 1\n        case \"\
    <=\":\n            openingBracketCount += 1\n        case \"<<\":\n          \
    \  openingBracketCount += 1\n        case \"<<=\":\n            openingBracketCount\
    \ += 1\n        case \"<=\":\n            openingBracketCount += 1\n        case\
    \ \"<<=\":\n            openingBracketCount += 1\n        case \"<<<\":\n    \
    \        openingBracketCount += 1\n        case \"<<<=\":\n            openingBracketCount\
    \ += 1\n        case \"<<<=\":\n            openingBracketCount += 1\n       \
    \ case \"<<<=\":\n            openingBracketCount += 1\n        case \"<<<=\"\
    :\n            openingBracketCount += 1\n        case \"<<<=\":\n            openingBracketCount\
    \ += 1\n        case \"<<<=\":\n            openingBracketCount += 1\n       \
    \ case \"<<<=\":\n            openingBracketCount += 1\n        case \"<<<=\"\
    :\n            openingBracketCount += 1\n        case \"<<<=\":\n            openingBracketCount\
    \ += 1\n        case \"<<<=\":\n            openingBracketCount += 1\n       \
    \ case \"<<<=\":\n            openingBracketCount += 1\n        case \"<<<=\"\
    :\n            openingBracketCount += 1\n        case \"<<<=\":\n            openingBracketCount\
    \ += 1\n        case \"<<<=\":\n            openingBracketCount += 1\n       \
    \ case \"<<<=\":\n            openingBracketCount += 1\n        case \"<<<=\"\
    :\n            openingBracketCount += 1\n        case \"<<<=\":\n            openingBracketCount\
    \ += 1\n        case \"<<<=\":\n            openingBracketCount += 1\n       \
    \ case \"<<<=\":\n            openingBracketCount += 1\n        case \"<<<=\"\
    :\n            openingBracketCount += 1\n        case \"<<<=\":\n            openingBracketCount\
    \ += 1\n        case \"<<<=\":\n            openingBracketCount += 1\n       \
    \ case \"<<<=\":\n", "    var openingBrackets = brackets.characters\n    var closingBrackets\
    \ = brackets.characters\n    var openingBracketIndex = brackets.startIndex\n \
    \   var closingBracketIndex = brackets.startIndex\n\n    while openingBracketIndex\
    \ < brackets.endIndex {\n        let openingBracket = brackets[openingBracketIndex]\n\
    \        let closingBracket = brackets[closingBracketIndex]\n\n        if openingBracket\
    \ == \"<\" {\n            openingBracketIndex += 1\n        } else if openingBracket\
    \ == \">\" {\n            closingBracketIndex += 1\n        } else {\n       \
    \     return false\n        }\n\n        if openingBracketIndex < brackets.endIndex\
    \ && closingBracketIndex < brackets.endIndex {\n            let nextOpeningBracket\
    \ = brackets[openingBracketIndex]\n            let nextClosingBracket = brackets[closingBracketIndex]\n\
    \n            if nextOpeningBracket == \"<\" {\n                openingBracketIndex\
    \ += 1\n            } else if nextOpeningBracket == \">\" {\n                closingBracketIndex\
    \ += 1\n            } else {\n                return false\n            }\n  \
    \      }\n    }\n\n    return true", "    var openingBrackets = brackets.characters\n\
    \    var closingBrackets = brackets.characters\n    var openingBracketIndex =\
    \ brackets.startIndex\n    var closingBracketIndex = brackets.startIndex\n   \
    \ var openingBracketCount = 0\n    var closingBracketCount = 0\n    while openingBracketIndex\
    \ < brackets.endIndex {\n        let openingBracket = brackets[openingBracketIndex]\n\
    \        if openingBracket == \"<\" {\n            openingBracketCount++\n   \
    \     } else if openingBracket == \">\" {\n            openingBracketCount--\n\
    \        }\n        openingBracketIndex++\n    }\n    while closingBracketIndex\
    \ < brackets.endIndex {\n        let closingBracket = brackets[closingBracketIndex]\n\
    \        if closingBracket == \"<\" {\n            closingBracketCount++\n   \
    \     } else if closingBracket == \">\" {\n            closingBracketCount--\n\
    \        }\n        closingBracketIndex++\n    }\n    if openingBracketCount !=\
    \ closingBracketCount {\n        return false\n    }\n    return true", "    brackets\
    \ = brackets.lowercased()\n    var openingBrackets = brackets.characters\n   \
    \ var closingBrackets = brackets.characters\n    var openingBracketIndex = -1\n\
    \    var closingBracketIndex = -1\n    var openingBracketCount = 0\n    var closingBracketCount\
    \ = 0\n    for openingBracketIndex < openingBrackets.count {\n        let openingBracket\
    \ = openingBrackets[openingBracketIndex]\n        if openingBracket == \"<\" {\n\
    \            openingBracketCount += 1\n        } else if openingBracket == \"\
    >\" {\n            openingBracketCount -= 1\n        }\n        if openingBracketCount\
    \ < 0 {\n            return false\n        }\n    }\n    for closingBracketIndex\
    \ < closingBrackets.count {\n        let closingBracket = closingBrackets[closingBracketIndex]\n\
    \        if closingBracket == \"<\" {\n            closingBracketCount += 1\n\
    \        } else if closingBracket == \">\" {\n            closingBracketCount\
    \ -= 1\n        }\n        if closingBracketCount < 0 {\n            return false\n\
    \        }\n    }\n    if openingBracketCount != closingBracketCount {\n     \
    \   return false\n    }\n    return true", "    var openingBrackets = brackets.characters\n\
    \    var closingBrackets = brackets.characters\n    var openingBracketIndex =\
    \ brackets.startIndex\n    var closingBracketIndex = brackets.startIndex\n   \
    \ var openingBracketCount = 0\n    var closingBracketCount = 0\n    while openingBracketIndex\
    \ < brackets.endIndex {\n        guard openingBrackets[openingBracketIndex] !=\
    \ \"<\" else {\n            return false\n        }\n        openingBracketCount++\n\
    \        openingBracketIndex++\n    }\n    while closingBracketIndex < brackets.endIndex\
    \ {\n        guard closingBrackets[closingBracketIndex] != \">\" else {\n    \
    \        return false\n        }\n        closingBracketCount++\n        closingBracketIndex++\n\
    \    }\n    if openingBracketCount != closingBracketCount {\n        return false\n\
    \    }\n    return true", "    var openingBrackets = brackets.characters\n   \
    \ var closingBrackets = brackets.characters\n\n    if openingBrackets.count !=\
    \ closingBrackets.count {\n        return false\n    }\n\n    for i in 0..<openingBrackets.count\
    \ {\n        if openingBrackets[i] != closingBrackets[i] {\n            return\
    \ false\n        }\n    }\n\n    return true", "    var opening = brackets.characters\n\
    \    var closing = brackets.characters\n    opening.removeLast()\n    opening.removeLast()\n\
    \    opening.removeLast()\n    opening.removeLast()\n    opening.removeLast()\n\
    \    opening.removeLast()\n    opening.removeLast()\n    opening.removeLast()\n\
    \    opening.removeLast()\n    opening.removeLast()\n    opening.removeLast()\n\
    \    opening.removeLast()\n    opening.removeLast()\n    opening.removeLast()\n\
    \    opening.removeLast()\n    opening.removeLast()\n    opening.removeLast()\n\
    \    opening.removeLast()\n    opening.removeLast()\n    opening.removeLast()\n\
    \    opening.removeLast()\n    opening.removeLast()\n    opening.removeLast()\n\
    \    opening.removeLast()\n    opening.removeLast()\n    opening.removeLast()\n\
    \    opening.removeLast()\n    opening.removeLast()\n    opening.removeLast()\n\
    \    opening.removeLast()\n    opening.removeLast()\n    opening.removeLast()\n\
    \    opening.removeLast()\n    opening.removeLast()\n    opening.removeLast()\n\
    \    opening.removeLast()\n    opening.removeLast()\n    opening.removeLast()\n\
    \    opening.removeLast()\n    opening.removeLast()\n    opening.removeLast()\n\
    \    opening.removeLast()\n    opening.removeLast()\n    opening.removeLast()\n\
    \    opening.removeLast()\n    opening.removeLast()\n    opening.removeLast()\n\
    \    opening.removeLast()\n    opening.removeLast()\n    opening.removeLast()\n\
    \    opening.removeLast()\n    opening.removeLast()\n    opening.removeLast()\n\
    \    opening.removeLast()\n    opening.removeLast()\n    opening.removeLast()\n\
    \    opening.removeLast()\n    opening.removeLast()\n    opening.removeLast()\n\
    \    opening.removeLast()\n    opening.removeLast()\n    opening.removeLast()\n\
    \    opening.removeLast()\n    opening.removeLast()\n    opening.removeLast()\n\
    \    opening.removeLast()\n    opening.removeLast()\n    opening.removeLast()\n\
    \    opening.removeLast()\n    opening.removeLast()\n    opening.removeLast()\n\
    \    ", "    var openingBrackets = brackets.characters\n    var closingBrackets\
    \ = brackets.characters\n    openingBrackets.removeLast()\n    closingBrackets.removeFirst()\n\
    \    var openingBracketCount = openingBrackets.count\n    var closingBracketCount\
    \ = closingBrackets.count\n    if openingBracketCount != closingBracketCount {\n\
    \        return false\n    }\n    var openingBracketIndex = openingBrackets.startIndex\n\
    \    var closingBracketIndex = closingBrackets.startIndex\n    while openingBracketIndex\
    \ < openingBrackets.endIndex {\n        if openingBrackets[openingBracketIndex]\
    \ != closingBrackets[closingBracketIndex] {\n            return false\n      \
    \  }\n        openingBracketIndex += 1\n        closingBracketIndex -= 1\n   \
    \ }\n    return true", "    let openingBrackets = brackets.components(separatedBy:\
    \ \"<\")\n    let closingBrackets = brackets.components(separatedBy: \">\")\n\
    \    if openingBrackets.count != closingBrackets.count {\n        return false\n\
    \    }\n    for i in 0..<openingBrackets.count {\n        if openingBrackets[i]\
    \ != closingBrackets[i] {\n            return false\n        }\n    }\n    return\
    \ true", "    var openingBrackets = brackets.characters\n    var closingBrackets\
    \ = brackets.characters\n    var openingBracketIndex = brackets.startIndex\n \
    \   var closingBracketIndex = brackets.startIndex\n    var openingBracketCount\
    \ = 0\n    var closingBracketCount = 0\n\n    while openingBracketIndex < brackets.endIndex\
    \ {\n        let openingBracket = brackets[openingBracketIndex]\n        if openingBracket\
    \ == \"<\" {\n            openingBracketCount++\n        } else if openingBracket\
    \ == \">\" {\n            openingBracketCount--\n        }\n\n        if openingBracketCount\
    \ < 0 {\n            return false\n        }\n\n        openingBracketIndex++\n\
    \    }\n\n    while closingBracketIndex < brackets.endIndex {\n        let closingBracket\
    \ = brackets[closingBracketIndex]\n        if closingBracket == \"<\" {\n    \
    \        closingBracketCount++\n        } else if closingBracket == \">\" {\n\
    \            closingBracketCount--\n        }\n\n        if closingBracketCount\
    \ < 0 {\n            return false\n        }\n\n        closingBracketIndex++\n\
    \    }\n\n    return openingBracketCount == closingBracketCount", "    var openingBrackets\
    \ = brackets.characters\n    var closingBrackets = brackets.characters\n    var\
    \ openingBracketIndex = brackets.startIndex\n    var closingBracketIndex = brackets.startIndex\n\
    \    var openingBracketCount = 0\n    var closingBracketCount = 0\n    while openingBracketIndex\
    \ < brackets.endIndex {\n        let openingBracket = brackets[openingBracketIndex]\n\
    \        if openingBracket == \"<\" {\n            openingBracketCount++\n   \
    \     } else if openingBracket == \">\" {\n            openingBracketCount--\n\
    \        }\n        openingBracketIndex++\n    }\n    while closingBracketIndex\
    \ < brackets.endIndex {\n        let closingBracket = brackets[closingBracketIndex]\n\
    \        if closingBracket == \"<\" {\n            closingBracketCount++\n   \
    \     } else if closingBracket == \">\" {\n            closingBracketCount--\n\
    \        }\n        closingBracketIndex++\n    }\n    if openingBracketCount !=\
    \ closingBracketCount {\n        return false\n    }\n    return true", "    var\
    \ openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \    var openingBracketIndex = brackets.startIndex\n    var closingBracketIndex\
    \ = brackets.startIndex\n    var openingBracketCount = 0\n    var closingBracketCount\
    \ = 0\n    while openingBracketIndex < brackets.endIndex {\n        let openingBracket\
    \ = brackets[openingBracketIndex]\n        if openingBracket == \"<\" {\n    \
    \        openingBracketCount++\n        } else if openingBracket == \">\" {\n\
    \            openingBracketCount--\n        }\n        openingBracketIndex++\n\
    \    }\n    while closingBracketIndex < brackets.endIndex {\n        let closingBracket\
    \ = brackets[closingBracketIndex]\n        if closingBracket == \"<\" {\n    \
    \        closingBracketCount++\n        } else if closingBracket == \">\" {\n\
    \            closingBracketCount--\n        }\n        closingBracketIndex++\n\
    \    }\n    return openingBracketCount == 0 && closingBracketCount == 0", "  \
    \  var opening = brackets.characters\n    var closing = brackets.characters\n\
    \    opening.removeLast()\n    closing.removeLast()\n    if opening.isEmpty {\n\
    \        return closing.isEmpty && closing.count == 0\n    }\n    if closing.isEmpty\
    \ {\n        return opening.count == 0\n    }\n    if opening.count == 0 {\n \
    \       return closing.count == 0\n    }\n    if opening.count != closing.count\
    \ {\n        return false\n    }\n    if opening.first != closing.first {\n  \
    \      return false\n    }\n    if opening.last != closing.last {\n        return\
    \ false\n    }\n    return true", "    var openingBrackets = brackets.characters\n\
    \    var closingBrackets = brackets.characters\n    var openingBracketsCount =\
    \ brackets.characters.count\n    var closingBracketsCount = brackets.characters.count\n\
    \n    if openingBracketsCount > 0 {\n        openingBrackets.removeLast()\n  \
    \  }\n    if closingBracketsCount > 0 {\n        closingBrackets.removeLast()\n\
    \    }\n\n    if openingBracketsCount == closingBracketsCount {\n        return\
    \ true\n    }\n\n    if openingBrackets.count > 0 {\n        let lastOpeningBracket\
    \ = openingBrackets.last\n        let lastClosingBracket = closingBrackets.last\n\
    \        if lastOpeningBracket == lastClosingBracket {\n            openingBrackets.removeLast()\n\
    \            closingBrackets.removeLast()\n        }\n    }\n\n    return false",
  "    var openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \    var openingBracketIndex = brackets.startIndex\n    var closingBracketIndex\
    \ = brackets.startIndex\n    while openingBracketIndex < brackets.endIndex {\n\
    \        let openingBracket = brackets[openingBracketIndex]\n        if openingBracket\
    \ == \"<\" {\n            openingBracketIndex += 1\n        } else if openingBracket\
    \ == \">\" {\n            openingBracketIndex += 1\n            closingBracketIndex\
    \ -= 1\n        } else {\n            return false\n        }\n    }\n    while\
    \ closingBracketIndex < brackets.endIndex {\n        let closingBracket = brackets[closingBracketIndex]\n\
    \        if closingBracket == \"<\" {\n            closingBracketIndex += 1\n\
    \        } else if closingBracket == \">\" {\n            closingBracketIndex\
    \ += 1\n            openingBracketIndex -= 1\n        } else {\n            return\
    \ false\n        }\n    }\n    return openingBracketIndex == closingBracketIndex",
  "    var openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \    var openingBracketIndex = brackets.startIndex\n    var closingBracketIndex\
    \ = brackets.startIndex\n\n    while openingBracketIndex < brackets.endIndex {\n\
    \        let openingBracket = brackets[openingBracketIndex]\n        let closingBracket\
    \ = brackets[closingBracketIndex]\n\n        if openingBracket == \"<\" {\n  \
    \          openingBracketIndex += 1\n        } else if openingBracket == \">\"\
    \ {\n            openingBracketIndex += 1\n            closingBracketIndex +=\
    \ 1\n        } else if openingBracket == \"<\" {\n            openingBracketIndex\
    \ += 1\n            closingBracketIndex += 1\n        } else if openingBracket\
    \ == \">\" {\n            openingBracketIndex += 1\n            closingBracketIndex\
    \ += 1\n            openingBracketIndex += 1\n        } else if openingBracket\
    \ == \"<\" {\n            openingBracketIndex += 1\n            closingBracketIndex\
    \ += 1\n            openingBracketIndex += 1\n        } else if openingBracket\
    \ == \">\" {\n            openingBracketIndex += 1\n            closingBracketIndex\
    \ += 1\n            openingBracketIndex += 1\n            closingBracketIndex\
    \ += 1\n        } else if openingBracket == \"<\" {\n            openingBracketIndex\
    \ += 1\n            closingBracketIndex += 1\n            openingBracketIndex\
    \ += 1\n            closingBracketIndex += 1\n            openingBracketIndex\
    \ += 1\n        } else if openingBracket == \">\" {\n            openingBracketIndex\
    \ += 1\n            closingBracketIndex += 1\n            openingBracketIndex\
    \ += 1\n            closingBracketIndex += 1\n            openingBracketIndex\
    \ += 1\n            closingBracketIndex += 1\n        } else if openingBracket\
    \ == \"<\" {\n            openingBracketIndex += 1\n            closingBracketIndex\
    \ += 1\n            openingBracketIndex += 1\n            closingBracketIndex\
    \ += 1\n            openingBracketIndex += 1\n            closingBracketIndex\
    \ += 1\n            openingBracketIndex += 1\n        } else if openingBracket\
    \ == \">\" {\n            openingBracketIndex += 1\n            closingBracketIndex\
    \ += 1\n            openingBracketIndex += 1\n            closingBracketIndex\
    \ += 1\n            openingBracketIndex += 1\n            closingBracketIndex\
    \ += 1\n            openingBracketIndex += 1\n            closingBracketIndex\
    \ += 1\n        } else if opening", "    var openingBrackets = brackets.characters\n\
    \    var closingBrackets = brackets.characters\n    var openingBracketIndex =\
    \ brackets.startIndex\n    var closingBracketIndex = brackets.startIndex\n\n \
    \   while openingBracketIndex < brackets.endIndex {\n        let openingBracket\
    \ = brackets[openingBracketIndex]\n        let closingBracket = brackets[closingBracketIndex]\n\
    \n        if openingBracket == \"<\" {\n            openingBracketIndex += 1\n\
    \        } else if openingBracket == \">\" {\n            openingBracketIndex\
    \ += 1\n            closingBracketIndex += 1\n        } else {\n            openingBracketIndex\
    \ += 1\n            closingBracketIndex += 1\n        }\n\n        if openingBracketIndex\
    \ >= brackets.endIndex {\n            break\n        }\n\n        if closingBracketIndex\
    \ >= brackets.endIndex {\n            break\n        }\n\n        if openingBracket\
    \ != closingBracket {\n            return false\n        }\n    }\n\n    return\
    \ true"]
stop_tokens:
- "\n}"

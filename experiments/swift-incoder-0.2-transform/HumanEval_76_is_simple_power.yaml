name: HumanEval_76_is_simple_power
language: swift
prompt: "\n/// Your task is to write a function that returns true if a number x is\
  \ a simple\n/// power of n and false in other cases.\n/// x is a simple power of\
  \ n if n**int=x\n/// For example:\n/// >>> is_simple_power(x: 1, n: 4)\n/// true\n\
  /// >>> is_simple_power(x: 2, n: 2)\n/// true\n/// >>> is_simple_power(x: 8, n:\
  \ 2)\n/// true\n/// >>> is_simple_power(x: 3, n: 2)\n/// false\n/// >>> is_simple_power(x:\
  \ 3, n: 1)\n/// false\n/// >>> is_simple_power(x: 5, n: 3)\n/// false\nfunc is_simple_power(x:\
  \ Int, n: Int) -> Bool {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(is_simple_power(x: 16, n: 2) == true)\n\
  assert(is_simple_power(x: 143214, n: 16) == false)\nassert(is_simple_power(x: 4,\
  \ n: 2) == true)\nassert(is_simple_power(x: 9, n: 3) == true)\nassert(is_simple_power(x:\
  \ 16, n: 4) == true)\nassert(is_simple_power(x: 24, n: 2) == false)\nassert(is_simple_power(x:\
  \ 128, n: 4) == false)\nassert(is_simple_power(x: 12, n: 6) == false)\nassert(is_simple_power(x:\
  \ 1, n: 1) == true)\nassert(is_simple_power(x: 1, n: 12) == true)"
completions: ["    if n == 1 {\n        return true\n    }\n    if n == 0 {\n    \
    \    return false\n    }\n    if x == 1 {\n        return true\n    }\n    if\
    \ x == 0 {\n        return false\n    }\n    if x == n {\n        return true\n\
    \    }\n    if x == n*(n - 1) {\n        return true\n    }\n    if x == n*(n\
    \ - 2)*(n - 3) {\n        return true\n    }\n    if x == n*(n - 2)*(n - 3)*(n\
    \ - 4) {\n        return true\n    }\n    if x == n*(n - 2)*(n - 3)*(n - 4)*(n\
    \ - 5) {\n        return true\n    }\n    if x == n*(n - 2)*(n - 3)*(n - 4)*(n\
    \ - 5)*(n - 6) {\n        return true\n    }\n    if x == n*(n - 2)*(n - 3)*(n\
    \ - 4)*(n - 5)*(n - 6)*(n - 7) {\n        return true\n    }\n    if x == n*(n\
    \ - 2)*(n - 3)*(n - 4)*(n - 5)*(n - 6)*(n - 7)*(n - 8) {\n        return true\n\
    \    }\n    if x == n*(n - 2)*(n - 3)*(n - 4)*(n - 5)*(n - 6)*(n - 7)*(n - 8)*(n\
    \ - 9) {\n        return true\n    }\n    if x == n*(n - 2)*(n - 3)*(n - 4)*(n\
    \ - 5)*(n - 6)*(n - 7)*(n - 8)*(n - 9)*(n - 10) {\n        return true\n    }\n\
    \    if x == n*(n - 2)*(n - 3)*(n - 4)*(n - 5)*(n - 6)*(n - 7)*(n - 8)*(n - 9)*(n\
    \ - 10)*(n - 11) {\n        return true\n    }\n    if x == n*(n - 2)*(n - 3)*(n\
    \ - 4)*(n - 5)*(n - 6)*(n - 7)*(n - 8)*(n - 9)*(n - 10)*(n - 11)*(n - 12) {\n\
    \        return true\n    }\n    if x == n*(n - 2)*(n - 3)*(n - 4)*(n - 5)*(n\
    \ - 6)*(n - 7)*(n - 8)*(n - 9)*(n - 10)*(n - 11)*(n - 12)*n - 13) {\n        return\
    \ true\n    }\n    if x == n*(n - 2)*(n - 3)*(n - 4)*(n - 5)*(n - 6)*(n - 7)*(n\
    \ - 8)*(n - 9)*(n - 10)*(n - 11)*(n - 12)*n - 13)*n - 14) {\n        return true\n\
    \    }\n    if x == n*(n - 2)*(n - 3)*(n - 4)*(n - 5)*(n - 6)*(n - 7)*(n - 8)*(n\
    \ - 9)*(n - 10)*(n - 11)*(n - 12)*n - 13)*n - 14)*n - 15) {\n        return true\n\
    \    }\n    if x == n*(n - 2)*(n - 3)*(n - 4)*(n - ", "    if n == 1 {\n     \
    \   return true\n    }\n    if x == 1 {\n        return true\n    }\n    if x\
    \ == n {\n        return true\n    }\n    if n % 2 == 0 {\n        return is_simple_power(x,\
    \ n//2)\n    }\n    return is_simple_power(x, n-1)", "    if n == 1 {\n      \
    \  return true\n    }\n    if x == 1 {\n        return true\n    }\n    if x ==\
    \ n {\n        return true\n    }\n    if x < n {\n        return false\n    }\n\
    \    if x == n**x {\n        return true\n    }\n    return false", "    if n\
    \ == 1 {\n        return true\n    }\n    if x == 1 {\n        return true\n \
    \   }\n    if x == n {\n        return true\n    }\n    if x % n == 0 {\n    \
    \    return is_simple_power(x, n-1)\n    }\n    return false", "    if x == 1\
    \ {\n        return true\n    }\n    if n == 1 {\n        return true\n    }\n\
    \    if n == 2 {\n        return is_simple_power(x, n: 2)\n    }\n    if n ==\
    \ 3 {\n        return is_simple_power(x, n: 2)\n    }\n    if n == 4 {\n     \
    \   return is_simple_power(x, n: 2)\n    }\n    if n == 5 {\n        return is_simple_power(x,\
    \ n: 3)\n    }\n    if n == 6 {\n        return is_simple_power(x, n: 3)\n   \
    \ }\n    if n == 7 {\n        return is_simple_power(x, n: 3)\n    }\n    if n\
    \ == 8 {\n        return is_simple_power(x, n: 3)\n    }\n    if n == 9 {\n  \
    \      return is_simple_power(x, n: 3)\n    }\n    if n == 10 {\n        return\
    \ is_simple_power(x, n: 3)\n    }\n    if n == 11 {\n        return is_simple_power(x,\
    \ n: 3)\n    }\n    if n == 12 {\n        return is_simple_power(x, n: 3)\n  \
    \  }\n    if n == 13 {\n        return is_simple_power(x, n: 3)\n    }\n    if\
    \ n == 14 {\n        return is_simple_power(x, n: 3)\n    }\n    if n == 15 {\n\
    \        return is_simple_power(x, n: 3)\n    }\n    if n == 16 {\n        return\
    \ is_simple_power(x, n: 3)\n    }\n    if n == 17 {\n        return is_simple_power(x,\
    \ n: 3)\n    }\n    if n == 18 {\n        return is_simple_power(x, n: 3)\n  \
    \  }\n    if n == 19 {\n        return is_simple_power(x, n: 3)\n    }\n    if\
    \ n == 20 {\n        return is_simple_power(x, n: 3)\n    }\n    if n == 21 {\n\
    \        return is_simple_power(x, n: 3)\n    }\n    if n == 22 {\n        return\
    \ is_simple_power(x, n: 3)\n    }\n    if n == 23 {\n        return is_simple_power(x,\
    \ n: 3)\n    }\n    if n == 24 {\n        return is_simple_power(x, n: 3)\n  \
    \  }\n    if n == 25 {\n        return is_simple_power(x, n: 3)\n    }\n    if\
    \ n == 26 {\n        return is_simple_power(x, n: 3)\n    }\n    if n == 27 {\n\
    \        return is_simple_power(x, n: 3)\n    }\n    if n == 28 {\n        return\
    \ is_simple_power(x, n: 3)\n    }\n    if n == 29 {\n        return is_simple_power(x,\
    \ n: 3)\n    }\n    if n == 30 {\n        return is_simple_power(x, n: 3)\n  \
    \  }\n    if n == 31 {\n        return is_simple_power(x, n: 3)\n    }\n    if\
    \ n == 32 {\n        return is_simple_power(x, n: 3)\n    }\n    if n == 33 {\n\
    \        return is_simple_power(x, n: 3)\n    }\n    if n == 34 {\n        return\
    \ is_simple_power(x, n: 3)\n    }\n    if n == ", "    if n == 1 {\n        return\
    \ true\n    }\n    if x == 1 {\n        return true\n    }\n    if n == 0 {\n\
    \        return false\n    }\n    if x == 0 {\n        return false\n    }\n \
    \   if x == n {\n        return true\n    }\n    if n % 2 == 0 {\n        return\
    \ is_simple_power(x, n/2)\n    }\n    return is_simple_power(x, n/2) == true &&\
    \ is_simple_power(x, n/2) == true", "    if n == 1 {\n        return true\n  \
    \  }\n    if x == 1 {\n        return true\n    }\n    if x == n {\n        return\
    \ true\n    }\n    if n % 2 == 0 {\n        return is_simple_power(x, n//2)\n\
    \    }\n    return is_simple_power(x, n-1)", '    return is_simple_power_of_two(x)
    && is_power_of_two(n) && is_power_of_two(n * x)', "    if n == 1 {\n        return\
    \ true\n    }\n    if x == 1 {\n        return true\n    }\n    if x == n {\n\
    \        return true\n    }\n    if x < n {\n        return false\n    }\n   \
    \ if x == n**2 {\n        return true\n    }\n    if x == n**3 {\n        return\
    \ true\n    }\n    if x == n**4 {\n        return true\n    }\n    if x == n**5\
    \ {\n        return true\n    }\n    if x == n**6 {\n        return true\n   \
    \ }\n    if x == n**7 {\n        return true\n    }\n    if x == n**8 {\n    \
    \    return true\n    }\n    if x == n**9 {\n        return true\n    }\n    if\
    \ x == n**10 {\n        return true\n    }\n    if x == n**11 {\n        return\
    \ true\n    }\n    if x == n**12 {\n        return true\n    }\n    if x == n**13\
    \ {\n        return true\n    }\n    if x == n**14 {\n        return true\n  \
    \  }\n    if x == n**15 {\n        return true\n    }\n    if x == n**16 {\n \
    \       return true\n    }\n    if x == n**17 {\n        return true\n    }\n\
    \    if x == n**18 {\n        return true\n    }\n    if x == n**19 {\n      \
    \  return true\n    }\n    if x == n**20 {\n        return true\n    }\n    if\
    \ x == n**21 {\n        return true\n    }\n    if x == n**22 {\n        return\
    \ true\n    }\n    if x == n**23 {\n        return true\n    }\n    if x == n**24\
    \ {\n        return true\n    }\n    if x == n**25 {\n        return true\n  \
    \  }\n    if x == n**26 {\n        return true\n    }\n    if x == n**27 {\n \
    \       return true\n    }\n    if x == n**28 {\n        return true\n    }\n\
    \    if x == n**29 {\n        return true\n    }\n    if x == n**30 {\n      \
    \  return true\n    }\n    if x == n**31 {\n        return true\n    }\n    if\
    \ x == n**32 {\n        return true\n    }\n    if x == n**33 {\n        return\
    \ true\n    }\n    if x == n**34 {\n        return true\n    }\n    if x == n**35\
    \ {\n        return true\n    }\n    if x == n**36 {\n        return true\n  \
    \  }\n    if x == n**37 {\n        return true\n    }\n    if x == n**38 {\n \
    \       return true\n    }\n    if x == n**39 {\n        return true\n    }\n\
    \    if x == n**40 {\n        return true\n    }\n    if x == n**41 {\n      \
    \  return true", "    if n == 1 {\n        return true\n    }\n    if n == 0 {\n\
    \        return false\n    }\n    if x == 1 {\n        return true\n    }\n  \
    \  if x == 0 {\n        return false\n    }\n    if x == n {\n        return true\n\
    \    }\n    if n % 2 == 0 {\n        return is_simple_power(x, n-1)\n    }\n \
    \   return is_simple_power(x, n/2)", "    if n == 1 {\n        return true\n \
    \   }\n    if x == 1 {\n        return true\n    }\n    if x == n {\n        return\
    \ true\n    }\n    if x % n == 0 {\n        return is_simple_power(x, n-1)\n \
    \   }\n    return false", "    if n == 0 {\n        return true\n    }\n    if\
    \ n == 1 {\n        return true\n    }\n    if x == 1 {\n        return true\n\
    \    }\n    if x == x {\n        return true\n    }\n    if x == x*x {\n     \
    \   return true\n    }\n    if x == x*x*x {\n        return true\n    }\n    if\
    \ x == x*x*x*x {\n        return true\n    }\n    if x == x*x*x*x*x {\n      \
    \  return true\n    }\n    if x == x*x*x*x*x*x {\n        return true\n    }\n\
    \    if x == x*x*x*x*x*x*x {\n        return true\n    }\n    if x == x*x*x*x*x*x*x*x\
    \ {\n        return true\n    }\n    if x == x*x*x*x*x*x*x*x*x {\n        return\
    \ true\n    }\n    if x == x*x*x*x*x*x*x*x*x*x {\n        return true\n    }\n\
    \    if x == x*x*x*x*x*x*x*x*x*x*x {\n        return true\n    }\n    if x ==\
    \ x*x*x*x*x*x*x*x*x*x*x*x {\n        return true\n    }\n    if x == x*x*x*x*x*x*x*x*x*x*x*x*x\
    \ {\n        return true\n    }\n    if x == x*x*x*x*x*x*x*x*x*x*x*x*x*x {\n \
    \       return true\n    }\n    if x == x*x*x*x*x*x*x*x*x*x*x*x*x*x*x {\n    \
    \    return true\n    }\n    if x == x*x*x*x*x*x*x*x*x*x*x*x*x*x*x {\n       \
    \ return true\n    }\n    if x == x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x {\n        return\
    \ true\n    }\n    if x == x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x {\n        return\
    \ true\n    }\n    if x == x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x {\n        return\
    \ true\n    }\n    if x == x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x {\n       \
    \ return true\n    }\n    if x == x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x {\n\
    \        return true\n    }\n    if x == x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x\
    \ {\n        return true\n    }\n    if x == x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x\
    \ {\n        return true\n    }\n    if x == x*x*", "    if n == 1 {\n       \
    \ return true\n    }\n    if n == 0 {\n        return false\n    }\n    if x ==\
    \ 0 {\n        return false\n    }\n    if x == 1 {\n        return true\n   \
    \ }\n    if x == n {\n        return true\n    }\n    if x > n {\n        return\
    \ false\n    }\n    if x < 0 {\n        return false\n    }\n    if x == n {\n\
    \        return true\n    }\n    if x == n-1 {\n        return true\n    }\n \
    \   if x == n-2 {\n        return true\n    }\n    if x == n-3 {\n        return\
    \ true\n    }\n    if x == n-4 {\n        return true\n    }\n    if x == n-5\
    \ {\n        return true\n    }\n    if x == n-6 {\n        return true\n    }\n\
    \    if x == n-7 {\n        return true\n    }\n    if x == n-8 {\n        return\
    \ true\n    }\n    if x == n-9 {\n        return true\n    }\n    if x == n-10\
    \ {\n        return true\n    }\n    if x == n-11 {\n        return true\n   \
    \ }\n    if x == n-12 {\n        return true\n    }\n    if x == n-13 {\n    \
    \    return true\n    }\n    if x == n-14 {\n        return true\n    }\n    if\
    \ x == n-15 {\n        return true\n    }\n    if x == n-16 {\n        return\
    \ true\n    }\n    if x == n-17 {\n        return true\n    }\n    if x == n-18\
    \ {\n        return true\n    }\n    if x == n-19 {\n        return true\n   \
    \ }\n    if x == n-20 {\n        return true\n    }\n    if x == n-21 {\n    \
    \    return true\n    }\n    if x == n-22 {\n        return true\n    }\n    if\
    \ x == n-23 {\n        return true\n    }\n    if x == n-24 {\n        return\
    \ true\n    }\n    if x == n-25 {\n        return true\n    }\n    if x == n-26\
    \ {\n        return true\n    }\n    if x == n-27 {\n        return true\n   \
    \ }\n    if x == n-28 {\n        return true\n    }\n    if x == n-29 {\n    \
    \    return true\n    }\n    if x == n-30 {\n        return true\n    }\n    if\
    \ x == n-31 {\n        return true\n    }\n    if x == n-32 {\n        return\
    \ true\n    }\n    if x == n-33 {\n        return true\n    }\n    if x == n-34\
    \ {\n        return true\n    }\n    if x == n-35 {\n        return true\n   \
    \ }\n    if x == n-36 {\n        return true\n    }\n    if x == n-37 {\n    \
    \    return true\n    }\n    if x == n-38 {\n        return true\n    }\n    if\
    \ x == n-39 {\n        return true\n    }\n    if x == n-40 {\n        return\
    \ true\n    }\n    if ", "    if n == 1 {\n        return true\n    }\n    if\
    \ x == 1 {\n        return true\n    }\n    if x == n {\n        return true\n\
    \    }\n    if n % 2 == 0 {\n        return is_simple_power(x, n/2)\n    }\n \
    \   return false", "    if n == 1 {\n        return true\n    }\n    if n == 0\
    \ {\n        return false\n    }\n    if x == 0 {\n        return false\n    }\n\
    \    if x == 1 {\n        return true\n    }\n    if x == n {\n        return\
    \ true\n    }\n    if x > n {\n        return false\n    }\n    if x < 0 {\n \
    \       return false\n    }\n    if n == 1 {\n        return true\n    }\n   \
    \ if n == 0 {\n        return false\n    }\n    if x == 0 {\n        return false\n\
    \    }\n    if x == 1 {\n        return true\n    }\n    if x == n {\n       \
    \ return true\n    }\n    if x > n {\n        return false\n    }\n    if x <\
    \ 0 {\n        return false\n    }\n    if n == 1 {\n        return true\n   \
    \ }\n    if n == 0 {\n        return false\n    }\n    if x == 0 {\n        return\
    \ false\n    }\n    if x == 1 {\n        return true\n    }\n    if x == n {\n\
    \        return true\n    }\n    if x > n {\n        return false\n    }\n   \
    \ if x < 0 {\n        return false\n    }\n    if n == 1 {\n        return true\n\
    \    }\n    if n == 0 {\n        return false\n    }\n    if x == 0 {\n      \
    \  return false\n    }\n    if x == 1 {\n        return true\n    }\n    if x\
    \ == n {\n        return true\n    }\n    if x > n {\n        return false\n \
    \   }\n    if x < 0 {\n        return false\n    }\n    if n == 1 {\n        return\
    \ true\n    }\n    if n == 0 {\n        return false\n    }\n    if x == 0 {\n\
    \        return false\n    }\n    if x == 1 {\n        return true\n    }\n  \
    \  if x == n {\n        return true\n    }\n    if x > n {\n        return false\n\
    \    }\n    if x < 0 {\n        return false\n    }\n    if n == 1 {\n       \
    \ return true\n    }\n    if n == 0 {\n        return false\n    }\n    if x ==\
    \ 0 {\n        return false\n    }\n    if x == 1 {\n        return true\n   \
    \ }\n    if x == n {\n        return true\n    }\n    if x > n {\n        return\
    \ false\n    }\n    if x < 0 {\n        return false\n    }\n    if n == 1 {\n\
    \        return true\n    }\n    if n == 0 {\n        return false\n    }\n  \
    \  if x == 0 {\n        return false\n    }\n    if x == 1 {\n        return true\n\
    \    }\n    if x == n {\n        return true\n    }\n    if x > n {\n        return\
    \ false\n    }\n    if x < 0 {\n        return false\n    }\n    if n == 1 {\n\
    \        return true\n    }\n    if n == 0 {\n        return false\n    }\n  \
    \  if x == 0 {\n        return false\n    }\n    if x == 1 {\n        return true\n\
    \    }\n    if x == n {\n        return true\n    }\n    if x > n {\n        return\
    \ false\n    }\n    if ", "    if n == 1 {\n        return true\n    }\n    if\
    \ x == 1 {\n        return true\n    }\n    if x == n {\n        return true\n\
    \    }\n    if n % x == 0 {\n        return is_simple_power(x, n-1)\n    }\n \
    \   return false", "    if n == 1 {\n        return true\n    }\n    if n == 0\
    \ {\n        return false\n    }\n    if x == 1 {\n        return true\n    }\n\
    \    if x == 0 {\n        return false\n    }\n    if x == n {\n        return\
    \ true\n    }\n    if x == n-1 {\n        return false\n    }\n    if x == n+1\
    \ {\n        return true\n    }\n    if x == n+2 {\n        return false\n   \
    \ }\n    if x == n+3 {\n        return true\n    }\n    if x == n+4 {\n      \
    \  return false\n    }\n    if x == n+5 {\n        return true\n    }\n    if\
    \ x == n+6 {\n        return false\n    }\n    if x == n+7 {\n        return true\n\
    \    }\n    if x == n+8 {\n        return false\n    }\n    if x == n+9 {\n  \
    \      return true\n    }\n    if x == n+10 {\n        return false\n    }\n \
    \   if x == n+11 {\n        return true\n    }\n    if x == n+12 {\n        return\
    \ false\n    }\n    if x == n+13 {\n        return true\n    }\n    if x == n+14\
    \ {\n        return false\n    }\n    if x == n+15 {\n        return true\n  \
    \  }\n    if x == n+16 {\n        return false\n    }\n    if x == n+17 {\n  \
    \      return true\n    }\n    if x == n+18 {\n        return false\n    }\n \
    \   if x == n+19 {\n        return true\n    }\n    if x == n+20 {\n        return\
    \ false\n    }\n    if x == n+21 {\n        return true\n    }\n    if x == n+22\
    \ {\n        return false\n    }\n    if x == n+23 {\n        return true\n  \
    \  }\n    if x == n+24 {\n        return false\n    }\n    if x == n+25 {\n  \
    \      return true\n    }\n    if x == n+26 {\n        return false\n    }\n \
    \   if x == n+27 {\n        return true\n    }\n    if x == n+28 {\n        return\
    \ false\n    }\n    if x == n+29 {\n        return true\n    }\n    if x == n+30\
    \ {\n        return false\n    }\n    if x == n+31 {\n        return true\n  \
    \  }\n    if x == n+32 {\n        return false\n    }\n    if x == n+33 {\n  \
    \      return true\n    }\n    if x == n+34 {\n        return false\n    }\n \
    \   if x == n+35 {\n        return true\n    }\n    if x == n+36 {\n        return\
    \ false\n    }\n    if x == n+37 {\n        return true\n    }\n    if x == n+38\
    \ {\n        return false\n    }\n    if x == n+", "    if n == 1 {\n        return\
    \ true\n    }\n    if x == 1 {\n        return true\n    }\n    if x == n {\n\
    \        return true\n    }\n    if x % n == 0 {\n        return true\n    }\n\
    \    return false", "    if n == 1 {\n        return true\n    }\n    if x ==\
    \ 1 {\n        return true\n    }\n    if x == n {\n        return true\n    }\n\
    \    if x % n == 0 {\n        return true\n    }\n    return false", "    if n\
    \ == 1 {\n        return true\n    }\n    if n == 0 {\n        return false\n\
    \    }\n    if x == 0 {\n        return false\n    }\n    if x == 1 {\n      \
    \  return true\n    }\n    if x == n {\n        return true\n    }\n    if x >\
    \ n {\n        return false\n    }\n    if x < 0 {\n        return false\n   \
    \ }\n    if x == n / 2 {\n        return is_simple_power(x, n - 1)\n    }\n  \
    \  if x == n / 3 {\n        return is_simple_power(x, n - 2)\n    }\n    if x\
    \ == n / 4 {\n        return is_simple_power(x, n - 3)\n    }\n    if x == n /\
    \ 5 {\n        return is_simple_power(x, n - 4)\n    }\n    if x == n / 6 {\n\
    \        return is_simple_power(x, n - 5)\n    }\n    if x == n / 7 {\n      \
    \  return is_simple_power(x, n - 6)\n    }\n    if x == n / 8 {\n        return\
    \ is_simple_power(x, n - 7)\n    }\n    if x == n / 9 {\n        return is_simple_power(x,\
    \ n - 8)\n    }\n    if x == n / 10 {\n        return is_simple_power(x, n - 9)\n\
    \    }\n    if x == n / 11 {\n        return is_simple_power(x, n - 10)\n    }\n\
    \    if x == n / 12 {\n        return is_simple_power(x, n - 11)\n    }\n    if\
    \ x == n / 13 {\n        return is_simple_power(x, n - 12)\n    }\n    if x ==\
    \ n / 14 {\n        return is_simple_power(x, n - 13)\n    }\n    if x == n /\
    \ 15 {\n        return is_simple_power(x, n - 14)\n    }\n    if x == n / 16 {\n\
    \        return is_simple_power(x, n - 15)\n    }\n    if x == n / 17 {\n    \
    \    return is_simple_power(x, n - 16)\n    }\n    if x == n / 18 {\n        return\
    \ is_simple_power(x, n - 17)\n    }\n    if x == n / 19 {\n        return is_simple_power(x,\
    \ n - 18)\n    }\n    if x == n / 20 {\n        return is_simple_power(x, n -\
    \ 19)\n    }\n    if x == n / 21 {\n        return is_simple_power(x, n - 20)\n\
    \    }\n    if x == n / 22 {\n        return is_simple_power(x, n - 21)\n    }\n\
    \    if x == n / 23 {\n        return is_simple_power(x, n - 22)\n    }\n    if\
    \ x == n / 24 {\n        return is_simple_power(x, n - 23)\n    }\n    if x ==\
    \ n / 25 {\n        return is_simple_power(x, n - 24)\n    }\n    if x == n /\
    \ 26 {\n        return is_simple_power(x, n - 25)\n    }\n    if x == n / 27 {\n\
    \        return is_simple_power(x, n - 26)\n    }\n    if x == n / 28"]
stop_tokens:
- "\n}"

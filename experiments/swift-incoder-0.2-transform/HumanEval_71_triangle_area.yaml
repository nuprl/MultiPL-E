name: HumanEval_71_triangle_area
language: swift
prompt: "\n/// Given the lengths of the three sides of a triangle. Return the area\
  \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
  \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
  \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
  /// >>> triangle_area(a: 3, b: 4, c: 5)\n/// 6.0\n/// >>> triangle_area(a: 1, b:\
  \ 2, c: 10)\n/// -1\nfunc triangle_area(a: Int, b: Int, c: Int) -> Double {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(triangle_area(a: 3, b: 4, c: 5) == 6.0)\n\
  assert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a: 4, b: 8,\
  \ c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
  \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
  \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
  \ 2, b: 2, c: 10) == -1)"
completions: ["    let sides = [a, b, c]\n    let sumOfSides = sides.reduce(0, +)\n\
    \    if sumOfSides > sides.last {\n        return -1\n    }\n    return Double(sides.last)\
    \ * Double(sides.last) / Double(sides.first)", "    if a + b > c {\n        return\
    \ -1\n    }\n    if a + c > b {\n        return -1\n    }\n    if b + c > a {\n\
    \        return -1\n    }\n    return Double(a * b * c / 2)", "    let sides =\
    \ [a, b, c]\n    let sum = sides.reduce(0, +)\n    if sum > sides.last {\n   \
    \     return -1\n    }\n    return Double(sides.last) * Double(sides.last) / Double(sides.first)",
  "    let a1 = b * b - a * c\n    let a2 = a * a\n    let a3 = b * b - a * a\n  \
    \  let a4 = a * a\n    let a5 = a * a\n    let a6 = a * a\n    let a7 = a * a\n\
    \    let a8 = a * a\n    let a9 = a * a\n    let a10 = a * a\n    let a11 = a\
    \ * a\n    let a12 = a * a\n    let a13 = a * a\n    let a14 = a * a\n    let\
    \ a15 = a * a\n    let a16 = a * a\n    let a17 = a * a\n    let a18 = a * a\n\
    \    let a19 = a * a\n    let a20 = a * a\n    let a21 = a * a\n    let a22 =\
    \ a * a\n    let a23 = a * a\n    let a24 = a * a\n    let a25 = a * a\n    let\
    \ a26 = a * a\n    let a27 = a * a\n    let a28 = a * a\n    let a29 = a * a\n\
    \    let a30 = a * a\n    let a31 = a * a\n    let a32 = a * a\n    let a33 =\
    \ a * a\n    let a34 = a * a\n    let a35 = a * a\n    let a36 = a * a\n    let\
    \ a37 = a * a\n    let a38 = a * a\n    let a39 = a * a\n    let a40 = a * a\n\
    \    let a41 = a * a\n    let a42 = a * a\n    let a43 = a * a\n    let a44 =\
    \ a * a\n    let a45 = a * a\n    let a46 = a * a\n    let a47 = a * a\n    let\
    \ a48 = a * a\n    let a49 = a * a\n    let a50 = a * a\n    let a51 = a * a\n\
    \    let a52 = a * a\n    let a53 = a * a\n    let a54 = a * a\n    let a55 =\
    \ a * a\n    let a56 = a * a\n    let a57 = a * a\n    let a58 = a * a\n    let\
    \ a59 = a * a\n    let a60 = a * a\n    let a61 = a * a\n    let a62 = a * a\n\
    \    let a63 = a * a\n    let a64 = a * a\n    let a65 = a * a\n    let a66 =\
    \ a * a\n    let a67 = a * a\n    let a68 = a * a\n    let a69 = a * a\n    let\
    \ a70 = a * a\n    let a71 = a * a\n    let a72 = a * a\n    let a73 = a * a\n\
    \    let a74 = a * a\n    let a75 = a * a\n    let a76 = a * a\n    let a77 =\
    \ a * a\n    let a78 = a * a\n    let a79 = a * a\n    let a80 = a * a\n    let\
    \ a81 = a * a\n    let a82 = a * a\n    let a83 = a * a\n    let a84 = a * a\n\
    \    let a85 = a * a\n    let a86 = a * a\n    let ", "    let sides = [a, b,\
    \ c]\n    let sum = sides.reduce(0, +)\n    if sum > sides.last {\n        return\
    \ -1\n    }\n    return Double(sides.last) * Double(sides.last) / Double(sides.first)",
  "    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    if a + b > c {\n\
    \        return Double(a + b - c)\n    }\n    if a + c > b {\n        return Double(a\
    \ + c - b)\n    }\n    if b + c > a {\n        return Double(b + c - a)\n    }\n\
    \    return Double(a + b + c)", "    if a + b > c {\n        return Double(a +\
    \ b - c)\n    }\n    if a + c > b {\n        return Double(a + c - b)\n    }\n\
    \    if b + c > a {\n        return Double(b + c - a)\n    }\n    return Double(a\
    \ + b + c)", "    let sides = a + b + c\n    if sides == 0 {\n        return Double.nan\n\
    \    }\n    let area = Double.pi * pow(Double.pi * a / sides, 2) + (Double.pi\
    \ * b / sides) * pow(Double.pi * c / sides, 2)\n    return round(area, 2)", " \
    \   let sides = [a, b, c]\n    let sumOfSides = sides.reduce(0, +)\n    if sumOfSides\
    \ > sides.last {\n        return -1\n    }\n    return Double(sides.last) * Double(sides.last)\
    \ / Double(sides.count)", "    let a1 = b * b - 4 * a * c\n    let a2 = Math.sqrt(a1)\n\
    \    let a3 = -b + Math.sqrt(a1)\n    let a4 = -b - Math.sqrt(a1)\n    if a2 <\
    \ 0 {\n        return -1\n    }\n    if a3 < 0 {\n        return -1\n    }\n \
    \   if a4 < 0 {\n        return -1\n    }\n    return Double(a1 + a2 + a3)", " \
    \   let sides = [a, b, c]\n    let sum = sides.reduce(0, +)\n    if sum > sides.last\
    \ {\n        return -1\n    }\n    let area = Double(sides.last) * Double(sides.last)\
    \ / Double(sides.count)\n    return round(area, 2)", "    let a = abs(a)\n   \
    \ let b = abs(b)\n    let c = abs(c)\n    if a + b > c {\n        return Double(a\
    \ + b - c) / 2\n    }\n    if a + c > b {\n        return Double(a + c - b) /\
    \ 2\n    }\n    if b + c > a {\n        return Double(b + c - a) / 2\n    }\n\
    \    return -1", "    let sides = a + b + c\n    if sides == 0 {\n        return\
    \ -1\n    }\n    let area = sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2))\n    if area\
    \ > sides {\n        return round(area / sides * 100) / 100\n    } else {\n  \
    \      return -1\n    }", "    let a1 = b * b - 4 * a * c\n    let a2 = math.sqrt(a1)\n\
    \    let a3 = math.sqrt(a2)\n    let a4 = math.sqrt(a3)\n    let a5 = math.sqrt(a4)\n\
    \    let a6 = math.sqrt(a5)\n    let a7 = math.sqrt(a6)\n    let a8 = math.sqrt(a7)\n\
    \    let a9 = math.sqrt(a8)\n    let a10 = a9 - a\n    let a11 = a10 - a\n   \
    \ let a12 = a11 - a\n    let a13 = a12 - a\n    let a14 = a13 - a\n    let a15\
    \ = a14 - a\n    let a16 = a15 - a\n    let a17 = a16 - a\n    let a18 = a17 -\
    \ a\n    let a19 = a18 - a\n    let a20 = a19 - a\n    let a21 = a20 - a\n   \
    \ let a22 = a21 - a\n    let a23 = a22 - a\n    let a24 = a23 - a\n    let a25\
    \ = a24 - a\n    let a26 = a25 - a\n    let a27 = a26 - a\n    let a28 = a27 -\
    \ a\n    let a29 = a28 - a\n    let a30 = a29 - a\n    let a31 = a30 - a\n   \
    \ let a32 = a31 - a\n    let a33 = a32 - a\n    let a34 = a33 - a\n    let a35\
    \ = a34 - a\n    let a36 = a35 - a\n    let a37 = a36 - a\n    let a38 = a37 -\
    \ a\n    let a39 = a38 - a\n    let a40 = a39 - a\n    let a41 = a40 - a\n   \
    \ let a42 = a41 - a\n    let a43 = a42 - a\n    let a44 = a43 - a\n    let a45\
    \ = a44 - a\n    let a46 = a45 - a\n    let a47 = a46 - a\n    let a48 = a47 -\
    \ a\n    let a49 = a48 - a\n    let a50 = a49 - a\n    let a51 = a50 - a\n   \
    \ let a52 = a51 - a\n    let a53 = a52 - a\n    let a54 = a53 - a\n    let a55\
    \ = a54 - a\n    let a56 = a55 - a\n    let a57 = a56 - a\n    let a58 = a57 -\
    \ a\n    let a59 = a58 - a\n    let a60 = a59 - a\n    let a61 = a60 - a\n   \
    \ let a62 = a61 - a\n    let a63 = a62 - a\n    let a64 = a63 - a\n    let a65\
    \ = a64 - a\n    let a66 = a65 - a\n    let a67 = a66 - a\n    let a68 = a67 -\
    \ a\n    let a69 = a68 - a\n    let a70 = a69 - a\n    let a71 = a70 - a\n   \
    \ let a72 = a71 - a\n    let a73 = a72 - ", "    let a = abs(a)\n    let b = abs(b)\n\
    \    let c = abs(c)\n    let s = a + b + c\n    if s > 0 {\n        return round(Double(s\
    \ * 0.5) / Double(s))\n    }\n    return -1", "    let sides = [a, b, c]\n   \
    \ let sum = sides.reduce(0, +)\n    if sum > sides.last {\n        return Double(sides.last\
    \ * sides.last)\n    }\n    return -1", "    let area = (a + b + c) / 2\n    if\
    \ area > c {\n        return area\n    }\n    if area < a {\n        return area\n\
    \    }\n    if area > b {\n        return area\n    }\n    return area", '    return
    Double(sqrt(pow((b - a), 2) + pow((c - a), 2)))', "    let a = abs(a)\n    let\
    \ b = abs(b)\n    let c = abs(c)\n    let ac = a + c\n    let bc = b + c\n   \
    \ let ab = a + b\n    let acb = ac + b\n    let abc = ab + c\n    let acbc = acb\
    \ + c\n    let acbca = acbc + a\n    let acbcab = acbca + b\n    let acbcabc =\
    \ acbcab + c\n    let acbcabcb = acbcabc + b\n    let acbcabcbc = acbcabcb + c\n\
    \    let acbcabcbca = acbcabcbc + a\n    let acbcabcbcab = acbcabcbca + b\n  \
    \  let acbcabcbcabc = acbcabcbcab + c\n    let acbcabcbcabcb = acbcabcbcabc +\
    \ b\n    let acbcabcbcabcbc = acbcabcbcabcb + c\n    let acbcabcbcabcbca = acbcabcbcabcbc\
    \ + a\n    let acbcabcbcabcbcab = acbcabcbcabcbca + b\n    let acbcabcbcabcbcabc\
    \ = acbcabcbcabcbcab + c\n    let acbcabcbcabcbcabcb = acbcabcbcabcbcabc + b\n\
    \    let acbcabcbcabcbcabcbc = acbcabcbcabcbcabcb + c\n    let acbcabcbcabcbcabcbca\
    \ = acbcabcbcabcbcabcbc + a\n    let acbcabcbcabcbcabcbcab = acbcabcbcabcbcabcbca\
    \ + b\n    let acbcabcbcabcbcabcbcabc = acbcabcbcabcbcabcbcab + c\n    let acbcabcbcabcbcabcbcabcb\
    \ = acbcabcbcabcbcabcbcabc + b\n    let acbcabcbcabcbcabcbcabcbc = acbcabcbcabcbcabcbcabcb\
    \ + c\n    let acbcabcbcabcbcabcbcabcbca = acbcabcbcabcbcabcbcabcbc + a\n    let\
    \ acbcabcbcabcbcabcbcabcbcab = acbcabcbcabcbcabcbcabcbca + b\n    let acbcabcbcabcbcabcbcabcbcabc\
    \ = acbcabcbcabcbcabcbcabcbcab + c\n    let acbcabcbcabcbcabcbcabcbcabcb = acbcabcbcabcbcabcbcabcbcabc\
    \ + b\n", "    let area = a * b * c\n    if area > 0 {\n        return Double(area)\n\
    \    }\n    return -1", '    return ((a + b + c) / 2) * 0.5', "    let sides =\
    \ [a, b, c]\n    let sum = sides.reduce(0, +)\n    if sum > sides[2] {\n     \
    \   return Double(sum - sides[2])\n    } else {\n        return -1\n    }", " \
    \   let side1 = abs(a) + abs(b) + abs(c)\n    let side2 = abs(a) + abs(b) - abs(c)\n\
    \    let side3 = abs(a) - abs(b) + abs(c)\n    let side4 = abs(a) - abs(b) - abs(c)\n\
    \    let side5 = abs(a) + abs(b) - abs(c)\n    let side6 = abs(a) - abs(b) + abs(c)\n\
    \    let side7 = abs(a) + abs(b) + abs(c)\n    let side8 = abs(a) - abs(b) - abs(c)\n\
    \    let side9 = abs(a) - abs(b) + abs(c)\n    let side10 = abs(a) + abs(b) -\
    \ abs(c)\n    let side11 = abs(a) - abs(b) - abs(c)\n    let side12 = abs(a) +\
    \ abs(b) + abs(c)\n    let side13 = abs(a) - abs(b) + abs(c)\n    let side14 =\
    \ abs(a) - abs(b) - abs(c)\n    let side15 = abs(a) + abs(b) + abs(c)\n    let\
    \ side16 = abs(a) - abs(b) + abs(c)\n    let side17 = abs(a) + abs(b) - abs(c)\n\
    \    let side18 = abs(a) - abs(b) - abs(c)\n    let side19 = abs(a) + abs(b) +\
    \ abs(c)\n    let side20 = abs(a) - abs(b) + abs(c)\n    let side21 = abs(a) -\
    \ abs(b) - abs(c)\n    let side22 = abs(a) + abs(b) - abs(c)\n    let side23 =\
    \ abs(a) - abs(b) - abs(c)\n    let side24 = abs(a) + abs(b) + abs(c)\n    let\
    \ side25 = abs(a) - abs(b) + abs(c)\n    let side26 = abs(a) - abs(b) - abs(c)\n\
    \    let side27 = abs(a) + abs(b) - abs(c)\n    let side28 = abs(a) - abs(b) -\
    \ abs(c)\n    let side29 = abs(a) + abs(b) + abs(c)\n    let side30 = abs(a) -\
    \ abs(b) + abs(c)\n    let side31 = abs(a) - abs(b) - abs(c)\n    let side32 =\
    \ abs(a) + abs(b) + abs(c)\n    let side33 = abs(a) - abs(b) + abs(c)\n    let\
    \ side34 = abs(a) - abs(b) - abs(c)\n    let side35 = abs(a) + abs(b) + abs(c)\n\
    \    let side36 = abs(a) - abs(b) + abs(c)\n    let side37 = abs(a) + abs(b) -\
    \ abs(c)\n    let side38 = abs(a) - abs(b) - abs(c)\n    let side39 = abs(a) -\
    \ abs(b) + abs(c)\n    let side40 = abs(a) + abs(b) - abs(c)\n    let side41 = ",
  "    let sides = a + b + c\n    if sides == 0 {\n        return -1\n    }\n    let\
    \ area = Double(a * b * c) / sides\n    return round(area, 2)", "    let a1 =\
    \ b * b - 4 * a * c\n    let a2 = Math.sqrt(a1)\n    let a3 = -b + Math.sqrt(a1)\n\
    \    let a4 = -b - Math.sqrt(a1)\n    let a5 = Math.sqrt(a3)\n    let a6 = Math.sqrt(a4)\n\
    \    let a7 = Math.sqrt(a5)\n    let a8 = -b + Math.sqrt(a3)\n    let a9 = -b\
    \ - Math.sqrt(a3)\n    let a10 = Math.sqrt(a9)\n    let a11 = Math.sqrt(a10)\n\
    \    let a12 = Math.sqrt(a11)\n    let a13 = -b + Math.sqrt(a4)\n    let a14 =\
    \ -b - Math.sqrt(a4)\n    let a15 = Math.sqrt(a14)\n    let a16 = Math.sqrt(a15)\n\
    \    let a17 = -b + Math.sqrt(a5)\n    let a18 = -b - Math.sqrt(a5)\n    let a19\
    \ = Math.sqrt(a17)\n    let a20 = Math.sqrt(a18)\n    let a21 = Math.sqrt(a19)\n\
    \    let a22 = -b + Math.sqrt(a6)\n    let a23 = -b - Math.sqrt(a6)\n    let a24\
    \ = Math.sqrt(a23)\n    let a25 = Math.sqrt(a24)\n    let a26 = -b + Math.sqrt(a7)\n\
    \    let a27 = -b - Math.sqrt(a7)\n    let a28 = Math.sqrt(a27)\n    let a29 =\
    \ Math.sqrt(a28)\n    let a30 = -b + Math.sqrt(a8)\n    let a31 = -b - Math.sqrt(a8)\n\
    \    let a32 = Math.sqrt(a30)\n    let a33 = Math.sqrt(a31)\n    let a34 = -b\
    \ + Math.sqrt(a9)\n    let a35 = -b - Math.sqrt(a9)\n    let a36 = Math.sqrt(a34)\n\
    \    let a37 = Math.sqrt(a35)\n    let a38 = -b + Math.sqrt(a10)\n    let a39\
    \ = -b - Math.sqrt(a10)\n    let a40 = Math.sqrt(a39)\n    let a41 = Math.sqrt(a38)\n\
    \    let a42 = -b + Math.sqrt(a11)\n    let a43 = -b - Math.sqrt(a11)\n    let\
    \ a44 = Math.sqrt(a42)\n    let a45 = Math.sqrt(a43)\n    let a46 = -b + Math.sqrt(a12)\n\
    \    let a47 = -b - Math.sqrt(a12)\n    let a48 = Math.sqrt(a46)\n    let a49\
    \ = Math.sqrt(a47)\n    let a50 = -b + Math.sqrt(a13)\n    let a51 = -b - Math.sqrt(a13)\n\
    \    let a52 = Math.sqrt(a50)\n    let a53 = Math.sqrt(a51)\n    let a54 = -b\
    \ + Math.sqrt(a14)\n    let a55", "    let sides = a + b + c\n    if sides <=\
    \ 0 {\n        return -1\n    }\n    let area = sqrt(Double(sides) * Double(sides)\
    \ / Double(2))\n    return round(area, 2)", "    let sides = a + b + c\n    if\
    \ sides <= 0 {\n        return -1\n    }\n    let area = Double(sides) / Double(3.0)\n\
    \    return round(area, 2)", "    let side1 = abs(a) + abs(b) + abs(c)\n    let\
    \ side2 = abs(a) + abs(b) - abs(c)\n    let side3 = abs(a) - abs(b) + abs(c)\n\
    \    let side4 = abs(a) - abs(b) - abs(c)\n    let area: Double\n    if side1\
    \ == side2 && side2 == side3 {\n        area = side1\n    } else if side1 == side3\
    \ && side2 == side4 {\n        area = side1\n    } else if side1 == side4 && side2\
    \ == side3 {\n        area = side1\n    } else {\n        area = -1\n    }\n \
    \   return round(area, 2)", "    let a = abs(a)\n    let b = abs(b)\n    let c\
    \ = abs(c)\n    if a + b > c {\n        return Double(a + b - c)\n    }\n    if\
    \ a + c > b {\n        return Double(a + c - b)\n    }\n    if b + c > a {\n \
    \       return Double(b + c - a)\n    }\n    return Double(a + b + c)", "    let\
    \ area = a * b * c\n    if area > 0 {\n        return Double(area / a)\n    }\n\
    \    return -1", '    return Double(sqrt(pow((b - a), 2) + pow((c - a), 2)))',
  "    let sum = a + b + c\n    if sum < 0 {\n        return -1\n    }\n    if sum\
    \ > 3 {\n        return -1\n    }\n    return Double(sum) / Double(3.0)", "  \
    \  let area = a * b * c\n    let rounded = Double(area).rounded(toPlaces: 2)\n\
    \    return rounded < 0 ? -1 : (rounded / Double(a))", "    if a + b > c {\n \
    \       return Double(a + b - c)\n    }\n    if a + c > b {\n        return Double(a\
    \ + c - b)\n    }\n    if b + c > a {\n        return Double(b + c - a)\n    }\n\
    \    return -1", "    let a1 = b * b - 4 * a * c\n    let a2 = Math.sqrt(a1)\n\
    \    let a3 = -b + Math.sqrt(a1)\n    let a4 = -b - Math.sqrt(a1)\n    if a2 >\
    \ 0 {\n        return Double(a2 / a3)\n    } else {\n        return Double(-1)\n\
    \    }", "    let side1 = abs(a) + abs(b) + abs(c)\n    let side2 = abs(a) + abs(b)\
    \ - abs(c)\n    let side3 = abs(a) - abs(b) - abs(c)\n    let area: Double = side1\
    \ * side2 * side3\n    if area >= 0 {\n        return area\n    } else {\n   \
    \     return -1\n    }", "    let a = abs(a)\n    let b = abs(b)\n    let c =\
    \ abs(c)\n    if a + b > c {\n        return Double(a + b - c)\n    }\n    if\
    \ a + c > b {\n        return Double(a + c - b)\n    }\n    if b + c > a {\n \
    \       return Double(b + c - a)\n    }\n    return Double(a + b + c)", "    let\
    \ sides = a + b + c\n    if sides <= 0 {\n        return -1\n    }\n    let area\
    \ = sides * (sides - a) * (sides - b) * (sides - c)\n    return Double(area /\
    \ sides)", "    let a1 = b * b - a * c\n    let a2 = c * c - a * b\n    let a3\
    \ = a * a - a * b * b\n    let a4 = a * b * b - a * c * c\n    let a5 = a * c\
    \ * c - a * b * c\n    let a6 = a * b * c * a * b - a * c * b\n    let a7 = a\
    \ * c * c * a * b - a * b * c\n    let a8 = -b * c * a * b - a * c * b\n    let\
    \ a9 = -a * c * b * b - a * b * c\n    let a10 = -a * b * c * a * b - a * c *\
    \ c\n    let a11 = a * b * c * a * b - a * b * c\n    let a12 = -a * b * c * a\
    \ * b - a * c * b\n    let a13 = a * c * c * a * b - a * b * c\n    let a14 =\
    \ a * b * c * a * b - a * c * c\n    let a15 = -a * b * c * a * b - a * c * b\n\
    \    let a16 = a * c * c * a * b - a * b * c\n    let a17 = a * b * c * a * b\
    \ - a * c * c\n    let a18 = -b * c * a * b - a * c * b\n    let a19 = -a * c\
    \ * b * b - a * b * c\n    let a20 = -a * b * c * a * b - a * c * c\n    let a21\
    \ = a * b * c * a * b - a * b * c\n    let a22 = a * c * c * a * b - a * b * c\n\
    \    let a23 = a * b * c * a * b - a * c * c\n    let a24 = -b * c * a * b - a\
    \ * c * b\n    let a25 = -a * c * b * b - a * b * c\n    let a26 = -a * b * c\
    \ * a * b - a * c * c\n    let a27 = a * b * c * a * b - a * c * c\n    let a28\
    \ = -b * c * a * b - a * c * b\n    let a29 = -a * c * b * b - a * b * c\n   \
    \ let a30 = -a * b * c * a * b - a * c * c\n    let a31 = a * b * c * a * b -\
    \ a * b * c\n    let a32 = a * c * c * a * b - a * b * c\n    let a33 = a * b\
    \ * c * a * b - a * c * c\n    let a34 = -b * c * a * b - a * c * b\n    let a35\
    \ = -a * c * b * b - a * b * c\n    let a36 = -a * b * c * a * b - a * c * c\n\
    \    let a37 = a * b * c", "    let sides = [a, b, c]\n    let sumOfSides = sides.reduce(0,\
    \ +)\n    if sumOfSides > sides.last {\n        return -1\n    }\n    return Double(sides.last)\
    \ * Double(sides.last) / Double(sides.count)", "    let a2 = a * a\n    let b2\
    \ = b * b\n    let c2 = c * c\n    let ac = a2 + c2\n    let bc = b2 + c2\n  \
    \  let ab = a2 + b2\n    let ac2 = ac * ac\n    let bcc = bc + bc\n    let abc\
    \ = (ab + bc) * (ab + bc)\n    let acb2 = ac2 * ac\n    let bcb2 = bcc * bcc\n\
    \    let abc2 = abc * abc\n    let acb2b2 = acb2 * ac2\n    let bcb2b2 = bcb2\
    \ * bc2\n    let abc2b2 = abc2 * abc2\n    let acb2b2b2 = acb2b2 * acb2\n    let\
    \ bcb2b2b2 = bcb2b2 * bcb2\n    let abc2b2b2 = abc2b2 * abc2\n    let acb2b2b2b2\
    \ = acb2b2b2 * acb2b2\n    let bcb2b2b2b2 = bcb2b2b2 * bcb2b2\n    let abc2b2b2b2\
    \ = abc2b2b2 * abc2b2\n    let acb2b2b2b2b2 = acb2b2b2b2 * acb2b2b2\n    let bcb2b2b2b2b2\
    \ = bcb2b2b2b2 * bcb2b2b2b2\n    let abc2b2b2b2b2 = abc2b2b2b2 * abc2b2b2\n  \
    \  let acb2b2b2b2b2 = acb2b2b2b2 * acb2b2b2b2\n    let bcb2b2b2b2b2 = bcb2b2b2b2\
    \ * bcb2b2b2b2\n    let abc2b2b2b2b2 = abc2b2b2b2 * abc2b2b2b2\n    let acb2b2b2b2b2b2\
    \ = acb2b2b2b2b2 * acb2b2b2b2b2\n    let bcb2b2b2b2b2b2 = bcb2b2b2b2b2 * bcb2b2b2b2b2\n\
    \    let abc2b2b2b2b2b2 = abc2b2b2b2b2 * abc2b2b2b2b2\n    let acb2b2b2b2b2b2\
    \ = acb2b2b2b2b2 * acb2b2b2b2b2\n    let bcb2b2b2b2b2b2 = bcb2b2b2b2b2 * bcb2b2b2b2b2\n\
    \    let abc2b2b2b2b2b2 = abc2b2b2b2b2 * abc2b2b2b2b2\n    let acb2b2b2b2b2b2b2\
    \ = acb2b2b2b2b2b2 * acb2b2b2b2b2b2\n    let bcb2b2b2b2b2b2b2b2 = bcb2b2b2b2b2b2\
    \ * bcb2b2b2b", "    let sides = a + b + c\n    if sides == 0 {\n        return\
    \ -1\n    }\n    let area = sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2))\n    if area\
    \ > sides {\n        return area\n    }\n    return round(area / sides * 100)\
    \ / 100", "    let sides = [a, b, c]\n    let sumOfSides = sides.reduce(0, +)\n\
    \    if sumOfSides > sides[2] {\n        return -1\n    }\n    return Double(sides[0]\
    \ * sides[1]) / Double(sides[2] * sides[2])", "    let a1 = abs(a)\n    let b1\
    \ = abs(b)\n    let c1 = abs(c)\n    if a1 + b1 > c1 {\n        return a * b *\
    \ c / 2\n    } else {\n        return -1\n    }", "    let sides = a + b + c\n\
    \    if sides == 0 {\n        return 0.0\n    }\n    let area = sqrt(Double(sides)\
    \ * Double(sides) / Double(2))\n    return round(area, 2)", "    let side1 = abs(a)\
    \ + abs(b) + abs(c)\n    let side2 = abs(a) + abs(b) - abs(c)\n    let side3 =\
    \ abs(a) - abs(b) + abs(c)\n    let side4 = abs(a) - abs(b) - abs(c)\n    let\
    \ side5 = abs(a) + abs(b) - abs(c)\n    let side6 = abs(a) - abs(b) + abs(c)\n\
    \    let side7 = abs(a) + abs(b) + abs(c)\n    let side8 = abs(a) - abs(b) + abs(c)\n\
    \    let side9 = abs(a) - abs(b) - abs(c)\n    let side10 = abs(a) + abs(b) -\
    \ abs(c)\n    let side11 = abs(a) - abs(b) + abs(c)\n    let side12 = abs(a) +\
    \ abs(b) + abs(c)\n    let side13 = abs(a) - abs(b) - abs(c)\n    let side14 =\
    \ abs(a) - abs(b) + abs(c)\n    let side15 = abs(a) + abs(b) + abs(c)\n    let\
    \ side16 = abs(a) - abs(b) - abs(c)\n    let side17 = abs(a) + abs(b) - abs(c)\n\
    \    let side18 = abs(a) - abs(b) + abs(c)\n    let side19 = abs(a) - abs(b) -\
    \ abs(c)\n    let side20 = abs(a) + abs(b) - abs(c)\n    let side21 = abs(a) -\
    \ abs(b) + abs(c)\n    let side22 = abs(a) + abs(b) + abs(c)\n    let side23 =\
    \ abs(a) - abs(b) - abs(c)\n    let side24 = abs(a) - abs(b) + abs(c)\n    let\
    \ side25 = abs(a) + abs(b) + abs(c)\n    let side26 = abs(a) - abs(b) - abs(c)\n\
    \    let side27 = abs(a) - abs(b) + abs(c)\n    let side28 = abs(a) + abs(b) -\
    \ abs(c)\n    let side29 = abs(a) - abs(b) - abs(c)\n    let side30 = abs(a) -\
    \ abs(b) + abs(c)\n    let side31 = abs(a) + abs(b) - abs(c)\n    let side32 =\
    \ abs(a) - abs(b) - abs(c)\n    let side33 = abs(a) - abs(b) + abs(c)\n    let\
    \ side34 = abs(a) + abs(b) - abs(c)\n    let side35 = abs(a) - abs(b) - abs(c)\n\
    \    let side36 = abs(a) - abs(b) + abs(c)\n    let side37 = abs(a) + abs(b) -\
    \ abs(c)\n    let side38 = abs(a) - abs(b) - abs(c)\n    let side39 = abs(a) -\
    \ abs(b) + abs(c)\n    let side40 = abs(a) + abs(b) - abs(c)\n    let side41 = ",
  "    let sum = a + b + c\n    if sum > 3 {\n        return Double(sum - 3) / 2.0\n\
    \    }\n    return -1", "    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n\
    \    if a + b > c {\n        return Double(a + b - c)\n    }\n    if a + c > b\
    \ {\n        return Double(a + c - b)\n    }\n    if b + c > a {\n        return\
    \ Double(b + c - a)\n    }\n    return -1", "    let a = abs(a)\n    let b = abs(b)\n\
    \    let c = abs(c)\n    if a + b > c {\n        return Double(a + b - c)\n  \
    \  }\n    if a + c > b {\n        return Double(a + c - b)\n    }\n    if b +\
    \ c > a {\n        return Double(b + c - a)\n    }\n    return Double(a + b +\
    \ c)", "    let side1 = sqrt(pow(a, 2) + pow(b, 2))\n    let side2 = sqrt(pow(c,\
    \ 2) + pow(b, 2))\n    let side3 = sqrt(pow(c, 2) + pow(a, 2))\n    let area =\
    \ (side1 + side2 + side3) / 2.0\n    if area > 0.0 {\n        return round(area,\
    \ 2)\n    } else {\n        return -1.0\n    }", '    return Double(sqrt(pow((b
    - a), 2) + pow((c - a), 2)))', "    let a = abs(a)\n    let b = abs(b)\n    let\
    \ c = abs(c)\n    if a + b > c {\n        return Double(a + b - c)\n    }\n  \
    \  if a + c > b {\n        return Double(a + c - b)\n    }\n    if b + c > a {\n\
    \        return Double(b + c - a)\n    }\n    return Double(a + b + c)", "   \
    \ let a1 = b * b - 4 * a * c\n    let a2 = sqrt(a1)\n    let a3 = sqrt(a2)\n \
    \   let a4 = sqrt(a3)\n    if a4 < 0 {\n        return -1\n    }\n    return (a1\
    \ + a2 + a3) / 2.0", "    let side1 = abs(a) + abs(b) + abs(c)\n    let side2\
    \ = abs(a) + abs(b) - abs(c)\n    let side3 = abs(a) - abs(b) - abs(c)\n    if\
    \ side1 == side2 && side2 == side3 {\n        return Double(side1)\n    }\n  \
    \  return -1", "    let sides = [a, b, c]\n    let sum = sides.reduce(0, +)\n\
    \    if sum > sides.last {\n        return Double(sides.last * sides.last)\n \
    \   }\n    return -1", "    let side1 = sqrt(pow(a, 2) + pow(b, 2))\n    let side2\
    \ = sqrt(pow(c, 2) + pow(d, 2))\n    let side3 = sqrt(pow(d, 2) + pow(e, 2))\n\
    \    let area = (side1 + side2 + side3) / 2\n    if area >= 0 {\n        return\
    \ area\n    } else {\n        return -1\n    }", "    let a = abs(a)\n    let\
    \ b = abs(b)\n    let c = abs(c)\n    if a + b > c {\n        return Double(a\
    \ + b - c)\n    } else {\n        return Double(a + b + c - a)\n    }", "    let\
    \ area: Double = Double(a * b * c) / Double(a * a + b * b + c * c)\n    return\
    \ area < 0.0 ? -1.0 : area", "    let area: Double = Double(a * b * c) / Double(2.0\
    \ * Double(a) + Double(b) + Double(c))\n    if area >= 1.0 {\n        return area\n\
    \    }\n    return -1", "    let a1 = b * b - 4 * a * c\n    let a2 = Math.sqrt(a1)\n\
    \    let a3 = -b + Math.sqrt(a1)\n    let a4 = -b - Math.sqrt(a1)\n    if a2 >\
    \ 0 {\n        return Double(a1 / a2)\n    } else if a3 > 0 {\n        return\
    \ Double(a1 / a3)\n    } else if a4 > 0 {\n        return Double(a1 / a4)\n  \
    \  } else {\n        return -1\n    }", "    let sides = a + b + c\n    if sides\
    \ % 2 == 0 {\n        return Double(sides) / 2\n    }\n    return -1", "    let\
    \ side1 = sqrt(pow(a, 2) + pow(b, 2))\n    let side2 = sqrt(pow(c, 2) + pow(d,\
    \ 2))\n    let side3 = sqrt(pow(d, 2) + pow(e, 2))\n    let area: Double = side1\
    \ + side2 + side3\n    if area > 0 {\n        return round(area, 2)\n    } else\
    \ {\n        return -1\n    }", "    let side1 = abs(a) + abs(b) + abs(c)\n  \
    \  let side2 = abs(a) + abs(b) - abs(c)\n    let side3 = abs(a) - abs(b) - abs(c)\n\
    \    let area = side1 * side2 * side3\n    if area > 0 {\n        return Double(area)\
    \ / 3\n    } else {\n        return -1\n    }", "    let a1 = b * b - a * c\n\
    \    let a2 = c * c - a1 * a\n    let a3 = a1 * a\n    let a4 = a1 * a\n    let\
    \ a5 = a1 * a\n    let a6 = a1 * a\n    let a7 = a1 * a\n    let a8 = a1 * a\n\
    \    let a9 = a1 * a\n    let a10 = a1 * a\n    let a11 = a1 * a\n    let a12\
    \ = a1 * a\n    let a13 = a1 * a\n    let a14 = a1 * a\n    let a15 = a1 * a\n\
    \    let a16 = a1 * a\n    let a17 = a1 * a\n    let a18 = a1 * a\n    let a19\
    \ = a1 * a\n    let a20 = a1 * a\n    let a21 = a1 * a\n    let a22 = a1 * a\n\
    \    let a23 = a1 * a\n    let a24 = a1 * a\n    let a25 = a1 * a\n    let a26\
    \ = a1 * a\n    let a27 = a1 * a\n    let a28 = a1 * a\n    let a29 = a1 * a\n\
    \    let a30 = a1 * a\n    let a31 = a1 * a\n    let a32 = a1 * a\n    let a33\
    \ = a1 * a\n    let a34 = a1 * a\n    let a35 = a1 * a\n    let a36 = a1 * a\n\
    \    let a37 = a1 * a\n    let a38 = a1 * a\n    let a39 = a1 * a\n    let a40\
    \ = a1 * a\n    let a41 = a1 * a\n    let a42 = a1 * a\n    let a43 = a1 * a\n\
    \    let a44 = a1 * a\n    let a45 = a1 * a\n    let a46 = a1 * a\n    let a47\
    \ = a1 * a\n    let a48 = a1 * a\n    let a49 = a1 * a\n    let a50 = a1 * a\n\
    \    let a51 = a1 * a\n    let a52 = a1 * a\n    let a53 = a1 * a\n    let a54\
    \ = a1 * a\n    let a55 = a1 * a\n    let a56 = a1 * a\n    let a57 = a1 * a\n\
    \    let a58 = a1 * a\n    let a59 = a1 * a\n    let a60 = a1 * a\n    let a61\
    \ = a1 * a\n    let a62 = a1 * a\n    let a63 = a1 * a\n    let a64 = a1 * a\n\
    \    let a65 = a1 * a\n    let a66 = a1 * a\n    let a67 = a1 * a\n    let a68\
    \ = a1 * a\n    let a69 = a1 * a\n    let a70 = a1 * a\n    let a71 = a1 * a\n\
    \    let a72 = a1 * a\n    let a73 = a1 * a\n    let a74 = a1 * a\n    let a75\
    \ = a1 * a\n    let a76 = a1 * a\n    let a77 = a1 * a\n    let a78 = a1 * a\n\
    \    let a79 = a1 * a\n    let a80 = a1 * a\n    let a81 = a1 * a\n    let a82\
    \ = a1 * a\n    let a83 = a1 * a\n    let a84 = a1 * a\n    let a85 = a1 * a\n\
    \    let a86 = a1 * a\n", "    let side1 = abs(a) + abs(b) + abs(c)\n    let side2\
    \ = abs(a) + abs(b) - abs(c)\n    let side3 = abs(a) - abs(b) + abs(c)\n    let\
    \ side4 = abs(a) - abs(b) - abs(c)\n    let area = (side1 + side2 + side3 + side4)\
    \ / 4\n    if area > 0 {\n        return round(area, 2)\n    } else {\n      \
    \  return -1\n    }", "    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n\
    \    if a + b > c {\n        return Double(a + b - c)\n    }\n    if a + c > b\
    \ {\n        return Double(a + c - b)\n    }\n    if b + c > a {\n        return\
    \ Double(b + c - a)\n    }\n    return -1", "    let sides = [a, b, c]\n    let\
    \ sum = sides.reduce(0, +)\n    if sum > sides.last {\n        return -1\n   \
    \ }\n    return Double(sides.last) * Double(sides.last) / Double(sides.count)",
  "    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    if a + b > c {\n\
    \        return Double(a + b - c) / 2\n    }\n    if a + c > b {\n        return\
    \ Double(a + c - b) / 2\n    }\n    if b + c > a {\n        return Double(b +\
    \ c - a) / 2\n    }\n    return -1", "    let a = abs(a)\n    let b = abs(b)\n\
    \    let c = abs(c)\n    let s = a + b + c\n    if s > 0 {\n        return s /\
    \ 2\n    } else {\n        return -1\n    }", "    let a1 = abs(a)\n    let b1\
    \ = abs(b)\n    let c1 = abs(c)\n    if a1 > b1 && b1 > c1 {\n        return a\
    \ * b * c / 2\n    }\n    if a1 > c1 {\n        return a * b * c / 2\n    }\n\
    \    if b1 > c1 {\n        return a * b * c / 2\n    }\n    return -1", "    let\
    \ sides = a + b + c\n    if sides == 0 {\n        return -1\n    }\n    let area\
    \ = sqrt(Double(a * b * c) / sides)\n    return round(area, 2)", "    let sides\
    \ = [a, b, c]\n    let sumOfSides = sides.reduce(0, +)\n    if sumOfSides > sides.last\
    \ {\n        return -1\n    }\n    return Double(sides.last) * Double(sides.last)\
    \ / Double(sides.count)", "    let a1 = b * b - 4 * a * c\n    let a2 = Math.sqrt(a1)\n\
    \    let a3 = -b + Math.sqrt(a1)\n    let a4 = -b - Math.sqrt(a1)\n    if a2 >\
    \ 0 {\n        return Double(a2 / a3)\n    }\n    if a4 > 0 {\n        return\
    \ Double(a4 / a3)\n    }\n    return -1", "    let side1 = sqrt(pow(a, 2) + pow(b,\
    \ 2))\n    let side2 = sqrt(pow(b, 2) + pow(c, 2))\n    let side3 = sqrt(pow(c,\
    \ 2) + pow(a, 2))\n    let area = (side1 + side2 + side3) / 2.0\n    if area >\
    \ 0.0 {\n        return area\n    } else {\n        return -1\n    }", "    let\
    \ sides = a + b + c\n    if sides <= 0 {\n        return -1\n    }\n    let area\
    \ = sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2))\n    return round(area, 2)", "   \
    \ if a + b > c {\n        return -1\n    }\n    if a + c > b {\n        return\
    \ -1\n    }\n    if b + c > a {\n        return -1\n    }\n    return Double(sqrt(Double(a\
    \ * b * c)))", "    let a1 = b * b - a * c\n    let a2 = a * a\n    let c1 = c\
    \ * c - a1 * a\n    let c2 = c * a\n    let det = a1 * c2 - a2 * c1\n    if det\
    \ < 0 {\n        return -1\n    }\n    return Double(sqrt(Double(det)))", "  \
    \  let sides = [a, b, c]\n    let sumOfSides = sides.reduce(0, +)\n    if sumOfSides\
    \ > sides.last {\n        return -1\n    }\n    return Double(sides.last) * Double(sides.last)\
    \ / Double(sides.first - sides.last)", "    let a1 = (a + b + c) / 2\n    let\
    \ b1 = (b + c + a) / 2\n    let c1 = (c + a + b) / 2\n    if a1 > b1 && a1 > c1\
    \ {\n        return a1 * 0.5\n    } else if b1 > c1 {\n        return b1 * 0.5\n\
    \    } else {\n        return c1 * 0.5\n    }", "    let a = abs(a)\n    let b\
    \ = abs(b)\n    let c = abs(c)\n    if a + b > c {\n        return Double(a +\
    \ b - c)\n    } else {\n        return Double(a + b + c - a)\n    }", "    let\
    \ side1 = abs(a) + abs(b) + abs(c)\n    let side2 = abs(a) + abs(b) - abs(c)\n\
    \    let side3 = abs(a) - abs(b) - abs(c)\n    let area = side1 * side2 * side3\n\
    \    if area > 0 {\n        return Double(area) / 3\n    } else {\n        return\
    \ -1\n    }", "    let sides = a + b + c\n    if sides == 0 {\n        return\
    \ -1\n    }\n    let area = sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2))\n    if area\
    \ < 0 {\n        return -1\n    }\n    return round(area, 2)", '    return sqrt(pow((b
    - a), 2) + pow((c - a), 2))', "    let a = abs(a)\n    let b = abs(b)\n    let\
    \ c = abs(c)\n    if a + b > c {\n        return b * b - 4 * a * c\n    } else\
    \ {\n        return -1\n    }", "    let a = abs(a)\n    let b = abs(b)\n    let\
    \ c = abs(c)\n    if a + b > c {\n        return Double(a + b - c) / 2\n    }\n\
    \    if a + c > b {\n        return Double(a + c - b) / 2\n    }\n    if b + c\
    \ > a {\n        return Double(b + c - a) / 2\n    }\n    return Double(a + b\
    \ + c) / 2", "    let sides = [a, b, c]\n    let sum = sides.reduce(0, +)\n  \
    \  if sum > sides[2] {\n        return Double(sides[2]) / 2.0\n    }\n    return\
    \ Double(sides[0] + sides[1] + sides[2]) / 3.0", "    let side1 = abs(a) + abs(b)\
    \ + abs(c)\n    let side2 = abs(a) + abs(b) - abs(c)\n    let side3 = abs(a) -\
    \ abs(b) - abs(c)\n    let area = side1 * side2 * side3\n    if area > 0 {\n \
    \       return Double(area) / 3\n    }\n    return -1", "    let sides = [a, b,\
    \ c]\n    let sum = sides.reduce(0, +)\n    if sum > sides.last {\n        return\
    \ -1\n    }\n    return Double(sides.last) * Double(sides.last) / Double(sides.last)",
  "    if a + b > c {\n        return Double(-1) * Double(a / b)\n    }\n    if a\
    \ + c > b {\n        return Double(-1) * Double(b / c)\n    }\n    if b + c >\
    \ a {\n        return Double(-1) * Double(c / a)\n    }\n    return Double(a +\
    \ b + c) / 2", "    let side1 = abs(a)\n    let side2 = abs(b)\n    let side3\
    \ = abs(c)\n    let sum = side1 + side2 + side3\n    if sum > side3 {\n      \
    \  return Double(round(Double(side1 + side2 - side3) / 2))\n    } else {\n   \
    \     return -1\n    }", "    let sides = a + b + c\n    if sides <= 0 {\n   \
    \     return -1\n    }\n    let area = Double(sides) / Double(3.0)\n    return\
    \ round(area, 2)", "    let sides = a + b + c\n    if sides <= 0 {\n        return\
    \ -1\n    }\n    let area = Double(sides) / Double(3.0)\n    return round(area,\
    \ 2)", "    if a + b > c {\n        return Double(-1) * Double(a / b)\n    }\n\
    \    if a + c > b {\n        return Double(-1) * Double(b / c)\n    }\n    if\
    \ b + c > a {\n        return Double(-1) * Double(c / a)\n    }\n    return Double(a\
    \ + b + c) / 2", "    let sides = a + b + c\n    let area = sides * 0.5\n    if\
    \ area > Double(sides) {\n        return Double(area)\n    } else {\n        return\
    \ -1\n    }", "    let a1 = (a + b + c) / 2\n    let b1 = (b + c + a) / 2\n  \
    \  let c1 = (c + a + b) / 2\n    return a1 * b1 * c1", "    if a + b > c {\n \
    \       return Double(-1) * Double(a / b) * Double(b / c)\n    }\n    if a + c\
    \ > b {\n        return Double(-1) * Double(a / c) * Double(c / b)\n    }\n  \
    \  if b + c > a {\n        return Double(-1) * Double(b / c) * Double(c / a)\n\
    \    }\n    return Double(-1) * Double(a / b) * Double(b / c) * Double(c / a)",
  "    let sides = [a, b, c]\n    let sumOfSides = sides.reduce(0, +)\n    if sumOfSides\
    \ > sides.last {\n        return -1\n    }\n    let thirdSide = sides.last\n \
    \   let thirdSideArea = thirdSide * thirdSide\n    let secondSideArea = sides.reduce(0,\
    \ +) * sides.last\n    let areaOfTriangle = thirdSideArea + secondSideArea\n \
    \   return Double(areaOfTriangle) / Double(sides.count)", "    if a + b > c {\n\
    \        return Double(-1) * Double(a / b)\n    }\n    if a + c > b {\n      \
    \  return Double(-1) * Double(b / c)\n    }\n    if b + c > a {\n        return\
    \ Double(-1) * Double(c / a)\n    }\n    return Double(a + b + c) / 2", "    let\
    \ sides = [a, b, c]\n    let sum = sides.reduce(0, +)\n    if sum > sides.last\
    \ {\n        return -1\n    }\n    return Double(sum) / Double(sides.last)", " \
    \   let area: Double = abs(a * b * c) / sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2))\n\
    \    return area >= 0.0 ? area : -1.0", "    let a = abs(a)\n    let b = abs(b)\n\
    \    let c = abs(c)\n    if a + b > c {\n        return b * b - 4 * a * c\n  \
    \  }\n    if a + c > b {\n        return c * c - 4 * a * b\n    }\n    return\
    \ a * a + b * b - c * c", "    let a1 = abs(a)\n    let b1 = abs(b)\n    let c1\
    \ = abs(c)\n    if a1 + b1 > c1 {\n        return a * b * c / (a1 + b1 + c1)\n\
    \    } else {\n        return -1\n    }", "    let sides = a + b + c\n    if sides\
    \ <= 0 {\n        return -1\n    }\n    let area = Double(sides) / Double(3.0)\n\
    \    return round(area, 2)", "    let sides = a + b + c\n    if sides % 2 == 0\
    \ {\n        return Double(sides) / 2\n    }\n    return -1", "    let sides =\
    \ [a, b, c]\n    guard sides.count >= 3 else {\n        return -1\n    }\n   \
    \ let sum = sides.reduce(0, +)\n    if sum > sides[2] {\n        return Double(round(Double(sides[0])\
    \ / Double(sides[1])))\n    } else {\n        return Double(round(Double(sides[0])\
    \ / Double(sides[2])))\n    }", "    let a = abs(a)\n    let b = abs(b)\n    let\
    \ c = abs(c)\n    if a + b > c {\n        return Double(a + b - c) / 2\n    }\n\
    \    if a + c > b {\n        return Double(a + c - b) / 2\n    }\n    if b + c\
    \ > a {\n        return Double(b + c - a) / 2\n    }\n    return Double(a + b\
    \ + c) / 2", "    let sides = [a, b, c]\n    let sum = sides.reduce(0, +)\n  \
    \  if sum > sides.last {\n        return -1\n    }\n    return Double(sum) / Double(sides.last)",
  "    let sides = sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2))\n    if sides > 0 {\n \
    \       return Double(round(sides * 100)) / 100\n    } else {\n        return\
    \ -1\n    }", "    let area = (a * b) - (c * c)\n    if area > 0 {\n        return\
    \ Double(area) / Double(a * b * c)\n    } else {\n        return -1\n    }", " \
    \   let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    if a + b > c {\n\
    \        return Double(a + b - c)\n    }\n    if a + c > b {\n        return Double(a\
    \ + c - b)\n    }\n    if b + c > a {\n        return Double(b + c - a)\n    }\n\
    \    return -1", "    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n\
    \    if a + b > c {\n        return Double(a + b - c)\n    }\n    if a + c > b\
    \ {\n        return Double(a + c - b)\n    }\n    if b + c > a {\n        return\
    \ Double(b + c - a)\n    }\n    return Double(a + b + c)", "    let area = (a\
    \ * b) - (c * c)\n    if area < 0 {\n        return -1\n    }\n    return Double(area)\
    \ / Double(a * b + c * c)", "    let a = abs(a)\n    let b = abs(b)\n    let c\
    \ = abs(c)\n    let s = (a + b + c) / 2\n    if s > 0 {\n        let area = s\
    \ * s\n        let area = Double(area)\n        let area = round(area, 2)\n  \
    \      return area\n    } else {\n        return -1\n    }", "    let a = abs(a)\n\
    \    let b = abs(b)\n    let c = abs(c)\n    if a + b > c {\n        return Double(a\
    \ + b - c)\n    }\n    if a + c > b {\n        return Double(a + c - b)\n    }\n\
    \    if b + c > a {\n        return Double(b + c - a)\n    }\n    return -1",
  "    let area = (a + b + c) / 2\n    if area >= a && area >= b && area >= c {\n\
    \        return area\n    } else {\n        return -1\n    }", "    let a = abs(a)\n\
    \    let b = abs(b)\n    let c = abs(c)\n    if a + b > c {\n        return Double(a\
    \ + b - c)\n    } else {\n        return Double(a + b + c - a)\n    }", "    let\
    \ sides = a + b + c\n    if sides <= 0 {\n        return -1\n    }\n    let area\
    \ = Double(sides) / Double(3.0)\n    return round(area, 2)", "    if a + b > c\
    \ {\n        return Double(-1) * Double(a + b - c)\n    }\n    if a + c > b {\n\
    \        return Double(-1) * Double(a + c - b)\n    }\n    if b + c > a {\n  \
    \      return Double(-1) * Double(b + c - a)\n    }\n    return Double(a + b +\
    \ c) / 2", "    let side1 = abs(a) + abs(b) + abs(c)\n    let side2 = abs(a) +\
    \ abs(b) - abs(c)\n    let side3 = abs(a) - abs(b) - abs(c)\n    if side1 == side2\
    \ && side2 == side3 {\n        return Double(side1)\n    }\n    return -1", " \
    \   let sides = [a, b, c]\n    let sum = sides.reduce(0, +)\n    if sum > sides[2]\
    \ {\n        return Double(sides[2]) / Double(sides[0])\n    }\n    return -1",
  "    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    if a + b > c {\n\
    \        return Double(a + b - c)\n    }\n    if a + c > b {\n        return Double(a\
    \ + c - b)\n    }\n    if b + c > a {\n        return Double(b + c - a)\n    }\n\
    \    return -1", "    let sides = a + b + c\n    if sides <= 0 {\n        return\
    \ -1\n    }\n    let area = sqrt(Double(a * b * c) / sides)\n    return round(area,\
    \ 2)", "    let side1 = abs(a) + abs(b) + abs(c)\n    let side2 = abs(a) + abs(b)\
    \ - abs(c)\n    let side3 = abs(a) - abs(b) + abs(c)\n    if side1 == side2 ||\
    \ side1 == side3 {\n        return Double(side1)\n    }\n    if side2 == side3\
    \ {\n        return Double(side2)\n    }\n    return Double(-1)", "    if a +\
    \ b > c {\n        return -1\n    }\n    if a + c > b {\n        return -1\n \
    \   }\n    if b + c > a {\n        return -1\n    }\n    return sqrt(pow(a, 2)\
    \ + pow(b, 2) + pow(c, 2))", "    let a = abs(a)\n    let b = abs(b)\n    let\
    \ c = abs(c)\n    let s = a + b + c\n    if s > 0 {\n        return sqrt(s * (s\
    \ - a) * (s - b) * (s - c))\n    } else {\n        return -1\n    }", "    let\
    \ a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    let s = a + b + c\n\
    \    if s > 0 {\n        return sqrt(s * (s - a) * (s - b) * (s - c))\n    }\n\
    \    return -1", "    let sides = a + b + c\n    if sides == 0 {\n        return\
    \ 0.0\n    }\n    let area = Double(sides) / Double(sides - a)\n    if area >=\
    \ 1.0 {\n        return area\n    }\n    return area - 1.0", "    let a = abs(a)\n\
    \    let b = abs(b)\n    let c = abs(c)\n    if a + b > c {\n        return Double(a\
    \ * b * 0.5)\n    } else {\n        return Double(-1 * c * 0.5)\n    }", "   \
    \ let side1 = sqrt(pow(a, 2) + pow(b, 2))\n    let side2 = sqrt(pow(b, 2) + pow(c,\
    \ 2))\n    let side3 = sqrt(pow(c, 2) + pow(a, 2))\n    let area = (side1 + side2\
    \ + side3) / 2.0\n    if area >= 1.0 {\n        return area\n    } else {\n  \
    \      return -1.0\n    }", '    return sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2))',
  "    let side1 = abs(a) + abs(b) + abs(c)\n    let side2 = abs(a) + abs(b) - abs(c)\n\
    \    let side3 = abs(a) - abs(b) - abs(c)\n    return Double(side1 + side2 + side3)\
    \ / 2.0", "    let area = (a + b + c) / 2\n    if area > c {\n        return area\n\
    \    }\n    if area > b {\n        return area\n    }\n    if area > a {\n   \
    \     return area\n    }\n    return -1", "    let side1 = abs(a) + abs(b) + abs(c)\n\
    \    let side2 = abs(a) + abs(b) - abs(c)\n    let side3 = abs(a) - abs(b) - abs(c)\n\
    \    if side1 == side2 || side2 == side3 {\n        return Double(side1)\n   \
    \ }\n    return Double(-1)", "    let a = abs(a)\n    let b = abs(b)\n    let\
    \ c = abs(c)\n    if a + b > c {\n        return b * b - 4 * a * c\n    }\n  \
    \  if a + c > b {\n        return c * c - 4 * a * b\n    }\n    if b + c > a {\n\
    \        return a * a - 4 * b * b\n    }\n    return 0", "    if a + b > c {\n\
    \        return Double(-1) * Double(a / b)\n    } else {\n        return Double(-1)\
    \ * Double(b / c)\n    }", "    let a1 = abs(a)\n    let b1 = abs(b)\n    let\
    \ c1 = abs(c)\n    if a1 > b1 && b1 > c1 {\n        return a * b * c / 2\n   \
    \ }\n    if a1 > c1 {\n        return a * b * c / 2\n    }\n    if b1 > c1 {\n\
    \        return a * b * c / 2\n    }\n    return -1", "    if a + b > c {\n  \
    \      return Double(-1) * Double(a / b)\n    }\n    if a + c > b {\n        return\
    \ Double(-1) * Double(b / c)\n    }\n    if b + c > a {\n        return Double(-1)\
    \ * Double(c / a)\n    }\n    return Double(-1) * Double(a + b + c) / 2", "  \
    \  let a1 = b * b - a * c\n    let a2 = a * a\n    let a3 = a * a\n    let b1\
    \ = 2 * b * b\n    let b2 = b * b\n    let b3 = b * b\n    let c1 = 2 * c * c\n\
    \    let c2 = c * c\n    let c3 = c * c\n    let det = a1 * b2 - a2 * b1 + a3\
    \ * b2\n    if det < 0 {\n        return -1\n    }\n    let sqrt_det = sqrt(det)\n\
    \    let a1_sqrt = a1 / sqrt_det\n    let a2_sqrt = a2 / sqrt_det\n    let a3_sqrt\
    \ = a3 / sqrt_det\n    let b1_sqrt = b1 / sqrt_det\n    let b2_sqrt = b2 / sqrt_det\n\
    \    let b3_sqrt = b3 / sqrt_det\n    let c1_sqrt = c1 / sqrt_det\n    let c2_sqrt\
    \ = c2 / sqrt_det\n    let c3_sqrt = c3 / sqrt_det\n    let area_sqrt = (a1_sqrt\
    \ * b2_sqrt - a2_sqrt * b1_sqrt + a3_sqrt * b2_sqrt)\n        * (a1_sqrt * c2_sqrt\
    \ - a2_sqrt * c1_sqrt + a3_sqrt * c2_sqrt)\n        * (a1_sqrt * b3_sqrt - a2_sqrt\
    \ * b2_sqrt + a3_sqrt * b3_sqrt)\n        * (a1_sqrt * c3_sqrt - a2_sqrt * c2_sqrt\
    \ + a3_sqrt * c3_sqrt)\n    let area = sqrt(area_sqrt)\n    return round(area,\
    \ 2)", "    let side1 = abs(a) + abs(b) + abs(c)\n    let side2 = abs(a) + abs(b)\
    \ - abs(c)\n    let side3 = abs(a) - abs(b) + abs(c)\n    let side4 = abs(a) -\
    \ abs(b) - abs(c)\n    if side1 == side2 || side2 == side3 || side3 == side4 {\n\
    \        return Double(side1)\n    }\n    return -1", "    if a + b > c {\n  \
    \      return Double(-1) * Double(a / b)\n    }\n    if a + c > b {\n        return\
    \ Double(-1) * Double(b / c)\n    }\n    if b + c > a {\n        return Double(-1)\
    \ * Double(c / a)\n    }\n    return Double(a + b + c) / 2", "    let sides =\
    \ a + b + c\n    if sides % 2 == 1 {\n        return -1\n    }\n    let area =\
    \ Double(sides) / 2\n    return round(area)", '    return sqrt(pow((b - a), 2)
    + pow((c - a), 2))', "    let area = a * b * c\n    if area > 0 {\n        return\
    \ Double(area) / Double(3.0)\n    } else {\n        return -1\n    }", "    let\
    \ a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    if a + b > c {\n   \
    \     return b * b - 4 * a * c\n    }\n    if a + c > b {\n        return c *\
    \ c - 4 * a * b\n    }\n    if b + c > a {\n        return a * a - 4 * b * b\n\
    \    }\n    return 0", "    let a1 = abs(a)\n    let b1 = abs(b)\n    let c1 =\
    \ abs(c)\n    let a2 = a1 + b1\n    let b2 = b1 + c1\n    let c2 = c1 + a1\n \
    \   let a3 = a2 + b2\n    let b3 = b2 + c2\n    let c3 = c2 + a2\n    let a4 =\
    \ a3 + b3\n    let b4 = b3 + c3\n    let c4 = c3 + a3\n    let a5 = a4 + b4\n\
    \    let b5 = b4 + c4\n    let c5 = c4 + a4\n    let a6 = a5 + b5\n    let b6\
    \ = b5 + c5\n    let c6 = c5 + a5\n    let a7 = a6 + b6\n    let b7 = b6 + c6\n\
    \    let c7 = c6 + a6\n    let a8 = a7 + b7\n    let b8 = b7 + c7\n    let c8\
    \ = c7 + a7\n    let a9 = a8 + b8\n    let b9 = b8 + c8\n    let c9 = c8 + a8\n\
    \    let a10 = a9 + b9\n    let b10 = b9 + c9\n    let c10 = c9 + a9\n    let\
    \ a11 = a10 + b10\n    let b11 = b10 + c10\n    let c11 = c10 + a10\n    let a12\
    \ = a11 + b11\n    let b12 = b11 + c11\n    let c12 = c11 + a11\n    let a13 =\
    \ a12 + b12\n    let b13 = b12 + c12\n    let c13 = c12 + a12\n    let a14 = a13\
    \ + b13\n    let b14 = b13 + c13\n    let c14 = c13 + a13\n    let a15 = a14 +\
    \ b14\n    let b15 = b14 + c14\n    let c15 = c14 + a14\n    let a16 = a15 + b15\n\
    \    let b16 = b15 + c15\n    let c16 = c15 + a15\n    let a17 = a16 + b16\n \
    \   let b17 = b16 + c16\n    let c17 = c16 + a16\n    let a18 = a17 + b17\n  \
    \  let b18 = b17 + c17\n    let c18 = c17 + a17\n    let a19 = a18 + b18\n   \
    \ let b19 = b18 + c18\n    let c19 = c18 + a18\n    let a20 = a19 + b19\n    let\
    \ b20 = b19 + c19\n    let c20 = c19 + a19\n    let a21 = a20 + b20\n    let b21\
    \ = 0\n    let c21 = c20 + a20\n    let a22 = a21 + b21\n    let b22 = 0\n   \
    \ let c22 = c20 + ", "    let side1 = abs(a) + abs(b) + abs(c)\n    let side2\
    \ = abs(a) + abs(b) - abs(c)\n    let side3 = abs(a) - abs(b) - abs(c)\n    if\
    \ side1 == side2 && side2 == side3 {\n        return Double(side1)\n    }\n  \
    \  return -1", "    if a + b > c {\n        return -1\n    }\n    if a + c > b\
    \ {\n        return -1\n    }\n    if b + c > a {\n        return -1\n    }\n\
    \    return Double(sqrt(Double(a * a + b * b + c * c)))", "    let area: Double\
    \ = Double(a * b * c) / Double(2.0 * a + b + c)\n    if area > 1.0 {\n       \
    \ return area\n    }\n    return -1", "    let a = abs(a)\n    let b = abs(b)\n\
    \    let c = abs(c)\n    let ac = a + c\n    let bc = b + c\n    let ab = a +\
    \ b\n    let acab = ac + ab\n    let bcab = bc + ab\n    let acbc = ac + bc\n\
    \    let abcd = ac + bc\n    let abbc = ab + bc\n    let acbcab = ac + bc + ab\n\
    \    let bcabac = bc + ab + ac\n    let acbcabac = ac + bc + ab + ac\n    let\
    \ acbcabbc = ac + bc + ab + bc\n    let acbcabbcab = ac + bc + ab + bc + ac\n\
    \    let acbcabbcabc = ac + bc + ab + bc + ac + bc\n    let acbcabbcabcd = ac\
    \ + bc + ab + bc + ac + bc + ab\n    let acbcabbcabcdab = ac + bc + ab + bc +\
    \ ac + bc + ab + ac\n    let acbcabbcabcdabc = ac + bc + ab + bc + ac + bc + ab\
    \ + ac + bc\n    let acbcabbcabcdabcbc = ac + bc + ab + bc + ac + bc + ab + ac\
    \ + bc + ab\n    let acbcabbcabcdabcbcba = ac + bc + ab + bc + ac + bc + ab +\
    \ ac + bc + ab + ac + bc + ab + ac\n    let acbcabbcabcdabcbcbac = ac + bc + ab\
    \ + bc + ac + bc + ab + ac + bc + ab + ac + bc + ab + ac + bc\n    let acbcabbcabcdabcbcbacd\
    \ = ac + bc + ab + bc + ac + bc + ab + ac + bc + ab + ac + bc + ab + ac + bc +\
    \ ab + ac + bc + ab + ac + bc\n    let acbcabbcabcdabcbcbacdbc = ac + bc + ab\
    \ + bc + ac + bc + ab + ac + bc + ab + ac + bc + ab + ac + bc + ab + ac + bc +\
    \ ab + ac + bc + ab + ac + bc\n    let acbcabbcabcdabcbcbacdbcba = ac + bc + ab\
    \ + bc + ac + bc + ab + ac + bc + ab + ac + bc + ab + ac + bc + ab + ac + bc +\
    \ ab + ac", "    let side1 = abs(a) + abs(b) + abs(c)\n    let side2 = abs(a)\
    \ + abs(b) + abs(c)\n    let side3 = abs(a) + abs(b) + abs(c)\n    if side1 ==\
    \ side2 || side2 == side3 {\n        return Double(side1)\n    }\n    return Double(-1)",
  "    let area: Double = Double(a * b * c) / Double(2.0 * a + b + c)\n    return\
    \ area >= 0.0 ? area : -1.0", "    let area = (a * b * c) / Double(sides(a: a,\
    \ b: b, c: c))\n    return area.rounded(to: 2)", "    let a1 = b * b - 4 * a *\
    \ c\n    let a2 = math.sqrt(a1)\n    let a3 = math.sqrt(a2)\n    let a4 = math.sqrt(a3)\n\
    \    let a5 = math.sqrt(a4)\n    let a6 = math.sqrt(a5)\n    let a7 = math.sqrt(a6)\n\
    \    let a8 = math.sqrt(a7)\n    let a9 = math.sqrt(a8)\n    let a10 = math.sqrt(a9)\n\
    \    let a11 = math.sqrt(a10)\n    let a12 = math.sqrt(a11)\n    let a13 = math.sqrt(a12)\n\
    \    let a14 = math.sqrt(a13)\n    let a15 = math.sqrt(a14)\n    let a16 = math.sqrt(a15)\n\
    \    let a17 = math.sqrt(a16)\n    let a18 = math.sqrt(a17)\n    let a19 = math.sqrt(a18)\n\
    \    let a20 = math.sqrt(a19)\n    let a21 = math.sqrt(a20)\n    let a22 = math.sqrt(a21)\n\
    \    let a23 = math.sqrt(a22)\n    let a24 = math.sqrt(a23)\n    let a25 = math.sqrt(a24)\n\
    \    let a26 = math.sqrt(a25)\n    let a27 = math.sqrt(a26)\n    let a28 = math.sqrt(a27)\n\
    \    let a29 = math.sqrt(a28)\n    let a30 = math.sqrt(a29)\n    let a31 = math.sqrt(a30)\n\
    \    let a32 = math.sqrt(a31)\n    let a33 = math.sqrt(a32)\n    let a34 = math.sqrt(a33)\n\
    \    let a35 = math.sqrt(a34)\n    let a36 = math.sqrt(a35)\n    let a37 = math.sqrt(a36)\n\
    \    let a38 = math.sqrt(a37)\n    let a39 = math.sqrt(a38)\n    let a40 = math.sqrt(a39)\n\
    \    let a41 = math.sqrt(a40)\n    let a42 = math.sqrt(a41)\n    let a43 = math.sqrt(a42)\n\
    \    let a44 = math.sqrt(a43)\n    let a45 = math.sqrt(a44)\n    let a46 = math.sqrt(a45)\n\
    \    let a47 = math.sqrt(a46)\n    let a48 = math.sqrt(a47)\n    let a49 = math.sqrt(a48)\n\
    \    let a50 = math.sqrt(a49)\n    let a51 = math.sqrt(a50)\n    let a52 = math.sqrt(a51)\n\
    \    let a53 = math.sqrt(a52)\n    let a54 = math.sqrt(a53)\n    let a55 = math.sqrt(a54)\n\
    \    let a56 = math.sqrt(a55)\n    let a57 = math.sqrt(a56)\n    let a58 = math.sqrt(a57)\n\
    \    let a59 = math.sqrt(a58)\n    let a60 = math.sqrt(a59)\n    let a61 = math.sqrt(a60)\n\
    \    let a62 = math.sqrt(a61)\n    let a63 = math.sqrt(a62)\n    let a64 = ",
  '    return ((b * b) - (4 * a * c)) / (2 * a)', "    let side1 = sqrt(pow(a, 2)\
    \ + pow(b, 2))\n    let side2 = sqrt(pow(c, 2) + pow(b, 2))\n    let side3 = sqrt(pow(c,\
    \ 2) + pow(a, 2))\n    let area = (side1 + side2 + side3) / 2.0\n    if area >\
    \ 0.0 {\n        return round(area, 2)\n    } else {\n        return -1.0\n  \
    \  }", "    let side1 = abs(a) + abs(b) + abs(c)\n    let side2 = abs(a) + abs(b)\
    \ - abs(c)\n    let side3 = abs(a) - abs(b) - abs(c)\n    let area = side1 + side2\
    \ + side3\n    if area > 0 {\n        return Double(area)\n    } else {\n    \
    \    return -1\n    }", "    let sides = [a, b, c]\n    let sum = sides.reduce(0,\
    \ combine: +)\n    if sum > sides.last {\n        return -1\n    }\n    return\
    \ Double(sum) / Double(sides.count)", "    let a = abs(a)\n    let b = abs(b)\n\
    \    let c = abs(c)\n    let ac = a + c\n    let bc = b + c\n    let ab = a +\
    \ b\n    let acb = ac + b\n    let bcb = bc + b\n    let abc = ab + c\n    let\
    \ acbc = acb + c\n    let bcbb = bcc + b\n    let abcb = abc + b\n    let acbbc\
    \ = acbb + c\n    let bcbbc = bcbb + c\n    let abcbb = abcb + b\n    let acbbcb\
    \ = acbbc + b\n    let bcbbcb = bcbbc + b\n    let abcbbc = abcbb + c\n    let\
    \ acbbcb = acbbcb + c\n    let bcbbcb = bcbbcb + c\n    let abcbbcb = abcbbc +\
    \ b\n    let acbbcbb = acbbcbb + c\n    let bcbbcbb = bcbbcbb + c\n    let abcbbcbb\
    \ = abcbbcb +b\n    let acbbcbbc = acbbcbb + c\n    let bcbbcbbc = bcbbcbb + c\n\
    \    let abcbbcbbc = abcbbcbb + b\n    let acbbcbbcb = acbbcbbc + b\n    let bcbbcbbcb\
    \ = bcbbcbbc + b\n    let abcbbcbbcb = abcbbcbbc + b\n    let acbbcbbcbb = acbbcbbcb\
    \ +c\n    let bcbbcbbcbb = bcbbcbbcb +c\n    let abcbbcbbcbb = abcbbcbbcb +b\n\
    \    let acbbcbbcbbc = acbbcbbcbb + c\n    let bcbbcbbcbbc = bcbbcbbcbb + c\n\
    \    let abcbbcbbcbbc = abcbbcbbcbb + b\n    let acbbcbbcbbcb = acbbcbbcbbc +\
    \ b\n    let bcbbcbbcbbcb = bcbbcbbcbbc + b\n    let abcbbcbbcbbcb = abcbbcbbcbbc\
    \ + b\n    let acbbcbbcbbcbb = acbbcbbcbbcbb + c\n    let bcbbcbbcbbcbb = bcbbcbbcbbcbb\
    \ + c\n    let abcbbcbbcbbcbb = abcbbcbbcbbcbb + b\n    let acbbcbbc", "    let\
    \ a1 = abs(a)\n    let b1 = abs(b)\n    let c1 = abs(c)\n    if a1 > b1 && b1\
    \ > c1 {\n        return a * b * c / 2\n    }\n    if a1 > b1 && c1 > b1 {\n \
    \       return a * b * c / 2\n    }\n    if b1 > c1 && c1 > a1 {\n        return\
    \ a * b * c / 2\n    }\n    return -1", "    let sides = [a, b, c]\n    guard\
    \ sides.count >= 3 else { return -1 }\n    let sum = sides.reduce(0, +)\n    let\
    \ third = sides[2]\n    return Double(sum / third)", "    let side1 = abs(a) +\
    \ abs(b) + abs(c)\n    let side2 = abs(a) + abs(b) - abs(c)\n    let side3 = abs(a)\
    \ - abs(b) - abs(c)\n    let area = side1 * side2 * side3\n    if area > 0 {\n\
    \        return Double(area) / 3\n    } else {\n        return -1\n    }", " \
    \   let a1 = b * b - 4 * a * c\n    let a2 = Math.sqrt(a1)\n    let a3 = -b +\
    \ Math.sqrt(a1)\n    let a4 = -b - Math.sqrt(a1)\n    let a5 = Math.sqrt(a3)\n\
    \    let a6 = Math.sqrt(a4)\n    let a7 = -b + Math.sqrt(a4)\n    let a8 = -b\
    \ - Math.sqrt(a4)\n    let a9 = Math.sqrt(a7)\n    let a10 = Math.sqrt(a8)\n \
    \   let a11 = -a + Math.sqrt(a8)\n    let a12 = -a - Math.sqrt(a8)\n    let a13\
    \ = Math.sqrt(a11)\n    let a14 = Math.sqrt(a12)\n    let a15 = a + Math.sqrt(a12)\n\
    \    let a16 = a - Math.sqrt(a12)\n    let a17 = Math.sqrt(a15)\n    let a18 =\
    \ Math.sqrt(a16)\n    let a19 = a + Math.sqrt(a16)\n    let a20 = a - Math.sqrt(a16)\n\
    \    let a21 = Math.sqrt(a19)\n    let a22 = Math.sqrt(a20)\n    let a23 = a +\
    \ Math.sqrt(a20)\n    let a24 = a - Math.sqrt(a20)\n    let a25 = Math.sqrt(a23)\n\
    \    let a26 = Math.sqrt(a24)\n    let a27 = a + Math.sqrt(a24)\n    let a28 =\
    \ a - Math.sqrt(a24)\n    let a29 = Math.sqrt(a27)\n    let a30 = Math.sqrt(a28)\n\
    \    let a31 = a + Math.sqrt(a28)\n    let a32 = a - Math.sqrt(a28)\n    let a33\
    \ = Math.sqrt(a31)\n    let a34 = Math.sqrt(a32)\n    let a35 = a + Math.sqrt(a32)\n\
    \    let a36 = a - Math.sqrt(a32)\n    let a37 = Math.sqrt(a35)\n    let a38 =\
    \ Math.sqrt(a36)\n    let a39 = a + Math.sqrt(a36)\n    let a40 = a - Math.sqrt(a36)\n\
    \    let a41 = Math.sqrt(a39)\n    let a42 = Math.sqrt(a40)\n    let a43 = a +\
    \ Math.sqrt(a40)\n    let a44 = a - Math.sqrt(a40)\n    let a45 = Math.sqrt(a43)\n\
    \    let a46 = Math.sqrt(a44)\n    let a47 = a + Math.sqrt(a44)\n    let a48 =\
    \ a - Math.sqrt(a44)\n    let a49 = Math.sqrt(a47)\n    let a50 = Math.sqrt(a48)\n\
    \    let a51 = a + Math.sqrt(a48)\n    let a52 = a - Math.sqrt(a48)\n    let a53\
    \ = Math.sqrt(a51)\n    let a54 = Math.sqrt(a52)\n    let a55 = a + Math.sqrt(a52)\n\
    \    let a56 = ", '    return ((a + b + c) / 2) * 0.5', "    let area = (a + b\
    \ + c) / 2\n    if area > c {\n        return area\n    }\n    if area > b {\n\
    \        return area\n    }\n    if area > a {\n        return area\n    }\n \
    \   return -1", "    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n\
    \    if a + b > c {\n        return Double(a + b - c)\n    } else {\n        return\
    \ Double(a + b + c - a)\n    }", "    let area = (a * b) - (a * c)\n    if area\
    \ < 0 {\n        return -1\n    }\n    return Double(area / b) / 2", "    let\
    \ sides = [a, b, c]\n    let sum = sides.reduce(0, +)\n    if sum > sides.last\
    \ {\n        return -1\n    }\n    return Double(sides.last) * Double(sides.last)\
    \ / Double(sides.count)", "    let sides = a + b + c\n    if sides <= 0 {\n  \
    \      return -1\n    }\n    let area = Double(sides) / Double(3.0)\n    return\
    \ round(area, 2)", "    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n\
    \    let s = (a+b+c)/2.0\n    if s > c {\n        return -1\n    }\n    if s ==\
    \ c {\n        return b * b\n    }\n    if s == b {\n        return a * a\n  \
    \  }\n    return -1", "    if a + b > c {\n        return Double(-1) * Double(a\
    \ / b)\n    }\n    if a + c > b {\n        return Double(-1) * Double(b / c)\n\
    \    }\n    if b + c > a {\n        return Double(-1) * Double(c / a)\n    }\n\
    \    return Double(a + b + c) / 2", "    if a + b > c {\n        return Double(-1)\
    \ / Double(Double(a + b - c))\n    }\n    if a + c > b {\n        return Double(-1)\
    \ / Double(Double(a + c - b))\n    }\n    if b + c > a {\n        return Double(-1)\
    \ / Double(Double(b + c - a))\n    }\n    return Double(a + b + c) / Double(2.0)",
  '    return ((b * b) - (4 * a * c)) / (2 * a)', "    let side1 = sqrt(pow(a, 2)\
    \ + pow(b, 2))\n    let side2 = sqrt(pow(b, 2) + pow(c, 2))\n    let side3 = sqrt(pow(c,\
    \ 2) + pow(a, 2))\n    let area = (side1 + side2 + side3) / 2.0\n    if area >\
    \ 0 {\n        return area\n    } else {\n        return -1\n    }", "    let\
    \ sum = a + b + c\n    if sum > 3 {\n        return Double(sum - 3) / 2.0\n  \
    \  } else {\n        return -1\n    }", "    let a1 = b * b - a * c\n    let a2\
    \ = a * a\n    let a3 = a * a\n    let b1 = 2 * b * b\n    let b2 = b * b\n  \
    \  let b3 = b * b\n    let c1 = 2 * c * c\n    let c2 = c * c\n    let c3 = c\
    \ * c\n    let d = a1 + b1 + c1\n    let e = a2 + b2 + c2\n    let f = a3 + b3\
    \ + c3\n    let g = b1 + b2 + b3\n    let h = b1 + b3 + c1\n    let i = c1 + c2\
    \ + c3\n    let j = a1 + a2 + a3\n    let k = b1 + b2 + b3\n    let l = c1 + c2\
    \ + c3\n    let m = a1 + b1 + c1 + a2 + b2 + c2 + a3 + b3 + c3\n    let n = a1\
    \ + b1 + c1 + a2 + b2 + c2 + a3 + b3 + c3 + b1 + b2 + b3 + c1\n    let o = a1\
    \ + b1 + c1 + a2 + b2 + c2 + a3 + b3 + c3 + b1 + b2 + b3 + c1 + b2 + b3 + c1\n\
    \    let p = a1 + b1 + c1 + a2 + b2 + c2 + a3 + b3 + c3 + b1 + b2 + b3 + c1 +\
    \ b2 + b3 + c1 + b2 + b3 + c1\n    let q = a1 + b1 + c1 + a2 + b2 + c2 + a3 +\
    \ b3 + c3 + b1 + b2 + b3 + c1 + b2 + b3 + c1 + b2 + b3 + c1 + b2 + b3 + c1\n \
    \   let r = a1 + b1 + c1 + a2 + b2 + c2 + a3 + b3 + c3 + b1 + b2 + b3 + c1 + b2\
    \ + b3 + c1 + b2 + b3 + c1 + b2 + b3 + c1 + b2 + b3 + c1\n    let s = a1 + b1\
    \ + c1 + a2 + b2 + c2 + a3 + b3 + c3 + b1 + b2 + b3 + c1 + b2 + b3 + c1 + b2 +\
    \ b3 + c1 + b2 + b3 + c1 + b2 + b3 + c1 + b2 + b3 + c1\n    let t = a1 + b1 +\
    \ c1 + a2 + b2 + c2 + a3 + b3 + c3 + b1 + b2 + b3 + c1 + b2 + b3 + c1 + b2 + b3\
    \ + c1 + b2 + b3 + c1 + b2 + b3 + c1 + b2 + b3 + c1\n    let u = a1 + b1 + c1\
    \ + a2 + b2 + c2 + a3 + b3 + c3 + b1 + b2 + b3 + c1 + b2 + b3 + c1 + b2 + b3 +\
    \ c1 + b2 + ", "    let area = (a * b) - (c * c)\n    if area < 0 {\n        return\
    \ -1\n    }\n    return Double(area) / Double(2.0 * Double(a * b))", "    let\
    \ area = a * b * c\n    if area > 0 {\n        return Double(area / Double(a *\
    \ b))\n    } else {\n        return -1\n    }", "    let side1 = abs(a) + abs(b)\
    \ + abs(c)\n    let side2 = abs(a) + abs(b) - abs(c)\n    let side3 = abs(a) -\
    \ abs(b) - abs(c)\n    if side1 == side2 && side2 == side3 {\n        return Double(side1)\n\
    \    }\n    return -1", "    let side1 = sqrt(pow(a, 2) + pow(b, 2))\n    let\
    \ side2 = sqrt(pow(c, 2) + pow(b, 2))\n    let side3 = sqrt(pow(a, 2) + pow(c,\
    \ 2))\n    if side1 + side2 > side3 {\n        return side1 + side2\n    } else\
    \ {\n        return -1\n    }", "    let a = abs(a)\n    let b = abs(b)\n    let\
    \ c = abs(c)\n    if a + b > c {\n        return b * b - 4 * a * c\n    }\n  \
    \  if a + c > b {\n        return c * c - 4 * a * b\n    }\n    return a * a +\
    \ b * b - c * c", "    let side1 = sqrt(pow(a, 2) + pow(b, 2))\n    let side2\
    \ = sqrt(pow(c, 2) + pow(b, 2))\n    let side3 = sqrt(pow(c, 2) + pow(a, 2))\n\
    \    let area = (side1 + side2 + side3) / 2.0\n    if area > 0.0 {\n        return\
    \ round(area, 2)\n    } else {\n        return -1.0\n    }", "    let side1 =\
    \ sqrt(pow(a, 2) + pow(b, 2))\n    let side2 = sqrt(pow(c, 2) + pow(d, 2))\n \
    \   let side3 = sqrt(pow(d, 2) + pow(e, 2))\n    let area = (side1 + side2 + side3)\
    \ / 2.0\n    if area > 0.0 {\n        return area\n    } else {\n        return\
    \ -1.0\n    }", "    let sides = [a, b, c]\n    let sum = sides.reduce(0, +)\n\
    \    if sum > sides.last {\n        return -1\n    }\n    return Double(sides.last)\
    \ * Double(sides.last) / Double(sides.count)", "    let a = abs(a)\n    let b\
    \ = abs(b)\n    let c = abs(c)\n    if a + b > c {\n        return Double(a *\
    \ b * 0.5)\n    }\n    if a + c > b {\n        return Double(a * c * 0.5)\n  \
    \  }\n    if b + c > a {\n        return Double(b * c * 0.5)\n    }\n    return\
    \ -1", '    return ((a + b + c) / 2)', "    let a = abs(a)\n    let b = abs(b)\n\
    \    let c = abs(c)\n    if a + b > c {\n        return Double(a + b - c)\n  \
    \  }\n    if a + c > b {\n        return Double(a + c - b)\n    }\n    if b +\
    \ c > a {\n        return Double(b + c - a)\n    }\n    return -1", "    if a\
    \ + b > c {\n        return Double(-1) * Double(a / b)\n    }\n    if a + c >\
    \ b {\n        return Double(-1) * Double(b / c)\n    }\n    if b + c > a {\n\
    \        return Double(-1) * Double(c / a)\n    }\n    return Double(a + b + c)\
    \ / 2", "    let sides = [a, b, c]\n    let sum = sides.reduce(0, +)\n    if sum\
    \ > sides.last {\n        return -1\n    }\n    return Double(sides.last) * Double(sides.last)\
    \ / Double(sides.count)", "    let a1 = b * b - a * c\n    let a2 = a * a\n  \
    \  let c1 = 2 * b * b\n    let c2 = c * a\n    let det = a1 * c2 - a2 * c1\n \
    \   if det < 0 {\n        return -1\n    }\n    return sqrt(det)", "    let sides\
    \ = [a, b, c]\n    let sum = sides.reduce(0, +)\n    if sum > sides[2] {\n   \
    \     return Double(sum) / Double(sides[2])\n    } else {\n        return -1\n\
    \    }", "    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    let\
    \ s = (a + b + c) / 2\n    if s > 0 {\n        return s / 2\n    }\n    return\
    \ -1", "    let sides = a + b + c\n    if sides <= 0 {\n        return -1\n  \
    \  }\n    let area = Double(sides) / Double(3.0)\n    return round(area, 2)",
  "    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    if a + b > c {\n\
    \        return Double(a + b - c) / 2\n    } else {\n        return Double(a +\
    \ b + c) / 2\n    }", "    let sides = [a, b, c]\n    let sum = sides.reduce(0,\
    \ combine: +)\n    if sum > sides.last {\n        return -1\n    }\n    return\
    \ Double(sides.last) * Double(sides.last) / Double(sides.count)", "    let area\
    \ = (a + b + c) / 2\n    if area > c {\n        return -1\n    }\n    if area\
    \ < b {\n        return -1\n    }\n    if area < a {\n        return -1\n    }\n\
    \    return area", "    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n\
    \    if a + b > c {\n        return Double(a + b - c) / 2\n    } else {\n    \
    \    return -1\n    }", "    let side1 = sqrt(pow(a, 2) + pow(b, 2))\n    let\
    \ side2 = sqrt(pow(c, 2) + pow(b, 2))\n    let side3 = sqrt(pow(c, 2) + pow(a,\
    \ 2))\n    let area: Double = side1 * side2 * side3\n    if area > 0 {\n     \
    \   return round(area, 2)\n    } else {\n        return -1\n    }", "    let a\
    \ = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    if a + b > c {\n     \
    \   return Double(a + b - c)\n    }\n    if a + c > b {\n        return Double(a\
    \ + c - b)\n    }\n    if b + c > a {\n        return Double(b + c - a)\n    }\n\
    \    return Double(-1)", "    let a = abs(a)\n    let b = abs(b)\n    let c =\
    \ abs(c)\n    if a + b > c {\n        return Double(a + b - c)\n    }\n    if\
    \ a + c > b {\n        return Double(a + c - b)\n    }\n    if b + c > a {\n \
    \       return Double(b + c - a)\n    }\n    return -1", "    let a1 = abs(a)\n\
    \    let b1 = abs(b)\n    let c1 = abs(c)\n    if a1 > b1 && b1 > c1 {\n     \
    \   return a * b * c\n    }\n    if a1 > c1 && c1 > b1 {\n        return a * c\
    \ * b\n    }\n    if b1 > c1 && c1 > a1 {\n        return b * c * a\n    }\n \
    \   return -1"]
stop_tokens:
- "\n}"

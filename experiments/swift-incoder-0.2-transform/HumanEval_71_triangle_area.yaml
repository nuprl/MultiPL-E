name: HumanEval_71_triangle_area
language: swift
prompt: "\n/// Given the lengths of the three sides of a triangle. Return the area\
  \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
  \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
  \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
  /// >>> triangle_area(a: 3, b: 4, c: 5)\n/// 6.0\n/// >>> triangle_area(a: 1, b:\
  \ 2, c: 10)\n/// -1\nfunc triangle_area(a: Int, b: Int, c: Int) -> Double {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(triangle_area(a: 3, b: 4, c: 5) == 6.0)\n\
  assert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a: 4, b: 8,\
  \ c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
  \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
  \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
  \ 2, b: 2, c: 10) == -1)"
completions: ["    let sides = [a, b, c]\n    let sumOfSides = sides.reduce(0, +)\n\
    \    if sumOfSides > sides.last {\n        return -1\n    }\n    return Double(sides.last)\
    \ * Double(sides.last) / Double(sides.first)", "    if a + b > c {\n        return\
    \ -1\n    }\n    if a + c > b {\n        return -1\n    }\n    if b + c > a {\n\
    \        return -1\n    }\n    return Double(a * b * c / 2)", "    let sides =\
    \ [a, b, c]\n    let sum = sides.reduce(0, +)\n    if sum > sides.last {\n   \
    \     return -1\n    }\n    return Double(sides.last) * Double(sides.last) / Double(sides.first)",
  "    let a1 = b * b - a * c\n    let a2 = a * a\n    let a3 = b * b - a * a\n  \
    \  let a4 = a * a\n    let a5 = a * a\n    let a6 = a * a\n    let a7 = a * a\n\
    \    let a8 = a * a\n    let a9 = a * a\n    let a10 = a * a\n    let a11 = a\
    \ * a\n    let a12 = a * a\n    let a13 = a * a\n    let a14 = a * a\n    let\
    \ a15 = a * a\n    let a16 = a * a\n    let a17 = a * a\n    let a18 = a * a\n\
    \    let a19 = a * a\n    let a20 = a * a\n    let a21 = a * a\n    let a22 =\
    \ a * a\n    let a23 = a * a\n    let a24 = a * a\n    let a25 = a * a\n    let\
    \ a26 = a * a\n    let a27 = a * a\n    let a28 = a * a\n    let a29 = a * a\n\
    \    let a30 = a * a\n    let a31 = a * a\n    let a32 = a * a\n    let a33 =\
    \ a * a\n    let a34 = a * a\n    let a35 = a * a\n    let a36 = a * a\n    let\
    \ a37 = a * a\n    let a38 = a * a\n    let a39 = a * a\n    let a40 = a * a\n\
    \    let a41 = a * a\n    let a42 = a * a\n    let a43 = a * a\n    let a44 =\
    \ a * a\n    let a45 = a * a\n    let a46 = a * a\n    let a47 = a * a\n    let\
    \ a48 = a * a\n    let a49 = a * a\n    let a50 = a * a\n    let a51 = a * a\n\
    \    let a52 = a * a\n    let a53 = a * a\n    let a54 = a * a\n    let a55 =\
    \ a * a\n    let a56 = a * a\n    let a57 = a * a\n    let a58 = a * a\n    let\
    \ a59 = a * a\n    let a60 = a * a\n    let a61 = a * a\n    let a62 = a * a\n\
    \    let a63 = a * a\n    let a64 = a * a\n    let a65 = a * a\n    let a66 =\
    \ a * a\n    let a67 = a * a\n    let a68 = a * a\n    let a69 = a * a\n    let\
    \ a70 = a * a\n    let a71 = a * a\n    let a72 = a * a\n    let a73 = a * a\n\
    \    let a74 = a * a\n    let a75 = a * a\n    let a76 = a * a\n    let a77 =\
    \ a * a\n    let a78 = a * a\n    let a79 = a * a\n    let a80 = a * a\n    let\
    \ a81 = a * a\n    let a82 = a * a\n    let a83 = a * a\n    let a84 = a * a\n\
    \    let a85 = a * a\n    let a86 = a * a\n    let ", "    let sides = [a, b,\
    \ c]\n    let sum = sides.reduce(0, +)\n    if sum > sides.last {\n        return\
    \ -1\n    }\n    return Double(sides.last) * Double(sides.last) / Double(sides.first)",
  "    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    if a + b > c {\n\
    \        return Double(a + b - c)\n    }\n    if a + c > b {\n        return Double(a\
    \ + c - b)\n    }\n    if b + c > a {\n        return Double(b + c - a)\n    }\n\
    \    return Double(a + b + c)", "    if a + b > c {\n        return Double(a +\
    \ b - c)\n    }\n    if a + c > b {\n        return Double(a + c - b)\n    }\n\
    \    if b + c > a {\n        return Double(b + c - a)\n    }\n    return Double(a\
    \ + b + c)", "    let sides = a + b + c\n    if sides == 0 {\n        return Double.nan\n\
    \    }\n    let area = Double.pi * pow(Double.pi * a / sides, 2) + (Double.pi\
    \ * b / sides) * pow(Double.pi * c / sides, 2)\n    return round(area, 2)", " \
    \   let sides = [a, b, c]\n    let sumOfSides = sides.reduce(0, +)\n    if sumOfSides\
    \ > sides.last {\n        return -1\n    }\n    return Double(sides.last) * Double(sides.last)\
    \ / Double(sides.count)", "    let a1 = b * b - 4 * a * c\n    let a2 = Math.sqrt(a1)\n\
    \    let a3 = -b + Math.sqrt(a1)\n    let a4 = -b - Math.sqrt(a1)\n    if a2 <\
    \ 0 {\n        return -1\n    }\n    if a3 < 0 {\n        return -1\n    }\n \
    \   if a4 < 0 {\n        return -1\n    }\n    return Double(a1 + a2 + a3)", " \
    \   let sides = [a, b, c]\n    let sum = sides.reduce(0, +)\n    if sum > sides.last\
    \ {\n        return -1\n    }\n    let area = Double(sides.last) * Double(sides.last)\
    \ / Double(sides.count)\n    return round(area, 2)", "    let a = abs(a)\n   \
    \ let b = abs(b)\n    let c = abs(c)\n    if a + b > c {\n        return Double(a\
    \ + b - c) / 2\n    }\n    if a + c > b {\n        return Double(a + c - b) /\
    \ 2\n    }\n    if b + c > a {\n        return Double(b + c - a) / 2\n    }\n\
    \    return -1", "    let sides = a + b + c\n    if sides == 0 {\n        return\
    \ -1\n    }\n    let area = sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2))\n    if area\
    \ > sides {\n        return round(area / sides * 100) / 100\n    } else {\n  \
    \      return -1\n    }", "    let a1 = b * b - 4 * a * c\n    let a2 = math.sqrt(a1)\n\
    \    let a3 = math.sqrt(a2)\n    let a4 = math.sqrt(a3)\n    let a5 = math.sqrt(a4)\n\
    \    let a6 = math.sqrt(a5)\n    let a7 = math.sqrt(a6)\n    let a8 = math.sqrt(a7)\n\
    \    let a9 = math.sqrt(a8)\n    let a10 = a9 - a\n    let a11 = a10 - a\n   \
    \ let a12 = a11 - a\n    let a13 = a12 - a\n    let a14 = a13 - a\n    let a15\
    \ = a14 - a\n    let a16 = a15 - a\n    let a17 = a16 - a\n    let a18 = a17 -\
    \ a\n    let a19 = a18 - a\n    let a20 = a19 - a\n    let a21 = a20 - a\n   \
    \ let a22 = a21 - a\n    let a23 = a22 - a\n    let a24 = a23 - a\n    let a25\
    \ = a24 - a\n    let a26 = a25 - a\n    let a27 = a26 - a\n    let a28 = a27 -\
    \ a\n    let a29 = a28 - a\n    let a30 = a29 - a\n    let a31 = a30 - a\n   \
    \ let a32 = a31 - a\n    let a33 = a32 - a\n    let a34 = a33 - a\n    let a35\
    \ = a34 - a\n    let a36 = a35 - a\n    let a37 = a36 - a\n    let a38 = a37 -\
    \ a\n    let a39 = a38 - a\n    let a40 = a39 - a\n    let a41 = a40 - a\n   \
    \ let a42 = a41 - a\n    let a43 = a42 - a\n    let a44 = a43 - a\n    let a45\
    \ = a44 - a\n    let a46 = a45 - a\n    let a47 = a46 - a\n    let a48 = a47 -\
    \ a\n    let a49 = a48 - a\n    let a50 = a49 - a\n    let a51 = a50 - a\n   \
    \ let a52 = a51 - a\n    let a53 = a52 - a\n    let a54 = a53 - a\n    let a55\
    \ = a54 - a\n    let a56 = a55 - a\n    let a57 = a56 - a\n    let a58 = a57 -\
    \ a\n    let a59 = a58 - a\n    let a60 = a59 - a\n    let a61 = a60 - a\n   \
    \ let a62 = a61 - a\n    let a63 = a62 - a\n    let a64 = a63 - a\n    let a65\
    \ = a64 - a\n    let a66 = a65 - a\n    let a67 = a66 - a\n    let a68 = a67 -\
    \ a\n    let a69 = a68 - a\n    let a70 = a69 - a\n    let a71 = a70 - a\n   \
    \ let a72 = a71 - a\n    let a73 = a72 - ", "    let a = abs(a)\n    let b = abs(b)\n\
    \    let c = abs(c)\n    let s = a + b + c\n    if s > 0 {\n        return round(Double(s\
    \ * 0.5) / Double(s))\n    }\n    return -1", "    let sides = [a, b, c]\n   \
    \ let sum = sides.reduce(0, +)\n    if sum > sides.last {\n        return Double(sides.last\
    \ * sides.last)\n    }\n    return -1", "    let area = (a + b + c) / 2\n    if\
    \ area > c {\n        return area\n    }\n    if area < a {\n        return area\n\
    \    }\n    if area > b {\n        return area\n    }\n    return area", '    return
    Double(sqrt(pow((b - a), 2) + pow((c - a), 2)))', "    let a = abs(a)\n    let\
    \ b = abs(b)\n    let c = abs(c)\n    let ac = a + c\n    let bc = b + c\n   \
    \ let ab = a + b\n    let acb = ac + b\n    let abc = ab + c\n    let acbc = acb\
    \ + c\n    let acbca = acbc + a\n    let acbcab = acbca + b\n    let acbcabc =\
    \ acbcab + c\n    let acbcabcb = acbcabc + b\n    let acbcabcbc = acbcabcb + c\n\
    \    let acbcabcbca = acbcabcbc + a\n    let acbcabcbcab = acbcabcbca + b\n  \
    \  let acbcabcbcabc = acbcabcbcab + c\n    let acbcabcbcabcb = acbcabcbcabc +\
    \ b\n    let acbcabcbcabcbc = acbcabcbcabcb + c\n    let acbcabcbcabcbca = acbcabcbcabcbc\
    \ + a\n    let acbcabcbcabcbcab = acbcabcbcabcbca + b\n    let acbcabcbcabcbcabc\
    \ = acbcabcbcabcbcab + c\n    let acbcabcbcabcbcabcb = acbcabcbcabcbcabc + b\n\
    \    let acbcabcbcabcbcabcbc = acbcabcbcabcbcabcb + c\n    let acbcabcbcabcbcabcbca\
    \ = acbcabcbcabcbcabcbc + a\n    let acbcabcbcabcbcabcbcab = acbcabcbcabcbcabcbca\
    \ + b\n    let acbcabcbcabcbcabcbcabc = acbcabcbcabcbcabcbcab + c\n    let acbcabcbcabcbcabcbcabcb\
    \ = acbcabcbcabcbcabcbcabc + b\n    let acbcabcbcabcbcabcbcabcbc = acbcabcbcabcbcabcbcabcb\
    \ + c\n    let acbcabcbcabcbcabcbcabcbca = acbcabcbcabcbcabcbcabcbc + a\n    let\
    \ acbcabcbcabcbcabcbcabcbcab = acbcabcbcabcbcabcbcabcbca + b\n    let acbcabcbcabcbcabcbcabcbcabc\
    \ = acbcabcbcabcbcabcbcabcbcab + c\n    let acbcabcbcabcbcabcbcabcbcabcb = acbcabcbcabcbcabcbcabcbcabc\
    \ + b\n", "    let area = a * b * c\n    if area > 0 {\n        return Double(area)\n\
    \    }\n    return -1"]
stop_tokens:
- "\n}"

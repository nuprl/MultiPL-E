name: HumanEval_37_sort_even
language: swift
prompt: "\n/// This function takes a list l and returns a list l' such that\n/// l'\
  \ is identical to l in the odd indicies, while its values at the even indicies are\
  \ equal\n/// to the values of the even indicies of l, but sorted.\n/// >>> sort_even(l:\
  \ [1, 2, 3])\n/// [1, 2, 3]\n/// >>> sort_even(l: [5, 6, 3, 4])\n/// [3, 6, 5, 4]\n\
  func sort_even(l: [Int]) -> [Int] {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(sort_even(l: [1, 2, 3]) == [1, 2, 3])\n\
  assert(sort_even(l: [5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]) == [-10, 3, -5, 2,\
  \ -3, 3, 5, 0, 9, 1, 123])\nassert(sort_even(l: [5, 8, -12, 4, 23, 2, 3, 11, 12,\
  \ -10]) == [-12, 8, 3, 4, 5, 2, 12, 11, 23, -10])"
completions: ["    var even = [Int]()\n    var odd = [Int]()\n    for x in l {\n \
    \       if x % 2 == 0 {\n            even.append(x)\n        } else {\n      \
    \      odd.append(x)\n        }\n    }\n    return even.sorted() + odd", "   \
    \ var even = [Int]()\n    var odd = [Int]()\n    for i in l {\n        if i %\
    \ 2 == 0 {\n            even.append(i)\n        } else {\n            odd.append(i)\n\
    \        }\n    }\n    return even.sorted() + odd", "    var even = l.slice()\n\
    \    even.sort()\n    return even", "    var even = [Int]()\n    var odd = [Int]()\n\
    \    for i in l {\n        if i % 2 == 0 {\n            even.append(i)\n     \
    \   } else {\n            odd.append(i)\n        }\n    }\n    return even.sorted().append(odd.sorted())",
  "    var even = [Int]()\n    var odd = [Int]()\n    for i in l {\n        if i %\
    \ 2 == 0 {\n            even.append(i)\n        } else {\n            odd.append(i)\n\
    \        }\n    }\n    return even.sorted() + odd", "    var even = [Int]()\n\
    \    var odd = [Int]()\n    for x in l {\n        if x % 2 == 0 {\n          \
    \  even.append(x)\n        } else {\n            odd.append(x)\n        }\n  \
    \  }\n    return even.sorted().append(odd.sorted())", "    var even = [Int]()\n\
    \    var odd = [Int]()\n    for i in l {\n        if i % 2 == 0 {\n          \
    \  even.append(i)\n        } else {\n            odd.append(i)\n        }\n  \
    \  }\n    return even.sorted() + odd", "    var even = [Int]()\n    var odd =\
    \ [Int]()\n    for x in l {\n        if x % 2 == 0 {\n            even.append(x)\n\
    \        } else {\n            odd.append(x)\n        }\n    }\n    return even.sorted()\
    \ + odd", "    var even = [Int]()\n    var odd = [Int]()\n    for x in l {\n \
    \       if x % 2 == 0 {\n            even.append(x)\n        } else {\n      \
    \      odd.append(x)\n        }\n    }\n    return even.sorted().append(odd.sorted())",
  "    var even = [Int]()\n    var odd = [Int]()\n    for i in l {\n        if i %\
    \ 2 == 0 {\n            even.append(i)\n        } else {\n            odd.append(i)\n\
    \        }\n    }\n    return even.sorted() + odd", "    var even = [Int]()\n\
    \    var odd = [Int]()\n    for x in l {\n        if x % 2 == 0 {\n          \
    \  even.append(x)\n        } else {\n            odd.append(x)\n        }\n  \
    \  }\n    return even.sorted() + odd", "    var even = [Int]()\n    var odd =\
    \ [Int]()\n    for x in l {\n        if x % 2 == 0 {\n            even.append(x)\n\
    \        } else {\n            odd.append(x)\n        }\n    }\n    return even.sorted()\
    \ + odd", "    var even = [Int]()\n    var odd = [Int]()\n    for i in l {\n \
    \       if i % 2 == 0 {\n            even.append(i)\n        } else {\n      \
    \      odd.append(i)\n        }\n    }\n    return even.sorted + odd.sorted",
  "    var even = [Int]()\n    var odd = [Int]()\n    for i in l {\n        if i %\
    \ 2 == 0 {\n            even.append(i)\n        } else {\n            odd.append(i)\n\
    \        }\n    }\n    return even.sorted().append(odd.sorted())", "    var even\
    \ = [Int]()\n    var odd = [Int]()\n    for i in l {\n        if i % 2 == 0 {\n\
    \            even.append(i)\n        } else {\n            odd.append(i)\n   \
    \     }\n    }\n    return even.sorted() + odd", "    var even = [Int]()\n   \
    \ var odd = [Int]()\n    for x in l {\n        if x % 2 == 0 {\n            even.append(x)\n\
    \        } else {\n            odd.append(x)\n        }\n    }\n    return even.sorted().append(odd.sorted())",
  "    var even = [Int]()\n    var odd = [Int]()\n    for x in l {\n        if x %\
    \ 2 == 0 {\n            even.append(x)\n        } else {\n            odd.append(x)\n\
    \        }\n    }\n    return even.sorted().append(odd.sorted())", "    var even\
    \ = [Int]()\n    var odd = [Int]()\n    for x in l {\n        if x % 2 == 0 {\n\
    \            even.append(x)\n        } else {\n            odd.append(x)\n   \
    \     }\n    }\n    return even.sorted + odd.sorted", "    var even = l.slice()\n\
    \    var odd = l.slice()\n    var evenSorted = even\n    var oddSorted = odd\n\
    \    for i in 0..<even.count {\n        if i % 2 == 0 {\n            evenSorted.append(even[i])\n\
    \        } else {\n            oddSorted.append(odd[i])\n        }\n    }\n  \
    \  return evenSorted.sorted()", "    var even = [Int]()\n    var odd = [Int]()\n\
    \    for i in l {\n        if i % 2 == 0 {\n            even.append(i)\n     \
    \   } else {\n            odd.append(i)\n        }\n    }\n    return even.sorted().append(odd.sorted())",
  "    var even = [Int]()\n    var odd = [Int]()\n    for i in l {\n        if i %\
    \ 2 == 0 {\n            even.append(i)\n        } else {\n            odd.append(i)\n\
    \        }\n    }\n    return even.sorted + odd.sorted", "    var even = [Int]()\n\
    \    var odd = [Int]()\n    for x in l {\n        if x % 2 == 0 {\n          \
    \  even.append(x)\n        } else {\n            odd.append(x)\n        }\n  \
    \  }\n    return even.sorted().append(odd.sorted())", "    var even = [Int]()\n\
    \    var odd = [Int]()\n    for x in l {\n        if x % 2 == 0 {\n          \
    \  even.append(x)\n        } else {\n            odd.append(x)\n        }\n  \
    \  }\n    return even.sorted + odd.sorted", "    var even = [Int]()\n    var odd\
    \ = [Int]()\n    for x in l {\n        if x % 2 == 0 {\n            even.append(x)\n\
    \        } else {\n            odd.append(x)\n        }\n    }\n    return even.sorted()\
    \ + odd", "    var even = [Int]()\n    var odd = [Int]()\n    for x in l {\n \
    \       if x % 2 == 0 {\n            even.append(x)\n        } else {\n      \
    \      odd.append(x)\n        }\n    }\n    return even.sorted() + odd", "   \
    \ var even = [Int]()\n    var odd = [Int]()\n    for x in l {\n        if x %\
    \ 2 == 0 {\n            even.append(x)\n        } else {\n            odd.append(x)\n\
    \        }\n    }\n    return even.sorted().append(odd.sorted())", "    var even\
    \ = [Int]()\n    var odd = [Int]()\n    for x in l {\n        if x % 2 == 0 {\n\
    \            even.append(x)\n        } else {\n            odd.append(x)\n   \
    \     }\n    }\n    return even.sorted().append(odd.sorted())", "    var even\
    \ = [Int]()\n    var odd = [Int]()\n    for x in l {\n        if x % 2 == 0 {\n\
    \            even.append(x)\n        } else {\n            odd.append(x)\n   \
    \     }\n    }\n    return even.sorted + odd.sorted", "    var even = [Int]()\n\
    \    var odd = [Int]()\n    for i in l {\n        if i % 2 == 0 {\n          \
    \  even.append(i)\n        } else {\n            odd.append(i)\n        }\n  \
    \  }\n    return even.sorted() + odd", "    var even = [Int]()\n    var odd =\
    \ [Int]()\n    for x in l {\n        if x % 2 == 0 {\n            even.append(x)\n\
    \        } else {\n            odd.append(x)\n        }\n    }\n    return even.sorted\
    \ + odd.sorted", "    var even = [Int]()\n    var odd = [Int]()\n    for x in\
    \ l {\n        if x % 2 == 0 {\n            even.append(x)\n        } else {\n\
    \            odd.append(x)\n        }\n    }\n    return even.sorted() + odd",
  "    var even = [Int]()\n    var odd = [Int]()\n    for x in l {\n        if x %\
    \ 2 == 0 {\n            even.append(x)\n        } else {\n            odd.append(x)\n\
    \        }\n    }\n    return even.sorted() + odd", "    var even = [Int]()\n\
    \    var odd = [Int]()\n    for i in l {\n        if i % 2 == 0 {\n          \
    \  even.append(i)\n        } else {\n            odd.append(i)\n        }\n  \
    \  }\n    return even.sorted() + odd", "    var even = [Int]()\n    var odd =\
    \ [Int]()\n    for i in l {\n        if i % 2 == 0 {\n            even.append(i)\n\
    \        } else {\n            odd.append(i)\n        }\n    }\n    return even.sorted\
    \ + odd.sorted", "    var even = l\n    var odd = l\n    for i in 0..<l.count\
    \ {\n        if i % 2 == 0 {\n            even[i] = even[i]\n        } else {\n\
    \            odd[i] = odd[i]\n        }\n    }\n    return even", "    var even\
    \ = [Int]()\n    var odd = [Int]()\n    for i in l {\n        if i % 2 == 0 {\n\
    \            even.append(i)\n        } else {\n            odd.append(i)\n   \
    \     }\n    }\n    return even.sorted().append(odd.sorted())", "    var even\
    \ = [Int]()\n    var odd = [Int]()\n    for x in l {\n        if x % 2 == 0 {\n\
    \            even.append(x)\n        } else {\n            odd.append(x)\n   \
    \     }\n    }\n    return even.sorted().append(odd).sorted()", "    var even\
    \ = [Int]()\n    var odd = [Int]()\n    for x in l {\n        if x % 2 == 0 {\n\
    \            even.append(x)\n        } else {\n            odd.append(x)\n   \
    \     }\n    }\n    return even.sorted() + odd", "    var even = [Int]()\n   \
    \ var odd = [Int]()\n    for i in l {\n        if i % 2 == 0 {\n            even.append(i)\n\
    \        } else {\n            odd.append(i)\n        }\n    }\n    return even.sorted()\
    \ + odd", "    var even = [Int]()\n    var odd = [Int]()\n    for x in l {\n \
    \       if x % 2 == 0 {\n            even.append(x)\n        } else {\n      \
    \      odd.append(x)\n        }\n    }\n    return even.sorted() + odd", "   \
    \ var even = [Int]()\n    var odd = [Int]()\n    for i in l {\n        if i %\
    \ 2 == 0 {\n            even.append(i)\n        } else {\n            odd.append(i)\n\
    \        }\n    }\n    return even.sorted().append(odd.sorted())", "    var even\
    \ = l\n    for index in 0..<l.count {\n        if index % 2 == 0 {\n         \
    \   even[index] = even[index].sorted()\n        }\n    }\n    return even", " \
    \   var even = [Int]()\n    var odd = [Int]()\n    for i in l {\n        if i\
    \ % 2 == 0 {\n            even.append(i)\n        } else {\n            odd.append(i)\n\
    \        }\n    }\n    return even.sorted() + odd", "    var even = [Int]()\n\
    \    var odd = [Int]()\n    for x in l {\n        if x % 2 == 0 {\n          \
    \  even.append(x)\n        } else {\n            odd.append(x)\n        }\n  \
    \  }\n    return even.sorted + odd.sorted", "    var even = [Int]()\n    var odd\
    \ = [Int]()\n    for i in l {\n        if i % 2 == 0 {\n            even.append(i)\n\
    \        } else {\n            odd.append(i)\n        }\n    }\n    return even.sorted().append(odd.sorted())",
  "    var even = [Int]()\n    var odd = [Int]()\n    for x in l {\n        if x %\
    \ 2 == 0 {\n            even.append(x)\n        } else {\n            odd.append(x)\n\
    \        }\n    }\n    return even.sorted + odd.sorted", "    var even = [Int]()\n\
    \    var odd = [Int]()\n    for i in l {\n        if i % 2 == 0 {\n          \
    \  even.append(i)\n        } else {\n            odd.append(i)\n        }\n  \
    \  }\n    return even.sorted() + odd", "    var even = [Int]()\n    var odd =\
    \ [Int]()\n    for i in l {\n        if i % 2 == 0 {\n            even.append(i)\n\
    \        } else {\n            odd.append(i)\n        }\n    }\n    return even.sorted\
    \ + odd.sorted", "    var even = [Int]()\n    var odd = [Int]()\n    for x in\
    \ l {\n        if x % 2 == 0 {\n            even.append(x)\n        } else {\n\
    \            odd.append(x)\n        }\n    }\n    return even.sorted() + odd",
  "    var even = [Int]()\n    var odd = [Int]()\n    for i in l {\n        if i %\
    \ 2 == 0 {\n            even.append(i)\n        } else {\n            odd.append(i)\n\
    \        }\n    }\n    return even.sorted() + odd", "    var even = [Int]()\n\
    \    var odd = [Int]()\n    for i in l {\n        if i % 2 == 0 {\n          \
    \  even.append(i)\n        } else {\n            odd.append(i)\n        }\n  \
    \  }\n    return even.sorted + odd.sorted", "    var even = [Int]()\n    var odd\
    \ = [Int]()\n    for x in l {\n        if x % 2 == 0 {\n            even.append(x)\n\
    \        } else {\n            odd.append(x)\n        }\n    }\n    return even.sorted()\
    \ + odd", "    var even = [Int]()\n    var odd = [Int]()\n    for x in l {\n \
    \       if x % 2 == 0 {\n            even.append(x)\n        } else {\n      \
    \      odd.append(x)\n        }\n    }\n    return even.sorted() + odd", "   \
    \ var even = [Int]()\n    var odd = [Int]()\n    for x in l {\n        if x %\
    \ 2 == 0 {\n            even.append(x)\n        } else {\n            odd.append(x)\n\
    \        }\n    }\n    return even.sorted + odd.sorted", "    var even = [Int]()\n\
    \    var odd = [Int]()\n    for i in l {\n        if i % 2 == 0 {\n          \
    \  even.append(i)\n        } else {\n            odd.append(i)\n        }\n  \
    \  }\n    return even.sorted() + odd", "    var even = [Int]()\n    var odd =\
    \ [Int]()\n    for i in l {\n        if i % 2 == 0 {\n            even.append(i)\n\
    \        } else {\n            odd.append(i)\n        }\n    }\n    return even.sorted()\
    \ + odd", "    var even = [Int]()\n    var odd = [Int]()\n    for x in l {\n \
    \       if x % 2 == 0 {\n            even.append(x)\n        } else {\n      \
    \      odd.append(x)\n        }\n    }\n    return even.sorted().append(odd.sorted())",
  "    var even = [Int]()\n    var odd = [Int]()\n    for x in l {\n        if x %\
    \ 2 == 0 {\n            even.append(x)\n        } else {\n            odd.append(x)\n\
    \        }\n    }\n    return even.sorted().append(odd.sorted())", "    var even\
    \ = l\n    for index in 0..<l.count {\n        if index % 2 == 0 {\n         \
    \   even[index] = even[index]\n        }\n    }\n    return even", "    var even\
    \ = [Int]()\n    var odd = [Int]()\n    for x in l {\n        if x % 2 == 0 {\n\
    \            even.append(x)\n        } else {\n            odd.append(x)\n   \
    \     }\n    }\n    return even.sorted + odd.sorted", "    var even = [Int]()\n\
    \    var odd = [Int]()\n    for i in l {\n        if i % 2 == 0 {\n          \
    \  even.append(i)\n        } else {\n            odd.append(i)\n        }\n  \
    \  }\n    return even.sorted().append(odd.sorted())", "    var even = l\n    var\
    \ odd = l\n    for i in 0..<l.count {\n        if i % 2 == 0 {\n            even[i]\
    \ = even[i]\n        } else {\n            odd[i] = odd[i]\n        }\n    }\n\
    \    return even", "    var even = [Int]()\n    var odd = [Int]()\n    for i in\
    \ l {\n        if i % 2 == 0 {\n            even.append(i)\n        } else {\n\
    \            odd.append(i)\n        }\n    }\n    return even.sorted + odd.sorted",
  "    var even = [Int]()\n    var odd = [Int]()\n    for i in l {\n        if i %\
    \ 2 == 0 {\n            even.append(i)\n        } else {\n            odd.append(i)\n\
    \        }\n    }\n    return even.sorted() + odd", "    var even = l\n    for\
    \ index in 0..<l.count {\n        if index % 2 == 0 {\n            even = even.sorted(by:\
    \ { $0 < $1 })\n        }\n    }\n    return even", "    var even = [Int]()\n\
    \    var odd = [Int]()\n    for x in l {\n        if x % 2 == 0 {\n          \
    \  even.append(x)\n        } else {\n            odd.append(x)\n        }\n  \
    \  }\n    return even.sorted().append(odd.sorted())", "    var even = [Int]()\n\
    \    var odd = [Int]()\n    for i in l {\n        if i % 2 == 0 {\n          \
    \  even.append(i)\n        } else {\n            odd.append(i)\n        }\n  \
    \  }\n    return even.sorted() + odd", "    var even = [Int]()\n    var odd =\
    \ [Int]()\n    for i in l {\n        if i % 2 == 0 {\n            even.append(i)\n\
    \        } else {\n            odd.append(i)\n        }\n    }\n    return even.sorted().append(odd.sorted())",
  "    var even = [Int]()\n    var odd = [Int]()\n    for x in l {\n        if x %\
    \ 2 == 0 {\n            even.append(x)\n        } else {\n            odd.append(x)\n\
    \        }\n    }\n    return even.sorted().append(odd.sorted())", "    var even\
    \ = [Int]()\n    var odd = [Int]()\n    for i in l {\n        if i % 2 == 0 {\n\
    \            even.append(i)\n        } else {\n            odd.append(i)\n   \
    \     }\n    }\n    return even.sorted().append(odd.sorted())", "    var even\
    \ = [Int]()\n    var odd = [Int]()\n    for x in l {\n        if x % 2 == 0 {\n\
    \            even.append(x)\n        } else {\n            odd.append(x)\n   \
    \     }\n    }\n    return even.sorted() + odd", "    var even = l\n    for index\
    \ in 0..<l.count {\n        if index % 2 == 0 {\n            even = even.sorted(by:\
    \ { $0 < $1 })\n        }\n    }\n    return even", "    var even = [Int]()\n\
    \    var odd = [Int]()\n    for i in l {\n        if i % 2 == 0 {\n          \
    \  even.append(i)\n        } else {\n            odd.append(i)\n        }\n  \
    \  }\n    return even.sorted().append(odd.sorted())", "    var even = l\n    var\
    \ odd = l\n    for i in 0..<l.count {\n        if i % 2 == 0 {\n            even[i]\
    \ = even[i]\n        } else {\n            odd[i] = odd[i]\n        }\n    }\n\
    \    return even", "    var even = [Int]()\n    var odd = [Int]()\n    for x in\
    \ l {\n        if x % 2 == 0 {\n            even.append(x)\n        } else {\n\
    \            odd.append(x)\n        }\n    }\n    return even.sorted() + odd",
  "    var even = [Int]()\n    var odd = [Int]()\n    for i in l {\n        if i %\
    \ 2 == 0 {\n            even.append(i)\n        } else {\n            odd.append(i)\n\
    \        }\n    }\n    return even.sorted() + odd", "    var even = [Int]()\n\
    \    var odd = [Int]()\n    for x in l {\n        if x % 2 == 0 {\n          \
    \  even.append(x)\n        } else {\n            odd.append(x)\n        }\n  \
    \  }\n    even = even.sorted()\n    for x in even {\n        odd.remove(x)\n \
    \   }\n    return odd", "    var even = [Int]()\n    var odd = [Int]()\n    for\
    \ x in l {\n        if x % 2 == 0 {\n            even.append(x)\n        } else\
    \ {\n            odd.append(x)\n        }\n    }\n    return even.sorted + odd.sorted",
  "    var even = [Int]()\n    var odd = [Int]()\n    for i in l {\n        if i %\
    \ 2 == 0 {\n            even.append(i)\n        } else {\n            odd.append(i)\n\
    \        }\n    }\n    return even.sorted() + odd", "    var even = [Int]()\n\
    \    var odd = [Int]()\n    for x in l {\n        if x % 2 == 0 {\n          \
    \  even.append(x)\n        } else {\n            odd.append(x)\n        }\n  \
    \  }\n    return even.sorted().append(odd.sorted())", "    var even = [Int]()\n\
    \    var odd = [Int]()\n    for i in l {\n        if i % 2 == 0 {\n          \
    \  even.append(i)\n        } else {\n            odd.append(i)\n        }\n  \
    \  }\n    return even.sorted() + odd", "    var even = [Int]()\n    var odd =\
    \ [Int]()\n    for x in l {\n        if x % 2 == 0 {\n            even.append(x)\n\
    \        } else {\n            odd.append(x)\n        }\n    }\n    return even.sorted().append(odd.sorted())",
  "    var even = [Int]()\n    var odd = [Int]()\n    for i in l {\n        if i %\
    \ 2 == 0 {\n            even.append(i)\n        } else {\n            odd.append(i)\n\
    \        }\n    }\n    return even.sorted + odd.sorted", "    var even = [Int]()\n\
    \    var odd = [Int]()\n    for i in l {\n        if i % 2 == 0 {\n          \
    \  even.append(i)\n        } else {\n            odd.append(i)\n        }\n  \
    \  }\n    return even.sorted() + odd", "    var even = [Int]()\n    var odd =\
    \ [Int]()\n    for i in l {\n        if i % 2 == 0 {\n            even.append(i)\n\
    \        } else {\n            odd.append(i)\n        }\n    }\n    return even.sorted()\
    \ + odd", "    var even = [Int]()\n    var odd = [Int]()\n    for x in l {\n \
    \       if x % 2 == 0 {\n            even.append(x)\n        } else {\n      \
    \      odd.append(x)\n        }\n    }\n    return even.sorted() + odd", "   \
    \ var even = [Int]()\n    var odd = [Int]()\n    for i in l {\n        if i %\
    \ 2 == 0 {\n            even.append(i)\n        } else {\n            odd.append(i)\n\
    \        }\n    }\n    return even.sorted() + odd", "    var even = [Int]()\n\
    \    var odd = [Int]()\n    for x in l {\n        if x % 2 == 0 {\n          \
    \  even.append(x)\n        } else {\n            odd.append(x)\n        }\n  \
    \  }\n    return even.sorted() + odd", "    var even = [Int]()\n    var odd =\
    \ [Int]()\n    for i in l {\n        if i % 2 == 0 {\n            even.append(i)\n\
    \        } else {\n            odd.append(i)\n        }\n    }\n    return even.sorted\
    \ + odd.sorted", "    var even = [Int]()\n    var odd = [Int]()\n    for i in\
    \ l {\n        if i % 2 == 0 {\n            even.append(i)\n        } else {\n\
    \            odd.append(i)\n        }\n    }\n    return even.sorted().append(odd.sorted())",
  "    var even = [Int]()\n    var odd = [Int]()\n    for i in l {\n        if i %\
    \ 2 == 0 {\n            even.append(i)\n        } else {\n            odd.append(i)\n\
    \        }\n    }\n    return even.sorted().append(odd.sorted())", "    var even\
    \ = [Int]()\n    var odd = [Int]()\n    for x in l {\n        if x % 2 == 0 {\n\
    \            even.append(x)\n        } else {\n            odd.append(x)\n   \
    \     }\n    }\n    return even.sorted() + odd", "    var even = [Int]()\n   \
    \ var odd = [Int]()\n    for x in l {\n        if x % 2 == 0 {\n            even.append(x)\n\
    \        } else {\n            odd.append(x)\n        }\n    }\n    return even.sorted()\
    \ + odd", "    var even = [Int]()\n    var odd = [Int]()\n    for x in l {\n \
    \       if x % 2 == 0 {\n            even.append(x)\n        } else {\n      \
    \      odd.append(x)\n        }\n    }\n    return even.sorted().append(odd.sorted())",
  "    var even = [Int]()\n    var odd = [Int]()\n    for i in l {\n        if i %\
    \ 2 == 0 {\n            even.append(i)\n        } else {\n            odd.append(i)\n\
    \        }\n    }\n    return even.sorted() + odd", "    var even = [Int]()\n\
    \    var odd = [Int]()\n    for x in l {\n        if x % 2 == 0 {\n          \
    \  even.append(x)\n        } else {\n            odd.append(x)\n        }\n  \
    \  }\n    even.sort()\n    odd.sort()\n    return even.merge(odd)", "    var even\
    \ = [Int]()\n    var odd = [Int]()\n    for x in l {\n        if x % 2 == 0 {\n\
    \            even.append(x)\n        } else {\n            odd.append(x)\n   \
    \     }\n    }\n    return even.sorted() + odd", "    var even = [Int]()\n   \
    \ var odd = [Int]()\n    for v in l {\n        if v%2 == 0 {\n            even.append(v)\n\
    \        } else {\n            odd.append(v)\n        }\n    }\n    return even.sorted().append(odd.sorted())",
  "    var even = [Int]()\n    var odd = [Int]()\n    for i in l {\n        if i %\
    \ 2 == 0 {\n            even.append(i)\n        } else {\n            odd.append(i)\n\
    \        }\n    }\n    return even.sorted() + odd", "    var even = [Int]()\n\
    \    var odd = [Int]()\n    for i in l {\n        if i % 2 == 0 {\n          \
    \  even.append(i)\n        } else {\n            odd.append(i)\n        }\n  \
    \  }\n    return even.sorted + odd.sorted", "    var even = [Int]()\n    var odd\
    \ = [Int]()\n    for x in l {\n        if x % 2 == 0 {\n            even.append(x)\n\
    \        } else {\n            odd.append(x)\n        }\n    }\n    return even.sorted()\
    \ + odd", "    var even = [Int]()\n    var odd = [Int]()\n    for i in l {\n \
    \       if i % 2 == 0 {\n            even.append(i)\n        } else {\n      \
    \      odd.append(i)\n        }\n    }\n    return even.sorted() + odd", "   \
    \ var even = [Int]()\n    var odd = [Int]()\n    for x in l {\n        if x %\
    \ 2 == 0 {\n            even.append(x)\n        } else {\n            odd.append(x)\n\
    \        }\n    }\n    return even.sorted().append(odd.sorted())", "    var even\
    \ = l\n    var odd = l\n    for i in 0..<l.count {\n        if i % 2 == 0 {\n\
    \            even[i] = even[i]\n        } else {\n            odd[i] = odd[i]\n\
    \        }\n    }\n    return even", "    var even = [Int]()\n    var odd = [Int]()\n\
    \    for x in l {\n        if x % 2 == 0 {\n            even.append(x)\n     \
    \   } else {\n            odd.append(x)\n        }\n    }\n    return even.sorted()\
    \ + odd", "    var even = [Int]()\n    var odd = [Int]()\n    for x in l {\n \
    \       if x % 2 == 0 {\n            even.append(x)\n        } else {\n      \
    \      odd.append(x)\n        }\n    }\n    return even.sorted().append(odd.sorted())",
  "    var even = [Int]()\n    var odd = [Int]()\n    for x in l {\n        if x %\
    \ 2 == 0 {\n            even.append(x)\n        } else {\n            odd.append(x)\n\
    \        }\n    }\n    return even.sorted() + odd", "    var even = [Int]()\n\
    \    var odd = [Int]()\n    for x in l {\n        if x % 2 == 0 {\n          \
    \  even.append(x)\n        } else {\n            odd.append(x)\n        }\n  \
    \  }\n    return even.sorted() + odd", "    var even = [Int]()\n    var odd =\
    \ [Int]()\n    for x in l {\n        if x % 2 == 0 {\n            even.append(x)\n\
    \        } else {\n            odd.append(x)\n        }\n    }\n    return even.sorted().append(odd.sorted())",
  "    var even = [Int]()\n    var odd = [Int]()\n    for i in l {\n        if i %\
    \ 2 == 0 {\n            even.append(i)\n        } else {\n            odd.append(i)\n\
    \        }\n    }\n    return even.sorted().append(odd.sorted())", "    var even\
    \ = [Int]()\n    var odd = [Int]()\n    for x in l {\n        if x % 2 == 0 {\n\
    \            even.append(x)\n        } else {\n            odd.append(x)\n   \
    \     }\n    }\n    return even.sorted().append(odd.sorted())", "    var even\
    \ = [Int]()\n    var odd = [Int]()\n    for x in l {\n        if x % 2 == 0 {\n\
    \            even.append(x)\n        } else {\n            odd.append(x)\n   \
    \     }\n    }\n    return even.sorted().append(odd.sorted())", "    var even\
    \ = [Int]()\n    var odd = [Int]()\n    for i in l {\n        if i % 2 == 0 {\n\
    \            even.append(i)\n        } else {\n            odd.append(i)\n   \
    \     }\n    }\n    return even.sorted().append(odd.sorted())", "    var even\
    \ = [Int]()\n    var odd = [Int]()\n    for x in l {\n        if x % 2 == 0 {\n\
    \            even.append(x)\n        } else {\n            odd.append(x)\n   \
    \     }\n    }\n    return even.sorted() + odd", "    var even = [Int]()\n   \
    \ var odd = [Int]()\n    for x in l {\n        if x % 2 == 0 {\n            even.append(x)\n\
    \        } else {\n            odd.append(x)\n        }\n    }\n    return even.sorted().append(odd.sorted())",
  "    var even = [Int]()\n    var odd = [Int]()\n    for x in l {\n        if x %\
    \ 2 == 0 {\n            even.append(x)\n        } else {\n            odd.append(x)\n\
    \        }\n    }\n    return even.sorted().append(odd.sorted())", "    var even\
    \ = [Int]()\n    var odd = [Int]()\n    for x in l {\n        if x % 2 == 0 {\n\
    \            even.append(x)\n        } else {\n            odd.append(x)\n   \
    \     }\n    }\n    return even.sorted().append(odd.sorted())", "    var even\
    \ = [Int]()\n    var odd = [Int]()\n    for i in l {\n        if i % 2 == 0 {\n\
    \            even.append(i)\n        } else {\n            odd.append(i)\n   \
    \     }\n    }\n    return even.sorted() + odd", "    var even = [Int]()\n   \
    \ var odd = [Int]()\n    for x in l {\n        if x % 2 == 0 {\n            even.append(x)\n\
    \        } else {\n            odd.append(x)\n        }\n    }\n    return even.sorted()\
    \ + odd", "    var even = [Int]()\n    var odd = [Int]()\n    for x in l {\n \
    \       if x % 2 == 0 {\n            even.append(x)\n        } else {\n      \
    \      odd.append(x)\n        }\n    }\n    return even.sorted().append(odd.sorted())",
  "    var even = [Int]()\n    var odd = [Int]()\n    for i in l {\n        if i %\
    \ 2 == 0 {\n            even.append(i)\n        } else {\n            odd.append(i)\n\
    \        }\n    }\n    return even.sorted() + odd", "    var even = [Int]()\n\
    \    var odd = [Int]()\n    for i in l {\n        if i % 2 == 0 {\n          \
    \  even.append(i)\n        } else {\n            odd.append(i)\n        }\n  \
    \  }\n    return even.sorted() + odd", "    var even = [Int]()\n    var odd =\
    \ [Int]()\n    for i in l {\n        if i % 2 == 0 {\n            even.append(i)\n\
    \        } else {\n            odd.append(i)\n        }\n    }\n    return even.sorted\
    \ + odd.sorted", "    var even = [Int]()\n    var odd = [Int]()\n    for i in\
    \ l {\n        if i % 2 == 0 {\n            even.append(i)\n        } else {\n\
    \            odd.append(i)\n        }\n    }\n    return even.sorted() + odd",
  "    var even = [Int]()\n    var odd = [Int]()\n    for x in l {\n        if x %\
    \ 2 == 0 {\n            even.append(x)\n        } else {\n            odd.append(x)\n\
    \        }\n    }\n    return even.sorted().append(odd.sorted())", "    var even\
    \ = [Int]()\n    var odd = [Int]()\n    for i in l {\n        if i % 2 == 0 {\n\
    \            even.append(i)\n        } else {\n            odd.append(i)\n   \
    \     }\n    }\n    return even.sorted().append(odd.sorted())", "    var even\
    \ = [Int]()\n    var odd = [Int]()\n    for i in l {\n        if i % 2 == 0 {\n\
    \            even.append(i)\n        } else {\n            odd.append(i)\n   \
    \     }\n    }\n    return even.sorted() + odd", "    var even = [Int]()\n   \
    \ var odd = [Int]()\n    for x in l {\n        if x % 2 == 0 {\n            even.append(x)\n\
    \        } else {\n            odd.append(x)\n        }\n    }\n    return even.sorted().append(odd).sorted()",
  "    var even = [Int]()\n    var odd = [Int]()\n    for i in l {\n        if i %\
    \ 2 == 0 {\n            even.append(i)\n        } else {\n            odd.append(i)\n\
    \        }\n    }\n    return even.sorted() + odd", "    var even = [Int]()\n\
    \    var odd = [Int]()\n    for i in l {\n        if i % 2 == 0 {\n          \
    \  even.append(i)\n        } else {\n            odd.append(i)\n        }\n  \
    \  }\n    return even.sorted + odd.sorted", "    var even = [Int]()\n    var odd\
    \ = [Int]()\n    for x in l {\n        if x % 2 == 0 {\n            even.append(x)\n\
    \        } else {\n            odd.append(x)\n        }\n    }\n    return even.sorted().append(odd.sorted())",
  "    var even = [Int]()\n    var odd = [Int]()\n    for i in l {\n        if i %\
    \ 2 == 0 {\n            even.append(i)\n        } else {\n            odd.append(i)\n\
    \        }\n    }\n    return even.sorted() + odd", "    var even = [Int]()\n\
    \    var odd = [Int]()\n    for x in l {\n        if x % 2 == 0 {\n          \
    \  even.append(x)\n        } else {\n            odd.append(x)\n        }\n  \
    \  }\n    return even.sorted().append(odd.sorted())", "    var even = [Int]()\n\
    \    var odd = [Int]()\n    for i in l {\n        if i % 2 == 0 {\n          \
    \  even.append(i)\n        } else {\n            odd.append(i)\n        }\n  \
    \  }\n    return even.sorted() + odd", "    var even = [Int]()\n    var odd =\
    \ [Int]()\n    for i in l {\n        if i % 2 == 0 {\n            even.append(i)\n\
    \        } else {\n            odd.append(i)\n        }\n    }\n    return even.sorted().append(odd.sorted())",
  "    var even = [Int]()\n    var odd = [Int]()\n    for i in l {\n        if i %\
    \ 2 == 0 {\n            even.append(i)\n        } else {\n            odd.append(i)\n\
    \        }\n    }\n    return even.sorted + odd.sorted", "    var even = l\n \
    \   var odd = l\n    for i in 0..<l.count {\n        if i % 2 == 0 {\n       \
    \     even[i] = even[i]\n        } else {\n            odd[i] = odd[i]\n     \
    \   }\n    }\n    return even", "    var even = [Int]()\n    var odd = [Int]()\n\
    \    for i in l {\n        if i % 2 == 0 {\n            even.append(i)\n     \
    \   } else {\n            odd.append(i)\n        }\n    }\n    return even.sorted()\
    \ + odd", "    var even = [Int]()\n    var odd = [Int]()\n    for x in l {\n \
    \       if x % 2 == 0 {\n            even.append(x)\n        } else {\n      \
    \      odd.append(x)\n        }\n    }\n    return even.sorted().append(odd.sorted())",
  "    var even = [Int]()\n    var odd = [Int]()\n    for x in l {\n        if x %\
    \ 2 == 0 {\n            even.append(x)\n        } else {\n            odd.append(x)\n\
    \        }\n    }\n    return even.sorted + odd.sorted", "    var even = [Int]()\n\
    \    var odd = [Int]()\n    for x in l {\n        if x % 2 == 0 {\n          \
    \  even.append(x)\n        } else {\n            odd.append(x)\n        }\n  \
    \  }\n    return even.sorted().append(odd.sorted())", "    var even = [Int]()\n\
    \    var odd = [Int]()\n    for i in l {\n        if i % 2 == 0 {\n          \
    \  even.append(i)\n        } else {\n            odd.append(i)\n        }\n  \
    \  }\n    return even.sorted() + odd", "    var even = [Int]()\n    var odd =\
    \ [Int]()\n    for x in l {\n        if x % 2 == 0 {\n            even.append(x)\n\
    \        } else {\n            odd.append(x)\n        }\n    }\n    return even.sorted().append(odd.sorted())",
  "    var even = [Int]()\n    var odd = [Int]()\n    for v in l {\n        if v%2\
    \ == 0 {\n            even.append(v)\n        } else {\n            odd.append(v)\n\
    \        }\n    }\n    return even.sorted() + odd", "    var even = [Int]()\n\
    \    var odd = [Int]()\n    for x in l {\n        if x % 2 == 0 {\n          \
    \  even.append(x)\n        } else {\n            odd.append(x)\n        }\n  \
    \  }\n    return even.sorted() + odd", "    var even = [Int]()\n    var odd =\
    \ [Int]()\n    for x in l {\n        if x % 2 == 0 {\n            even.append(x)\n\
    \        } else {\n            odd.append(x)\n        }\n    }\n    return even.sorted().append(odd.sorted())",
  "    var even = [Int]()\n    var odd = [Int]()\n    for i in l {\n        if i %\
    \ 2 == 0 {\n            even.append(i)\n        } else {\n            odd.append(i)\n\
    \        }\n    }\n    return even.sorted() + odd", "    var even = [Int]()\n\
    \    var odd = [Int]()\n    for i in l {\n        if i % 2 == 0 {\n          \
    \  even.append(i)\n        } else {\n            odd.append(i)\n        }\n  \
    \  }\n    return even.sorted() + odd", "    var even = [Int]()\n    var odd =\
    \ [Int]()\n    for i in l {\n        if i % 2 == 0 {\n            even.append(i)\n\
    \        } else {\n            odd.append(i)\n        }\n    }\n    return even.sorted()\
    \ + odd", "    var even = [Int]()\n    var odd = [Int]()\n    for i in l {\n \
    \       if i % 2 == 0 {\n            even.append(i)\n        } else {\n      \
    \      odd.append(i)\n        }\n    }\n    return even.sorted().append(odd.sorted())",
  "    var even = [Int]()\n    var odd = [Int]()\n    for x in l {\n        if x %\
    \ 2 == 0 {\n            even.append(x)\n        } else {\n            odd.append(x)\n\
    \        }\n    }\n    return even.sorted() + odd", "    var even = l\n    for\
    \ i in 0..<l.count {\n        if i % 2 == 0 {\n            even[i] = even[i]\n\
    \        }\n    }\n    return even", "    var even = [Int]()\n    var odd = [Int]()\n\
    \    for x in l {\n        if x % 2 == 0 {\n            even.append(x)\n     \
    \   } else {\n            odd.append(x)\n        }\n    }\n    return even.sorted().append(odd.sorted())",
  "    var even = [Int]()\n    var odd = [Int]()\n    for x in l {\n        if x %\
    \ 2 == 0 {\n            even.append(x)\n        } else {\n            odd.append(x)\n\
    \        }\n    }\n    return even.sorted() + odd", "    var even = [Int]()\n\
    \    var odd = [Int]()\n    for i in l {\n        if i % 2 == 0 {\n          \
    \  even.append(i)\n        } else {\n            odd.append(i)\n        }\n  \
    \  }\n    return even.sorted().append(odd.sorted())", "    var even = [Int]()\n\
    \    var odd = [Int]()\n    for i in l {\n        if i % 2 == 0 {\n          \
    \  even.append(i)\n        } else {\n            odd.append(i)\n        }\n  \
    \  }\n    return even.sorted() + odd", "    var even = [Int]()\n    var odd =\
    \ [Int]()\n    for i in l {\n        if i % 2 == 0 {\n            even.append(i)\n\
    \        } else {\n            odd.append(i)\n        }\n    }\n    return even.sorted()\
    \ + odd", "    var even = [Int]()\n    var odd = [Int]()\n    for i in l {\n \
    \       if i % 2 == 0 {\n            even.append(i)\n        } else {\n      \
    \      odd.append(i)\n        }\n    }\n    return even.sorted() + odd", "   \
    \ var even = [Int]()\n    var odd = [Int]()\n    for i in l {\n        if i %\
    \ 2 == 0 {\n            even.append(i)\n        } else {\n            odd.append(i)\n\
    \        }\n    }\n    return even.sorted() + odd", "    var even = l.slice()\n\
    \    even.sort()\n    var odd = l.slice()\n    odd.sort()\n    for i := 0; i <\
    \ len(even); i += 2 {\n        odd[i] = even[i]\n    }\n    return odd", "   \
    \ var even = [Int]()\n    var odd = [Int]()\n    for x in l {\n        if x %\
    \ 2 == 0 {\n            even.append(x)\n        } else {\n            odd.append(x)\n\
    \        }\n    }\n    return even.sorted() + odd", "    var even = [Int]()\n\
    \    var odd = [Int]()\n    for x in l {\n        if x % 2 == 0 {\n          \
    \  even.append(x)\n        } else {\n            odd.append(x)\n        }\n  \
    \  }\n    return even.sorted + odd.sorted", "    var even = [Int]()\n    var odd\
    \ = [Int]()\n    for i in l {\n        if i % 2 == 0 {\n            even.append(i)\n\
    \        } else {\n            odd.append(i)\n        }\n    }\n    return even.sorted()\
    \ + odd", "    var even = [Int]()\n    var odd = [Int]()\n    for x in l {\n \
    \       if x % 2 == 0 {\n            even.append(x)\n        } else {\n      \
    \      odd.append(x)\n        }\n    }\n    return even.sorted() + odd", "   \
    \ var even = [Int]()\n    var odd = [Int]()\n    for i in l {\n        if i %\
    \ 2 == 0 {\n            even.append(i)\n        } else {\n            odd.append(i)\n\
    \        }\n    }\n    return even.sorted + odd.sorted", "    var even = [Int]()\n\
    \    var odd = [Int]()\n    for x in l {\n        if x % 2 == 0 {\n          \
    \  even.append(x)\n        } else {\n            odd.append(x)\n        }\n  \
    \  }\n    return even.sorted + odd.sorted", "    var even = [Int]()\n    var odd\
    \ = [Int]()\n    for i in l {\n        if i % 2 == 0 {\n            even.append(i)\n\
    \        } else {\n            odd.append(i)\n        }\n    }\n    return even.sorted()\
    \ + odd", "    var even = [Int]()\n    var odd = [Int]()\n    for x in l {\n \
    \       if x % 2 == 0 {\n            even.append(x)\n        } else {\n      \
    \      odd.append(x)\n        }\n    }\n    return even.sorted().append(odd.sorted())",
  "    var even = [Int]()\n    var odd = [Int]()\n    for x in l {\n        if x %\
    \ 2 == 0 {\n            even.append(x)\n        } else {\n            odd.append(x)\n\
    \        }\n    }\n    return even.sorted().append(odd.sorted())", "    var even\
    \ = [Int]()\n    var odd = [Int]()\n    for x in l {\n        if x % 2 == 0 {\n\
    \            even.append(x)\n        } else {\n            odd.append(x)\n   \
    \     }\n    }\n    return even.sorted().append(odd.sorted())", "    var even\
    \ = l\n    var odd = l\n    for i in 0..<l.count {\n        if i % 2 == 0 {\n\
    \            even[i] = even[i]\n        } else {\n            odd[i] = odd[i]\n\
    \        }\n    }\n    return even", "    var even = [Int]()\n    var odd = [Int]()\n\
    \    for x in l {\n        if x % 2 == 0 {\n            even.append(x)\n     \
    \   } else {\n            odd.append(x)\n        }\n    }\n    return even.sorted()\
    \ + odd", "    var even = [Int]()\n    var odd = [Int]()\n    for i in l {\n \
    \       if i % 2 == 0 {\n            even.append(i)\n        } else {\n      \
    \      odd.append(i)\n        }\n    }\n    return even.sorted().append(odd.sorted())",
  "    var even = [Int]()\n    var odd = [Int]()\n    for i in l {\n        if i %\
    \ 2 == 0 {\n            even.append(i)\n        } else {\n            odd.append(i)\n\
    \        }\n    }\n    return even.sorted() + odd", "    var even = [Int]()\n\
    \    var odd = [Int]()\n    for i in l {\n        if i % 2 == 0 {\n          \
    \  even.append(i)\n        } else {\n            odd.append(i)\n        }\n  \
    \  }\n    return even.sorted().append(odd).sorted()", "    var even = [Int]()\n\
    \    var odd = [Int]()\n    for i in l {\n        if i % 2 == 0 {\n          \
    \  even.append(i)\n        } else {\n            odd.append(i)\n        }\n  \
    \  }\n    return even.sorted + odd.sorted", "    var even = [Int]()\n    var odd\
    \ = [Int]()\n    for x in l {\n        if x % 2 == 0 {\n            even.append(x)\n\
    \        } else {\n            odd.append(x)\n        }\n    }\n    return even.sorted().append(odd.sorted())",
  "    var even = [Int]()\n    var odd = [Int]()\n    for x in l {\n        if x %\
    \ 2 == 0 {\n            even.append(x)\n        } else {\n            odd.append(x)\n\
    \        }\n    }\n    return even.sorted() + odd", "    var even = [Int]()\n\
    \    var odd = [Int]()\n    for i in l {\n        if i % 2 == 0 {\n          \
    \  even.append(i)\n        } else {\n            odd.append(i)\n        }\n  \
    \  }\n    return even.sorted() + odd", "    var even = [Int]()\n    var odd =\
    \ [Int]()\n    for i in l {\n        if i % 2 == 0 {\n            even.append(i)\n\
    \        } else {\n            odd.append(i)\n        }\n    }\n    return even.sorted\
    \ + odd.sorted", "    var even = [Int]()\n    var odd = [Int]()\n    for x in\
    \ l {\n        if x % 2 == 0 {\n            even.append(x)\n        } else {\n\
    \            odd.append(x)\n        }\n    }\n    return even.sorted + odd.sorted",
  "    var even = [Int]()\n    var odd = [Int]()\n    for x in l {\n        if x %\
    \ 2 == 0 {\n            even.append(x)\n        } else {\n            odd.append(x)\n\
    \        }\n    }\n    return even.sorted().append(odd.sorted())", "    var even\
    \ = [Int]()\n    var odd = [Int]()\n    for i in l {\n        if i % 2 == 0 {\n\
    \            even.append(i)\n        } else {\n            odd.append(i)\n   \
    \     }\n    }\n    return even.sorted().append(odd.sorted())", "    var even\
    \ = [Int]()\n    var odd = [Int]()\n    for x in l {\n        if x % 2 == 0 {\n\
    \            even.append(x)\n        } else {\n            odd.append(x)\n   \
    \     }\n    }\n    return even.sorted().append(odd.sorted())", "    var even\
    \ = [Int]()\n    var odd = [Int]()\n    for i in l {\n        if i % 2 == 0 {\n\
    \            even.append(i)\n        } else {\n            odd.append(i)\n   \
    \     }\n    }\n    return even.sorted().append(odd.sorted())", "    var even\
    \ = [Int]()\n    var odd = [Int]()\n    for i in l {\n        if i % 2 == 0 {\n\
    \            even.append(i)\n        } else {\n            odd.append(i)\n   \
    \     }\n    }\n    return even.sorted() + odd", "    var even = [Int]()\n   \
    \ var odd = [Int]()\n    for i in l {\n        if i % 2 == 0 {\n            even.append(i)\n\
    \        } else {\n            odd.append(i)\n        }\n    }\n    return even.sorted()\
    \ + odd", "    var even = l\n    for index in 0..<l.count {\n        if index\
    \ % 2 == 0 {\n            even[index] = even[index].sorted()\n        }\n    }\n\
    \    return even", "    var even = [Int]()\n    var odd = [Int]()\n    for i in\
    \ l {\n        if i % 2 == 0 {\n            even.append(i)\n        } else {\n\
    \            odd.append(i)\n        }\n    }\n    return even.sorted + odd.sorted",
  "    var even = [Int]()\n    var odd = [Int]()\n    for x in l {\n        if x %\
    \ 2 == 0 {\n            even.append(x)\n        } else {\n            odd.append(x)\n\
    \        }\n    }\n    return even.sorted().append(odd.sorted())", "    var even\
    \ = [Int]()\n    var odd = [Int]()\n    for i in l {\n        if i % 2 == 0 {\n\
    \            even.append(i)\n        } else {\n            odd.append(i)\n   \
    \     }\n    }\n    return even.sorted().append(odd.sorted())", "    var even\
    \ = [Int]()\n    var odd = [Int]()\n    for i in l {\n        if i % 2 == 0 {\n\
    \            even.append(i)\n        } else {\n            odd.append(i)\n   \
    \     }\n    }\n    return even.sorted() + odd", "    var even = [Int]()\n   \
    \ var odd = [Int]()\n    for v in l {\n        if v%2 == 0 {\n            even.append(v)\n\
    \        } else {\n            odd.append(v)\n        }\n    }\n    return even.sorted()\
    \ + odd", "    var even = [Int]()\n    var odd = [Int]()\n    for x in l {\n \
    \       if x % 2 == 0 {\n            even.append(x)\n        } else {\n      \
    \      odd.append(x)\n        }\n    }\n    return even.sorted() + odd", "   \
    \ var even = [Int]()\n    var odd = [Int]()\n    for x in l {\n        if x %\
    \ 2 == 0 {\n            even.append(x)\n        } else {\n            odd.append(x)\n\
    \        }\n    }\n    return even.sorted().append(odd.sorted())", "    var even\
    \ = [Int]()\n    var odd = [Int]()\n    for x in l {\n        if x % 2 == 0 {\n\
    \            even.append(x)\n        } else {\n            odd.append(x)\n   \
    \     }\n    }\n    return even.sorted() + odd", "    var even = [Int]()\n   \
    \ var odd = [Int]()\n    for i in l {\n        if i % 2 == 0 {\n            even.append(i)\n\
    \        } else {\n            odd.append(i)\n        }\n    }\n    return even.sorted().append(odd.sorted())",
  "    var even = [Int]()\n    var odd = [Int]()\n    for x in l {\n        if x %\
    \ 2 == 0 {\n            even.append(x)\n        } else {\n            odd.append(x)\n\
    \        }\n    }\n    return even.sorted() + odd", "    var even = [Int]()\n\
    \    var odd = [Int]()\n    for i in l {\n        if i % 2 == 0 {\n          \
    \  even.append(i)\n        } else {\n            odd.append(i)\n        }\n  \
    \  }\n    return even.sorted() + odd", "    var even = [Int]()\n    var odd =\
    \ [Int]()\n    for i in l {\n        if i % 2 == 0 {\n            even.append(i)\n\
    \        } else {\n            odd.append(i)\n        }\n    }\n    return even.sorted()\
    \ + odd"]
stop_tokens:
- "\n}"

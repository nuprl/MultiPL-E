name: HumanEval_64_vowels_count
language: swift
prompt: "\n/// Write a function vowels_count which takes a string representing\n///\
  \ a word as input and returns the number of vowels in the string.\n/// Vowels in\
  \ this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but only\
  \ when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
  \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
  \ String) -> Int {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
  \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
  \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
  \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
completions: ["    var count = 0\n    for c in s {\n        switch c {\n        case\
    \ \"a\":\n        case \"e\":\n        case \"i\":\n        case \"o\":\n    \
    \    case \"u\":\n            count += 1\n        default:\n            break\n\
    \        }\n    }\n    return count", "    var count = 0\n    for c in s {\n \
    \       switch c {\n        case \"a\", \"e\", \"i\", \"o\", \"u\":\n        \
    \    count += 1\n        default:\n            break\n        }\n    }\n    return\
    \ count", "    let vowels = \"aeiouAEIOU\"\n    var count = 0\n    for c in s\
    \ {\n        if vowels.contains(c) {\n            count += 1\n        }\n    }\n\
    \    return count", "    let vowels = \"aeiouAEIOU\"\n    let vowels_count = s.characters.filter({\
    \ vowels.contains($0) }).count\n    return vowels_count", "    var vowelCount\
    \ = 0\n    for c in s {\n        switch c {\n        case \"a\":\n        case\
    \ \"e\":\n        case \"i\":\n        case \"o\":\n        case \"u\":\n    \
    \        vowelCount += 1\n        default:\n            break\n        }\n   \
    \ }\n    return vowelCount", "    var count = 0\n    for letter in s {\n     \
    \   switch letter {\n        case \"a\":\n        case \"e\":\n        case \"\
    i\":\n        case \"o\":\n        case \"u\":\n            count += 1\n     \
    \   default:\n            break\n        }\n    }\n    return count", "    let\
    \ vowels = \"aeiouAEIOU\"\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count", "    var count\
    \ = 0\n    for c in s {\n        switch c {\n        case \"a\":\n        case\
    \ \"e\":\n        case \"i\":\n        case \"o\":\n        case \"u\":\n    \
    \        count += 1\n        default:\n            break\n        }\n    }\n \
    \   return count", "    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count", "    let vowels = \"aeiouAEIOU\"\
    \n    var count = 0\n    for char in s {\n        if vowels.contains(char) {\n\
    \            count += 1\n        }\n    }\n    return count", "    var count =\
    \ 0\n    for c in s {\n        switch c {\n        case \"a\":\n        case \"\
    e\":\n        case \"i\":\n        case \"o\":\n        case \"u\":\n        \
    \    count += 1\n        default:\n            break\n        }\n    }\n    return\
    \ count", "    var count = 0\n    for c in s {\n        switch c {\n        case\
    \ \"a\":\n        case \"e\":\n        case \"i\":\n        case \"o\":\n    \
    \    case \"u\":\n            count += 1\n        default:\n            break\n\
    \        }\n    }\n    return count", "    var count = 0\n    for c in s {\n \
    \       switch c {\n        case \"a\":\n        case \"e\":\n        case \"\
    i\":\n        case \"o\":\n        case \"u\":\n            count += 1\n     \
    \   default:\n            break\n        }\n    }\n    return count", "    var\
    \ count = 0\n    for letter in s {\n        if letter == \"a\" || letter == \"\
    e\" || letter == \"i\" || letter == \"o\" || letter == \"u\" {\n            count\
    \ += 1\n        }\n    }\n    return count", "    var count = 0\n    for c in\
    \ s {\n        switch c {\n        case \"a\":\n        case \"e\":\n        case\
    \ \"i\":\n        case \"o\":\n        case \"u\":\n            count += 1\n \
    \       default:\n            break\n        }\n    }\n    return count", "  \
    \  var count = 0\n    for c in s {\n        switch c {\n        case \"a\":\n\
    \        case \"e\":\n        case \"i\":\n        case \"o\":\n        case \"\
    u\":\n            count += 1\n        default:\n            break\n        }\n\
    \    }\n    return count", "    var count = 0\n    for c in s {\n        switch\
    \ c {\n        case \"a\":\n        case \"e\":\n        case \"i\":\n       \
    \ case \"o\":\n        case \"u\":\n            count += 1\n        default:\n\
    \            break\n        }\n    }\n    return count", "    var count = 0\n\
    \    for c in s {\n        switch c {\n        case \"a\":\n        case \"e\"\
    :\n        case \"i\":\n        case \"o\":\n        case \"u\":\n           \
    \ count += 1\n        default:\n            break\n        }\n    }\n    return\
    \ count", "    var count = 0\n    for c in s {\n        switch c {\n        case\
    \ \"a\":\n        case \"e\":\n        case \"i\":\n        case \"o\":\n    \
    \    case \"u\":\n            count += 1\n        default:\n            if c ==\
    \ s[s.startIndex.advanced(by: -1)] {\n                count += 1\n           \
    \ }\n        }\n    }\n    return count", "    var count = 0\n    for letter in\
    \ s {\n        switch letter {\n        case \"a\":\n        case \"e\":\n   \
    \     case \"i\":\n        case \"o\":\n        case \"u\":\n            count\
    \ += 1\n        default:\n            break\n        }\n    }\n    return count"]
stop_tokens:
- "\n}"

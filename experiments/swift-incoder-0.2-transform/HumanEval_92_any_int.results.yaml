language: swift
name: HumanEval_92_any_int
results:
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return ((x + y) ==\
    \ z && (x + y) == z && (x + y) == z)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3)\
    \ == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp_vhsjjdv/tmp_vhsjjdv.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b77bd7a5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b77bd49cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b77bd49c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b77bd49b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_vhsjjdv                        0x00005632b626d1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b77bd991460 __libc_start_main +
    245

    6    tmp_vhsjjdv                        0x00005632b626ce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824617
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return ((x == x +\
    \ y) && (x == x + z) && (x == y + z)) || ((x != x + y) && (x != x + z) && (x !=\
    \ y + z))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmploat1an8/tmploat1an8.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7ad888ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7ad8585b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7ad8585988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7ad85847b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmploat1an8                        0x0000560f8572324d <unavailable> + 4685

    5    libc.so.6                          0x00002b7ad8a7a460 __libc_start_main +
    245

    6    tmploat1an8                        0x0000560f85722e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return ((x == x +\
    \ y) && (x == x + z) && (y == y + z)) || (x == x + z) && (y == y + z) && (z ==\
    \ z + y)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp4hn_wkk6/tmp4hn_wkk6.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab8c1d77c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab8c1a6eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab8c1a6e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab8c1a6d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4hn_wkk6                        0x0000556dc45661c4 <unavailable> + 4548

    5    libc.so.6                          0x00002ab8c1f63460 __libc_start_main +
    245

    6    tmp4hn_wkk6                        0x0000556dc4565e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824698
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y + z\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpl_mpluwp/tmpl_mpluwp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2d165cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2d162c5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2d162c5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2d162c47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl_mpluwp                        0x0000559c9dde51c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b2d167ba460 __libc_start_main +
    245

    6    tmpl_mpluwp                        0x0000559c9dde4e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if x == y {\n   \
    \     if x == z {\n            return true\n        }\n    }\n    return false\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp1cpoxsgl/tmp1cpoxsgl.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acb0b9d3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acb0b6cab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acb0b6ca988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acb0b6c97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1cpoxsgl                        0x00005595e9fa31c4 <unavailable> + 4548

    5    libc.so.6                          0x00002acb0bbbf460 __libc_start_main +
    245

    6    tmp1cpoxsgl                        0x00005595e9fa2e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y + z\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpl_mpluwp/tmpl_mpluwp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2d165cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2d162c5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2d162c5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2d162c47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl_mpluwp                        0x0000559c9dde51c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b2d167ba460 __libc_start_main +
    245

    6    tmpl_mpluwp                        0x0000559c9dde4e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y + z\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpl_mpluwp/tmpl_mpluwp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2d165cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2d162c5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2d162c5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2d162c47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl_mpluwp                        0x0000559c9dde51c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b2d167ba460 __libc_start_main +
    245

    6    tmpl_mpluwp                        0x0000559c9dde4e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y ||\
    \ x == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpq5g0y232/tmpq5g0y232.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52034dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52031d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52031d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52031d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq5g0y232                        0x0000560fadd831c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b52036c6460 __libc_start_main +
    245

    6    tmpq5g0y232                        0x0000560fadd82e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    if x == y || x ==\
    \ z {\n        return true\n    }\n    if y == z {\n        return true\n    }\n\
    \    if x < y && x < z {\n        return true\n    }\n    if y < z {\n       \
    \ return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3)\
    \ == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpmdemiyfe/tmpmdemiyfe.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b72d81e4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b72d7edbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b72d7edb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b72d7eda7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmdemiyfe                        0x000055dab4c451c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b72d83d0460 __libc_start_main +
    245

    6    tmpmdemiyfe                        0x000055dab4c44e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n  return x == y || x\
    \ == z || y == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpbtt15to2/tmpbtt15to2.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad0d17b8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad0d14afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad0d14af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad0d14ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbtt15to2                        0x000055b68b34b1c4 <unavailable> + 4548

    5    libc.so.6                          0x00002ad0d19a4460 __libc_start_main +
    245

    6    tmpbtt15to2                        0x000055b68b34ae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y + z\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpl_mpluwp/tmpl_mpluwp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2d165cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2d162c5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2d162c5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2d162c47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl_mpluwp                        0x0000559c9dde51c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b2d167ba460 __libc_start_main +
    245

    6    tmpl_mpluwp                        0x0000559c9dde4e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n  return x == y + z\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpwrb_b_5t/tmpwrb_b_5t.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b29061ccc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2905ec3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2905ec3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2905ec27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwrb_b_5t                        0x00005622b98661c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b29063b8460 __libc_start_main +
    245

    6    tmpwrb_b_5t                        0x00005622b9865e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return ((x + y +\
    \ z) == (x * y * z))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp1krechkf/tmp1krechkf.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b30caafdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b30ca7f4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b30ca7f4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b30ca7f37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1krechkf                        0x00005605acd013dc <unavailable> + 5084

    5    libc.so.6                          0x00002b30cace9460 __libc_start_main +
    245

    6    tmp1krechkf                        0x00005605acd00e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824617
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return x == y + z\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpl_mpluwp/tmpl_mpluwp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2d165cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2d162c5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2d162c5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2d162c47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl_mpluwp                        0x0000559c9dde51c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b2d167ba460 __libc_start_main +
    245

    6    tmpl_mpluwp                        0x0000559c9dde4e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824616
- exit_code: 1
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y:\
    \ 2, z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
    \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
    func any_int(x: Double, y: Double, z: Double) -> Bool {\n    return ((x != x)\
    \ || (y != y) || (z != z)) || ((x != Int(x)) || (y != Int(y)) || (z != Int(z)))\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: SyntaxError
  stderr: "/tmp/tmp3alc8am7.swift:15:52: error: cannot convert value of type 'Double'\
    \ to expected argument type 'Int'\n    return ((x != x) || (y != y) || (z != z))\
    \ || ((x != Int(x)) || (y != Int(y)) || (z != Int(z)))\n                     \
    \                              ^\n                                           \
    \        Int( )\n/tmp/tmp3alc8am7.swift:15:69: error: cannot convert value of\
    \ type 'Double' to expected argument type 'Int'\n    return ((x != x) || (y !=\
    \ y) || (z != z)) || ((x != Int(x)) || (y != Int(y)) || (z != Int(z)))\n     \
    \                                                               ^\n          \
    \                                                          Int( )\n/tmp/tmp3alc8am7.swift:15:86:\
    \ error: cannot convert value of type 'Double' to expected argument type 'Int'\n\
    \    return ((x != x) || (y != y) || (z != z)) || ((x != Int(x)) || (y != Int(y))\
    \ || (z != Int(z)))\n                                                        \
    \                             ^\n                                            \
    \                                         Int( )\n"
  stdout: ''
  timestamp: 1659824698

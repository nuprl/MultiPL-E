name: HumanEval_156_int_to_mini_roman
language: swift
prompt: "\n/// Given a positive integer, obtain its roman numeral equivalent as a\
  \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
  /// Examples:\n/// >>> int_to_mini_roman(number: 19)\n/// \"xix\"\n/// >>> int_to_mini_roman(number:\
  \ 152)\n/// \"clii\"\n/// >>> int_to_mini_roman(number: 426)\n/// \"cdxxvi\"\nfunc\
  \ int_to_mini_roman(number: Int) -> String {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(int_to_mini_roman(number: 19) == \"xix\"\
  )\nassert(int_to_mini_roman(number: 152) == \"clii\")\nassert(int_to_mini_roman(number:\
  \ 251) == \"ccli\")\nassert(int_to_mini_roman(number: 426) == \"cdxxvi\")\nassert(int_to_mini_roman(number:\
  \ 500) == \"d\")\nassert(int_to_mini_roman(number: 1) == \"i\")\nassert(int_to_mini_roman(number:\
  \ 4) == \"iv\")\nassert(int_to_mini_roman(number: 43) == \"xliii\")\nassert(int_to_mini_roman(number:\
  \ 90) == \"xc\")\nassert(int_to_mini_roman(number: 94) == \"xciv\")\nassert(int_to_mini_roman(number:\
  \ 532) == \"dxxxii\")\nassert(int_to_mini_roman(number: 900) == \"cm\")\nassert(int_to_mini_roman(number:\
  \ 994) == \"cmxciv\")\nassert(int_to_mini_roman(number: 1000) == \"m\")"
completions: ["    let roman = roman_numerals(number: number)\n    return roman.map(String.init).joined()",
  "    let roman = roman_numerals(number: number)\n    return roman.lowercased()",
  "    let roman = roman_numerals(number: number)\n    return roman.map(String.init).joinWithSeparator(\"\
    \")", "    let roman = romanNumerals(number: number)\n    return roman.map({ $0.lowercased()\
    \ }).joined()", "    let roman = romanNumerals(number: number)\n    return roman.map(String.init).joined()",
  "    let roman = mini_roman(number)\n    return roman.lowercased()", "    var roman\
    \ = \"\"\n    var num = 0\n    var digit = 0\n    var isNegative = false\n\n \
    \   if number < 0 {\n        isNegative = true\n        number = -number\n   \
    \ }\n\n    switch number {\n    case 0:\n        roman = \"0\"\n    case 1:\n\
    \        roman = \"x\"\n    case 2:\n        roman = \"c\"\n    case 3:\n    \
    \    roman = \"b\"\n    case 4:\n        roman = \"a\"\n    case 5:\n        roman\
    \ = \"d\"\n    case 6:\n        roman = \"e\"\n    case 7:\n        roman = \"\
    f\"\n    case 8:\n        roman = \"g\"\n    case 9:\n        roman = \"h\"\n\
    \    case 10:\n        roman = \"i\"\n    case 11:\n        roman = \"j\"\n  \
    \  case 12:\n        roman = \"k\"\n    case 13:\n        roman = \"l\"\n    case\
    \ 14:\n        roman = \"m\"\n    case 15:\n        roman = \"n\"\n    case 16:\n\
    \        roman = \"o\"\n    case 17:\n        roman = \"p\"\n    case 18:\n  \
    \      roman = \"q\"\n    case 19:\n        roman = \"r\"\n    case 20:\n    \
    \    roman = \"s\"\n    case 21:\n        roman = \"t\"\n    case 22:\n      \
    \  roman = \"u\"\n    case 23:\n        roman = \"v\"\n    case 24:\n        roman\
    \ = \"w\"\n    case 25:\n        roman = \"x\"\n    case 26:\n        roman =\
    \ \"y\"\n    case 27:\n        roman = \"z\"\n    case 28:\n        roman = \"\
    aa\"\n    case 29:\n        roman = \"ab\"\n    case 30:\n        roman = \"ac\"\
    \n    case 31:\n        roman = \"ad\"\n    case 32:\n        roman = \"ae\"\n\
    \    case 33:\n        roman = \"af\"\n    case 34:\n        roman = \"ag\"\n\
    \    case 35:\n        roman = \"ai\"\n    case 36:\n        roman = \"aj\"\n\
    \    case 37:\n        roman = \"ak\"\n    case 38:\n        roman = \"al\"\n\
    \    case 39:\n        roman = \"am\"\n    case 40:\n        roman = \"an\"\n\
    \    case 41:\n        roman = \"ao\"\n    case 42:\n        roman = \"ap\"\n\
    \    case 43:\n        roman = \"aq\"\n    case 44:\n        roman = \"ar\"\n\
    \    case 45:\n        roman = \"as\"\n    case 46:\n        ", "    let roman\
    \ = roman_numeral(number)\n    return roman.lowercased()", "    let roman = roman_numerals(number:\
    \ number)\n    return roman.map(String.init).joined()", "    let roman = Array(1...number).map\
    \ { roman_numeral($0) }\n    return roman.join()", "    guard number >= 1 && number\
    \ <= 1000 else {\n        return \"\"\n    }\n\n    var roman = \"\"\n    var\
    \ numeral = \"\"\n\n    for _ in 1...number {\n        numeral += String(number)\n\
    \        roman += mini_roman_to_int(numeral)\n        numeral = \"\"\n    }\n\n\
    \    return roman.lowercased()", "    let roman = romanNumerals(from: number)\n\
    \    return roman.map({ $0.lowercased() }).joined()", "    var roman = \"\"\n\
    \    var roman_numeral = \"\"\n    var roman_numeral_digits = \"\"\n    var roman_numeral_digits_length\
    \ = 0\n    var roman_numeral_digits_length2 = 0\n    var roman_numeral_digits_length3\
    \ = 0\n    var roman_numeral_digits_length4 = 0\n    var roman_numeral_digits_length5\
    \ = 0\n    var roman_numeral_digits_length6 = 0\n    var roman_numeral_digits_length7\
    \ = 0\n    var roman_numeral_digits_length8 = 0\n    var roman_numeral_digits_length9\
    \ = 0\n    var roman_numeral_digits_length10 = 0\n    var roman_numeral_digits_length11\
    \ = 0\n    var roman_numeral_digits_length12 = 0\n    var roman_numeral_digits_length13\
    \ = 0\n    var roman_numeral_digits_length14 = 0\n    var roman_numeral_digits_length15\
    \ = 0\n    var roman_numeral_digits_length16 = 0\n    var roman_numeral_digits_length17\
    \ = 0\n    var roman_numeral_digits_length18 = 0\n    var roman_numeral_digits_length19\
    \ = 0\n    var roman_numeral_digits_length20 = 0\n    var roman_numeral_digits_length21\
    \ = 0\n    var roman_numeral_digits_length22 = 0\n    var roman_numeral_digits_length23\
    \ = 0\n    var roman_numeral_digits_length24 = 0\n    var roman_numeral_digits_length25\
    \ = 0\n    var roman_numeral_digits_length26 = 0\n    var roman_numeral_digits_length27\
    \ = 0\n    var roman_numeral_digits_length28 = 0\n    var roman_numeral_digits_length29\
    \ = 0\n    var roman_numeral_digits_length30 = 0\n    var roman_numeral_digits_length31\
    \ = 0\n    var roman_numeral_digits_length32 = 0\n    var roman_numeral_digits_length33\
    \ = 0\n    var roman_numeral_digits_length34 = 0\n    var roman_numeral_digits_length35\
    \ = 0\n    var roman_numeral_digits_length36 = 0\n    var roman_numeral_digits_length37\
    \ = 0\n    var roman_numeral_digits_length38 = 0\n    var roman_numeral_digits_length39\
    \ = 0\n    var roman_numeral_digits_length40 = 0\n    var roman_numeral_digits_length41\
    \ = 0\n    var roman_numeral_digits_length42 = 0\n    var roman_numeral_digits_length43\
    \ = 0\n    var roman_numeral_digits_length44 = 0\n    var roman_numeral_digits_length",
  "    let roman = Array(1...number).map { String($0) }\n    let romanString = roman.join()\n\
    \    return romanString.lowercased()", "    var roman = \"\"\n    var remainder\
    \ = number\n    var i = 2\n    while remainder > 0 {\n        remainder, remainder\
    \ = remainder / 10, remainder % 10\n        roman += roman_digits[i]\n       \
    \ i++\n    }\n    return roman", "    let roman = int_to_roman(number)\n    return\
    \ roman.lowercased()", "    let roman = roman_numerals(number: number)\n    return\
    \ roman.map(String.init).joined()", "    var roman = \"\"\n    var roman_numeral\
    \ = \"\"\n    var roman_numeral_digits = \"\"\n    var roman_numeral_digit_count\
    \ = 0\n    var roman_numeral_digit_count_max = 0\n    var roman_numeral_digit_count_min\
    \ = 0\n    var roman_numeral_digit_count_max_min = 0\n    var roman_numeral_digit_count_max_min_index\
    \ = 0\n    var roman_numeral_digit_count_max_min_index2 = 0\n    var roman_numeral_digit_count_max_min_index3\
    \ = 0\n    var roman_numeral_digit_count_max_min_index4 = 0\n    var roman_numeral_digit_count_max_min_index5\
    \ = 0\n    var roman_numeral_digit_count_max_min_index6 = 0\n    var roman_numeral_digit_count_max_min_index7\
    \ = 0\n    var roman_numeral_digit_count_max_min_index8 = 0\n    var roman_numeral_digit_count_max_min_index9\
    \ = 0\n    var roman_numeral_digit_count_max_min_index10 = 0\n    var roman_numeral_digit_count_max_min_index11\
    \ = 0\n    var roman_numeral_digit_count_max_min_index12 = 0\n    var roman_numeral_digit_count_max_min_index13\
    \ = 0\n    var roman_numeral_digit_count_max_min_index14 = 0\n    var roman_numeral_digit_count_max_min_index15\
    \ = 0\n    var roman_numeral_digit_count_max_min_index16 = 0\n    var roman_numeral_digit_count_max_min_index17\
    \ = 0\n    var roman_numeral_digit_count_max_min_index18 = 0\n    var roman_numeral_digit_count_max_min_index19\
    \ = 0\n    var roman_numeral_digit_count_max_min_index20 = 0\n    var roman_numeral_digit_count_max_min_index21\
    \ = 0\n    var roman_numeral_digit_count_max_min_index22 = 0\n    var roman_numeral_digit_count_max_min_index23\
    \ = 0\n    var roman_numeral_digit_count_max_min_index24 = 0\n    var roman_numeral_digit_count_max_min_index25\
    \ = 0\n    var roman_numeral_digit_count_max_min_index26 = 0\n    var roman_numeral_digit_count_max_min_index27\
    \ = 0\n    var roman_numeral_digit_count_max_min_index28 = 0\n    var roman_numeral_digit_count_max_min_index29\
    \ = 0\n    var roman_numeral_digit_count_max_min_index30 = 0\n    var roman_numeral_digit_count_max_min_index31\
    \ = 0\n    var roman_numeral_digit_count_max_min_index32 = 0\n    var roman_numeral_digit_count_max_min_index33\
    \ = 0\n    var roman_numeral_digit_count_max_min_index34 = 0\n    var roman_numeral_digit_count_max_min_index35",
  "    let roman = romanNumerals(number: number)\n    return roman.map({ String($0)\
    \ }).joined()", "    let roman = roman_numeral(number)\n    return roman.lowercased()",
  "    let roman = roman_numeral(number)\n    return roman.lowercased()", "    let\
    \ roman = roman_numerals(number: number)\n    return roman.map({ $0.lowercased()\
    \ }).joined()", "    let roman = roman_numeral(number)\n    return roman.lowercased()",
  "    var roman = \"\"\n    var roman_numeral = \"\"\n    var roman_numeral_digits\
    \ = \"\"\n    var roman_numeral_digits_count = 0\n    var roman_numeral_digits_index\
    \ = 0\n    var roman_numeral_digits_index_count = 0\n    var roman_numeral_digits_index_max\
    \ = 0\n    var roman_numeral_digits_index_max_count = 0\n    var roman_numeral_digits_index_min\
    \ = 0\n    var roman_numeral_digits_index_min_count = 0\n    var roman_numeral_digits_index_min_index\
    \ = 0\n    var roman_numeral_digits_index_min_count = 0\n    var roman_numeral_digits_index_max_index\
    \ = 0\n    var roman_numeral_digits_index_max_count = 0\n    var roman_numeral_digits_index_min_index\
    \ = 0\n    var roman_numeral_digits_index_min_count = 0\n    var roman_numeral_digits_index_max_index\
    \ = 0\n    var roman_numeral_digits_index_max_count = 0\n    var roman_numeral_digits_index_min_index\
    \ = 0\n    var roman_numeral_digits_index_min_count = 0\n    var roman_numeral_digits_index_max_index\
    \ = 0\n    var roman_numeral_digits_index_max_count = 0\n    var roman_numeral_digits_index_min_index\
    \ = 0\n    var roman_numeral_digits_index_min_count = 0\n    var roman_numeral_digits_index_max_index\
    \ = 0\n    var roman_numeral_digits_index_max_count = 0\n    var roman_numeral_digits_index_min_index\
    \ = 0\n    var roman_numeral_digits_index_min_count = 0\n    var roman_numeral_digits_index_max_index\
    \ = 0\n    var roman_numeral_digits_index_max_count = 0\n    var roman_numeral_digits_index_min_index\
    \ = 0\n    var roman_numeral_digits_index_min_count = 0\n    var roman_numeral_digits_index_max_index\
    \ = 0\n    var roman_numeral_digits_index_max_count = 0\n    var roman_numeral_digits_index_min_index\
    \ = 0\n    var roman_numeral_digits_index_min_count = 0\n    var roman_numeral_digits_index_max_index\
    \ = 0\n    var roman_numeral_digits_index_max_count = 0\n    var roman_numeral_digits_index_min_index\
    \ = 0\n    var roman_numeral_digits_index_min_count = 0\n    var roman_numeral_digits_index_max_index\
    \ = 0\n    var roman_numeral_digits_index_max_count = 0\n    var roman_numeral_digits_index_min_index\
    \ = 0\n    var roman_numeral_digits_index_min_count = 0\n    var roman_numeral_digits_index_max_index\
    \ = 0\n    var roman_numeral_digits_index_max_count = 0\n    var roman_numer",
  "    let roman = int_to_roman(number)\n    return roman.lowercased()", "    let\
    \ roman = roman_numerals(number: number)\n    return roman.map(String.init).joined()",
  "    let roman = roman_numerals(number: number)\n    return roman.map(String.init).joinWithSeparator(\"\
    \")", "    let roman = MiniRoman(number)\n    return roman.lowercase()", "   \
    \ var roman = \"\"\n    var i = 0\n    for _ in 0..<number {\n        let roman_digit\
    \ = int_to_roman(digit: i)\n        if roman_digit != \"\" {\n            roman\
    \ += roman_digit\n        }\n        i += 1\n    }\n    return roman.lowercased()",
  "    let roman = Array(1...number).map { roman_numeral($0) }\n    return roman.join()",
  "    let roman = mini_roman(number)\n    return roman.lowercased()", "    let roman\
    \ = roman_numeral(number)\n    return roman.lowercased()", "    let roman = MiniRoman(number)\n\
    \    return roman.lowercaseString", "    let roman = roman_to_int(number: number)\n\
    \    let result = mini_roman_to_int(roman: roman)\n    return String(result)",
  "    let roman = Roman(number)\n    return roman.miniRoman()", "    let roman =\
    \ roman_numerals(number: number)\n    return roman.map(String.init).joined()",
  "    var roman = \"\"\n    var remainder = number\n    while remainder > 0 {\n \
    \       let remainderDigit = remainder % 10\n        roman = String(repeating:\
    \ \"m\", count: remainderDigit + 1)\n        roman = String(roman, charactersIn:\
    \ \"cdefghijklmnopqrstuvwxyz\")\n        roman = String(roman, charactersIn: \"\
    mnopqrstuvwxyz\")\n        roman = String(roman, charactersIn: \"cdefghijklmnopqrstuvwxyz\"\
    )\n        roman = String(roman, charactersIn: \"mnopqrstuvwxyz\")\n        roman\
    \ = String(roman, charactersIn: \"cdefghijklmnopqrstuvwxyz\")\n        roman =\
    \ String(roman, charactersIn: \"mnopqrstuvwxyz\")\n        roman = String(roman,\
    \ charactersIn: \"cdefghijklmnopqrstuvwxyz\")\n        roman = String(roman, charactersIn:\
    \ \"mnopqrstuvwxyz\")\n        roman = String(roman, charactersIn: \"cdefghijklmnopqrstuvwxyz\"\
    )\n        roman = String(roman, charactersIn: \"mnopqrstuvwxyz\")\n        roman\
    \ = String(roman, charactersIn: \"cdefghijklmnopqrstuvwxyz\")\n        roman =\
    \ String(roman, charactersIn: \"mnopqrstuvwxyz\")\n        roman = String(roman,\
    \ charactersIn: \"cdefghijklmnopqrstuvwxyz\")\n        roman = String(roman, charactersIn:\
    \ \"mnopqrstuvwxyz\")\n        roman = String(roman, charactersIn: \"cdefghijklmnopqrstuvwxyz\"\
    )\n        roman = String(roman, charactersIn: \"mnopqrstuvwxyz\")\n        roman\
    \ = String(roman, charactersIn: \"cdefghijklmnopqrstuvwxyz\")\n        roman =\
    \ String(roman, charactersIn: \"mnopqrstuvwxyz\")\n        roman = String(roman,\
    \ charactersIn: \"cdefghijklmnopqrstuvwxyz\")\n        roman = String(roman, charactersIn:\
    \ \"mnopqrstuvwxyz\")\n        roman = String(roman, charactersIn: \"cdefghijklmnopq",
  "    let roman = roman_numerals(number: number)\n    return roman.map(String.init).joined()",
  "    var roman = \"\"\n    var numeral = number\n    var romanDigits = \"\"\n  \
    \  var romanNumeral = \"\"\n    var romanNumeralDigits = \"\"\n    var romanNumeralDigitCount\
    \ = 0\n    var romanNumeralDigitCountMax = 0\n    var romanNumeralDigitCountMaxMax\
    \ = 0\n    var romanNumeralDigitCountMaxMin = 0\n    var romanNumeralDigitCountMin\
    \ = 0\n    var romanNumeralDigitCountMinMax = 0\n    var romanNumeralDigitCountMinMin\
    \ = 0\n    var romanNumeralDigitCountMinMinMax = 0\n    var romanNumeralDigitCountMinMinMax\
    \ = 0\n    var romanNumeralDigitCountMinMinMaxMax = 0\n    var romanNumeralDigitCountMinMinMaxMax\
    \ = 0\n    var romanNumeralDigitCountMinMinMaxMax = 0\n    var romanNumeralDigitCountMinMinMaxMax\
    \ = 0\n    var romanNumeralDigitCountMinMinMaxMax = 0\n    var romanNumeralDigitCountMinMinMaxMax\
    \ = 0\n    var romanNumeralDigitCountMinMinMaxMax = 0\n    var romanNumeralDigitCountMinMinMaxMax\
    \ = 0\n    var romanNumeralDigitCountMinMinMaxMax = 0\n    var romanNumeralDigitCountMinMinMaxMax\
    \ = 0\n    var romanNumeralDigitCountMinMinMaxMax = 0\n    var romanNumeralDigitCountMinMinMaxMax\
    \ = 0\n    var romanNumeralDigitCountMinMinMaxMax = 0\n    var romanNumeralDigitCountMinMinMaxMax\
    \ = 0\n    var romanNumeralDigitCountMinMinMaxMax = 0\n    var romanNumeralDigitCountMinMinMaxMax\
    \ = 0\n    var romanNumeralDigitCountMinMinMaxMax = 0\n    var romanNumeralDigitCountMinMinMaxMax\
    \ = 0\n    var romanNumeralDigitCountMinMinMaxMax = 0\n    var romanNumeralDigitCountMinMinMaxMax\
    \ = 0\n    var romanNumeralDigitCountMinMinMaxMax = 0\n    var romanNumeralDigitCountMinMinMaxMax\
    \ = 0\n    var romanNumeralDigitCountMinMinMaxMax = 0\n    var romanNumeralDigitCountMinMinMaxMax\
    \ = 0\n    var romanNumeralDigitCountMinMinMaxMax = 0\n    var romanNumeralDigitCountMinMinMaxMax\
    \ = 0\n    var romanNumeralDigitCountMinMinMaxMax = 0\n    var romanNumeralDigitCountMinMinMaxMax\
    \ = 0\n    var romanNumeralDigitCountMinMinMaxMax = 0\n    var romanNumeral",
  "    let roman = RomanNumerals(number: number)\n    return roman.miniRoman", " \
    \   var roman = \"\"\n    var num = 0\n    var i = 0\n    for _ in 0..<number\
    \ {\n        roman = roman + mini_roman[i]\n        num = num * 10 + i\n     \
    \   i += 1\n    }\n    return roman.lowercased()", "    var roman = \"\"\n   \
    \ var numeral = \"\"\n    var index = 0\n    var roman_numeral = \"\"\n    var\
    \ roman_numeral_length = 0\n    var roman_numeral_length_index = 0\n    var roman_numeral_length_index2\
    \ = 0\n    var roman_numeral_length_index3 = 0\n    var roman_numeral_length_index4\
    \ = 0\n    var roman_numeral_length_index5 = 0\n    var roman_numeral_length_index6\
    \ = 0\n    var roman_numeral_length_index7 = 0\n    var roman_numeral_length_index8\
    \ = 0\n    var roman_numeral_length_index9 = 0\n    var roman_numeral_length_index10\
    \ = 0\n    var roman_numeral_length_index11 = 0\n    var roman_numeral_length_index12\
    \ = 0\n    var roman_numeral_length_index13 = 0\n    var roman_numeral_length_index14\
    \ = 0\n    var roman_numeral_length_index15 = 0\n    var roman_numeral_length_index16\
    \ = 0\n    var roman_numeral_length_index17 = 0\n    var roman_numeral_length_index18\
    \ = 0\n    var roman_numeral_length_index19 = 0\n    var roman_numeral_length_index20\
    \ = 0\n    var roman_numeral_length_index21 = 0\n    var roman_numeral_length_index22\
    \ = 0\n    var roman_numeral_length_index23 = 0\n    var roman_numeral_length_index24\
    \ = 0\n    var roman_numeral_length_index25 = 0\n    var roman_numeral_length_index26\
    \ = 0\n    var roman_numeral_length_index27 = 0\n    var roman_numeral_length_index28\
    \ = 0\n    var roman_numeral_length_index29 = 0\n    var roman_numeral_length_index30\
    \ = 0\n    var roman_numeral_length_index31 = 0\n    var roman_numeral_length_index32\
    \ = 0\n    var roman_numeral_length_index33 = 0\n    var roman_numeral_length_index34\
    \ = 0\n    var roman_numeral_length_index35 = 0\n    var roman_numeral_length_index36\
    \ = 0\n    var roman_numeral_length_index37 = 0\n    var roman_numeral_length_index38\
    \ = 0\n    var roman_numeral_length_index39 = 0\n    var roman_numeral_length_index40\
    \ = 0\n    var roman_numeral_length_index41 = 0\n    var roman_numeral_length_index42\
    \ = 0\n    var roman_numeral_length_index43 = 0\n    var roman_numeral_length_index44\
    \ = 0\n    var roman_numeral_length_index45 = 0\n    var roman_numeral_length_index46\
    \ = 0\n    var roman_numeral_length_index47 = 0\n    var roman_numeral_length_index48\
    \ = 0\n    var roman_numer", "    let roman = roman_numerals(number: number)\n\
    \    return roman.map(String.init).joinWithSeparator(\"\")", "    let roman =\
    \ RomanNumeral(number: number)\n    return roman.miniRomanNumeral()", "    let\
    \ roman = mini_roman(number)\n    return roman.lowercased()", "    let roman =\
    \ roman_numerals(number: number)\n    return roman.map(String.init).joined()",
  "    let roman = int_to_roman(number)\n    return roman.lowercased()", "    let\
    \ roman = RomanNumerals(number: number)\n    return roman.roman", "    let roman\
    \ = RomanNumerals(number: number)\n    return roman.roman", "    let roman = romanNumerals(number:\
    \ number)\n    return roman.map(String.init).joined()", "    let roman = roman_numerals(number:\
    \ number)\n    return roman.map(String.init).joined()", "    let roman = MiniRoman(number)\n\
    \    return roman.lowercaseString", "    let roman = MiniRoman(number)\n    return\
    \ roman.lowercaseString", "    let roman = int_to_roman(number)\n    return roman.lowercased()",
  "    let roman = roman_numerals(number: number)\n    return roman.map(String.init).joined()",
  "    let roman = int_to_roman(number)\n    return roman.lowercased()", "    let\
    \ roman = roman_numerals(number: number)\n    return roman.map(String.init).joinWithSeparator(\"\
    \")", "    let roman = mini_roman[number]\n    return roman.lowercased()", " \
    \   let roman = mini_roman(number)\n    return roman.lowercased()", "    let roman\
    \ = romanNumerals(from: number)\n    return roman.map(String.init).joined()",
  "    let roman = roman_numerals(number: number)\n    return roman.map(String.init).joined()",
  "    let roman = roman_numeral(number)\n    return roman.lowercased()", "    var\
    \ roman = \"\"\n    var romanNum = number\n    var romanNumStr = String(romanNum)\n\
    \    var romanNumStr = romanNumStr.lowercased()\n    var romanNumStr = romanNumStr.stringByReplacingOccurrencesOfString(\"\
    \ \", withString: \"\")\n    var romanNumStr = romanNumStr.stringByReplacingOccurrencesOfString(\"\
    ,\", withString: \"\")\n    var romanNumStr = romanNumStr.stringByReplacingOccurrencesOfString(\"\
    '\", withString: \"\")\n    var romanNumStr = romanNumStr.stringByReplacingOccurrencesOfString(\"\
    \\\"\", withString: \"\")\n    var romanNumStr = romanNumStr.stringByReplacingOccurrencesOfString(\"\
    !\", withString: \"\")\n    var romanNumStr = romanNumStr.stringByReplacingOccurrencesOfString(\"\
    ?\", withString: \"\")\n    var romanNumStr = romanNumStr.stringByReplacingOccurrencesOfString(\"\
    :\", withString: \"\")\n    var romanNumStr = romanNumStr.stringByReplacingOccurrencesOfString(\"\
    ;\", withString: \"\")\n    var romanNumStr = romanNumStr.stringByReplacingOccurrencesOfString(\"\
    <\", withString: \"\")\n    var romanNumStr = romanNumStr.stringByReplacingOccurrencesOfString(\"\
    >\", withString: \"\")\n    var romanNumStr = romanNumStr.stringByReplacingOccurrencesOfString(\"\
    ?\", withString: \"\")\n    var romanNumStr = romanNumStr.stringByReplacingOccurrencesOfString(\"\
    !\", withString: \"\")\n    var romanNumStr = romanNumStr.stringByReplacingOccurrencesOfString(\"\
    ,\", withString: \"\")\n    var romanNumStr = romanNumStr.stringByReplacingOccurrencesOfString(\"\
    '\", withString: \"\")\n    var romanNumStr = romanNumStr.stringByReplacingOccurrencesOfString(\"\
    \\\"\", withString: \"\")\n    var romanNumStr = romanNumStr.stringByReplacingOccurrencesOfString(\"\
    :\", withString: \"\")\n    var romanNumStr = romanNumStr.stringByReplacingOccurrencesOfString(\"\
    ;\", withString: \"\")\n    var romanNumStr = romanNumStr.stringByReplacingOccurrencesOfString(\"\
    <\", withString: \"\")\n    var romanNumStr = romanNumStr.stringBy", "    guard\
    \ number >= 1 && number <= 1000 else {\n        return \"\"\n    }\n    var roman\
    \ = \"\"\n    var numeral = \"\"\n    var denominator = 1000\n    var remainder\
    \ = number % denominator\n    while remainder > 0 {\n        numeral += \"M\"\n\
    \        remainder = remainder - denominator\n        denominator *= 1000\n  \
    \  }\n    numeral += String(number - remainder)\n    while numeral.count < 4 {\n\
    \        numeral += \"0\"\n    }\n    numeral = numeral.reversed()\n    roman\
    \ = numeral\n    return roman", "    var roman = \"\"\n    var num = 0\n    var\
    \ i = 0\n    for _ in 0..<number {\n        roman = roman + int_to_roman(num)\n\
    \        num += 1\n    }\n    return roman.lowercased()", "    var roman = \"\"\
    \n    var num = 0\n    var lastDigit = 0\n    var lastDigitCount = 0\n    var\
    \ lastDigitCount2 = 0\n    var lastDigitCount3 = 0\n    var lastDigitCount4 =\
    \ 0\n    var lastDigitCount5 = 0\n    var lastDigitCount6 = 0\n    var lastDigitCount7\
    \ = 0\n    var lastDigitCount8 = 0\n    var lastDigitCount9 = 0\n    var lastDigitCount10\
    \ = 0\n    var lastDigitCount11 = 0\n    var lastDigitCount12 = 0\n    var lastDigitCount13\
    \ = 0\n    var lastDigitCount14 = 0\n    var lastDigitCount15 = 0\n    var lastDigitCount16\
    \ = 0\n    var lastDigitCount17 = 0\n    var lastDigitCount18 = 0\n    var lastDigitCount19\
    \ = 0\n    var lastDigitCount20 = 0\n    var lastDigitCount21 = 0\n    var lastDigitCount22\
    \ = 0\n    var lastDigitCount23 = 0\n    var lastDigitCount24 = 0\n    var lastDigitCount25\
    \ = 0\n    var lastDigitCount26 = 0\n    var lastDigitCount27 = 0\n    var lastDigitCount28\
    \ = 0\n    var lastDigitCount29 = 0\n    var lastDigitCount30 = 0\n    var lastDigitCount31\
    \ = 0\n    var lastDigitCount32 = 0\n    var lastDigitCount33 = 0\n    var lastDigitCount34\
    \ = 0\n    var lastDigitCount35 = 0\n    var lastDigitCount36 = 0\n    var lastDigitCount37\
    \ = 0\n    var lastDigitCount38 = 0\n    var lastDigitCount39 = 0\n    var lastDigitCount40\
    \ = 0\n    var lastDigitCount41 = 0\n    var lastDigitCount42 = 0\n    var lastDigitCount43\
    \ = 0\n    var lastDigitCount44 = 0\n    var lastDigitCount45 = 0\n    var lastDigitCount46\
    \ = 0\n    var lastDigitCount47 = 0\n    var lastDigitCount48 = 0\n    var lastDigitCount49\
    \ = 0\n    var lastDigitCount50 = 0\n    var lastDigitCount51 = 0\n    var lastDigitCount52\
    \ = 0\n    var lastDigitCount53 = 0\n    var lastDigitCount54 = 0\n    var lastDigitCount55\
    \ = 0\n    var lastDigitCount56 = 0\n    var lastDigitCount57 = 0\n    var lastDigitCount58\
    \ = 0\n    var lastDigitCount59 = 0\n    var lastDigitCount60 = 0\n    var lastDigitCount61\
    \ = 0\n    var lastDigitCount62 = 0\n    var lastDigitCount63 = 0\n    var lastDigitCount64\
    \ = 0\n    var lastDigitCount65 = 0\n    var lastDigitCount66 = 0\n    var lastDigitCount67\
    \ = 0\n    var lastDigitCount68 = 0\n    var lastDigitCount69 = 0\n    var lastDigitCount70\
    \ = 0\n    var lastDigitCount71 = 0\n    var last", "    let roman = romanNumerals(number:\
    \ number)\n    return roman.map({ $0.lowercased() }).joined()", "    let roman\
    \ = romanNumerals(number: number)\n    return roman.map({ String($0) }).joined()",
  "    let roman = roman_numerals(number: number)\n    return roman.map(String.init).joined()",
  "    let roman = roman_numerals(number: number)\n    return roman.map(String.init).joined()",
  "    let roman = romanNumerals(number: number)\n    return roman.map(String.init).joined()",
  "    let roman = Array(1...number).map { roman_numeral($0) }\n    return roman.join()",
  "    guard number >= 1 && number <= 1000 else {\n        return \"\"\n    }\n  \
    \  var roman = \"\"\n    var remainder = number\n    while remainder > 0 {\n \
    \       let remainderDigit = remainder % 100\n        roman = String(repeating:\
    \ \"m\", count: remainderDigit + 1)\n        roman = String(roman, count: remainderDigit\
    \ + 1)\n        remainder = remainder / 100\n    }\n    return roman.lowercased()",
  "    var roman = \"\"\n    var numeral = number\n    var remainder = 0\n    var\
    \ romanDigits = \"\"\n    var romanNumeral = \"\"\n    var romanNumeralDigits\
    \ = \"\"\n    var romanNumeralDigit = 0\n    var romanNumeralDigitCount = 0\n\
    \    var romanNumeralDigitCountMax = 0\n    var romanNumeralDigitCountMaxIndex\
    \ = 0\n    var romanNumeralDigitCountMin = 0\n    var romanNumeralDigitCountMinIndex\
    \ = 0\n    var romanNumeralDigitCountMaxIndex = 0\n    var romanNumeralDigitCountMinIndex\
    \ = 0\n    var romanNumeralDigitCountMaxIndex = 0\n    var romanNumeralDigitCountMinIndex\
    \ = 0\n    var romanNumeralDigitCountMaxIndex = 0\n    var romanNumeralDigitCountMinIndex\
    \ = 0\n    var romanNumeralDigitCountMaxIndex = 0\n    var romanNumeralDigitCountMinIndex\
    \ = 0\n    var romanNumeralDigitCountMaxIndex = 0\n    var romanNumeralDigitCountMinIndex\
    \ = 0\n    var romanNumeralDigitCountMaxIndex = 0\n    var romanNumeralDigitCountMinIndex\
    \ = 0\n    var romanNumeralDigitCountMaxIndex = 0\n    var romanNumeralDigitCountMinIndex\
    \ = 0\n    var romanNumeralDigitCountMaxIndex = 0\n    var romanNumeralDigitCountMinIndex\
    \ = 0\n    var romanNumeralDigitCountMaxIndex = 0\n    var romanNumeralDigitCountMinIndex\
    \ = 0\n    var romanNumeralDigitCountMaxIndex = 0\n    var romanNumeralDigitCountMinIndex\
    \ = 0\n    var romanNumeralDigitCountMaxIndex = 0\n    var romanNumeralDigitCountMinIndex\
    \ = 0\n    var romanNumeralDigitCountMaxIndex = 0\n    var romanNumeralDigitCountMinIndex\
    \ = 0\n    var romanNumeralDigitCountMaxIndex = 0\n    var romanNumeralDigitCountMinIndex\
    \ = 0\n    var romanNumeralDigitCountMaxIndex = 0\n    var romanNumeralDigitCountMinIndex\
    \ = 0\n    var romanNumeralDigitCountMaxIndex = 0\n    var romanNumeralDigitCountMinIndex\
    \ = 0\n    var romanNumeralDigitCountMaxIndex = 0\n    var romanNumeralDigitCountMinIndex\
    \ = 0\n    var romanNumeralDigitCountMaxIndex = 0\n    var romanNumeralDigitCountMinIndex\
    \ = 0\n    var romanNumeralDigitCountMaxIndex = 0\n    var romanNumeralDigitCountMinIndex\
    \ = 0\n    var romanNumeralDigitCountMaxIndex = 0\n    var romanNumeralDigitCountMin",
  "    let roman = roman_to_int(number: number)\n    return mini_roman_to_str(roman:\
    \ roman)", "    var roman = \"\"\n    var numeral = \"\"\n    var index = 0\n\
    \    var numerals = [String]()\n    var romans = [String]()\n\n    for _ in 0..<number\
    \ {\n        numerals.append(numerals[index])\n        romans.append(romans[index])\n\
    \        index += 1\n    }\n\n    for _ in 0..<number {\n        numeral = numerals[index]\
    \ + numeral\n        roman = roman + romans[index]\n        index += 1\n    }\n\
    \n    return roman", "    let roman = int_to_roman(number)\n    return roman.lowercased()",
  "    let roman = roman_numerals(number: number)\n    return roman.map(String.init).joined()",
  "    let roman = Array(1...number).map { roman_numeral($0) }\n    return roman.join()",
  "    var roman = \"\"\n    var num = 0\n    var index = 0\n    var romanDigits =\
    \ [String]()\n    var romanDigitIndex = 0\n    var romanDigitCount = 0\n    var\
    \ romanDigitCountMax = ROMAN_DIGITS.count\n    var romanDigitCountMin = 0\n  \
    \  var romanDigitCountMaxMinusOne = 0\n    var romanDigitCountMinusOne = 0\n \
    \   var romanDigitCountMinusTwo = 0\n    var romanDigitCountMinusThree = 0\n \
    \   var romanDigitCountMinusFour = 0\n    var romanDigitCountMinusFive = 0\n \
    \   var romanDigitCountMinusSix = 0\n    var romanDigitCountMinusSeven = 0\n \
    \   var romanDigitCountMinusEight = 0\n    var romanDigitCountMinusNine = 0\n\
    \    var romanDigitCountMinusTen = 0\n    var romanDigitCountMinusEleven = 0\n\
    \    var romanDigitCountMinusTwelve = 0\n    var romanDigitCountMinusThirteen\
    \ = 0\n    var romanDigitCountMinusFourteen = 0\n    var romanDigitCountMinusFifteen\
    \ = 0\n    var romanDigitCountMinusSixteen = 0\n    var romanDigitCountMinusSeventeen\
    \ = 0\n    var romanDigitCountMinusEighteen = 0\n    var romanDigitCountMinusNineteen\
    \ = 0\n    var romanDigitCountMinusTwenty = 0\n    var romanDigitCountMinusTwentyOne\
    \ = 0\n    var romanDigitCountMinusTwentyTwo = 0\n    var romanDigitCountMinusTwentyThree\
    \ = 0\n    var romanDigitCountMinusTwentyFour = 0\n    var romanDigitCountMinusTwentyFive\
    \ = 0\n    var romanDigitCountMinusTwentySix = 0\n    var romanDigitCountMinusTwentySeven\
    \ = 0\n    var romanDigitCountMinusTwentyEight = 0\n    var romanDigitCountMinusTwentyNine\
    \ = 0\n    var romanDigitCountMinusTwentyTen = 0\n    var romanDigitCountMinusTwentyEleven\
    \ = 0\n    var romanDigitCountMinusTwentyTwelve = 0\n    var romanDigitCountMinusTwentyThirteen\
    \ = 0\n    var romanDigitCountMinusTwentyFourteen = 0\n    var romanDigitCountMinusTwentyFifteen\
    \ = 0\n    var romanDigitCountMinusTwentySixteen = 0", "    let roman = MiniRoman(number)\n\
    \    return roman.lowercase()", "    var roman = \"\"\n    var romanNum = number\n\
    \    var romanNumStr = String(romanNum)\n    var romanNumStr = romanNumStr.lowercased()\n\
    \    var romanNumStr = romanNumStr.stringByReplacingOccurrencesOfString(\"0\"\
    , withString: \"\")\n    var romanNumStr = romanNumStr.stringByReplacingOccurrencesOfString(\"\
    1\", withString: \"i\")\n    var romanNumStr = romanNumStr.stringByReplacingOccurrencesOfString(\"\
    2\", withString: \"ii\")\n    var romanNumStr = romanNumStr.stringByReplacingOccurrencesOfString(\"\
    3\", withString: \"iii\")\n    var romanNumStr = romanNumStr.stringByReplacingOccurrencesOfString(\"\
    4\", withString: \"iv\")\n    var romanNumStr = romanNumStr.stringByReplacingOccurrencesOfString(\"\
    5\", withString: \"v\")\n    var romanNumStr = romanNumStr.stringByReplacingOccurrencesOfString(\"\
    6\", withString: \"vi\")\n    var romanNumStr = romanNumStr.stringByReplacingOccurrencesOfString(\"\
    7\", withString: \"vii\")\n    var romanNumStr = romanNumStr.stringByReplacingOccurrencesOfString(\"\
    8\", withString: \"viii\")\n    var romanNumStr = romanNumStr.stringByReplacingOccurrencesOfString(\"\
    9\", withString: \"ix\")\n    var romanNumStr = romanNumStr.stringByReplacingOccurrencesOfString(\"\
    10\", withString: \"x\")\n    var romanNumStr = romanNumStr.stringByReplacingOccurrencesOfString(\"\
    11\", withString: \"xi\")\n    var romanNumStr = romanNumStr.stringByReplacingOccurrencesOfString(\"\
    12\", withString: \"xii\")\n    var romanNumStr = romanNumStr.stringByReplacingOccurrencesOfString(\"\
    13\", withString: \"xiii\")\n    var romanNumStr = romanNumStr.stringByReplacingOccurrencesOfString(\"\
    14\", withString: \"xiv\")\n    var romanNumStr = romanNumStr.stringByReplacingOccurrencesOfString(\"\
    15\", withString: \"xvi\")\n    var romanNumStr = romanNumStr.stringByReplacingOccurrencesOfString(\"\
    16\", withString: \"xvii\")\n    var romanNumStr = romanNumStr.stringBy", "  \
    \  let roman = romanNumerals(number: number)\n    return roman.map(String.init).joined()",
  "    let roman = int_to_roman(number)\n    return roman.lowercased()", "    let\
    \ roman = MiniRoman(number)\n    return roman.lowercaseString", "    let roman\
    \ = roman_numerals(number: number)\n    return roman.map(String.init).joined()",
  "    let roman = romans[number]\n    return roman.lowercased()", "    let roman\
    \ = roman_numerals(number: number)\n    return roman.map(String.init).joined()",
  "    guard number >= 1 && number <= 1000 else {\n        return \"\"\n    }\n  \
    \  var roman = \"\"\n    var remainder = number % 100\n    var num = 0\n    while\
    \ remainder > 0 {\n        remainder = remainder / 10\n        num += 1\n    }\n\
    \    for _ in 0..num {\n        roman += \"M\"\n    }\n    guard num > 0 else\
    \ {\n        return roman\n    }\n    var remainder = number % 10\n    for _ in\
    \ 0..num-1 {\n        roman += \"CM\"\n    }\n    guard num > 1 else {\n     \
    \   return roman\n    }\n    remainder = number % 10\n    for _ in 0..num-1 {\n\
    \        roman += \"D\"\n    }\n    guard num > 1 else {\n        return roman\n\
    \    }\n    remainder = number % 10\n    for _ in 0..num-1 {\n        roman +=\
    \ \"CD\"\n    }\n    guard num > 1 else {\n        return roman\n    }\n    remainder\
    \ = number % 10\n    for _ in 0..num-1 {\n        roman += \"C\"\n    }\n    guard\
    \ num > 1 else {\n        return roman\n    }\n    remainder = number % 10\n \
    \   for _ in 0..num-1 {\n        roman += \"XC\"\n    }\n    guard num > 1 else\
    \ {\n        return roman\n    }\n    remainder = number % 10\n    for _ in 0..num-1\
    \ {\n        roman += \"L\"\n    }\n    guard num > 1 else {\n        return roman\n\
    \    }\n    remainder = number % 10\n    for _ in 0..num-1 {\n        roman +=\
    \ \"XL\"\n    }\n    guard num > 1 else {\n        return roman\n    }\n    remainder\
    \ = number % 10\n    for _ in 0..num-1 {\n        roman += \"X\"\n    }\n    guard\
    \ num > 1 else {\n        return roman\n    }\n    remainder = number % 10\n \
    \   for _ in 0..num-1 {\n        roman += \"IX\"\n    }\n    guard num > 1 else\
    \ {\n        return roman\n    }\n    remainder = number % 10\n    for _ in 0..num-1\
    \ {\n        roman += \"V\"\n    }\n    guard num > 1 else {\n        return roman\n\
    \    }\n    remainder = number % 10\n    for _ in 0..num-1 {\n        roman +=\
    \ \"IV\"\n    }\n    guard num > 1 else {\n        return roman\n    }\n    remainder\
    \ = number % 10\n    for _ in 0..num-1 {\n        roman += \"I\"\n    }", "  \
    \  let roman = romans[number]\n    if roman == nil {\n        return \"\"\n  \
    \  }\n    return roman!", "    let roman = roman_numerals(number: number)\n  \
    \  return roman.map(String.init).joinWithSeparator(\"\")", "    let roman = roman_numerals(number:\
    \ number)\n    return roman.map(String.init).joined()", "    let roman = romanNumerals(number:\
    \ number)\n    return roman.map({ $0.lowercased() }).joined()", "    let roman\
    \ = roman_to_int(number: number)\n    let mini = mini_to_int(roman: roman)\n \
    \   return mini_to_mini_roman(mini: mini)", "    let roman = RomanNumeral(number)\n\
    \    return roman.miniRomanNumeral()", "    let roman = roman_numerals(number:\
    \ number)\n    return roman.map({ $0.lowercased() }).joined()", "    guard number\
    \ >= 1 && number <= 1000 else {\n        return \"\"\n    }\n    let roman = StringBuilder()\n\
    \    var num: Int = 0\n    var remainder: Int = 0\n    while number > 0 {\n  \
    \      remainder = number % 10\n        roman.append(mini_roman_map[remainder])\n\
    \        number /= 10\n    }\n    roman.append(mini_roman_map[remainder])\n  \
    \  return roman.string", "    let roman = roman_numerals(number: number)\n   \
    \ return roman.map({ $0.lowercased() }).joined()", "    let roman = roman_numerals(number:\
    \ number)\n    return roman.map(String.init).joined()", "    let roman = Array(1...number).map\
    \ { roman_numeral($0) }\n    return roman.join()", "    let roman = int_to_roman(number)\n\
    \    return roman.lowercased()", "    let roman = roman_numeral_to_roman(number)\n\
    \    return roman.lowercased()", "    let roman = StringBuilder()\n    let num:\
    \ Int = number\n    let numDigits = Int(log10(Double(num))) + 1\n    let numMod\
    \ = num % 10\n    let numDiv10 = num / 10\n    let numDiv100 = num / 100\n   \
    \ let numDiv1000 = (num / 1000) % 10\n    let numDiv10000 = (num / 100000) % 10\n\
    \    let numDiv100000 = (num / 1000000) % 10\n    let numDiv1000000 = (num / 10000000)\
    \ % 10\n    let numDiv10000000 = (num / 100000000) % 10\n    let numDiv100000000\
    \ = (num / 1000000000) % 10\n    let numDiv1000000000 = (num / 10000000000) %\
    \ 10\n    let numDiv10000000000 = (num / 100000000000) % 10\n    let numDiv100000000000\
    \ = (num / 1000000000000) % 10\n    let numDiv1000000000000 = (num / 10000000000000)\
    \ % 10\n    let numDiv10000000000000 = (num / 100000000000000) % 10\n    let numDiv100000000000000\
    \ = (num / 1000000000000000) % 10\n    let numDiv1000000000000000 = (num / 10000000000000000)\
    \ % 10\n    let numDiv10000000000000000 = (num / 100000000000000000) % 10\n  \
    \  let numDiv100000000000000000 = (num / 1000000000000000000) % 10\n    let numDiv1000000000000000000\
    \ = (num / 10000000000000000000) % 10\n    let numDiv10000000000000000000 = (num\
    \ / 100000000000000000000) % 10\n    let numDiv100000000000000000000 = (num /\
    \ 1000000000000000000000) % 10\n    let numDiv1000000000000000000000 = (num /\
    \ 10000000000000000000000) % 10\n    let numDiv10000000000000000000000 = (num\
    \ / 100000000000000000000000) % 10\n    let numDiv100000000000000000000000 = (num\
    \ / 1000000000000000000000000) % 10\n    let numDiv1000000000000000000000000 =\
    \ (num / 10000000000000000000000000) % 10\n    let numDiv10000000000000000000000000\
    \ = (num / 100000000000000000000000000) % 10\n    let numDiv100000000000000000000000000\
    \ = (num / 1000000000000000000000000000) % 10\n    let numDiv1000000000000000000000000000\
    \ = (num / 10000000000000000000000000000) % 10\n    let numDiv10000000000000000000000000000\
    \ = (num / 100000000000000000000000000000) % 10\n    let numDiv100000000000000000000000000000\
    \ = (num / 1000000000000000000000000000000) % 10\n    let numDiv1000000000000000000000000000000\
    \ = (num / 10000000000000000000000000000000) % 10\n    let numDiv10000000000000000000000000000000\
    \ = (num / 100000000000000000000000000000000) % 10\n    let numDiv100000000000000000000000000000000\
    \ = (num / 1000000000000000000000000000000000) % 10\n    let numDiv1000000000000000000000000000000000\
    \ = (num / 10000000000000000000000000000000000) % 10\n    let numDiv100", "  \
    \  let roman = RomanNumerals(number: number)\n    return roman.miniRomanNumeral",
  "    let roman = MiniRoman(number)\n    return roman.lowercase()", "    let roman\
    \ = roman_numerals(number: number)\n    return roman.map { $0.lowercased() }.reduce(\"\
    \", combine: +)", "    let roman = MiniRoman(number)\n    return roman.lowercaseString",
  "    var roman = \"\"\n    var numeral = \"\"\n    var index = 0\n    var numerals\
    \ = [String]()\n    var romans = [String]()\n    var romanNumerals = [String]()\n\
    \    var romanNumeralIndex = 0\n    var romanNumeralIndex2 = 0\n    var romanNumeralIndex3\
    \ = 0\n    var romanNumeralIndex4 = 0\n    var romanNumeralIndex5 = 0\n    var\
    \ romanNumeralIndex6 = 0\n    var romanNumeralIndex7 = 0\n    var romanNumeralIndex8\
    \ = 0\n    var romanNumeralIndex9 = 0\n    var romanNumeralIndex10 = 0\n    var\
    \ romanNumeralIndex11 = 0\n    var romanNumeralIndex12 = 0\n    var romanNumeralIndex13\
    \ = 0\n    var romanNumeralIndex14 = 0\n    var romanNumeralIndex15 = 0\n    var\
    \ romanNumeralIndex16 = 0\n    var romanNumeralIndex17 = 0\n    var romanNumeralIndex18\
    \ = 0\n    var romanNumeralIndex19 = 0\n    var romanNumeralIndex20 = 0\n    var\
    \ romanNumeralIndex21 = 0\n    var romanNumeralIndex22 = 0\n    var romanNumeralIndex23\
    \ = 0\n    var romanNumeralIndex24 = 0\n    var romanNumeralIndex25 = 0\n    var\
    \ romanNumeralIndex26 = 0\n    var romanNumeralIndex27 = 0\n    var romanNumeralIndex28\
    \ = 0\n    var romanNumeralIndex29 = 0\n    var romanNumeralIndex30 = 0\n    var\
    \ romanNumeralIndex31 = 0\n    var romanNumeralIndex32 = 0\n    var romanNumeralIndex33\
    \ = 0\n    var romanNumeralIndex34 = 0\n    var romanNumeralIndex35 = 0\n    var\
    \ romanNumeralIndex36 = 0\n    var romanNumeralIndex37 = 0\n    var romanNumeralIndex38\
    \ = 0\n    var romanNumeralIndex39 = 0\n    var romanNumeralIndex40 = 0\n    var\
    \ romanNumeralIndex41 = 0\n    var romanNumeralIndex42 = 0\n    var romanNumeralIndex43\
    \ = 0\n    var romanNumeralIndex44 = 0\n    var romanNumeralIndex45 = 0\n    var\
    \ romanNumeralIndex46 = 0\n    var romanNumeralIndex47 = 0\n    var romanNumeralIndex48\
    \ = 0\n    var romanNumeralIndex49 = 0\n    var romanNumeralIndex50 = 0\n    var\
    \ romanNumeralIndex51 = 0\n    var romanNumeralIndex52 = 0\n    var romanNumeral",
  "    var roman = \"\"\n    var roman_numeral = \"\"\n    var roman_numeral_digits\
    \ = \"\"\n    var roman_numeral_digit_count = 0\n    var roman_numeral_digit_count_max\
    \ = 0\n    var roman_numeral_digit_count_min = 0\n    var roman_numeral_digit_count_max_min\
    \ = 0\n    var roman_numeral_digit_count_max_min_index = 0\n    var roman_numeral_digit_count_max_min_index2\
    \ = 0\n    var roman_numeral_digit_count_max_min_index3 = 0\n    var roman_numeral_digit_count_max_min_index4\
    \ = 0\n    var roman_numeral_digit_count_max_min_index5 = 0\n    var roman_numeral_digit_count_max_min_index6\
    \ = 0\n    var roman_numeral_digit_count_max_min_index7 = 0\n    var roman_numeral_digit_count_max_min_index8\
    \ = 0\n    var roman_numeral_digit_count_max_min_index9 = 0\n    var roman_numeral_digit_count_max_min_index10\
    \ = 0\n    var roman_numeral_digit_count_max_min_index11 = 0\n    var roman_numeral_digit_count_max_min_index12\
    \ = 0\n    var roman_numeral_digit_count_max_min_index13 = 0\n    var roman_numeral_digit_count_max_min_index14\
    \ = 0\n    var roman_numeral_digit_count_max_min_index15 = 0\n    var roman_numeral_digit_count_max_min_index16\
    \ = 0\n    var roman_numeral_digit_count_max_min_index17 = 0\n    var roman_numeral_digit_count_max_min_index18\
    \ = 0\n    var roman_numeral_digit_count_max_min_index19 = 0\n    var roman_numeral_digit_count_max_min_index20\
    \ = 0\n    var roman_numeral_digit_count_max_min_index21 = 0\n    var roman_numeral_digit_count_max_min_index22\
    \ = 0\n    var roman_numeral_digit_count_max_min_index23 = 0\n    var roman_numeral_digit_count_max_min_index24\
    \ = 0\n    var roman_numeral_digit_count_max_min_index25 = 0\n    var roman_numeral_digit_count_max_min_index26\
    \ = 0\n    var roman_numeral_digit_count_max_min_index27 = 0\n    var roman_numeral_digit_count_max_min_index28\
    \ = 0\n    var roman_numeral_digit_count_max_min_index29 = 0\n    var roman_numeral_digit_count_max_min_index30\
    \ = 0\n    var roman_numeral_digit_count_max_min_index31 = 0\n    var roman_numeral_digit_count_max_min_index32\
    \ = 0\n    var roman_numeral_digit_count_max_min_index33 = 0\n    var roman_numeral_digit_count_max_min_index34\
    \ = 0\n    var roman_numeral_digit_count_max_min_index35", "    let roman = mini_roman(number:\
    \ number)\n    return roman.lowercased()", "    var roman = \"\"\n    var i =\
    \ 0\n    var j = 0\n    var k = 0\n    var l = 0\n    var m = 0\n    var n = 0\n\
    \    var o = 0\n    var p = 0\n    var q = 0\n    var r = 0\n    var s = 0\n \
    \   var t = 0\n    var u = 0\n    var v = 0\n    var w = 0\n    var x = 0\n  \
    \  var y = 0\n    var z = 0\n    var a = 0\n    var b = 0\n    var c = 0\n   \
    \ var d = 0\n    var e = 0\n    var f = 0\n    var g = 0\n    var h = 0\n    var\
    \ i = 0\n    var j = 0\n    var k = 0\n    var l = 0\n    var m = 0\n    var n\
    \ = 0\n    var o = 0\n    var p = 0\n    var q = 0\n    var r = 0\n    var s =\
    \ 0\n    var t = 0\n    var u = 0\n    var v = 0\n    var w = 0\n    var x = 0\n\
    \    var y = 0\n    var z = 0\n    var a = 0\n    var b = 0\n    var c = 0\n \
    \   var d = 0\n    var e = 0\n    var f = 0\n    var g = 0\n    var h = 0\n  \
    \  var i = 0\n    var j = 0\n    var k = 0\n    var l = 0\n    var m = 0\n   \
    \ var n = 0\n    var o = 0\n    var p = 0\n    var q = 0\n    var r = 0\n    var\
    \ s = 0\n    var t = 0\n    var u = 0\n    var v = 0\n    var w = 0\n    var x\
    \ = 0\n    var y = 0\n    var z = 0\n    var a = 0\n    var b = 0\n    var c =\
    \ 0\n    var d = 0\n    var e = 0\n    var f = 0\n    var g = 0\n    var h = 0\n\
    \    var i = 0\n    var j = 0\n    var k = 0\n    var l = 0\n    var m = 0\n \
    \   var n = 0\n    var o = 0\n    var p = 0\n    var q = 0\n    var r = 0\n  \
    \  var s = 0\n    var t = 0\n    var u = 0\n    var v = 0\n    var w = 0\n   \
    \ var x = 0\n    var y = 0\n    var z = 0\n    var a = 0\n    var b = 0\n    var\
    \ c = 0\n    var d = 0\n    var e = 0\n    var f = 0\n    var g = 0\n    var h\
    \ = 0\n    var i = 0\n    var j = 0\n    var k = 0\n    var l = 0\n    var m =\
    \ 0\n    var n = 0\n    var o = 0\n    var p = 0\n    var q = 0\n    var r = 0\n\
    \    var s = 0\n    var t = 0\n    var u = 0\n    var v = 0\n    var w = 0\n \
    \   var x = 0\n    var y = 0\n    var z = 0\n    var a = 0\n    var b = 0\n  \
    \  var c = 0\n    var d = 0\n    var e = 0\n    var f = 0\n    var g = 0\n   \
    \ var ", "    let roman = int_to_roman(number)\n    let mini = roman.lowercased()\n\
    \    return mini", "    let roman = roman_numerals(number: number)\n    return\
    \ roman.lowercased()", "    var roman = \"\"\n    var numeral = number\n    var\
    \ index = 0\n    var numeralString = \"\"\n    var romanString = \"\"\n    var\
    \ romanNumeral = \"\"\n    var romanNumeralString = \"\"\n    var romanNumeralStringIndex\
    \ = 0\n    var romanNumeralStringIndex2 = 0\n    var romanNumeralStringIndex3\
    \ = 0\n    var romanNumeralStringIndex4 = 0\n    var romanNumeralStringIndex5\
    \ = 0\n    var romanNumeralStringIndex6 = 0\n    var romanNumeralStringIndex7\
    \ = 0\n    var romanNumeralStringIndex8 = 0\n    var romanNumeralStringIndex9\
    \ = 0\n    var romanNumeralStringIndex10 = 0\n    var romanNumeralStringIndex11\
    \ = 0\n    var romanNumeralStringIndex12 = 0\n    var romanNumeralStringIndex13\
    \ = 0\n    var romanNumeralStringIndex14 = 0\n    var romanNumeralStringIndex15\
    \ = 0\n    var romanNumeralStringIndex16 = 0\n    var romanNumeralStringIndex17\
    \ = 0\n    var romanNumeralStringIndex18 = 0\n    var romanNumeralStringIndex19\
    \ = 0\n    var romanNumeralStringIndex20 = 0\n    var romanNumeralStringIndex21\
    \ = 0\n    var romanNumeralStringIndex22 = 0\n    var romanNumeralStringIndex23\
    \ = 0\n    var romanNumeralStringIndex24 = 0\n    var romanNumeralStringIndex25\
    \ = 0\n    var romanNumeralStringIndex26 = 0\n    var romanNumeralStringIndex27\
    \ = 0\n    var romanNumeralStringIndex28 = 0\n    var romanNumeralStringIndex29\
    \ = 0\n    var romanNumeralStringIndex30 = 0\n    var romanNumeralStringIndex31\
    \ = 0\n    var romanNumeralStringIndex32 = 0\n    var romanNumeralStringIndex33\
    \ = 0\n    var romanNumeralStringIndex34 = 0\n    var romanNumeralStringIndex35\
    \ = 0\n    var romanNumeralStringIndex36 = 0\n    var romanNumeralStringIndex37\
    \ = 0\n    var romanNumeralStringIndex38 = 0\n    var romanNumeralStringIndex39\
    \ = 0\n    var romanNumeralStringIndex40 = 0\n    var romanNumeralStringIndex41\
    \ = 0\n    var romanNumeralStringIndex42 = 0\n    var romanNumeralStringIndex43\
    \ = 0\n    var romanNumeralStringIndex44 = 0\n    var romanNumeralStringIndex45\
    \ = 0\n    var romanNumeralStringIndex46 = 0\n    var romanNumeralStringIndex47\
    \ = 0\n    var ro", "    let roman = RomanNumeral(number)\n    return roman.miniRomanNumeral()",
  "    let roman = romanNumerals(from: number)\n    return roman.map(String.init).joined()",
  "    var roman = \"\"\n    var num: Int\n    var numeral: Int\n    var romanNumeral:\
    \ Int\n    var romanNumeralString: String\n    var romanNumeralStringWithSpace:\
    \ String\n    var romanNumeralStringWithSpaceWithSpace: String\n    var romanNumeralStringWithSpaceWithSpaceWithSpace:\
    \ String\n    var romanNumeralStringWithSpaceWithSpaceWithSpaceWithSpace: String\n\
    \    var romanNumeralStringWithSpaceWithSpaceWithSpaceWithSpaceWithSpace: String\n\
    \    var romanNumeralStringWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpace:\
    \ String\n    var romanNumeralStringWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpace:\
    \ String\n    var romanNumeralStringWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpace:\
    \ String\n    var romanNumeralStringWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpace:\
    \ String\n    var romanNumeralStringWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpace:\
    \ String\n    var romanNumeralStringWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpace:\
    \ String\n    var romanNumeralStringWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpace:\
    \ String\n    var romanNumeralStringWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpace:\
    \ String\n    var romanNumeralStringWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpace:\
    \ String\n    var romanNumeralStringWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpace:\
    \ String\n    var romanNumeralStringWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpace:\
    \ String\n    var romanNumeralStringWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpace:\
    \ String\n    var romanNumeralStringWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpace:\
    \ String\n    var romanNumeralStringWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpace:\
    \ String\n    var romanNumeralStringWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpaceWithSpace",
  "    var roman = \"\"\n    var roman_numeral = \"\"\n    var roman_numeral_digits\
    \ = \"\"\n    var roman_numeral_digit_count = 0\n    var roman_numeral_digit_count_max\
    \ = 0\n    var roman_numeral_digit_count_min = 0\n    var roman_numeral_digit_count_max_min\
    \ = 0\n    var roman_numeral_digit_count_max_min_index = 0\n    var roman_numeral_digit_count_max_min_index2\
    \ = 0\n    var roman_numeral_digit_count_max_min_index3 = 0\n    var roman_numeral_digit_count_max_min_index4\
    \ = 0\n    var roman_numeral_digit_count_max_min_index5 = 0\n    var roman_numeral_digit_count_max_min_index6\
    \ = 0\n    var roman_numeral_digit_count_max_min_index7 = 0\n    var roman_numeral_digit_count_max_min_index8\
    \ = 0\n    var roman_numeral_digit_count_max_min_index9 = 0\n    var roman_numeral_digit_count_max_min_index10\
    \ = 0\n    var roman_numeral_digit_count_max_min_index11 = 0\n    var roman_numeral_digit_count_max_min_index12\
    \ = 0\n    var roman_numeral_digit_count_max_min_index13 = 0\n    var roman_numeral_digit_count_max_min_index14\
    \ = 0\n    var roman_numeral_digit_count_max_min_index15 = 0\n    var roman_numeral_digit_count_max_min_index16\
    \ = 0\n    var roman_numeral_digit_count_max_min_index17 = 0\n    var roman_numeral_digit_count_max_min_index18\
    \ = 0\n    var roman_numeral_digit_count_max_min_index19 = 0\n    var roman_numeral_digit_count_max_min_index20\
    \ = 0\n    var roman_numeral_digit_count_max_min_index21 = 0\n    var roman_numeral_digit_count_max_min_index22\
    \ = 0\n    var roman_numeral_digit_count_max_min_index23 = 0\n    var roman_numeral_digit_count_max_min_index24\
    \ = 0\n    var roman_numeral_digit_count_max_min_index25 = 0\n    var roman_numeral_digit_count_max_min_index26\
    \ = 0\n    var roman_numeral_digit_count_max_min_index27 = 0\n    var roman_numeral_digit_count_max_min_index28\
    \ = 0\n    var roman_numeral_digit_count_max_min_index29 = 0\n    var roman_numeral_digit_count_max_min_index30\
    \ = 0\n    var roman_numeral_digit_count_max_min_index31 = 0\n    var roman_numeral_digit_count_max_min_index32\
    \ = 0\n    var roman_numeral_digit_count_max_min_index33 = 0\n    var roman_numeral_digit_count_max_min_index34\
    \ = 0\n    var roman_numeral_digit_count_max_min_index35", "    var roman = \"\
    \"\n    var num: Int\n    var i: Int\n    var j: Int\n    var k: Int\n    var\
    \ l: Int\n    var m: Int\n    var n: Int\n    var o: Int\n    var p: Int\n   \
    \ var q: Int\n    var r: Int\n    var s: Int\n    var t: Int\n    var u: Int\n\
    \    var v: Int\n    var w: Int\n    var x: Int\n    var y: Int\n    var z: Int\n\
    \    var a: Int\n    var b: Int\n    var c: Int\n    var d: Int\n    var e: Int\n\
    \    var f: Int\n    var g: Int\n    var h: Int\n    var i: Int\n    var j: Int\n\
    \    var k: Int\n    var l: Int\n    var m: Int\n    var n: Int\n    var o: Int\n\
    \    var p: Int\n    var q: Int\n    var r: Int\n    var s: Int\n    var t: Int\n\
    \    var u: Int\n    var v: Int\n    var w: Int\n    var x: Int\n    var y: Int\n\
    \    var z: Int\n    var a: Int\n    var b: Int\n    var c: Int\n    var d: Int\n\
    \    var e: Int\n    var f: Int\n    var g: Int\n    var h: Int\n    var i: Int\n\
    \    var j: Int\n    var k: Int\n    var l: Int\n    var m: Int\n    var n: Int\n\
    \    var o: Int\n    var p: Int\n    var q: Int\n    var r: Int\n    var s: Int\n\
    \    var t: Int\n    var u: Int\n    var v: Int\n    var w: Int\n    var x: Int\n\
    \    var y: Int\n    var z: Int\n    var a: Int\n    var b: Int\n    var c: Int\n\
    \    var d: Int\n    var e: Int\n    var f: Int\n    var g: Int\n    var h: Int\n\
    \    var i: Int\n    var j: Int\n    var k: Int\n    var l: Int\n    var m: Int\n\
    \    var n: Int\n    var o: Int\n    var p: Int\n    var q: Int\n    var r: Int\n\
    \    var s: Int\n    var t: Int\n    var u: Int\n    var v: Int\n    var w: Int\n\
    \    var x: Int\n    var y: Int\n    var z: Int\n    var a: Int\n    var b: Int\n\
    \    var c: Int\n    var d: Int\n    var e: Int\n    var f: Int\n    var g: Int\n\
    \    var h: Int\n    var i: Int\n    var j: Int\n    var k: Int\n    var l: Int\n\
    \    var m: Int\n    var n: Int\n    var o: Int\n    var p: Int\n    var q: Int\n\
    \    var r: Int\n    var s: Int\n    var t: Int\n    var u: Int\n    var ", " \
    \   let roman = romanNumerals(from: number)\n    return roman.map({ $0.lowercased()\
    \ }).joined()", "    let roman = roman_numerals(number: number)\n    return roman.map(String.init).joined()",
  "    let roman = int_to_roman(number)\n    return roman.lowercased()", "    let\
    \ roman = mini_roman(number)\n    return roman.lowercased()", "    let roman =\
    \ int_to_roman(number)\n    return roman.lowercased()", "    let roman = romanNumerals(number:\
    \ number)\n    return roman.map({ $0.lowercased() }).joined()", "    let roman\
    \ = StringBuilder()\n    let numToRoman = roman.mutableString()\n    let numToRomanDigits\
    \ = numToRoman.mutableString()\n    let numToRomanDigitsDigits = numToRomanDigits.mutableString()\n\
    \    let numToRomanDigitsDigitsDigits = numToRomanDigitsDigits.mutableString()\n\
    \    let numToRomanDigitsDigitsDigitsDigits = numToRomanDigitsDigitsDigits.mutableString()\n\
    \    let numToRomanDigitsDigitsDigitsDigitsDigits = numToRomanDigitsDigitsDigitsDigits.mutableString()\n\
    \    let numToRomanDigitsDigitsDigitsDigitsDigitsDigits = numToRomanDigitsDigitsDigitsDigits.mutableString()\n\
    \    let numToRomanDigitsDigitsDigitsDigitsDigitsDigits = numToRomanDigitsDigitsDigitsDigits.mutableString()\n\
    \    let numToRomanDigitsDigitsDigitsDigitsDigitsDigits = numToRomanDigitsDigitsDigits.mutableString()\n\
    \    let numToRomanDigitsDigitsDigitsDigitsDigitsDigits = numToRomanDigitsDigitsDigits.mutableString()\n\
    \    let numToRomanDigitsDigitsDigitsDigitsDigitsDigits = numToRomanDigitsDigitsDigits.mutableString()\n\
    \    let numToRomanDigitsDigitsDigitsDigitsDigitsDigits = numToRomanDigitsDigitsDigits.mutableString()\n\
    \    let numToRomanDigitsDigitsDigitsDigitsDigitsDigits = numToRomanDigitsDigitsDigits.mutableString()\n\
    \    let numToRomanDigitsDigitsDigitsDigitsDigitsDigits = numToRomanDigitsDigitsDigits.mutableString()\n\
    \    let numToRomanDigitsDigitsDigitsDigitsDigitsDigits = numToRomanDigitsDigitsDigits.mutableString()\n\
    \    let numToRomanDigitsDigitsDigitsDigitsDigitsDigits = numToRomanDigitsDigitsDigits.mutableString()\n\
    \    let numToRomanDigitsDigitsDigitsDigitsDigitsDigits = numToRomanDigitsDigitsDigits.mutableString()\n\
    \    let numToRomanDigitsDigitsDigitsDigitsDigitsDigits = numToRomanDigitsDigitsDigits.mutableString()",
  "    let roman = mini_roman(number: number)\n    return roman.lowercased()", " \
    \   var roman = \"\"\n    var i = 0\n    for num in 0..<number {\n        let\
    \ roman_num = roman_nums[num]\n        if roman_num == \"\" {\n            roman_num\
    \ = \"i\"\n        }\n        roman += roman_num\n        i += 1\n    }\n    return\
    \ roman.lowercased()", "    let roman = roman_numerals(number: number)\n    return\
    \ roman.map(String.init).joined()", "    guard number >= 1 && number <= 1000 else\
    \ {\n        return \"\"\n    }\n    var roman = \"\"\n    var remainder = number\n\
    \    while remainder > 0 {\n        let remainderDigit = remainder % 10\n    \
    \    roman = String(repeating: \"m\", count: remainderDigit) + roman\n       \
    \ remainder = Int(remainder / 10)\n    }\n    return roman.lowercased()", "  \
    \  let roman = roman_numerals(number: number)\n    return roman.map({ $0.lowercased()\
    \ }).joined()", "    let roman = mini_roman(number)\n    return roman.lowercased()",
  "    let roman = int_to_roman(number)\n    return roman.lowercased()", "    let\
    \ roman = mini_roman(number)\n    return roman.lowercased()", "    let roman =\
    \ MiniRoman(number)\n    return roman.lowercaseString", "    let roman = mini_roman(number)\n\
    \    return roman.lowercased()", "    let roman = int_to_roman(number)\n    let\
    \ mini = roman.characters.map { String($0) }.joined()\n    return mini.lowercased()",
  "    let roman = Array(1...number).map { roman_numeral($0) }\n    return roman.join()",
  "    let roman = int_to_roman(number)\n    return roman.lowercased()", "    let\
    \ roman = romanNumerals(number: number)\n    return roman.map({ $0.lowercased()\
    \ }).joined()", "    var roman = \"\"\n    var num = 0\n    var romanNum = 0\n\
    \    var romanNumStr = \"\"\n    var romanNumStrLen = 0\n    var romanNumStrLen2\
    \ = 0\n    var romanNumStrLen3 = 0\n    var romanNumStrLen4 = 0\n    var romanNumStrLen5\
    \ = 0\n    var romanNumStrLen6 = 0\n    var romanNumStrLen7 = 0\n    var romanNumStrLen8\
    \ = 0\n    var romanNumStrLen9 = 0\n    var romanNumStrLen10 = 0\n    var romanNumStrLen11\
    \ = 0\n    var romanNumStrLen12 = 0\n    var romanNumStrLen13 = 0\n    var romanNumStrLen14\
    \ = 0\n    var romanNumStrLen15 = 0\n    var romanNumStrLen16 = 0\n    var romanNumStrLen17\
    \ = 0\n    var romanNumStrLen18 = 0\n    var romanNumStrLen19 = 0\n    var romanNumStrLen20\
    \ = 0\n    var romanNumStrLen21 = 0\n    var romanNumStrLen22 = 0\n    var romanNumStrLen23\
    \ = 0\n    var romanNumStrLen24 = 0\n    var romanNumStrLen25 = 0\n    var romanNumStrLen26\
    \ = 0\n    var romanNumStrLen27 = 0\n    var romanNumStrLen28 = 0\n    var romanNumStrLen29\
    \ = 0\n    var romanNumStrLen30 = 0\n    var romanNumStrLen31 = 0\n    var romanNumStrLen32\
    \ = 0\n    var romanNumStrLen33 = 0\n    var romanNumStrLen34 = 0\n    var romanNumStrLen35\
    \ = 0\n    var romanNumStrLen36 = 0\n    var romanNumStrLen37 = 0\n    var romanNumStrLen38\
    \ = 0\n    var romanNumStrLen39 = 0\n    var romanNumStrLen40 = 0\n    var romanNumStrLen41\
    \ = 0\n    var romanNumStrLen42 = 0\n    var romanNumStrLen43 = 0\n    var romanNumStrLen44\
    \ = 0\n    var romanNumStrLen45 = 0\n    var romanNumStrLen46 = 0\n    var romanNumStrLen47\
    \ = 0\n    var romanNumStrLen48 = 0\n    var romanNumStrLen49 = 0\n    var romanNumStrLen50\
    \ = 0\n    var romanNumStrLen51 = 0\n    var romanNumStrLen52 = 0\n    var romanNumStrLen53\
    \ = 0\n    var romanNumStrLen54 = 0\n    var romanNumStr", "    let roman = romanNumerals(number:\
    \ number)\n    return roman.map(String.init).joinWithSeparator(\"\")", "    var\
    \ roman = \"\"\n    var roman_numeral = \"\"\n    var roman_numeral_letter = \"\
    \"\n    var roman_numeral_letter_count = 1\n    var roman_numeral_letter_count_2\
    \ = 0\n    var roman_numeral_letter_count_3 = 0\n    var roman_numeral_letter_count_4\
    \ = 0\n    var roman_numeral_letter_count_5 = 0\n    var roman_numeral_letter_count_6\
    \ = 0\n    var roman_numeral_letter_count_7 = 0\n    var roman_numeral_letter_count_8\
    \ = 0\n    var roman_numeral_letter_count_9 = 0\n    var roman_numeral_letter_count_10\
    \ = 0\n    var roman_numeral_letter_count_11 = 0\n    var roman_numeral_letter_count_12\
    \ = 0\n    var roman_numeral_letter_count_13 = 0\n    var roman_numeral_letter_count_14\
    \ = 0\n    var roman_numeral_letter_count_15 = 0\n    var roman_numeral_letter_count_16\
    \ = 0\n    var roman_numeral_letter_count_17 = 0\n    var roman_numeral_letter_count_18\
    \ = 0\n    var roman_numeral_letter_count_19 = 0\n    var roman_numeral_letter_count_20\
    \ = 0\n    var roman_numeral_letter_count_21 = 0\n    var roman_numeral_letter_count_22\
    \ = 0\n    var roman_numeral_letter_count_23 = 0\n    var roman_numeral_letter_count_24\
    \ = 0\n    var roman_numeral_letter_count_25 = 0\n    var roman_numeral_letter_count_26\
    \ = 0\n    var roman_numeral_letter_count_27 = 0\n    var roman_numeral_letter_count_28\
    \ = 0\n    var roman_numeral_letter_count_29 = 0\n    var roman_numeral_letter_count_30\
    \ = 0\n    var roman_numeral_letter_count_31 = 0\n    var roman_numeral_letter_count_32\
    \ = 0\n    var roman_numeral_letter_count_33 = 0\n    var roman_numeral_letter_count_34\
    \ = 0\n    var roman_numeral_letter_count_35 = 0\n    var roman_numeral_letter_count_36\
    \ = 0\n    var roman_numeral_letter_count_37 = 0\n    var roman_numeral_letter_count_38\
    \ = 0\n    var roman_numeral_letter_count_39 = 0\n    var roman_numeral_letter_count_40\
    \ = 0\n    var roman_numeral_letter_count_41 = 0\n    var roman_numeral_letter_count_42\
    \ = 0\n    var roman_numeral_letter_count_43 = 0\n    var roman_numeral_letter_count_44\
    \ = 0\n    var roman_numeral_letter_count_45 = 0\n    var roman_numeral_letter_count_46\
    \ = 0\n    var roman_numeral_letter_count_47 = 0\n    var roman_numeral_letter_count_48\
    \ = 0\n    var roman_numeral_letter_count_49 = 0\n    var roman_", "    let roman\
    \ = StringBuilder()\n    let numToRoman = numToRomanTable()\n    let numToRomanTable\
    \ = numToRomanTable()\n    let numToRomanTableReversed = numToRomanTable.reversed()\n\
    \    let numToRomanTableReversedTable = numToRomanTableReversed.reversed()\n \
    \   let numToRomanTableReversedTableReversed = numToRomanTableReversedTable.reversed()\n\
    \    let numToRomanTableReversedTableReversedTable = numToRomanTableReversedTableReversed.reversed()\n\
    \    let numToRomanTableReversedTableReversedTableReversed = numToRomanTableReversedTableReversedTable.reversed()\n\
    \    let numToRomanTableReversedTableReversedTableReversedTable = numToRomanTableReversedTableReversedTableReversed.reversed()\n\
    \    let numToRomanTableReversedTableReversedTableReversedTableReversed = numToRomanTableReversedTableReversedTableReversedTable.reversed()\n\
    \    let numToRomanTableReversedTableReversedTableReversedTableReversedTable =\
    \ numToRomanTableReversedTableReversedTableReversedTableReversed.reversed()\n\
    \    let numToRomanTableReversedTableReversedTableReversedTableReversedTableReversed\
    \ = numToRomanTableReversedTableReversedTableReversedTableReversedTable.reversed()\n\
    \    let numToRomanTableReversedTableReversedTableReversedTableReversedTableReversedTable\
    \ = numToRomanTableReversedTableReversedTableReversedTableReversedTable.reversed()\n\
    \    let numToRomanTableReversedTableReversedTableReversedTableReversedTableReversedTableReversed\
    \ = numToRomanTableReversedTableReversedTableReversedTableReversedTable.reversed()\n\
    \    let numToRomanTableReversedTableReversedTableReversedTableReversedTableReversedTableReversedTable\
    \ = numToRomanTableReversedTableReversedTableReversedTableReversedTable.reversed()\n\
    \    let numToRomanTableReversedTableReversedTableReversedTableReversedTableReversedTableReversedTable\
    \ = numToRomanTableReversedTableReversedTableReversedTableReversedTable.reversed()\n\
    \    let numToRomanTableReversedTableReversedTableReversedTableReversedTableReversedTableReversedTableReversed\
    \ = numToRomanTableReversedTableReversedTableReversedTableReversedTable.reversed()\n",
  "    let roman = roman_numeral_map[number]\n    return roman.lowercased()", "  \
    \  let roman = romanNumerals(number: number)\n    return roman.map({ $0.lowercased()\
    \ }).joined()", "    let roman = mini_roman(number)\n    return roman.lowercased()",
  "    var roman = \"\"\n    var num = 0\n    var lastNum = 0\n    var lastChar =\
    \ \"\"\n    var lastCharNum = 0\n    var lastCharRoman = \"\"\n    var lastCharRomanNum\
    \ = 0\n    var lastCharRomanRoman = \"\"\n    var lastCharRomanRomanNum = 0\n\
    \    var lastCharRomanRomanRoman = \"\"\n    var lastCharRomanRomanRomanNum =\
    \ 0\n    var lastCharRomanRomanRomanRoman = \"\"\n    var lastCharRomanRomanRomanNum\
    \ = 0\n    var lastCharRomanRomanRomanRoman = \"\"\n    var lastCharRomanRomanRomanNum\
    \ = 0\n    var lastCharRomanRomanRomanRoman = \"\"\n    var lastCharRomanRomanRomanNum\
    \ = 0\n    var lastCharRomanRomanRomanRoman = \"\"\n    var lastCharRomanRomanRomanNum\
    \ = 0\n    var lastCharRomanRomanRomanRoman = \"\"\n    var lastCharRomanRomanRomanNum\
    \ = 0\n    var lastCharRomanRomanRomanRoman = \"\"\n    var lastCharRomanRomanRomanNum\
    \ = 0\n    var lastCharRomanRomanRomanRoman = \"\"\n    var lastCharRomanRomanRomanNum\
    \ = 0\n    var lastCharRomanRomanRomanRoman = \"\"\n    var lastCharRomanRomanRomanNum\
    \ = 0\n    var lastCharRomanRomanRomanRoman = \"\"\n    var lastCharRomanRomanRomanNum\
    \ = 0\n    var lastCharRomanRomanRomanRoman = \"\"\n    var lastCharRomanRomanRomanNum\
    \ = 0\n    var lastCharRomanRomanRomanRoman = \"\"\n    var lastCharRomanRomanRomanNum\
    \ = 0\n    var lastCharRomanRomanRomanRoman = \"\"\n    var lastCharRomanRomanRomanNum\
    \ = 0\n    var lastCharRomanRomanRomanRoman = \"\"\n    var lastCharRomanRomanRomanNum\
    \ = 0\n    var lastCharRomanRomanRomanRoman = \"\"\n    var lastCharRomanRomanRomanNum\
    \ = 0\n    var lastCharRomanRomanRomanRoman = \"\"\n    var lastCharRomanRomanRomanNum\
    \ = 0\n    var lastCharRomanRomanRomanRoman = \"\"\n    var lastCharRomanRomanRomanNum\
    \ = 0\n    var lastCharRomanRomanRomanRoman = \"\"\n    var lastCharRomanRomanRomanNum\
    \ = 0\n    var lastCharRoman", "    let roman = romanNumerals(number: number)\n\
    \    return roman.map({ $0.lowercased() }).joined()", "    let roman = RomanNumeral(number:\
    \ number)\n    return roman.miniRomanNumeral()", "    let roman = roman_numerals(number:\
    \ number)\n    return roman.map(String.init).joined()", "    var roman = \"\"\n\
    \    var remainder = number\n    var i = 1 // index for roman numerals\n    var\
    \ j = 0 // index for digits\n    while remainder > 0 {\n        remainder -= i\n\
    \        roman += mini_roman[i]\n        i += 1\n    }\n    return roman", " \
    \   let roman = Roman(number: number)\n    return roman.miniRomanNumeral()", " \
    \   let roman = int_to_roman(number)\n    return roman.lowercased()", "    let\
    \ roman = int_to_roman(number)\n    let mini = roman.lowercased()\n    return\
    \ mini", "    var roman = \"\"\n    var num: Int\n    var roman_num: Int\n   \
    \ var roman_num_str: String = String()\n    var roman_num_str2: String = String()\n\
    \    var roman_num_str3: String = String()\n    var roman_num_str4: String = String()\n\
    \    var roman_num_str5: String = String()\n    var roman_num_str6: String = String()\n\
    \    var roman_num_str7: String = String()\n    var roman_num_str8: String = String()\n\
    \    var roman_num_str9: String = String()\n    var roman_num_str10: String =\
    \ String()\n    var roman_num_str11: String = String()\n    var roman_num_str12:\
    \ String = String()\n    var roman_num_str13: String = String()\n    var roman_num_str14:\
    \ String = String()\n    var roman_num_str15: String = String()\n    var roman_num_str16:\
    \ String = String()\n    var roman_num_str17: String = String()\n    var roman_num_str18:\
    \ String = String()\n    var roman_num_str19: String = String()\n    var roman_num_str20:\
    \ String = String()\n    var roman_num_str21: String = String()\n    var roman_num_str22:\
    \ String = String()\n    var roman_num_str23: String = String()\n    var roman_num_str24:\
    \ String = String()\n    var roman_num_str25: String = String()\n    var roman_num_str26:\
    \ String = String()\n    var roman_num_str27: String = String()\n    var roman_num_str28:\
    \ String = String()\n    var roman_num_str29: String = String()\n    var roman_num_str30:\
    \ String = String()\n    var roman_num_str31: String = String()\n    var roman_num_str32:\
    \ String = String()\n    var roman_num_str33: String = String()\n    var roman_num_str34:\
    \ String = String()\n    var roman_num_str35: String = String()\n    var roman_num_str36:\
    \ String = String()\n    var roman_num_str37: String = String()\n    var roman_num_str38:\
    \ String = String()\n    var roman_num_str39: String = String()\n    var roman_num_str40:\
    \ String = String()\n    var roman_num_str41: String = String()\n    var roman_num_str42:\
    \ String = String()\n    var roman_num_str43: String = String()\n    var roman_num_str44:\
    \ String = String()\n    var roman_num_str45: String = String()\n    var roman_num_str",
  "    let roman = romans[number]\n    return roman.lowercased()", "    var roman\
    \ = \"\"\n    var num: Int\n\n    if number < 1 || number > 1000 {\n        return\
    \ roman\n    }\n\n    for num = 1; num <= number; num++ {\n        roman = roman.characters.last\
    \ + roman.characters.first\n    }\n\n    return roman", "    let roman = romans[number]\n\
    \    return roman.lowercased()", "    let roman = roman_numeral(number: number)\n\
    \    return roman.lowercased()", "    let roman = romans[number]\n    return roman.lowercased()",
  "    let roman = RomanNumerals(number: number)\n    return roman.romanNumeral",
  "    let roman = romanNumerals(number: number)\n    return roman.map({ $0.lowercased()\
    \ }).joined()", "    var roman = \"\"\n    var i = 0\n    for _ in 0..<number\
    \ {\n        let remainder = number % 100\n        roman += mini_roman_chars[remainder]\n\
    \        number -= remainder\n        i += 1\n    }\n    return roman", "    var\
    \ roman = \"\"\n    var roman_numeral = \"\"\n    var roman_numeral_digits = \"\
    \"\n    var roman_numeral_digit_count = 1\n    var roman_numeral_digit_count_max\
    \ = 0\n    var roman_numeral_digit_count_min = 0\n    var roman_numeral_digit_count_max_min\
    \ = 0\n    var roman_numeral_digit_count_max_min_index = 0\n    var roman_numeral_digit_count_max_min_index2\
    \ = 0\n    var roman_numeral_digit_count_max_min_index3 = 0\n    var roman_numeral_digit_count_max_min_index4\
    \ = 0\n    var roman_numeral_digit_count_max_min_index5 = 0\n    var roman_numeral_digit_count_max_min_index6\
    \ = 0\n    var roman_numeral_digit_count_max_min_index7 = 0\n    var roman_numeral_digit_count_max_min_index8\
    \ = 0\n    var roman_numeral_digit_count_max_min_index9 = 0\n    var roman_numeral_digit_count_max_min_index10\
    \ = 0\n    var roman_numeral_digit_count_max_min_index11 = 0\n    var roman_numeral_digit_count_max_min_index12\
    \ = 0\n    var roman_numeral_digit_count_max_min_index13 = 0\n    var roman_numeral_digit_count_max_min_index14\
    \ = 0\n    var roman_numeral_digit_count_max_min_index15 = 0\n    var roman_numeral_digit_count_max_min_index16\
    \ = 0\n    var roman_numeral_digit_count_max_min_index17 = 0\n    var roman_numeral_digit_count_max_min_index18\
    \ = 0\n    var roman_numeral_digit_count_max_min_index19 = 0\n    var roman_numeral_digit_count_max_min_index20\
    \ = 0\n    var roman_numeral_digit_count_max_min_index21 = 0\n    var roman_numeral_digit_count_max_min_index22\
    \ = 0\n    var roman_numeral_digit_count_max_min_index23 = 0\n    var roman_numeral_digit_count_max_min_index24\
    \ = 0\n    var roman_numeral_digit_count_max_min_index25 = 0\n    var roman_numeral_digit_count_max_min_index26\
    \ = 0\n    var roman_numeral_digit_count_max_min_index27 = 0\n    var roman_numeral_digit_count_max_min_index28\
    \ = 0\n    var roman_numeral_digit_count_max_min_index29 = 0\n    var roman_numeral_digit_count_max_min_index30\
    \ = 0\n    var roman_numeral_digit_count_max_min_index31 = 0\n    var roman_numeral_digit_count_max_min_index32\
    \ = 0\n    var roman_numeral_digit_count_max_min_index33 = 0\n    var roman_numeral_digit_count_max_min_index34\
    \ = 0\n    var roman_numeral_digit_count_max_min_index", "    let roman = StringBuilder()\n\
    \    let numToRoman = IntToRoman(number)\n    roman.append(numToRoman)\n    return\
    \ roman.string", "    let roman = roman_numerals(number: number)\n    return roman.map(String.init).joined()",
  "    let roman = mini_roman(number)\n    return roman.lowercased()", "    let roman\
    \ = int_to_roman(number)\n    return roman.lowercased()", "    let roman = romans[number]\n\
    \    return roman.lowercased()", "    let roman = roman_numeral(number)\n    return\
    \ roman.lowercased()", "    let roman = mini_roman(number)\n    return roman.lowercased()",
  "    let roman = roman_numerals(number: number)\n    return roman.map(String.init).joined()",
  "    guard number > 0 && number <= 1000 else {\n        return \"\"\n    }\n   \
    \ var roman = \"\"\n    var numeral = \"\"\n    var index = 0\n    while number\
    \ > 0 {\n        let remainder = number % 1000\n        numeral = String(remainder\
    \ / 100) + numeral\n        roman = String(remainder % 100) + roman\n        number\
    \ -= remainder\n        index++\n    }\n    return roman.lowercased() + numeral",
  "    let roman = romanNumerals(from: number)\n    return roman.joined(separator:\
    \ \"\")", "    let roman = romanNumerals(number: number)\n    return roman.map({\
    \ $0.lowercased() }).joined()", "    let roman = StringBuilder()\n    let nums\
    \ = roman.radix()\n    let numDigits = Int(log10(Double(number))) + 1\n    let\
    \ numDigitStrings = numDigits.map({ String($0) })\n    let numDigitStringsLength\
    \ = numDigitStrings.count\n    let numDigitStringsMax = numDigitStringsLength\
    \ - 1\n    let numDigitStringsMin = numDigitStringsLength - 2\n    let numDigitStringsMid\
    \ = (numDigitStringsLength - 3) / 2\n    let numDigitStringsMid2 = (numDigitStringsLength\
    \ - 4) / 2\n    let numDigitStringsMid3 = (numDigitStringsLength - 5) / 2\n  \
    \  let numDigitStringsMid4 = (numDigitStringsLength - 6) / 2\n    let numDigitStringsMid5\
    \ = (numDigitStringsLength - 7) / 2\n    let numDigitStringsMid6 = (numDigitStringsLength\
    \ - 8) / 2\n    let numDigitStringsMid7 = (numDigitStringsLength - 9) / 2\n  \
    \  let numDigitStringsMid8 = (numDigitStringsLength - 10) / 2\n    let numDigitStringsMid9\
    \ = (numDigitStringsLength - 11) / 2\n    let numDigitStringsMid10 = (numDigitStringsLength\
    \ - 12) / 2\n    let numDigitStringsMid11 = (numDigitStringsLength - 13) / 2\n\
    \    let numDigitStringsMid12 = (numDigitStringsLength - 14) / 2\n    let numDigitStringsMid13\
    \ = (numDigitStringsLength - 15) / 2\n    let numDigitStringsMid14 = (numDigitStringsLength\
    \ - 16) / 2\n    let numDigitStringsMid15 = (numDigitStringsLength - 17) / 2\n\
    \    let numDigitStringsMid16 = (numDigitStringsLength - 18) / 2\n    let numDigitStringsMid17\
    \ = (numDigitStringsLength - 19) / 2\n    let numDigitStringsMid18 = (numDigitStringsLength\
    \ - 20) / 2\n    let numDigitStringsMid19 = (numDigitStringsLength - 21) / 2\n\
    \    let numDigitStringsMid20 = (numDigitStringsLength - 22) / 2\n    let numDigitStringsMid21\
    \ = (numDigitStringsLength - 23) / 2\n    let numDigitStringsMid22 = (numDigitStringsLength\
    \ - 24) / 2\n    let numDigitStringsMid23 = (numDigitStringsLength - 25) / 2\n\
    \    let numDigitStringsMid24 = (numDigitStringsLength - 26) / 2\n    let numDigitStringsMid25\
    \ = (numDigitStringsLength - 27) / 2\n    let num", "    let roman = mini_roman(number:\
    \ number)\n    return roman.lowercased()", "    let roman = mini_roman(number)\n\
    \    return roman.lowercased()", "    let roman = StringBuilder()\n    let romanDigits\
    \ = romanDigits(number)\n    for digit in romanDigits {\n        roman.append(digit)\n\
    \    }\n    return roman.lowercased()", "    let roman = int_to_roman(number)\n\
    \    return roman.lowercased()", "    var roman = \"\"\n    var romanDigits =\
    \ \"\"\n    var romanNumeral = \"\"\n    var romanNumeralDigits = \"\"\n    var\
    \ romanNumeralDigit = 0\n    var romanNumeralDigitCount = 0\n    var romanNumeralDigitCountLimit\
    \ = 1000\n    var romanNumeralDigitCountLimitMax = 1000\n    var romanNumeralDigitCountLimitMaxMultiplier\
    \ = 1000\n    var romanNumeralDigitCountLimitMaxMultiplierMultiplier = 1000\n\
    \    var romanNumeralDigitCountLimitMaxMultiplierMultiplier = 0\n    var romanNumeralDigitCountLimitMaxMultiplierMultiplier\
    \ = 0\n    var romanNumeralDigitCountLimitMaxMultiplierMultiplier = 0\n    var\
    \ romanNumeralDigitCountLimitMaxMultiplierMultiplier = 0\n    var romanNumeralDigitCountLimitMaxMultiplierMultiplier\
    \ = 0\n    var romanNumeralDigitCountLimitMaxMultiplierMultiplier = 0\n    var\
    \ romanNumeralDigitCountLimitMaxMultiplierMultiplier = 0\n    var romanNumeralDigitCountLimitMaxMultiplierMultiplier\
    \ = 0\n    var romanNumeralDigitCountLimitMaxMultiplierMultiplier = 0\n    var\
    \ romanNumeralDigitCountLimitMaxMultiplierMultiplier = 0\n    var romanNumeralDigitCountLimitMaxMultiplierMultiplier\
    \ = 0\n    var romanNumeralDigitCountLimitMaxMultiplierMultiplier = 0\n    var\
    \ romanNumeralDigitCountLimitMaxMultiplierMultiplier = 0\n    var romanNumeralDigitCountLimitMaxMultiplierMultiplier\
    \ = 0\n    var romanNumeralDigitCountLimitMaxMultiplierMultiplier = 0\n    var\
    \ romanNumeralDigitCountLimitMaxMultiplierMultiplier = 0\n    var romanNumeralDigitCountLimitMaxMultiplierMultiplier\
    \ = 0\n    var romanNumeralDigitCountLimitMaxMultiplierMultiplier = 0\n    var\
    \ romanNumeralDigitCountLimitMaxMultiplierMultiplier = 0\n    var romanNumeralDigitCountLimitMaxMultiplierMultiplier\
    \ = 0\n    var romanNumeralDigitCountLimitMaxMultiplierMultiplier = 0\n    var\
    \ romanNumeralDigitCountLimitMaxMultiplierMultiplier = 0\n    var romanNumeralDigitCountLimitMaxMultiplierMultiplier\
    \ = 0\n    var romanNumeralDigitCountLimitMaxMultiplierMultiplier = 0\n    var\
    \ romanNumeralDigitCountLimitMaxMultiplierMultiplier = 0\n    var romanNumeralDigitCountLimitMaxMultiplierMultiplier\
    \ = 0\n    var romanNumeralDigitCountLimitMaxMultiplierMultiplier = 0\n    var\
    \ romanNumeralDigitCountLimitMaxMultiplier", "    var roman = \"\"\n    var numeral\
    \ = \"\"\n    var i = 0\n    var j = 0\n    var k = 0\n    var n = 0\n    var\
    \ roman_numeral = \"\"\n    var roman_numeral_upper = \"\"\n    var roman_numeral_lower\
    \ = \"\"\n    var roman_numeral_upper_roman = \"\"\n    var roman_numeral_lower_roman\
    \ = \"\"\n    var roman_numeral_upper_roman_upper = \"\"\n    var roman_numeral_lower_roman_upper\
    \ = \"\"\n    var roman_numeral_upper_roman_lower = \"\"\n    var roman_numeral_lower_roman_lower\
    \ = \"\"\n    var roman_numeral_upper_roman_numeral = \"\"\n    var roman_numeral_lower_roman_numeral\
    \ = \"\"\n    var roman_numeral_upper_roman_numeral_upper = \"\"\n    var roman_numeral_lower_roman_numeral_upper\
    \ = \"\"\n    var roman_numeral_upper_roman_numeral_lower = \"\"\n    var roman_numeral_lower_roman_numeral_lower\
    \ = \"\"\n    var roman_numeral_upper_roman_numeral_numeral = \"\"\n    var roman_numeral_lower_roman_numeral_numeral\
    \ = \"\"\n    var roman_numeral_upper_roman_numeral_numeral_upper = \"\"\n   \
    \ var roman_numeral_lower_roman_numeral_numeral_upper = \"\"\n    var roman_numeral_upper_roman_numeral_numeral_lower\
    \ = \"\"\n    var roman_numeral_lower_roman_numeral_numeral_lower = \"\"\n   \
    \ var roman_numeral_upper_roman_numeral_numeral_numeral = \"\"\n    var roman_numeral_lower_roman_numeral_numeral_numeral\
    \ = \"\"\n    var roman_numeral_upper_roman_numeral_numeral_numeral_upper = \"\
    \"\n    var roman_numeral_lower_roman_numeral_numeral_numeral_upper = \"\"\n \
    \   var roman_numeral_upper_roman_numeral_numeral_numeral_lower = \"\"\n    var\
    \ roman_numeral_lower_roman_numeral_numeral_numeral_lower = \"\"\n    var roman_numeral_upper_roman_numeral_numeral_numeral_numeral\
    \ = \"\"\n    var roman_numeral_lower_roman_numeral_numeral_numeral_numeral =\
    \ \"\"\n    var roman_numeral_upper_roman_numeral_numeral_numeral_numeral_upper\
    \ = \"\"\n    var roman_numeral_lower_roman_numeral_numeral_numeral_numeral_upper\
    \ = \"\"\n    var roman_numeral_upper_roman_numeral_numeral_numeral_numeral_lower\
    \ = \"\"\n    var roman_numeral_lower_roman_numeral_numeral_numeral_numeral_lower\
    \ = \"\"\n    var roman_numeral_upper_roman_numeral_numeral_numer", "    let roman\
    \ = roman_numerals(number: number)\n    return roman.map { String($0) }.joined()",
  "    let roman = romanNumerals(number: number)\n    return roman.map(String.init).joined()",
  "    let roman = roman_numerals(number: number)\n    return roman.map(String.init).joined()",
  "    var roman = \"\"\n    var roman_numeral = \"\"\n    var roman_numeral_digits\
    \ = \"\"\n    var roman_numeral_digit_count = 0\n    var roman_numeral_digit_count_max\
    \ = 0\n    var roman_numeral_digit_count_min = 0\n    var roman_numeral_digit_count_max_min\
    \ = 0\n    var roman_numeral_digit_count_max_min_index = 0\n    var roman_numeral_digit_count_max_min_index2\
    \ = 0\n    var roman_numeral_digit_count_max_min_index3 = 0\n    var roman_numeral_digit_count_max_min_index4\
    \ = 0\n    var roman_numeral_digit_count_max_min_index5 = 0\n    var roman_numeral_digit_count_max_min_index6\
    \ = 0\n    var roman_numeral_digit_count_max_min_index7 = 0\n    var roman_numeral_digit_count_max_min_index8\
    \ = 0\n    var roman_numeral_digit_count_max_min_index9 = 0\n    var roman_numeral_digit_count_max_min_index10\
    \ = 0\n    var roman_numeral_digit_count_max_min_index11 = 0\n    var roman_numeral_digit_count_max_min_index12\
    \ = 0\n    var roman_numeral_digit_count_max_min_index13 = 0\n    var roman_numeral_digit_count_max_min_index14\
    \ = 0\n    var roman_numeral_digit_count_max_min_index15 = 0\n    var roman_numeral_digit_count_max_min_index16\
    \ = 0\n    var roman_numeral_digit_count_max_min_index17 = 0\n    var roman_numeral_digit_count_max_min_index18\
    \ = 0\n    var roman_numeral_digit_count_max_min_index19 = 0\n    var roman_numeral_digit_count_max_min_index20\
    \ = 0\n    var roman_numeral_digit_count_max_min_index21 = 0\n    var roman_numeral_digit_count_max_min_index22\
    \ = 0\n    var roman_numeral_digit_count_max_min_index23 = 0\n    var roman_numeral_digit_count_max_min_index24\
    \ = 0\n    var roman_numeral_digit_count_max_min_index25 = 0\n    var roman_numeral_digit_count_max_min_index26\
    \ = 0\n    var roman_numeral_digit_count_max_min_index27 = 0\n    var roman_numeral_digit_count_max_min_index28\
    \ = 0\n    var roman_numeral_digit_count_max_min_index29 = 0\n    var roman_numeral_digit_count_max_min_index30\
    \ = 0\n    var roman_numeral_digit_count_max_min_index31 = 0\n    var roman_numeral_digit_count_max_min_index32\
    \ = 0\n    var roman_numeral_digit_count_max_min_index33 = 0\n    var roman_numeral_digit_count_max_min_index34\
    \ = 0\n    var roman_numeral_digit_count_max_min_index35", "    var roman = \"\
    \"\n    var numeral = number\n    var remainder = 0\n    var romanDigits = \"\"\
    \n    var romanNumeral = \"\"\n    var romanNumeralDigits = \"\"\n    var romanNumeralDigitCount\
    \ = 0\n\n    while numeral > 0 {\n        remainder = numeral % 10\n        romanDigits\
    \ = String(remainder)\n        romanNumeralDigits = String(numeral / 10)\n   \
    \     romanNumeralDigitCount = romanNumeralDigits.count\n        romanNumeral\
    \ = romanDigits + romanNumeralDigits\n        roman = roman + romanNumeral\n \
    \       numeral = numeral / 10\n    }\n    return roman", "    let roman = roman_numerals(number:\
    \ number)\n    return roman.map({ $0.lowercased() }).joined()", "    var roman\
    \ = \"\"\n    var roman_numeral = \"\"\n    var roman_numeral_digits = \"\"\n\
    \    var roman_numeral_digits_count = 0\n    var roman_numeral_digits_count_max\
    \ = 0\n    var roman_numeral_digits_count_min = 0\n    var roman_numeral_digits_count_min_index\
    \ = 0\n    var roman_numeral_digits_count_max_index = 0\n    var roman_numeral_digits_count_max_index\
    \ = 0\n    var roman_numeral_digits_count_min_index = 0\n    var roman_numeral_digits_count_max\
    \ = 0\n    var roman_numeral_digits_count_min = 0\n    var roman_numeral_digits_count_min_index\
    \ = 0\n    var roman_numeral_digits_count_max_index = 0\n    var roman_numeral_digits_count_max\
    \ = 0\n    var roman_numeral_digits_count_min = 0\n    var roman_numeral_digits_count_min_index\
    \ = 0\n    var roman_numeral_digits_count_max_index = 0\n    var roman_numeral_digits_count_max\
    \ = 0\n    var roman_numeral_digits_count_min = 0\n    var roman_numeral_digits_count_min_index\
    \ = 0\n    var roman_numeral_digits_count_max_index = 0\n    var roman_numeral_digits_count_max\
    \ = 0\n    var roman_numeral_digits_count_min = 0\n    var roman_numeral_digits_count_min_index\
    \ = 0\n    var roman_numeral_digits_count_max_index = 0\n    var roman_numeral_digits_count_max\
    \ = 0\n    var roman_numeral_digits_count_min = 0\n    var roman_numeral_digits_count_min_index\
    \ = 0\n    var roman_numeral_digits_count_max_index = 0\n    var roman_numeral_digits_count_max\
    \ = 0\n    var roman_numeral_digits_count_min = 0\n    var roman_numeral_digits_count_min_index\
    \ = 0\n    var roman_numeral_digits_count_max_index = 0\n    var roman_numeral_digits_count_max\
    \ = 0\n    var roman_numeral_digits_count_min = 0\n    var roman_numeral_digits_count_min_index\
    \ = 0\n    var roman_numeral_digits_count_max_index = 0\n    var roman_numeral_digits_count_max\
    \ = 0\n    var roman_numeral_digits_count_min = 0\n    var roman_numeral_digits_count_min_index\
    \ = 0\n    var roman_numeral_digits_count_max_index = 0\n    var roman_numeral_digits_count_max\
    \ = 0\n    var roman_numeral_digits_count_min = 0\n    var roman_numeral_digits_count_min_index\
    \ = 0\n    var roman_numeral_digits_count_max_index", "    let roman = roman_numerals(number:\
    \ number)\n    return roman.map(String.init).joinWithSeparator(\"\")", "    let\
    \ roman = romanNumerals(from: number)\n    return roman.map({ $0.lowercased()\
    \ }).joined()", "    let roman = roman_numerals(number: number)\n    return roman.map(String.init).joined()",
  "    let roman = MiniRoman(number)\n    return roman.lowercaseString", "    let\
    \ roman = roman_numeral_to_roman(number)\n    return roman.lowercased()", "  \
    \  let roman = int_to_roman(number)\n    let mini = roman.prefix(roman.count -\
    \ 1)\n    return mini.lowercased()", "    let roman = mini_roman(number)\n   \
    \ return roman.lowercased()", "    let roman = roman_numerals(number: number)\n\
    \    return roman.map(String.init).joined()", "    let roman = RomanNumerals(number:\
    \ number)\n    return roman.romanNumeral", "    let roman = roman_to_int(number:\
    \ number)\n    let result = mini_roman_to_int(roman: roman)\n    return result"]
stop_tokens:
- "\n}"

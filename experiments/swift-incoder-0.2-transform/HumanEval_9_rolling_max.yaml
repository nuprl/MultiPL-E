name: HumanEval_9_rolling_max
language: swift
prompt: "\n/// From a given list of integers, generate a list of rolling maximum element\
  \ found until given moment\n/// in the sequence.\n/// >>> rolling_max(numbers: [1,\
  \ 2, 3, 2, 3, 4, 2])\n/// [1, 2, 3, 3, 3, 4, 4]\nfunc rolling_max(numbers: [Int])\
  \ -> [Int] {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(rolling_max(numbers: [] as [Int]) == []\
  \ as [Int])\nassert(rolling_max(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(rolling_max(numbers:\
  \ [4, 3, 2, 1]) == [4, 4, 4, 4])\nassert(rolling_max(numbers: [3, 2, 3, 100, 3])\
  \ == [3, 3, 3, 100, 100])"
completions: ["    var max = [Int]()\n    var maxIndex = 0\n    for number in numbers\
    \ {\n        if number > max[maxIndex] {\n            max[maxIndex] = number\n\
    \            maxIndex += 1\n        }\n    }\n    return max", "    var max =\
    \ [Int]()\n    for number in numbers {\n        if number > max[0] {\n       \
    \     max = [number]\n        } else {\n            max = append(max, number)\n\
    \        }\n    }\n    return max", "    var max = [Int]()\n    var maxIndex =\
    \ 0\n    for number in numbers {\n        if number > max[maxIndex] {\n      \
    \      max[maxIndex] = number\n            maxIndex += 1\n        }\n    }\n \
    \   return max", "    var max = [Int]()\n    var maxIndex = 0\n    for number\
    \ in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max", "  \
    \  var rolling_max = [Int]()\n    var rolling_max_index = 0\n    for number in\
    \ numbers {\n        if number > rolling_max[rolling_max_index] {\n          \
    \  rolling_max[rolling_max_index] = number\n            rolling_max_index += 1\n\
    \        }\n    }\n    return rolling_max", "    var max = [Int]()\n    var maxIndex\
    \ = 0\n    for number in numbers {\n        if number > max[maxIndex] {\n    \
    \        max[maxIndex] = number\n            maxIndex += 1\n        }\n    }\n\
    \    return max", "    var max = [Int]()\n    var maxIndex = 0\n    for number\
    \ in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max", "  \
    \  var max = [Int]()\n    for number in numbers {\n        if max != nil {\n \
    \           if number > max[0] {\n                max = number\n            }\n\
    \        } else {\n            max = number\n        }\n    }\n    return max",
  "    var max = numbers[0]\n    var rolling_max = numbers\n    for number in numbers\
    \ {\n        if number > max {\n            max = number\n        } else {\n \
    \           rolling_max[rolling_max.index(of: max)!] = number\n        }\n   \
    \ }\n    return rolling_max", "    var max = [Int]()\n    var maxIndex = 0\n \
    \   for number in numbers {\n        if number > max[maxIndex] {\n           \
    \ max[maxIndex] = number\n            maxIndex += 1\n        }\n    }\n    return\
    \ max", "    var max = [Int]()\n    var maxIndex = 0\n    for number in numbers\
    \ {\n        if number > max[maxIndex] {\n            max[maxIndex] = number\n\
    \            maxIndex += 1\n        }\n    }\n    return max", "    var max =\
    \ [Int]()\n    var index = 0\n    for n in numbers {\n        if index == 0 {\n\
    \            max = n\n        } else {\n            if n > max[index] {\n    \
    \            max[index] = n\n            }\n        }\n        index++\n    }\n\
    \    return max", "    var max = [Int]()\n    var maxIndex = 0\n    for number\
    \ in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max", "  \
    \  var result = [Int]()\n    var max = 0\n    for number in numbers {\n      \
    \  if number > max {\n            max = number\n        }\n    }\n    for number\
    \ in numbers {\n        if number == max {\n            result.append(number)\n\
    \        }\n    }\n    return result", "    var rolling_max = [Int]()\n    var\
    \ rolling_max_index = 0\n    for number in numbers {\n        if number > rolling_max[rolling_max_index]\
    \ {\n            rolling_max[rolling_max_index] = number\n        }\n        rolling_max_index\
    \ += 1\n    }\n    return rolling_max", "    var max = [Int]()\n    var maxIndex\
    \ = 0\n    for number in numbers {\n        if number > max[maxIndex] {\n    \
    \        max[maxIndex] = number\n            maxIndex += 1\n        }\n    }\n\
    \    return max", "    var result = [Int]()\n    var max = 0\n    for number in\
    \ numbers {\n        if number > max {\n            max = number\n        }\n\
    \    }\n    for number in numbers {\n        if number == max {\n            result.append(max)\n\
    \        }\n    }\n    return result", "    var max = [Int]()\n    var maxIndex\
    \ = 0\n    for number in numbers {\n        if number > max[maxIndex] {\n    \
    \        max[maxIndex] = number\n            maxIndex += 1\n        }\n    }\n\
    \    return max", "    var max = [Int]()\n    var maxIndex = 0\n    for number\
    \ in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max", "  \
    \  var max = [Int]()\n    for number in numbers {\n        if number > max[0]\
    \ {\n            max = [number]\n        } else {\n            max = append(max,\
    \ number)\n        }\n    }\n    return max", "    var max = [Int]()\n    var\
    \ maxIndex = 0\n    for number in numbers {\n        if number > max[maxIndex]\
    \ {\n            max[maxIndex] = number\n            maxIndex += 1\n        }\n\
    \    }\n    return max", "    var max = [Int]()\n    for number in numbers {\n\
    \        if number > max[0] {\n            max = [number]\n        } else {\n\
    \            max = append(max, number)\n        }\n    }\n    return max", " \
    \   var max = [Int]()\n    for number in numbers {\n        if number > max[0]\
    \ {\n            max = [number]\n        } else {\n            max = append(max,\
    \ number)\n        }\n    }\n    return max", "    var max = [Int]()\n    var\
    \ maxIndex = 0\n    for number in numbers {\n        if number > max[maxIndex]\
    \ {\n            max[maxIndex] = number\n            maxIndex += 1\n        }\n\
    \    }\n    return max", "    var max = [Int]()\n    var maxIndex = 0\n    for\
    \ number in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max", "  \
    \  var result = [Int]()\n    var max = 0\n    for number in numbers {\n      \
    \  if number > max {\n            max = number\n        }\n    }\n    for number\
    \ in numbers {\n        if number > max {\n            result.append(number)\n\
    \        }\n    }\n    return result", "    var max = [Int]()\n    var maxIndex\
    \ = 0\n    for index in 0..<numbers.count {\n        if numbers[index] > max[maxIndex]\
    \ {\n            max[maxIndex] = numbers[index]\n            maxIndex = index\n\
    \        }\n    }\n    return max", "    var max = [Int]()\n    var maxIndex =\
    \ 0\n    for number in numbers {\n        if number > max[maxIndex] {\n      \
    \      max[maxIndex] = number\n            maxIndex += 1\n        }\n    }\n \
    \   return max", "    var max = [Int]()\n    var maxIndex = 0\n    for number\
    \ in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max", "  \
    \  var rolling_max = numbers[0]\n    for number in numbers {\n        if number\
    \ > rolling_max {\n            rolling_max = number\n        }\n    }\n    return\
    \ rolling_max", "    var max = [Int]()\n    var maxIndex = 0\n    for number in\
    \ numbers {\n        if number > max[maxIndex] {\n            max[maxIndex] =\
    \ number\n            maxIndex += 1\n        }\n    }\n    return max", "    var\
    \ max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n        if\
    \ number > max[maxIndex] {\n            max[maxIndex] = number\n            maxIndex\
    \ += 1\n        }\n    }\n    return max", "    var max = [Int]()\n    var maxIndex\
    \ = 0\n    for number in numbers {\n        if number > max[maxIndex] {\n    \
    \        max[maxIndex] = number\n            maxIndex += 1\n        }\n    }\n\
    \    return max", "    var max = [Int]()\n    var maxIndex = 0\n    for number\
    \ in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max", "  \
    \  var max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n    \
    \    if number > max[maxIndex] {\n            max[maxIndex] = number\n       \
    \     maxIndex += 1\n        }\n    }\n    return max", "    var max = [Int]()\n\
    \    var index = 0\n    for number in numbers {\n        if number > max[index]\
    \ {\n            max[index] = number\n        }\n        index++\n    }\n    return\
    \ max", "    var max = [Int]()\n    var maxIndex = 0\n    for number in numbers\
    \ {\n        if number > max[maxIndex] {\n            max[maxIndex] = number\n\
    \            maxIndex += 1\n        }\n    }\n    return max", "    var max =\
    \ [Int]()\n    var currentMax = numbers[0]\n    for number in numbers {\n    \
    \    if number > currentMax {\n            currentMax = number\n        }\n  \
    \  }\n    max = append(max, currentMax)\n    for number in numbers {\n       \
    \ if number > currentMax {\n            currentMax = number\n        }\n    }\n\
    \    max = append(max, currentMax)\n    return max", "    var max = [Int]()\n\
    \    var maxIndex = 0\n    for number in numbers {\n        if number > max[maxIndex]\
    \ {\n            max[maxIndex] = number\n            maxIndex += 1\n        }\n\
    \    }\n    return max", "    var max = [Int]()\n    var maxIndex = 0\n    for\
    \ number in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max", "  \
    \  var rolling_max = numbers[0]\n    for number in numbers {\n        if number\
    \ > rolling_max {\n            rolling_max = number\n        }\n    }\n    return\
    \ rolling_max", "    var max = [Int]()\n    var maxIndex = 0\n    for number in\
    \ numbers {\n        if number > max[maxIndex] {\n            max[maxIndex] =\
    \ number\n            maxIndex += 1\n        }\n    }\n    return max", "    var\
    \ max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n        if\
    \ number > max[maxIndex] {\n            max[maxIndex] = number\n            maxIndex\
    \ += 1\n        }\n    }\n    return max", "    var max = [Int]()\n    var index\
    \ = 0\n    for number in numbers {\n        if number > max[index] {\n       \
    \     max = [Int](repeating: number, count: index + 1)\n        }\n        max[index]\
    \ = number\n        index += 1\n    }\n    return max", "    var max = [Int]()\n\
    \    var maxIndex = 0\n    for number in numbers {\n        if number > max[maxIndex]\
    \ {\n            max[maxIndex] = number\n            maxIndex += 1\n        }\n\
    \    }\n    return max", "    var max = [Int]()\n    for number in numbers {\n\
    \        if max != nil {\n            if number > max[0] {\n                max\
    \ = nil\n            }\n        } else {\n            max = number\n        }\n\
    \    }\n    return max", "    var max = [Int]()\n    var maxIndex = 0\n    for\
    \ number in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max", "  \
    \  var max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n    \
    \    if number > max[maxIndex] {\n            max[maxIndex] = number\n       \
    \     maxIndex += 1\n        }\n    }\n    return max", "    var max = [Int]()\n\
    \    var index = 0\n    for number in numbers {\n        if index == 0 {\n   \
    \         max = number\n        } else {\n            if number > max[index] {\n\
    \                max = number\n            }\n        }\n        index += 1\n\
    \    }\n    return max", "    var max = numbers[0]\n    var rollingMax = [Int]()\n\
    \    for number in numbers {\n        if number > max {\n            rollingMax.append(max)\n\
    \            max = number\n        } else {\n            max = number\n      \
    \  }\n    }\n    rollingMax.append(max)\n    return rollingMax", "    var max\
    \ = [Int]()\n    var index = 0\n    for n in numbers {\n        if n > max[index]\
    \ {\n            max = [n]\n        } else {\n            max[index] = n\n   \
    \     }\n        index++\n    }\n    return max", "    var max = [Int]()\n   \
    \ var maxIndex = 0\n    for number in numbers {\n        if number > max[maxIndex]\
    \ {\n            max[maxIndex] = number\n            maxIndex += 1\n        }\n\
    \    }\n    return max", "    var max = numbers[0]\n    var maxIndex = -1\n  \
    \  var maxIndexOffset = 0\n    for index in 1..<numbers.count {\n        if numbers[index]\
    \ > max {\n            max = numbers[index]\n            maxIndex = index\n  \
    \          maxIndexOffset = 0\n        } else {\n            maxIndexOffset +=\
    \ 1\n        }\n    }\n    var result = [Int]()\n    for index in 0..<maxIndexOffset\
    \ {\n        result.append(numbers[maxIndex - index])\n    }\n    return result",
  "    var max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n    \
    \    if number > max[maxIndex] {\n            max[maxIndex] = number\n       \
    \     maxIndex += 1\n        }\n    }\n    return max", "    var result = [Int]()\n\
    \    var max = 0\n    for number in numbers {\n        if number > max {\n   \
    \         max = number\n        }\n    }\n    for number in numbers {\n      \
    \  if number == max {\n            result.append(number)\n        }\n    }\n \
    \   return result", "    var max = [Int]()\n    var maxIndex = 0\n    for index\
    \ in 0..<numbers.count {\n        if numbers[index] > max[maxIndex] {\n      \
    \      max[maxIndex] = numbers[index]\n            maxIndex = index\n        }\n\
    \    }\n    return max", "    var max = [Int]()\n    var maxIndex = 0\n    for\
    \ number in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max", "  \
    \  var max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n    \
    \    if number > max[maxIndex] {\n            max[maxIndex] = number\n       \
    \     maxIndex += 1\n        }\n    }\n    return max", "    var max = [Int]()\n\
    \    var maxIndex = 0\n    for index in 0..<numbers.count {\n        if numbers[index]\
    \ > max[maxIndex] {\n            max[maxIndex] = numbers[index]\n            maxIndex\
    \ = index\n        }\n    }\n    return max", "    var max = [Int]()\n    var\
    \ maxIndex = 0\n    for number in numbers {\n        if number > max[maxIndex]\
    \ {\n            max[maxIndex] = number\n            maxIndex += 1\n        }\n\
    \    }\n    return max", "    var max = [Int]()\n    var maxIndex = 0\n    for\
    \ number in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max", "  \
    \  var max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n    \
    \    if number > max[maxIndex] {\n            max[maxIndex] = number\n       \
    \     maxIndex += 1\n        }\n    }\n    return max", "    var result = [Int]()\n\
    \    var max = 0\n    for number in numbers {\n        if number > max {\n   \
    \         max = number\n        }\n    }\n    for number in numbers {\n      \
    \  if number == max {\n            result.append(number)\n        }\n    }\n \
    \   return result", "    var max = [Int]()\n    var maxIndex = 0\n    for number\
    \ in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max", "  \
    \  var max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n    \
    \    if number > max[maxIndex] {\n            max[maxIndex] = number\n       \
    \     maxIndex += 1\n        }\n    }\n    return max", "    var max = [Int]()\n\
    \    var maxIndex = 0\n    for number in numbers {\n        if number > max[maxIndex]\
    \ {\n            max[maxIndex] = number\n            maxIndex += 1\n        }\n\
    \    }\n    return max", "    var max = [Int]()\n    var maxIndex = 0\n    for\
    \ index in 0..<numbers.count {\n        if numbers[index] > max[maxIndex] {\n\
    \            max[maxIndex] = numbers[index]\n            maxIndex = index\n  \
    \      }\n    }\n    return max", "    var max = numbers[0]\n    var maxIndex\
    \ = 0\n    for number in numbers {\n        if number > max {\n            max\
    \ = number\n            maxIndex = numbers.indexOf(max)\n        }\n    }\n  \
    \  return numbers.suffix(maxIndex).prefix(numbers.indexOf(max))", "    var max\
    \ = [Int]()\n    var index = 0\n    for number in numbers {\n        if index\
    \ == 0 {\n            max = number\n        } else {\n            if number >\
    \ max[index] {\n                max = [Int]()\n                max[index] = number\n\
    \            }\n        }\n        index += 1\n    }\n    return max", "    var\
    \ max = [Int]()\n    var currentMax = Int.max\n    for number in numbers {\n \
    \       if number > currentMax {\n            currentMax = number\n        }\n\
    \        if number > max[0] {\n            max = number\n        }\n    }\n  \
    \  return max", "    var max = [Int]()\n    var maxIndex = 0\n    for number in\
    \ numbers {\n        if number > max[maxIndex] {\n            max[maxIndex] =\
    \ number\n            maxIndex += 1\n        }\n    }\n    return max", "    var\
    \ max = numbers[0]\n    var maxIndex = 0\n    for index in 1..<numbers.count {\n\
    \        if numbers[index] > max {\n            max = numbers[index]\n       \
    \     maxIndex = index\n        }\n    }\n    return Array(numbers[0..<maxIndex])",
  "    var max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n    \
    \    if number > max[maxIndex] {\n            max[maxIndex] = number\n       \
    \     maxIndex += 1\n        }\n    }\n    return max", "    var max = [Int]()\n\
    \    var index = 0\n    for n in numbers {\n        if index == 0 {\n        \
    \    max = n\n        } else {\n            if n > max[index] {\n            \
    \    max[index] = n\n            }\n        }\n        index += 1\n    }\n   \
    \ return max", "    var max = [Int]()\n    for number in numbers {\n        if\
    \ max != nil {\n            if number > max[0] {\n                max = nil\n\
    \            } else {\n                max = append(max, number)\n           \
    \ }\n        } else {\n            max = append(max, number)\n        }\n    }\n\
    \    return max", "    var max = [Int]()\n    var maxIndex = 0\n    for number\
    \ in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max", "  \
    \  var max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n    \
    \    if number > max[maxIndex] {\n            max[maxIndex] = number\n       \
    \     maxIndex += 1\n        }\n    }\n    return max", "    var max = [Int]()\n\
    \    var index = 0\n    for n in numbers {\n        if index == 0 {\n        \
    \    max = append(max, n)\n        } else {\n            if n > max[index] {\n\
    \                max = append(max, n)\n            }\n        }\n        index++\n\
    \    }\n    return max", "    var max = [Int]()\n    var index = 0\n    for n\
    \ in numbers {\n        if index == 0 {\n            max = n\n        } else {\n\
    \            if n > max[index] {\n                max = n\n            }\n   \
    \     }\n        index += 1\n    }\n    return max", "    var max = numbers[0]\n\
    \    var maxIndex = 0\n    for index in 1..<numbers.count {\n        if numbers[index]\
    \ > max {\n            max = numbers[index]\n            maxIndex = index\n  \
    \      }\n    }\n    return Array(numbers[0..<maxIndex])", "    var max = [Int]()\n\
    \    var maxIndex = 0\n    for number in numbers {\n        if number > max[maxIndex]\
    \ {\n            max[maxIndex] = number\n            maxIndex += 1\n        }\n\
    \    }\n    return max", "    var max = [Int]()\n    var index = 0\n    for number\
    \ in numbers {\n        if number > max[index] {\n            max[index] = number\n\
    \        }\n        index++\n    }\n    return max", "    var max = [Int]()\n\
    \    var maxIndex = 0\n    for number in numbers {\n        if number > max[maxIndex]\
    \ {\n            max[maxIndex] = number\n            maxIndex += 1\n        }\n\
    \    }\n    return max", "    var max = [Int]()\n    var maxIndex = 0\n    for\
    \ number in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max", "  \
    \  var max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n    \
    \    if number > max[maxIndex] {\n            max[maxIndex] = number\n       \
    \     maxIndex += 1\n        }\n    }\n    return max", "    var result = [Int]()\n\
    \    var max = 0\n    for number in numbers {\n        if number > max {\n   \
    \         max = number\n        }\n    }\n    for number in numbers {\n      \
    \  if number == max {\n            result.append(number)\n        }\n    }\n \
    \   return result", "    var rolling_max = numbers[0]\n    for number in numbers\
    \ {\n        if number > rolling_max {\n            rolling_max = number\n   \
    \     }\n    }\n    return rolling_max", "    var max = [Int]()\n    var maxIndex\
    \ = 0\n    for number in numbers {\n        if number > max[maxIndex] {\n    \
    \        max[maxIndex] = number\n            maxIndex += 1\n        }\n    }\n\
    \    return max", "    var max = [Int]()\n    var maxIndex = 0\n    for number\
    \ in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max", "  \
    \  var max = [Int]()\n    var index = 0\n    for number in numbers {\n       \
    \ if number > max[index] {\n            max = append(max, number)\n        }\n\
    \        index++\n    }\n    return max", "    var max = [Int]()\n    var index\
    \ = 0\n    for n in numbers {\n        if index == 0 {\n            max = n\n\
    \        } else {\n            if n > max[index] {\n                max = [n]\n\
    \            } else {\n                max[index] = n\n            }\n       \
    \ }\n        index++\n    }\n    return max", "    var max = [Int]()\n    var\
    \ maxIndex = 0\n    for number in numbers {\n        if number > max[maxIndex]\
    \ {\n            max[maxIndex] = number\n            maxIndex += 1\n        }\n\
    \    }\n    return max", "    var max = [Int]()\n    var maxIndex = 0\n    for\
    \ number in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max", "  \
    \  var max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n    \
    \    if number > max[maxIndex] {\n            max[maxIndex] = number\n       \
    \     maxIndex += 1\n        }\n    }\n    return max", "    var max = [Int]()\n\
    \    var maxIndex = 0\n    for number in numbers {\n        if number > max[maxIndex]\
    \ {\n            max[maxIndex] = number\n            maxIndex += 1\n        }\n\
    \    }\n    return max", "    var max = [Int]()\n    var maxIndex = 0\n    for\
    \ index in 0..<numbers.count {\n        if numbers[index] > max[maxIndex] {\n\
    \            max[maxIndex] = numbers[index]\n            maxIndex = index\n  \
    \      }\n    }\n    return max", "    var rolling_max = numbers[0]\n    for number\
    \ in numbers {\n        if number > rolling_max {\n            rolling_max = number\n\
    \        }\n    }\n    return rolling_max", "    var max = [Int]()\n    var maxIndex\
    \ = 0\n    for number in numbers {\n        if number > max[maxIndex] {\n    \
    \        max[maxIndex] = number\n            maxIndex += 1\n        }\n    }\n\
    \    return max", "    var rolling_max = numbers[0]\n    for number in numbers\
    \ {\n        if number > rolling_max {\n            rolling_max = number\n   \
    \     }\n    }\n    return rolling_max", "    var max = [Int]()\n    var maxIndex\
    \ = 0\n    for number in numbers {\n        if number > max[maxIndex] {\n    \
    \        max[maxIndex] = number\n            maxIndex += 1\n        }\n    }\n\
    \    return max", "    var max = [Int]()\n    var maxIndex = 0\n    for number\
    \ in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max", "  \
    \  var max = [Int]()\n    var index = 0\n    for number in numbers {\n       \
    \ if number > max[index] {\n            max = append(max, number)\n        } else\
    \ {\n            index = index + 1\n        }\n    }\n    return max", "    var\
    \ rolling_max = [Int]()\n    var rolling_max_index = 0\n    for number in numbers\
    \ {\n        if number > rolling_max[rolling_max_index] {\n            rolling_max[rolling_max_index]\
    \ = number\n        }\n        rolling_max_index += 1\n    }\n    return rolling_max",
  "    var max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n    \
    \    if number > max[maxIndex] {\n            max[maxIndex] = number\n       \
    \     maxIndex += 1\n        }\n    }\n    return max", "    var max = [Int]()\n\
    \    var maxIndex = 0\n    for number in numbers {\n        if number > max[maxIndex]\
    \ {\n            max[maxIndex] = number\n            maxIndex += 1\n        }\n\
    \    }\n    return max", "    var result = [Int]()\n    var max = 0\n    for number\
    \ in numbers {\n        if number > max {\n            max = number\n        }\n\
    \    }\n    for number in numbers {\n        if number > max {\n            result.append(number)\n\
    \        }\n    }\n    return result", "    var max = [Int]()\n    for number\
    \ in numbers {\n        if max != nil {\n            if number > max[0] {\n  \
    \              max = [number]\n            } else {\n                max = [number]\
    \ + max\n            }\n        } else {\n            max = [number]\n       \
    \ }\n    }\n    return max", "    var max = [Int]()\n    for number in numbers\
    \ {\n        if number > max[0] {\n            max = [number]\n        } else\
    \ {\n            max = append(max, number)\n        }\n    }\n    return max",
  "    var max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n    \
    \    if number > max[maxIndex] {\n            max[maxIndex] = number\n       \
    \     maxIndex += 1\n        }\n    }\n    return max", "    var max = numbers[0]\n\
    \    var rolling_max = numbers\n    for i in 1..numbers.count {\n        if numbers[i]\
    \ > max {\n            max = numbers[i]\n            rolling_max = numbers[i..<numbers.count]\n\
    \        }\n    }\n    return rolling_max", "    var rolling_max = numbers[0]\n\
    \    for i in 1..<numbers.count {\n        if numbers[i] > rolling_max {\n   \
    \         rolling_max = numbers[i]\n        }\n    }\n    return rolling_max",
  "    var rolling_max = numbers[0]\n    for number in numbers {\n        if number\
    \ > rolling_max {\n            rolling_max = number\n        }\n    }\n    return\
    \ rolling_max", "    var max = [Int]()\n    var maxIndex = 0\n    for number in\
    \ numbers {\n        if number > max[maxIndex] {\n            max[maxIndex] =\
    \ number\n            maxIndex += 1\n        }\n    }\n    return max", "    var\
    \ max = [Int]()\n    for number in numbers {\n        if number > max[0] {\n \
    \           max = [number]\n        } else {\n            max = append(max, number)\n\
    \        }\n    }\n    return max", "    var max = numbers[0]\n    var maxIndex\
    \ = 0\n    for index in 1..<numbers.count {\n        if numbers[index] > max {\n\
    \            max = numbers[index]\n            maxIndex = index\n        }\n \
    \   }\n    return Array(numbers[0..<maxIndex])", "    var max = [Int]()\n    var\
    \ maxIndex = 0\n    for number in numbers {\n        if number > max[maxIndex]\
    \ {\n            max[maxIndex] = number\n            maxIndex += 1\n        }\n\
    \    }\n    return max", "    var max = [Int]()\n    for number in numbers {\n\
    \        if number > max[0] {\n            max = [number]\n        } else {\n\
    \            max = append(max, number)\n        }\n    }\n    return max", " \
    \   var max = [Int]()\n    var index = 0\n    for n in numbers {\n        if index\
    \ == 0 {\n            max = append(max, n)\n        } else {\n            if n\
    \ > max[index] {\n                max[index] = n\n            }\n        }\n \
    \       index++\n    }\n    return max", "    var result = [Int]()\n    var max\
    \ = 0\n    for number in numbers {\n        if number > max {\n            max\
    \ = number\n        }\n    }\n    for number in numbers {\n        if number >\
    \ max {\n            result.append(number)\n        }\n    }\n    return result",
  "    var max = [Int]()\n    for number in numbers {\n        if max != nil {\n \
    \           if number > max[0] {\n                max = nil\n            }\n \
    \       }\n        if max == nil {\n            max = number\n        } else {\n\
    \            if number > max[0] {\n                max[0] = number\n         \
    \   }\n        }\n    }\n    return max", "    var max = [Int]()\n    var index\
    \ = 0\n    for number in numbers {\n        if number > max[index] {\n       \
    \     max[index] = number\n        }\n        index++\n    }\n    return max",
  "    var max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n    \
    \    if number > max[maxIndex] {\n            max[maxIndex] = number\n       \
    \     maxIndex += 1\n        }\n    }\n    return max", "    var result = [Int]()\n\
    \    var max = 0\n    for number in numbers {\n        if number > max {\n   \
    \         max = number\n        }\n    }\n    for number in numbers {\n      \
    \  if number > max {\n            result.append(number)\n        }\n    }\n  \
    \  return result", "    var max = [Int]()\n    var maxIndex = 0\n    for number\
    \ in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max", "  \
    \  var max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n    \
    \    if number > max[maxIndex] {\n            max[maxIndex] = number\n       \
    \     maxIndex += 1\n        }\n    }\n    return max", "    var max = [Int]()\n\
    \    var maxIndex = 0\n    for number in numbers {\n        if number > max[maxIndex]\
    \ {\n            max[maxIndex] = number\n            maxIndex += 1\n        }\n\
    \    }\n    return max", "    var result = [Int]()\n    var max = 0\n    for number\
    \ in numbers {\n        if number > max {\n            max = number\n        }\n\
    \    }\n    for number in numbers {\n        if number > max {\n            result.append(number)\n\
    \        }\n    }\n    return result", "    var rolling_max = numbers[0]\n   \
    \ for i in 1..<numbers.count {\n        if rolling_max < numbers[i] {\n      \
    \      rolling_max = numbers[i]\n        }\n    }\n    return rolling_max", " \
    \   var rolling_max = numbers[0]\n    for number in numbers {\n        if number\
    \ > rolling_max {\n            rolling_max = number\n        }\n    }\n    return\
    \ rolling_max", "    var max = [Int]()\n    var maxIndex = 0\n    for number in\
    \ numbers {\n        if number > max[maxIndex] {\n            max[maxIndex] =\
    \ number\n            maxIndex += 1\n        }\n    }\n    return max", "    var\
    \ max = [Int]()\n    for number in numbers {\n        if number > max[0] {\n \
    \           max = [number]\n        } else {\n            max = append(max, number)\n\
    \        }\n    }\n    return max", "    var rolling_max = [Int]()\n    var rolling_max_index\
    \ = 0\n    for number in numbers {\n        if number > rolling_max[rolling_max_index]\
    \ {\n            rolling_max[rolling_max_index] = number\n            rolling_max_index\
    \ += 1\n        }\n    }\n    return rolling_max", "    var max = [Int]()\n  \
    \  for number in numbers {\n        if max != nil {\n            if number > max[0]\
    \ {\n                max = nil\n            }\n        }\n        if max == nil\
    \ {\n            max = number\n        } else {\n            if number > max[0]\
    \ {\n                max = number\n            }\n        }\n    }\n    return\
    \ max", "    var result = [Int]()\n    var max = 0\n    for number in numbers\
    \ {\n        if number > max {\n            max = number\n        }\n    }\n \
    \   for number in numbers {\n        if number > max {\n            result.append(number)\n\
    \        }\n    }\n    return result", "    var rolling_max = numbers[0]\n   \
    \ for number in numbers {\n        if number > rolling_max {\n            rolling_max\
    \ = number\n        }\n    }\n    return rolling_max", "    var max = [Int]()\n\
    \    var maxIndex = 0\n    for index in 0..<numbers.count {\n        if numbers[index]\
    \ > max[maxIndex] {\n            max[maxIndex] = numbers[index]\n            maxIndex\
    \ = index\n        }\n    }\n    return max", "    var result = [Int]()\n    var\
    \ max = 0\n    for number in numbers {\n        if number > max {\n          \
    \  max = number\n        }\n    }\n    for number in numbers {\n        if number\
    \ == max {\n            result.append(number)\n        }\n    }\n    return result",
  "    var max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n    \
    \    if number > max[maxIndex] {\n            max[maxIndex] = number\n       \
    \     maxIndex += 1\n        }\n    }\n    return max", "    var max = [Int]()\n\
    \    var maxIndex = 0\n    for number in numbers {\n        if number > max[maxIndex]\
    \ {\n            max[maxIndex] = number\n            maxIndex += 1\n        }\n\
    \    }\n    return max", "    var max = [Int]()\n    var maxIndex = 0\n    for\
    \ number in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max", "  \
    \  var max = [Int]()\n    for number in numbers {\n        if number > max[0]\
    \ {\n            max = [number]\n        } else {\n            max = append(max,\
    \ number)\n        }\n    }\n    return max", "    var max = [Int]()\n    for\
    \ number in numbers {\n        if max != nil {\n            if number > max[0]\
    \ {\n                max = nil\n            } else {\n                max = append(max,\
    \ number)\n            }\n        } else {\n            max = number\n       \
    \ }\n    }\n    return max", "    var max = [Int]()\n    var maxIndex = 0\n  \
    \  for number in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max", "  \
    \  var rolling_max = numbers[0]\n    for number in numbers {\n        if number\
    \ > rolling_max {\n            rolling_max = number\n        }\n    }\n    return\
    \ rolling_max", "    var max = [Int]()\n    var maxIndex = 0\n    for number in\
    \ numbers {\n        if number > max[maxIndex] {\n            max[maxIndex] =\
    \ number\n            maxIndex += 1\n        }\n    }\n    return max", "    var\
    \ max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n        if\
    \ number > max[maxIndex] {\n            max[maxIndex] = number\n            maxIndex\
    \ += 1\n        }\n    }\n    return max", "    var max = [Int]()\n    var maxIndex\
    \ = 0\n    for number in numbers {\n        if number > max[maxIndex] {\n    \
    \        max[maxIndex] = number\n            maxIndex += 1\n        }\n    }\n\
    \    return max", "    var max = [Int]()\n    for number in numbers {\n      \
    \  if max != nil {\n            if number > max[0] {\n                max = [number]\n\
    \            } else {\n                max = [number] + max\n            }\n \
    \       } else {\n            max = [number]\n        }\n    }\n    return max",
  "    var max = [Int]()\n    var index = 0\n    for number in numbers {\n       \
    \ if number > max[index] {\n            max = [number]\n        } else {\n   \
    \         max = append(max, number)\n        }\n        index++\n    }\n    return\
    \ max", "    var max = [Int]()\n    var maxIndex = 0\n    for number in numbers\
    \ {\n        if number > max[maxIndex] {\n            max[maxIndex] = number\n\
    \            maxIndex += 1\n        }\n    }\n    return max", "    var max =\
    \ [Int]()\n    for number in numbers {\n        if max != nil {\n            if\
    \ number > max[0] {\n                max = [number]\n            } else {\n  \
    \              max = [number] + max\n            }\n        } else {\n       \
    \     max = [number]\n        }\n    }\n    return max", "    var max = [Int]()\n\
    \    var maxIndex = 0\n    for number in numbers {\n        if number > max[maxIndex]\
    \ {\n            max[maxIndex] = number\n            maxIndex += 1\n        }\n\
    \    }\n    return max", "    var max = [Int]()\n    var maxIndex = 0\n    for\
    \ number in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max", "  \
    \  var max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n    \
    \    if number > max[maxIndex] {\n            max[maxIndex] = number\n       \
    \     maxIndex += 1\n        }\n    }\n    return max", "    var max = [Int]()\n\
    \    var maxIndex = 0\n    for number in numbers {\n        if number > max[maxIndex]\
    \ {\n            max[maxIndex] = number\n            maxIndex += 1\n        }\n\
    \    }\n    return max", "    var result: [Int] = []\n    var max: Int = 0\n \
    \   for number in numbers {\n        if number > max {\n            max = number\n\
    \        }\n    }\n    for number in numbers {\n        if number == max {\n \
    \           result.append(max)\n        } else {\n            result.append(number)\n\
    \        }\n    }\n    return result", "    var max = [Int]()\n    var maxIndex\
    \ = 0\n    for number in numbers {\n        if number > max[maxIndex] {\n    \
    \        max[maxIndex] = number\n            maxIndex += 1\n        }\n    }\n\
    \    return max", "    var max = numbers[0]\n    var rollingMax = [Int]()\n  \
    \  for number in numbers {\n        if number > max {\n            rollingMax.append(max)\n\
    \            max = number\n        } else {\n            max = number\n      \
    \  }\n    }\n    rollingMax.append(max)\n    return rollingMax", "    var max\
    \ = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n        if number\
    \ > max[maxIndex] {\n            max[maxIndex] = number\n            maxIndex\
    \ += 1\n        }\n    }\n    return max", "    var max = numbers[0]\n    var\
    \ rolling_max = numbers\n    for i in 1..numbers.count {\n        if numbers[i]\
    \ > max {\n            max = numbers[i]\n        }\n        if numbers[i] > rolling_max[i\
    \ - 1].0 {\n            rolling_max[i] = max\n        }\n    }\n    return rolling_max",
  "    var max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n    \
    \    if number > max[maxIndex] {\n            max[maxIndex] = number\n       \
    \     maxIndex += 1\n        }\n    }\n    return max", "    var max = [Int]()\n\
    \    var maxIndex = 0\n    for number in numbers {\n        if number > max[maxIndex]\
    \ {\n            max[maxIndex] = number\n            maxIndex += 1\n        }\n\
    \    }\n    return max", "    var max = [Int]()\n    for number in numbers {\n\
    \        if number > max[0] {\n            max = [number]\n        } else {\n\
    \            max = append(max, number)\n        }\n    }\n    return max", " \
    \   var max = [Int]()\n    var index = 0\n    for number in numbers {\n      \
    \  if number > max[index] {\n            max = [number]\n        } else {\n  \
    \          max = append(max, number)\n        }\n        index++\n    }\n    return\
    \ max", "    var max = [Int]()\n    for number in numbers {\n        if number\
    \ > max[0] {\n            max = [number]\n        } else {\n            max =\
    \ append(max, number)\n        }\n    }\n    return max", "    var max = [Int]()\n\
    \    var maxIndex = 0\n    for number in numbers {\n        if number > max[maxIndex]\
    \ {\n            max[maxIndex] = number\n            maxIndex += 1\n        }\n\
    \    }\n    return max", "    var max = [Int]()\n    var maxIndex = 0\n    for\
    \ number in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max", "  \
    \  var rolling_max = [Int]()\n    var rolling_max_index = 0\n    for number in\
    \ numbers {\n        if rolling_max[rolling_max_index] < number {\n          \
    \  rolling_max[rolling_max_index] = number\n        }\n        rolling_max_index\
    \ += 1\n    }\n    return rolling_max", "    var max = [Int]()\n    var maxIndex\
    \ = 0\n    for number in numbers {\n        if number > max[maxIndex] {\n    \
    \        max[maxIndex] = number\n            maxIndex += 1\n        }\n    }\n\
    \    return max", "    var max = [Int]()\n    var maxIndex = 0\n    for number\
    \ in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max", "  \
    \  var max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n    \
    \    if number > max[maxIndex] {\n            max[maxIndex] = number\n       \
    \     maxIndex += 1\n        }\n    }\n    return max", "    var max = [Int]()\n\
    \    var maxIndex = 0\n    for number in numbers {\n        if number > max[maxIndex]\
    \ {\n            max[maxIndex] = number\n            maxIndex += 1\n        }\n\
    \    }\n    return max", "    var max = [Int]()\n    var maxIndex = 0\n    for\
    \ number in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max", "  \
    \  var result = [Int]()\n    var max = 0\n    for number in numbers {\n      \
    \  if number > max {\n            max = number\n        }\n    }\n    for number\
    \ in numbers {\n        if number > max {\n            result.append(number)\n\
    \        }\n    }\n    return result", "    var rolling_max = [Int]()\n    var\
    \ max_value = numbers[0]\n    for number in numbers {\n        if number > max_value\
    \ {\n            max_value = number\n        }\n    }\n    for number in numbers\
    \ {\n        if number == max_value {\n            rolling_max.append(number)\n\
    \        }\n    }\n    return rolling_max", "    var max = [Int]()\n    var maxIndex\
    \ = 0\n    for number in numbers {\n        if number > max[maxIndex] {\n    \
    \        max[maxIndex] = number\n            maxIndex += 1\n        }\n    }\n\
    \    return max", "    var max = [Int]()\n    var maxIndex = 0\n    for number\
    \ in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max", "  \
    \  var max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n    \
    \    if number > max[maxIndex] {\n            max[maxIndex] = number\n       \
    \     maxIndex += 1\n        }\n    }\n    return max", "    var max = [Int]()\n\
    \    for number in numbers {\n        if number > max[0] {\n            max =\
    \ [number]\n        } else {\n            max = append(max, number)\n        }\n\
    \    }\n    return max", "    var max = [Int]()\n    var maxIndex = 0\n    for\
    \ number in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max", "  \
    \  var max = [Int]()\n    var maxIndex = 0\n    for index in 0..<numbers.count\
    \ {\n        if numbers[index] > max[maxIndex] {\n            max[maxIndex] =\
    \ numbers[index]\n            maxIndex = index\n        }\n    }\n    return max",
  "    var max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n    \
    \    if number > max[maxIndex] {\n            max[maxIndex] = number\n       \
    \     maxIndex += 1\n        }\n    }\n    return max", "    var max = [Int]()\n\
    \    for number in numbers {\n        if max != nil {\n            if number >\
    \ max[0] {\n                max = number\n            }\n        } else {\n  \
    \          max = number\n        }\n    }\n    return max", "    var result =\
    \ [Int]()\n    var max = 0\n    for number in numbers {\n        if number > max\
    \ {\n            max = number\n        }\n    }\n    for number in numbers {\n\
    \        if number == max {\n            result.append(number)\n        }\n  \
    \  }\n    return result", "    var max = [Int]()\n    var maxIndex = 0\n    for\
    \ number in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max", "  \
    \  var max = [Int]()\n    var maxIndex = 0\n    for index in 0..<numbers.count\
    \ {\n        if numbers[index] > max[maxIndex] {\n            max[maxIndex] =\
    \ numbers[index]\n            maxIndex = index\n        }\n    }\n    return max",
  "    var max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n    \
    \    if number > max[maxIndex] {\n            max[maxIndex] = number\n       \
    \     maxIndex += 1\n        }\n    }\n    return max", "    var max = [Int]()\n\
    \    for number in numbers {\n        if number > max[0] {\n            max =\
    \ [number]\n        } else {\n            max = append(max, number)\n        }\n\
    \    }\n    return max", "    var max = [Int]()\n    var maxIndex = 0\n    for\
    \ number in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max", "  \
    \  var max = [Int]()\n    var maxIndex = 0\n    for number in numbers {\n    \
    \    if number > max[maxIndex] {\n            max[maxIndex] = number\n       \
    \     maxIndex += 1\n        }\n    }\n    return max", "    var max = [Int]()\n\
    \    var maxIndex = 0\n    for number in numbers {\n        if number > max[maxIndex]\
    \ {\n            max[maxIndex] = number\n            maxIndex += 1\n        }\n\
    \    }\n    return max", "    var max = [Int]()\n    var maxIndex = 0\n    for\
    \ number in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max", "  \
    \  var max = numbers[0]\n    var rollingMax = [Int]()\n    for number in numbers\
    \ {\n        if number > max {\n            rollingMax.append(max)\n         \
    \   max = number\n        } else {\n            max = number\n        }\n    }\n\
    \    rollingMax.append(max)\n    return rollingMax", "    var max = numbers[0]\n\
    \    var max_index = -1\n    for index in 1..<numbers.count {\n        if numbers[index]\
    \ > max {\n            max = numbers[index]\n            max_index = index\n \
    \       }\n    }\n    return Array(numbers[1..<max_index])", "    var max = [Int]()\n\
    \    var maxIndex = 0\n    for number in numbers {\n        if number > max[maxIndex]\
    \ {\n            max[maxIndex] = number\n            maxIndex += 1\n        }\n\
    \    }\n    return max", "    var rolling_max = [Int]()\n    var rolling_max_index\
    \ = 0\n    for number in numbers {\n        if number > rolling_max[rolling_max_index]\
    \ {\n            rolling_max[rolling_max_index] = number\n        }\n        rolling_max_index\
    \ += 1\n    }\n    return rolling_max", "    var max = [Int]()\n    var maxIndex\
    \ = 0\n    for number in numbers {\n        if number > max[maxIndex] {\n    \
    \        max[maxIndex] = number\n            maxIndex += 1\n        }\n    }\n\
    \    return max", "    var max = [Int]()\n    var maxIndex = 0\n    for number\
    \ in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max", "  \
    \  var result = [Int]()\n    var max = 0\n    for number in numbers {\n      \
    \  if number > max {\n            max = number\n        }\n    }\n    for number\
    \ in numbers {\n        if number == max {\n            result.append(max)\n \
    \       } else {\n            result.append(number)\n        }\n    }\n    return\
    \ result", "    var max = [Int]()\n    var maxIndex = 0\n    for index in 0..<numbers.count\
    \ {\n        if numbers[index] > max[maxIndex] {\n            max[maxIndex] =\
    \ numbers[index]\n            maxIndex = index\n        }\n    }\n    return max"]
stop_tokens:
- "\n}"

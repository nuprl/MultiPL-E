name: HumanEval_105_by_length
language: swift
prompt: "\n/// Given an array of integers, sort the integers that are between 1 and\
  \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
  \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
  , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(arr:\
  \ [2, 1, 1, 4, 5, 8, 2, 3])\n/// [\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\"\
  , \"Two\", \"One\", \"One\"]\n/// If the array is empty, return an empty array:\n\
  /// >>> by_length(arr: [] as [Int])\n/// [] as [String]\n/// If the array has any\
  \ strange number ignore it:\n/// >>> by_length(arr: [1, -1, 55])\n/// [\"One\"]\n\
  func by_length(arr: [Int]) -> [String] {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(by_length(arr: [2, 1, 1, 4, 5, 8, 2, 3])\
  \ == [\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\"\
  ])\nassert(by_length(arr: [] as [Int]) == [] as [String])\nassert(by_length(arr:\
  \ [1, -1, 55]) == [\"One\"])\nassert(by_length(arr: [1, -1, 3, 2]) == [\"Three\"\
  , \"Two\", \"One\"])\nassert(by_length(arr: [9, 4, 8]) == [\"Nine\", \"Eight\",\
  \ \"Four\"])"
completions: ["    if arr.isEmpty() {\n        return []\n    }\n    var result =\
    \ [String]()\n    var last = 0\n    for num in arr {\n        if num > 9 {\n \
    \           last = num\n        } else {\n            if last == 0 {\n       \
    \         result.append(String(num))\n            } else {\n                result.append(String(last))\n\
    \                result.append(String(num))\n            }\n            last =\
    \ 0\n        }\n    }\n    if last > 0 {\n        result.append(String(last))\n\
    \    }\n    return result", "    var result = [String]()\n    if arr.isEmpty {\n\
    \        return result\n    }\n    let maxLength = max(arr.count, 0)\n    for\
    \ i in 0..<maxLength {\n        let index = arr.index(i, offsetBy: 1)\n      \
    \  if index == i {\n            result.append(arr[i])\n            continue\n\
    \        }\n        let digit = arr[index] - 1\n        let name = digitToName(digit)\n\
    \        result.append(name)\n    }\n    return result", "    if arr.isEmpty()\
    \ {\n        return []\n    }\n    var result: [String] = []\n    var last: Int\
    \ = 0\n    for num in arr {\n        if num < 1 || num > 9 {\n            continue\n\
    \        }\n        if last == 0 {\n            last = num\n            continue\n\
    \        }\n        if last == num {\n            continue\n        }\n      \
    \  result.append(\"One\")\n        last = 0\n    }\n    if last != 0 {\n     \
    \   result.append(\"One\")\n    }\n    return result", "    if arr.isEmpty {\n\
    \        return []\n    }\n    let digits = arr.map { String($0) }\n    let reversed\
    \ = digits.reversed()\n    let ones = reversed.filter { $0 % 10 == 0 }\n    let\
    \ tens = reversed.filter { $0 % 10 == 1 }\n    let hundreds = reversed.filter\
    \ { $0 % 10 == 2 }\n    let thousands = reversed.filter { $0 % 10 == 3 }\n   \
    \ let ten_thousands = reversed.filter { $0 % 10 == 4 }\n    let hundred_thousands\
    \ = reversed.filter { $0 % 10 == 5 }\n    let thousand_thousands = reversed.filter\
    \ { $0 % 10 == 6 }\n    let million = reversed.filter { $0 % 10 == 7 }\n    let\
    \ billion = reversed.filter { $0 % 10 == 8 }\n    let trillion = reversed.filter\
    \ { $0 % 10 == 9 }\n    let one_to_nine = reversed.filter { $0 % 10 != 0 }\n \
    \   let ten_to_nine = reversed.filter { $0 % 10 != 1 }\n    let hundred_to_nine\
    \ = reversed.filter { $0 % 10 != 2 }\n    let thousand_to_nine = reversed.filter\
    \ { $0 % 10 != 3 }\n    let million_to_nine = reversed.filter { $0 % 10 != 4 }\n\
    \    let billion_to_nine = reversed.filter { $0 % 10 != 5 }\n    let trillion_to_nine\
    \ = reversed.filter { $0 % 10 != 6 }\n    let one_to_nine_hundred = reversed.filter\
    \ { $0 % 10 != 7 }\n    let ten_to_nine_hundred = reversed.filter { $0 % 10 !=\
    \ 8 }\n    let hundred_to_nine_hundred = reversed.filter { $0 % 10 != 9 }\n  \
    \  let thousand_to_nine_hundred = reversed.filter { $0 % 10 != 10 }\n    let million_to_nine_hundred\
    \ = reversed.filter { $0 % 10 != 11 }\n    let billion_to_nine_hundred = reversed.filter\
    \ { $0 % 10 != 12 }\n    let trillion_to_nine_hundred = reversed.filter { $0 %\
    \ 10 != 13 }\n    let one_to_nine_thousand = reversed.filter { $0 % 10 != 14 }\n\
    \    let ten_to_nine_thousand = reversed.filter { $0 % 10 != 15 }\n    let hundred_to_nine_thousand\
    \ = ", "    guard !arr.isEmpty else { return [] }\n    var result = [String]()\n\
    \    var i = 0\n    for n in arr {\n        if n < 1 || n > 9 {\n            continue\n\
    \        }\n        if i == 0 {\n            result.append(String(format: \"%@\"\
    , n))\n        } else {\n            result.append(String(format: \"%@%@\", result[i-1],\
    \ n))\n        }\n        i += 1\n    }\n    return result", "    var result =\
    \ [String]()\n    if arr.isEmpty {\n        return result\n    }\n    let min\
    \ = min(arr)\n    let max = max(arr)\n    var i = 0\n    for number in arr {\n\
    \        if number >= min && number <= max {\n            result.append(name[number])\n\
    \        } else {\n            result.append(name[min])\n        }\n        i\
    \ += 1\n    }\n    return result", "    if arr.isEmpty {\n        return []\n\
    \    }\n    var result: [String] = []\n    var last = 0\n    for num in arr {\n\
    \        if num > 9 {\n            last = num\n        } else {\n            let\
    \ digit = num - last\n            result.append(digits[digit])\n        }\n  \
    \  }\n    return result.reversed()", "    guard !arr.isEmpty else { return []\
    \ }\n    let min = 1\n    let max = 9\n    var result = [String]()\n    for n\
    \ in arr {\n        let index = min + n - 1\n        result.append(names[index])\n\
    \    }\n    return result.reversed()", "    guard arr.count > 0 else { return\
    \ [] }\n    var result = [String]()\n    var i = 0\n    for n in arr {\n     \
    \   if n < 1 || n > 9 {\n            continue\n        }\n        if i == 0 {\n\
    \            result.append(String(format: \"%d\\\"\", n))\n        } else {\n\
    \            result.append(String(format: \"%d\\\"\", n - 1))\n        }\n   \
    \     i += 1\n    }\n    result.reverse()\n    for n in result {\n        if n\
    \ != \"0\" && n != \"1\" {\n            return result\n        }\n    }\n    return\
    \ result", "    var result = [String]()\n    if arr.isEmpty {\n        return\
    \ result\n    }\n    let min = min(arr)\n    let max = max(arr)\n    var i = 0\n\
    \    while i < arr.count {\n        if arr[i] >= min && arr[i] <= max {\n    \
    \        result.append(name[arr[i]])\n            i += 1\n        } else {\n \
    \           i += 1\n        }\n    }\n    return result", "    var result = [String]()\n\
    \    if arr.isEmpty {\n        return result\n    }\n    let min = arr[0]\n  \
    \  let max = arr[0]\n    for num in arr {\n        if num < min {\n          \
    \  min = num\n        } else if num > max {\n            max = num\n        }\n\
    \    }\n    for num in arr {\n        if num == min {\n            result.append(\"\
    One\")\n        } else if num == max {\n            result.append(\"Nine\")\n\
    \        } else {\n            result.append(String(num))\n        }\n    }\n\
    \    return result.reverse()", "    if arr.isEmpty() {\n        return []\n  \
    \  }\n    var result = [String]()\n    var i = 0\n    for n in arr {\n       \
    \ if n < 1 || n > 9 {\n            continue\n        }\n        if i == 0 {\n\
    \            result.append(String(n - 1))\n        } else {\n            result.append(String(n\
    \ - 1))\n            result.append(String(arr[i] - 1))\n        }\n        i +=\
    \ 1\n    }\n    return result", "    if arr.isEmpty {\n        return arr\n  \
    \  }\n    var result = [String]()\n    var i = 0\n    for num in arr {\n     \
    \   if num < 1 || num > 9 {\n            continue\n        }\n        result.append(name[num])\n\
    \    }\n    for num in arr {\n        if num < 1 || num > 9 {\n            continue\n\
    \        }\n        result.append(name[num])\n    }\n    return result", "   \
    \ var result = [String]()\n    if arr.isEmpty {\n        return result\n    }\n\
    \    let maxLength = max(arr.count, 9)\n    for index in 0..<maxLength {\n   \
    \     let digit = arr[index]\n        let name = digitToName(digit)\n        if\
    \ name != nil {\n            result.append(name!)\n        }\n    }\n    if maxLength\
    \ > 9 {\n        result.reverse()\n    }\n    return result", "    if arr.isEmpty\
    \ {\n        return []\n    }\n    var result = [String]()\n    var i = 0\n  \
    \  for n in arr {\n        if n >= 1 && n <= 9 {\n            result.append(name[n])\n\
    \        } else {\n            result.append(String(format: \"%@\", n))\n    \
    \    }\n        i += 1\n    }\n    return result", "    var result = [String]()\n\
    \    var index = 0\n    for number in arr {\n        if number >= 1 && number\
    \ <= 9 {\n            result[index] = String(number)\n            index++\n  \
    \      }\n    }\n    if index == 0 {\n        return result\n    }\n    for number\
    \ in arr {\n        if number >= 1 && number <= 9 {\n            result[index]\
    \ = String(number)\n            index++\n        }\n    }\n    return result",
  "    if arr.isEmpty {\n        return []\n    }\n    var result = [String]()\n \
    \   var i = 0\n    for num in arr {\n        if num > 9 {\n            i += 10\n\
    \        }\n        result.append(name[num])\n    }\n    result.reverse()\n  \
    \  for num in arr {\n        if num > 9 {\n            i += 10\n        }\n  \
    \      result.append(name[num])\n    }\n    return result", "    if arr.isEmpty\
    \ {\n        return []\n    }\n    var result = [String]()\n    var current =\
    \ 0\n    var last = 0\n    for current < arr.count {\n        if current == last\
    \ {\n            result.append(arr[current])\n        } else {\n            if\
    \ arr[current] == 1 {\n                result.append(ones[current])\n        \
    \    } else if arr[current] == 2 {\n                result.append(twos[current])\n\
    \            } else if arr[current] == 3 {\n                result.append(threes[current])\n\
    \            } else if arr[current] == 4 {\n                result.append(fours[current])\n\
    \            } else if arr[current] == 5 {\n                result.append(fives[current])\n\
    \            } else if arr[current] == 6 {\n                result.append(sixs[current])\n\
    \            } else if arr[current] == 7 {\n                result.append(sevens[current])\n\
    \            } else if arr[current] == 8 {\n                result.append(eights[current])\n\
    \            } else if arr[current] == 9 {\n                result.append(nines[current])\n\
    \            }\n        }\n        last = current\n        current++\n    }\n\
    \    return result", "    if arr.isEmpty {\n        return []\n    }\n    var\
    \ result = [String]()\n    var i = 0\n    for num in arr {\n        if num > 0\
    \ && num < 10 {\n            result.append(name[num])\n        } else {\n    \
    \        result.append(name[num])\n        }\n    }\n    for num in arr {\n  \
    \      if num > 0 && num < 10 {\n            result.append(name[num])\n      \
    \  } else {\n            result.append(name[num])\n        }\n    }\n    return\
    \ result", "    if arr.isEmpty {\n        return []\n    }\n    var result = [String]()\n\
    \    var last = 0\n    for num in arr {\n        if num < 1 || num > 9 {\n   \
    \         continue\n        }\n        var index = last + num - 1\n        result[index]\
    \ = names[index][num]\n        last = index\n    }\n    return result", "    var\
    \ result = [String]()\n    if arr.isEmpty {\n        return result\n    }\n  \
    \  var i = 0\n    for n in arr {\n        if n < 1 || n > 9 {\n            continue\n\
    \        }\n        result[i++] = \"\\(Int(n))\"\n    }\n    return result.reverse()",
  "    if arr.isEmpty() {\n        return []\n    }\n    var result = [String]()\n\
    \    var i = 0\n    for number in arr {\n        if number > 9 {\n           \
    \ number = number - 10\n        }\n        if number < 1 {\n            number\
    \ = 0\n        }\n        result.append(digits[number])\n        i += 1\n    }\n\
    \    return result.reverse()", "    if arr.isEmpty {\n        return []\n    }\n\
    \    var result = [String]()\n    var i = 0\n    var j = 0\n    var n = arr.count\n\
    \    for i < n {\n        if arr[i] > 9 {\n            j = i\n            while\
    \ j < n && arr[j] > 9 {\n                j += 1\n            }\n            if\
    \ j == n {\n                break\n            }\n            var digits = arr[j]\
    \ - 10\n            var reversed = digits == 0\n            for k := n - 1; j\
    \ >= k; k-- {\n                reversed = reversed || (arr[k] > digits)\n    \
    \        }\n            if reversed {\n                for k := n - 1; j >= k;\
    \ k-- {\n                    arr[k] = arr[k] - 10\n                }\n       \
    \     }\n            arr[j] = by_digit(digits)\n            i = j + 1\n      \
    \  } else {\n            result.append(by_digit(arr[i]))\n            i += 1\n\
    \        }\n    }\n    return result", "    if arr.isEmpty {\n        return []\n\
    \    }\n    let arr = arr.sorted()\n    var result = [String]()\n    for n in\
    \ arr {\n        switch n {\n        case 1:\n            result.append(\"One\"\
    )\n        case 2:\n            result.append(\"Two\")\n        case 3:\n    \
    \        result.append(\"Three\")\n        case 4:\n            result.append(\"\
    Four\")\n        case 5:\n            result.append(\"Five\")\n        case 6:\n\
    \            result.append(\"Six\")\n        case 7:\n            result.append(\"\
    Seven\")\n        case 8:\n            result.append(\"Eight\")\n        case\
    \ 9:\n            result.append(\"Nine\")\n        default:\n            break\n\
    \        }\n    }\n    return result.reverse()", "    guard arr.count > 0 else\
    \ { return [] }\n    var result: [String] = []\n    var i = 0\n    var j = 0\n\
    \    var last = 0\n    for _ in arr {\n        if i == 0 {\n            result.append(String(arr[last]))\n\
    \            last++\n        } else {\n            if last == i {\n          \
    \      result.append(String(arr[last]))\n                last++\n            }\
    \ else {\n                result.append(String(arr[last]) + \", \" + String(arr[last]))\n\
    \                last++\n            }\n        }\n        i++\n    }\n    return\
    \ result", "    guard arr.count > 0 else { return [] }\n    var result = [String]()\n\
    \    var i = 0\n    for num in arr {\n        if num > 9 {\n            result.append(String(num))\n\
    \        } else {\n            result.append(name[num])\n        }\n    }\n  \
    \  return result.reverse()", "    if arr.isEmpty {\n        return []\n    }\n\
    \n    var result = [String]()\n    var i = 0\n    var j = 0\n    var k = 0\n\n\
    \    for k in 0..<arr.count {\n        if arr[k] == 1 {\n            result.append(one[k])\n\
    \            i += 1\n        } else if arr[k] == 2 {\n            result.append(two[k])\n\
    \            i += 1\n        } else if arr[k] == 3 {\n            result.append(three[k])\n\
    \            i += 1\n        } else if arr[k] == 4 {\n            result.append(four[k])\n\
    \            i += 1\n        } else if arr[k] == 5 {\n            result.append(five[k])\n\
    \            i += 1\n        } else if arr[k] == 6 {\n            result.append(six[k])\n\
    \            i += 1\n        } else if arr[k] == 7 {\n            result.append(seven[k])\n\
    \            i += 1\n        } else if arr[k] == 8 {\n            result.append(eight[k])\n\
    \            i += 1\n        } else if arr[k] == 9 {\n            result.append(nine[k])\n\
    \            i += 1\n        } else {\n            j += 1\n        }\n    }\n\n\
    \    for k in 0..<i {\n        result.append(one[k])\n    }\n\n    for k in 0..<j\
    \ {\n        result.append(two[k])\n    }\n\n    for k in 0..<i {\n        result.append(three[k])\n\
    \    }\n\n    for k in 0..<j {\n        result.append(four[k])\n    }\n\n    for\
    \ k in 0..<i {\n        result.append(five[k])\n    }\n\n    for k in 0..<j {\n\
    \        result.append(six[k])\n    }\n\n    for k in 0..<i {\n        result.append(seven[k])\n\
    \    }\n\n    for k in 0..<j {\n        result.append(eight[k])\n    }\n\n   \
    \ for k in 0..<i {\n        result.append(nine[k])\n    }\n\n    return result",
  "    var result = [String]()\n    for number in arr {\n        if number >= 1 &&\
    \ number <= 9 {\n            result.append(numbers[number])\n        }\n    }\n\
    \    if result.isEmpty {\n        return nil\n    }\n    return result.reversed()",
  "    var result = [String]()\n    if arr.isEmpty {\n        return result\n    }\n\
    \    let min = arr[0]\n    let max = arr[arr.count - 1]\n    for number in arr\
    \ {\n        if number < min || number > max {\n            continue\n       \
    \ }\n        let index = number - min\n        result.append(names[index])\n \
    \   }\n    return result", "    var result = [String]()\n    if arr.isEmpty {\n\
    \        return result\n    }\n    let one = Int(One)\n    let two = Int(Two)\n\
    \    let three = Int(Three)\n    let four = Int(Four)\n    let five = Int(Five)\n\
    \    let six = Int(Six)\n    let seven = Int(Seven)\n    let eight = Int(Eight)\n\
    \    let nine = Int(Nine)\n    let ten = Int(Ten)\n    let hundred = Int(Hundred)\n\
    \    let thousand = Int(Thousand)\n    let million = Int(Million)\n    let billion\
    \ = Int(Billion)\n    let trillion = Int(Trillion)\n    let quadrillion = Int(Quadrillion)\n\
    \    let quintillion = Int(Quintillion)\n    let sextillion = Int(Sextillion)\n\
    \    let septillion = Int(Septillion)\n    let octillion = Int(Octillion)\n  \
    \  let nonillion = Int(Nonillion)\n    let decillion = Int(Decillion)\n    let\
    \ undecillion = Int(Undecillion)\n    let duodecillion = Int(Duodecillion)\n \
    \   let tredecillion = Int(Tredecillion)\n    let quattuordecillion = Int(Quattuordecillion)\n\
    \    let quindecillion = Int(Quindecillion)\n    let sexdecillion = Int(Sexdecillion)\n\
    \    let septendecillion = Int(Septendecillion)\n    let octodecillion = Int(Octodecillion)\n\
    \    let novemdecillion = Int(Novemdecillion)\n    let vigintillion = Int(Vigintillion)\n\
    \    let thousandand = Int(Thousandand)\n    let million = Int(Million)\n    let\
    \ billion = Int(Billion)\n    let trillion = Int(Trillion)\n    let quadrillion\
    \ = Int(Quadrillion)\n    let quintillion = Int(Quintillion)\n    let sextillion\
    \ = Int(Sextillion)\n    let septillion = Int(Septillion)\n    let octillion =\
    \ Int(Octillion)\n    let nonillion = Int(Nonillion)\n    let decillion = Int(Decillion)\n\
    \    let undecillion = Int(Undecillion)\n    let duodecillion = Int(Duodecillion",
  "    var result = [String]()\n    var i = 0\n    for number in arr {\n        if\
    \ number < 1 || number > 9 {\n            continue\n        }\n        i += 1\n\
    \        if i == 1 {\n            result.append(String(number))\n        } else\
    \ {\n            result.append(String(number))\n            result.append(\" One\"\
    )\n        }\n    }\n    if i == 0 {\n        return result\n    }\n    for number\
    \ in arr {\n        if number < 1 || number > 9 {\n            continue\n    \
    \    }\n        i += 1\n        if i == 1 {\n            result.append(String(number))\n\
    \        } else {\n            result.append(String(number))\n            result.append(\"\
    \ Two\")\n        }\n    }\n    if i == 0 {\n        return result\n    }\n  \
    \  for number in arr {\n        if number < 1 || number > 9 {\n            continue\n\
    \        }\n        i += 1\n        if i == 1 {\n            result.append(String(number))\n\
    \        } else {\n            result.append(String(number))\n            result.append(\"\
    \ Three\")\n        }\n    }\n    if i == 0 {\n        return result\n    }\n\
    \    for number in arr {\n        if number < 1 || number > 9 {\n            continue\n\
    \        }\n        i += 1\n        if i == 1 {\n            result.append(String(number))\n\
    \        } else {\n            result.append(String(number))\n            result.append(\"\
    \ Four\")\n        }\n    }\n    if i == 0 {\n        return result\n    }\n \
    \   for number in arr {\n        if number < 1 || number > 9 {\n            continue\n\
    \        }\n        i += 1\n        if i == 1 {\n            result.append(String(number))\n\
    \        } else {\n            result.append(String(number))\n            result.append(\"\
    \ Five\")\n        }\n    }\n    if i == 0 {\n        return result\n    }\n \
    \   for number in arr {\n        if number < 1 || number > 9 {\n            continue\n\
    \        }\n        i += 1\n        if i == 1 {\n            result.append(String(number))\n\
    \        } else {\n            result.append(String(number))\n            result.append(\"\
    \ Six\")\n        }\n    }\n    if i == 0 {\n        return result\n    }\n  \
    \  for number in arr {\n        if number < 1 || number > 9 {\n            continue\n\
    \        }\n        i += 1\n        if i == 1 {\n            result.append(String(number))\n\
    \        } else {\n            result.append(String(number))\n            result.append(\"\
    \ Seven\")\n        }\n    }\n    if i == 0 {\n        return result\n    }\n\
    \    for number in arr {\n        if number < 1 || number > 9 {\n            continue\n\
    \        }\n        i += 1\n        if i == 1 {\n            result.append(String(number))\n\
    \        } else {\n            result.append(String(number))\n            result.append(\"\
    \ Eight\")\n        }\n    }\n    if i == 0 {\n        return result\n    }\n\
    \    for number in arr {\n        if number < 1 || number > 9 {\n            continue\n\
    \        }\n        i += 1\n        if i == 1 {\n            result.append(String(number))\n\
    \        } else {\n", "    if arr.isEmpty() {\n        return []\n    }\n    var\
    \ result = [String]()\n    var i = 0\n    for num in arr {\n        if num > 9\
    \ {\n            result.append(\"Nine\")\n        } else {\n            result.append(\"\
    One\")\n        }\n        if num < 1 {\n            result.append(\"Zero\")\n\
    \        } else {\n            result[i] += String(num)\n        }\n        i\
    \ += 1\n    }\n    return result", "    guard !arr.isEmpty else { return [] }\n\
    \    let ones = arr.filter{ $0 < 10 }\n    let tens = arr.filter{ $0 >= 10 }\n\
    \    let tensReversed = tens.reverse()\n    let onesReversed = ones.reverse()\n\
    \    let onesReversedString = onesReversed.map{ onesReversed[$0] }\n    let tensReversedString\
    \ = tensReversed.map{ tensReversed[$0] }\n    return onesReversedString + tensReversedString",
  "    var result = [String]()\n    var i = 0\n    for num in arr {\n        if num\
    \ < 1 || num > 9 {\n            continue\n        }\n        i += 1\n        if\
    \ i == 1 {\n            result.append(String(num))\n        } else {\n       \
    \     result.append(String(num))\n            result.append(\" Two\")\n      \
    \  }\n    }\n    if i == 0 {\n        return arr\n    }\n    result.reverse()\n\
    \    for num in result {\n        if num == \"One\" {\n            result.removeFirst()\n\
    \        }\n    }\n    return result", "    guard arr.count > 0 else { return\
    \ [] }\n    let maxLength = arr.maxElement()\n    var result = [String]()\n  \
    \  for num in arr {\n        let digit = String(num)\n        if digit == \"1\"\
    \ {\n            result.append(contentsOf: [\"One\", \"Two\", \"Three\", \"Four\"\
    , \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"])\n        } else if digit\
    \ == \"2\" {\n            result.append(contentsOf: [\"Two\", \"One\", \"Three\"\
    , \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"])\n        } else\
    \ if digit == \"3\" {\n            result.append(contentsOf: [\"Three\", \"Two\"\
    , \"One\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"])\n   \
    \     } else if digit == \"4\" {\n            result.append(contentsOf: [\"Four\"\
    , \"Three\", \"Two\", \"One\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"\
    ])\n        } else if digit == \"5\" {\n            result.append(contentsOf:\
    \ [\"Five\", \"Four\", \"Three\", \"Two\", \"One\", \"Six\", \"Seven\", \"Eight\"\
    , \"Nine\"])\n        } else if digit == \"6\" {\n            result.append(contentsOf:\
    \ [\"Six\", \"Five\", \"Four\", \"Three\", \"Two\", \"One\", \"Seven\", \"Eight\"\
    , \"Nine\"])\n        } else if digit == \"7\" {\n            result.append(contentsOf:\
    \ [\"Seven\", \"Six\", \"Five\", \"Four\", \"Three\", \"Two\", \"One\", \"Eight\"\
    , \"Nine\"])\n        } else if digit == \"8\" {\n            result.append(contentsOf:\
    \ [\"Eight\", \"Seven\", \"Six\", \"Five\", \"Four\", \"Three\", \"Two\", \"One\"\
    , \"Nine\"])\n        } else if digit == \"9\" {\n            result.append(contentsOf:\
    \ [\"Nine\", \"Eight\", \"Seven\", \"Six\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"One\"])\n        }\n    }\n    return result.reversed()", "    if arr.isEmpty\
    \ {\n        return []\n    }\n    var result = [String]()\n    var i = 0\n  \
    \  for num in arr {\n        if num > 0 && num < 10 {\n            result.append(name[num])\n\
    \        } else {\n            result.append(name[num])\n        }\n    }\n  \
    \  for num in arr {\n        if num > 0 && num < 10 {\n            result.append(name[num])\n\
    \        }\n    }\n    return result", "    guard arr.count > 0 else { return\
    \ [] }\n    var result = [String]()\n    for i in arr {\n        switch i {\n\
    \        case 1, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20:\n            result.append(String(format:\
    \ \"%@\", i))\n        case 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31:\n    \
    \        result.append(String(format: \"%@\", i))\n        case 32, 33, 34, 35,\
    \ 36, 37, 38, 39, 40, 41, 42, 43, 44:\n            result.append(String(format:\
    \ \"%@\", i))\n        case 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57,\
    \ 58, 59, 60, 61:\n            result.append(String(format: \"%@\", i))\n    \
    \    case 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78,\
    \ 79, 80, 81:\n            result.append(String(format: \"%@\", i))\n        case\
    \ 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99:\n  \
    \          result.append(String(format: \"%@\", i))\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    if arr.isEmpty {\n  \
    \      return []\n    }\n    var result = [String]()\n    var i = 0\n    for n\
    \ in arr {\n        if n < 1 || n > 9 {\n            continue\n        }\n   \
    \     if i == 0 {\n            result.append(String(n - 1))\n        } else {\n\
    \            result.append(String(n - 1))\n            result.append(String(arr[i]\
    \ - 1))\n        }\n        i += 1\n    }\n    return result", "    if arr.isEmpty\
    \ {\n        return []\n    }\n    var result = [String]()\n    var i = 0\n  \
    \  for n in arr {\n        if n < 1 || n > 9 {\n            continue\n       \
    \ }\n        if i == 0 {\n            result.append(String(format: \"One\", n))\n\
    \        } else {\n            result.append(String(format: \"%@\", result[i-1]))\n\
    \        }\n        i += 1\n    }\n    if i == 0 {\n        return result\n  \
    \  }\n    result.append(String(format: \"%@\", result[i-1]))\n    return result",
  "    guard !arr.isEmpty else { return [] }\n    var result: [String] = []\n    var\
    \ i = 0\n    for n in arr {\n        if n > 0 && n < 10 {\n            result.append(nameForNumber(n))\n\
    \        } else {\n            result.append(\"\")\n        }\n    }\n    for\
    \ n in arr {\n        if n > 0 && n < 10 {\n            result[i] = nameForNumber(n)\n\
    \            i += 1\n        }\n    }\n    return result", "    if arr.isEmpty\
    \ {\n        return []\n    }\n    var result = [String]()\n    var index = 0\n\
    \    var current = 0\n    var last = 0\n    var lastDigit = 0\n    var lastDigitIndex\
    \ = 0\n    var lastDigitName = \"\"\n    for current in arr {\n        if current\
    \ > 9 {\n            lastDigit = current\n            lastDigitIndex = index\n\
    \            lastDigitName = digitNames[lastDigit]\n        }\n        if current\
    \ < 1 {\n            if lastDigit > 0 {\n                result[lastDigitIndex]\
    \ = lastDigitName\n            }\n            lastDigit = 0\n            lastDigitIndex\
    \ = 0\n            lastDigitName = \"\"\n        }\n        if current == 1 {\n\
    \            result[index] = \"One\"\n        }\n        if current == 2 {\n \
    \           result[index] = \"Two\"\n        }\n        if current == 3 {\n  \
    \          result[index] = \"Three\"\n        }\n        if current == 4 {\n \
    \           result[index] = \"Four\"\n        }\n        if current == 5 {\n \
    \           result[index] = \"Five\"\n        }\n        if current == 6 {\n \
    \           result[index] = \"Six\"\n        }\n        if current == 7 {\n  \
    \          result[index] = \"Seven\"\n        }\n        if current == 8 {\n \
    \           result[index] = \"Eight\"\n        }\n        if current == 9 {\n\
    \            result[index] = \"Nine\"\n        }\n        index++\n    }\n   \
    \ if lastDigit > 0 {\n        result[lastDigitIndex] = lastDigitName\n    }\n\
    \    return result", "    guard !arr.isEmpty else { return [] }\n    let min =\
    \ min(arr)\n    let max = max(arr)\n    var result = [String]()\n    for n in\
    \ arr {\n        if n >= min && n <= max {\n            result.append(name(n))\n\
    \        }\n    }\n    return result.reversed()", "    if arr.isEmpty {\n    \
    \    return []\n    }\n    var result = [String]()\n    var last = 0\n    for\
    \ num in arr {\n        if num > 9 {\n            last = num\n        } else {\n\
    \            if last != 0 {\n                let index = last - 10\n         \
    \       result.append(String(index))\n            }\n            result.append(String(num))\n\
    \            last = num\n        }\n    }\n    if last != 0 {\n        let index\
    \ = last - 10\n        result.append(String(index))\n    }\n    return result",
  "    if arr.isEmpty {\n        return []\n    }\n\n    var result = [String]()\n\
    \    var i = 0\n    var j = 0\n    var n = arr.count\n\n    while i < n {\n  \
    \      if arr[i] < 1 || arr[i] > 9 {\n            i += 1\n            continue\n\
    \        }\n\n        if i == 0 {\n            result.append(String(arr[i]))\n\
    \            i += 1\n            continue\n        }\n\n        if j == 0 {\n\
    \            result.append(String(arr[i]))\n            i += 1\n            continue\n\
    \        }\n\n        if arr[i] < arr[j] {\n            result.append(String(arr[i]))\n\
    \            i += 1\n        } else {\n            result.append(String(arr[j]))\n\
    \            j += 1\n        }\n    }\n\n    return result", "    var result =\
    \ [String]()\n    for number in arr {\n        if number > 9 {\n            number\
    \ = number - 10\n        }\n        result.append(name[number])\n    }\n    return\
    \ result", "    if arr.isEmpty {\n        return []\n    }\n    var result = [String]()\n\
    \    var i = 0\n    for num in arr {\n        if num < 1 || num > 9 {\n      \
    \      continue\n        }\n        let digit = String(num)\n        result.append(digit)\n\
    \        i += 1\n        if i == 3 {\n            i = 0\n        }\n    }\n  \
    \  return result.reversed()", "    var result: [String] = []\n    for n in arr\
    \ {\n        if n > 0 && n < 10 {\n            result.append(nameOf(n))\n    \
    \    } else {\n            result.append(\"\")\n        }\n    }\n    return result",
  "    if arr.isEmpty {\n        return []\n    }\n    var result = [String]()\n \
    \   var i = 0\n    for n in arr {\n        if n < 1 || n > 9 {\n            continue\n\
    \        }\n        if i == 0 {\n            result.append(String(format: \"One\"\
    , n))\n        } else {\n            result.append(String(format: \"%@\", result[i-1]))\n\
    \        }\n        i += 1\n    }\n    if i == 0 {\n        return result\n  \
    \  }\n    result.append(String(format: \"%@\", result[i-1]))\n    return result",
  "    var result = [String]()\n    if arr.isEmpty {\n        return result\n    }\n\
    \    let min = arr[0]\n    let max = arr[arr.count - 1]\n    for number in arr\
    \ {\n        if number < min {\n            continue\n        }\n        if number\
    \ > max {\n            continue\n        }\n        let index = number - min\n\
    \        result.append(names[index])\n    }\n    return result", "    guard !arr.isEmpty\
    \ else { return [] }\n    let min = min(arr)\n    let max = max(arr)\n    var\
    \ result = [String]()\n    for n in arr {\n        if n >= min && n <= max {\n\
    \            result.append(name(n))\n        }\n    }\n    return result.reversed()",
  "    guard arr.count > 0 else { return [] }\n    let min = min(arr)\n    let max\
    \ = max(arr)\n    var result = [String]()\n    for n in arr {\n        let digit\
    \ = n % 10\n        let name = digitToName[digit]\n        if name != nil {\n\
    \            result.append(name!)\n        } else {\n            result.append(String(digit))\n\
    \        }\n    }\n    result.reverse()\n    for n in result {\n        if n >\
    \ max {\n            result.removeLast()\n            break\n        }\n    }\n\
    \    return result", "    guard !arr.isEmpty else { return [] }\n    let digits\
    \ = arr.map { String($0) }\n    let reversed = digits.reverse()\n    let ones\
    \ = reversed.map { $0 == \"1\" ? \"One\" : $0 }\n    let tens = reversed.map {\
    \ $0 == \"10\" ? \"Ten\" : $0 }\n    let hundreds = reversed.map { $0 == \"100\"\
    \ ? \"Hundred\" : $0 }\n    let thousands = reversed.map { $0 == \"1000\" ? \"\
    Thousand\" : $0 }\n    let millions = reversed.map { $0 == \"1000000\" ? \"Million\"\
    \ : $0 }\n    let billions = reversed.map { $0 == \"1000000000\" ? \"Billion\"\
    \ : $0 }\n    let trillions = reversed.map { $0 == \"1000000000000\" ? \"Trillion\"\
    \ : $0 }\n    let quadrillions = reversed.map { $0 == \"1000000000000000\" ? \"\
    Quadrillion\" : $0 }\n    let quintillions = reversed.map { $0 == \"1000000000000000000\"\
    \ ? \"Quintillion\" : $0 }\n    let sextillions = reversed.map { $0 == \"1000000000000000000000\"\
    \ ? \"Sextillion\" : $0 }\n    let septillions = reversed.map { $0 == \"1000000000000000000000000\"\
    \ ? \"Septillion\" : $0 }\n    let octillions = reversed.map { $0 == \"1000000000000000000000000000\"\
    \ ? \"Octillion\" : $0 }\n    let nonillions = reversed.map { $0 == \"1000000000000000000000000000000\"\
    \ ? \"Nonillion\" : $0 }\n    let decillions = reversed.map { $0 == \"100000000000000000000000000000000\"\
    \ ? \"Decillion\" : $0 }\n    let undecillions = reversed.map { $0 == \"1000000000000000000000000000000000\"\
    \ ? \"Undecillion\" : $0 }\n    let duodecillions = reversed.map { $0 == \"10000000000000000000000000000000000\"\
    \ ? \"Duodecillion\" : $0 }\n    let tredecillions = reversed.map { $0 == \"100000000000000000000000000000000000\"\
    \ ? \"Tredecillion\" : $0 }\n    let quattuordecillions = reversed.map { $0 ==\
    \ \"100000000000000000000000000000000000000\" ? \"Quattuordecillion\" : $0 }\n\
    \    let quindecillions = reversed.map { $0 == \"10000000000000000000000000000000000000000\"\
    \ ? \"", "    if arr.isEmpty() {\n        return []\n    }\n    var result = [String]()\n\
    \    var digits = [0]\n    for num in arr {\n        digits.append(num)\n    }\n\
    \    digits.reverse()\n    for digit in digits {\n        if digit < 10 {\n  \
    \          result.append(String(digit))\n        } else {\n            result.append(by_length_digit(digit))\n\
    \        }\n    }\n    return result", "    if arr.isEmpty {\n        return []\n\
    \    }\n    var result = [String]()\n    var i = 0\n    for num in arr {\n   \
    \     if num < 1 || num > 9 {\n            continue\n        }\n        result.append(String(num))\n\
    \        i += 1\n        if i == 3 {\n            result.reverse()\n         \
    \   i = 0\n        }\n    }\n    return result", "    if arr.isEmpty() {\n   \
    \     return []\n    }\n    let digits = arr.sorted()\n    let reversed = digits.reversed()\n\
    \    let ones = reversed.prefix(while: { $0 < 10 })\n    let tens = reversed.prefix(while:\
    \ { $0 >= 10 })\n    let onesAndTens = ones + tens\n    let onesAndTensAndOnes\
    \ = onesAndTens + ones\n    let onesAndTensAndOnesAndTens = onesAndTensAndOnes\
    \ + tens\n    let onesAndTensAndOnesAndTensAndOnes = onesAndTensAndOnesAndTens\
    \ + ones\n    let onesAndTensAndOnesAndTensAndOnesAndTens = onesAndTensAndOnesAndTensAndOnes\
    \ + tens\n    let onesAndTensAndOnesAndTensAndOnesAndTensAndOnes = onesAndTensAndOnesAndTensAndOnesAndTens\
    \ + ones\n    let onesAndTensAndOnesAndTensAndOnesAndTensAndOnesAndTens = onesAndTensAndOnesAndTensAndOnesAndTensAndOnes\
    \ + tens\n    let onesAndTensAndOnesAndTensAndOnesAndTensAndOnesAndOnes = onesAndTensAndOnesAndTensAndOnesAndTensAndOnesAndTens\
    \ + ones\n    let onesAndTensAndOnesAndTensAndOnesAndOnesAndOnesAndTens = onesAndTensAndOnesAndTensAndOnesAndOnesAndOnes\
    \ + tens\n    let onesAndTensAndOnesAndTensAndOnesAndOnesAndOnesAndTens = onesAndTensAndOnesAndTensAndOnesAndOnesAndOnesAndTens\
    \ + ones\n    let onesAndTensAndOnesAndTensAndOnesAndOnesAndOnesAndOnesAndTens\
    \ = onesAndTensAndOnesAndTensAndOnesAndOnesAndOnesAndOnesAndTens + tens\n    let\
    \ onesAndTensAndOnesAndTensAndOnesAndOnesAndOnesAndOnesAndOnesAndTens = onesAndTensAndOnesAndTensAndOnesAndOnesAndOnesAndOnesAndOnesAndTens\
    \ + ones\n    let onesAndTensAndOnesAndTensAndOnesAndOnesAndOnesAndOnesAndOnesAndTens\
    \ = onesAndTensAndOnesAndTensAndOnesAndOnesAndOnesAndOnesAndOnesAndTens + tens\n\
    \    let onesAndTensAndOnesAndTensAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndTens\
    \ = onesAndTensAndOnesAndTensAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndTens\
    \ + ones\n    let onesAndTensAndOnesAndTensAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndOnesAndTen",
  "    if arr.isEmpty {\n        return []\n    }\n    var result = [String]()\n \
    \   var index = 0\n    for number in arr {\n        if number >= 1 && number <=\
    \ 9 {\n            result[index] = String(number)\n            index++\n     \
    \   }\n    }\n    result.reverse()\n    for number in result {\n        if number\
    \ == \"One\" {\n            result.removeAtIndex(index)\n        }\n        if\
    \ number == \"Two\" {\n            result.removeAtIndex(index)\n        }\n  \
    \      if number == \"Three\" {\n            result.removeAtIndex(index)\n   \
    \     }\n        if number == \"Four\" {\n            result.removeAtIndex(index)\n\
    \        }\n        if number == \"Five\" {\n            result.removeAtIndex(index)\n\
    \        }\n        if number == \"Six\" {\n            result.removeAtIndex(index)\n\
    \        }\n        if number == \"Seven\" {\n            result.removeAtIndex(index)\n\
    \        }\n        if number == \"Eight\" {\n            result.removeAtIndex(index)\n\
    \        }\n        if number == \"Nine\" {\n            result.removeAtIndex(index)\n\
    \        }\n    }\n    return result", "    guard !arr.isEmpty else { return []\
    \ }\n    \n    var result = [String]()\n    var digits = arr.map { $0 }\n    \n\
    \    if digits.count < 10 { return result }\n    \n    let ones = digits.filter\
    \ { $0 % 10 == 0 }\n    let tens = digits.filter { $0 % 10 != 0 }\n    \n    let\
    \ ones_count = ones.count\n    let tens_count = tens.count\n    \n    if ones_count\
    \ > tens_count {\n        digits.reverse()\n    }\n    \n    let ones_digits =\
    \ ones\n    let tens_digits = tens\n    \n    if ones_count > tens_count {\n \
    \       ones_digits.reverse()\n        tens_digits.reverse()\n    }\n    \n  \
    \  let tens_digits_count = tens_digits.count\n    \n    for i in 0..<tens_digits_count\
    \ {\n        let tens_digit = tens_digits[i]\n        \n        if tens_digit\
    \ == 0 {\n            continue\n        }\n        \n        let tens_digit_index\
    \ = tens_digits.index(of: tens_digit)\n        \n        let tens_digit_name =\
    \ ones_digits[tens_digit_index].description\n        \n        if tens_digit_index\
    \ == 0 {\n            result.append(tens_digit_name)\n        } else {\n     \
    \       result.append(ones_digits[tens_digit_index - 1].description + \", \" +\
    \ tens_digit_name)\n        }\n    }\n    \n    for i in 0..<ones_count {\n  \
    \      let ones_digit = ones[i]\n        \n        if ones_digit == 0 {\n    \
    \        continue\n        }\n        \n        let ones_digit_index = ones_digits.index(of:\
    \ ones_digit)\n        \n        let ones_digit_name = tens_digits[ones_digit_index].description\n\
    \        \n        if ones_digit_index == 0 {\n            result.append(ones_digit_name)\n\
    \        } else {\n            result.append(tens_digits[ones_digit_index - 1].description\
    \ + \", \" + ones_digit_name)\n        }\n    }\n    \n    return result", " \
    \   if arr.isEmpty() {\n        return []\n    }\n    var result = [String]()\n\
    \    var i = 0\n    for num in arr {\n        if num < 1 || num > 9 {\n      \
    \      continue\n        }\n        result.append(String(num))\n    }\n    for\
    \ num in arr {\n        if num < 1 || num > 9 {\n            continue\n      \
    \  }\n        result[i] = \"One\"\n        i += 1\n        result[i] = \"Two\"\
    \n        i += 1\n        result[i] = \"Three\"\n        i += 1\n        result[i]\
    \ = \"Four\"\n        i += 1\n        result[i] = \"Five\"\n        i += 1\n \
    \       result[i] = \"Six\"\n        i += 1\n        result[i] = \"Seven\"\n \
    \       i += 1\n        result[i] = \"Eight\"\n        i += 1\n        result[i]\
    \ = \"Nine\"\n        i += 1\n    }\n    return result", "    if arr.isEmpty {\n\
    \        return []\n    }\n    var result = [String]()\n    var last = 0\n   \
    \ for i := 0; i < len(arr); i++ {\n        if arr[i] > last {\n            result.append(arr[last])\n\
    \        }\n        result.append(name[arr[i]])\n        last = arr[i]\n    }\n\
    \    if last < 9 {\n        result.append(name[last])\n    }\n    return result",
  "    guard arr.count > 0 else { return [] }\n    let min = min(arr)\n    let max\
    \ = max(arr)\n    var result = [String]()\n    for n in arr {\n        if n >=\
    \ min && n <= max {\n            result.append(name(n))\n        }\n    }\n  \
    \  return result.reversed()", "    if arr.isEmpty() {\n        return []\n   \
    \ }\n    var result: [String] = []\n    var index = 0\n    var last = 0\n    var\
    \ lastDigit = 0\n    var lastDigitDigit = 0\n    var lastDigitDigitDigit = 0\n\
    \    var lastDigitDigitDigitDigit = 0\n    var lastDigitDigitDigitDigitDigit =\
    \ 0\n    var lastDigitDigitDigitDigitDigitDigit = 0\n    var lastDigitDigitDigitDigitDigitDigitDigit\
    \ = 0\n    var lastDigitDigitDigitDigitDigitDigitDigitDigit = 0\n    var lastDigitDigitDigitDigitDigitDigitDigitDigitDigit\
    \ = 0\n    var lastDigitDigitDigitDigitDigitDigitDigitDigitDigit = 0\n    var\
    \ lastDigitDigitDigitDigitDigitDigitDigitDigitDigitDigit = 0\n    var lastDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigit\
    \ = 0\n    var lastDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigit = 0\n\
    \    var lastDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigit = 0\n\
    \    var lastDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigit\
    \ = 0\n    var lastDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigit\
    \ = 0\n    var lastDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigit\
    \ = 0\n    var lastDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigit\
    \ = 0\n    var lastDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigit\
    \ = 0\n    var lastDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigit\
    \ = 0\n    var lastDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigit\
    \ = 0\n    var lastDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigit\
    \ = 0\n    var lastDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigit\
    \ = 0\n    var lastDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigit\
    \ = 0\n    var lastDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigit\
    \ = 0\n    var lastDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigit\
    \ = 0\n    var lastDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigit\
    \ = 0\n    var lastDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigit\
    \ = 0\n    var lastDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigit\
    \ = 0\n    var lastDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigit\
    \ = 0\n    var lastDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigit\
    \ = 0\n    var lastDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigitDigit\
    \ = 0\n    var lastDigitDigitDigitDigitDigitDigitDigitDigitDigitDigit", "    if\
    \ arr.isEmpty {\n        return []\n    }\n    let digits = arr.map { String($0)\
    \ }\n    let reversed = digits.reverse()\n    let ones = reversed.filter { ($0\
    \ as Int) == 1 }\n    let tens = reversed.filter { ($0 as Int) == 10 }\n    let\
    \ hundreds = reversed.filter { ($0 as Int) == 100 }\n    let thousands = reversed.filter\
    \ { ($0 as Int) == 1000 }\n    let ten_thousands = reversed.filter { ($0 as Int)\
    \ == 10000 }\n    let hundred_thousands = reversed.filter { ($0 as Int) == 100000\
    \ }\n    let millions = reversed.filter { ($0 as Int) == 1000000 }\n    let billions\
    \ = reversed.filter { ($0 as Int) == 10000000 }\n    let trillions = reversed.filter\
    \ { ($0 as Int) == 100000000 }\n    let quadrillions = reversed.filter { ($0 as\
    \ Int) == 1000000000 }\n    let quintillions = reversed.filter { ($0 as Int) ==\
    \ 10000000000 }\n    let sextillions = reversed.filter { ($0 as Int) == 100000000000\
    \ }\n    let septillions = reversed.filter { ($0 as Int) == 1000000000000 }\n\
    \    let octillions = reversed.filter { ($0 as Int) == 10000000000000 }\n    let\
    \ nonillions = reversed.filter { ($0 as Int) == 100000000000000 }\n    let decillions\
    \ = reversed.filter { ($0 as Int) == 1000000000000000 }\n    let undecillions\
    \ = reversed.filter { ($0 as Int) == 10000000000000000 }\n    let duodecillions\
    \ = reversed.filter { ($0 as Int) == 100000000000000000 }\n    let tredecillions\
    \ = reversed.filter { ($0 as Int) == 1000000000000000000 }\n    let quattuordecillions\
    \ = reversed.filter { ($0 as Int) == 10000000000000000000 }\n    let quindecillions\
    \ = reversed.filter { ($0 as Int) == 100000000000000000000 }\n    let sexdecillions\
    \ = reversed.filter { ($0 as Int) == 1000000000000000000000 }\n    let septendecillions\
    \ = reversed.filter { ($0 as Int) == 10000000000000000000000 }\n    let octodecillions\
    \ = reversed.filter { ($0 as Int) == 100000000000000000000000 }\n    let nove",
  "    if arr.isEmpty() {\n        return []\n    }\n    var result = [String]()\n\
    \    var index = 0\n    var last = 0\n    for num in arr {\n        if num ==\
    \ 1 {\n            result.append(ones[index])\n            index++\n         \
    \   last = num\n        } else if num == 2 {\n            result.append(twos[index])\n\
    \            index++\n            last = num\n        } else if num == 3 {\n \
    \           result.append(threes[index])\n            index++\n            last\
    \ = num\n        } else if num == 4 {\n            result.append(fours[index])\n\
    \            index++\n            last = num\n        } else if num == 5 {\n \
    \           result.append(fives[index])\n            index++\n            last\
    \ = num\n        } else if num == 6 {\n            result.append(sixes[index])\n\
    \            index++\n            last = num\n        } else if num == 7 {\n \
    \           result.append(sevens[index])\n            index++\n            last\
    \ = num\n        } else if num == 8 {\n            result.append(eights[index])\n\
    \            index++\n            last = num\n        } else if num == 9 {\n \
    \           result.append(nines[index])\n            index++\n            last\
    \ = num\n        } else {\n            if num != last {\n                result.append(ones[num\
    \ - 1])\n            }\n            last = num\n        }\n    }\n    return result",
  "    if arr.isEmpty {\n        return []\n    }\n    var result = [String]()\n \
    \   var index = 0\n    var current = 0\n    var last = 0\n    var lastDigit =\
    \ 0\n    var lastDigitIndex = 0\n    for current in arr {\n        if current\
    \ < 1 {\n            continue\n        }\n        if current > 9 {\n         \
    \   continue\n        }\n        if current == last {\n            continue\n\
    \        }\n        lastDigit = current\n        lastDigitIndex = index\n    \
    \    last = current\n        index += 1\n    }\n    if last == 0 {\n        return\
    \ arr\n    }\n    for current in arr {\n        if current == last {\n       \
    \     continue\n        }\n        if current < 1 {\n            continue\n  \
    \      }\n        if current > 9 {\n            continue\n        }\n        if\
    \ current == lastDigit {\n            continue\n        }\n        if current\
    \ == lastDigit - 1 {\n            result.append(String(lastDigitIndex))\n    \
    \        continue\n        }\n        result.append(String(lastDigitIndex))\n\
    \        result.append(String(lastDigitIndex))\n        lastDigitIndex += 1\n\
    \    }\n    return result", "    var result = [String]()\n    var index = 0\n\
    \    for number in arr {\n        if number > 9 {\n            number = number\
    \ - 10\n        }\n        result[index] = names[number]\n        index++\n  \
    \  }\n    return result", "    if arr.isEmpty {\n        return []\n    }\n  \
    \  let digits = arr.sorted()\n    let reversed = digits.reversed()\n    let ones\
    \ = reversed.filter{$0 % 10 == 1}\n    let tens = reversed.filter{$0 % 10 == 0}\n\
    \    let tensNames = tens.map{ String($0 / 10) }\n    let onesNames = ones.map{\
    \ String($0 / 10) }\n    let names = onesNames.append(tensNames)\n    return names",
  "    guard !arr.isEmpty else { return [] }\n    let ones = arr.filter{ $0 < 10 }\n\
    \    let tens = arr.filter{ $0 >= 10 }\n    let tensReversed = tens.reverse()\n\
    \    let onesReversed = ones.reverse()\n    let onesReversedString = onesReversed.map{\
    \ $0.description }\n    let tensReversedString = tensReversed.map{ $0.description\
    \ }\n    return onesReversedString.append(tensReversedString)", "    if arr.isEmpty()\
    \ {\n        return []\n    }\n    var result = [String]()\n    var last = 0\n\
    \    for i := 0; i < arr.count; i++ {\n        if arr[i] > 9 {\n            last\
    \ = i\n            break\n        }\n    }\n    for i := 0; i < arr.count; i++\
    \ {\n        if arr[i] > 9 {\n            result.append(arr[last])\n         \
    \   last += 1\n        } else {\n            result.append(arr[i])\n        }\n\
    \    }\n    return result", "    if arr.isEmpty {\n        return []\n    }\n\
    \    var result: [String] = []\n    var last: Int = 0\n    for num in arr {\n\
    \        if num > 9 {\n            last = num\n        } else {\n            if\
    \ last == 0 {\n                result.append(String(num))\n            } else\
    \ {\n                result.append(String(last))\n                result.append(String(num))\n\
    \            }\n            last = 0\n        }\n    }\n    if last != 0 {\n \
    \       result.append(String(last))\n    }\n    return result", "    if arr.isEmpty()\
    \ {\n        return []\n    }\n    let maxLen = arr.max()!\n    var result = [String]()\n\
    \    for num in arr {\n        let len = String(num).count\n        if len <=\
    \ maxLen {\n            result.append(String(num))\n        } else {\n       \
    \     let start = String(num).index(num.startIndex, offsetBy: maxLen - len)\n\
    \            let end = String(num).index(start, offsetBy: 0)\n            result.append(String(num[start..<end]))\n\
    \        }\n    }\n    return result", "    guard !arr.isEmpty else { return []\
    \ }\n    var result = [String]()\n    var i = 0\n    var j = 0\n    var k = arr.count\n\
    \    while i < k {\n        if arr[i] < 1 || arr[i] > 9 {\n            i += 1\n\
    \            continue\n        }\n        j += 1\n        result[j] = name[arr[i]]\n\
    \        i += 1\n    }\n    result.reverse()\n    return result", "    if arr.isEmpty\
    \ {\n        return []\n    }\n    let len = arr.count\n    let reversed = arr.reverse()\n\
    \    var result = [String]()\n    for i in 0..<len {\n        let digit = reversed[i]\n\
    \        if digit < 10 {\n            result.append(String(digit))\n        }\
    \ else {\n            let index = digit - 10\n            let name = oneDigitNames[index]\n\
    \            result.append(name)\n        }\n    }\n    return result", "    var\
    \ result = [String]()\n    for number in arr {\n        if number < 1 || number\
    \ > 9 {\n            continue\n        }\n        let index = number - 1\n   \
    \     result.append(names[index])\n    }\n    return result", "    var result\
    \ = [String]()\n    for num in arr {\n        if num < 1 || num > 9 {\n      \
    \      continue\n        }\n        switch num {\n        case 1:\n          \
    \  result.append(\"One\")\n        case 2:\n            result.append(\"Two\"\
    )\n        case 3:\n            result.append(\"Three\")\n        case 4:\n  \
    \          result.append(\"Four\")\n        case 5:\n            result.append(\"\
    Five\")\n        case 6:\n            result.append(\"Six\")\n        case 7:\n\
    \            result.append(\"Seven\")\n        case 8:\n            result.append(\"\
    Eight\")\n        case 9:\n            result.append(\"Nine\")\n        default:\n\
    \            continue\n        }\n    }\n    return result", "    guard !arr.isEmpty\
    \ else { return [] }\n    let ones = arr.filter{ $0 < 10 }\n    let tens = arr.filter{\
    \ $0 >= 10 }\n    let tensReversed = tens.reverse()\n    let onesReversed = ones.reverse()\n\
    \    let onesReversedString = onesReversed.map { String($0) }\n    let tensReversedString\
    \ = tensReversed.map { String($0) }\n    let reversedString = onesReversedString.append(tensReversedString)\n\
    \    let reversedStringArray = reversedString.map { String($0) }\n    return reversedStringArray",
  "    guard arr.count > 0 else {\n        return []\n    }\n\n    var result = [String]()\n\
    \    var index = 0\n    while index < arr.count {\n        let value = arr[index]\n\
    \        let digit = value % 10\n        let name = String(digit)\n        if\
    \ digit == 0 {\n            result.append(name)\n        } else {\n          \
    \  result.append(reverseName(name))\n        }\n        index += 1\n    }\n  \
    \  return result", "    if arr.isEmpty() {\n        return []\n    }\n    var\
    \ result = [String]()\n    var index = 0\n    for num in arr {\n        if num\
    \ > 9 {\n            index = index + 1\n            result[index] = String(num\
    \ - 10)\n        } else {\n            result[index] = String(num)\n        }\n\
    \    }\n    return result.reverse()", "    if arr.isEmpty {\n        return []\n\
    \    }\n    var result = [String]()\n    var index = 0\n    while index < arr.count\
    \ {\n        let value = arr[index]\n        if value < 1 || value > 9 {\n   \
    \         index += 1\n            continue\n        }\n        let digit = value\
    \ - 10\n        let name = digitToName(digit)\n        result.append(name)\n \
    \       index += 1\n    }\n    return result.reverse()", "    guard arr.count\
    \ > 0 else { return [] }\n    var result: [String] = []\n    var last = 0\n  \
    \  for num in arr {\n        if num < 1 || num > 9 {\n            continue\n \
    \       }\n        let digit = num - last\n        result.append(String(digit))\n\
    \        last = num\n    }\n    return result.reversed()", "    var result = [String]()\n\
    \    if arr.isEmpty {\n        return result\n    }\n    var i = 0\n    for number\
    \ in arr {\n        if number >= 1 && number <= 9 {\n            result.append(String(number))\n\
    \        } else {\n            result.append(String(number))\n        }\n    }\n\
    \    for number in arr {\n        if number >= 1 && number <= 9 {\n          \
    \  result[i] = \"One\"\n            i += 1\n        }\n        if number >= 10\
    \ && number <= 99 {\n            result[i] = \"Two\"\n            i += 1\n   \
    \     }\n        if number >= 100 && number <= 999 {\n            result[i] =\
    \ \"Three\"\n            i += 1\n        }\n        if number >= 1000 && number\
    \ <= 9999 {\n            result[i] = \"Four\"\n            i += 1\n        }\n\
    \        if number >= 10000 && number <= 99999 {\n            result[i] = \"Five\"\
    \n            i += 1\n        }\n        if number >= 100000 && number <= 999999\
    \ {\n            result[i] = \"Six\"\n            i += 1\n        }\n        if\
    \ number >= 1000000 && number <= 9999999 {\n            result[i] = \"Seven\"\n\
    \            i += 1\n        }\n        if number >= 10000000 && number <= 99999999\
    \ {\n            result[i] = \"Eight\"\n            i += 1\n        }\n      \
    \  if number >= 100000000 && number <= 999999999 {\n            result[i] = \"\
    Nine\"\n            i += 1\n        }\n    }\n    return result", "    if arr.isEmpty()\
    \ {\n        return []\n    }\n    var result = [String]()\n    var i = 0\n  \
    \  for num in arr {\n        if num > 0 && num < 10 {\n            result.append(digits[num])\n\
    \        } else {\n            result.append(digits[num - 10] + digits[num - 1])\n\
    \        }\n        i += 1\n    }\n    return result.reverse()", "    var result\
    \ = [String]()\n    if arr.isEmpty {\n        return result\n    }\n    let min\
    \ = min(arr)\n    let max = max(arr)\n    if min == max {\n        return arr\n\
    \    }\n    var i = 0\n    for num in arr {\n        if num == min {\n       \
    \     result.append(one[i % len(one)])\n            i += 1\n        } else if\
    \ num == max {\n            result.append(one[i % len(one)])\n            i +=\
    \ 1\n        } else {\n            result.append(two[num % len(two)])\n      \
    \  }\n    }\n    return result", "    if arr.isEmpty {\n        return []\n  \
    \  }\n    var result = [String]()\n    var current = 0\n    var last = 0\n   \
    \ for current < arr.count {\n        last = current\n        current = current\
    \ + 1\n        if current < arr.count {\n            if arr[current] == 1 {\n\
    \                result.append(\"One\")\n            }\n            if arr[current]\
    \ == 2 {\n                result.append(\"Two\")\n            }\n            if\
    \ arr[current] == 3 {\n                result.append(\"Three\")\n            }\n\
    \            if arr[current] == 4 {\n                result.append(\"Four\")\n\
    \            }\n            if arr[current] == 5 {\n                result.append(\"\
    Five\")\n            }\n            if arr[current] == 6 {\n                result.append(\"\
    Six\")\n            }\n            if arr[current] == 7 {\n                result.append(\"\
    Seven\")\n            }\n            if arr[current] == 8 {\n                result.append(\"\
    Eight\")\n            }\n            if arr[current] == 9 {\n                result.append(\"\
    Nine\")\n            }\n        }\n    }\n    if last == 0 {\n        return result\n\
    \    }\n    result.reverse()\n    for current in 0..<last {\n        result[current]\
    \ = result[current].capitalized\n    }\n    return result", "    guard arr.count\
    \ > 0 else { return [] }\n    let min = 1\n    let max = 9\n    var result = [String]()\n\
    \    for n in arr {\n        if min <= n && n <= max {\n            result.append(names[n\
    \ - 1])\n        }\n    }\n    return result.reverse()", "    guard arr.count\
    \ > 0 else { return [] }\n    \n    var result = [String]()\n    var i = 0\n \
    \   var j = 0\n    var k = arr.count\n    while i < k {\n        if arr[i] < 1\
    \ {\n            i += 1\n            continue\n        }\n        if arr[i] >\
    \ 9 {\n            i += 1\n            continue\n        }\n        if i == k\
    \ {\n            break\n        }\n        \n        let digit = arr[i]\n    \
    \    \n        if digit == 1 {\n            result.append(one)\n            i\
    \ += 1\n            continue\n        }\n        if digit == 2 {\n           \
    \ result.append(two)\n            i += 1\n            continue\n        }\n  \
    \      if digit == 3 {\n            result.append(three)\n            i += 1\n\
    \            continue\n        }\n        if digit == 4 {\n            result.append(four)\n\
    \            i += 1\n            continue\n        }\n        if digit == 5 {\n\
    \            result.append(five)\n            i += 1\n            continue\n \
    \       }\n        if digit == 6 {\n            result.append(six)\n         \
    \   i += 1\n            continue\n        }\n        if digit == 7 {\n       \
    \     result.append(seven)\n            i += 1\n            continue\n       \
    \ }\n        if digit == 8 {\n            result.append(eight)\n            i\
    \ += 1\n            continue\n        }\n        if digit == 9 {\n           \
    \ result.append(nine)\n            i += 1\n            continue\n        }\n \
    \       \n        i += 1\n    }\n    \n    return result.reversed()", "    if\
    \ arr.isEmpty {\n        return []\n    }\n\n    var result = [String]()\n   \
    \ var i = 0\n    var j = 0\n    var k = 0\n    var temp = 0\n    var temp2 = 0\n\
    \    var temp3 = 0\n    var temp4 = 0\n    var temp5 = 0\n    var temp6 = 0\n\
    \    var temp7 = 0\n    var temp8 = 0\n    var temp9 = 0\n\n    for i < arr.count\
    \ {\n        if arr[i] < 1 {\n            continue\n        }\n\n        if arr[i]\
    \ < 10 {\n            temp = \"\\(arr[i])\"\n        } else {\n            temp\
    \ = \"\\(arr[i]%10)\"\n        }\n\n        if temp < \"1\" {\n            temp2\
    \ = \"One\"\n        } else {\n            temp2 = \"Two\"\n        }\n\n    \
    \    if temp2 < \"1\" {\n            temp3 = \"One\"\n        } else {\n     \
    \       temp3 = \"Two\"\n        }\n\n        if temp3 < \"1\" {\n           \
    \ temp4 = \"One\"\n        } else {\n            temp4 = \"Two\"\n        }\n\n\
    \        if temp4 < \"1\" {\n            temp5 = \"One\"\n        } else {\n \
    \           temp5 = \"Two\"\n        }\n\n        if temp5 < \"1\" {\n       \
    \     temp6 = \"One\"\n        } else {\n            temp6 = \"Two\"\n       \
    \ }\n\n        if temp6 < \"1\" {\n            temp7 = \"One\"\n        } else\
    \ {\n            temp7 = \"Two\"\n        }\n\n        if temp7 < \"1\" {\n  \
    \          temp8 = \"One\"\n        } else {\n            temp8 = \"Two\"\n  \
    \      }\n\n        if temp8 < \"1\" {\n            temp9 = \"One\"\n        }\
    \ else {\n            temp9 = \"Two\"\n        }\n\n        if temp9 < \"1\" {\n\
    \            temp = \"One\"\n        } else {\n            temp = \"Two\"\n  \
    \      }\n\n        if temp < \"2\" {\n            temp2 = \"One\"\n        }\
    \ else {\n            temp2 = \"Two\"\n        }\n\n        if temp2 < \"2\" {\n\
    \            temp3 = \"One\"\n        } else {\n            temp3 = \"Two\"\n\
    \        }\n\n        if temp3 < \"2\" {\n            temp4 = \"One\"\n      \
    \  } else {\n            temp4 = \"Two\"\n        }\n\n        if temp4 < \"2\"\
    \ {\n            temp5 = \"One\"\n        } else {\n            temp5 = \"Two\"\
    \n        }\n\n        if temp5 < \"2\" {\n            temp6 = \"One\"\n     \
    \   } else {\n            temp6 = \"Two\"\n        }\n\n        if temp6 < \"\
    2\" {\n            temp7 = \"One\"\n        } else {\n            temp7 = \"Two\"\
    \n        }\n\n        if temp7 < \"2\" {\n            temp8 = \"One\"\n     \
    \   } else {\n            temp8 = \"Two\"\n        }\n\n        if temp8 < \"\
    2\" {\n            temp9 = \"One\"\n        } else {\n            temp9 = \"Two\"",
  "    guard arr.count > 0 else { return [] }\n    \n    var result: [String] = []\n\
    \    \n    for i in 0 ..< arr.count {\n        let value = arr[i]\n        \n\
    \        if value < 1 || value > 9 {\n            continue\n        }\n      \
    \  \n        let digit = String(value - 1)\n        \n        if digit == \"0\"\
    \ {\n            digit = \"One\"\n        } else if digit == \"1\" {\n       \
    \     digit = \"Two\"\n        } else if digit == \"2\" {\n            digit =\
    \ \"Three\"\n        } else if digit == \"3\" {\n            digit = \"Four\"\n\
    \        } else if digit == \"4\" {\n            digit = \"Five\"\n        } else\
    \ if digit == \"5\" {\n            digit = \"Six\"\n        } else if digit ==\
    \ \"6\" {\n            digit = \"Seven\"\n        } else if digit == \"7\" {\n\
    \            digit = \"Eight\"\n        } else if digit == \"8\" {\n         \
    \   digit = \"Nine\"\n        }\n        \n        result.append(digit)\n    }\n\
    \    \n    return result", "    if arr.isEmpty {\n        return []\n    }\n \
    \   var result = [String]()\n    var i = 0\n    for num in arr {\n        if num\
    \ < 1 || num > 9 {\n            continue\n        }\n        i += 1\n        if\
    \ i == 1 {\n            result.append(String(num))\n        } else {\n       \
    \     result.append(String(num))\n            result.append(String(i))\n     \
    \   }\n    }\n    return result.reverse()", "    if arr.isEmpty {\n        return\
    \ []\n    }\n    var result: [String] = []\n    var last: Int = 0\n    for num\
    \ in arr {\n        if num > 9 {\n            last = num\n        } else {\n \
    \           if last == 0 {\n                result.append(String(num))\n     \
    \       } else {\n                result.append(String(last))\n              \
    \  result.append(String(num))\n            }\n            last = 0\n        }\n\
    \    }\n    if last != 0 {\n        result.append(String(last))\n    }\n    return\
    \ result", "    guard arr.count > 0 else { return [] }\n    let min = arr[0]\n\
    \    let max = arr[arr.count - 1]\n    var result = [String]()\n    for n in arr\
    \ {\n        if min <= n && n <= max {\n            result.append(nameForNumber(n))\n\
    \        }\n    }\n    return result.reversed()", "    if arr.isEmpty {\n    \
    \    return []\n    }\n\n    var result = [String]()\n    var index = 0\n    var\
    \ last = 0\n    var lastDigit = 0\n    var lastDigitIndex = 0\n\n    for index\
    \ in 0..<arr.count {\n        let digit = arr[index]\n        if digit < 10 {\n\
    \            result.append(String(digit))\n        } else {\n            lastDigit\
    \ = digit\n            lastDigitIndex = index\n        }\n    }\n\n    if lastDigit\
    \ == 0 {\n        return result\n    }\n\n    let lastDigitName = digitName[lastDigit]\n\
    \    var reversedArray = [Int]()\n\n    for index in 0..<arr.count {\n       \
    \ let digit = arr[index]\n        if digit < 10 {\n            reversedArray.append(digit)\n\
    \        } else {\n            if digit == lastDigit {\n                reversedArray.append(lastDigit)\n\
    \            } else {\n                reversedArray.append(digit - 10)\n    \
    \        }\n        }\n    }\n\n    for index in 0..<reversedArray.count {\n \
    \       let digit = reversedArray[index]\n        if digit < 10 {\n          \
    \  result.append(String(digit))\n        } else {\n            result.append(digitName[digit])\n\
    \        }\n    }\n\n    return result", "    guard arr.count > 0 else { return\
    \ [] }\n    var result = [String]()\n    var i = 0\n    for num in arr {\n   \
    \     if num < 1 || num > 9 {\n            continue\n        }\n        result[i++]\
    \ = \"\\(num)\" // \"\\(num)\" is a string interpolation\n    }\n    result.reverse()\n\
    \    for char in result {\n        if char == \"One\" || char == \"Two\" || char\
    \ == \"Three\" || char == \"Four\" ||\n            char == \"Five\" || char ==\
    \ \"Six\" || char == \"Seven\" || char == \"Eight\" ||\n            char == \"\
    Nine\" {\n            continue\n        }\n        char = char.stringByReplacingOccurrencesOfString(\"\
    \ \", withString: \"\")\n        char = char.stringByReplacingOccurrencesOfString(\"\
    -\", withString: \"\")\n        char = char.stringByReplacingOccurrencesOfString(\"\
    ,\", withString: \"\")\n        char = char.stringByReplacingOccurrencesOfString(\"\
    .\", withString: \"\")\n        char = char.stringByReplacingOccurrencesOfString(\"\
    0\", withString: \"\")\n        char = char.stringByReplacingOccurrencesOfString(\"\
    1\", withString: \"One\")\n        char = char.stringByReplacingOccurrencesOfString(\"\
    2\", withString: \"Two\")\n        char = char.stringByReplacingOccurrencesOfString(\"\
    3\", withString: \"Three\")\n        char = char.stringByReplacingOccurrencesOfString(\"\
    4\", withString: \"Four\")\n        char = char.stringByReplacingOccurrencesOfString(\"\
    5\", withString: \"Five\")\n        char = char.stringByReplacingOccurrencesOfString(\"\
    6\", withString: \"Six\")\n        char = char.stringByReplacingOccurrencesOfString(\"\
    7\", withString: \"Seven\")\n        char = char.stringByReplacingOccurrencesOfString(\"\
    8\", withString: \"Eight\")\n        char = char.stringByReplacingOccurrencesOfString(\"\
    9\", withString: \"Nine\")\n    }\n    return result", "    guard !arr.isEmpty\
    \ else { return [] }\n    var result = [String]()\n    var index = 0\n    while\
    \ index < arr.count {\n        let value = arr[index]\n        if value < 1 ||\
    \ value > 9 {\n            index += 1\n            continue\n        }\n     \
    \   let digit = value - 10\n        result.append(names[index])\n        index\
    \ += 1\n    }\n    return result", "    guard !arr.isEmpty else { return [] }\n\
    \    let ones = arr.filter{ $0 < 10 }\n    let tens = arr.filter{ $0 >= 10 }\n\
    \    let tensReversed = tens.reverse()\n    let onesReversed = ones.reverse()\n\
    \    let onesReversedString = onesReversed.map { $0.description }\n    let tensReversedString\
    \ = tensReversed.map { $0.description }\n    return onesReversedString.append(tensReversedString)",
  "    guard arr.count > 0 else {\n        return []\n    }\n    var result = [String]()\n\
    \    var index = 0\n    while index < arr.count {\n        let value = arr[index]\n\
    \        switch value {\n        case 1:\n            result.append(\"One\")\n\
    \        case 2:\n            result.append(\"Two\")\n        case 3:\n      \
    \      result.append(\"Three\")\n        case 4:\n            result.append(\"\
    Four\")\n        case 5:\n            result.append(\"Five\")\n        case 6:\n\
    \            result.append(\"Six\")\n        case 7:\n            result.append(\"\
    Seven\")\n        case 8:\n            result.append(\"Eight\")\n        case\
    \ 9:\n            result.append(\"Nine\")\n        default:\n            break\n\
    \        }\n        index++\n    }\n    return result.reversed()", "    if arr.isEmpty\
    \ {\n        return []\n    }\n    var result: [String] = []\n    var last = 0\n\
    \    for num in arr {\n        if num < 1 || num > 9 {\n            continue\n\
    \        }\n        if num == last {\n            continue\n        }\n      \
    \  result.append(String(num))\n        last = num\n    }\n    return result.reverse().map\
    \ { name -> String in\n        if let num = Int(name) {\n            return String(num)\n\
    \        }\n        return name\n    }", "    guard arr.count > 0 else { return\
    \ [] }\n    let maxLength = arr.max()!\n    var result = [String]()\n    for num\
    \ in arr {\n        let length = String(num).count\n        if length == 1 {\n\
    \            result.append(String(num))\n        } else if length == 2 {\n   \
    \         result.append(String(num))\n            result.append(String(num))\n\
    \        } else if length == 3 {\n            result.append(String(num))\n   \
    \         result.append(String(num))\n            result.append(String(num))\n\
    \        } else if length == 4 {\n            result.append(String(num))\n   \
    \         result.append(String(num))\n            result.append(String(num))\n\
    \            result.append(String(num))\n        } else if length == 5 {\n   \
    \         result.append(String(num))\n            result.append(String(num))\n\
    \            result.append(String(num))\n            result.append(String(num))\n\
    \            result.append(String(num))\n        } else if length == 6 {\n   \
    \         result.append(String(num))\n            result.append(String(num))\n\
    \            result.append(String(num))\n            result.append(String(num))\n\
    \            result.append(String(num))\n            result.append(String(num))\n\
    \            result.append(String(num))\n        } else if length == 7 {\n   \
    \         result.append(String(num))\n            result.append(String(num))\n\
    \            result.append(String(num))\n            result.append(String(num))\n\
    \            result.append(String(num))\n            result.append(String(num))\n\
    \            result.append(String(num))\n            result.append(String(num))\n\
    \        } else if length == 8 {\n            result.append(String(num))\n   \
    \         result.append(String(num))\n            result.append(String(num))\n\
    \            result.append(String(num))\n            result.append(String(num))\n\
    \            result.append(String(num))\n            result.append(String(num))\n\
    \            result.append(String(num))\n            result.append(String(num))\n\
    \            result.append(String(num))\n        } else if length == 9 {\n   \
    \         result.append(String(num))\n            result.append(String(num))\n\
    \            result.append(String(num))\n            result.append(String(num))\n\
    \            result.append(String(num))\n            result.append(String(num))\n\
    \            result.append(String(num))\n            result.append(String(num))\n\
    \            result.append(String(num))\n            result.append(String(num))\n\
    \            result.append(String(num))\n            result.append(String(num))\n\
    \            result.append(String(num))\n            result.append(String(num))\n\
    \            result.append(String(num))\n            result.append(String(num))\n\
    \            result.append(String(num))\n            result.append(String(num))\n\
    \            result.append(String(num))\n            result.append(String(num))\n\
    \            result.append(String(num))\n            result.append(String(num))\n\
    \            result.append(String(num))\n            result.append(String(num))\n\
    \            result.append(String(num))\n            result.append(String(num))\n\
    \            result.append(String(num))\n            result.append(String(num))\n\
    \            result.append(String(num))", "    if arr.isEmpty {\n        return\
    \ []\n    }\n    var result = [String]()\n    var i = 0\n    for num in arr {\n\
    \        if num < 1 || num > 9 {\n            continue\n        }\n        result.append(String(num))\n\
    \        i += 1\n    }\n    for _ in 0..<i {\n        result.append(String(arr[arr.index(arr.startIndex,\
    \ offsetBy: i)]))\n    }\n    return result", "    var result = [String]()\n \
    \   if arr.isEmpty {\n        return result\n    }\n    var i = 0\n    for num\
    \ in arr {\n        if num < 1 || num > 9 {\n            continue\n        }\n\
    \        if i == 0 {\n            result.append(String(num))\n        } else {\n\
    \            result.append(String(num))\n            result.append(\" as \\(name[num\
    \ - 1])\")\n        }\n        i += 1\n    }\n    return result", "    var result\
    \ = [String]()\n    var index = 0\n    for number in arr {\n        if number\
    \ >= 1 && number <= 9 {\n            result[index] = String(number)\n        \
    \    index++\n        }\n    }\n    if index == 0 {\n        return result\n \
    \   }\n    for number in arr.reverse() {\n        if number >= 1 && number <=\
    \ 9 {\n            result[index] = String(number)\n            index++\n     \
    \   }\n    }\n    return result", "    if arr.isEmpty {\n        return []\n \
    \   }\n    var result = [String]()\n    var i = 0\n    for num in arr {\n    \
    \    if num >= 1 && num <= 9 {\n            result.append(name[num])\n       \
    \ } else {\n            result.append(name[num - 1])\n        }\n        i +=\
    \ 1\n    }\n    return result", "    if arr.isEmpty {\n        return []\n   \
    \ }\n    var result = [String]()\n    var index = 0\n    var last = 0\n    for\
    \ number in arr {\n        if number == last {\n            continue\n       \
    \ }\n        last = number\n        result[index] = names[number]\n        index++\n\
    \    }\n    return result", "    guard !arr.isEmpty else { return [] }\n    var\
    \ result: [String] = []\n    var index = 0\n    while index < arr.count {\n  \
    \      let value = arr[index]\n        if value < 1 || value > 9 {\n         \
    \   index += 1\n            continue\n        }\n        let digit = value - 10\n\
    \        let name = String(digit)\n        result.append(name)\n        index\
    \ += 1\n    }\n    return result", "    if arr.isEmpty {\n        return nil\n\
    \    }\n    var result = [String]()\n    var i = 0\n    for num in arr {\n   \
    \     if num < 1 || num > 9 {\n            continue\n        }\n        if i ==\
    \ 0 {\n            result.append(String(num))\n        } else {\n            result.append(String(num))\n\
    \            result.append(\" \")\n        }\n        i += 1\n    }\n    return\
    \ result.reverse().map { $0.substring($0.startIndex, $0.endIndex) }", "    guard\
    \ arr.count > 0 else { return [] }\n    let min = 1\n    let max = 9\n    var\
    \ result = [String]()\n    for n in arr {\n        if n < min || n > max {\n \
    \           continue\n        }\n        let digit = String(n - min)\n       \
    \ result.append(name[digit])\n    }\n    return result", "    if arr.isEmpty {\n\
    \        return []\n    }\n\n    var result: [String] = []\n    var i = 0\n  \
    \  for num in arr {\n        if num < 1 || num > 9 {\n            continue\n \
    \       }\n        result.append(String(num))\n        i += 1\n    }\n    for\
    \ _ in 0..<i {\n        result.append(String(arr[i]))\n    }\n    return result",
  "    var result = [String]()\n    if arr.isEmpty {\n        return result\n    }\n\
    \    let min = arr.min()!\n    let max = arr.max()!\n    if min == max {\n   \
    \     return arr\n    }\n    var i = 0\n    while i < arr.count {\n        if\
    \ arr[i] == min {\n            result.append(String(arr[i]))\n            i +=\
    \ 1\n        } else if arr[i] == max {\n            result.append(String(arr[i]))\n\
    \            i += 1\n        } else {\n            result.append(String(arr[i]))\n\
    \            i += 1\n        }\n    }\n    return result", "    guard !arr.isEmpty\
    \ else { return [] }\n    let min = 1\n    let max = 9\n    var result = [String]()\n\
    \    for n in arr {\n        let index = min + n - 1\n        result.append(names[index])\n\
    \    }\n    return result.reversed()", "    if arr.isEmpty {\n        return []\n\
    \    }\n    var result = [String]()\n    var index = 0\n    var last = 0\n   \
    \ for number in arr {\n        if number == 1 {\n            result.append(One[index])\n\
    \            index += 1\n            last = number\n        } else if number ==\
    \ 2 {\n            result.append(Two[index])\n            index += 1\n       \
    \     last = number\n        } else if number == 3 {\n            result.append(Three[index])\n\
    \            index += 1\n            last = number\n        } else if number ==\
    \ 4 {\n            result.append(Four[index])\n            index += 1\n      \
    \      last = number\n        } else if number == 5 {\n            result.append(Five[index])\n\
    \            index += 1\n            last = number\n        } else if number ==\
    \ 6 {\n            result.append(Six[index])\n            index += 1\n       \
    \     last = number\n        } else if number == 7 {\n            result.append(Seven[index])\n\
    \            index += 1\n            last = number\n        } else if number ==\
    \ 8 {\n            result.append(Eight[index])\n            index += 1\n     \
    \       last = number\n        } else if number == 9 {\n            result.append(Nine[index])\n\
    \            index += 1\n            last = number\n        }\n    }\n    if last\
    \ == 0 {\n        return arr\n    }\n    result.append(One[index])\n    return\
    \ result", "    guard !arr.isEmpty else { return [] }\n    let min = min(arr)\n\
    \    let max = max(arr)\n    var result = [String]()\n    for n in arr {\n   \
    \     if n < min || n > max {\n            continue\n        }\n        let digit\
    \ = Int(log2(n))\n        result.append(digitNames[digit])\n    }\n    return\
    \ result.reversed()", "    if arr.isEmpty {\n        return []\n    }\n    var\
    \ result = [String]()\n    var index = 0\n    var last = 0\n    var lastDigit\
    \ = 0\n    for digit in arr {\n        if digit > 9 {\n            lastDigit =\
    \ digit\n            break\n        }\n        if digit > lastDigit {\n      \
    \      lastDigit = digit\n        }\n    }\n    for digit in arr {\n        if\
    \ digit > lastDigit {\n            result += [\"One\", \"Two\", \"Three\", \"\
    Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"][digit-lastDigit]\n\
    \        } else {\n            result += [String](repeating: String(), count:\
    \ digit-lastDigit)\n        }\n        last = digit\n    }\n    return result",
  "    if arr.isEmpty {\n        return []\n    }\n    var result = [String]()\n \
    \   var i = 0\n    for num in arr {\n        if num < 1 || num > 9 {\n       \
    \     continue\n        }\n        if i == 0 {\n            result.append(String(num))\n\
    \        } else {\n            result.append(String(num))\n            result.append(\"\
    \ \")\n        }\n        i += 1\n    }\n    result.reverse()\n    return result",
  "    var result: [String] = []\n    var last = 0\n    for num in arr {\n       \
    \ if num < 1 || num > 9 {\n            continue\n        }\n        last = num\n\
    \        result.append(String(last))\n    }\n    if last > 0 {\n        result.append(String(last))\n\
    \    }\n    return result", "    guard arr.count > 0 else { return [] }\n    let\
    \ min = 1\n    let max = 9\n    var result = [String]()\n    for n in arr {\n\
    \        if n >= min && n <= max {\n            result.append(names[n])\n    \
    \    }\n    }\n    return result.reversed()", "    var result = [String]()\n \
    \   var i = 0\n    for num in arr {\n        if num < 1 || num > 9 {\n       \
    \     continue\n        }\n        if i == 0 {\n            result.append(String(num))\n\
    \        } else {\n            result.append(String(num))\n            result.append(\"\
    \ as \\(name[num - 1])\")\n        }\n        i += 1\n    }\n    return result",
  "    guard arr.count > 0 else { return [] }\n    let max = arr.max()!\n    let min\
    \ = arr.min()!\n    var result = [String]()\n    for i in 0..<arr.count {\n  \
    \      if arr[i] == min {\n            result.append(String(format: \"One\", arguments:\
    \ [arr[i]]))\n        } else if arr[i] == max {\n            result.append(String(format:\
    \ \"Nine\", arguments: [arr[i]]))\n        } else {\n            result.append(String(format:\
    \ \"%@\", arguments: [arr[i]]))\n        }\n    }\n    return result", "    guard\
    \ arr.count > 0 else { return [] }\n    let min = min(arr)\n    let max = max(arr)\n\
    \    var result = [String]()\n    for n in arr {\n        let index = n - min\n\
    \        result.append(String(index))\n    }\n    for n in arr {\n        let\
    \ index = n - max\n        result.append(String(index))\n    }\n    return result",
  "    if arr.isEmpty() {\n        return []\n    }\n    var result = [String]()\n\
    \    var i = 0\n    for n in arr {\n        if n < 1 || n > 9 {\n            continue\n\
    \        }\n        let digit = String(n)\n        if i == 0 {\n            result.append(digit)\n\
    \        } else {\n            result.append(digit.reversed())\n        }\n  \
    \      i += 1\n    }\n    return result", "    guard !arr.isEmpty else { return\
    \ [] }\n    let min = min(arr)\n    let max = max(arr)\n    var result = [String]()\n\
    \    for n in arr {\n        if n < min || n > max {\n            continue\n \
    \       }\n        let index = n - min\n        result.append(names[index])\n\
    \    }\n    return result", "    if arr.isEmpty {\n        return []\n    }\n\
    \    var result = [String]()\n    var i = 0\n    for num in arr {\n        if\
    \ num > 9 {\n            i += 10\n            continue\n        }\n        i +=\
    \ 1\n        if i == 1 {\n            result.append(String(num))\n        } else\
    \ {\n            result.append(String(num))\n            result.append(String(i\
    \ - 1))\n        }\n    }\n    return result", "    guard arr.count > 0 else {\
    \ return [] }\n    var result = [String]()\n    var i = 0\n    for n in arr {\n\
    \        if n > 0 && n < 10 {\n            result.append(String(format: \"%d\\\
    t%s\", n, names[n]))\n        } else {\n            result.append(String(format:\
    \ \"%d\\t%s\", n, \"\"))\n        }\n        i += 1\n    }\n    return result",
  "    var result = [String]()\n    for num in arr {\n        switch num {\n     \
    \   case 1:\n            result.append(\"One\")\n        case 2:\n           \
    \ result.append(\"Two\")\n        case 3:\n            result.append(\"Three\"\
    )\n        case 4:\n            result.append(\"Four\")\n        case 5:\n   \
    \         result.append(\"Five\")\n        case 6:\n            result.append(\"\
    Six\")\n        case 7:\n            result.append(\"Seven\")\n        case 8:\n\
    \            result.append(\"Eight\")\n        case 9:\n            result.append(\"\
    Nine\")\n        default:\n            continue\n        }\n    }\n    return\
    \ result", "    if arr.isEmpty {\n        return []\n    }\n    var result: [String]\
    \ = []\n    var last = 0\n    for num in arr {\n        if num > 9 {\n       \
    \     last = num\n        } else {\n            if last == 0 {\n             \
    \   result.append(String(num))\n            } else {\n                result.append(String(last))\n\
    \                result.append(String(num))\n            }\n            last =\
    \ 0\n        }\n    }\n    if last != 0 {\n        result.append(String(last))\n\
    \    }\n    return result", "    if arr.isEmpty {\n        return []\n    }\n\
    \    var result = [String]()\n    var index = 0\n    var last = 0\n    for num\
    \ in arr {\n        if num < 1 || num > 9 {\n            continue\n        }\n\
    \        if last < num {\n            result.append(String(arr[last]))\n     \
    \   }\n        result.append(String(num))\n        last = num + 1\n    }\n   \
    \ if last < 9 {\n        result.append(String(arr[last]))\n    }\n    return result",
  "    var result = [String]()\n    for number in arr {\n        switch number {\n\
    \        case 1:\n            result.append(\"One\")\n        case 2:\n      \
    \      result.append(\"Two\")\n        case 3:\n            result.append(\"Three\"\
    )\n        case 4:\n            result.append(\"Four\")\n        case 5:\n   \
    \         result.append(\"Five\")\n        case 6:\n            result.append(\"\
    Six\")\n        case 7:\n            result.append(\"Seven\")\n        case 8:\n\
    \            result.append(\"Eight\")\n        case 9:\n            result.append(\"\
    Nine\")\n        default:\n            break\n        }\n    }\n    return result",
  "    guard !arr.isEmpty else { return [] }\n    var result = [String]()\n    var\
    \ i = 0\n    for n in arr {\n        if n > 9 {\n            result.append(String(n\
    \ - 10))\n        } else {\n            result.append(String(n))\n        }\n\
    \        i += 1\n    }\n    return result.reverse()", "    guard arr.count > 0\
    \ else { return [] }\n    let min = min(arr)\n    let max = max(arr)\n    var\
    \ result = [String]()\n    for num in arr {\n        let index = num - min\n \
    \       result.append(String(index))\n    }\n    for num in arr {\n        let\
    \ index = num - max\n        result.append(String(index))\n    }\n    return result",
  "    if arr.isEmpty {\n        return []\n    }\n    let digits = arr.sorted()\n\
    \    let reversed = digits.reversed()\n    let ones = reversed.prefix(9)\n   \
    \ let tens = reversed.suffix(9)\n    let names = ones + tens.map { $0.isOdd ?\
    \ \"One\" : \"Ten\" }\n    return names", "    var result = [String]()\n    for\
    \ number in arr {\n        switch number {\n        case 1:\n            result.append(one)\n\
    \        case 2:\n            result.append(two)\n        case 3:\n          \
    \  result.append(three)\n        case 4:\n            result.append(four)\n  \
    \      case 5:\n            result.append(five)\n        case 6:\n           \
    \ result.append(six)\n        case 7:\n            result.append(seven)\n    \
    \    case 8:\n            result.append(eight)\n        case 9:\n            result.append(nine)\n\
    \        default:\n            continue\n        }\n    }\n    return result",
  "    if arr.isEmpty {\n        return []\n    }\n    var result = [String]()\n \
    \   var index = 0\n    for num in arr {\n        if num >= 1 && num <= 9 {\n \
    \           result[index] = String(num)\n            index++\n        }\n    }\n\
    \    return result.reverse().map { $0.replaceFirst(\"^0\", \"\") }", "    guard\
    \ arr.count > 0 else {\n        return []\n    }\n    var result = [String]()\n\
    \    var index = 0\n    var last = 0\n    var lastDigit = 0\n    var lastDigitIndex\
    \ = 0\n    for index in 0..<arr.count {\n        let digit = arr[index]\n    \
    \    if digit > 9 {\n            lastDigit = digit\n            lastDigitIndex\
    \ = index\n        }\n        if digit > 0 {\n            if digit > last {\n\
    \                last = digit\n                lastDigit = digit\n           \
    \     lastDigitIndex = index\n            }\n        }\n    }\n    if lastDigit\
    \ > 0 {\n        result.insert(lastDigitIndex, String(lastDigit))\n    }\n   \
    \ if lastDigit < 9 {\n        result.insert(lastDigitIndex + 1, String(lastDigit))\n\
    \    }\n    if arr.count > 0 {\n        let firstDigit = arr[0]\n        if firstDigit\
    \ > 9 {\n            lastDigit = firstDigit\n            lastDigitIndex = 0\n\
    \        }\n        if firstDigit > 0 {\n            if firstDigit > last {\n\
    \                last = firstDigit\n                lastDigit = firstDigit\n \
    \               lastDigitIndex = 0\n            }\n        }\n        if lastDigit\
    \ > 0 {\n            result.insert(lastDigitIndex, String(lastDigit))\n      \
    \  }\n        if lastDigit < 9 {\n            result.insert(lastDigitIndex + 1,\
    \ String(lastDigit))\n        }\n    }\n    return result", "    var result =\
    \ [String]()\n    for number in arr {\n        if number >= 1 && number <= 9 {\n\
    \            result.append(name[number])\n        } else {\n            result.append(String(number))\n\
    \        }\n    }\n    return result", "    guard !arr.isEmpty else { return []\
    \ }\n    var result = [String]()\n    var last = 0\n    for num in arr {\n   \
    \     if num > 9 {\n            last = num\n        } else {\n            if last\
    \ != 0 {\n                result.append(String(last))\n            }\n       \
    \     result.append(String(num))\n            last = 0\n        }\n    }\n   \
    \ if last != 0 {\n        result.append(String(last))\n    }\n    return result",
  "    if arr.isEmpty {\n        return []\n    }\n    var result = [String]()\n \
    \   var index = 0\n    for number in arr {\n        if number < 1 || number >\
    \ 9 {\n            continue\n        }\n        let digit = String(number)\n \
    \       if index == 0 {\n            result.append(digit)\n        } else {\n\
    \            result[index] = digit\n        }\n        index++\n    }\n    return\
    \ result.reversed()", "    if arr.isEmpty {\n        return []\n    }\n\n    var\
    \ result = [String]()\n    var last = 0\n    for num in arr {\n        if num\
    \ > 9 {\n            last = num\n        } else {\n            if last == 0 {\n\
    \                result.append(String(num))\n            } else {\n          \
    \      result.append(String(last))\n                result.append(String(num))\n\
    \            }\n        }\n    }\n    return result.reverse()", "    if arr.isEmpty\
    \ {\n        return []\n    }\n    var result = [String]()\n    var i = 0\n  \
    \  var j = 0\n    for k in arr {\n        if k == 1 {\n            result.append(One)\n\
    \        } else if k == 2 {\n            result.append(Two)\n        } else if\
    \ k == 3 {\n            result.append(Three)\n        } else if k == 4 {\n   \
    \         result.append(Four)\n        } else if k == 5 {\n            result.append(Five)\n\
    \        } else if k == 6 {\n            result.append(Six)\n        } else if\
    \ k == 7 {\n            result.append(Seven)\n        } else if k == 8 {\n   \
    \         result.append(Eight)\n        } else if k == 9 {\n            result.append(Nine)\n\
    \        } else {\n            result.append(String(k))\n        }\n        if\
    \ j == i {\n            j = 0\n            i += 1\n        }\n    }\n    return\
    \ result.reverse()", "    var result = [String]()\n    var i = 0\n    for n in\
    \ arr {\n        if n >= 1 && n <= 9 {\n            result.append(name[n - 1])\n\
    \        } else {\n            result.append(String(format: \"%#d\", n))\n   \
    \     }\n        i += 1\n    }\n    return result", "    if arr.isEmpty {\n  \
    \      return []\n    }\n    var result = [String]()\n    var last = 0\n    for\
    \ num in arr {\n        if num > 9 {\n            last = num\n        } else {\n\
    \            if last > 0 {\n                result.append(\"\\(last)\")\n    \
    \        }\n            result.append(\"\\(num)\")\n            last = num\n \
    \       }\n    }\n    if last > 0 {\n        result.append(\"\\(last)\")\n   \
    \ }\n    return result", "    if arr.isEmpty {\n        return []\n    }\n   \
    \ var result = [String]()\n    var last = 0\n    for num in arr {\n        if\
    \ num < 1 || num > 9 {\n            continue\n        }\n        if num == last\
    \ {\n            continue\n        }\n        last = num\n        result.append(String(num))\n\
    \    }\n    return result.reversed()", "    guard !arr.isEmpty else { return []\
    \ }\n    var result: [String] = []\n    var last: Int = 0\n    for num in arr\
    \ {\n        if num > 9 {\n            last = num\n        } else {\n        \
    \    if last > 0 {\n                result.append(String(last))\n            }\n\
    \            result.append(String(num))\n            last = 0\n        }\n   \
    \ }\n    if last > 0 {\n        result.append(String(last))\n    }\n    return\
    \ result", "    if arr.isEmpty() {\n        return []\n    }\n    var result =\
    \ [String]()\n    var i = 0\n    for num in arr {\n        if num < 1 || num >\
    \ 9 {\n            continue\n        }\n        if i == 0 {\n            result.append(String(num))\n\
    \        } else {\n            result.append(String(num))\n            result.append(\"\
    \ \")\n        }\n        i += 1\n    }\n    return result.reverse().map { $0.substring($0.startIndex,\
    \ $0.endIndex) }", "    var result = [String]()\n    for num in arr {\n      \
    \  switch num {\n        case 1:\n            result.append(\"One\")\n       \
    \ case 2:\n            result.append(\"Two\")\n        case 3:\n            result.append(\"\
    Three\")\n        case 4:\n            result.append(\"Four\")\n        case 5:\n\
    \            result.append(\"Five\")\n        case 6:\n            result.append(\"\
    Six\")\n        case 7:\n            result.append(\"Seven\")\n        case 8:\n\
    \            result.append(\"Eight\")\n        case 9:\n            result.append(\"\
    Nine\")\n        default:\n            break\n        }\n    }\n    return result",
  "    guard arr.count > 0 else { return [] }\n    var result = [String]()\n    var\
    \ i = 0\n    var j = 0\n    for _ in arr {\n        if i == 0 {\n            result.append(String(arr[j]))\n\
    \            j++\n            continue\n        }\n        if arr[j] < 1 {\n \
    \           result.append(String(arr[j]))\n            j++\n            continue\n\
    \        }\n        if arr[j] > 9 {\n            result.append(String(arr[j]))\n\
    \            j++\n            continue\n        }\n        if arr[j] == 1 {\n\
    \            result.append(String(arr[j]))\n            j++\n            continue\n\
    \        }\n        if arr[j] == 2 {\n            result.append(String(arr[j]))\n\
    \            j++\n            continue\n        }\n        if arr[j] == 3 {\n\
    \            result.append(String(arr[j]))\n            j++\n            continue\n\
    \        }\n        if arr[j] == 4 {\n            result.append(String(arr[j]))\n\
    \            j++\n            continue\n        }\n        if arr[j] == 5 {\n\
    \            result.append(String(arr[j]))\n            j++\n            continue\n\
    \        }\n        if arr[j] == 6 {\n            result.append(String(arr[j]))\n\
    \            j++\n            continue\n        }\n        if arr[j] == 7 {\n\
    \            result.append(String(arr[j]))\n            j++\n            continue\n\
    \        }\n        if arr[j] == 8 {\n            result.append(String(arr[j]))\n\
    \            j++\n            continue\n        }\n        if arr[j] == 9 {\n\
    \            result.append(String(arr[j]))\n            j++\n            continue\n\
    \        }\n    }\n    return result", "    if arr.isEmpty {\n        return []\n\
    \    }\n    var result = [String]()\n    var i = 0\n    var j = 0\n    var len\
    \ = arr.count\n    for _ in 0..<len {\n        if arr[i] < 1 || arr[i] > 9 {\n\
    \            continue\n        }\n        if i == 0 {\n            result.append(String(arr[i]))\n\
    \        } else {\n            if j == 0 {\n                result.append(String(arr[i]))\n\
    \            } else {\n                result.append(String(arr[i]) + \", \" +\
    \ String(arr[j]))\n            }\n        }\n        i += 1\n        j += 1\n\
    \    }\n    return result", "    if arr.isEmpty {\n        return []\n    }\n\
    \    var result = [String]()\n    var i = 0\n    for num in arr {\n        if\
    \ num < 1 || num > 9 {\n            continue\n        }\n        let digit = String(num)\n\
    \        result[i++] = digit\n    }\n    return result.reverse().map { digit ->\
    \ String in\n        switch digit {\n        case \"0\":\n            return \"\
    Zero\"\n        case \"1\":\n            return \"One\"\n        case \"2\":\n\
    \            return \"Two\"\n        case \"3\":\n            return \"Three\"\
    \n        case \"4\":\n            return \"Four\"\n        case \"5\":\n    \
    \        return \"Five\"\n        case \"6\":\n            return \"Six\"\n  \
    \      case \"7\":\n            return \"Seven\"\n        case \"8\":\n      \
    \      return \"Eight\"\n        case \"9\":\n            return \"Nine\"\n  \
    \      default:\n            return digit\n        }\n    }", "    var result\
    \ = [String]()\n    var i = 0\n    for n in arr {\n        if n < 1 || n > 9 {\n\
    \            continue\n        }\n        i += 1\n        if i == 1 {\n      \
    \      result.append(String(format: \"One\", n))\n        } else if i == 2 {\n\
    \            result.append(String(format: \"Two\", n))\n        } else if i ==\
    \ 3 {\n            result.append(String(format: \"Three\", n))\n        } else\
    \ if i == 4 {\n            result.append(String(format: \"Four\", n))\n      \
    \  } else if i == 5 {\n            result.append(String(format: \"Five\", n))\n\
    \        } else if i == 6 {\n            result.append(String(format: \"Six\"\
    , n))\n        } else if i == 7 {\n            result.append(String(format: \"\
    Seven\", n))\n        } else if i == 8 {\n            result.append(String(format:\
    \ \"Eight\", n))\n        } else if i == 9 {\n            result.append(String(format:\
    \ \"Nine\", n))\n        }\n    }\n    return result", "    var result = [String]()\n\
    \    for number in arr {\n        if number >= 1 && number <= 9 {\n          \
    \  result.append(name[number])\n        } else {\n            result.append(String(number))\n\
    \        }\n    }\n    return result", "    guard !arr.isEmpty else { return []\
    \ }\n    var result = [String]()\n    var i = 0\n    var j = 0\n    while i <\
    \ arr.count {\n        if arr[i] < 1 || arr[i] > 9 {\n            i += 1\n   \
    \         continue\n        }\n        if i == 0 {\n            result.append(String(arr[i]))\n\
    \        } else {\n            if j == 0 {\n                result.append(String(arr[i]))\n\
    \            } else {\n                result.append(String(arr[i]) + \" \" +\
    \ String(result[j-1]))\n            }\n        }\n        i += 1\n        j +=\
    \ 1\n    }\n    return result", "    guard arr.count > 0 else { return [] }\n\
    \    let len = arr.count\n    let ones = arr.filter{ $0 < 10 }\n    let tens =\
    \ arr.filter{ $0 >= 10 }\n    let tensReversed = tens.reverse()\n    let onesReversed\
    \ = ones.reverse()\n    var result = [String]()\n    for n in onesReversed {\n\
    \        result.append(\"One\")\n    }\n    for n in tensReversed {\n        result.append(\"\
    Ten\")\n    }\n    for n in onesReversed {\n        result.append(\"Two\")\n \
    \   }\n    for n in tensReversed {\n        result.append(\"Three\")\n    }\n\
    \    for n in onesReversed {\n        result.append(\"Four\")\n    }\n    for\
    \ n in tensReversed {\n        result.append(\"Five\")\n    }\n    for n in onesReversed\
    \ {\n        result.append(\"Six\")\n    }\n    for n in tensReversed {\n    \
    \    result.append(\"Seven\")\n    }\n    for n in onesReversed {\n        result.append(\"\
    Eight\")\n    }\n    for n in tensReversed {\n        result.append(\"Nine\")\n\
    \    }\n    for n in onesReversed {\n        result.append(\"Ten\")\n    }\n \
    \   for n in tensReversed {\n        result.append(\"One\")\n    }\n    for n\
    \ in onesReversed {\n        result.append(\"Two\")\n    }\n    for n in tensReversed\
    \ {\n        result.append(\"Three\")\n    }\n    for n in onesReversed {\n  \
    \      result.append(\"Four\")\n    }\n    for n in tensReversed {\n        result.append(\"\
    Five\")\n    }\n    for n in onesReversed {\n        result.append(\"Six\")\n\
    \    }\n    for n in tensReversed {\n        result.append(\"Seven\")\n    }\n\
    \    for n in onesReversed {\n        result.append(\"Eight\")\n    }\n    for\
    \ n in tensReversed {\n        result.append(\"Nine\")\n    }\n    for n in onesReversed\
    \ {\n        result.append(\"Ten\")\n    }\n    for n in tensReversed {\n    \
    \    result.append(\"One\")\n    }\n    for n in onesReversed {\n        result.append(\"\
    Two\")\n    }\n    for n in tensReversed {\n        result.append(\"Three\")\n\
    \    }\n    for n in onesReversed {\n        result.append(\"Four\")\n    }\n\
    \    for n in tensReversed {\n        result.append(\"Five\")\n    }\n    for\
    \ n in onesReversed {\n        result.append(\"Six\")\n    }\n    for n in ten",
  "    guard arr.count > 0 else { return [] }\n    let ones = arr.filter{ $0 < 10\
    \ }\n    let tens = arr.filter{ $0 >= 10 }\n    let tensReversed = tens.reverse()\n\
    \    let onesReversed = ones.reverse()\n    let onesReversedString = onesReversed.map{\
    \ onesReversed[$0] }\n    let tensReversedString = tensReversed.map{ tensReversed[$0]\
    \ }\n    return onesReversedString + tensReversedString", "    if arr.isEmpty()\
    \ {\n        return []\n    }\n    var result = [String]()\n    var index = 0\n\
    \    var last = 0\n    for number in arr {\n        if number == last {\n    \
    \        continue\n        }\n        last = number\n        result[index] = numberToName(number)\n\
    \        index++\n    }\n    return result", "    guard !arr.isEmpty else { return\
    \ [] }\n    let min = min(arr)\n    let max = max(arr)\n    var result = [String]()\n\
    \    for n in arr {\n        if n < min || n > max {\n            continue\n \
    \       }\n        let digit = Int(log2(n))\n        result.append(name[digit])\n\
    \    }\n    return result.reversed()", "    guard arr.count > 0 else { return\
    \ [] }\n    let min = min(arr)\n    let max = max(arr)\n    var result = [String]()\n\
    \    for n in arr {\n        let digit = n % 10\n        let name = digitName(digit)\n\
    \        if digit == min {\n            result.append(name)\n        } else if\
    \ digit == max {\n            result.append(name)\n        } else {\n        \
    \    result.append(name)\n            result.append(digitName(digit))\n      \
    \  }\n    }\n    return result", "    if arr.isEmpty {\n        return arr\n \
    \   }\n    let len = arr.count\n    var result = [String]()\n    var i = 0\n \
    \   for n in arr {\n        if n < 1 || n > 9 {\n            continue\n      \
    \  }\n        let digit = String(n)\n        result.append(digit)\n        i +=\
    \ 1\n        if i == len {\n            break\n        }\n    }\n    return result.reversed()",
  "    if arr.isEmpty {\n        return []\n    }\n    var result = [String]()\n \
    \   var i = 0\n    for num in arr {\n        if num > 9 {\n            result.append(String(num))\n\
    \        } else {\n            result.append(by_length_helper(arr, i, num))\n\
    \        }\n        i += 1\n    }\n    return result", "    guard arr.count >\
    \ 0 else { return [] }\n    let arr = arr.sorted()\n    let result = arr.map {\
    \ $0.description.characters.first! }\n    return result", "    if arr.isEmpty\
    \ {\n        return arr\n    }\n    let digits = arr.sorted()\n    let reversed\
    \ = digits.reversed()\n    let ones = reversed.prefix(6)\n    let tens = reversed.prefix(10)\n\
    \    let hundreds = reversed.prefix(100)\n    let thousands = reversed.prefix(1000)\n\
    \    let names = ones + tens + hundreds + thousands\n    return names.map { name\
    \ -> String in\n        switch name {\n        case \"One\":\n            return\
    \ \"1\"\n        case \"Two\":\n            return \"2\"\n        case \"Three\"\
    :\n            return \"3\"\n        case \"Four\":\n            return \"4\"\n\
    \        case \"Five\":\n            return \"5\"\n        case \"Six\":\n   \
    \         return \"6\"\n        case \"Seven\":\n            return \"7\"\n  \
    \      case \"Eight\":\n            return \"8\"\n        case \"Nine\":\n   \
    \         return \"9\"\n        default:\n            return name\n        }\n\
    \    }", "    if arr.isEmpty {\n        return []\n    }\n    var result = [String]()\n\
    \    var i = 0\n    for num in arr {\n        if num < 1 || num > 9 {\n      \
    \      continue\n        }\n        if i == 0 {\n            result.append(String(num))\n\
    \        } else {\n            result.append(String(num))\n            result.append(\"\
    \ as \\(One[num - 1])\")\n        }\n        i += 1\n    }\n    return result.reverse()",
  "    if arr.isEmpty {\n        return []\n    }\n    var result = [String]()\n \
    \   var i = 0\n    var j = 0\n    for k in arr {\n        if k > 9 {\n       \
    \     j = k\n        } else {\n            result[i++] = names[k]\n        }\n\
    \    }\n    result.reverse()\n    for k in result {\n        result[k] = names[k]\n\
    \    }\n    return result", "    var result = [String]()\n    if arr.isEmpty {\n\
    \        return result\n    }\n    let maxLength = arr.max()!\n    let minLength\
    \ = arr.min()!\n    for number in arr {\n        let length = number - minLength\n\
    \        if length < 0 {\n            length += maxLength\n        }\n       \
    \ let name = String(format: \"%0*d\", maxLength, length)\n        result.append(name)\n\
    \    }\n    return result", "    if arr.isEmpty {\n        return []\n    }\n\
    \    var result = [String]()\n    var i = 0\n    var j = 0\n    var k = 0\n  \
    \  var temp = 0\n    for i < arr.count {\n        temp = arr[i]\n        if temp\
    \ < 10 {\n            result.append(String(temp))\n        } else {\n        \
    \    if temp < 100 {\n                result.append(String(temp / 10) + String(temp\
    \ % 10))\n            } else {\n                if temp < 1000 {\n           \
    \         result.append(String(temp / 100) + String(temp % 100))\n           \
    \     } else {\n                    if temp < 10000 {\n                      \
    \  result.append(String(temp / 1000) + String(temp % 1000))\n                \
    \    } else {\n                        if temp < 100000 {\n                  \
    \          result.append(String(temp / 10000) + String(temp % 10000))\n      \
    \                  } else {\n                            if temp < 1000000 {\n\
    \                                result.append(String(temp / 100000) + String(temp\
    \ % 100000))\n                            } else {\n                         \
    \       if temp < 10000000 {\n                                    result.append(String(temp\
    \ / 1000000) + String(temp % 1000000))\n                                } else\
    \ {\n                                    if temp < 100000000 {\n             \
    \                           result.append(String(temp / 10000000) + String(temp\
    \ % 10000000))\n                                    } else {\n               \
    \                         if temp < 1000000000 {\n                           \
    \                 result.append(String(temp / 100000000) + String(temp % 100000000))\n\
    \                                        } else {\n                          \
    \                  if temp < 10000000000 {\n                                 \
    \               result.append(String(temp / 1000000000) + String(temp % 1000000000))\n\
    \                                            } else {\n                      \
    \                          if temp < 100000000000 {\n                        \
    \                            result.append(String(temp / 10000000000) + String(temp\
    \ % 10000000000))\n                                                } else {\n\
    \                                                    if temp < 1000000000000 {\n\
    \                                                        result.append(String(temp\
    \ / 100000000000) + String(temp % 100000000000))\n                           \
    \                         } else {\n                                         \
    \               if temp < 10000000000000 {\n                                 \
    \                           result.append(String(temp / 1000000000000) + String(temp\
    \ % 1000000000000))\n                                                        }\
    \ else {\n                                                            if temp\
    \ < 100000000000000 {\n                                                      \
    \          result.append(String(temp / 10000000000000) + String(temp % 10000000000000))\n\
    \                                                            } else {\n      \
    \                                                          if temp < 1000000000000000\
    \ {\n                                                                    result.append(String(temp\
    \ / 100000000000000) + String(temp % 100000000000000))\n                     \
    \                                           } else {\n                       \
    \                                             if temp < 10000000000000000 {\n\
    \                                                                        result.append(String(temp\
    \ / 1000000000000000) + String(temp % 1000000000000000))\n                   \
    \                                                 } else {\n                 \
    \                                                       if temp < 100000000000000000\
    \ {\n                                                                        \
    \    result.append(String(temp / 10000000000000000) + String(temp % 10000000000000000))\n\
    \                                                                        } else\
    \ {\n                                                                        \
    \    if temp < 100000000000000000 {\n                                        \
    \                                        result.append(String(temp / 100000000000000000)\
    \ + String(temp % 100000000000000000))\n                                     \
    \                                       } else {\n                           \
    \                                     ", "    if arr.isEmpty {\n        return\
    \ []\n    }\n    var result = [String]()\n    var last = 0\n    for num in arr\
    \ {\n        if num > 9 {\n            last = num\n        } else {\n        \
    \    if last == 0 {\n                last = num\n            } else {\n      \
    \          result.append(\"One\")\n            }\n            result.append(\"\
    Two\")\n            result.append(\"Three\")\n            result.append(\"Four\"\
    )\n            result.append(\"Five\")\n            result.append(\"Six\")\n \
    \           result.append(\"Seven\")\n            result.append(\"Eight\")\n \
    \           result.append(\"Nine\")\n            result.append(\"Ten\")\n    \
    \        result.append(\"Eleven\")\n            result.append(\"Twelve\")\n  \
    \          result.append(\"Thirteen\")\n            result.append(\"Fourteen\"\
    )\n            result.append(\"Fifteen\")\n            result.append(\"Sixteen\"\
    )\n            result.append(\"Seventeen\")\n            result.append(\"Eighteen\"\
    )\n            result.append(\"Nineteen\")\n            result.append(\"Twenty\"\
    )\n            result.append(\"Twenty-one\")\n            result.append(\"Twenty-two\"\
    )\n            result.append(\"Twenty-three\")\n            result.append(\"Twenty-four\"\
    )\n            result.append(\"Twenty-five\")\n            result.append(\"Twenty-six\"\
    )\n            result.append(\"Twenty-seven\")\n            result.append(\"Twenty-eight\"\
    )\n            result.append(\"Twenty-nine\")\n            result.append(\"Thirty\"\
    )\n            result.append(\"Thirty-one\")\n            result.append(\"Thirty-two\"\
    )\n            result.append(\"Thirty-three\")\n            result.append(\"Thirty-four\"\
    )\n            result.append(\"Thirty-five\")\n            result.append(\"Thirty-six\"\
    )\n            result.append(\"Thirty-seven\")\n            result.append(\"Thirty-eight\"\
    )\n            result.append(\"Thirty-nine\")\n            result.append(\"Fourty\"\
    )\n            result.append(\"Fourty-one\")\n            result.append(\"Fourty-two\"\
    )\n            result.append(\"Fourty-three\")\n            result.append(\"Fourty-four\"\
    )\n            result.append(\"Fourty-five\")\n            result.append(\"Fourty-six\"\
    )\n            result.append(\"Fourty-seven\")\n            result.append(\"Fourty-eight\"\
    )\n            result.append(\"Fourty-nine\")\n            result.append(\"Fifty\"\
    )\n            result.append(\"Fifty-one\")\n            result.append(\"Fifty-two\"\
    )\n            result.append(\"Fifty-three\")\n            result.append(\"Fifty-four\"\
    )\n            result.append(\"Fifty-five\")\n            result.append(\"Fifty-six\"\
    )\n            result.append(\"Fifty-seven\")\n            result.append(\"Fifty-eight\"\
    )\n            result.append(\"Fifty-nine\")\n            result.append(\"Sixty\"\
    )\n            result.append(\"Sixty", "    if arr.isEmpty {\n        return []\n\
    \    }\n\n    var result = [String]()\n    var i = 0\n    var j = 0\n    var k\
    \ = arr.count\n\n    while i < k {\n        if arr[i] < 1 || arr[i] > 9 {\n  \
    \          i += 1\n            continue\n        }\n\n        if j == 0 {\n  \
    \          result.append(String(arr[i]))\n            i += 1\n            continue\n\
    \        }\n\n        if arr[i] != result[j-1] {\n            result.append(String(arr[i]))\n\
    \            i += 1\n            continue\n        }\n\n        i += 1\n     \
    \   j += 1\n    }\n\n    return result", "    var result = [String]()\n    if\
    \ arr.isEmpty {\n        return result\n    }\n    let min = min(arr)\n    let\
    \ max = max(arr)\n    var i = 0\n    while i < arr.count {\n        if arr[i]\
    \ >= min && arr[i] <= max {\n            result.append(name[arr[i]])\n       \
    \ }\n        i += 1\n    }\n    return result", "    var result = [String]()\n\
    \    if arr.isEmpty {\n        return result\n    }\n    let min = arr[0]\n  \
    \  let max = arr[0]\n    for num in arr {\n        if num < min {\n          \
    \  min = num\n        }\n        if num > max {\n            max = num\n     \
    \   }\n    }\n    var digits = [String]()\n    for num in arr {\n        if num\
    \ == min {\n            digits.append(\"One\")\n        } else if num == max {\n\
    \            digits.append(\"Nine\")\n        } else if num < min {\n        \
    \    digits.append(\"One\")\n        } else if num > max {\n            digits.append(\"\
    Nine\")\n        } else {\n            digits.append(String(num))\n        }\n\
    \    }\n    result.reverse()\n    for digit in digits {\n        result.append(digit)\n\
    \    }\n    return result", "    var result = [String]()\n    for number in arr\
    \ {\n        if number < 1 || number > 9 {\n            continue\n        }\n\
    \        let index = number - 10\n        result.append(names[index])\n    }\n\
    \    return result", "    if arr.isEmpty() {\n        return []\n    }\n    var\
    \ result = [String]()\n    var i = 0\n    for num in arr {\n        if num > 9\
    \ {\n            i += 10\n            continue\n        }\n        i += 1\n  \
    \      if i == 1 {\n            result.append(String(num))\n        } else {\n\
    \            result.append(String(num))\n            result.append(String(i -\
    \ 1))\n        }\n    }\n    return result", "    guard arr.count > 0 else { return\
    \ [] }\n    let min = 1\n    let max = 9\n    var result = [String]()\n    for\
    \ n in arr {\n        if n >= min && n <= max {\n            result.append(name(n))\n\
    \        }\n    }\n    return result.reversed()", "    if arr.isEmpty {\n    \
    \    return []\n    }\n    var result: [String] = []\n    var last = 0\n    for\
    \ num in arr {\n        if num > 9 {\n            num = num - 10\n        }\n\
    \        if num > last {\n            result.append(String(num))\n        } else\
    \ {\n            result.append(String(last))\n        }\n        last = num\n\
    \    }\n    result.append(String(last))\n    return result", "    guard !arr.isEmpty\
    \ else { return [] }\n    var result = [String]()\n    var i = 0\n    for n in\
    \ arr {\n        if n < 10 && n > 0 {\n            result.append(String(format:\
    \ \"%d\\t%s\", n, ones[Int(n)]))\n        } else if n < 100 && n > 10 {\n    \
    \        result.append(String(format: \"%d\\t%s\", n, tens[Int(n)]))\n       \
    \ } else if n < 1000 && n > 100 {\n            result.append(String(format: \"\
    %d\\t%s\", n, hundreds[Int(n)]))\n        } else {\n            result.append(String(format:\
    \ \"%d\\t%s\", n, thousands[Int(n)]))\n        }\n        i += 1\n    }\n    return\
    \ result", "    var result = [String]()\n    if arr.isEmpty {\n        return\
    \ result\n    }\n    let maxLength = max(arr.count, 9)\n    for i in 0..<maxLength\
    \ {\n        let index = arr[i] % 10\n        let digit = arr[i] / 10\n      \
    \  if index == 0 {\n            result.append(digit)\n        } else {\n     \
    \       result.append(names[index])\n        }\n    }\n    return result", " \
    \   if arr.isEmpty() {\n        return []\n    }\n    var result = [String]()\n\
    \    var index = 0\n    var last = 0\n    for element in arr {\n        if element\
    \ < 1 || element > 9 {\n            continue\n        }\n        last = element\n\
    \        result[index] = names[element]\n        index++\n    }\n    result.reverse()\n\
    \    for element in result {\n        if element == \"\" {\n            continue\n\
    \        }\n        element = element.reversed()\n        if last == 0 {\n   \
    \         element = element.capitalized()\n        }\n        last--\n    }\n\
    \    return result", "    guard !arr.isEmpty else { return [] }\n    let min =\
    \ 1\n    let max = 9\n    var result = [String]()\n    for n in arr {\n      \
    \  let digit = n % 10\n        if digit < min || digit > max {\n            continue\n\
    \        }\n        result.append(name[digit])\n    }\n    return result.reversed()",
  "    guard !arr.isEmpty else { return [] }\n    var result = [String]()\n    var\
    \ i = 0\n    while i < arr.count {\n        if arr[i] > 9 {\n            result.append(String(arr[i]\
    \ - 10))\n        } else {\n            result.append(String(arr[i]))\n      \
    \  }\n        i += 1\n    }\n    return result.reversed()", "    if arr.isEmpty\
    \ {\n        return []\n    }\n    var result = [String]()\n    var last = 0\n\
    \    for num in arr {\n        if num < 1 || num > 9 {\n            continue\n\
    \        }\n        if num == last {\n            continue\n        }\n      \
    \  result.append(String(num))\n        last = num\n    }\n    return result.reverse().map\
    \ {\n        switch $0 {\n        case \"0\":\n            return \"Zero\"\n \
    \       case \"1\":\n            return \"One\"\n        case \"2\":\n       \
    \     return \"Two\"\n        case \"3\":\n            return \"Three\"\n    \
    \    case \"4\":\n            return \"Four\"\n        case \"5\":\n         \
    \   return \"Five\"\n        case \"6\":\n            return \"Six\"\n       \
    \ case \"7\":\n            return \"Seven\"\n        case \"8\":\n           \
    \ return \"Eight\"\n        case \"9\":\n            return \"Nine\"\n       \
    \ default:\n            return String($0)\n        }\n    }", "    if arr.isEmpty\
    \ {\n        return []\n    }\n    let len = arr.count\n    var result = [String]()\n\
    \    for i in 0..<len {\n        let num = arr[i]\n        if num < 1 || num >\
    \ 9 {\n            continue\n        }\n        let digit = num % 10\n       \
    \ let name = digitToName(digit)\n        result.append(name)\n    }\n    return\
    \ result.reversed()", "    guard !arr.isEmpty else { return [] }\n    var result\
    \ = [String]()\n    var i = 0\n    var j = 0\n    for k in arr {\n        if k\
    \ == 1 {\n            result.append(One)\n        } else if k == 2 {\n       \
    \     result.append(Two)\n        } else if k == 3 {\n            result.append(Three)\n\
    \        } else if k == 4 {\n            result.append(Four)\n        } else if\
    \ k == 5 {\n            result.append(Five)\n        } else if k == 6 {\n    \
    \        result.append(Six)\n        } else if k == 7 {\n            result.append(Seven)\n\
    \        } else if k == 8 {\n            result.append(Eight)\n        } else\
    \ if k == 9 {\n            result.append(Nine)\n        } else {\n           \
    \ result.append(String(k))\n        }\n        i += 1\n        if i == 3 {\n \
    \           i = 0\n            j += 1\n        }\n    }\n    if j > 0 {\n    \
    \    result.reverse()\n    }\n    return result", "    if arr.isEmpty {\n    \
    \    return []\n    }\n    var result = [String]()\n    var i = 0\n    for num\
    \ in arr {\n        if num >= 1 && num <= 9 {\n            result.append(String(num))\n\
    \        } else {\n            result.append(String(num))\n        }\n    }\n\
    \    for num in arr {\n        if num >= 1 && num <= 9 {\n            result[i]\
    \ = \"One\"\n        } else if num >= 10 && num <= 99 {\n            result[i]\
    \ = \"Two\"\n        } else if num >= 100 && num <= 999 {\n            result[i]\
    \ = \"Three\"\n        } else if num >= 1000 && num <= 9999 {\n            result[i]\
    \ = \"Four\"\n        } else if num >= 10000 && num <= 99999 {\n            result[i]\
    \ = \"Five\"\n        } else if num >= 100000 && num <= 999999 {\n           \
    \ result[i] = \"Six\"\n        } else if num >= 1000000 && num <= 9999999 {\n\
    \            result[i] = \"Seven\"\n        } else if num >= 10000000 && num <=\
    \ 99999999 {\n            result[i] = \"Eight\"\n        } else if num >= 100000000\
    \ && num <= 999999999 {\n            result[i] = \"Nine\"\n        }\n       \
    \ i += 1\n    }\n    return result", "    if arr.isEmpty() {\n        return []\n\
    \    }\n    var result = [String]()\n    var last = 0\n    for i := 0; i < len(arr);\
    \ i++ {\n        if arr[i] > 9 {\n            last = i\n            break\n  \
    \      }\n    }\n    for i := 0; i < len(arr); i++ {\n        if arr[i] > 9 {\n\
    \            result.append(arr[last])\n            last += 1\n        } else {\n\
    \            result.append(String(arr[i]))\n        }\n    }\n    return result",
  "    if arr.isEmpty {\n        return []\n    }\n    let ones = arr.filter{$0 >=\
    \ 1}\n    let tens = arr.filter{$0 >= 10}\n    let hundreds = arr.filter{$0 >=\
    \ 100}\n    let thousands = arr.filter{$0 >= 1000}\n    let ten_thousands = arr.filter{$0\
    \ >= 10000}\n    let hundred_thousands = arr.filter{$0 >= 100000}\n    let millions\
    \ = arr.filter{$0 >= 1000000}\n    let billions = arr.filter{$0 >= 1000000000}\n\
    \    let trillions = arr.filter{$0 >= 1000000000000}\n    let quadrillions = arr.filter{$0\
    \ >= 1000000000000000}\n    let quintillions = arr.filter{$0 >= 1000000000000000000}\n\
    \    let thousand_millions = arr.filter{$0 >= 10000000000000000000}\n    let million_billions\
    \ = arr.filter{$0 >= 100000000000000000000}\n    let billion_trillions = arr.filter{$0\
    \ >= 100000000000000000000000}\n    let trillion_quadrillions = arr.filter{$0\
    \ >= 100000000000000000000000000}\n    let quadrillion_quintillions = arr.filter{$0\
    \ >= 1000000000000000000000000000}\n    let quintillion_thousand_millions = arr.filter{$0\
    \ >= 10000000000000000000000000000}\n    let thousand_million_billions = arr.filter{$0\
    \ >= 10000000000000000000000000000000}\n    let million_billion_trillions = arr.filter{$0\
    \ >= 1000000000000000000000000000000000}\n    let billion_trillion_quadrillions\
    \ = arr.filter{$0 >= 1000000000000000000000000000000000000}\n    let trillion_quadrillion_quintillions\
    \ = arr.filter{$0 >= 1000000000000000000000000000000000000000}\n    let quadrillion_quintillion_thousand_millions\
    \ = arr.filter{$0 >= 100000000000000000000000000000000000000000}\n    let thousand_million_billion_trillion_quadrillions\
    \ = arr.filter{$0 >= 100000000000000000000000000000000000000000000}\n    let million_billion_trillion_quadrillion_quintillions\
    \ = arr.filter{$0 >= 100000000000000000000000000000000000000000000000}\n    let\
    \ billion_trillion_quadrillion_quintillion_thousand_millions = arr.filter{$0 >=\
    \ 10000000000000000000000000000000000000000000000000}\n    let trillion_quadrillion_quintillion_thousand_million_billions\
    \ = arr.filter{$0 >= 1000000000000000000000000000000000000000000", "    guard\
    \ arr.count > 0 else { return [] }\n    let min = min(arr)\n    let max = max(arr)\n\
    \    var result = [String]()\n    for n in arr {\n        if n < min || n > max\
    \ {\n            continue\n        }\n        let index = n - min\n        result.append(names[index])\n\
    \    }\n    return result", "    if arr.isEmpty {\n        return []\n    }\n\
    \    let ones = arr.filter{ $0 < 10 }\n    let tens = arr.filter{ $0 >= 10 }\n\
    \    let tensReversed = tens.reverse()\n    let onesReversed = ones.reverse()\n\
    \    var result = [String]()\n    for i in onesReversed {\n        result.append(ones[onesReversed.index(of:\
    \ i)!])\n    }\n    for i in tensReversed {\n        result.append(tens[tensReversed.index(of:\
    \ i)!])\n    }\n    return result", "    if arr.isEmpty {\n        return []\n\
    \    }\n    var result = [String]()\n    var i = 0\n    for num in arr {\n   \
    \     if num > 9 {\n            result.append(String(num))\n        } else {\n\
    \            result.append(name[num])\n        }\n    }\n    return result.reverse()",
  "    var result = [String]()\n    if arr.isEmpty {\n        return result\n    }\n\
    \    let min = min(arr)\n    let max = max(arr)\n    if min == max {\n       \
    \ return arr\n    }\n    var i = 0\n    for n in arr {\n        if n == min {\n\
    \            result.append(ones[i - 1])\n        }\n        if n == max {\n  \
    \          result.append(tens[i - 1])\n        }\n        if n >= 1 && n <= 9\
    \ {\n            result.append(names[n - 1])\n        }\n        i += 1\n    }\n\
    \    return result", "    guard arr.count > 0 else { return [] }\n    let min\
    \ = min(arr)\n    let max = max(arr)\n    var result = [String]()\n    for n in\
    \ arr {\n        let digit = String(format: \"%2d\", n)\n        if digit == \"\
    1\" {\n            result.append(one)\n        } else if digit == \"2\" {\n  \
    \          result.append(two)\n        } else if digit == \"3\" {\n          \
    \  result.append(three)\n        } else if digit == \"4\" {\n            result.append(four)\n\
    \        } else if digit == \"5\" {\n            result.append(five)\n       \
    \ } else if digit == \"6\" {\n            result.append(six)\n        } else if\
    \ digit == \"7\" {\n            result.append(seven)\n        } else if digit\
    \ == \"8\" {\n            result.append(eight)\n        } else if digit == \"\
    9\" {\n            result.append(nine)\n        } else {\n            result.append(digit)\n\
    \        }\n    }\n    result.reverse()\n    for n in result {\n        if n <\
    \ min {\n            result.removeFirst()\n        } else if n > max {\n     \
    \       result.removeLast()\n        }\n    }\n    return result", "    guard\
    \ arr.count > 0 else { return [] }\n    var result = [String]()\n    var i = 0\n\
    \    var j = 0\n    for k in arr {\n        if i == 0 {\n            result.append(String(k))\n\
    \        } else {\n            if k == 1 {\n                result.append(String(k))\n\
    \                i += 1\n            } else {\n                if j == 0 {\n \
    \                   result.append(String(k))\n                    j += 1\n   \
    \             } else {\n                    if k == 2 {\n                    \
    \    result.append(String(k))\n                        i += 1\n              \
    \          j += 1\n                    } else {\n                        if k\
    \ == 3 {\n                            result.append(String(k))\n             \
    \               i += 1\n                            j += 1\n                 \
    \       } else {\n                            if k == 4 {\n                  \
    \              result.append(String(k))\n                                i +=\
    \ 1\n                                j += 1\n                            } else\
    \ {\n                                if k == 5 {\n                           \
    \         result.append(String(k))\n                                    i += 1\n\
    \                                    j += 1\n                                }\
    \ else {\n                                    if k == 6 {\n                  \
    \                      result.append(String(k))\n                            \
    \            i += 1\n                                        j += 1\n        \
    \                            } else {\n                                      \
    \  if k == 7 {\n                                            result.append(String(k))\n\
    \                                            i += 1\n                        \
    \                    j += 1\n                                        } else {\n\
    \                                            if k == 8 {\n                   \
    \                             result.append(String(k))\n                     \
    \                           i += 1\n                                         \
    \       j += 1\n                                            } else {\n       \
    \                                         if k == 9 {\n                      \
    \                              result.append(String(k))\n                    \
    \                                i += 1\n                                    \
    \                j += 1\n                                                } else\
    \ {\n                                                    result.append(String(k))\n\
    \                                                }\n                         \
    \                   }\n                                        }\n           \
    \                         }\n                                }\n             \
    \               }\n                        }\n                    }\n        \
    \        }\n            }\n        }\n    }\n    return result", "    if arr.isEmpty\
    \ {\n        return nil\n    }\n    var result = [String]()\n    var i = 0\n \
    \   var j = 0\n    for _ in arr {\n        if i == 0 {\n            result.append(\"\
    \")\n        }\n        if i == 1 {\n            result.append(One)\n        }\n\
    \        if i == 2 {\n            result.append(Two)\n        }\n        if i\
    \ == 3 {\n            result.append(Three)\n        }\n        if i == 4 {\n \
    \           result.append(Four)\n        }\n        if i == 5 {\n            result.append(Five)\n\
    \        }\n        if i == 6 {\n            result.append(Six)\n        }\n \
    \       if i == 7 {\n            result.append(Seven)\n        }\n        if i\
    \ == 8 {\n            result.append(Eight)\n        }\n        if i == 9 {\n \
    \           result.append(Nine)\n        }\n        if i == 10 {\n           \
    \ result.append(Ten)\n        }\n        if i == 11 {\n            result.append(Eleven)\n\
    \        }\n        if i == 12 {\n            result.append(Twelve)\n        }\n\
    \        if i == 13 {\n            result.append(Thirteen)\n        }\n      \
    \  if i == 14 {\n            result.append(Fourteen)\n        }\n        if i\
    \ == 15 {\n            result.append(Fifteen)\n        }\n        if i == 16 {\n\
    \            result.append(Sixteen)\n        }\n        if i == 17 {\n       \
    \     result.append(Seventeen)\n        }\n        if i == 18 {\n            result.append(Eighteen)\n\
    \        }\n        if i == 19 {\n            result.append(Nineteen)\n      \
    \  }\n        if i == 20 {\n            result.append(Twenty)\n        }\n   \
    \     if i == 21 {\n            result.append(TwentyOne)\n        }\n        if\
    \ i == 22 {\n            result.append(TwentyTwo)\n        }\n        if i ==\
    \ 23 {\n            result.append(TwentyThree)\n        }\n        if i == 24\
    \ {\n            result.append(TwentyFour)\n        }\n        if i == 25 {\n\
    \            result.append(TwentyFive)\n        }\n        if i == 26 {\n    \
    \        result.append(TwentySix)\n        }\n        if i == 27 {\n         \
    \   result.append(TwentySeven)\n        }\n        if i == 28 {\n            result.append(Twentyeight)\n\
    \        }\n        if i == 29 {\n            result.append(Twentynine)\n    \
    \    }\n        if i == 30 {\n            result.append(Thirty)\n        }\n \
    \       if i == 31 {\n            result.append(ThirtyOne)\n        }\n      \
    \  if i32 == 32 {\n            result.append(ThirtyTwo)\n        }\n        if\
    \ i == 33 {\n            result.append(ThirtyThree)\n        }\n        if i ==\
    \ 34 {\n            result.append(ThirtyFour)\n        }\n        if i == 35 {\n\
    \            result.append(Thirty", "    var result = [String]()\n    if arr.isEmpty\
    \ {\n        return result\n    }\n    let min = arr[0]\n    let max = arr[0]\n\
    \    for num in arr {\n        if num < min {\n            min = num\n       \
    \ }\n        if num > max {\n            max = num\n        }\n    }\n    if min\
    \ == max {\n        return result\n    }\n    var reversed = [Int]()\n    var\
    \ i = 0\n    for num in arr {\n        reversed.append(num)\n        i += 1\n\
    \        if i == min {\n            break\n        }\n    }\n    reversed.reverse()\n\
    \    for num in reversed {\n        result.append(names[num])\n    }\n    return\
    \ result", "    var result = [String]()\n    if arr.isEmpty {\n        return\
    \ result\n    }\n    var i = 0\n    var j = 0\n    var n = arr.count\n    for\
    \ _ in 0..<n {\n        if i == 0 {\n            result.append(arr[j])\n     \
    \       i += 1\n            j += 1\n        } else if j == 0 {\n            result.append(arr[i])\n\
    \            i += 1\n        } else {\n            if arr[j-1] < arr[i] {\n  \
    \              result.append(arr[j])\n                j += 1\n            } else\
    \ {\n                result.append(arr[i])\n                i += 1\n         \
    \   }\n        }\n    }\n    return result", "    if arr.isEmpty {\n        return\
    \ []\n    }\n    var result = [String]()\n    var i = 0\n    for num in arr {\n\
    \        if num < 1 || num > 9 {\n            continue\n        }\n        result.append(String(num))\n\
    \        i += 1\n        if i == 3 {\n            i = 1\n        }\n    }\n  \
    \  return result.reverse()", "    guard !arr.isEmpty else { return [] }\n    var\
    \ result = [String]()\n    var index = 0\n    while index < arr.count {\n    \
    \    let value = arr[index]\n        if value < 1 || value > 9 {\n           \
    \ index += 1\n            continue\n        }\n        let digit = value - 10\n\
    \        let name = digitToName(digit)\n        result.append(name)\n        index\
    \ += 1\n    }\n    return result", "    var result = [String]()\n    if arr.isEmpty\
    \ {\n        return result\n    }\n    let min = min(arr)\n    let max = max(arr)\n\
    \    var i = 0\n    for n in arr {\n        if n >= min && n <= max {\n      \
    \      result.append(names[i])\n        }\n        i += 1\n    }\n    return result",
  "    guard arr.count > 0 else {\n        return []\n    }\n    let arr = arr.sorted()\n\
    \    let reversed = arr.map { $0 < 10 ? $0 + 1 : $0 - 10 }.reversed()\n    return\
    \ reversed.map { names[$0] }", "    guard arr.count > 0 else { return [] }\n \
    \   var result = [String]()\n    var i = 0\n    var j = 0\n    for _ in arr {\n\
    \        if i == 0 {\n            result.append(String(arr[j]))\n            j\
    \ += 1\n            continue\n        }\n        if j == arr.count - 1 {\n   \
    \         result.append(String(arr[i]))\n            i += 1\n            continue\n\
    \        }\n        if arr[i] < arr[j] {\n            result.append(String(arr[i]))\n\
    \            i += 1\n        } else {\n            result.append(String(arr[j]))\n\
    \            j += 1\n        }\n    }\n    return result", "    guard arr.count\
    \ > 0 else { return [] }\n    let min = min(arr)\n    let max = max(arr)\n   \
    \ var result = [String]()\n    for n in arr {\n        let index = n - min\n \
    \       if index < 10 {\n            result.append(String(index))\n        } else\
    \ {\n            result.append(String(index - 10))\n            result.append(One[index\
    \ - 10])\n        }\n    }\n    result.reverse()\n    result.removeFirst()\n \
    \   return result", "    var result = [String]()\n    if arr.isEmpty {\n     \
    \   return result\n    }\n    let min = min(arr)\n    let max = max(arr)\n   \
    \ for num in arr {\n        if num >= min && num <= max {\n            result.append(name[num])\n\
    \        }\n    }\n    return result.reversed()", "    if arr.isEmpty {\n    \
    \    return []\n    }\n    var result = [String]()\n    var index = 0\n    var\
    \ last = 0\n    for number in arr {\n        if number == last {\n           \
    \ result.append(String(number))\n        } else {\n            if number > 9 {\n\
    \                result.append(String(number))\n            } else {\n       \
    \         last = number\n                result.append(String(number))\n     \
    \       }\n        }\n    }\n    return result", "    guard arr.count > 0 else\
    \ { return [] }\n    \n    var result = [String]()\n    var last = 0\n    for\
    \ num in arr {\n        if num > 9 {\n            last = num\n        } else {\n\
    \            result.append(String(last))\n            result.append(String(num))\n\
    \            last = 0\n        }\n    }\n    result.append(String(last))\n   \
    \ return result", "    if arr.isEmpty {\n        return []\n    }\n    var result\
    \ = [String]()\n    var last = 0\n    for num in arr {\n        if num > 9 {\n\
    \            last = num\n        } else {\n            if last > 0 {\n       \
    \         result.append(String(last))\n            }\n            result.append(String(num))\n\
    \            last = 0\n        }\n    }\n    if last > 0 {\n        result.append(String(last))\n\
    \    }\n    return result", "    guard !arr.isEmpty else { return [] }\n    var\
    \ result = [String]()\n    var i = 0\n    var j = 0\n    var k = 0\n    var n\
    \ = arr.count\n    while i < n {\n        if arr[i] < 1 {\n            i += 1\n\
    \            continue\n        }\n        if arr[i] > 9 {\n            i += 1\n\
    \            continue\n        }\n        if i == 0 {\n            result.append(String(arr[i]))\n\
    \            i += 1\n            continue\n        }\n        if arr[i] != arr[i-1]\
    \ {\n            result.append(String(arr[i]))\n            i += 1\n         \
    \   continue\n        }\n        if arr[i] > arr[i-1] {\n            j += 1\n\
    \            k += 2\n        } else {\n            j += 1\n        }\n       \
    \ if j == k {\n            result.append(String(arr[i]))\n            i += 1\n\
    \            j = 0\n            k = 0\n        }\n    }\n    return result"]
stop_tokens:
- "\n}"

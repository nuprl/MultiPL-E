name: HumanEval_121_solution
language: swift
prompt: "\n/// Given a non-empty list of integers, return the sum of all of the odd\
  \ elements that are in even positions.\n/// Examples\n/// >>> solution(lst: [5,\
  \ 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>> solution(lst:\
  \ [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
  \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
  \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
  \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
completions: ['    return lst.filter { $0 % 2 == 1 }.sum()', "    var sum = 0\n  \
    \  for x in lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n\
    \    }\n    return sum", "    var sum = 0\n    for i in lst {\n        if i %\
    \ 2 == 0 {\n            sum += i\n        }\n    }\n    return sum", "    var\
    \ sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum += x\n\
    \        }\n    }\n    return sum", "    var sum = 0\n    for x in lst {\n   \
    \     if x % 2 == 0 {\n            sum += x\n        }\n    }\n    return sum",
  "    var sum = 0\n    for index in 0..<lst.count {\n        if index % 2 == 0 {\n\
    \            sum += lst[index]\n        }\n    }\n    return sum", "    var sum\
    \ = 0\n    for i in lst {\n        if i % 2 == 0 {\n            sum += i\n   \
    \     }\n    }\n    return sum", "    var sum = 0\n    for i in lst {\n      \
    \  if i % 2 == 0 {\n            sum += i\n        }\n    }\n    return sum", " \
    \   var sum = 0\n    for i in lst {\n        if i % 2 == 0 {\n            sum\
    \ += i\n        }\n    }\n    return sum", "    var sum = 0\n    for x in lst\
    \ {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n    return\
    \ sum", "    var sum = 0\n    for x in lst {\n        if x % 2 == 1 {\n      \
    \      sum += x\n        }\n    }\n    return sum", "    var sum = 0\n    for\
    \ x in lst {\n        if x % 2 == 0 {\n            sum += x\n        }\n    }\n\
    \    return sum", "    var sum = 0\n    for x in lst {\n        if x % 2 == 0\
    \ {\n            sum += x\n        }\n    }\n    return sum", "    var sum = 0\n\
    \    for i in lst {\n        if i % 2 == 0 {\n            sum += i\n        }\n\
    \    }\n    return sum", "    var sum = 0\n    for x in lst {\n        if x %\
    \ 2 == 1 {\n            sum += x\n        }\n    }\n    return sum", '    return
    lst.filter { $0 % 2 == 1 }.sum()', "    var sum = 0\n    for idx in lst.indices\
    \ {\n        if idx % 2 == 0 {\n            sum += lst[idx]\n        }\n    }\n\
    \    return sum", "    var sum = 0\n    for element in lst {\n        if element\
    \ % 2 == 0 {\n            sum += element\n        }\n    }\n    return sum", " \
    \   var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum", "    var sum = 0\n    for index in\
    \ 0..<lst.count {\n        if index % 2 == 0 {\n            sum += lst[index]\n\
    \        }\n    }\n    return sum"]
stop_tokens:
- "\n}"

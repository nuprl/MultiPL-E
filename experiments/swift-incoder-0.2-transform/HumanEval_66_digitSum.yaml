name: HumanEval_66_digitSum
language: swift
prompt: "\n/// Task\n/// Write a function that takes a string as input and returns\
  \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n/// >>>\
  \ digitSum(s: \"\")\n/// 0\n/// >>> digitSum(s: \"abAB\")\n/// 131\n/// >>> digitSum(s:\
  \ \"abcCd\")\n/// 67\n/// >>> digitSum(s: \"helloE\")\n/// 69\n/// >>> digitSum(s:\
  \ \"woArBld\")\n/// 131\n/// >>> digitSum(s: \"aAaaaXa\")\n/// 153\nfunc digitSum(s:\
  \ String) -> Int {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s:\
  \ \"abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"\
  helloE\") == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"\
  aAaaaXa\") == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s:\
  \ \"You arE Very Smart\") == 327)"
completions: ["    var sum = 0\n    for c in s {\n        if c >= '0' && c <= '9'\
    \ {\n            sum += c - '0'\n        }\n    }\n    return sum", "    return\
    \ s.reduce(0) { (sum, char) -> Int in\n        let code = Int(char)\n        if\
    \ code >= 48 && code <= 57 {\n            return sum + code - 48\n        }\n\
    \        return 0\n    }", "    var sum = 0\n    for c in s {\n        if c >=\
    \ '0' && c <= '9' {\n            sum += Int(c - '0')\n        }\n    }\n    return\
    \ sum", "    var sum = 0\n    for c in s {\n        if c >= '0' && c <= '9' {\n\
    \            sum += Int(c - '0')\n        }\n    }\n    return sum", "    var\
    \ sum = 0\n    for c in s {\n        if c >= '0' && c <= '9' {\n            sum\
    \ += c - '0'\n        }\n    }\n    return sum", "    var sum = 0\n    for c in\
    \ s {\n        if c >= '0' && c <= '9' {\n            sum += c - '0'\n       \
    \ }\n    }\n    return sum", "    var sum = 0\n    for c in s {\n        sum +=\
    \ Int(c)\n    }\n    return sum", "    var sum = 0\n    for c in s {\n       \
    \ sum += Int(c)\n    }\n    return sum", "    var sum = 0\n    for c in s.characters\
    \ {\n        if c >= '0' && c <= '9' {\n            sum += c - '0'\n        }\n\
    \    }\n    return sum", '    return s.reduce(0) { $0 + Int($1) }', '    return
    s.reduce(0) { $0 + Int($1) }', "    var sum = 0\n    for c in s.characters {\n\
    \        if c >= '0' && c <= '9' {\n            sum += c - '0'\n        }\n  \
    \  }\n    return sum", "    var sum = 0\n    for c in s.characters {\n       \
    \ if c >= '0' && c <= '9' {\n            sum += Int(c - '0')\n        }\n    }\n\
    \    return sum", "    var sum = 0\n    for c in s {\n        if c >= '0' && c\
    \ <= '9' {\n            sum += c - '0'\n        }\n    }\n    return sum", '    return
    s.reduce(0) { $0 + Int($1) }', "    var sum = 0\n    for c in s {\n        sum\
    \ += Int(c)\n    }\n    return sum", '    return s.reduce(0) { $0 + Int($1) }',
  "    var sum = 0\n    for c in s {\n        if c >= '0' && c <= '9' {\n        \
    \    sum += Int(c - '0')\n        }\n    }\n    return sum", "    var sum = 0\n\
    \    for c in s {\n        if c >= '0' && c <= '9' {\n            sum += Int(c\
    \ - '0')\n        }\n    }\n    return sum", "    let digits = s.unicodeScalars.filter{\
    \ $0.value > 0 }\n    return digits.reduce(0, combine: { $0 + $1.value })"]
stop_tokens:
- "\n}"

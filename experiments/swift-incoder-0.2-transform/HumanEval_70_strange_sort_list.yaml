name: HumanEval_70_strange_sort_list
language: swift
prompt: "\n/// Given list of integers, return list in strange order.\n/// Strange\
  \ sorting, is when you start with the minimum value,\n/// then maximum of the remaining\
  \ integers, then minimum and so on.\n/// Examples:\n/// >>> strange_sort_list(lst:\
  \ [1, 2, 3, 4])\n/// [1, 4, 2, 3]\n/// >>> strange_sort_list(lst: [5, 5, 5, 5])\n\
  /// [5, 5, 5, 5]\n/// >>> strange_sort_list(lst: [] as [Int])\n/// [] as [Int]\n\
  func strange_sort_list(lst: [Int]) -> [Int] {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(strange_sort_list(lst: [1, 2, 3, 4]) ==\
  \ [1, 4, 2, 3])\nassert(strange_sort_list(lst: [5, 6, 7, 8, 9]) == [5, 9, 6, 8,\
  \ 7])\nassert(strange_sort_list(lst: [1, 2, 3, 4, 5]) == [1, 5, 2, 4, 3])\nassert(strange_sort_list(lst:\
  \ [5, 6, 7, 8, 9, 1]) == [1, 9, 5, 8, 6, 7])\nassert(strange_sort_list(lst: [5,\
  \ 5, 5, 5]) == [5, 5, 5, 5])\nassert(strange_sort_list(lst: [] as [Int]) == [] as\
  \ [Int])\nassert(strange_sort_list(lst: [1, 2, 3, 4, 5, 6, 7, 8]) == [1, 8, 2, 7,\
  \ 3, 6, 4, 5])\nassert(strange_sort_list(lst: [0, 2, 2, 2, 5, 5, -5, -5]) == [-5,\
  \ 5, -5, 5, 0, 2, 2, 2])\nassert(strange_sort_list(lst: [111111]) == [111111])"
completions: ["    var result = lst\n    for index in 0..<result.count {\n       \
    \ let min = result[index]\n        let max = result[(index + 1) % result.count]\n\
    \        result[index] = max\n        result[(index + 1) % result.count] = min\n\
    \    }\n    return result", "    if lst.count == 0 {\n        return lst\n   \
    \ }\n    var result = [Int]()\n    var minValue = lst[0]\n    var maxValue = lst[0]\n\
    \    for value in lst {\n        if value < minValue {\n            minValue =\
    \ value\n        }\n        if value > maxValue {\n            maxValue = value\n\
    \        }\n    }\n    for value in lst {\n        if value < minValue {\n   \
    \         result.insert(minValue, value)\n        }\n        if value > maxValue\
    \ {\n            result.insert(maxValue, value)\n        }\n    }\n    return\
    \ result", "    var result = [Int]()\n    var min: Int = 0\n    var max: Int =\
    \ 0\n    for x in lst {\n        if x < min {\n            min = x\n        }\n\
    \        if x > max {\n            max = x\n        }\n    }\n    for x in lst\
    \ {\n        if x == min {\n            result.insert(x, min)\n        }\n   \
    \     if x == max {\n            result.insert(x, max)\n        }\n    }\n   \
    \ return result", "    var result = lst\n    for index in 0..<result.count {\n\
    \        let min = result[index]\n        let max = result[index + 1]\n      \
    \  if min > max {\n            let temp = result[index]\n            result[index]\
    \ = result[index + 1]\n            result[index + 1] = temp\n        }\n    }\n\
    \    return result", "    if lst.count < 2 {\n        return lst\n    }\n    var\
    \ result = [Int]()\n    var min = lst[0]\n    var max = lst[0]\n    for x in lst\
    \ {\n        if x < min {\n            min = x\n        }\n        if x > max\
    \ {\n            max = x\n        }\n    }\n    for x in lst {\n        if x ==\
    \ min {\n            result.insert(x, 0)\n        }\n        if x == max {\n \
    \           result.insert(x, result.count - 1)\n        }\n    }\n    return result",
  "    var result = lst\n    for i := 0; i < len(result); i++ {\n        for j :=\
    \ 0; j < len(result) - i; j++ {\n            if result[j] > result[j+1] {\n  \
    \              let tmp = result[j]\n                result[j] = result[j+1]\n\
    \                result[j+1] = tmp\n            }\n        }\n    }\n    return\
    \ result", "    var result = [Int]()\n    var min: Int? = nil\n    var max: Int?\
    \ = nil\n    for el in lst {\n        if min == nil || el < min {\n          \
    \  min = el\n        }\n        if max == nil || el > max {\n            max =\
    \ el\n        }\n    }\n    if min == nil {\n        min = max\n    }\n    if\
    \ max == nil {\n        max = min\n    }\n    if min == max {\n        return\
    \ result\n    }\n    if min < max {\n        for el in lst {\n            if el\
    \ == min {\n                result.insert(el, at: 0)\n            }\n        \
    \    if el == max {\n                result.insert(el, at: result.count - 1)\n\
    \            }\n        }\n    } else {\n        for el in lst {\n           \
    \ if el == max {\n                result.insert(el, at: result.count - 1)\n  \
    \          }\n            if el == min {\n                result.insert(el, at:\
    \ 0)\n            }\n        }\n    }\n    return result", "    var result = lst\n\
    \    for index in 0..<result.count {\n        let minIndex = index\n        let\
    \ maxIndex = index\n        for index2 in minIndex..<result.count {\n        \
    \    if result[index2] < result[minIndex] {\n                minIndex = index2\n\
    \            }\n            if result[index2] > result[maxIndex] {\n         \
    \       maxIndex = index2\n            }\n        }\n        if minIndex != index\
    \ {\n            let tmp = result[index]\n            result[index] = result[minIndex]\n\
    \            result[minIndex] = tmp\n        }\n        if maxIndex != index {\n\
    \            let tmp = result[index]\n            result[index] = result[maxIndex]\n\
    \            result[maxIndex] = tmp\n        }\n    }\n    return result", " \
    \   if lst.isEmpty() {\n        return lst\n    }\n    var min: Int = Int.max\n\
    \    var max: Int = Int.min\n    var middle: Int = 0\n    for element in lst {\n\
    \        if element < min {\n            min = element\n        } else if element\
    \ > max {\n            max = element\n        } else {\n            middle = element\n\
    \        }\n    }\n    var result = [Int]()\n    for element in lst {\n      \
    \  if element == min {\n            result.insert(0, element)\n        } else\
    \ if element == max {\n            result.insert(1, element)\n        } else {\n\
    \            result.insert(middle, element)\n        }\n    }\n    return result",
  "    var result = lst\n    for index in 0..<result.count {\n        let min = result[index]\n\
    \        let max = result[(index + 1) % result.count]\n        result[index] =\
    \ min\n        result[(index + 1) % result.count] = max\n    }\n    return result",
  "    var result = [Int]()\n    var min: Int = 0\n    var max: Int = 0\n    for element\
    \ in lst {\n        if element < min {\n            min = element\n        }\n\
    \        if element > max {\n            max = element\n        }\n    }\n   \
    \ for element in lst {\n        if element == min {\n            result.insert(element,\
    \ max)\n        } else {\n            result.insert(element, min)\n        }\n\
    \    }\n    return result", "    var result = [Int]()\n    var min: Int = 0\n\
    \    var max: Int = 0\n    for num in lst {\n        if min > num {\n        \
    \    min = num\n        }\n        if max < num {\n            max = num\n   \
    \     }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            max = num\n        }\n\
    \    }\n    for num in lst {\n        if min > num {\n            min = num\n\
    \        }\n        if max < num {\n            max = num\n        }\n    }\n\
    \    for num in lst {\n        if min > num {\n            min = num\n       \
    \ }\n        if max < num {\n            max = num\n        }\n    }\n    for\
    \ num in lst {\n        if min > num {\n            min = num\n        }\n   \
    \     if max < num {\n            max = num\n        }\n    }\n    for num in\
    \ lst {\n        if min > num {\n            min = num\n        }\n        if\
    \ max < num {\n            max = num\n        }\n    }\n    for num in lst {\n\
    \        if min > num {\n            min = num\n        }\n        if max < num\
    \ {\n            max = num\n        }\n    }\n    for num in lst {\n        if\
    \ min > num {\n            min = num\n        }\n        if max < num {\n    \
    \        max = num\n        }\n    }\n    for num in lst {\n        if min > num\
    \ {\n            min = num\n        }\n        if max < num {\n            max\
    \ = num\n        }\n    }\n    for num in lst {\n        if min > num {\n    \
    \        min = num\n        }\n        if max < num {\n            max = num\n\
    \        }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            max = num\n        }\n\
    \    }\n    for num in lst {\n        if min > num {\n            min = num\n\
    \        }\n        if max < num {\n            max = num\n        }\n    }\n\
    \    for num in lst {\n        if min > num {\n            min = num\n       \
    \ }\n        if max < num {\n            max = num\n        }\n    }\n    for\
    \ num in lst {\n        if min > num {\n            min = num\n        }\n   \
    \     if max < num {\n            max = num\n        }\n    }\n    for num in\
    \ lst {\n        if min > num {\n            min = num\n        }\n        if\
    \ max < num {\n            max = num\n        }\n", "    var result = [Int]()\n\
    \    var minValue = lst[0]\n    var maxValue = lst[0]\n    for value in lst {\n\
    \        if value < minValue {\n            minValue = value\n        }\n    \
    \    if value > maxValue {\n            maxValue = value\n        }\n    }\n \
    \   for value in lst {\n        if value < minValue {\n            result.insert(minValue,\
    \ value)\n        } else if value > maxValue {\n            result.insert(maxValue,\
    \ value)\n        } else {\n            result.insert(value, value)\n        }\n\
    \    }\n    return result", "    var result = [Int]()\n    var min = lst[0]\n\
    \    var max = lst[0]\n    for el in lst {\n        if el < min {\n          \
    \  min = el\n        }\n        if el > max {\n            max = el\n        }\n\
    \    }\n    for el in lst {\n        if el == min {\n            result.insert(el,\
    \ min)\n        }\n        if el == max {\n            result.insert(el, max)\n\
    \        }\n    }\n    return result", "    var result = [Int]()\n    var min:\
    \ Int? = nil\n    var max: Int? = nil\n    for el in lst {\n        if min ==\
    \ nil || el < min {\n            min = el\n        }\n        if max == nil ||\
    \ el > max {\n            max = el\n        }\n    }\n    if min == nil || max\
    \ == nil {\n        return result\n    }\n    for el in lst {\n        if el ==\
    \ min {\n            result.insert(el, min)\n        }\n        if el == max {\n\
    \            result.insert(el, max)\n        }\n    }\n    return result", " \
    \   var result = lst\n    for index in 0..<result.count {\n        let min = result[index]\n\
    \        let max = result[(index + 1) % result.count]\n        let tmp = result[index]\n\
    \        result[index] = min\n        result[(index + 1) % result.count] = max\n\
    \        result[index] = tmp\n    }\n    return result", "    var result = [Int]()\n\
    \    var min: Int = 0\n    var max: Int = 0\n    for num in lst {\n        if\
    \ min > num {\n            min = num\n        }\n        if max < num {\n    \
    \        max = num\n        }\n    }\n    for num in lst {\n        if min > num\
    \ {\n            min = num\n        }\n        if max < num {\n            max\
    \ = num\n        }\n    }\n    for num in lst {\n        if min > num {\n    \
    \        min = num\n        }\n        if max < num {\n            max = num\n\
    \        }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            max = num\n        }\n\
    \    }\n    for num in lst {\n        if min > num {\n            min = num\n\
    \        }\n        if max < num {\n            max = num\n        }\n    }\n\
    \    for num in lst {\n        if min > num {\n            min = num\n       \
    \ }\n        if max < num {\n            max = num\n        }\n    }\n    for\
    \ num in lst {\n        if min > num {\n            min = num\n        }\n   \
    \     if max < num {\n            max = num\n        }\n    }\n    for num in\
    \ lst {\n        if min > num {\n            min = num\n        }\n        if\
    \ max < num {\n            max = num\n        }\n    }\n    for num in lst {\n\
    \        if min > num {\n            min = num\n        }\n        if max < num\
    \ {\n            max = num\n        }\n    }\n    for num in lst {\n        if\
    \ min > num {\n            min = num\n        }\n        if max < num {\n    \
    \        max = num\n        }\n    }\n    for num in lst {\n        if min > num\
    \ {\n            min = num\n        }\n        if max < num {\n            max\
    \ = num\n        }\n    }\n    for num in lst {\n        if min > num {\n    \
    \        min = num\n        }\n        if max < num {\n            max = num\n\
    \        }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            max = num\n        }\n\
    \    }\n    for num in lst {\n        if min > num {\n            min = num\n\
    \        }\n        if max < num {\n            max = num\n        }\n    }\n\
    \    for num in lst {\n        if min > num {\n            min = num\n       \
    \ }\n        if max < num {\n            max = num\n        }\n", "    var result\
    \ = [Int]()\n    var min: Int = 0\n    var max: Int = 0\n    for element in lst\
    \ {\n        if element < min {\n            min = element\n        }\n      \
    \  if element > max {\n            max = element\n        }\n    }\n    for element\
    \ in lst {\n        if element == min {\n            result.insert(element, max)\n\
    \        }\n        if element == max {\n            result.insert(element, min)\n\
    \        }\n    }\n    return result", "    var result = [Int]()\n    var minValue\
    \ = lst[0]\n    var maxValue = lst[0]\n    for value in lst {\n        if value\
    \ < minValue {\n            minValue = value\n        }\n        if value > maxValue\
    \ {\n            maxValue = value\n        }\n    }\n    for value in lst {\n\
    \        if value < minValue {\n            result.insert(minValue, value)\n \
    \       }\n        if value > maxValue {\n            result.insert(maxValue,\
    \ value)\n        }\n    }\n    return result", "    var result = lst\n    for\
    \ index in 0..<result.count {\n        let min = result[index]\n        let max\
    \ = result[(index + 1) % result.count]\n        let temp = result[index]\n   \
    \     result[index] = max\n        result[(index + 1) % result.count] = min\n\
    \        result[index] = temp\n    }\n    return result"]
stop_tokens:
- "\n}"

name: HumanEval_158_find_max
language: swift
prompt: "\n/// Write a function that accepts a list of strings.\n/// The list contains\
  \ different words. Return the word with maximum number\n/// of unique characters.\
  \ If multiple strings have maximum number of unique\n/// characters, return the\
  \ one which comes first in lexicographical order.\n/// >>> find_max(words: [\"name\"\
  , \"of\", \"string\"])\n/// \"string\"\n/// >>> find_max(words: [\"name\", \"enam\"\
  , \"game\"])\n/// \"enam\"\n/// >>> find_max(words: [\"aaaaaaa\", \"bb\", \"cc\"\
  ])\n/// \"aaaaaaa\"\nfunc find_max(words: [String]) -> String {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(find_max(words: [\"name\", \"of\", \"string\"\
  ]) == \"string\")\nassert(find_max(words: [\"name\", \"enam\", \"game\"]) == \"\
  enam\")\nassert(find_max(words: [\"aaaaaaa\", \"bb\", \"cc\"]) == \"aaaaaaa\")\n\
  assert(find_max(words: [\"abc\", \"cba\"]) == \"abc\")\nassert(find_max(words: [\"\
  play\", \"this\", \"game\", \"of\", \"footbott\"]) == \"footbott\")\nassert(find_max(words:\
  \ [\"we\", \"are\", \"gonna\", \"rock\"]) == \"gonna\")\nassert(find_max(words:\
  \ [\"we\", \"are\", \"a\", \"mad\", \"nation\"]) == \"nation\")\nassert(find_max(words:\
  \ [\"this\", \"is\", \"a\", \"prrk\"]) == \"this\")\nassert(find_max(words: [\"\
  b\"]) == \"b\")\nassert(find_max(words: [\"play\", \"play\", \"play\"]) == \"play\"\
  )"
completions: ["    var maxCount = 0\n    var maxWord = \"\"\n    for word in words\
    \ {\n        var count = word.characters.count\n        if count > maxCount {\n\
    \            maxCount = count\n            maxWord = word\n        }\n    }\n\
    \    return maxWord", "    var maxCount = 0\n    var maxWord = \"\"\n    for word\
    \ in words {\n        if maxCount < word.characters.count {\n            maxCount\
    \ = word.characters.count\n            maxWord = word\n        }\n    }\n    return\
    \ maxWord", "    var maxCount = 0\n    var maxWord = \"\"\n    for word in words\
    \ {\n        var count = 0\n        for c in word {\n            if c.isUpper()\
    \ {\n                count++\n            }\n        }\n        if count > maxCount\
    \ {\n            maxCount = count\n            maxWord = word\n        }\n   \
    \ }\n    return maxWord", "    var maxCount = 0\n    var maxWord = \"\"\n    for\
    \ word in words {\n        var count = 0\n        for char in word {\n       \
    \     if char == char.lowercased() {\n                count += 1\n           \
    \ }\n        }\n        if count > maxCount {\n            maxCount = count\n\
    \            maxWord = word\n        }\n    }\n    return maxWord", "    var maxCount\
    \ = 0\n    var maxWord = \"\"\n    for word in words {\n        var count = word.characters.count\n\
    \        if count > maxCount {\n            maxCount = count\n            maxWord\
    \ = word\n        }\n    }\n    return maxWord", "    var maxCount = 0\n    var\
    \ maxWord = \"\"\n    for word in words {\n        if maxCount < word.characters.count\
    \ {\n            maxCount = word.characters.count\n            maxWord = word\n\
    \        }\n    }\n    return maxWord", "    var maxCount = 0\n    var maxWord\
    \ = \"\"\n    for word in words {\n        var count = 0\n        for char in\
    \ word {\n            if char == char.lowercased() {\n                count +=\
    \ 1\n            }\n        }\n        if count > maxCount {\n            maxCount\
    \ = count\n            maxWord = word\n        }\n    }\n    return maxWord",
  "    var maxCount = 0\n    var maxWord = \"\"\n    for word in words {\n       \
    \ var count = 0\n        for char in word {\n            if char == char.lowercased()\
    \ {\n                count += 1\n            }\n        }\n        if count >\
    \ maxCount {\n            maxCount = count\n            maxWord = word\n     \
    \   }\n    }\n    return maxWord", "    var maxCount = 0\n    var maxWord = \"\
    \"\n    for word in words {\n        if word.characters.count > maxCount {\n \
    \           maxCount = word.characters.count\n            maxWord = word\n   \
    \     }\n    }\n    return maxWord", "    var maxCount = 0\n    var maxWord =\
    \ \"\"\n    for word in words {\n        if let count = countCharacters(word)\
    \ {\n            if count > maxCount {\n                maxCount = count\n   \
    \             maxWord = word\n            }\n        }\n    }\n    return maxWord",
  "    var maxCount = 0\n    var maxWord = \"\"\n    for word in words {\n       \
    \ if maxCount < word.characters.count {\n            maxCount = word.characters.count\n\
    \            maxWord = word\n        }\n    }\n    return maxWord", "    var maxCount\
    \ = 0\n    var maxWord = \"\"\n    for word in words {\n        if maxCount <\
    \ word.characters.count {\n            maxCount = word.characters.count\n    \
    \        maxWord = word\n        }\n    }\n    return maxWord", "    var maxCount\
    \ = 0\n    var maxWord = \"\"\n    for word in words {\n        if let count =\
    \ word.characters.count {\n            if count > maxCount {\n               \
    \ maxCount = count\n                maxWord = word\n            }\n        }\n\
    \    }\n    return maxWord", "    var maxCount = 0\n    var maxWord = \"\"\n \
    \   for word in words {\n        let count = word.characters.count\n        if\
    \ count > maxCount {\n            maxCount = count\n            maxWord = word\n\
    \        }\n    }\n    return maxWord", "    var maxCount = 0\n    var maxWord\
    \ = \"\"\n    for word in words {\n        if maxCount < word.characters.count\
    \ {\n            maxCount = word.characters.count\n            maxWord = word\n\
    \        }\n    }\n    return maxWord", "    var max = \"\"\n    var maxCount\
    \ = 0\n    for word in words {\n        var count = 0\n        for char in word\
    \ {\n            if char == max {\n                count += 1\n            } else\
    \ {\n                count = 0\n            }\n            if count > maxCount\
    \ {\n                max = char\n                maxCount = count\n          \
    \  }\n        }\n    }\n    return max", "    var maxCount = 0\n    var maxWord\
    \ = \"\"\n    for word in words {\n        var count = 0\n        for char in\
    \ word {\n            if char == word[0] {\n                count += 1\n     \
    \       }\n        }\n        if count > maxCount {\n            maxCount = count\n\
    \            maxWord = word\n        }\n    }\n    return maxWord", "    var max\
    \ = \"\"\n    var maxCount = 0\n    for word in words {\n        var count = 0\n\
    \        for char in word {\n            if char == max {\n                count\
    \ += 1\n            } else {\n                count = 0\n            }\n     \
    \       if count > maxCount {\n                max = char\n                maxCount\
    \ = count\n            }\n        }\n    }\n    return max", "    var maxCount\
    \ = 0\n    var maxWord = \"\"\n    for word in words {\n        if maxCount <\
    \ word.characters.count {\n            maxCount = word.characters.count\n    \
    \        maxWord = word\n        }\n    }\n    return maxWord", "    var maxCount\
    \ = 0\n    var maxWord = \"\"\n    for word in words {\n        if let count =\
    \ word.characters.count {\n            if count > maxCount {\n               \
    \ maxCount = count\n                maxWord = word\n            }\n        }\n\
    \    }\n    return maxWord"]
stop_tokens:
- "\n}"

name: HumanEval_153_Strongest_Extension
language: swift
prompt: "\n/// You will be given the name of a class (a string) and a list of extensions.\n\
  /// The extensions are to be used to load additional classes to the class. The\n\
  /// strength of the extension is as follows: Let CAP be the number of the uppercase\n\
  /// letters in the extension's name, and let SM be the number of lowercase letters\
  \ \n/// in the extension's name, the strength is given by the fraction CAP - SM.\
  \ \n/// You should find the strongest extension and return a string in this \n///\
  \ format: ClassName.StrongestExtensionName.\n/// If there are two or more extensions\
  \ with the same strength, you should\n/// choose the one that comes first in the\
  \ list.\n/// For example, if you are given \"Slices\" as the class and a list of\
  \ the\n/// extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
  /// return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
  \ \n/// (its strength is -1).\n/// Example:\n/// >>> Strongest_Extension(class_name:\
  \ \"my_class\", extensions: [\"AA\", \"Be\", \"CC\"])\n/// \"my_class.AA\"\nfunc\
  \ Strongest_Extension(class_name: String, extensions: [String]) -> String {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(Strongest_Extension(class_name: \"Watashi\"\
  , extensions: [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\nassert(Strongest_Extension(class_name:\
  \ \"Boku123\", extensions: [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"\
  ]) == \"Boku123.YEs.WeCaNe\")\nassert(Strongest_Extension(class_name: \"__YESIMHERE\"\
  , extensions: [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
  ]) == \"__YESIMHERE.NuLl__\")\nassert(Strongest_Extension(class_name: \"K\", extensions:\
  \ [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\nassert(Strongest_Extension(class_name:\
  \ \"__HAHA\", extensions: [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\
  )\nassert(Strongest_Extension(class_name: \"YameRore\", extensions: [\"HhAas\",\
  \ \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"YameRore.okIWILL123\")\n\
  assert(Strongest_Extension(class_name: \"finNNalLLly\", extensions: [\"Die\", \"\
  NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\nassert(Strongest_Extension(class_name:\
  \ \"_\", extensions: [\"Bb\", \"91245\"]) == \"_.Bb\")\nassert(Strongest_Extension(class_name:\
  \ \"Sp\", extensions: [\"671235\", \"Bb\"]) == \"Sp.671235\")"
completions: ["    var strongest_extension = \"\"\n    var strength = -1\n    for\
    \ extension in extensions {\n        let class_name_components = class_name.components(separatedBy:\
    \ \".\")\n        let extension_components = extension.components(separatedBy:\
    \ \".\")\n        let class_name = class_name_components[class_name_components.count\
    \ - 1]\n        let extension = extension_components[extension_components.count\
    \ - 1]\n        let class_name_components_count = class_name_components.count\n\
    \        let extension_components_count = extension_components.count\n       \
    \ let class_name_components_count_index = class_name_components_count - 1\n  \
    \      let extension_components_count_index = extension_components_count - 1\n\
    \        let class_name_components_count_index_minus_1 = class_name_components_count_index\
    \ - 1\n        let extension_components_count_index_minus_1 = extension_components_count_index\
    \ - 1\n        let class_name_components_count_minus_1 = class_name_components_count\
    \ - 1\n        let extension_components_count_minus_1 = extension_components_count\
    \ - 1\n        let class_name_components_count_minus_2 = class_name_components_count\
    \ - 2\n        let extension_components_count_minus_2 = extension_components_count\
    \ - 2\n        let class_name_components_count_minus_3 = class_name_components_count\
    \ - 3\n        let extension_components_count_minus_3 = extension_components_count\
    \ - 3\n        let class_name_components_count_minus_4 = class_name_components_count\
    \ - 4\n        let extension_components_count_minus_4 = extension_components_count\
    \ - 4\n        let class_name_components_count_minus_5 = class_name_components_count\
    \ - 5\n        let extension_components_count_minus_5 = extension_components_count\
    \ - 5\n        let class_name_components_count_minus_6 = class_name_components_count\
    \ - 6\n        let extension_components_count_minus_6 = extension_components_count\
    \ - 6\n        let class_name_components_count_minus_7 = class_name_components_count\
    \ - 7\n        let extension_components_count_minus_7 = extension_components_count\
    \ - 7\n        let class_name_components_count_minus_8 = class_name_components_count\
    \ - 8\n        let extension_components_count_minus_8 = extension_components_count\
    \ - 8\n        let class_name_components_count_minus_9 = class_name_components_count\
    \ - 9\n        let extension_components_count_minus_9 = extension_components_count\
    \ - 9\n        let class_name_components_count_minus_10 = class_name_components_count\
    \ - 10\n        let extension_components_count_minus_10 = extension_components_count\
    \ - 10\n        let class_name_components_count_minus_11 = class_name_components_",
  "    var strongest_extension = \"\"\n    var strength = -1\n    for extension in\
    \ extensions {\n        var extension_length = extension.count\n        var extension_strength\
    \ = extension_length - 1\n        for _ in 0..<extension_length {\n          \
    \  let index = extension.index(extension.startIndex, offsetBy: 1)\n          \
    \  let char = extension[index].lowercased()\n            if char == char.lowercased()\
    \ {\n                extension_strength -= 1\n            }\n        }\n     \
    \   if extension_strength > strength {\n            strongest_extension = class_name\n\
    \            strength = extension_strength\n        }\n    }\n    return strongest_extension",
  "    var strongest_extension = \"\"\n    for extension in extensions {\n       \
    \ let class_name_components = class_name.components(separatedBy: \".\")\n    \
    \    let extension_components = extension.components(separatedBy: \".\")\n   \
    \     let class_name = class_name_components[0]\n        let extension = extension_components[0]\n\
    \        let class_name_components_count = class_name_components.count\n     \
    \   let extension_components_count = extension_components.count\n        let class_name_components_count_upper\
    \ = class_name_components_count - class_name_components_count.count\n        let\
    \ extension_components_count_upper = extension_components_count - extension_components_count.count\n\
    \        let class_name_components_count_lower = class_name_components_count -\
    \ class_name_components_count_upper\n        let extension_components_count_lower\
    \ = extension_components_count - extension_components_count_upper\n        let\
    \ class_name_components_count_diff = class_name_components_count_upper - class_name_components_count_lower\n\
    \        let extension_components_count_diff = extension_components_count_upper\
    \ - extension_components_count_lower\n        let class_name_components_count_diff_upper\
    \ = class_name_components_count_diff - class_name_components_count_upper\n   \
    \     let extension_components_count_diff_upper = extension_components_count_diff\
    \ - extension_components_count_upper\n        let class_name_components_count_diff_lower\
    \ = class_name_components_count_diff - class_name_components_count_lower\n   \
    \     let extension_components_count_diff_lower = extension_components_count_diff\
    \ - extension_components_count_lower\n        let class_name_components_count_diff_diff\
    \ = class_name_components_count_diff_upper - class_name_components_count_diff_lower\n\
    \        let extension_components_count_diff_diff = extension_components_count_diff_upper\
    \ - extension_components_count_diff_lower\n        let class_name_components_count_diff_diff_upper\
    \ = class_name_components_count_diff_diff - class_name_components_count_diff_upper\n\
    \        let extension_components_count_diff_diff_upper = extension_components_count_diff_diff\
    \ - extension_components_count_diff_upper\n        let class_name_components_count_diff_diff_lower\
    \ = class_name_components_count_diff_diff - class_name_components_count_diff_lower\n\
    \        let extension_components_count_diff_diff_lower = extension_components_count_diff_diff\
    \ - extension_components_count_diff_lower\n        let class_name_components_count_diff_diff_diff\
    \ = class_name_components_count_diff_diff_upper - class_name_components_count_diff_diff_lower\n\
    \        let extension_components_count_diff_diff_diff = extension_components_count_diff_diff_upper\
    \ - extension_components_count_diff_diff_lower\n        let class_name_components_count_diff_",
  "    var strongest_extension = \"\"\n    var max_strength = -1\n    for extension\
    \ in extensions {\n        let extension_strength = extension.countUpToUppercase()\
    \ - extension.countUpToLowercase()\n        if extension_strength > max_strength\
    \ {\n            max_strength = extension_strength\n            strongest_extension\
    \ = extension\n        }\n    }\n    return class_name + \".\" + strongest_extension",
  "    var strongest_extension = \"\"\n    var max_strength = -1\n    for extension\
    \ in extensions {\n        let extension_strength = extension.countUpToUppercaseLetters\
    \ - extension.countUpToLowercaseLetters\n        if extension_strength > max_strength\
    \ {\n            max_strength = extension_strength\n            strongest_extension\
    \ = extension\n        }\n    }\n    return class_name + \".\" + strongest_extension",
  "    var strongest_extension = \"\"\n    var strength = -1\n    for extension in\
    \ extensions {\n        let extension_uppercase_count = extension.count\n    \
    \    let extension_lowercase_count = extension.count\n        let extension_strength\
    \ = extension_uppercase_count - extension_lowercase_count\n        if extension_strength\
    \ > strength {\n            strongest_extension = extension\n            strength\
    \ = extension_strength\n        }\n    }\n    return class_name + \".\" + strongest_extension",
  '    return class_name + "." + extensions[extensions.index(extensions.firstIndex(of:
    class_name.lowercased()))]', '    return class_name + "." + extensions[extensions.index(extensions.firstIndex(of:
    class_name.lowercased()))]', '    return class_name + "." + extensions[extensions.index(extensions.firstIndex(of:
    class_name.lowercased()))]', "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToUppercaseLetters - extension.countUpToLowercaseLetters\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        var extension_strength = extension.count\n        for char in extension\
    \ {\n            if char.uppercased() != char {\n                extension_strength\
    \ -= 1\n            }\n        }\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var max_strength = -1\n    for extension in extensions {\n     \
    \   let extension_strength = extension.countUppercaseLetters() - extension.countLowercaseLetters()\n\
    \        if extension_strength > max_strength {\n            max_strength = extension_strength\n\
    \            strongest_extension = extension\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var\
    \ strongest_extension_strength = -1\n    for extension in extensions {\n     \
    \   let extension_strength = extension.countUpToLowercaseLetters()\n        if\
    \ extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var max_strength = -1\n    for extension in extensions {\n     \
    \   var strength = count_capital_letters(extension) - count_capital_letters(class_name)\n\
    \        if strength > max_strength {\n            max_strength = strength\n \
    \           strongest_extension = extension\n        }\n    }\n    return class_name\
    \ + strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        var extension_strength = extension.count\n\
    \        for letter in extension {\n            if letter.isUpper() {\n      \
    \          extension_strength -= 1\n            }\n        }\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var max_strength = -1\n    for extension in extensions {\n     \
    \   var strength = count_capital_letters(extension) - count_capital_letters(class_name)\n\
    \        if strength > max_strength {\n            max_strength = strength\n \
    \           strongest_extension = extension\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var\
    \ max_strength = -1\n    for extension in extensions {\n        let extension_strength\
    \ = extension.countUppercaseLetters - extension.countLowercaseLetters\n      \
    \  if extension_strength > max_strength {\n            max_strength = extension_strength\n\
    \            strongest_extension = extension\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var\
    \ strength = -1\n    for extension in extensions {\n        let cap = extension.count\n\
    \        let sm = class_name.count\n        let strength = cap - sm\n        if\
    \ strength > 0 {\n            if strength > strongest_extension.count {\n    \
    \            strongest_extension = extension\n            }\n        }\n    }\n\
    \    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var max_strength = -1\n    for extension in extensions {\n     \
    \   let (class_name, extension) = extension.split(\".\")\n        let class_name_lowercase\
    \ = class_name.lowercased()\n        let extension_lowercase = extension.lowercased()\n\
    \        let class_name_length = class_name_lowercase.count\n        let extension_length\
    \ = extension_lowercase.count\n        let class_name_uppercase_count = class_name_lowercase\n\
    \            .unicodeScalars\n            .filter({$0.isUppercase})\n        \
    \    .count\n        let extension_uppercase_count = extension_lowercase\n   \
    \         .unicodeScalars\n            .filter({$0.isUppercase})\n           \
    \ .count\n        let class_name_uppercase_fraction = class_name_uppercase_count\
    \ / class_name_length\n        let extension_uppercase_fraction = extension_uppercase_count\
    \ / extension_length\n        let strength = class_name_uppercase_fraction - extension_uppercase_fraction\n\
    \        if strength > max_strength {\n            max_strength = strength\n \
    \           strongest_extension = extension\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension", "    // Your code here\n    var strongest_extension\
    \ = \"\"\n    var strength = -1\n    for extension in extensions {\n        var\
    \ count = 0\n        for c in extension {\n            if c.isUpper() {\n    \
    \            count += 1\n            }\n        }\n        if count == 0 {\n \
    \           strength = -1\n        } else {\n            strength = count - count\n\
    \        }\n        if strength > 0 {\n            if strongest_extension == \"\
    \" {\n                strongest_extension = class_name\n            } else {\n\
    \                strongest_extension = strongest_extension + \".\" + extension\n\
    \            }\n        }\n    }\n    return strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUppercaseLetters() - extension.countLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToUppercaseLetters - extension.countUpToLowercaseLetters\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.characters.count\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToUppercaseLetters() -\
    \ extension.countUpToLowercaseLetters()\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUpToUppercaseLetters\
    \ - extension.countUpToLowercaseLetters\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var max_strength\
    \ = -1\n    for extension in extensions {\n        let strength = extension.countUpToLowercaseLetters()\n\
    \        if strength > max_strength {\n            max_strength = strength\n \
    \           strongest_extension = extension\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var\
    \ strongest_extension_strength = -1\n    for extension in extensions {\n     \
    \   var extension_strength = extension.count\n        for letter in extension\
    \ {\n            if letter.isUpper() {\n                extension_strength -=\
    \ 1\n            }\n        }\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    for extension\
    \ in extensions {\n        let class_name_extension = class_name + extension\n\
    \        let extension_strength = class_name_extension.characters.count\n    \
    \    if extension_strength > strongest_extension.characters.count {\n        \
    \    strongest_extension = class_name_extension\n        }\n    }\n    return\
    \ strongest_extension", "    var strongest_extension = \"\"\n    var max_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUppercaseLetters()\
    \ - extension.countLowercaseLetters()\n        if extension_strength > max_strength\
    \ {\n            max_strength = extension_strength\n            strongest_extension\
    \ = extension\n        }\n    }\n    return class_name + \".\" + strongest_extension",
  "    var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        let extension_strength = extension.countUpToUppercase()\
    \ - extension.countUpToLowercase()\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    // Your code\
    \ here\n    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strength = -1\n    for extension in extensions {\n        let\
    \ cap = extension.count\n        let sm = class_name.count\n        let strength\
    \ = cap - sm\n        if strength > 0 {\n            strongest_extension = class_name\
    \ + \".\" + extension\n            break\n        }\n    }\n    return strongest_extension",
  "    var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        let extension_strength = extension.characters.count\
    \ - extension.lowercased().characters.count\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strength\
    \ = -1 // default strength to -1\n    var class_name_components = class_name.components(separatedBy:\
    \ \".\")\n    var extension_components = extensions.components(separatedBy: \"\
    .\")\n    for component in class_name_components {\n        if let index = extension_components.index(of:\
    \ component) {\n            strength = extension_components[index].count\n   \
    \     }\n    }\n    if strength > 0 {\n        for component in extension_components\
    \ {\n            if let index = class_name_components.index(of: component) {\n\
    \                strongest_extension = class_name_components[index] + \".\" +\
    \ extension_components[index]\n            }\n        }\n    }\n    return strongest_extension",
  '    return class_name + "." + Strongest_Extension_Strongest(extensions)', "   \
    \ var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        let extension_strength = extension.countUpToUppercaseLetters\
    \ - extension.countUpToLowercaseLetters\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strength = -1\n    for extension in extensions {\n        let\
    \ extension_uppercase_count = extension.uppercaseString.count\n        let extension_lowercase_count\
    \ = extension.lowercaseString.count\n        let extension_strength = extension_uppercase_count\
    \ - extension_lowercase_count\n        if extension_strength > strength {\n  \
    \          strongest_extension = extension\n            strength = extension_strength\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension", "   \
    \ var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        let extension_strength = extension.countUppercaseLetters()\
    \ - extension.countLowercaseLetters()\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strength\
    \ = -1\n    for extension in extensions {\n        let extension_length = extension.count\n\
    \        let class_name_length = class_name.count\n        let extension_strength\
    \ = extension_length - class_name_length\n        if extension_strength > strength\
    \ {\n            strongest_extension = extension\n            strength = extension_strength\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension", "   \
    \ var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    var extension_counter = 0\n    for extension in extensions {\n        extension_counter\
    \ += 1\n        let extension_strength = extension.characters.count\n        if\
    \ extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    if extension_counter > 1 {\n        let extension_strength_fraction\
    \ = extension_counter / Double(extensions.count)\n        let extension_strength_rounded\
    \ = Int(extension_strength_fraction * Double(strongest_extension_strength))\n\
    \        strongest_extension = class_name + \".\" + strongest_extension.substring(extension_strength_rounded)\n\
    \    }\n    return strongest_extension", "    var strongest_extension = \"\"\n\
    \    var strongest_extension_strength = -1\n    for extension in extensions {\n\
    \        let extension_strength = extension.countUpToLowercaseLetters()\n    \
    \    if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strength = -1\n    for extension in extensions {\n        let\
    \ class_name_components = class_name.components(separatedBy: \".\")\n        let\
    \ extension_components = extension.components(separatedBy: \".\")\n        let\
    \ class_name_length = class_name_components.count\n        let extension_length\
    \ = extension_components.count\n        let class_name_components_count = class_name_components.count\n\
    \        let extension_components_count = extension_components.count\n       \
    \ let class_name_components_count_upper = class_name_components_count - class_name_length\n\
    \        let extension_components_count_upper = extension_components_count - extension_length\n\
    \        let class_name_components_count_lower = class_name_length - class_name_components_count\n\
    \        let extension_components_count_lower = extension_length - extension_components_count\n\
    \        let class_name_components_count_equal = class_name_components_count_upper\
    \ + class_name_components_count_lower\n        let extension_components_count_equal\
    \ = extension_components_count_upper + extension_components_count_lower\n    \
    \    let class_name_components_count_greater = class_name_components_count_equal\
    \ > class_name_components_count_upper\n        let extension_components_count_greater\
    \ = extension_components_count_equal > extension_components_count_upper\n    \
    \    let class_name_components_count_less = class_name_components_count_equal\
    \ < class_name_components_count_upper\n        let extension_components_count_less\
    \ = extension_components_count_equal < extension_components_count_upper\n    \
    \    let class_name_components_count_greater_or_equal = class_name_components_count_greater\
    \ || class_name_components_count_equal\n        let extension_components_count_greater_or_equal\
    \ = extension_components_count_greater || extension_components_count_equal\n \
    \       let class_name_components_count_less_or_equal = class_name_components_count_less\
    \ || class_name_components_count_equal\n        let extension_components_count_less_or_equal\
    \ = extension_components_count_less || extension_components_count_equal\n    \
    \    let class_name_components_count_greater_or_equal_or_less = class_name_components_count_greater_or_equal\
    \ || class_name_components_count_less_or_equal\n        let extension_components_count_greater_or_equal_or_less\
    \ = extension_components_count_greater_or_equal || extension_components_count_less_or_equal\n\
    \        let class_name_components_count_greater_or_equal_or_less_or_equal = class_name_components_count_greater_or_equal_or_less\
    \ || class_name_components_count_greater\n        let extension_components_count_greater_or_equal_or_less_or_equal\
    \ = extension_components_count_greater_or_equal_or_less || ", "    var strongest_extension\
    \ = \"\"\n    var strength = -1\n    for extension in extensions {\n        let\
    \ extension_lowercase = extension.lowercased()\n        let class_lowercase =\
    \ class_name.lowercased()\n        let strength_of_extension = class_lowercase.characters.count\
    \ - extension_lowercase.characters.count\n        if strength_of_extension > strength\
    \ {\n            strongest_extension = extension\n            strength = strength_of_extension\n\
    \        }\n    }\n    return strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        var extension_strength = extension.count\n        for letter in extension\
    \ {\n            if letter.isUpper() {\n                extension_strength -=\
    \ 1\n            }\n        }\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUppercaseLetters()\
    \ - extension.countLowercaseLetters()\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUpToUppercaseLetters\
    \ - extension.countUpToLowercaseLetters\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var max_strength\
    \ = -1\n    for extension in extensions {\n        var strength = count_capital_letters(extension)\
    \ - count_capital_letters(class_name)\n        if strength > max_strength {\n\
    \            max_strength = strength\n            strongest_extension = extension\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension", "   \
    \ var strongest_extension = \"\"\n    var strength = -1\n    for extension in\
    \ extensions {\n        let extension_length = extension.count\n        let class_name_length\
    \ = class_name.count\n        let extension_strength = extension_length - class_name_length\n\
    \        if extension_strength > strength {\n            strongest_extension =\
    \ extension\n            strength = extension_strength\n        }\n    }\n   \
    \ return class_name + \".\" + strongest_extension", "    // Your code here\n \
    \   var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        let extension_strength = extension.count\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    for extension in extensions {\n        let class_name_components\
    \ = class_name.components(separatedBy: \".\")\n        let extension_components\
    \ = extension.components(separatedBy: \".\")\n        let class_name_components_count\
    \ = class_name_components.count\n        let extension_components_count = extension_components.count\n\
    \        let class_name_components_count_upper = class_name_components.count -\
    \ class_name_components_count\n        let extension_components_count_lower =\
    \ extension_components.count - extension_components_count\n        let extension_components_count_upper_smallest\
    \ = extension_components_count_upper - extension_components_count_lower\n    \
    \    let extension_components_count_lower_smallest = extension_components_count_lower\
    \ - extension_components_count_upper\n        let extension_components_count_upper_smallest_extension\
    \ = extension_components_count_upper_smallest / extension_components_count\n \
    \       let extension_components_count_lower_smallest_extension = extension_components_count_lower_smallest\
    \ / extension_components_count\n        let extension_components_count_upper_smallest_extension_extension\
    \ = extension_components_count_upper_smallest_extension * extension_components_count_upper\n\
    \        let extension_components_count_lower_smallest_extension_extension = extension_components_count_lower_smallest_extension\
    \ * extension_components_count_lower\n        let extension_components_count_upper_smallest_extension_extension_extension\
    \ = extension_components_count_upper_smallest_extension_extension * extension_components_count_upper_smallest\n\
    \        let extension_components_count_lower_smallest_extension_extension_extension\
    \ = extension_components_count_lower_smallest_extension_extension * extension_components_count_lower_smallest\n\
    \        let extension_components_count_upper_smallest_extension_extension_extension_extension\
    \ = extension_components_count_upper_smallest_extension_extension_extension *\
    \ extension_components_count_upper_smallest_extension\n        let extension_components_count_lower_smallest_extension_extension_extension_extension\
    \ = extension_components_count_lower_smallest_extension_extension_extension *\
    \ extension_components_count_lower_smallest_extension\n        let extension_components_count_upper_smallest_extension_extension_extension_extension_extension\
    \ = extension_components_count_upper_smallest_extension_extension_extension_extension\
    \ * extension_components_count_upper_smallest_extension_extension\n        let\
    \ extension_components_count_lower_smallest_extension_extension_extension_extension_extension_extension\
    \ = extension_components_count_lower_smallest_extension_extension_extension_extension\
    \ * extension_component", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension\
    \ = extension\n            strongest_extension_strength = extension_strength\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension", "   \
    \ var strongest_extension = \"\"\n    var strength = -1\n    for extension in\
    \ extensions {\n        let extension_uppercase_count = extension.uppercased().count\n\
    \        let extension_lowercase_count = extension.lowercased().count\n      \
    \  let extension_strength = extension_uppercase_count - extension_lowercase_count\n\
    \        if extension_strength > strength {\n            strongest_extension =\
    \ extension\n            strength = extension_strength\n        }\n    }\n   \
    \ return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strength = -1\n    for extension in extensions {\n        var\
    \ extension_strength = extension.count\n        for letter in extension {\n  \
    \          if letter.isUpper() {\n                extension_strength -= 1\n  \
    \          }\n        }\n        if extension_strength > strength {\n        \
    \    strongest_extension = extension\n            strength = extension_strength\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension", "   \
    \ var strongest_extension = \"\"\n    for extension in extensions {\n        var\
    \ class_name_with_extension = class_name + extension\n        var class_name_with_extension_lowercase\
    \ = class_name_with_extension.lowercased()\n        var class_name_with_extension_lowercase_index\
    \ = class_name_with_extension_lowercase.index(class_name_with_extension_lowercase)\n\
    \        var class_name_with_extension_lowercase_index = class_name_with_extension_lowercase_index.successor()\n\
    \        var class_name_with_extension_lowercase_index = class_name_with_extension_lowercase_index.successor()\n\
    \        var class_name_with_extension_lowercase_index = class_name_with_extension_lowercase_index.successor()\n\
    \        var class_name_with_extension_lowercase_index = class_name_with_extension_lowercase_index.successor()\n\
    \        var class_name_with_extension_lowercase_index = class_name_with_extension_lowercase_index.successor()\n\
    \        var class_name_with_extension_lowercase_index = class_name_with_extension_lowercase_index.successor()\n\
    \        var class_name_with_extension_lowercase_index = class_name_with_extension_lowercase_index.successor()\n\
    \        var class_name_with_extension_lowercase_index = class_name_with_extension_lowercase_index.successor()\n\
    \        var class_name_with_extension_lowercase_index = class_name_with_extension_lowercase_index.successor()\n\
    \        var class_name_with_extension_lowercase_index = class_name_with_extension_lowercase_index.successor()\n\
    \        var class_name_with_extension_lowercase_index = class_name_with_extension_lowercase_index.successor()\n\
    \        var class_name_with_extension_lowercase_index = class_name_with_extension_lowercase_index.successor()\n\
    \        var class_name_with_extension_lowercase_index = class_name_with_extension_lowercase_index.successor()\n\
    \        var class_name_with_extension_lowercase_index = class_name_with_extension_lowercase_index.successor()\n\
    \        var class_name_with_extension_lowercase_index = class_name_with_extension_lowercase_index.successor()\n\
    \        var class_name_with_extension_lowercase_index = class_name_with_extension_lowercase_index.successor()\n\
    \        var class_name_with_extension_lowercase_index = class_name_with_extension_lowercase_index.successor()\n\
    \        var class_name_with_extension_lowercase_index = class_name_with_extension_lowercase_index.successor()\n\
    \        var class_name_with_extension_lowercase_index = class_name_with_extension_lowercase_index.successor()\n\
    \        var class_name_with_extension_lowercase_index = class_name_with_extension_lowercase_index.successor()\n\
    \        var class_name_with_extension_lowercase_index = class_name_with_extension_lowercase_index.successor()\n\
    \        var class_name_with_extension_lowercase_index = class_name_with_extension_lowercase_index.successor()\n\
    \        var class_name_with_extension_lowercase_index = class_name_with_extension_lowercase_index.successor()\n\
    \        var class_name_with_extension_lowercase_index = class_name_with_extension",
  "    var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        let extension_strength = extension.countUppercaseLetters()\
    \ - extension.countLowercaseLetters()\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", '    return class_name + "." + extensions[extensions.index(extensions.firstIndex(of:
    class_name.lowercased()))!]', "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension\
    \ = extension\n            strongest_extension_strength = extension_strength\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension", "   \
    \ var strongest_extension = \"\"\n    var strength = -1\n    for extension in\
    \ extensions {\n        let extension_length = extension.count\n        let class_length\
    \ = class_name.count\n        let strength_fraction = class_length - extension_length\n\
    \        let strength = strength_fraction * CAP - SM\n        if strength > strength\
    \ {\n            strongest_extension = extension\n            strength = strength\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension", "   \
    \ var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", '    return class_name
    + Strongest_Extension_Name(extensions)', "    var strongest_extension = \"\"\n\
    \    var max_strength = -1\n    for extension in extensions {\n        let extension_strength\
    \ = extension.characters.count\n        if extension_strength > max_strength {\n\
    \            max_strength = extension_strength\n            strongest_extension\
    \ = extension\n        }\n    }\n    return class_name + \".\" + strongest_extension",
  "    var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        var extension_strength = extension.count\n\
    \        for letter in extension {\n            if letter.isUpper() {\n      \
    \          extension_strength -= 1\n            }\n        }\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        var extension_strength = extension.count\n        for character in\
    \ extension {\n            if character == character.lowercased() {\n        \
    \        extension_strength -= 1\n            }\n        }\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToUppercaseLetters - extension.countUpToLowercaseLetters\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUppercaseLetters() - extension.countLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", '    return class_name
    + "." + extensions[extensions.index(extensions.firstIndex(of: class_name.lowercased()))]',
  "    var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUppercaseLetters() - extension.countLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    var class_name_uppercase\
    \ = class_name.uppercased()\n    var class_name_lowercase = class_name.lowercased()\n\
    \    for extension in extensions {\n        var extension_uppercase = extension.uppercased()\n\
    \        var extension_lowercase = extension.lowercased()\n        var extension_strength\
    \ = class_name_uppercase.distance(class_name_lowercase)\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return strongest_extension", "    var strongest_extension = \"\"\n\
    \    var strongest_extension_strength = -1\n    for extension in extensions {\n\
    \        let extension_strength = extension.countUpToCapitalLetters() - extension.countLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", '    return class_name
    + "." + extensions[extensions.index(extensions.firstIndex(of: class_name.lowercased()))]',
  "    var strongest_extension = \"\"\n    var max_strength = -1\n    for extension\
    \ in extensions {\n        let strength = extension.countUpToCapitalLetters()\
    \ - extension.countUpToLowercaseLetters()\n        if strength > max_strength\
    \ {\n            max_strength = strength\n            strongest_extension = extension\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension", "   \
    \ var strongest_extension = \"\"\n    var strength = -1 // default strength is\
    \ -1\n    var class_name_array = class_name.characters\n    var extension_array\
    \ = extensions.characters\n    for index in 0..<class_name_array.count {\n   \
    \     let class_character = class_name_array[index]\n        let extension_character\
    \ = extension_array[index]\n        if class_character == extension_character\
    \ {\n            strength += 1\n        } else {\n            if strength > 0\
    \ {\n                strongest_extension += class_character\n            }\n \
    \           strength = 1\n        }\n    }\n    if strength > 0 {\n        strongest_extension\
    \ += class_name_array[class_name_array.count-1]\n    }\n    return strongest_extension",
  "    var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    var extension_strength = 0\n    for extension in extensions {\n        extension_strength\
    \ = extension.countUpToUppercase() - extension.countUpToLowercase()\n        if\
    \ extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        var extension_strength = extension.count\n        for c in extension\
    \ {\n            if c >= 'A' && c <= 'Z' {\n                extension_strength\
    \ = extension_strength * 26 + c - 'A'\n            } else {\n                extension_strength\
    \ = extension_strength * 10 + c - 'a'\n            }\n        }\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUppercaseLetters() - extension.countLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        var extension_strength = extension.count\n        for letter in extension\
    \ {\n            if letter.isUpper() {\n                extension_strength -=\
    \ 1\n            }\n        }\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var max_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.characters.count\n\
    \        if extension_strength > max_strength {\n            max_strength = extension_strength\n\
    \            strongest_extension = extension\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var\
    \ strongest_extension_strength = -1\n    for extension in extensions {\n     \
    \   let extension_strength = extension.countUpToUppercaseLetters() - extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        var extension_strength = extension.count\n        for character in\
    \ extension {\n            if character == character.lowercased() {\n        \
    \        extension_strength -= 1\n            }\n        }\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    if extensions.isEmpty\
    \ {\n        return class_name\n    }\n    var max_strength = -1\n    var max_extension\
    \ = \"\"\n    for extension in extensions {\n        let extension_strength =\
    \ extension.countUppercaseLetters() - extension.countLowercaseLetters()\n    \
    \    if extension_strength > max_strength {\n            max_strength = extension_strength\n\
    \            max_extension = extension\n        }\n    }\n    return class_name\
    \ + \".\" + max_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUpToUppercase()\
    \ - extension.countUpToLowercase()\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var max_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUppercaseLetters()\
    \ - extension.countLowercaseLetters()\n        if extension_strength > max_strength\
    \ {\n            max_strength = extension_strength\n            strongest_extension\
    \ = extension\n        }\n    }\n    return class_name + \".\" + strongest_extension",
  "    var strongest_extension = \"\"\n    var strength = -1\n    for extension in\
    \ extensions {\n        let cap = extension.count\n        let sm = class_name.count\n\
    \        let strength = cap - sm\n        if strength > 0 {\n            strongest_extension\
    \ = class_name + \".\" + extension\n            break\n        }\n    }\n    return\
    \ strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUpToUppercaseLetters\
    \ - extension.countUpToLowercaseLetters\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strength\
    \ = -1\n    for extension in extensions {\n        let cap = extension.count\n\
    \        let sm = class_name.count\n        let strength = cap - sm\n        if\
    \ strength > 0 {\n            if strength > strongest_extension.count {\n    \
    \            strongest_extension = extension\n            }\n        }\n    }\n\
    \    return class_name + \".\" + strongest_extension", '    return class_name
    + "." + extensions[extensions.index(extensions.firstIndex(of: class_name.lowercased()))!]',
  "    var strongest_extension = \"\"\n    var strength = -1\n    for extension in\
    \ extensions {\n        var extension_length = extension.count\n        var extension_strength\
    \ = extension_length / class_name.count\n        if extension_strength > strength\
    \ {\n            strongest_extension = extension\n            strength = extension_strength\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension", "   \
    \ var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        let extension_strength = extension.countUpToUppercaseLetters\
    \ - extension.countUpToLowercaseLetters\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        var extension_strength = extension.count\n\
    \        for letter in extension {\n            if letter.isUpper() {\n      \
    \          extension_strength -= 1\n            }\n        }\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension = class_name\n\
    \            strongest_extension_strength = extension_strength\n        }\n  \
    \  }\n    return strongest_extension", "    var strongest_extension = \"\"\n \
    \   var strongest_extension_strength = -1\n    for extension in extensions {\n\
    \        let extension_strength = extension.countUpToLowercaseLetters()\n    \
    \    if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strength = -1\n    for extension in extensions {\n        let\
    \ class_name_components = class_name.components(separatedBy: \".\")\n        let\
    \ extension_components = extension.components(separatedBy: \".\")\n        let\
    \ class_name = class_name_components[0]\n        let extension = extension_components[0]\n\
    \        let class_name_components_count = class_name_components.count\n     \
    \   let extension_components_count = extension_components.count\n        let class_name_components_count_upper\
    \ = class_name_components_count - class_name_components_count.map { $0.isUppercase\
    \ }.count\n        let extension_components_count_upper = extension_components_count\
    \ - extension_components_count.map { $0.isUppercase }.count\n        let class_name_components_count_lower\
    \ = class_name_components_count - class_name_components_count.map { $0.isLowercase\
    \ }.count\n        let extension_components_count_lower = extension_components_count\
    \ - extension_components_count.map { $0.isLowercase }.count\n        let class_name_components_count_all\
    \ = class_name_components_count + class_name_components_count_upper + class_name_components_count_lower\n\
    \        let extension_components_count_all = extension_components_count + extension_components_count_upper\
    \ + extension_components_count_lower\n        let class_name_components_count_all_upper\
    \ = class_name_components_count_all + class_name_components_count_upper\n    \
    \    let extension_components_count_all_upper = extension_components_count_all\
    \ + extension_components_count_upper\n        let class_name_components_count_all_lower\
    \ = class_name_components_count_all + class_name_components_count_lower\n    \
    \    let extension_components_count_all_lower = extension_components_count_all\
    \ + extension_components_count_lower\n        let class_name_components_count_all_all\
    \ = class_name_components_count_all + class_name_components_count_all_upper +\
    \ class_name_components_count_all_lower\n        let extension_components_count_all_all\
    \ = extension_components_count_all + extension_components_count_all_upper + extension_components_count_all_lower\n\
    \        let class_name_components_count_all_all_upper = class_name_components_count_all_all\
    \ + class_name_components_count_all_upper\n        let extension_components_count_all_all_upper\
    \ = extension_components_count_all_all + extension_components_count_all_upper\n\
    \        let class_name_components_count_all_all_lower = class_name_components_count_all_all\
    \ + class_name_components_count_all_lower\n        let extension_components_count_all_all_lower\
    \ = extension_components_count_all_all + extension_components_count_all_lower",
  "    var strongest_extension = \"\"\n    var max_strength = -1\n    for extension\
    \ in extensions {\n        var strength = count_capital_letters(extension) - count_capital_letters(class_name)\n\
    \        if strength > max_strength {\n            max_strength = strength\n \
    \           strongest_extension = extension\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var\
    \ strongest_extension_strength = -1\n    for extension in extensions {\n     \
    \   let extension_strength = extension.countUpToLowercaseLetters()\n        if\
    \ extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    for extension in extensions {\n        let cap = extension.count\n\
    \        let sm = class_name.count\n        let strength = cap - sm\n        if\
    \ strength > 0 {\n            if strongest_extension == \"\" {\n             \
    \   strongest_extension = class_name\n            } else {\n                if\
    \ strength < strongest_extension.count {\n                    strongest_extension\
    \ = class_name\n                }\n            }\n        }\n    }\n    return\
    \ strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUpToUppercaseLetters\
    \ - extension.countUpToLowercaseLetters\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    // Your code here\n    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.count\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToUppercaseLetters - extension.countUpToLowercaseLetters\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", '    return class_name
    + "." + extensions[extensions.count - 1]', "    var strongest_extension = \"\"\
    \n    var strongest_extension_strength = -1\n    for extension in extensions {\n\
    \        let extension_strength = extension.countUpToUppercaseLetters - extension.countUpToLowercaseLetters\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strength = -1\n    for extension in extensions {\n        let\
    \ class_name_components = class_name.components(separatedBy: \".\")\n        let\
    \ extension_components = extension.components(separatedBy: \".\")\n        let\
    \ class_name = class_name_components[0]\n        let extension = extension_components[0]\n\
    \        let class_name_components_count = class_name_components.count\n     \
    \   let extension_components_count = extension_components.count\n        let class_name_components_count_upper\
    \ = class_name_components_count - class_name_components_count.filter{$0.isUppercase}.count\n\
    \        let extension_components_count_upper = extension_components_count - extension_components_count.filter{$0.isUppercase}.count\n\
    \        let class_name_components_count_lower = class_name_components_count -\
    \ class_name_components_count.filter{$0.isLowercase}.count\n        let extension_components_count_lower\
    \ = extension_components_count - extension_components_count.filter{$0.isLowercase}.count\n\
    \        let class_name_components_count_cap = class_name_components_count - class_name_components_count.filter{$0.isUppercase}.filter{$0.isLowercase}.count\n\
    \        let extension_components_count_cap = extension_components_count - extension_components_count.filter{$0.isUppercase}.filter{$0.isLowercase}.count\n\
    \        let class_name_components_count_sm = class_name_components_count - class_name_components_count.filter{$0.isLowercase}.filter{$0.isUppercase}.count\n\
    \        let extension_components_count_sm = extension_components_count - extension_components_count.filter{$0.isLowercase}.filter{$0.isUppercase}.count\n\
    \        let class_name_components_count_cap_sm = (class_name_components_count_cap\
    \ + class_name_components_count_sm) / 2\n        let extension_components_count_cap_sm\
    \ = (extension_components_count_cap + extension_components_count_sm) / 2\n   \
    \     let class_name_components_count_cap_sm_lower = (class_name_components_count_cap_sm\
    \ + class_name_components_count_lower) / 2\n        let extension_components_count_cap_sm_lower\
    \ = (extension_components_count_cap_sm + extension_components_count_lower) / 2\n\
    \        let class_name_components_count_cap_sm_upper = (class_name_components_count_cap_sm\
    \ + class_name_components_count_upper) / 2\n        let extension_components_count_cap_sm_upper\
    \ = (extension_components_count_cap_sm + extension_components_count_upper) / 2\n\
    \        let class_name_components_count_cap_sm_upper_sm = (class_name_components_count_",
  "    // Your code here\n    var strongest_extension = \"\"\n    for extension in\
    \ extensions {\n        var strength = extension.count\n        for character\
    \ in extension {\n            if character == character.lowercased() {\n     \
    \           strength -= 1\n            }\n        }\n        if strength > 0 {\n\
    \            strongest_extension += extension\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var\
    \ max_strength = -1\n    for extension in extensions {\n        let extension_strength\
    \ = extension.countUpToLowercaseLetters()\n        if extension_strength > max_strength\
    \ {\n            max_strength = extension_strength\n            strongest_extension\
    \ = extension\n        }\n    }\n    return class_name + \".\" + strongest_extension",
  "    var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        var extension_strength = extension.count\n\
    \        for letter in extension {\n            if letter.isUpper() {\n      \
    \          extension_strength -= 1\n            }\n        }\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToUppercase() - extension.countUpToLowercase()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    if extensions.isEmpty\
    \ {\n        return class_name\n    }\n    var strongest_extension = \"\"\n  \
    \  var strongest_extension_strength = -1\n    for extension in extensions {\n\
    \        let extension_strength = extension.countUpToLowercaseLetters()\n    \
    \    if extension_strength > strongest_extension_strength {\n            strongest_extension\
    \ = extension\n            strongest_extension_strength = extension_strength\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension", "   \
    \ var strongest_extension = \"\"\n    var max_strength = -1\n    for extension\
    \ in extensions {\n        let extension_strength = extension.countUppercaseLetters()\
    \ - extension.countLowercaseLetters()\n        if extension_strength > max_strength\
    \ {\n            max_strength = extension_strength\n            strongest_extension\
    \ = extension\n        }\n    }\n    return class_name + \".\" + strongest_extension",
  "    var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToUppercaseLetters - extension.countUpToLowercaseLetters\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        var extension_strength = extension.count\n        for letter in extension\
    \ {\n            if letter.isUpper() {\n                extension_strength -=\
    \ 1\n            }\n        }\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.characters.count\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    for extension in extensions {\n        let extension_length = extension.count\n\
    \        let extension_uppercase_count = extension.filter{$0.isUpper}.count\n\
    \        let extension_lowercase_count = extension.filter{$0.isLower}.count\n\
    \        let extension_strength = extension_uppercase_count - extension_lowercase_count\n\
    \        if extension_strength > 0 {\n            let extension_uppercase_extension\
    \ = extension.filter{$0.isUpper}\n            let extension_lowercase_extension\
    \ = extension.filter{$0.isLower}\n            let extension_extension = extension_uppercase_extension.count\
    \ - extension_lowercase_extension.count\n            if extension_extension >\
    \ 0 {\n                let extension_strength_percentage = extension_strength\
    \ / extension_extension\n                if extension_strength_percentage > strongest_extension.count\
    \ {\n                    strongest_extension = extension\n                }\n\
    \            }\n        }\n    }\n    return class_name + \".\" + strongest_extension",
  "    var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        var extension_strength = extension.count\n\
    \        for letter in extension {\n            if letter.isUpper() {\n      \
    \          extension_strength -= 1\n            }\n        }\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    // Your code\
    \ here\n    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        var extension_strength = extension.count\n\
    \        for c in extension {\n            if c.isUppercase() {\n            \
    \    extension_strength -= 1\n            }\n            if c.isLowercase() {\n\
    \                extension_strength += 1\n            }\n        }\n        if\
    \ extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToUppercaseLetters - extension.countUpToLowercaseLetters\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strength = -1\n    for extension in extensions {\n        let\
    \ extension_lowercase = extension.lowercased()\n        let class_lowercase =\
    \ class_name.lowercased()\n        let strength_of_extension = extension_lowercase.distance(class_lowercase)\n\
    \        if strength_of_extension > strength {\n            strongest_extension\
    \ = extension\n            strength = strength_of_extension\n        }\n    }\n\
    \    return strongest_extension", "    var strongest_extension = \"\"\n    var\
    \ strongest_extension_strength = -1\n    var extension_counter = 0\n    for extension\
    \ in extensions {\n        extension_counter += 1\n        if extension_counter\
    \ == 1 {\n            strongest_extension = extension\n        } else {\n    \
    \        if extension_counter > strongest_extension_strength {\n             \
    \   strongest_extension_strength = extension_counter\n                strongest_extension\
    \ = extension\n            }\n        }\n    }\n    return class_name + \".\"\
    \ + strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToUppercaseLetters - extension.countUpToLowercaseLetters\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        var extension_strength = extension.count\n        for letter in extension\
    \ {\n            if letter.isUpper() {\n                extension_strength -=\
    \ 1\n            }\n        }\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUpToUppercase()\
    \ - extension.countUpToLowercase()\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var max_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUppercaseLetters()\
    \ - extension.countLowercaseLetters()\n        if extension_strength > max_strength\
    \ {\n            max_strength = extension_strength\n            strongest_extension\
    \ = extension\n        }\n    }\n    return class_name + \".\" + strongest_extension",
  '    return class_name + "." + extensions[extensions.index(extensions.firstIndex(of:
    class_name.lowercased()))]', "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUpToUppercaseLetters\
    \ - extension.countUpToLowercaseLetters\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension = extension\n            strongest_extension_strength\
    \ = extension_strength\n        }\n    }\n    return class_name + \".\" + strongest_extension",
  "    // Your code here\n    var strongest_extension = \"\"\n    for extension in\
    \ extensions {\n        let cap = extension.count\n        let sm = class_name.count\n\
    \        let strength = cap - sm\n        if strength > 0 {\n            if strongest_extension\
    \ == \"\" {\n                strongest_extension = class_name + extension\n  \
    \          } else {\n                if strength < strongest_extension.count {\n\
    \                    strongest_extension = class_name + extension\n          \
    \      }\n            }\n        }\n    }\n    return strongest_extension", " \
    \   if extensions.count < 2 {\n        return class_name\n    }\n    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var max_strength = -1\n    for extension in extensions {\n     \
    \   let extension_strength = extension.countUpToLowercaseLetters()\n        if\
    \ extension_strength > max_strength {\n            max_strength = extension_strength\n\
    \            strongest_extension = extension\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var\
    \ strongest_extension_strength = -1\n    for extension in extensions {\n     \
    \   let extension_strength = extension.countUppercaseLetters() - extension.countLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        var extension_strength = extension.count\n        for letter in extension\
    \ {\n            if letter.isUpper() {\n                extension_strength -=\
    \ 1\n            }\n        }\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", '    return class_name + "." + extensions[extensions.index(extensions.firstIndex(of:
    class_name.lowercased()))]', "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension\
    \ = extension\n            strongest_extension_strength = extension_strength\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension", "   \
    \ var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        var extension_strength = extension.count\n\
    \        for c in extension {\n            if c >= 'A' && c <= 'Z' {\n       \
    \         extension_strength -= 26\n            }\n        }\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var max_strength = -1\n    for extension in extensions {\n     \
    \   let strength = extension.countUppercaseLetters() - extension.countLowercaseLetters()\n\
    \        if strength > max_strength {\n            max_strength = strength\n \
    \           strongest_extension = extension\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var\
    \ strongest_extension_strength = -1\n    for extension in extensions {\n     \
    \   let extension_strength = extension.countUpToLowercaseLetters()\n        if\
    \ extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.characters.count\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToUppercaseLetters - extension.countUpToLowercaseLetters\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        var extension_strength = extension.count\n        for character in\
    \ extension {\n            if character == character.lowercased() {\n        \
    \        extension_strength -= 1\n            }\n        }\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strength = -1\n    for extension in extensions {\n        var\
    \ extension_strength = extension.count\n        for c in extension {\n       \
    \     if c.isUppercase {\n                extension_strength -= 1\n          \
    \  }\n            if c.isLowercase {\n                extension_strength += 1\n\
    \            }\n        }\n        if extension_strength > strength {\n      \
    \      strongest_extension = extension\n            strength = extension_strength\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension", '    return
    class_name + Strongest_Extension_Name(extensions)', '    return class_name + "."
    + extensions[extensions.index(extensions.firstIndex(of: class_name.lowercased()))]',
  "    if extensions.count <= 0 {\n        return class_name\n    }\n    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        var extension_strength = extension.count\n        for c in extension\
    \ {\n            if c >= 'A' && c <= 'Z' {\n                extension_strength\
    \ -= 1\n            }\n            if c >= 'a' && c <= 'z' {\n               \
    \ extension_strength -= 1\n            }\n        }\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    // Your code\
    \ here\n    \n    return \"\"", "    var strongest_extension = \"\"\n    var max_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUpToUppercaseLetters\
    \ - extension.countUpToLowercaseLetters\n        if extension_strength > max_strength\
    \ {\n            max_strength = extension_strength\n            strongest_extension\
    \ = extension\n        }\n    }\n    return class_name + \".\" + strongest_extension",
  '    return class_name + "." + extensions[extensions.index(extensions.firstIndex(of:
    class_name.lowercased()))]', "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    var extension_counter\
    \ = 0\n    for extension in extensions {\n        extension_counter += 1\n   \
    \     if extension_counter > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_counter\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strength = -1\n    for extension in extensions {\n        let\
    \ cap = extension.count\n        let sm = class_name.count\n        let strength\
    \ = cap - sm\n        if strength > 0 {\n            if strength > strength {\n\
    \                strongest_extension = extension\n            }\n        }\n \
    \   }\n    return class_name + \".\" + strongest_extension", "    if extensions.isEmpty\
    \ {\n        return class_name\n    }\n    var strongest_extension = \"\"\n  \
    \  var strength = -1\n    for extension in extensions {\n        let cap = extension.count\n\
    \        let sm = class_name.count\n        let strength = cap - sm\n        if\
    \ strength > 0 {\n            if strength > strongest_extension.count {\n    \
    \            strongest_extension = extension\n            }\n        }\n    }\n\
    \    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        var extension_strength = extension.count\n        for c in extension\
    \ {\n            if c >= 'A' && c <= 'Z' {\n                extension_strength\
    \ -= (c - 'A').count\n            }\n            if c >= 'a' && c <= 'z' {\n \
    \               extension_strength -= (c - 'a').count\n            }\n       \
    \ }\n        if extension_strength > strongest_extension_strength {\n        \
    \    strongest_extension_strength = extension_strength\n            strongest_extension\
    \ = extension\n        }\n    }\n    return class_name + \".\" + strongest_extension",
  '    return class_name + "." + extensions[extensions.index(extensions.firstIndex(of:
    class_name.lowercased()))]', "    var strongest_extension = \"\"\n    for extension\
    \ in extensions {\n        var strength = extension.count\n        for letter\
    \ in extension {\n            if letter.isUpper() {\n                strength\
    \ -= 1\n            }\n        }\n        if strength > 0 {\n            strongest_extension\
    \ += \".\" + extension\n        }\n    }\n    return class_name + strongest_extension",
  "    var strongest_extension = \"\"\n    var strength = -1\n    for extension in\
    \ extensions {\n        let cap = extension.count\n        let sm = class_name.count\n\
    \        let strength = cap - sm\n        if strength > 0 {\n            strongest_extension\
    \ = class_name + \".\" + extension\n        }\n    }\n    return strongest_extension",
  "    var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        var extension_strength = extension.count\n        for letter in extension\
    \ {\n            if letter.isUpper() {\n                extension_strength -=\
    \ 1\n            }\n        }\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension = class_name\n            strongest_extension_strength\
    \ = extension_strength\n        }\n    }\n    return strongest_extension", " \
    \   var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        let extension_strength = extension.countUpToUppercaseLetters\
    \ - extension.countLowercaseLetters\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUppercaseLetters()\
    \ - extension.countLowercaseLetters()\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension = extension\n            strongest_extension_strength\
    \ = extension_strength\n        }\n    }\n    return class_name + \".\" + strongest_extension",
  "    var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        var extension_strength = extension.count\n\
    \        for letter in extension {\n            if letter.isUpper() {\n      \
    \          extension_strength -= 1\n            }\n        }\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", '    return class_name
    + "." + extensions[extensions.index(extensions.firstIndex(of: class_name.lowercased()))]',
  "    // Your code here\n    var strongest_extension = \"\"\n    var strength = -1\n\
    \    for extension in extensions {\n        let extension_length = extension.count\n\
    \        let class_name_length = class_name.count\n        let extension_strength\
    \ = class_name_length - extension_length\n        if extension_strength > strength\
    \ {\n            strongest_extension = extension\n            strength = extension_strength\n\
    \        }\n    }\n    return class_name + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    var class_name_uppercase\
    \ = class_name.uppercased()\n    var class_name_lowercase = class_name.lowercased()\n\
    \    \n    for extension in extensions {\n        var extension_uppercase = extension.uppercased()\n\
    \        var extension_lowercase = extension.lowercased()\n        var extension_strength\
    \ = class_name_uppercase.distance(class_name_lowercase)\n        \n        if\
    \ extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    \n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUppercaseLetters() - extension.countLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strength = -1\n    for extension in extensions {\n        let\
    \ class_name_components = class_name.components(separatedBy: \".\")\n        let\
    \ extension_components = extension.components(separatedBy: \".\")\n        let\
    \ class_name_components_count = class_name_components.count\n        let extension_components_count\
    \ = extension_components.count\n        let class_name_components_extension_count\
    \ = class_name_components_count - extension_components_count\n        let class_name_components_extension_count_str\
    \ = class_name_components_extension_count.description\n        let extension_components_extension_count_str\
    \ = extension_components_extension_count.description\n        let extension_components_extension_count_int\
    \ = (extension_components_extension_count as NSNumber).integerValue\n        let\
    \ extension_components_extension_count_float = (extension_components_extension_count\
    \ as NSNumber).floatValue\n        let extension_components_extension_count_double\
    \ = (extension_components_extension_count as NSNumber).doubleValue\n        let\
    \ extension_components_extension_count_bool = (extension_components_extension_count\
    \ as NSNumber).boolValue\n        let extension_components_extension_count_string\
    \ = (extension_components_extension_count as NSNumber).stringValue\n        let\
    \ extension_components_extension_count_array = (extension_components_extension_count\
    \ as NSNumber).arrayValue\n        let extension_components_extension_count_dictionary\
    \ = (extension_components_extension_count as NSNumber).dictionaryValue\n     \
    \   let extension_components_extension_count_set = (extension_components_extension_count\
    \ as NSNumber).setValue\n        let extension_components_extension_count_dictionary_key\
    \ = (extension_components_extension_count as NSNumber).dictionaryKeyValue\n  \
    \      let extension_components_extension_count_dictionary_value = (extension_components_extension_count\
    \ as NSNumber).dictionaryValueValue\n        let extension_components_extension_count_dictionary_key_value\
    \ = (extension_components_extension_count as NSNumber).dictionaryKeyValueValue\n\
    \        let extension_components_extension_count_dictionary_key_value_array =\
    \ (extension_components_extension_count as NSNumber).dictionaryKeyValueValueArray\n\
    \        let extension_components_extension_count_dictionary_key_value_set_array\
    \ = (extension_components_extension_count as NSNumber).dictionaryKeyValueValueSetArray\n\
    \        let extension_components_extension_count_dictionary_key_value_set_set_array\
    \ = (extension_components_extension_count as NSNumber).dictionaryKeyValueValueSetSetArray\n\
    \        let extension_components_extension_count_dictionary_key_value_set_set_set_",
  "    var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", '    return class_name
    + "." + extensions[extensions.index(extensions.firstIndex(of: class_name.lowercased()))!]',
  "    var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        let extension_strength = extension.countUppercaseLetters()\
    \ - extension.countLowercaseLetters()\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    // Your code here\n    var strongest_extension\
    \ = \"\"\n    var strength = 0\n    for extension in extensions {\n        var\
    \ extension_length = extension.count\n        var class_length = class_name.count\n\
    \        var strength_percentage = extension_length / class_length\n        if\
    \ strength_percentage > strength {\n            strongest_extension = extension\n\
    \            strength = strength_percentage\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension", "    // Your code here\n    var strongest_extension\
    \ = \"\"\n    var strength = Int()\n    for extension in extensions {\n      \
    \  let cap = extension.count\n        let sm = class_name.count\n        let strength_frac\
    \ = cap - sm\n        strength = strength * strength_frac / cap\n        if strength\
    \ > strongest_extension.count {\n            strongest_extension = extension\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension", "   \
    \ if extensions.isEmpty {\n        return class_name\n    }\n    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.characters.count\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strength = -1 // default value\n    for extension in extensions\
    \ {\n        let cap = extension.count\n        let sm = class_name.count\n  \
    \      let strength = cap - sm\n        if strength > strongest_extension.count\
    \ {\n            strongest_extension = extension\n        }\n    }\n    return\
    \ class_name + \".\" + strongest_extension", "    var strongest_extension = \"\
    \"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToUppercaseLetters - extension.countUpToLowercaseLetters\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUppercaseLetters() - extension.countLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUppercaseLetters() - extension.countLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        var extension_strength = extension.count\n        for letter in extension\
    \ {\n            if letter.isUpper() {\n                extension_strength -=\
    \ 1\n            }\n        }\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var max_strength\
    \ = -1\n    for extension in extensions {\n        let strength = extension.countUpToLowercaseLetters()\n\
    \        if strength > max_strength {\n            max_strength = strength\n \
    \           strongest_extension = extension\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var\
    \ strongest_extension_strength = -1\n    for extension in extensions {\n     \
    \   let extension_strength = extension.countUpToLowercaseLetters()\n        if\
    \ extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToUppercase() - extension.countUpToLowercase()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        var extension_strength = extension.count\n        for letter in extension\
    \ {\n            if letter.isUpper() {\n                extension_strength -=\
    \ 1\n            }\n        }\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var max_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUppercaseLetters()\
    \ - extension.countLowercaseLetters()\n        if extension_strength > max_strength\
    \ {\n            max_strength = extension_strength\n            strongest_extension\
    \ = extension\n        }\n    }\n    return class_name + \".\" + strongest_extension",
  '    return class_name + "." + extensions[extensions.index(extensions.firstIndex(of:
    class_name.lowercased()))]', "    var strongest_extension = \"\"\n    var strength\
    \ = -1\n    for extension in extensions {\n        var extension_length = extension.count\n\
    \        var class_length = class_name.count\n        var extension_strength =\
    \ extension_length / class_length\n        if extension_strength > strength {\n\
    \            strongest_extension = extension\n            strength = extension_strength\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension", "   \
    \ var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", '    return class_name
    + "." + extensions[extensions.index(extensions.firstIndex(of: class_name.lowercased()))]',
  "    var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        let extension_strength = extension.countUppercaseLetters()\
    \ - extension.countLowercaseLetters()\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.characters.reduce(0)\
    \ { (sum, character) -> Int in\n            return sum + Int(character.isUppercase)\n\
    \        }\n        if extension_strength > strongest_extension_strength {\n \
    \           strongest_extension_strength = extension_strength\n            strongest_extension\
    \ = extension\n        }\n    }\n    return class_name + \".\" + strongest_extension"]
stop_tokens:
- "\n}"

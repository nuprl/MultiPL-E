name: HumanEval_49_modp
language: swift
prompt: "\n/// Return 2^n modulo p (be aware of numerics).\n/// >>> modp(n: 3, p:\
  \ 5)\n/// 3\n/// >>> modp(n: 1101, p: 101)\n/// 2\n/// >>> modp(n: 0, p: 101)\n\
  /// 1\n/// >>> modp(n: 3, p: 11)\n/// 8\n/// >>> modp(n: 100, p: 101)\n/// 1\nfunc\
  \ modp(n: Int, p: Int) -> Int {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(modp(n: 3, p: 5) == 3)\nassert(modp(n: 1101,\
  \ p: 101) == 2)\nassert(modp(n: 0, p: 101) == 1)\nassert(modp(n: 3, p: 11) == 8)\n\
  assert(modp(n: 100, p: 101) == 1)\nassert(modp(n: 30, p: 5) == 4)\nassert(modp(n:\
  \ 31, p: 5) == 3)"
completions: ["    if n < 0 {\n        return modp(abs(n), p)\n    }\n    if p < 1\
    \ {\n        return modp(n, p)\n    }\n    if p > p {\n        return modp(n,\
    \ p - 1)\n    }\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n \
    \       return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n", "    if n\
    \ < 0 {\n        return modp(abs(n), p)\n    }\n    if p < 1 {\n        return\
    \ modp(n, p - 1)\n    }\n    if p > p {\n        return modp(n, p - p)\n    }\n\
    \    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return p\n\
    \    }\n    if n == 2 {\n        return p + 1\n    }\n    if n == 3 {\n      \
    \  return p + 2\n    }\n    if n == 4 {\n        return p + 3\n    }\n    if n\
    \ == 5 {\n        return p + 4\n    }\n    if n == 6 {\n        return p + 5\n\
    \    }\n    if n == 7 {\n        return p + 6\n    }\n    if n == 8 {\n      \
    \  return p + 7\n    }\n    if n == 9 {\n        return p + 8\n    }\n    if n\
    \ == 10 {\n        return p + 9\n    }\n    if n == 11 {\n        return p + 10\n\
    \    }\n    if n == 12 {\n        return p + 11\n    }\n    if n == 13 {\n   \
    \     return p + 12\n    }\n    if n == 14 {\n        return p + 13\n    }\n \
    \   if n == 15 {\n        return p + 14\n    }\n    if n == 16 {\n        return\
    \ p + 15\n    }\n    if n == 17 {\n        return p + 16\n    }\n    if n == 18\
    \ {\n        return p + 17\n    }\n    if n == 19 {\n        return p + 18\n \
    \   }\n    if n == 20 {\n        return p + 19\n    }\n    if n == 21 {\n    \
    \    return p + 20\n    }\n    if n == 22 {\n        return p + 21\n    }\n  \
    \  if n == 23 {\n        return p + 22\n    }\n    if n == 24 {\n        return\
    \ p + 23\n    }\n    if n == 25 {\n        return p + 24\n    }\n    if n == 26\
    \ {\n        return p + 25\n    }\n    if n == 27 {\n        return p + 26\n \
    \   }\n    if n == 28 {\n        return p + 27\n    }\n    if n == 29 {\n    \
    \    return p + 28\n    }\n    if n == 30 {\n        return p + 29\n    }\n  \
    \  if n == 31 {\n        return p + 30\n    }\n    if n == 32 {\n        return\
    \ p + 31\n    }\n    if n == 33 {\n        return p + 32\n    }\n    if n == 34\
    \ {\n        return p + 33\n    }\n    if n == 35 {\n        return p + 34\n \
    \   }\n    if n == 36 {\n        return p + 35\n    }\n    if n == 37 {\n    \
    \    return p + 36\n    }\n    if n == 38 {\n        return p + 37\n    }\n  \
    \  if n == 39 {\n        return p + 38\n    }\n    if ", "\tif n < 0 {\n\t\tn\
    \ = -n\n\t\tp = -p\n\t}\n\tif p < 1 {\n\t\tpanic(\"p < 1\")\n\t}\n\tif p > p {\n\
    \t\tpanic(\"p > p\")\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\
    \treturn p\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\
    \t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif\
    \ n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\
    \t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n ==\
    \ p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\
    \t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif\
    \ n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\
    \t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n ==\
    \ p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\
    \t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif\
    \ n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\
    \t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n ==\
    \ p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\
    \t}", "    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return\
    \ p\n    }\n    if n == p {\n        return n\n    }\n    if n < p {\n       \
    \ return modp(n - p, p)\n    }\n    if n > p {\n        return modp(n, p)\n  \
    \  }\n    return 0", "\tif n < 0 {\n\t\tpanic(\"modp called with negative n\"\
    )\n\t}\n\tif p < 1 {\n\t\tpanic(\"modp called with p < 1\")\n\t}\n\tif n == 0\
    \ {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}\n\tif p < p {\n\t\treturn modp(n - p, p)\n\t}\n\tif p > p {\n\t\t\
    return modp(n, p - 1)\n\t}\n\tq := modp(n - p, p)\n\tif q == p {\n\t\treturn n\n\
    \t}\n\treturn q", "\tif n < 0 {\n\t\tpanic(\"modp expects n >= 0\")\n\t}\n\tif\
    \ p < 1 {\n\t\tpanic(\"modp expects p >= 1\")\n\t}\n\tif n == 0 {\n\t\treturn\
    \ 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif n == p {\n\t\treturn 1\n\t}\n\tif n == p {\n\t\treturn 0\n\t}\n\tif n ==\
    \ p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\t\
    return p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\
    \t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif\
    \ n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\
    \t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn\
    \ p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\
    \tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n ==\
    \ p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\t\
    return p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\
    \t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif\
    \ n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\
    \t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn\
    \ p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\
    \tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n ==\
    \ p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\t\
    return p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\
    \t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif\
    \ n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\
    \t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn\
    \ p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\
    \tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n", '    return
    n % p', "    if n < 0 {\n        return modp(abs(n), p)\n    }\n    if p < 1 {\n\
    \        return modp(n / p, p)\n    }\n    if p > p {\n        return modp(n /\
    \ p, p)\n    }\n    return n % p", "\tswitch {\n\tcase n < 0:\n\t\treturn modp(abs(n),\
    \ p)\n\tcase n <= p:\n\t\treturn n\n\tcase n >= p - 1:\n\t\treturn p - 1 + modp(n\
    \ - p, p)\n\tdefault:\n\t\treturn modp(n - p, p)\n\t}", "\tif n < 0 {\n\t\tn =\
    \ -n\n\t\tp = -p\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn\
    \ p\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n >= p {\n\t\treturn modp(n -\
    \ p, p)\n\t}\n\treturn modp((p - 1) * (n - p), p)", "\tif n < 0 {\n\t\tpanic(\"\
    modp requires positive n\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"modp requires positive\
    \ p\")\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\t\
    }\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n\
    \ == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\
    \t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n ==\
    \ p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\
    \t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif\
    \ n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\
    \t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n ==\
    \ p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\
    \t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif\
    \ n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\
    \t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n ==\
    \ p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\
    \t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif\
    \ n == p {\n\t\treturn n\n\t}\n", "    if n < 0 {\n        return modp(abs(n),\
    \ p)\n    }\n    if p < 1 {\n        return modp(n, p % p)\n    }\n    if p >\
    \ p {\n        return modp(n, p % p)\n    }\n    return n - (n % p)", "    if\
    \ n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return p\n    }\n\
    \    if n == p {\n        return n\n    }\n    if n < p {\n        return modp(n\
    \ - p, p)\n    }\n    return modp((p - n) % p, p)", "\tif n < 0 {\n\t\tn = -n\n\
    \t}\n\tif p < 0 {\n\t\tp = -p\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\tif n ==\
    \ 1 {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p+1 {\n\t\
    \treturn n\n\t}\n\tif n == p+2 {\n\t\treturn n\n\t}\n\tif n == p+3 {\n\t\treturn\
    \ n\n\t}\n\tif n == p+4 {\n\t\treturn n\n\t}\n\tif n == p+5 {\n\t\treturn n\n\t\
    }\n\tif n == p+6 {\n\t\treturn n\n\t}\n\tif n == p+7 {\n\t\treturn n\n\t}\n\t\
    if n == p+8 {\n\t\treturn n\n\t}\n\tif n == p+9 {\n\t\treturn n\n\t}\n\tif n ==\
    \ p+10 {\n\t\treturn n\n\t}\n\tif n == p+11 {\n\t\treturn n\n\t}\n\tif n == p+12\
    \ {\n\t\treturn n\n\t}\n\tif n == p+13 {\n\t\treturn n\n\t}\n\tif n == p+14 {\n\
    \t\treturn n\n\t}\n\tif n == p+15 {\n\t\treturn n\n\t}\n\tif n == p+16 {\n\t\t\
    return n\n\t}\n\tif n == p+17 {\n\t\treturn n\n\t}\n\tif n == p+18 {\n\t\treturn\
    \ n\n\t}\n\tif n == p+19 {\n\t\treturn n\n\t}\n\tif n == p+20 {\n\t\treturn n\n\
    \t}\n\tif n == p+21 {\n\t\treturn n\n\t}\n\tif n == p+22 {\n\t\treturn n\n\t}\n\
    \tif n == p+23 {\n\t\treturn n\n\t}\n\tif n == p+24 {\n\t\treturn n\n\t}\n\tif\
    \ n == p+25 {\n\t\treturn n\n\t}\n\tif n == p+26 {\n\t\treturn n\n\t}\n\tif n\
    \ == p+27 {\n\t\treturn n\n\t}\n\tif n == p+28 {\n\t\treturn n\n\t}\n\tif n ==\
    \ p+29 {\n\t\treturn n\n\t}\n\tif n == p+30 {\n\t\treturn n\n\t}\n\tif n == p+31\
    \ {\n\t\treturn n\n\t}\n\tif n == p+32 {\n\t\treturn n\n\t}\n\tif n == p+33 {\n\
    \t\treturn n\n\t}\n\tif n == p+34 {\n\t\treturn n\n\t}\n\tif n == p+35 {\n\t\t\
    return n\n\t}\n\tif n == p+36 {\n\t\treturn n\n\t}\n\tif n == p+37 {\n\t\treturn\
    \ n\n\t}\n\tif n == p+38 {\n\t\treturn n\n\t}\n\tif n == p+39 {\n\t\treturn n\n\
    \t}\n", "\tswitch {\n\tcase n < 0:\n\t\treturn modp(abs(n), p)\n\tcase p < 2:\n\
    \t\treturn 0\n\tcase p < n:\n\t\treturn p - 1\n\tdefault:\n\t\treturn p - (p -\
    \ 1) * ((p - 1) * (p - 2) * (p - 3) * (p - 4) * (p - 5) * (p - 6) * (p - 7) *\
    \ (p - 8) * (p - 9) * (p - 10) * (p - 11) * (p - 12) * (p - 13) * (p - 14) * (p\
    \ - 15) * (p - 16) * (p - 17) * (p - 18) * (p - 19) * (p - 20) * (p - 21) * (p\
    \ - 22) * (p - 23) * (p - 24) * (p - 25) * (p - 26) * (p - 27) * (p - 28) * (p\
    \ - 29) * (p - 30) * (p - 31) * (p - 32) * (p - 33) * (p - 34) * (p - 35) * (p\
    \ - 36) * (p - 37) * (p - 38) * (p - 39) * (p - 40) * (p - 41) * (p - 42) * (p\
    \ - 43) * (p - 44) * (p - 45) * (p - 46) * (p - 47) * (p - 48) * (p - 49) * (p\
    \ - 50) * (p - 51) * (p - 52) * (p - 53) * (p - 54) * (p - 55) * (p - 56) * (p\
    \ - 57) * (p - 58) * (p - 59) * (p - 60) * (p - 61) * (p - 62) * (p - 63) * (p\
    \ - 64) * (p - 65) * (p - 66) * (p - 67) * (p - 68) * (p - 69) * (p - 70) * (p\
    \ - 71) * (p - 72) * (p - 73) * (p - 74) * (p - 75) * (p - 76) * (p - 77) * (p\
    \ - 78) * (p - 79) * (p - 80) * (p - 81) * (p - 82) * (p - 83) * (p - 84) * (p\
    \ - 85) * (p - 86) * (p - 87) * (p - 88) * (p - 89) * (p - 90) * (p - 91) * (p\
    \ - 92) * (p - 93) * (p - 94) * (p - 95) * (p - 96) * (p - 97) * (p - 98) * (p\
    \ - 99) * (p - 100) * (p - 101) * (p - 102) * (p - 103) * (p - 104) * (p - 105)\
    \ * (p - 106) * (p - 107) * (p - 108) * (p - 109) * (p-110) * (p - 111) * (p -\
    \ 112) * (p - 113) * (p - 114) * (p - 115) * (p - 116) * (p - 117) * (p - 118)\
    \ * (p - 119) * (p - 120) * (p - 121) * (p - 122) * (p - 123) * (p - 124) * (p\
    \ - 125) * (p - 126) * (p - 127) * (p - 128) * (p - 129) * (p - 130) * (p - 131)\
    \ * (p - 132) * (p - 133) * (p - 134) * (p - 135) * (p - 136) * (p - 137) * (p\
    \ - 138) * (p - 139) * (p - 140) * (p - 141) * (p - 142) * (p - 143) * (p - 144)\
    \ * (p - 145) * (p - 146) * (p - 147) * (p - 148) * (p - 149) * (", "    if n\
    \ < 0 {\n        return modp(abs(n), p)\n    }\n    if p < 0 {\n        return\
    \ modp(n, abs(p))\n    }\n    if n == 0 {\n        return 0\n    }\n    if p ==\
    \ 0 {\n        return n\n    }\n    if p == 1 {\n        return n\n    }\n   \
    \ if n == 1 {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p", "    if n < 0 {\n    \
    \    return modp(abs(n), p)\n    }\n    if p < 1 {\n        return modp(n - 1,\
    \ p)\n    }\n    if p > p {\n        return modp(n, p - 1)\n    }\n    if n ==\
    \ 0 {\n        return 0\n    }\n    if n == 1 {\n        return p\n    }\n   \
    \ if n == 2 {\n        return p + 1\n    }\n    if n == 3 {\n        return p\
    \ + 2\n    }\n    if n == 4 {\n        return p + 3\n    }\n    if n == 5 {\n\
    \        return p + 4\n    }\n    if n == 6 {\n        return p + 5\n    }\n \
    \   if n == 7 {\n        return p + 6\n    }\n    if n == 8 {\n        return\
    \ p + 7\n    }\n    if n == 9 {\n        return p + 8\n    }\n    if n == 10 {\n\
    \        return p + 9\n    }\n    if n == 11 {\n        return p + 10\n    }\n\
    \    if n == 12 {\n        return p + 11\n    }\n    if n == 13 {\n        return\
    \ p + 12\n    }\n    if n == 14 {\n        return p + 13\n    }\n    if n == 15\
    \ {\n        return p + 14\n    }\n    if n == 16 {\n        return p + 15\n \
    \   }\n    if n == 17 {\n        return p + 16\n    }\n    if n == 18 {\n    \
    \    return p + 17\n    }\n    if n == 19 {\n        return p + 18\n    }\n  \
    \  if n == 20 {\n        return p + 19\n    }\n    if n == 21 {\n        return\
    \ p + 20\n    }\n    if n == 22 {\n        return p + 21\n    }\n    if n == 23\
    \ {\n        return p + 22\n    }\n    if n == 24 {\n        return p + 23\n \
    \   }\n    if n == 25 {\n        return p + 24\n    }\n    if n == 26 {\n    \
    \    return p + 25\n    }\n    if n == 27 {\n        return p + 26\n    }\n  \
    \  if n == 28 {\n        return p + 27\n    }\n    if n == 29 {\n        return\
    \ p + 28\n    }\n    if n == 30 {\n        return p + 29\n    }\n    if n == 31\
    \ {\n        return p + 30\n    }\n    if n == 32 {\n        return p + 31\n \
    \   }\n    if n == 33 {\n        return p + 32\n    }\n    if n == 34 {\n    \
    \    return p + 33\n    }\n    if n == 35 {\n        return p + 34\n    }\n  \
    \  if n == 36 {\n        return p + 35\n    }\n    if n == 37 {\n        return\
    \ p + 36\n    }\n    if n == 38 {\n        return p + 37\n    }\n    if n == 39\
    \ {\n        return p + 38\n    }\n    if ", "\tif n < 0 {\n\t\tn = -n\n\t}\n\t\
    if p < 0 {\n\t\tp = -p\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\tif p == 1 {\n\
    \t\treturn n\n\t}\n\tif p == 2 {\n\t\treturn n + 1\n\t}\n\tif p == 3 {\n\t\treturn\
    \ n * n\n\t}\n\tif p == 4 {\n\t\treturn n * n + n\n\t}\n\tif p == 5 {\n\t\treturn\
    \ n * n + n + 1\n\t}\n\tif p == 6 {\n\t\treturn n * n + n * n\n\t}\n\tif p ==\
    \ 7 {\n\t\treturn n * n + n * n + n\n\t}\n\tif p == 8 {\n\t\treturn n * n + n\
    \ * n + n * n\n\t}\n\tif p == 9 {\n\t\treturn n * n + n * n + n * n + n\n\t}\n\
    \tif p == 10 {\n\t\treturn n * n + n * n + n * n + n * n\n\t}\n\tif p == 11 {\n\
    \t\treturn n * n + n * n + n * n + n * n + n\n\t}\n\tif p == 12 {\n\t\treturn\
    \ n * n + n * n + n * n + n * n + n * n\n\t}\n\tif p == 13 {\n\t\treturn n * n\
    \ + n * n + n * n + n * n + n * n + n\n\t}\n\tif p == 14 {\n\t\treturn n * n +\
    \ n * n + n * n + n * n + n * n + n * n\n\t}\n\tif p == 15 {\n\t\treturn n * n\
    \ + n * n + n * n + n * n + n * n + n * n + n * n\n\t}\n\tif p == 16 {\n\t\treturn\
    \ n * n + n * n + n * n + n * n + n * n + n * n + n * n + n\n\t}\n\tif p == 17\
    \ {\n\t\treturn n * n + n * n + n * n + n * n + n * n + n * n + n * n + n * n\n\
    \t}\n\tif p == 18 {\n\t\treturn n * n + n * n + n * n + n * n + n * n + n * n\
    \ + n * n + n * n\n\t}\n\tif p == 19 {\n\t\treturn n * n + n * n + n * n + n *\
    \ n + n * n + n * n + n * n + n * n + n\n\t}\n\tif p == 20 {\n\t\treturn n * n\
    \ + n * n + n * n + n * n + n * n + n * n + n * n + n * n + n * n\n\t}\n\tif p\
    \ == 21 {\n\t\treturn n * n + n * n + n * n + n * n + n * n + n * n + n * n +\
    \ n * n + n * n + n\n\t}\n\tif p == 22 {\n\t\treturn n * n + n * n + n * n + n\
    \ * n + n * n + n * n + n * n + n * n + n * n + n\n\t}\n\tif p == 23 {\n\t\treturn\
    \ n * n + n * n + n * n + n * n + n * n + n * n + n * n + n * n + n * n + n\n\t\
    }\n\tif p == 24 {\n\t\treturn n * n + n * n + n * n + n * n + n * n + n * n +\
    \ n * n + n * n + n * n + n * n + n", "\tif n < 0 {\n\t\tpanic(\"modp: n must\
    \ be positive\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"modp: p must be positive\")\n\
    \t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif\
    \ n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\
    \t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n ==\
    \ p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\
    \t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif\
    \ n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\
    \t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n ==\
    \ p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\
    \t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif\
    \ n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\
    \t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n ==\
    \ p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\
    \t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif\
    \ n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\
    \t\treturn n\n\t}\n", "    if n == 0 {\n        return 1\n    }\n    if n == 1\
    \ {\n        return p\n    }\n    if n == p {\n        return n\n    }\n    if\
    \ n < p {\n        return modp(n - p, p)\n    }\n    if n > p {\n        return\
    \ modp(n, p)\n    }\n    return 0", "\tswitch {\n\tcase n < 0:\n\t\treturn modp(abs(n),\
    \ p)\n\tcase n >= p:\n\t\treturn n\n\tdefault:\n\t\treturn n % p\n\t}", "\tswitch\
    \ {\n\tcase n < 0:\n\t\treturn modp(abs(n), p)\n\tcase p == 0:\n\t\treturn 0\n\
    \tcase p == 1:\n\t\treturn n\n\tcase p < n:\n\t\treturn modp(n - p, p)\n\tdefault:\n\
    \t\treturn modp(n - p, p)\n\t}", '    return ((n & (p - 1)) == 0) ? n : n - p',
  "\tif n < 0 {\n\t\tpanic(\"modp requires positive n\")\n\t}\n\tif p < 1 {\n\t\t\
    panic(\"modp requires positive p\")\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\t\
    if n == 1 {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif p > p {\n\
    \t\tpanic(\"modp requires p <= p\")\n\t}\n\tx := n\n\ty := p\n\tfor {\n\t\tif\
    \ y % 2 == 0 {\n\t\t\tx /= 2\n\t\t\ty /= 2\n\t\t} else {\n\t\t\tx /= 2\n\t\t\t\
    y = (y - 1) / 2\n\t\t}\n\t\tif x == 0 {\n\t\t\treturn y\n\t\t}\n\t}", "\tswitch\
    \ {\n\tcase n < p:\n\t\treturn 0\n\tcase n == p:\n\t\treturn 1\n\tcase n >= p:\n\
    \t\treturn n - p\n\t}\n\treturn 0", "    if n < 0 {\n        return modp(abs(n),\
    \ p)\n    }\n    if p < 1 {\n        return modp(n, p)\n    }\n    if n == 0 {\n\
    \        return 1\n    }\n    if p == 1 {\n        return n\n    }\n    if p ==\
    \ 2 {\n        return modp(n / 2, p)\n    }\n    if p == 3 {\n        return modp(n\
    \ / 3, p)\n    }\n    if p == 4 {\n        return modp(n / 4, p)\n    }\n    if\
    \ p == 5 {\n        return modp(n / 5, p)\n    }\n    if p == 6 {\n        return\
    \ modp(n / 6, p)\n    }\n    if p == 7 {\n        return modp(n / 7, p)\n    }\n\
    \    if p == 8 {\n        return modp(n / 8, p)\n    }\n    if p == 9 {\n    \
    \    return modp(n / 9, p)\n    }\n    if p == 10 {\n        return modp(n / 10,\
    \ p)\n    }\n    if p == 11 {\n        return modp(n / 11, p)\n    }\n    if p\
    \ == 12 {\n        return modp(n / 12, p)\n    }\n    if p == 13 {\n        return\
    \ modp(n / 13, p)\n    }\n    if p == 14 {\n        return modp(n / 14, p)\n \
    \   }\n    if p == 15 {\n        return modp(n / 15, p)\n    }\n    if p == 16\
    \ {\n        return modp(n / 16, p)\n    }\n    if p == 17 {\n        return modp(n\
    \ / 17, p)\n    }\n    if p == 18 {\n        return modp(n / 18, p)\n    }\n \
    \   if p == 19 {\n        return modp(n / 19, p)\n    }\n    if p == 20 {\n  \
    \      return modp(n / 20, p)\n    }\n    if p == 21 {\n        return modp(n\
    \ / 21, p)\n    }\n    if p == 22 {\n        return modp(n / 22, p)\n    }\n \
    \   if p == 23 {\n        return modp(n / 23, p)\n    }\n    if p == 24 {\n  \
    \      return modp(n / 24, p)\n    }\n    if p == 25 {\n        return modp(n\
    \ / 25, p)\n    }\n    if p == 26 {\n        return modp(n / 26, p)\n    }\n \
    \   if p == 27 {\n        return modp(n / 27, p)\n    }\n    if p == 28 {\n  \
    \      return modp(n / 28, p)\n    }\n    if p == 29 {\n        return modp(n\
    \ / 29, p)\n    }\n    if p == 30 {\n        return modp(n / 30, p)\n    }\n \
    \   if p == 31 {\n        return modp(n / 31, p)\n    }\n", "\treturn (n & (p\
    \ - 1)) == 0 ? n : n - 1", "\tif n < 0 {\n\t\tpanic(\"modp called with negative\
    \ n\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"modp called with p < 1\")\n\t}\n\tif n\
    \ == 0 {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif n == p {\n\
    \t\treturn n\n\t}\n\tx := n\n\ty := p\n\tz := 1\n\tfor {\n\t\tif y > z {\n\t\t\
    \tx -= z\n\t\t\ty -= z\n\t\t} else {\n\t\t\tx -= y\n\t\t\ty = 0\n\t\t}\n\t\tif\
    \ x == 0 {\n\t\t\treturn z\n\t\t}\n\t\tz *= y\n\t}", "\treturn (n & (p - 1)) ==\
    \ 0 ? n : n - 1", "\tswitch {\n\tcase n < 0:\n\t\treturn modp(abs(n), p)\n\tcase\
    \ n >= p:\n\t\treturn 0\n\tdefault:\n\t\treturn ((n - p) % (p - 1)) + 1\n\t}",
  "\tif n == 0 || p == 0 {\n\t\treturn 0\n\t}\n\tswitch {\n\tcase n < 0:\n\t\treturn\
    \ modp(abs(n), p)\n\tcase p < 0:\n\t\treturn modp(abs(n), -p)\n\tcase n >= p:\n\
    \t\treturn n\n\tdefault:\n\t\treturn modp(n - p, p)\n\t}", "    if n < 0 {\n \
    \       return modp(-n, p)\n    }\n    if p < 2 {\n        return n\n    }\n \
    \   if p < p {\n        return modp(n - p, p)\n    }\n    if p < p {\n       \
    \ return modp(n, p - 1)\n    }\n    if p < p {\n        return modp(n, p)\n  \
    \  }\n    if p < p {\n        return modp(n, p - 1)\n    }\n    if p < p {\n \
    \       return modp(n, p)\n    }\n    if p < p {\n        return modp(n, p - 1)\n\
    \    }\n    if p < p {\n        return modp(n, p)\n    }\n    if p < p {\n   \
    \     return modp(n, p - 1)\n    }\n    if p < p {\n        return modp(n, p)\n\
    \    }\n    if p < p {\n        return modp(n, p - 1)\n    }\n    if p < p {\n\
    \        return modp(n, p)\n    }\n    if p < p {\n        return modp(n, p -\
    \ 1)\n    }\n    if p < p {\n        return modp(n, p)\n    }\n    if p < p {\n\
    \        return modp(n, p - 1)\n    }\n    if p < p {\n        return modp(n,\
    \ p)\n    }\n    if p < p {\n        return modp(n, p - 1)\n    }\n    if p <\
    \ p {\n        return modp(n, p)\n    }\n    if p < p {\n        return modp(n,\
    \ p - 1)\n    }\n    if p < p {\n        return modp(n, p)\n    }\n    if p <\
    \ p {\n        return modp(n, p - 1)\n    }\n    if p < p {\n        return modp(n,\
    \ p)\n    }\n    if p < p {\n        return modp(n, p - 1)\n    }\n    if p <\
    \ p {\n        return modp(n, p)\n    }\n    if p < p {\n        return modp(n,\
    \ p - 1)\n    }\n    if p < p {\n        return modp(n, p)\n    }\n    if p <\
    \ p {\n        return modp(n, p - 1)\n    }\n    if p < p {\n        return modp(n,\
    \ p)\n    }\n    if p < p {\n        return modp(n, p - 1)\n    }\n    if p <\
    \ p {\n        return modp(n, p)\n    }\n    if p < p {\n        return modp(n,\
    \ p - 1)\n    }\n    if p < p {\n        return modp(n, p)\n    }\n    if p <\
    \ p {\n        return modp(n, p - 1)\n    }\n    if p < p {\n        return modp(n,\
    \ p)\n    }\n    if p < p {\n        return modp(n, p - 1)\n    }\n    if p <\
    \ p {\n        return modp(n, p)\n    }\n    if p < p {\n        return modp(n,\
    \ p - 1)\n    }\n    if p ", "    if n == 0 {\n        return 1\n    }\n    if\
    \ n == 1 {\n        return p\n    }\n    if n == p {\n        return n\n    }\n\
    \    if p < 2 {\n        return modp(n - 1, p)\n    }\n    if p < p {\n      \
    \  return modp(n - 1, p)\n    }\n    if p < p {\n        return modp(n - 1, p)\n\
    \    }\n    if p < p {\n        return modp(n - 1, p)\n    }\n    if p < p {\n\
    \        return modp(n - 1, p)\n    }\n    if p < p {\n        return modp(n -\
    \ 1, p)\n    }\n    if p < p {\n        return modp(n - 1, p)\n    }\n    if p\
    \ < p {\n        return modp(n - 1, p)\n    }\n    if p < p {\n        return\
    \ modp(n - 1, p)\n    }\n    if p < p {\n        return modp(n - 1, p)\n    }\n\
    \    if p < p {\n        return modp(n - 1, p)\n    }\n    if p < p {\n      \
    \  return modp(n - 1, p)\n    }\n    if p < p {\n        return modp(n - 1, p)\n\
    \    }\n    if p < p {\n        return modp(n - 1, p)\n    }\n    if p < p {\n\
    \        return modp(n - 1, p)\n    }\n    if p < p {\n        return modp(n -\
    \ 1, p)\n    }\n    if p < p {\n        return modp(n - 1, p)\n    }\n    if p\
    \ < p {\n        return modp(n - 1, p)\n    }\n    if p < p {\n        return\
    \ modp(n - 1, p)\n    }\n    if p < p {\n        return modp(n - 1, p)\n    }\n\
    \    if p < p {\n        return modp(n - 1, p)\n    }\n    if p < p {\n      \
    \  return modp(n - 1, p)\n    }\n    if p < p {\n        return modp(n - 1, p)\n\
    \    }\n    if p < p {\n        return modp(n - 1, p)\n    }\n    if p < p {\n\
    \        return modp(n - 1, p)\n    }\n    if p < p {\n        return modp(n -\
    \ 1, p)\n    }\n    if p < p {\n        return modp(n - 1, p)\n    }\n    if p\
    \ < p {\n        return modp(n - 1, p)\n    }\n    if p < p {\n        return\
    \ modp(n - 1, p)\n    }\n    if p < p {\n        return modp(n - 1, p)\n    }\n\
    \    if p < p {\n        return modp(n - 1, p)\n    }\n    if p < p {\n      \
    \  return modp(n - 1, p)\n    }\n    if p < p {\n        return modp(n - 1, p)\n\
    \    }\n    if p < p {\n        return modp(n - 1, p)\n    }\n    if p < p {\n\
    \        return modp(n - 1, ", "\tif n == 0 {\n\t\treturn 1\n\t}\n\tif n == 1\
    \ {\n\t\treturn p\n\t}\n\tif p < 2 {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\treturn\
    \ modp(n - 1, p)\n\t}\n\tif p < p {\n\t\treturn modp(n - 1, p)\n\t}\n\tif p <\
    \ p {\n\t\treturn modp(n - 1, p)\n\t}\n\treturn modp(n - 1, p)", "\tif n < 0 {\n\
    \t\tn = -n\n\t\tp = -p\n\t}\n\tswitch {\n\tcase p < 0:\n\t\treturn 0\n\tcase p\
    \ < n:\n\t\treturn p % n\n\tdefault:\n\t\treturn n % p\n\t}", "    if n == 0 {\n\
    \        return 1\n    }\n    if n == 1 {\n        return p\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if p < n {\n        return modp(n - p, p)\n\
    \    }\n    if p > n {\n        return modp(n, p)\n    }\n    if p % 2 == 0 {\n\
    \        return modp(n / 2, p)\n    }\n    return modp(n / 2, p) + 1", "\tswitch\
    \ {\n\tcase n < 0:\n\t\treturn modp(abs(n), p)\n\tcase n >= p:\n\t\treturn 0\n\
    \tdefault:\n\t\treturn ((n % p) + p) % p\n\t}", '    return ((n & (p - 1)) ==
    0) ? n : n - p', "\tif n < 0 {\n\t\tn = -n\n\t\tp = -p\n\t}\n\tn %= p\n\tif n\
    \ == 0 {\n\t\treturn 1\n\t}\n\treturn n", "\tif n < 0 {\n\t\tpanic(\"modp requires\
    \ positive number\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"modp requires positive modulus\"\
    )\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\t\
    if n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p\
    \ {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\
    \t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif\
    \ n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\
    \t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n ==\
    \ p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\
    \t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif\
    \ n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\
    \t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n ==\
    \ p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\
    \t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif\
    \ n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\
    \t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n ==\
    \ p {\n\t\treturn n\n\t}", "    if n < 0 {\n        return modp(abs(n), p)\n \
    \   }\n    if p < 1 {\n        return modp(n - 1, p)\n    }\n    if p > p {\n\
    \        return modp(n, p - 1)\n    }\n    if n == 0 {\n        return 1\n   \
    \ }\n    if n == 1 {\n        return p\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {", "    if n < 0 {\n        return modp(abs(n), p)\n    }\n    if p < 0 {\n\
    \        return modp(n, abs(p))\n    }\n    if n == 0 {\n        return 0\n  \
    \  }\n    if p == 0 {\n        return n\n    }\n    if p == 1 {\n        return\
    \ n\n    }\n    if n == 1 {\n        return p\n    }\n    if n == 2 {\n      \
    \  return p + 1\n    }\n    if n == 3 {\n        return p + 2\n    }\n    if n\
    \ == 4 {\n        return p + 3\n    }\n    if n == 5 {\n        return p + 4\n\
    \    }\n    if n == 6 {\n        return p + 5\n    }\n    if n == 7 {\n      \
    \  return p + 6\n    }\n    if n == 8 {\n        return p + 7\n    }\n    if n\
    \ == 9 {\n        return p + 8\n    }\n    if n == 10 {\n        return p + 9\n\
    \    }\n    if n == 11 {\n        return p + 10\n    }\n    if n == 12 {\n   \
    \     return p + 11\n    }\n    if n == 13 {\n        return p + 12\n    }\n \
    \   if n == 14 {\n        return p + 13\n    }\n    if n == 15 {\n        return\
    \ p + 14\n    }\n    if n == 16 {\n        return p + 15\n    }\n    if n == 17\
    \ {\n        return p + 16\n    }\n    if n == 18 {\n        return p + 17\n \
    \   }\n    if n == 19 {\n        return p + 18\n    }\n    if n == 20 {\n    \
    \    return p + 19\n    }\n    if n == 21 {\n        return p + 20\n    }\n  \
    \  if n == 22 {\n        return p + 21\n    }\n    if n == 23 {\n        return\
    \ p + 22\n    }\n    if n == 24 {\n        return p + 23\n    }\n    if n == 25\
    \ {\n        return p + 24\n    }\n    if n == 26 {\n        return p + 25\n \
    \   }\n    if n == 27 {\n        return p + 26\n    }\n    if n == 28 {\n    \
    \    return p + 27\n    }\n    if n == 29 {\n        return p + 28\n    }\n  \
    \  if n == 30 {\n        return p + 29\n    }\n    if n == 31 {\n        return\
    \ p + 30\n    }\n    if n == 32 {\n        return p + 31\n    }\n    if n == 33\
    \ {\n        return p + 32\n    }\n    if n == 34 {\n        return p + 33\n \
    \   }\n    if n == 35 {\n        return p + 34\n    }\n    if n == 36 {\n    \
    \    return p + 35\n    }\n    if n == 37 {\n        return p + 36\n    }\n  \
    \  if n == 38 {\n        return p + 37\n    }\n    if n == 39 {\n        return\
    \ p", "\tif n < 0 {\n\t\tpanic(\"modp requires positive n\")\n\t}\n\tif p < 1\
    \ {\n\t\tpanic(\"modp requires positive p\")\n\t}\n\tif n == 0 {\n\t\treturn 1\n\
    \t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif\
    \ p > p {\n\t\tpanic(\"modp requires p > p\")\n\t}\n\tr := n % p\n\tif r == 0\
    \ {\n\t\treturn n\n\t}\n\treturn r", "\tif n < 0 {\n\t\tpanic(\"modp called with\
    \ negative n\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"modp called with p < 1\")\n\t\
    }\n\tif n == 0 {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif n\
    \ == p {\n\t\treturn n\n\t}\n\tif p > p {\n\t\tpanic(\"modp called with p > p\"\
    )\n\t}\n\tq := p\n\tr := 1\n\tfor i := 0; i < n; i++ {\n\t\tq *= p\n\t\tr += q\n\
    \t}\n\treturn r", "\tswitch {\n\tcase n < 0:\n\t\treturn modp(-n, p)\n\tcase n\
    \ >= p:\n\t\treturn 0\n\tdefault:\n\t\treturn ((n % p) + p) % p\n\t}", "    if\
    \ n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return p\n    }\n\
    \    if n == p {\n        return n\n    }\n    if p < 2 {\n        return modp(n-1,\
    \ p)\n    }\n    if p < p {\n        return modp(n-1, p)\n    }\n    if p < p\
    \ {\n        return modp(n-1, p)\n    }\n    if p < p {\n        return modp(n-1,\
    \ p)\n    }\n    if p < p {\n        return modp(n-1, p)\n    }\n    if p < p\
    \ {\n        return modp(n-1, p)\n    }\n    if p < p {\n        return modp(n-1,\
    \ p)\n    }\n    if p < p {\n        return modp(n-1, p)\n    }\n    if p < p\
    \ {\n        return modp(n-1, p)\n    }\n    if p < p {\n        return modp(n-1,\
    \ p)\n    }\n    if p < p {\n        return modp(n-1, p)\n    }\n    if p < p\
    \ {\n        return modp(n-1, p)\n    }\n    if p < p {\n        return modp(n-1,\
    \ p)\n    }\n    if p < p {\n        return modp(n-1, p)\n    }\n    if p < p\
    \ {\n        return modp(n-1, p)\n    }\n    if p < p {\n        return modp(n-1,\
    \ p)\n    }\n    if p < p {\n        return modp(n-1, p)\n    }\n    if p < p\
    \ {\n        return modp(n-1, p)\n    }\n    if p < p {\n        return modp(n-1,\
    \ p)\n    }\n    if p < p {\n        return modp(n-1, p)\n    }\n    if p < p\
    \ {\n        return modp(n-1, p)\n    }\n    if p < p {\n        return modp(n-1,\
    \ p)\n    }\n    if p < p {\n        return modp(n-1, p)\n    }\n    if p < p\
    \ {\n        return modp(n-1, p)\n    }\n    if p < p {\n        return modp(n-1,\
    \ p)\n    }\n    if p < p {\n        return modp(n-1, p)\n    }\n    if p < p\
    \ {\n        return modp(n-1, p)\n    }\n    if p < p {\n        return modp(n-1,\
    \ p)\n    }\n    if p < p {\n        return modp(n-1, p)\n    }\n    if p < p\
    \ {\n        return modp(n-1, p)\n    }\n    if p < p {\n        return modp(n-1,\
    \ p)\n    }\n    if p < p {\n        return modp(n-1, p)\n    }\n    if p < p\
    \ {\n        return modp(n-1, p)\n    }\n    if p < p {\n        return modp(n-1,\
    \ p)\n    }\n    if p < p {\n        return modp(n-1, ", '    return ((n & (p
    - 1)) == 0) ? n : ((n & (p - 1)) + p)', '    return n % p', "\treturn (n & (p\
    \ - 1)) == 0 ? n : n - 1", "    if n == 0 {\n        return 1\n    }\n    if n\
    \ == 1 {\n        return p\n    }\n    if n == p {\n        return n\n    }\n\
    \    if p < 2 {\n        return modp(n, p - 1)\n    }\n    if p < p {\n      \
    \  return modp(n, p - 2)\n    }\n    if p < p {\n        return modp(n, p - 3)\n\
    \    }\n    if p < p {\n        return modp(n, p - 4)\n    }\n    if p < p {\n\
    \        return modp(n, p - 5)\n    }\n    if p < p {\n        return modp(n,\
    \ p - 6)\n    }\n    if p < p {\n        return modp(n, p - 7)\n    }\n    if\
    \ p < p {\n        return modp(n, p - 8)\n    }\n    if p < p {\n        return\
    \ modp(n, p - 9)\n    }\n    if p < p {\n        return modp(n, p - 10)\n    }\n\
    \    if p < p {\n        return modp(n, p - 11)\n    }\n    if p < p {\n     \
    \   return modp(n, p - 12)\n    }\n    if p < p {\n        return modp(n, p -\
    \ 13)\n    }\n    if p < p {\n        return modp(n, p - 14)\n    }\n    if p\
    \ < p {\n        return modp(n, p - 15)\n    }\n    if p < p {\n        return\
    \ modp(n, p - 16)\n    }\n    if p < p {\n        return modp(n, p - 17)\n   \
    \ }\n    if p < p {\n        return modp(n, p - 18)\n    }\n    if p < p {\n \
    \       return modp(n, p - 19)\n    }\n    if p < p {\n        return modp(n,\
    \ p - 20)\n    }\n    if p < p {\n        return modp(n, p - 21)\n    }\n    if\
    \ p < p {\n        return modp(n, p - 22)\n    }\n    if p < p {\n        return\
    \ modp(n, p - 23)\n    }\n    if p < p {\n        return modp(n, p - 24)\n   \
    \ }\n    if p < p {\n        return modp(n, p - 25)\n    }\n    if p < p {\n \
    \       return modp(n, p - 26)\n    }\n    if p < p {\n        return modp(n,\
    \ p - 27)\n    }\n    if p < p {\n        return modp(n, p - 28)\n    }\n    if\
    \ p < p {\n        return modp(n, p - 29)\n    }\n    if p < p {\n        return\
    \ modp(n, p - 30)\n    }\n    if p < p {\n        return modp(n, p - 31)\n   \
    \ }\n    if p < p {\n        return modp(n, p - 32)\n    }\n    if p < p {\n \
    \       return modp(n, p - 33)\n    }\n    if p < p {\n        return modp(n,\
    \ p - 34)\n    }\n    if ", "    if n == 0 {\n        return 1\n    }\n    if\
    \ n == 1 {\n        return p\n    }\n    if n == p {\n        return n\n    }\n\
    \    if p < n {\n        return modp(n - p, p)\n    }\n    if p > n {\n      \
    \  return modp(n, p)\n    }\n    return modp(n - p, p)", "\tif n < 0 {\n\t\tn\
    \ = -n\n\t}\n\tif p < 0 {\n\t\tp = -p\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\
    \tif p == 0 {\n\t\treturn 0\n\t}\n\tif p > n {\n\t\tp = n\n\t}\n\tx := powMod(n,\
    \ p, p)\n\tif x == 1 {\n\t\treturn 0\n\t}\n\treturn x", '    return n & (p - 1)',
  "\tif n < 0 {\n\t\tn = -n\n\t\tp = -p\n\t}\n\tif p < 1 {\n\t\tpanic(\"p < 1\")\n\
    \t}\n\tif p > p {\n\t\tpanic(\"p > p\")\n\t}\n\tif n == 0 {\n\t\treturn 0\n\t\
    }\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn 1\n\t}\n\tif n\
    \ == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\
    \t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn\
    \ p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\
    \tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n ==\
    \ p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\t\
    return p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\
    \t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif\
    \ n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\
    \t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn\
    \ p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\
    \tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n ==\
    \ p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\t\
    return p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\
    \t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif\
    \ n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\
    \t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn\
    \ p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\
    \tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n ==\
    \ p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\t\
    return p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\
    \t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif\
    \ n == p {\n\t\treturn p\n\t}", "\tswitch {\n\tcase n < 0:\n\t\treturn modp(-n,\
    \ p)\n\tcase n >= p:\n\t\treturn n\n\tdefault:\n\t\treturn n % p\n\t}", "\tif\
    \ n < 0 {\n\t\tpanic(\"modp: negative number\")\n\t}\n\tif p < 2 {\n\t\tpanic(\"\
    modp: p must be >= 2\")\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\
    \t\treturn p\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif p < p {\n\t\treturn\
    \ modp(n, p - 1)\n\t}\n\tif p > p {\n\t\treturn modp(n, p - 2)\n\t}\n\tq := n\
    \ / p\n\tr := n % p\n\treturn modp(q, p) * p + r", "\tif n < 0 {\n\t\tpanic(\"\
    modp: negative number\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"modp: p < 1\")\n\t}\n\
    \tif n == 0 {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif n ==\
    \ p {\n\t\treturn n\n\t}\n\tif p > p {\n\t\tpanic(\"modp: p > p\")\n\t}\n\tx :=\
    \ n\n\tfor x != 0 {\n\t\tx = x % p\n\t\tif x == 0 {\n\t\t\treturn x\n\t\t}\n\t\
    }\n\treturn 1", "    if n < 0 {\n        return modp(abs(n), p)\n    }\n    if\
    \ p < 0 {\n        return modp(abs(n), -p) + p\n    }\n    if n == 0 {\n     \
    \   return 0\n    }\n    if n == 1 {\n        return p\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == -p+1 {\n        return -p\n    }\n    if\
    \ n == -p-1 {\n        return p\n    }\n    if n == -p+2 {\n        return -p-1\n\
    \    }\n    if n == -p+3 {\n        return -p-2\n    }\n    if n == -p+4 {\n \
    \       return -p-3\n    }\n    if n == -p+5 {\n        return -p-4\n    }\n \
    \   if n == -p+6 {\n        return -p-5\n    }\n    if n == -p+7 {\n        return\
    \ -p-6\n    }\n    if n == -p+8 {\n        return -p-7\n    }\n    if n == -p+9\
    \ {\n        return -p-8\n    }\n    if n == -p+10 {\n        return -p-9\n  \
    \  }\n    if n == -p+11 {\n        return -p-10\n    }\n    if n == -p+12 {\n\
    \        return -p-11\n    }\n    if n == -p+13 {\n        return -p-12\n    }\n\
    \    if n == -p+14 {\n        return -p-13\n    }\n    if n == -p+15 {\n     \
    \   return -p-14\n    }\n    if n == -p+16 {\n        return -p-15\n    }\n  \
    \  if n == -p+17 {\n        return -p-16\n    }\n    if n == -p+18 {\n       \
    \ return -p-17\n    }\n    if n == -p+19 {\n        return -p-18\n    }\n    if\
    \ n == -p+20 {\n        return -p-19\n    }\n    if n == -p+21 {\n        return\
    \ -p-20\n    }\n    if n == -p+22 {\n        return -p-21\n    }\n    if n ==\
    \ -p+23 {\n        return -p-22\n    }\n    if n == -p+24 {\n        return -p-23\n\
    \    }\n    if n == -p+25 {\n        return -p-24\n    }\n    if n == -p+26 {\n\
    \        return -p-25\n    }\n    if n == -p+27 {\n        return -p-26\n    }\n\
    \    if n == -p+28 {\n        return -p-27\n    }\n    if n == -p+29 {\n     \
    \   return -p-28\n    }\n    if n == -p+30 {\n        return -p-29\n    }\n  \
    \  if n == -p+31 {\n        return -p-30\n    }\n    if n == -p+32 {\n       \
    \ return -p-31\n    }\n    if n == -p+33 {\n        return -p-32\n    }\n    if\
    \ n == -p+34 {\n        return -p-", "    if n < 0 {\n        return modp(abs(n),\
    \ p)\n    }\n    if p < 1 {\n        return modp(n, p)\n    }\n    if p > p {\n\
    \        return modp(n, p - 1)\n    }\n    if n == 0 {\n        return 1\n   \
    \ }\n    if n == 1 {\n        return p\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n", "\treturn (n & (p - 1)) == 0 ? n : n - 1", "\tswitch {\n\tcase n < 0:\n\
    \t\treturn modp(abs(n), p)\n\tcase n >= p:\n\t\treturn 0\n\tdefault:\n\t\treturn\
    \ n & (p - 1)\n\t}", "\tif n < 0 {\n\t\tpanic(\"modp called with negative n\"\
    )\n\t}\n\tif p < 2 {\n\t\tpanic(\"modp called with p < 2\")\n\t}\n\tif n == 0\
    \ {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn 0\n\t}\n\tif n == p {\n\t\t\
    return 1\n\t}\n\tif n == p-2 {\n\t\treturn 0\n\t}\n\tif n == p-3 {\n\t\treturn\
    \ 2\n\t}\n\tif n == p-4 {\n\t\treturn 3\n\t}\n\tif n == p-5 {\n\t\treturn 4\n\t\
    }\n\tif n == p-6 {\n\t\treturn 5\n\t}\n\tif n == p-7 {\n\t\treturn 6\n\t}\n\t\
    if n == p-8 {\n\t\treturn 7\n\t}\n\tif n == p-9 {\n\t\treturn 8\n\t}\n\tif n ==\
    \ p-10 {\n\t\treturn 9\n\t}\n\tif n == p-11 {\n\t\treturn 10\n\t}\n\tif n == p-12\
    \ {\n\t\treturn 11\n\t}\n\tif n == p-13 {\n\t\treturn 12\n\t}\n\tif n == p-14\
    \ {\n\t\treturn 13\n\t}\n\tif n == p-15 {\n\t\treturn 14\n\t}\n\tif n == p-16\
    \ {\n\t\treturn 15\n\t}\n\tif n == p-17 {\n\t\treturn 16\n\t}\n\tif n == p-18\
    \ {\n\t\treturn 17\n\t}\n\tif n == p-19 {\n\t\treturn 18\n\t}\n\tif n == p-20\
    \ {\n\t\treturn 19\n\t}\n\tif n == p-21 {\n\t\treturn 20\n\t}\n\tif n == p-22\
    \ {\n\t\treturn 21\n\t}\n\tif n == p-23 {\n\t\treturn 22\n\t}\n\tif n == p-24\
    \ {\n\t\treturn 23\n\t}\n\tif n == p-25 {\n\t\treturn 24\n\t}\n\tif n == p-26\
    \ {\n\t\treturn 25\n\t}\n\tif n == p-27 {\n\t\treturn 26\n\t}\n\tif n == p-28\
    \ {\n\t\treturn 27\n\t}\n\tif n == p-29 {\n\t\treturn 28\n\t}\n\tif n == p-30\
    \ {\n\t\treturn 29\n\t}\n\tif n == p-31 {\n\t\treturn 30\n\t}\n\tif n == p-32\
    \ {\n\t\treturn 31\n\t}\n\tif n == p-33 {\n\t\treturn 32\n\t}\n\tif n == p-34\
    \ {\n\t\treturn 33\n\t}\n\tif n == p-35 {\n\t\treturn 34\n\t}\n\tif n == p-36\
    \ {\n\t\treturn 35\n\t}\n\tif n == p-37 {\n\t\treturn 36\n\t}\n\tif n == p-38\
    \ {\n\t\treturn 37\n\t}\n\tif n == p-39 {\n\t\treturn 38\n\t}\n\tif n == p-40\
    \ {\n\t\treturn 39\n\t}\n\tif n == p-41 {\n\t\treturn 40\n\t}\n\tif n == p-42\
    \ {\n\t\treturn 41\n\t}\n", "\tif n < 0 {\n\t\tn = -n\n\t\tp = -p\n\t}\n\tswitch\
    \ {\n\tcase n < 0:\n\t\treturn 0\n\tcase n <= p:\n\t\treturn n\n\tcase p < 1:\n\
    \t\treturn 1\n\tdefault:\n\t\tn -= p\n\t\tn /= p\n\t\treturn n\n\t}", "\tif n\
    \ < 0 {\n\t\tpanic(\"modp called with negative n\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"\
    modp called with p < 1\")\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\tif n == 1\
    \ {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn 1\n\t}\n\tx := n\n\ty := p\n\
    \tz := 1\n\tfor {\n\t\tif y % 2 == 0 {\n\t\t\tx /= 2\n\t\t\ty /= 2\n\t\t\tz /=\
    \ 2\n\t\t} else {\n\t\t\tbreak\n\t\t}\n\t}\n\tswitch {\n\tcase x == y:\n\t\treturn\
    \ z\n\tcase x == z:\n\t\treturn y\n\tcase y == z:\n\t\treturn x\n\tdefault:\n\t\
    \treturn z\n\t}", "\tif n < 0 {\n\t\tn = -n\n\t\tp = -p\n\t}\n\tif p < 2 {\n\t\
    \treturn 0\n\t}\n\tif p > p {\n\t\tp = p\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t\
    }\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn 1\n\t}\n\tif n\
    \ == p {\n\t\treturn 0\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\
    \t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn\
    \ p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\
    \tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n ==\
    \ p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\t\
    return p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\
    \t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif\
    \ n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\
    \t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn\
    \ p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\
    \tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n ==\
    \ p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\t\
    return p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\
    \t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif\
    \ n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\
    \t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn\
    \ p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\
    \tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n ==\
    \ p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\t\
    return p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\
    \t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif\
    \ n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n", "\tif n ==\
    \ 0 || p == 0 {\n\t\treturn 0\n\t}\n\tswitch {\n\tcase n < 0:\n\t\treturn modp(abs(n),\
    \ p)\n\tcase p < 0:\n\t\treturn modp(n, abs(p))\n\tcase p == 0:\n\t\treturn n\n\
    \tdefault:\n\t\tswitch {\n\t\tcase n >= p:\n\t\t\treturn modp(n / p, p)\n\t\t\
    case n <= -p:\n\t\t\treturn modp(-n / p, p)\n\t\tdefault:\n\t\t\treturn modp((n+p-1)/p,\
    \ p)\n\t\t}\n\t}", "    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n\
    \        return p\n    }\n    if n == p {\n        return n\n    }\n    if p <\
    \ 2 {\n        return modp(n - 1, p)\n    }\n    if p < p {\n        return modp((n\
    \ - 1) * (p - 1), p)\n    }\n    if p < p {\n        return modp((n - 1) * (p\
    \ - 1), p)\n    }\n    if p < p {\n        return modp((n - 1) * (p - 1), p)\n\
    \    }\n    if p < p {\n        return modp((n - 1) * (p - 1), p)\n    }\n   \
    \ if p < p {\n        return modp((n - 1) * (p - 1), p)\n    }\n    if p < p {\n\
    \        return modp((n - 1) * (p - 1), p)\n    }\n    if p < p {\n        return\
    \ modp((n - 1) * (p - 1), p)\n    }\n    if p < p {\n        return modp((n -\
    \ 1) * (p - 1), p)\n    }\n    if p < p {\n        return modp((n - 1) * (p -\
    \ 1), p)\n    }\n    if p < p {\n        return modp((n - 1) * (p - 1), p)\n \
    \   }\n    if p < p {\n        return modp((n - 1) * (p - 1), p)\n    }\n    if\
    \ p < p {\n        return modp((n - 1) * (p - 1), p)\n    }\n    if p < p {\n\
    \        return modp((n - 1) * (p - 1), p)\n    }\n    if p < p {\n        return\
    \ modp((n - 1) * (p - 1), p)\n    }\n    if p < p {\n        return modp((n -\
    \ 1) * (p - 1), p)\n    }\n    if p < p {\n        return modp((n - 1) * (p -\
    \ 1), p)\n    }\n    if p < p {\n        return modp((n - 1) * (p - 1), p)\n \
    \   }\n    if p < p {\n        return modp((n - 1) * (p - 1), p)\n    }\n    if\
    \ p < p {\n        return modp((n - 1) * (p - 1), p)\n    }\n    if p < p {\n\
    \        return modp((n - 1) * (p - 1), p)\n    }\n    if p < p {\n        return\
    \ modp((n - 1) * (p - 1), p)\n    }\n    if p < p {\n        return modp((n -\
    \ 1) * (p - 1), p)\n    }\n    if p < p {\n        return modp((n - 1) * (p -\
    \ 1), p)\n    }\n    if p < p {\n        return modp((n - 1) * (p - 1), p)\n \
    \   }\n    if p < p {\n        return modp((n - 1) * (p - 1), p)\n    }\n    if\
    \ p < p {\n        return modp((n - 1) * (p - 1), p)\n    }\n    if p < p {",
  "    if n < 0 {\n        return modp(abs(n), p)\n    }\n    if p < 2 {\n       \
    \ return n\n    }\n    if p > p {\n        return modp(n, p - 2)\n    }\n    if\
    \ n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return p\n    }\n\
    \    if n == p {\n        return n\n    }\n    if n == p {\n        return p\n\
    \    }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n", "\tif n < 0 {\n\t\t\
    panic(\"modp requires positive n\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"modp requires\
    \ positive p\")\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn\
    \ p\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tq := p\n\tr := 1\n\tfor i := 0;\
    \ i < n; i++ {\n\t\tq /= p\n\t\tr *= q\n\t}\n\treturn r", "\tswitch {\n\tcase\
    \ n < 0:\n\t\treturn modp(abs(n), p)\n\tcase n >= p:\n\t\treturn n\n\tdefault:\n\
    \t\treturn n % p\n\t}", "    if n == 0 {\n        return 1\n    }\n    if n ==\
    \ 1 {\n        return p\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if p < 2 {\n        return modp(n, p)\n    }\n    if p < p {\n        return\
    \ modp(n - p, p)\n    }\n    if p < p {\n        return modp(n, p - p)\n    }\n\
    \    return modp(n - p, p)", "    if n < 0 {\n        return modp(abs(n), p)\n\
    \    }\n    if p < 1 {\n        return modp(n / p, p)\n    }\n    if p > p {\n\
    \        return modp(n / p, p)\n    }\n    if n == 0 {\n        return 1\n   \
    \ }\n    if n == 1 {\n        return p\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if ",
  "\tif n == 0 {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif n == p\
    \ {\n\t\treturn n\n\t}\n\tif n < p {\n\t\treturn modp(n - p, p)\n\t}\n\treturn\
    \ modp((p - 1) * (n - p), p)", "\tif n == 0 || p == 0 {\n\t\treturn 0\n\t}\n\t\
    let mut r = 1\n\tlet mut m = p\n\twhile n > 0 {\n\t\tif n % 2 == 0 {\n\t\t\tr\
    \ *= m\n\t\t}\n\t\tn /= 2\n\t\tm *= p\n\t}\n\treturn r", "    if n < 0 {\n   \
    \     return modp(abs(n), p)\n    }\n    if p < 0 {\n        return modp(n - abs(n),\
    \ p)\n    }\n    if n == 0 {\n        return 0\n    }\n    if p == 0 {\n     \
    \   return n\n    }\n    if p == 1 {\n        return n\n    }\n    if n == 1 {\n\
    \        return p\n    }\n    if n == 2 {\n        return p + 1\n    }\n    if\
    \ n == 3 {\n        return p + 2\n    }\n    if n == 4 {\n        return p + 3\n\
    \    }\n    if n == 5 {\n        return p + 4\n    }\n    if n == 6 {\n      \
    \  return p + 5\n    }\n    if n == 7 {\n        return p + 6\n    }\n    if n\
    \ == 8 {\n        return p + 7\n    }\n    if n == 9 {\n        return p + 8\n\
    \    }\n    if n == 10 {\n        return p + 9\n    }\n    if n == 11 {\n    \
    \    return p + 10\n    }\n    if n == 12 {\n        return p + 11\n    }\n  \
    \  if n == 13 {\n        return p + 12\n    }\n    if n == 14 {\n        return\
    \ p + 13\n    }\n    if n == 15 {\n        return p + 14\n    }\n    if n == 16\
    \ {\n        return p + 15\n    }\n    if n == 17 {\n        return p + 16\n \
    \   }\n    if n == 18 {\n        return p + 17\n    }\n    if n == 19 {\n    \
    \    return p + 18\n    }\n    if n == 20 {\n        return p + 19\n    }\n  \
    \  if n == 21 {\n        return p + 20\n    }\n    if n == 22 {\n        return\
    \ p + 21\n    }\n    if n == 23 {\n        return p + 22\n    }\n    if n == 24\
    \ {\n        return p + 23\n    }\n    if n == 25 {\n        return p + 24\n \
    \   }\n    if n == 26 {\n        return p + 25\n    }\n    if n == 27 {\n    \
    \    return p + 26\n    }\n    if n == 28 {\n        return p + 27\n    }\n  \
    \  if n == 29 {\n        return p + 28\n    }\n    if n == 30 {\n        return\
    \ p + 29\n    }\n    if n == 31 {\n        return p + 30\n    }\n    if n == 32\
    \ {\n        return p + 31\n    }\n    if n == 33 {\n        return p + 32\n \
    \   }\n    if n == 34 {\n        return p + 33\n    }\n    if n == 35 {\n    \
    \    return p + 34\n    }\n    if n == 36 {\n        return p + 35\n    }\n  \
    \  if n == 37 {\n        return p + 36\n    }\n    if n == 38 {\n        return\
    \ p + 37\n    }\n    if n == 39 {\n", "\tif n == 0 {\n\t\treturn 1\n\t}\n\tif\
    \ n == 1 {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif p < 2 {\n\
    \t\treturn 0\n\t}\n\tif p > p {\n\t\treturn 0\n\t}\n\tif p > p {\n\t\treturn 0\n\
    \t}\n\tif p > p {\n\t\treturn 0\n\t}\n\tif p > p {\n\t\treturn 0\n\t}\n\tif p\
    \ > p {\n\t\treturn 0\n\t}\n\tif p > p {\n\t\treturn 0\n\t}\n\tif p > p {\n\t\t\
    return 0\n\t}\n\tif p > p {\n\t\treturn 0\n\t}\n\tif p > p {\n\t\treturn 0\n\t\
    }\n\tif p > p {\n\t\treturn 0\n\t}\n\tif p > p {\n\t\treturn 0\n\t}\n\tif p >\
    \ p {\n\t\treturn 0\n\t}\n\tif p > p {\n\t\treturn 0\n\t}\n\tif p > p {\n\t\t\
    return 0\n\t}\n\tif p > p {\n\t\treturn 0\n\t}\n\tif p > p {\n\t\treturn 0\n\t\
    }\n\tif p > p {\n\t\treturn 0\n\t}\n\tif p > p {\n\t\treturn 0\n\t}\n\tif p >\
    \ p {\n\t\treturn 0\n\t}\n\tif p > p {\n\t\treturn 0\n\t}\n\tif p > p {\n\t\t\
    return 0\n\t}\n\tif p > p {\n\t\treturn 0\n\t}\n\tif p > p {\n\t\treturn 0\n\t\
    }\n\tif p > p {\n\t\treturn 0\n\t}\n\tif p > p {\n\t\treturn 0\n\t}\n\tif p >\
    \ p {\n\t\treturn 0\n\t}\n\tif p > p {\n\t\treturn 0\n\t}\n\tif p > p {\n\t\t\
    return 0\n\t}\n\tif p > p {\n\t\treturn 0\n\t}\n\tif p > p {\n\t\treturn 0\n\t\
    }\n\tif p > p {\n\t\treturn 0\n\t}\n\tif p > p {\n\t\treturn 0\n\t}\n\tif p >\
    \ p {\n\t\treturn 0\n\t}\n\tif p > p {\n\t\treturn 0\n\t}\n\tif p > p {\n\t\t\
    return 0\n\t}\n\tif p > p {\n\t\treturn 0\n\t}\n\tif p > p {\n\t\treturn 0\n\t\
    }\n\tif p > p {\n\t\treturn 0\n\t}\n\tif p > p {\n\t\treturn 0\n\t}\n\tif p >\
    \ p {\n\t\treturn 0\n\t}\n\tif p > p {\n\t\treturn 0\n\t}\n\tif p > p {\n\t\t\
    return 0\n\t}\n\tif p > p {\n\t\treturn 0\n\t}\n\tif p > p {\n\t\treturn 0\n\t\
    }\n\tif p > p {\n\t\treturn 0\n\t}\n\tif p > p {\n\t\treturn 0\n\t}\n\tif p >\
    \ p {\n\t\treturn 0\n\t}\n\tif p > p {\n", "\treturn (n & (p - 1)) == 0 ? n :\
    \ n - 1", "    if n == 0 {\n        return 1\n    }\n    if p == 0 {\n       \
    \ return 0\n    }\n    if n >= p {\n        return n - p\n    }\n    return n\
    \ % p", "\tif n < 0 {\n\t\tn = -n\n\t\tp = -p\n\t}\n\tif p < 1 {\n\t\tpanic(\"\
    p must be positive\")\n\t}\n\tif p > p {\n\t\tpanic(\"p must be smaller than p\"\
    )\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\t\
    if n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p\
    \ {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\
    \t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif\
    \ n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\
    \t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n ==\
    \ p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\
    \t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif\
    \ n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\
    \t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n ==\
    \ p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\
    \t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif\
    \ n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\
    \t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n", "    if n < 0\
    \ {\n        return modp(-n, p)\n    }\n    if p < 1 {\n        return modp(n,\
    \ p - 1)\n    }\n    if p > p {\n        return modp(n, p)\n    }\n    if n ==\
    \ 0 {\n        return 1\n    }\n    if n == 1 {\n        return p\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p {\n        return n\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p {\n        return n\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p {\n        return n\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p {\n        return n\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p {\n        return n\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return ", "    if n < 0 {\n     \
    \   return modp(-n, p)\n    }\n    if p < 1 {\n        return modp(n, p - 1)\n\
    \    }\n    if p > p {\n        return modp(n, p)\n    }\n    if n == 0 {\n  \
    \      return 1\n    }\n    if n == 1 {\n        return p\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return ", "\tswitch {\n\tcase n < 0:\n\t\t\
    return modp(abs(n), p)\n\tcase n >= p:\n\t\treturn 0\n\tdefault:\n\t\treturn n\
    \ & (p - 1)\n\t}", "\tswitch {\n\tcase n < 0:\n\t\treturn modp(abs(n), p)\n\t\
    case n >= p:\n\t\treturn 0\n\tdefault:\n\t\treturn n & (p - 1)\n\t}", "    if\
    \ n < 0 {\n        return modp(abs(n), p)\n    }\n    if p < 1 {\n        return\
    \ modp(n, p)\n    }\n    if p > p {\n        return modp(n, p - 1)\n    }\n  \
    \  if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return p\n \
    \   }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n", "    if n < 0 {\n        return\
    \ modp(abs(n), p)\n    }\n    if p < 1 {\n        return modp(n, p)\n    }\n \
    \   if p > p {\n        return modp(n, p - 1)\n    }\n    if n == 0 {\n      \
    \  return 0\n    }\n    if n == 1 {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n", "    if n == 0 {\n        return 1\n    }\n    if n\
    \ == 1 {\n        return p\n    }\n    if n == p {\n        return n\n    }\n\
    \    if n < p {\n        return modp(n - p, p)\n    }\n    return modp((n - p)\
    \ + p, p)", "\tif n < 0 {\n\t\tn = -n\n\t\tp = -p\n\t}\n\tif p < 2 {\n\t\treturn\
    \ 0\n\t}\n\tif p > p {\n\t\treturn 0\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\t\
    if n == 1 {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn 1\n\t}\n\tif n == p\
    \ {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\t\
    return p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\
    \t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif\
    \ n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\
    \t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn\
    \ p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\
    \tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n ==\
    \ p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\t\
    return p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\
    \t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif\
    \ n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\
    \t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn\
    \ p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\
    \tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n ==\
    \ p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\t\
    return p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\
    \t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif\
    \ n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\
    \t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn\
    \ p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\
    \tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n ==\
    \ p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif ", "\treturn\
    \ (n & (p - 1)) == 0 ? n : n - 1", "    if n == 0 {\n        return 1\n    }\n\
    \    if n == 1 {\n        return p\n    }\n    if n == p {\n        return n\n\
    \    }\n    if n < p {\n        return modp(n - p, p)\n    }\n    if n > p {\n\
    \        return modp(n, p)\n    }\n    return 0", "    if n == 0 {\n        return\
    \ 1\n    }\n    if n == 1 {\n        return p\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if p < n {\n        return modp(n - p, p)\n    }\n   \
    \ if p > n {\n        return modp(n, p)\n    }\n    return modp(n - p, p)", "\t\
    switch {\n\tcase n < 0:\n\t\treturn modp(abs(n), p)\n\tcase p < 0:\n\t\treturn\
    \ modp(n, abs(p))\n\tcase p == 0:\n\t\treturn 0\n\tdefault:\n\t\treturn n & (p\
    \ - 1)\n\t}", "    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n   \
    \     return p\n    }\n    if n == p {\n        return n\n    }\n    if n < p\
    \ {\n        return modp(n - p, p)\n    }\n    return modp((n - p) + p, p)", "\t\
    return (n & (p - 1)) == 0 ? n : n - 1", "\tif n < 0 {\n\t\tpanic(\"modp called\
    \ with negative n\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"modp called with p < 1\"\
    )\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\t\
    if n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p\
    \ {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\
    \t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif\
    \ n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\
    \t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n ==\
    \ p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\
    \t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif\
    \ n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\
    \t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n ==\
    \ p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\
    \t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif\
    \ n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\
    \t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n ==\
    \ p {\n\t\treturn n\n", "    if n == 0 {\n        return 1\n    }\n    if n ==\
    \ 1 {\n        return p\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if p < 2 {\n        return modp(n, p - 2)\n    }\n    if p < p {\n        return\
    \ modp(n, p - 1)\n    }\n    if p < p {\n        return modp(n, p - 2)\n    }\n\
    \    if p < p {\n        return modp(n, p - 1)\n    }\n    if p < p {\n      \
    \  return modp(n, p - 2)\n    }\n    if p < p {\n        return modp(n, p - 1)\n\
    \    }\n    if p < p {\n        return modp(n, p - 2)\n    }\n    if p < p {\n\
    \        return modp(n, p - 1)\n    }\n    if p < p {\n        return modp(n,\
    \ p - 2)\n    }\n    if p < p {\n        return modp(n, p - 1)\n    }\n    if\
    \ p < p {\n        return modp(n, p - 2)\n    }\n    if p < p {\n        return\
    \ modp(n, p - 1)\n    }\n    if p < p {\n        return modp(n, p - 2)\n    }\n\
    \    if p < p {\n        return modp(n, p - 1)\n    }\n    if p < p {\n      \
    \  return modp(n, p - 2)\n    }\n    if p < p {\n        return modp(n, p - 1)\n\
    \    }\n    if p < p {\n        return modp(n, p - 2)\n    }\n    if p < p {\n\
    \        return modp(n, p - 1)\n    }\n    if p < p {\n        return modp(n,\
    \ p - 2)\n    }\n    if p < p {\n        return modp(n, p - 1)\n    }\n    if\
    \ p < p {\n        return modp(n, p - 2)\n    }\n    if p < p {\n        return\
    \ modp(n, p - 1)\n    }\n    if p < p {\n        return modp(n, p - 2)\n    }\n\
    \    if p < p {\n        return modp(n, p - 1)\n    }\n    if p < p {\n      \
    \  return modp(n, p - 2)\n    }\n    if p < p {\n        return modp(n, p - 1)\n\
    \    }\n    if p < p {\n        return modp(n, p - 2)\n    }\n    if p < p {\n\
    \        return modp(n, p - 1)\n    }\n    if p < p {\n        return modp(n,\
    \ p - 2)\n    }\n    if p < p {\n        return modp(n, p - 1)\n    }\n    if\
    \ p < p {\n        return modp(n, p - 2)\n    }\n    if p < p {\n        return\
    \ modp(n, p - 1)\n    }\n    if p < p {\n        return modp(n, p - 2)\n    }\n\
    \    if p < p {\n        return modp(n, p - 1)\n    }\n    if p < p {\n      \
    \  return modp(n, p - ", "    if n < 0 {\n        return modp(abs(n), p)\n   \
    \ }\n    if p < 0 {\n        return modp(n & (p - 1), p)\n    }\n    if p > p\
    \ {\n        return modp((n >> 1) & (p - 1), p)\n    }\n    return n & (p - 1)",
  "\tif n == 0 {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif p < 2\
    \ {\n\t\treturn 0\n\t}\n\tif p > p {\n\t\treturn 0\n\t}\n\tx := n % p\n\tif x\
    \ == 0 {\n\t\treturn p\n\t}\n\treturn p", "\tif n < 0 {\n\t\tn = -n\n\t}\n\tif\
    \ p < 0 {\n\t\tp = -p\n\t}\n\tif n == 0 || p == 0 {\n\t\treturn 0\n\t}\n\tn %=\
    \ p\n\tif n == 0 {\n\t\treturn 1\n\t}\n\treturn p", '    return ((n & (p - 1))
    == 0) ? n : ((n & (p - 1)) + p)', "    if n < 0 {\n        return modp(abs(n),\
    \ p)\n    }\n    if p < 1 {\n        return modp(n, p)\n    }\n    if p > p {\n\
    \        return modp(n, p - 1)\n    }\n    if n == 0 {\n        return 0\n   \
    \ }\n    if n == 1 {\n        return p\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n", "\tswitch {\n\tcase n < 0:\n\t\treturn modp(abs(n), p)\n\tcase n >=\
    \ p:\n\t\treturn n\n\tdefault:\n\t\treturn n % p\n\t}", "\tif n == 0 {\n\t\treturn\
    \ 1\n\t}\n\tif n == 1 {\n\t\treturn 0\n\t}\n\tif n == p {\n\t\treturn 1\n\t}\n\
    \tif n == p-2 {\n\t\treturn 2\n\t}\n\tif n == p-3 {\n\t\treturn 3\n\t}\n\tif n\
    \ == p-4 {\n\t\treturn 4\n\t}\n\tif n == p-5 {\n\t\treturn 5\n\t}\n\tif n == p-6\
    \ {\n\t\treturn 6\n\t}\n\tif n == p-7 {\n\t\treturn 7\n\t}\n\tif n == p-8 {\n\t\
    \treturn 8\n\t}\n\tif n == p-9 {\n\t\treturn 9\n\t}\n\tif n == p-10 {\n\t\treturn\
    \ 10\n\t}\n\tif n == p-11 {\n\t\treturn 11\n\t}\n\tif n == p-12 {\n\t\treturn\
    \ 12\n\t}\n\tif n == p-13 {\n\t\treturn 13\n\t}\n\tif n == p-14 {\n\t\treturn\
    \ 14\n\t}\n\tif n == p-15 {\n\t\treturn 15\n\t}\n\tif n == p-16 {\n\t\treturn\
    \ 16\n\t}\n\tif n == p-17 {\n\t\treturn 17\n\t}\n\tif n == p-18 {\n\t\treturn\
    \ 18\n\t}\n\tif n == p-19 {\n\t\treturn 19\n\t}\n\tif n == p-20 {\n\t\treturn\
    \ 20\n\t}\n\tif n == p-21 {\n\t\treturn 21\n\t}\n\tif n == p-22 {\n\t\treturn\
    \ 22\n\t}\n\tif n == p-23 {\n\t\treturn 23\n\t}\n\tif n == p-24 {\n\t\treturn\
    \ 24\n\t}\n\tif n == p-25 {\n\t\treturn 25\n\t}\n\tif n == p-26 {\n\t\treturn\
    \ 26\n\t}\n\tif n == p-27 {\n\t\treturn 27\n\t}\n\tif n == p-28 {\n\t\treturn\
    \ 28\n\t}\n\tif n == p-29 {\n\t\treturn 29\n\t}\n\tif n == p-30 {\n\t\treturn\
    \ 30\n\t}\n\tif n == p-31 {\n\t\treturn 31\n\t}\n\tif n == p-32 {\n\t\treturn\
    \ 32\n\t}\n\tif n == p-33 {\n\t\treturn 33\n\t}\n\tif n == p-34 {\n\t\treturn\
    \ 34\n\t}\n\tif n == p-35 {\n\t\treturn 35\n\t}\n\tif n == p-36 {\n\t\treturn\
    \ 36\n\t}\n\tif n == p-37 {\n\t\treturn 37\n\t}\n\tif n == p-38 {\n\t\treturn\
    \ 38\n\t}\n\tif n == p-39 {\n\t\treturn 39\n\t}\n\tif n == p-40 {\n\t\treturn\
    \ 40\n\t}\n\tif n == p-41 {\n\t\treturn 41\n\t}\n\tif n == p-42 {\n\t\treturn\
    \ 42\n\t}\n\tif n == p-43 {\n\t\treturn 43\n\t}\n\tif n == p-44 {\n\t\treturn\
    \ 44\n\t}\n\tif n == p-45 {\n\t\treturn 45\n\t}\n\tif n == p-46", "\tif n == 0\
    \ {\n\t\treturn 1\n\t}\n\tif p == 1 {\n\t\treturn n\n\t}\n\tif p < 2 {\n\t\treturn\
    \ 0\n\t}\n\tif p > n {\n\t\treturn 0\n\t}\n\tswitch {\n\tcase n < 0:\n\t\treturn\
    \ modp(n - 1, p) % p\n\tcase n <= p:\n\t\treturn n\n\tcase n >= p:\n\t\treturn\
    \ modp((n - p) % p, p)\n\t}", "    if n == 0 {\n        return 1\n    }\n    if\
    \ n == 1 {\n        return p\n    }\n    if n == p {\n        return n\n    }\n\
    \    if p < n {\n        return modp(n - p, p)\n    }\n    return modp((n - p)\
    \ + p, p)", "    if n < 0 {\n        return modp(abs(n), p)\n    }\n    if p <\
    \ 2 {\n        return n\n    }\n    if p < p {\n        return modp(n - 1, p)\n\
    \    }\n    if p < p {\n        return modp(n - 2, p)\n    }\n    if p < p {\n\
    \        return modp(n - 3, p)\n    }\n    if p < p {\n        return modp(n -\
    \ 4, p)\n    }\n    if p < p {\n        return modp(n - 5, p)\n    }\n    if p\
    \ < p {\n        return modp(n - 6, p)\n    }\n    if p < p {\n        return\
    \ modp(n - 7, p)\n    }\n    if p < p {\n        return modp(n - 8, p)\n    }\n\
    \    if p < p {\n        return modp(n - 9, p)\n    }\n    if p < p {\n      \
    \  return modp(n - 10, p)\n    }\n    if p < p {\n        return modp(n - 11,\
    \ p)\n    }\n    if p < p {\n        return modp(n - 12, p)\n    }\n    if p <\
    \ p {\n        return modp(n - 13, p)\n    }\n    if p < p {\n        return modp(n\
    \ - 14, p)\n    }\n    if p < p {\n        return modp(n - 15, p)\n    }\n   \
    \ if p < p {\n        return modp(n - 16, p)\n    }\n    if p < p {\n        return\
    \ modp(n - 17, p)\n    }\n    if p < p {\n        return modp(n - 18, p)\n   \
    \ }\n    if p < p {\n        return modp(n - 19, p)\n    }\n    if p < p {\n \
    \       return modp(n - 20, p)\n    }\n    if p < p {\n        return modp(n -\
    \ 21, p)\n    }\n    if p < p {\n        return modp(n - 22, p)\n    }\n    if\
    \ p < p {\n        return modp(n - 23, p)\n    }\n    if p < p {\n        return\
    \ modp(n - 24, p)\n    }\n    if p < p {\n        return modp(n - 25, p)\n   \
    \ }\n    if p < p {\n        return modp(n - 26, p)\n    }\n    if p < p {\n \
    \       return modp(n - 27, p)\n    }\n    if p < p {\n        return modp(n -\
    \ 28, p)\n    }\n    if p < p {\n        return modp(n - 29, p)\n    }\n    if\
    \ p < p {\n        return modp(n - 30, p)\n    }\n    if p < p {\n        return\
    \ modp(n - 31, p)\n    }\n    if p < p {\n        return modp(n - 32, p)\n   \
    \ }\n    if p < p {\n        return modp(n - 33, p)\n    }\n    if p < p {\n \
    \       return modp(n - 34, p)\n    }\n    if p < p {\n        return modp(n -\
    \ 35, p)\n", "\tif n < 0 {\n\t\tpanic(\"modp: n must be positive\")\n\t}\n\tif\
    \ p < 1 {\n\t\tpanic(\"modp: p must be positive\")\n\t}\n\tif n == 0 {\n\t\treturn\
    \ 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif p > p {\n\t\tpanic(\"modp: p must be less than p\")\n\t}\n\tif p > p {\n\t\
    \tpanic(\"modp: p must be less than p\")\n\t}\n\tif p > p {\n\t\tpanic(\"modp:\
    \ p must be less than p\")\n\t}\n\tif p > p {\n\t\tpanic(\"modp: p must be less\
    \ than p\")\n\t}\n\tif p > p {\n\t\tpanic(\"modp: p must be less than p\")\n\t\
    }\n\tif p > p {\n\t\tpanic(\"modp: p must be less than p\")\n\t}\n\tif p > p {\n\
    \t\tpanic(\"modp: p must be less than p\")\n\t}\n\tif p > p {\n\t\tpanic(\"modp:\
    \ p must be less than p\")\n\t}\n\tif p > p {\n\t\tpanic(\"modp: p must be less\
    \ than p\")\n\t}\n\tif p > p {\n\t\tpanic(\"modp: p must be less than p\")\n\t\
    }\n\tif p > p {\n\t\tpanic(\"modp: p must be less than p\")\n\t}\n\tif p > p {\n\
    \t\tpanic(\"modp: p must be less than p\")\n\t}\n\tif p > p {\n\t\tpanic(\"modp:\
    \ p must be less than p\")\n\t}\n\tif p > p {\n\t\tpanic(\"modp: p must be less\
    \ than p\")\n\t}\n\tif p > p {\n\t\tpanic(\"modp: p must be less than p\")\n\t\
    }\n\tif p > p {\n\t\tpanic(\"modp: p must be less than p\")\n\t}\n\tif p > p {\n\
    \t\tpanic(\"modp: p must be less than p\")\n\t}\n\tif p > p {\n\t\tpanic(\"modp:\
    \ p must be less than p\")\n\t}\n\tif p > p {\n\t\tpanic(\"modp: p must be less\
    \ than p\")\n\t}\n\tif p > p {\n\t\tpanic(\"modp: p must be less than p\")\n\t\
    }\n\tif p > p {\n\t\tpanic(\"modp: p must be less than p\")\n\t}\n\tif p > p {\n\
    \t\tpanic(\"modp: p must be less than p\")\n\t}\n\tif p > p {\n\t\tpanic(\"modp:\
    \ p must be less than p\")\n\t}\n\tif p > p {\n\t\tpanic(\"modp: p must be ",
  "    if n < 0 {\n        return modp(abs(n), p)\n    }\n    if p < 1 {\n       \
    \ return modp(n, p)\n    }\n    if n == 0 {\n        return 1\n    }\n    if p\
    \ == 1 {\n        return n\n    }\n    if p == 2 {\n        return modp(n / 2,\
    \ p)\n    }\n    if p == 3 {\n        return modp(n / 3, p)\n    }\n    if p ==\
    \ 4 {\n        return modp(n / 4, p)\n    }\n    if p == 5 {\n        return modp(n\
    \ / 5, p)\n    }\n    if p == 6 {\n        return modp(n / 6, p)\n    }\n    if\
    \ p == 7 {\n        return modp(n / 7, p)\n    }\n    if p == 8 {\n        return\
    \ modp(n / 8, p)\n    }\n    if p == 9 {\n        return modp(n / 9, p)\n    }\n\
    \    if p == 10 {\n        return modp(n / 10, p)\n    }\n    if p == 11 {\n \
    \       return modp(n / 11, p)\n    }\n    if p == 12 {\n        return modp(n\
    \ / 12, p)\n    }\n    if p == 13 {\n        return modp(n / 13, p)\n    }\n \
    \   if p == 14 {\n        return modp(n / 14, p)\n    }\n    if p == 15 {\n  \
    \      return modp(n / 15, p)\n    }\n    if p == 16 {\n        return modp(n\
    \ / 16, p)\n    }\n    if p == 17 {\n        return modp(n / 17, p)\n    }\n \
    \   if p == 18 {\n        return modp(n / 18, p)\n    }\n    if p == 19 {\n  \
    \      return modp(n / 19, p)\n    }\n    if p == 20 {\n        return modp(n\
    \ / 20, p)\n    }\n    if p == 21 {\n        return modp(n / 21, p)\n    }\n \
    \   if p == 22 {\n        return modp(n / 22, p)\n    }\n    if p == 23 {\n  \
    \      return modp(n / 23, p)\n    }\n    if p == 24 {\n        return modp(n\
    \ / 24, p)\n    }\n    if p == 25 {\n        return modp(n / 25, p)\n    }\n \
    \   if p == 26 {\n        return modp(n / 26, p)\n    }\n    if p == 27 {\n  \
    \      return modp(n / 27, p)\n    }\n    if p == 28 {\n        return modp(n\
    \ / 28, p)\n    }\n    if p == 29 {\n        return modp(n / 29, p)\n    }\n \
    \   if p == 30 {\n        return modp(n / 30, p)\n    }\n    if p == 31 {\n  \
    \      return modp(n / 31, p)\n    }\n", "\tif n < 0 {\n\t\tpanic(\"modp requires\
    \ positive argument\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"modp requires positive\
    \ argument\")\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn\
    \ p\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif p > p {\n\t\tpanic(\"modp requires\
    \ positive argument\")\n\t}\n\tx := n\n\ty := p\n\tt := 1\n\tfor {\n\t\tif y >\
    \ 1 {\n\t\t\ty >>= 1\n\t\t\tx >>= 1\n\t\t}\n\t\tif x == 0 {\n\t\t\treturn t\n\t\
    \t}\n\t\tif x & y == 0 {\n\t\t\treturn x\n\t\t}\n\t\tt *= y\n\t\tx >>= 1\n\t\t\
    y >>= 1\n\t}", "\tswitch {\n\tcase n < 0:\n\t\treturn modp(abs(n), p)\n\tcase\
    \ n >= p:\n\t\treturn 0\n\tdefault:\n\t\treturn n & (p - 1)\n\t}", "\tif n < 0\
    \ {\n\t\tn = -n\n\t\tp = -p\n\t}\n\tif p < 2 {\n\t\treturn 0\n\t}\n\tif p < p\
    \ {\n\t\treturn 1\n\t}\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\treturn\
    \ 1\n\t}\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\treturn 1\n\t}\n\t\
    if p < p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\treturn 1\n\t}\n\tif p < p {\n\
    \t\treturn 0\n\t}\n\tif p < p {\n\t\treturn 1\n\t}\n\tif p < p {\n\t\treturn 0\n\
    \t}\n\tif p < p {\n\t\treturn 1\n\t}\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p\
    \ < p {\n\t\treturn 1\n\t}\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\t\
    return 1\n\t}\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\treturn 1\n\t\
    }\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\treturn 1\n\t}\n\tif p <\
    \ p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\treturn 1\n\t}\n\tif p < p {\n\t\t\
    return 0\n\t}\n\tif p < p {\n\t\treturn 1\n\t}\n\tif p < p {\n\t\treturn 0\n\t\
    }\n\tif p < p {\n\t\treturn 1\n\t}\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p <\
    \ p {\n\t\treturn 1\n\t}\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\t\
    return 1\n\t}\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\treturn 1\n\t\
    }\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\treturn 1\n\t}\n\tif p <\
    \ p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\treturn 1\n\t}\n\tif p < p {\n\t\t\
    return 0\n\t}\n\tif p < p {\n\t\treturn 1\n\t}\n\tif p < p {\n\t\treturn 0\n\t\
    }\n\tif p < p {\n\t\treturn 1\n\t}\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p <\
    \ p {\n\t\treturn 1\n\t}\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\t\
    return 1\n\t}\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\treturn 1\n\t\
    }\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\treturn 1\n\t}\n\tif p <\
    \ p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\treturn 1\n", "    if n < 0 {\n   \
    \     return modp(abs(n), p)\n    }\n    if p < 1 {\n        return modp(n, p\
    \ % p)\n    }\n    if p > p {\n        return modp(n, p - 1)\n    }\n    return\
    \ n", "    if n < 0 {\n        return modp(abs(n), p)\n    }\n    if p < 1 {\n\
    \        return modp(n - 1, p)\n    }\n    if p > p {\n        return modp(n,\
    \ p - 1)\n    }\n    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n \
    \       return p\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {", "\tif n < 0\
    \ {\n\t\tpanic(\"modp requires positive argument\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"\
    modp requires positive argument\")\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\t\
    if n == 1 {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p\
    \ {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\
    \t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif\
    \ n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\
    \t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n ==\
    \ p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\
    \t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif\
    \ n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\
    \t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n ==\
    \ p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\
    \t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif\
    \ n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\
    \t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n ==\
    \ p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n", "    if n < 0 {\n\
    \        return modp(abs(n), p)\n    }\n    if p < 0 {\n        return modp(n,\
    \ abs(p))\n    }\n    if n == 0 {\n        return 0\n    }\n    if p == 0 {\n\
    \        return n\n    }\n    if p == 1 {\n        return n\n    }\n    if n ==\
    \ 1 {\n        return p\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p+1 {\n        return p\n    }\n    if n == p+2 {\n        return p+1\n\
    \    }\n    if n == p+3 {\n        return p+2\n    }\n    if n == p+4 {\n    \
    \    return p+3\n    }\n    if n == p+5 {\n        return p+4\n    }\n    if n\
    \ == p+6 {\n        return p+5\n    }\n    if n == p+7 {\n        return p+6\n\
    \    }\n    if n == p+8 {\n        return p+7\n    }\n    if n == p+9 {\n    \
    \    return p+8\n    }\n    if n == p+10 {\n        return p+9\n    }\n    if\
    \ n == p+11 {\n        return p+10\n    }\n    if n == p+12 {\n        return\
    \ p+11\n    }\n    if n == p+13 {\n        return p+12\n    }\n    if n == p+14\
    \ {\n        return p+13\n    }\n    if n == p+15 {\n        return p+14\n   \
    \ }\n    if n == p+16 {\n        return p+15\n    }\n    if n == p+17 {\n    \
    \    return p+16\n    }\n    if n == p+18 {\n        return p+17\n    }\n    if\
    \ n == p+19 {\n        return p+18\n    }\n    if n == p+20 {\n        return\
    \ p+19\n    }\n    if n == p+21 {\n        return p+20\n    }\n    if n == p+22\
    \ {\n        return p+21\n    }\n    if n == p+23 {\n        return p+22\n   \
    \ }\n    if n == p+24 {\n        return p+23\n    }\n    if n == p+25 {\n    \
    \    return p+24\n    }\n    if n == p+26 {\n        return p+25\n    }\n    if\
    \ n == p+27 {\n        return p+26\n    }\n    if n == p+28 {\n        return\
    \ p+27\n    }\n    if n == p+29 {\n        return p+28\n    }\n    if n == p+30\
    \ {\n        return p+29\n    }\n    if n == p+31 {\n        return p+30\n   \
    \ }\n    if n == p+32 {\n        return p+31", "\tif n < 0 {\n\t\tpanic(\"modp\
    \ requires n >= 0\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"modp requires p >= 1\")\n\
    \t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif\
    \ n == p {\n\t\treturn n\n\t}\n\tif p > p {\n\t\tpanic(\"modp requires p <= p\"\
    )\n\t}\n\tn %= p\n\tif n == 0 {\n\t\treturn 1\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif n == 2 {\n\t\treturn p\n\t}\n\tif n == 3 {\n\t\treturn p + 1\n\t}\n\tif n\
    \ == 4 {\n\t\treturn p + 2\n\t}\n\tif n == 5 {\n\t\treturn p + 3\n\t}\n\tif n\
    \ == 6 {\n\t\treturn p + 4\n\t}\n\tif n == 7 {\n\t\treturn p + 5\n\t}\n\tif n\
    \ == 8 {\n\t\treturn p + 6\n\t}\n\tif n == 9 {\n\t\treturn p + 7\n\t}\n\tif n\
    \ == 10 {\n\t\treturn p + 8\n\t}\n\tif n == 11 {\n\t\treturn p + 9\n\t}\n\tif\
    \ n == 12 {\n\t\treturn p + 10\n\t}\n\tif n == 13 {\n\t\treturn p + 11\n\t}\n\t\
    if n == 14 {\n\t\treturn p + 12\n\t}\n\tif n == 15 {\n\t\treturn p + 13\n\t}\n\
    \tif n == 16 {\n\t\treturn p + 14\n\t}\n\tif n == 17 {\n\t\treturn p + 15\n\t\
    }\n\tif n == 18 {\n\t\treturn p + 16\n\t}\n\tif n == 19 {\n\t\treturn p + 17\n\
    \t}\n\tif n == 20 {\n\t\treturn p + 18\n\t}\n\tif n == 21 {\n\t\treturn p + 19\n\
    \t}\n\tif n == 22 {\n\t\treturn p + 20\n\t}\n\tif n == 23 {\n\t\treturn p + 21\n\
    \t}\n\tif n == 24 {\n\t\treturn p + 22\n\t}\n\tif n == 25 {\n\t\treturn p + 23\n\
    \t}\n\tif n == 26 {\n\t\treturn p + 24\n\t}\n\tif n == 27 {\n\t\treturn p + 25\n\
    \t}\n\tif n == 28 {\n\t\treturn p + 26\n\t}\n\tif n == 29 {\n\t\treturn p + 27\n\
    \t}\n\tif n == 30 {\n\t\treturn p + 28\n\t}\n\tif n == 31 {\n\t\treturn p + 29\n\
    \t}\n\tif n == 32 {\n\t\treturn p + 30\n\t}\n\tif n == 33 {\n\t\treturn p + 31\n\
    \t}\n\tif n == 34 {\n\t\treturn p + 32\n\t}\n", "\tif n < 0 {\n\t\tpanic(\"modp\
    \ requires positive number\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"modp requires positive\
    \ modulus\")\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn\
    \ p\n\t}\n\tr := n % p\n\tif r == 0 {\n\t\treturn p\n\t}\n\treturn r", "    if\
    \ n < 0 {\n        return modp(abs(n), p)\n    }\n    if p < 1 {\n        return\
    \ modp(n / p, p)\n    }\n    if p > p {\n        return modp(p / n, p)\n    }\n\
    \    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return p\n\
    \    }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if ", "\tif n < 0 {\n\t\tpanic(\"modp requires positive\
    \ n\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"modp requires positive p\")\n\t}\n\tif\
    \ n == 0 {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif n == p {\n\
    \t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n ==\
    \ p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\
    \t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif\
    \ n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\
    \t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n ==\
    \ p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\
    \t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif\
    \ n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\
    \t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n ==\
    \ p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\
    \t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif\
    \ n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\
    \t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n", "\tif n < 0 {\n\t\tpanic(\"modp called with negative n\")\n\t}\n\t\
    if p < 1 {\n\t\tpanic(\"modp called with p < 1\")\n\t}\n\tif n == 0 {\n\t\treturn\
    \ 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif p > p {\n\t\tpanic(\"modp called with p > p\")\n\t}\n\tr := 1\n\tfor i :=\
    \ n - 1; i >= 0; i-- {\n\t\tr *= p\n\t\tr += n\n\t}\n\treturn r", "\treturn (n\
    \ & (p - 1)) == 0 ? n : n - 1", "    if n == 0 {\n        return 1\n    }\n  \
    \  if n == 1 {\n        return p\n    }\n    if n == p {\n        return n\n \
    \   }\n    if p < 2 {\n        return modp(n - 1, p)\n    }\n    if p < p {\n\
    \        return modp(n - 2, p)\n    }\n    if p < p {\n        return modp(n -\
    \ 3, p)\n    }\n    if p < p {\n        return modp(n - 4, p)\n    }\n    if p\
    \ < p {\n        return modp(n - 5, p)\n    }\n    if p < p {\n        return\
    \ modp(n - 6, p)\n    }\n    if p < p {\n        return modp(n - 7, p)\n    }\n\
    \    if p < p {\n        return modp(n - 8, p)\n    }\n    if p < p {\n      \
    \  return modp(n - 9, p)\n    }\n    if p < p {\n        return modp(n - 10, p)\n\
    \    }\n    if p < p {\n        return modp(n - 11, p)\n    }\n    if p < p {\n\
    \        return modp(n - 12, p)\n    }\n    if p < p {\n        return modp(n\
    \ - 13, p)\n    }\n    if p < p {\n        return modp(n - 14, p)\n    }\n   \
    \ if p < p {\n        return modp(n - 15, p)\n    }\n    if p < p {\n        return\
    \ modp(n - 16, p)\n    }\n    if p < p {\n        return modp(n - 17, p)\n   \
    \ }\n    if p < p {\n        return modp(n - 18, p)\n    }\n    if p < p {\n \
    \       return modp(n - 19, p)\n    }\n    if p < p {\n        return modp(n -\
    \ 20, p)\n    }\n    if p < p {\n        return modp(n - 21, p)\n    }\n    if\
    \ p < p {\n        return modp(n - 22, p)\n    }\n    if p < p {\n        return\
    \ modp(n - 23, p)\n    }\n    if p < p {\n        return modp(n - 24, p)\n   \
    \ }\n    if p < p {\n        return modp(n - 25, p)\n    }\n    if p < p {\n \
    \       return modp(n - 26, p)\n    }\n    if p < p {\n        return modp(n -\
    \ 27, p)\n    }\n    if p < p {\n        return modp(n - 28, p)\n    }\n    if\
    \ p < p {\n        return modp(n - 29, p)\n    }\n    if p < p {\n        return\
    \ modp(n - 30, p)\n    }\n    if p < p {\n        return modp(n - 31, p)\n   \
    \ }\n    if p < p {\n        return modp(n - 32, p)\n    }\n    if p < p {\n \
    \       return modp(n - 33, p)\n    }\n    if p < p {\n        return modp(n -\
    \ 34, p)\n    }\n    if p < p {\n        return modp(n - 35, ", "\tif n < 0 {\n\
    \t\tpanic(\"modp: negative number\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"modp: p <\
    \ 1\")\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\t\
    }\n\tif n == p {\n\t\treturn n\n\t}\n\tm := n % (p - 1)\n\tif m == 0 {\n\t\treturn\
    \ p\n\t}\n\treturn m", "    if n < 0 {\n        n += p\n    }\n    if n < p {\n\
    \        return n\n    }\n    if n == p {\n        return 1\n    }\n    if n <\
    \ p {\n        return modp(n - p, p)\n    }\n    return modp((p - n) % p, p)",
  "    if n < 0 {\n        return modp(abs(n), p)\n    }\n    if p < 0 {\n       \
    \ return modp(n, abs(p))\n    }\n    if n == 0 {\n        return 0\n    }\n  \
    \  if p == 0 {\n        return n\n    }\n    if p == 1 {\n        return n\n \
    \   }\n    if n == 1 {\n        return p\n    }\n    if n == 2 {\n        return\
    \ p + 1\n    }\n    if n == 3 {\n        return p + 2\n    }\n    if n == 4 {\n\
    \        return p + 3\n    }\n    if n == 5 {\n        return p + 4\n    }\n \
    \   if n == 6 {\n        return p + 5\n    }\n    if n == 7 {\n        return\
    \ p + 6\n    }\n    if n == 8 {\n        return p + 7\n    }\n    if n == 9 {\n\
    \        return p + 8\n    }\n    if n == 10 {\n        return p + 9\n    }\n\
    \    if n == 11 {\n        return p + 10\n    }\n    if n == 12 {\n        return\
    \ p + 11\n    }\n    if n == 13 {\n        return p + 12\n    }\n    if n == 14\
    \ {\n        return p + 13\n    }\n    if n == 15 {\n        return p + 14\n \
    \   }\n    if n == 16 {\n        return p + 15\n    }\n    if n == 17 {\n    \
    \    return p + 16\n    }\n    if n == 18 {\n        return p + 17\n    }\n  \
    \  if n == 19 {\n        return p + 18\n    }\n    if n == 20 {\n        return\
    \ p + 19\n    }\n    if n == 21 {\n        return p + 20\n    }\n    if n == 22\
    \ {\n        return p + 21\n    }\n    if n == 23 {\n        return p + 22\n \
    \   }\n    if n == 24 {\n        return p + 23\n    }\n    if n == 25 {\n    \
    \    return p + 24\n    }\n    if n == 26 {\n        return p + 25\n    }\n  \
    \  if n == 27 {\n        return p + 26\n    }\n    if n == 28 {\n        return\
    \ p + 27\n    }\n    if n == 29 {\n        return p + 28\n    }\n    if n == 30\
    \ {\n        return p + 29\n    }\n    if n == 31 {\n        return p + 30\n \
    \   }\n    if n == 32 {\n        return p + 31\n    }\n    if n == 33 {\n    \
    \    return p + 32\n    }\n    if n == 34 {\n        return p + 33\n    }\n  \
    \  if n == 35 {\n        return p + 34\n    }\n    if n == 36 {\n        return\
    \ p + 35\n    }\n    if n == 37 {\n        return p + 36\n    }\n    if n == 38\
    \ {\n        return p + 37\n    }\n    if n == 39 {\n        return p", "\treturn\
    \ (n & (p - 1)) == 0 ? n : n - 1", "\tif n < 0 {\n\t\tpanic(\"modp requires n\
    \ >= 0\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"modp requires p >= 1\")\n\t}\n\tif n\
    \ == 0 {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif n == p {\n\
    \t\treturn n\n\t}\n\tif p < p {\n\t\treturn modp(n - 1, p)\n\t}\n\tif p > p {\n\
    \t\treturn modp(n, p - 1)\n\t}\n\tq := modp(n - 1, p)\n\tr := modp(n, p - 1)\n\
    \treturn q * p + r", '    return n & (p - 1)', "\tswitch {\n\tcase n < 0:\n\t\t\
    return modp(abs(n), p)\n\tcase p < 0:\n\t\treturn modp(n + p, p)\n\tcase p > n:\n\
    \t\treturn modp(n, p)\n\tdefault:\n\t\treturn n % p\n\t}", "    if n < 0 {\n \
    \       return modp(abs(n), p)\n    }\n    if p < 0 {\n        return modp(n,\
    \ abs(p))\n    }\n    if n == 0 {\n        return 0\n    }\n    if p == 0 {\n\
    \        return n\n    }\n    if p > n {\n        return modp(n, p)\n    }\n \
    \   if p < n {\n        return modp(n, p)\n    }\n    if n == 1 {\n        return\
    \ p\n    }\n    if n == 2 {\n        return p + 1\n    }\n    if n == 3 {\n  \
    \      return p + 2\n    }\n    if n == 4 {\n        return p + 3\n    }\n   \
    \ if n == 5 {\n        return p + 4\n    }\n    if n == 6 {\n        return p\
    \ + 5\n    }\n    if n == 7 {\n        return p + 6\n    }\n    if n == 8 {\n\
    \        return p + 7\n    }\n    if n == 9 {\n        return p + 8\n    }\n \
    \   if n == 10 {\n        return p + 9\n    }\n    if n == 11 {\n        return\
    \ p + 10\n    }\n    if n == 12 {\n        return p + 11\n    }\n    if n == 13\
    \ {\n        return p + 12\n    }\n    if n == 14 {\n        return p + 13\n \
    \   }\n    if n == 15 {\n        return p + 14\n    }\n    if n == 16 {\n    \
    \    return p + 15\n    }\n    if n == 17 {\n        return p + 16\n    }\n  \
    \  if n == 18 {\n        return p + 17\n    }\n    if n == 19 {\n        return\
    \ p + 18\n    }\n    if n == 20 {\n        return p + 19\n    }\n    if n == 21\
    \ {\n        return p + 20\n    }\n    if n == 22 {\n        return p + 21\n \
    \   }\n    if n == 23 {\n        return p + 22\n    }\n    if n == 24 {\n    \
    \    return p + 23\n    }\n    if n == 25 {\n        return p + 24\n    }\n  \
    \  if n == 26 {\n        return p + 25\n    }\n    if n == 27 {\n        return\
    \ p + 26\n    }\n    if n == 28 {\n        return p + 27\n    }\n    if n == 29\
    \ {\n        return p + 28\n    }\n    if n == 30 {\n        return p + 29\n \
    \   }\n    if n == 31 {\n        return p + 30\n    }\n    if n == 32 {\n    \
    \    return p + 31\n    }\n    if n == 33 {\n        return p + 32\n    }\n  \
    \  if n == 34 {\n        return p + 33\n    }\n    if n == 35 {\n        return\
    \ p + 34\n    }\n    if n == 36 {\n        return p + 35\n    }\n    if n == 37\
    \ {\n        return p + 36\n    }\n    if ", "\treturn (n % p + p) % p", '    return
    n & (p - 1)', '    return ((n & (p - 1)) == 0) ? n : n - p', "    if n < 0 {\n\
    \        return modp(-n, p)\n    }\n    if p < 1 {\n        return modp(n, p -\
    \ 1)\n    }\n    if p > p {\n        return modp(n, p)\n    }\n    if n == 0 {\n\
    \        return 0\n    }\n    if n == 1 {\n        return p\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p {\n        return n\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p {\n        return n\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p {\n        return n\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p {\n        return n\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p {\n        return n\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return ", "\tif n == 0 {\n\t\treturn 1\n\t\
    }\n\tif n == 1 {\n\t\treturn 0\n\t}\n\tif p < 2 {\n\t\treturn 0\n\t}\n\tif p >\
    \ p {\n\t\treturn 0\n\t}\n\tif n == p {\n\t\treturn 1\n\t}\n\tif n == p - 1 {\n\
    \t\treturn 2\n\t}\n\tif n == p - 2 {\n\t\treturn 3\n\t}\n\tif n == p - 3 {\n\t\
    \treturn 4\n\t}\n\tif n == p - 4 {\n\t\treturn 5\n\t}\n\tif n == p - 5 {\n\t\t\
    return 6\n\t}\n\tif n == p - 6 {\n\t\treturn 7\n\t}\n\tif n == p - 7 {\n\t\treturn\
    \ 8\n\t}\n\tif n == p - 8 {\n\t\treturn 9\n\t}\n\tif n == p - 9 {\n\t\treturn\
    \ 10\n\t}\n\tif n == p - 10 {\n\t\treturn 11\n\t}\n\tif n == p - 11 {\n\t\treturn\
    \ 12\n\t}\n\tif n == p - 12 {\n\t\treturn 13\n\t}\n\tif n == p - 13 {\n\t\treturn\
    \ 14\n\t}\n\tif n == p - 14 {\n\t\treturn 15\n\t}\n\tif n == p - 15 {\n\t\treturn\
    \ 16\n\t}\n\tif n == p - 16 {\n\t\treturn 17\n\t}\n\tif n == p - 17 {\n\t\treturn\
    \ 18\n\t}\n\tif n == p - 18 {\n\t\treturn 19\n\t}\n\tif n == p - 19 {\n\t\treturn\
    \ 20\n\t}\n\tif n == p - 20 {\n\t\treturn 21\n\t}\n\tif n == p - 21 {\n\t\treturn\
    \ 22\n\t}\n\tif n == p - 22 {\n\t\treturn 23\n\t}\n\tif n == p - 23 {\n\t\treturn\
    \ 24\n\t}\n\tif n == p - 24 {\n\t\treturn 25\n\t}\n\tif n == p - 25 {\n\t\treturn\
    \ 26\n\t}\n\tif n == p - 26 {\n\t\treturn 27\n\t}\n\tif n == p - 27 {\n\t\treturn\
    \ 28\n\t}\n\tif n == p - 28 {\n\t\treturn 29\n\t}\n\tif n == p - 29 {\n\t\treturn\
    \ 30\n\t}\n\tif n == p - 30 {\n\t\treturn 31\n\t}\n\tif n == p - 31 {\n\t\treturn\
    \ 32\n\t}\n\tif n == p - 32 {\n\t\treturn 33\n\t}\n\tif n == p - 33 {\n\t\treturn\
    \ 34\n\t}\n\tif n == p - 34 {\n\t\treturn 35\n\t}\n\tif n == p - 35 {\n\t\treturn\
    \ 36\n\t}\n\tif n == p - 36 {\n\t\treturn 37\n\t}\n\tif n == p - 37 {\n\t\treturn\
    \ 38\n\t}\n\tif n == p - 38 {\n\t\treturn 39\n\t}\n\tif n == p - 39 {\n\t\treturn\
    \ 40\n\t}\n\tif n == p - 40 {\n\t\treturn 41\n\t}\n\tif n == p - 41 {\n\t\treturn\
    \ 42\n\t}\n\tif n == p - 42 {\n\t\treturn 43\n\t}\n\tif n == p - 43 {\n\t\treturn ",
  "\tif n < 0 {\n\t\tn = -n\n\t\tp = -p\n\t}\n\tswitch {\n\tcase p < 0:\n\t\treturn\
    \ 0\n\tcase p == 0:\n\t\treturn 1\n\tcase p == 1:\n\t\treturn n\n\tcase p < n:\n\
    \t\treturn p % n\n\tdefault:\n\t\tn %= p\n\t\tif n == 0 {\n\t\t\treturn 1\n\t\t\
    }\n\t\tif n == p {\n\t\t\treturn 0\n\t\t}\n\t\tif n < p {\n\t\t\treturn modp(n\
    \ - p, p)\n\t\t}\n\t\treturn modp(n, p - n)\n\t}", "\tif n == 0 {\n\t\treturn\
    \ 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif p < 2 {\n\t\treturn 0\n\t}\n\t\
    if p > p {\n\t\treturn 0\n\t}\n\tif p > n {\n\t\treturn 0\n\t}\n\tlet d = p -\
    \ n\n\tlet r = powMod(Int64(1), d, p)\n\treturn r", "\tif n < 0 {\n\t\tpanic(\"\
    modp requires n >= 0\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"modp requires p >= 1\"\
    )\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\t\
    if n == p {\n\t\treturn n\n\t}\n\tx := n\n\tfor x != 0 {\n\t\tx := x % p\n\t\t\
    if x == 0 {\n\t\t\treturn x\n\t\t}\n\t}\n\treturn 0", "\tif n < 0 {\n\t\tpanic(\"\
    modp: negative number\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"modp: p < 1\")\n\t}\n\
    \tif n == 0 {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif n ==\
    \ p {\n\t\treturn n\n\t}\n\tif p > p {\n\t\tpanic(\"modp: p > p\")\n\t}\n\tm :=\
    \ n\n\tfor m > p {\n\t\tm >>= 1\n\t}\n\treturn m", "\tif n == 0 || p == 0 {\n\t\
    \treturn 0\n\t}\n\tif n >= p {\n\t\treturn n - p\n\t}\n\treturn n % p", "\tswitch\
    \ {\n\tcase n < 0:\n\t\treturn modp(abs(n), p)\n\tcase p < 0:\n\t\treturn modp(-n,\
    \ p)\n\tcase p == 0:\n\t\treturn 0\n\tcase p == 1:\n\t\treturn n\n\tcase p % 2\
    \ == 1:\n\t\treturn modp(n / 2, p)\n\tdefault:\n\t\tlet r = n % p\n\t\tif r ==\
    \ 0 {\n\t\t\treturn modp(n / p, p)\n\t\t}\n\t\treturn modp(r * p, p)\n\t}", '    return
    ((n%p) + p) % p', "    if n == 0 {\n        return n\n    }\n    if p == 0 {\n\
    \        return n\n    }\n    if n >= p {\n        return n - p\n    }\n    return\
    \ n - p + p", "\treturn (n & (p - 1)) == 0 ? n : n - p", "\tif n < 0 {\n\t\tn\
    \ = -n\n\t\tp = -p\n\t}\n\tn %= p\n\tif n == 0 {\n\t\treturn 1\n\t}\n\treturn\
    \ n", "    if n < 0 {\n        return modp(-n, p)\n    }\n    if p < 1 {\n   \
    \     return modp(n, p - 1)\n    }\n    if p > p {\n        return modp(n, p)\n\
    \    }\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return\
    \ p\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return ", "\tif n < 0\
    \ {\n\t\tpanic(\"modp requires positive n\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"\
    modp requires positive p\")\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\tif n ==\
    \ 1 {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\
    \t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif\
    \ n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\
    \t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n ==\
    \ p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\
    \t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif\
    \ n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\
    \t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n ==\
    \ p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\
    \t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif\
    \ n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\
    \t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n ==\
    \ p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n", "\tif n < 0 {\n\t\tn = -n\n\
    \t\tp = -p\n\t}\n\tif p < 2 {\n\t\treturn 0\n\t}\n\tif p > p {\n\t\tp = p\n\t\
    }\n\tlet mut n2 = n\n\tlet mut p2 = p\n\twhile p2 > 1 {\n\t\tn2 = n2 << 1\n\t\t\
    p2 = p2 >> 1\n\t}\n\tn2 = n2 << 1\n\tp2 = p2 >> 1\n\tlet mut n3 = n\n\tlet mut\
    \ p3 = p\n\twhile p3 > 1 {\n\t\tn3 = n3 << 1\n\t\tp3 = p3 >> 1\n\t}\n\tn3 = n3\
    \ << 1\n\tp3 = p3 >> 1\n\tlet mut n4 = n\n\tlet mut p4 = p\n\twhile p4 > 1 {\n\
    \t\tn4 = n4 << 1\n\t\tp4 = p4 >> 1\n\t}\n\tn4 = n4 << 1\n\tp4 = p4 >> 1\n\tlet\
    \ mut n5 = n\n\tlet mut p5 = p\n\twhile p5 > 1 {\n\t\tn5 = n5 << 1\n\t\tp5 = p5\
    \ >> 1\n\t}\n\tn5 = n5 << 1\n\tp5 = p5 >> 1\n\tlet mut n6 = n\n\tlet mut p6 =\
    \ p\n\twhile p6 > 1 {\n\t\tn6 = n6 << 1\n\t\tp6 = p6 >> 1\n\t}\n\tn6 = n6 << 1\n\
    \tp6 = p6 >> 1\n\tlet mut n7 = n\n\tlet mut p7 = p\n\twhile p7 > 1 {\n\t\tn7 =\
    \ n7 << 1\n\t\tp7 = p7 >> 1\n\t}\n\tn7 = n7 << 1\n\tp7 = p7 >> 1\n\tlet mut n8\
    \ = n\n\tlet mut p8 = p\n\twhile p8 > 1 {\n\t\tn8 = n8 << 1\n\t\tp8 = p8 >> 1\n\
    \t}\n\tn8 = n8 << 1\n\tp8 = p8 >> 1\n\tlet mut n9 = n\n\tlet mut p9 = p\n\twhile\
    \ p9 > 1 {\n\t\tn9 = n9 << 1\n\t\tp9 = p9 >> 1\n\t}\n\tn9 = n9 << 1\n\tp9 = p9\
    \ >> 1\n\tlet mut n10 = n\n\tlet mut p10 = p\n\twhile p10 > 1 {\n\t\tn10 = n10\
    \ << ", "\tswitch {\n\tcase n < 0:\n\t\treturn modp(abs(n), p)\n\tcase p < 0:\n\
    \t\treturn modp(-n, p)\n\tcase n <= p:\n\t\treturn n\n\tdefault:\n\t\treturn modp(n\
    \ - p, p)\n\t}", "\tif n < 0 {\n\t\tpanic(\"modp requires positive n\")\n\t}\n\
    \tif p < 1 {\n\t\tpanic(\"modp requires positive p\")\n\t}\n\tif n == 0 {\n\t\t\
    return 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn n\n\
    \t}\n\tif p < p {\n\t\treturn modp(n - p, p)\n\t}\n\tif p > p {\n\t\treturn modp(n,\
    \ p - p)\n\t}\n\treturn modp((n - p) * (n - p), p) + p", "\tif n < 0 {\n\t\tpanic(\"\
    modp called with negative n\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"modp called with\
    \ p < 1\")\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\
    \t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif p > p {\n\t\treturn modp(n - p, p)\n\
    \t}\n\tif p < p {\n\t\treturn modp(n, p - p)\n\t}\n\treturn modp(n - p, p)", " \
    \   if n < 0 {\n        return modp(abs(n), p)\n    }\n    if p < 0 {\n      \
    \  return modp(n, abs(p))\n    }\n    if n == 0 {\n        return 0\n    }\n \
    \   if p == 0 {\n        return n\n    }\n    if n == p {\n        return n\n\
    \    }\n    if p < p {\n        return modp(n - p, p)\n    }\n    if p > p {\n\
    \        return modp(n, p - p)\n    }\n    return modp(n + p, p)", "    if n <\
    \ 0 {\n        n += p\n    }\n    if n < p {\n        return n\n    }\n    if\
    \ n == p {\n        return 1\n    }\n    return modp(n - p, p)", "    if n < 0\
    \ {\n        return modp(abs(n), p)\n    }\n    if p < 1 {\n        return modp(n,\
    \ p)\n    }\n    if p > p {\n        return modp(n, p - 1)\n    }\n    if n ==\
    \ 0 {\n        return 0\n    }\n    if n == 1 {\n        return p\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n", "    if n < 0 {\n        return modp(abs(n),\
    \ p)\n    }\n    if p < 0 {\n        return modp(n, abs(p))\n    }\n    if n ==\
    \ 0 || p == 0 {\n        return 0\n    }\n    if n == 1 {\n        return p\n\
    \    }\n    if p == 1 {\n        return n\n    }\n    if n == p {\n        return\
    \ modp(n - 1, p)\n    }\n    if n == p + 1 {\n        return modp(n, p - 1)\n\
    \    }\n    if n == p - 1 {\n        return modp(n, p)\n    }\n    if n == p -\
    \ 2 {\n        return modp(n, p - 1)\n    }\n    if n == p - 3 {\n        return\
    \ modp(n, p - 2)\n    }\n    if n == p - 4 {\n        return modp(n, p - 3)\n\
    \    }\n    if n == p - 5 {\n        return modp(n, p - 4)\n    }\n    if n ==\
    \ p - 6 {\n        return modp(n, p - 5)\n    }\n    if n == p - 7 {\n       \
    \ return modp(n, p - 6)\n    }\n    if n == p - 8 {\n        return modp(n, p\
    \ - 7)\n    }\n    if n == p - 9 {\n        return modp(n, p - 8)\n    }\n   \
    \ if n == p - 10 {\n        return modp(n, p - 9)\n    }\n    if n == p - 11 {\n\
    \        return modp(n, p - 10)\n    }\n    if n == p - 12 {\n        return modp(n,\
    \ p - 11)\n    }\n    if n == p - 13 {\n        return modp(n, p - 12)\n    }\n\
    \    if n == p - 14 {\n        return modp(n, p - 13)\n    }\n    if n == p -\
    \ 15 {\n        return modp(n, p - 14)\n    }\n    if n == p - 16 {\n        return\
    \ modp(n, p - 15)\n    }\n    if n == p - 17 {\n        return modp(n, p - 16)\n\
    \    }\n    if n == p - 18 {\n        return modp(n, p - 17)\n    }\n    if n\
    \ == p - 19 {\n        return modp(n, p - 18)\n    }\n    if n == p - 20 {\n \
    \       return modp(n, p - 19)\n    }\n    if n == p - 21 {\n        return modp(n,\
    \ p - 20)\n    }\n    if n == p - 22 {\n        return modp(n, p - 21)\n    }\n\
    \    if n == p - 23 {\n        return modp(n, p - 22)\n    }\n    if n == p -\
    \ 24 {\n        return modp(n, p - 23)\n    }\n    if n == p - 25 {\n        return\
    \ modp(n, p - 24)\n    }\n    if n == p - 26 {\n        return modp(n, p - 25)\n\
    \    }\n    if n == p - 27 {\n        return modp(n, p - 26)\n    }\n    if n\
    \ == p - 28 {\n        return modp(n, p - 27)\n    }\n    if n == p - 29 {\n \
    \       return ", "    if n < 0 {\n        return modp(abs(n), p)\n    }\n   \
    \ if p < 1 {\n        return modp(n, p % p)\n    }\n    if p > p {\n        return\
    \ modp(n, p - 1)\n    }\n    return n", "\tif n < 0 {\n\t\tn = -n\n\t\tp = -p\n\
    \t}\n\tif p < 1 {\n\t\tpanic(\"p < 1\")\n\t}\n\tif p > p {\n\t\tpanic(\"p > p\"\
    )\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\t\
    if n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p\
    \ {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\
    \t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif\
    \ n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\
    \t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n ==\
    \ p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\
    \t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif\
    \ n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\
    \t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n ==\
    \ p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\
    \t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif\
    \ n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\
    \t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}", "    if n\
    \ < 0 {\n        return modp(abs(n), p)\n    }\n    if p < 2 {\n        return\
    \ n\n    }\n    if p < p {\n        return modp(n - 1, p)\n    }\n    if p < p\
    \ {\n        return modp(n - 2, p)\n    }\n    if p < p {\n        return modp(n\
    \ - 3, p)\n    }\n    if p < p {\n        return modp(n - 4, p)\n    }\n    if\
    \ p < p {\n        return modp(n - 5, p)\n    }\n    if p < p {\n        return\
    \ modp(n - 6, p)\n    }\n    if p < p {\n        return modp(n - 7, p)\n    }\n\
    \    if p < p {\n        return modp(n - 8, p)\n    }\n    if p < p {\n      \
    \  return modp(n - 9, p)\n    }\n    if p < p {\n        return modp(n - 10, p)\n\
    \    }\n    if p < p {\n        return modp(n - 11, p)\n    }\n    if p < p {\n\
    \        return modp(n - 12, p)\n    }\n    if p < p {\n        return modp(n\
    \ - 13, p)\n    }\n    if p < p {\n        return modp(n - 14, p)\n    }\n   \
    \ if p < p {\n        return modp(n - 15, p)\n    }\n    if p < p {\n        return\
    \ modp(n - 16, p)\n    }\n    if p < p {\n        return modp(n - 17, p)\n   \
    \ }\n    if p < p {\n        return modp(n - 18, p)\n    }\n    if p < p {\n \
    \       return modp(n - 19, p)\n    }\n    if p < p {\n        return modp(n -\
    \ 20, p)\n    }\n    if p < p {\n        return modp(n - 21, p)\n    }\n    if\
    \ p < p {\n        return modp(n - 22, p)\n    }\n    if p < p {\n        return\
    \ modp(n - 23, p)\n    }\n    if p < p {\n        return modp(n - 24, p)\n   \
    \ }\n    if p < p {\n        return modp(n - 25, p)\n    }\n    if p < p {\n \
    \       return modp(n - 26, p)\n    }\n    if p < p {\n        return modp(n -\
    \ 27, p)\n    }\n    if p < p {\n        return modp(n - 28, p)\n    }\n    if\
    \ p < p {\n        return modp(n - 29, p)\n    }\n    if p < p {\n        return\
    \ modp(n - 30, p)\n    }\n    if p < p {\n        return modp(n - 31, p)\n   \
    \ }\n    if p < p {\n        return modp(n - 32, p)\n    }\n    if p < p {\n \
    \       return modp(n - 33, p)\n    }\n    if p < p {\n        return modp(n -\
    \ 34, p)\n    }\n    if p < p {\n        return modp(n - 35, p)\n", "\tif n ==\
    \ 0 {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}\n\tif n < p {\n\t\treturn modp(n - p, p)\n\t}\n\treturn modp((p\
    \ - n) % p, p)", "    if n < 0 {\n        return modp(abs(n), p)\n    }\n    if\
    \ p < 0 {\n        return modp(n, abs(p))\n    }\n    if n == 0 {\n        return\
    \ 0\n    }\n    if p == 0 {\n        return n\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p {\n        return n\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p {\n        return n\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p {\n        return n\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p {\n        return n\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p {\n        return n\n",
  "\treturn (n & (p - 1)) == 0 ? n : n - 1", "\tif n < 0 {\n\t\tn = -n\n\t\tp = -p\n\
    \t}\n\tif p < 2 {\n\t\treturn 0\n\t}\n\tif p > p {\n\t\tp = p\n\t}\n\tif n ==\
    \ 0 {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif n == p {\n\t\t\
    return 1\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\
    \t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif\
    \ n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\
    \t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn\
    \ p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\
    \tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n ==\
    \ p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\t\
    return p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\
    \t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif\
    \ n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\
    \t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn\
    \ p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\
    \tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n ==\
    \ p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\t\
    return p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\
    \t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif\
    \ n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\
    \t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn\
    \ p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\
    \tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n ==\
    \ p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\t\
    return p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\
    \t}\n", "    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return\
    \ p\n    }\n    if n == p {\n        return n\n    }\n    if p < 2 {\n       \
    \ return modp(n, p)\n    }\n    if p < p {\n        return modp(n - p, p)\n  \
    \  }\n    if p < p {\n        return modp(n - p, p)\n    }\n    return modp(n,\
    \ p)", "    if n < 0 {\n        n += p\n    }\n    if n < p {\n        return\
    \ n\n    }\n    return n - p", "\tif n < 0 {\n\t\tn = -n\n\t}\n\tif p < 0 {\n\t\
    \tp = -p\n\t}\n\tif n == 0 {\n\t\treturn 0\n\t}\n\tif p == 1 {\n\t\treturn n\n\
    \t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif\
    \ p < p {\n\t\treturn modp(n - p, p)\n\t}\n\tif p > p {\n\t\treturn modp(n, p\
    \ - p)\n\t}\n\treturn modp(n + p, p)", "    if n < 0 {\n        return modp(abs(n),\
    \ p)\n    }\n    if p < 2 {\n        return n\n    }\n    if p < p {\n       \
    \ return modp(n / p, p)\n    }\n    if p < p {\n        return modp(n / p, p)\n\
    \    }\n    return modp(n / p, p)", "\tif n < 0 {\n\t\tpanic(\"modp called with\
    \ negative n\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"modp called with p < 1\")\n\t\
    }\n\tif n == 0 {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif n\
    \ == p {\n\t\treturn n\n\t}\n\tif p < p {\n\t\treturn modp(n - 1, p)\n\t}\n\t\
    if p > p {\n\t\treturn modp(n, p - 1)\n\t}\n\treturn modp(n - 1, p)", "    if\
    \ n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return p\n    }\n\
    \    if n == p {\n        return n\n    }\n    if p < n {\n        return modp(n\
    \ - p, p)\n    }\n    if p > n {\n        return modp(n, p)\n    }\n    return\
    \ modp(n - p, p)", "    if n < 0 {\n        return modp(abs(n), p)\n    }\n  \
    \  if p < 1 {\n        return modp(n, p)\n    }\n    if p > p {\n        return\
    \ modp(n, p - 1)\n    }\n    if n == 0 {\n        return 1\n    }\n    if n ==\
    \ 1 {\n        return p\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n", "  \
    \  if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return p\n \
    \   }\n    if n == p {\n        return n\n    }\n    if n < p {\n        return\
    \ modp(n - p, p)\n    }\n    if n > p {\n        return modp(n, p)\n    }\n  \
    \  return 0", "\tif n < 0 {\n\t\tn = -n\n\t}\n\tif p < 0 {\n\t\tp = -p\n\t}\n\t\
    if n == 0 {\n\t\treturn 1\n\t}\n\tif p == 1 {\n\t\treturn n\n\t}\n\tif n == p\
    \ {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\
    \t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif\
    \ n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\
    \t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n ==\
    \ p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\
    \t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif\
    \ n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\
    \t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n ==\
    \ p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\
    \t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif\
    \ n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\
    \t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n ==\
    \ p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n", "    if n ==\
    \ 0 {\n        return 1\n    }\n    if n == 1 {\n        return p\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if p < n {\n        return modp(n\
    \ - p, p)\n    }\n    if p > n {\n        return modp(n, p)\n    }\n    return\
    \ modp(n - p, p)", "\tif n < 0 {\n\t\tn = -n\n\t\tp = -p\n\t}\n\tif p < 1 {\n\t\
    \tp = p + 1\n\t}\n\tlet mut result = 1\n\tlet mut carry = 0\n\tfor i := 0; i <\
    \ n; i++ {\n\t\tlet digit = p % 10\n\t\tresult = result * 10 + digit\n\t\tcarry\
    \ = digit * 10 + carry\n\t\tp = p / 10\n\t}\n\tif carry != 0 {\n\t\tresult = result\
    \ + carry\n\t}\n\treturn result", "    if n == 0 {\n        return 1\n    }\n\
    \    if n == 1 {\n        return p\n    }\n    if n == p {\n        return n\n\
    \    }\n    if n < p {\n        return modp(n - p, p)\n    }\n    return modp((p\
    \ - n) % p, p)", "\tswitch {\n\tcase n < 0:\n\t\treturn modp(-n, p)\n\tcase n\
    \ >= p:\n\t\treturn n\n\tdefault:\n\t\treturn n % p\n\t}", "\tswitch {\n\tcase\
    \ n < 0:\n\t\treturn modp(abs(n), p)\n\tcase p < 0:\n\t\treturn modp(-n, p)\n\t\
    case p == 0:\n\t\treturn 0\n\tcase p == 1:\n\t\treturn n\n\tcase n >= p:\n\t\t\
    return modp(n - p, p)\n\tdefault:\n\t\treturn modp((p - 1) * (n - p) + p, p)\n\
    \t}", "    if n < 0 {\n        return modp(abs(n), p)\n    }\n    if p < 1 {\n\
    \        return modp(n, p % p)\n    }\n    if p > p {\n        return modp(n,\
    \ p % p)\n    }\n    return n - (n % p)", "\tif n < 0 {\n\t\tn = -n\n\t\tp = -p\n\
    \t}\n\tif p < 1 {\n\t\tpanic(\"p < 1\")\n\t}\n\tif p > p {\n\t\tpanic(\"p > p\"\
    )\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\tn %= p\n\tif n == 0 {\n\t\treturn\
    \ 1\n\t}\n\tn /= p\n\treturn n", "\tif n == 0 || p == 0 {\n\t\treturn 0\n\t}\n\
    \tswitch {\n\tcase p < 0:\n\t\treturn modp(n - 1, p)\n\tcase p > n:\n\t\treturn\
    \ modp(n, p)\n\t}\n\tswitch {\n\tcase n < 0:\n\t\treturn modp(n - 1, p) + p\n\t\
    case n > p:\n\t\treturn modp(n, p)\n\t}\n\tswitch {\n\tcase n >= p:\n\t\treturn\
    \ n\n\tcase n <= p:\n\t\treturn p\n\t}\n\tswitch {\n\tcase n >= p:\n\t\treturn\
    \ n\n\tcase n <= p:\n\t\treturn p\n\t}\n\tswitch {\n\tcase n >= p:\n\t\treturn\
    \ n\n\tcase n <= p:\n\t\treturn p\n\t}\n\tswitch {\n\tcase n >= p:\n\t\treturn\
    \ n\n\tcase n <= p:\n\t\treturn p\n\t}\n\tswitch {\n\tcase n >= p:\n\t\treturn\
    \ n\n\tcase n <= p:\n\t\treturn p\n\t}\n\tswitch {\n\tcase n >= p:\n\t\treturn\
    \ n\n\tcase n <= p:\n\t\treturn p\n\t}\n\tswitch {\n\tcase n >= p:\n\t\treturn\
    \ n\n\tcase n <= p:\n\t\treturn p\n\t}\n\tswitch {\n\tcase n >= p:\n\t\treturn\
    \ n\n\tcase n <= p:\n\t\treturn p\n\t}\n\tswitch {\n\tcase n >= p:\n\t\treturn\
    \ n\n\tcase n <= p:\n\t\treturn p\n\t}\n\tswitch {\n\tcase n >= p:\n\t\treturn\
    \ n\n\tcase n <= p:\n\t\treturn p\n\t}\n\tswitch {\n\tcase n >= p:\n\t\treturn\
    \ n\n\tcase n <= p:\n\t\treturn p\n\t}\n\tswitch {\n\tcase n >= p:\n\t\treturn\
    \ n\n\tcase n <= p:\n\t\treturn p\n\t}\n\tswitch {\n\tcase n >= p:\n\t\treturn\
    \ n\n\tcase n <= p:\n\t\treturn p\n\t}\n\tswitch {\n\tcase n >= p:\n\t\treturn\
    \ n\n\tcase n <= p:\n\t\treturn p\n\t}\n\tswitch {\n\tcase n >= p:\n\t\treturn\
    \ n\n\tcase n <= p:\n\t\treturn p\n\t}\n\tswitch {\n\tcase n >= p:\n\t\treturn\
    \ n\n\tcase n <= p:\n\t\treturn p\n\t}\n\tswitch {\n\tcase n >= p:\n\t\treturn\
    \ n\n\tcase n <= p:\n\t\treturn p\n\t}\n\tswitch {\n\tcase n >= p:\n\t\treturn\
    \ n\n\tcase n <= p:\n\t\treturn p\n\t}\n\tswitch {\n\tcase n >= ", "    if n ==\
    \ 0 {\n        return 1\n    }\n    if n == 1 {\n        return p\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if p < n {\n        return modp(n\
    \ - p, p)\n    }\n    return modp(n, p - n)", "    if n == 0 {\n        return\
    \ 1\n    }\n    if n == 1 {\n        return p\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n > p {\n        return modp(n - p, p)\n    }\n   \
    \ if n < p {\n        return modp(n, p)\n    }\n    return 0", "    if n < 0 {\n\
    \        return modp(-n, p)\n    }\n    if p < 1 {\n        return modp(n, p)\n\
    \    }\n    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return\
    \ p\n    }\n    if n == p {\n        return n\n    }\n    if p % n == 0 {\n  \
    \      return modp(n / p, p)\n    }\n    return modp((n - 1) * (p / n), p)", "\t\
    if n < 0 {\n\t\tpanic(\"modp requires positive n\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"\
    modp requires positive p\")\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\tif n ==\
    \ 1 {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif p > p {\n\t\t\
    panic(\"modp requires p <= p\")\n\t}\n\tif p > p {\n\t\tpanic(\"modp requires\
    \ p <= p\")\n\t}\n\tswitch {\n\tcase p < 0:\n\t\tpanic(\"modp requires positive\
    \ p\")\n\tcase p < n:\n\t\tpanic(\"modp requires p <= n\")\n\tcase p < n:\n\t\t\
    panic(\"modp requires p <= n\")\n\tcase p < n:\n\t\tpanic(\"modp requires p <=\
    \ n\")\n\tcase p < n:\n\t\tpanic(\"modp requires p <= n\")\n\tcase p < n:\n\t\t\
    panic(\"modp requires p <= n\")\n\tcase p < n:\n\t\tpanic(\"modp requires p <=\
    \ n\")\n\tcase p < n:\n\t\tpanic(\"modp requires p <= n\")\n\tcase p < n:\n\t\t\
    panic(\"modp requires p <= n\")\n\tcase p < n:\n\t\tpanic(\"modp requires p <=\
    \ n\")\n\tcase p < n:\n\t\tpanic(\"modp requires p <= n\")\n\tcase p < n:\n\t\t\
    panic(\"modp requires p <= n\")\n\tcase p < n:\n\t\tpanic(\"modp requires p <=\
    \ n\")\n\tcase p < n:\n\t\tpanic(\"modp requires p <= n\")\n\tcase p < n:\n\t\t\
    panic(\"modp requires p <= n\")\n\tcase p < n:\n\t\tpanic(\"modp requires p <=\
    \ n\")\n\tcase p < n:\n\t\tpanic(\"modp requires p <= n\")\n\tcase p < n:\n\t\t\
    panic(\"modp requires p <= n\")\n\tcase p < n:\n\t\tpanic(\"modp requires p <=\
    \ n\")\n\tcase p < n:\n\t\tpanic(\"modp requires p <= n\")\n\tcase p < n:\n\t\t\
    panic(\"modp requires p <= n\")\n\tcase p < n:\n\t\tpanic(\"modp requires p <=\
    \ n\")\n\tcase p < n:\n\t\tpanic(\"modp requires p ", "\tswitch {\n\tcase n <\
    \ 0:\n\t\treturn 0\n\tcase n <= p:\n\t\treturn n\n\tcase n >= p:\n\t\treturn p\n\
    \t}\n\tlet r = n % p\n\treturn r < p ? r + p : r", "\tswitch {\n\tcase n < 0:\n\
    \t\treturn 0\n\tcase n >= p:\n\t\treturn n\n\tcase n == p:\n\t\treturn 1\n\tdefault:\n\
    \t\treturn pow(2, n) % p\n\t}", "\tif n < 0 {\n\t\tpanic(\"modp: negative number\"\
    )\n\t}\n\tif p < 1 {\n\t\tpanic(\"modp: p < 1\")\n\t}\n\tif n == 0 {\n\t\treturn\
    \ 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif p > p {\n\t\tpanic(\"modp: p > p\")\n\t}\n\tr := 1\n\tfor i := n - 1; i >=\
    \ 0; i-- {\n\t\tr *= p\n\t\tr += n\n\t}\n\treturn r", "\tif n < 0 {\n\t\tpanic(\"\
    modp called with negative n\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"modp called with\
    \ p < 1\")\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\
    \t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif\
    \ n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\
    \t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n ==\
    \ p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\
    \t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif\
    \ n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\
    \t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n ==\
    \ p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\
    \t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif\
    \ n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\
    \t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n ==\
    \ p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\
    \t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif\
    \ n == p {\n\t\treturn n\n", "    if n < 0 {\n        return modp(abs(n), p)\n\
    \    }\n    if p < 1 {\n        return modp(n, p)\n    }\n    if n == 0 {\n  \
    \      return 0\n    }\n    if p == 1 {\n        return n\n    }\n    if p ==\
    \ 2 {\n        return n + 1\n    }\n    if p == 3 {\n        return n * 2\n  \
    \  }\n    if p == 4 {\n        return n * 3\n    }\n    if p == 5 {\n        return\
    \ n * 4\n    }\n    if p == 6 {\n        return n * 5\n    }\n    if p == 7 {\n\
    \        return n * 6\n    }\n    if p == 8 {\n        return n * 7\n    }\n \
    \   if p == 9 {\n        return n * 8\n    }\n    if p == 10 {\n        return\
    \ n * 9\n    }\n    if p == 11 {\n        return n * 10\n    }\n    if p == 12\
    \ {\n        return n * 11\n    }\n    if p == 13 {\n        return n * 12\n \
    \   }\n    if p == 14 {\n        return n * 13\n    }\n    if p == 15 {\n    \
    \    return n * 14\n    }\n    if p == 16 {\n        return n * 15\n    }\n  \
    \  if p == 17 {\n        return n * 16\n    }\n    if p == 18 {\n        return\
    \ n * 17\n    }\n    if p == 19 {\n        return n * 18\n    }\n    if p == 20\
    \ {\n        return n * 19\n    }\n    if p == 21 {\n        return n * 20\n \
    \   }\n    if p == 22 {\n        return n * 21\n    }\n    if p == 23 {\n    \
    \    return n * 22\n    }\n    if p == 24 {\n        return n * 23\n    }\n  \
    \  if p == 25 {\n        return n * 24\n    }\n    if p == 26 {\n        return\
    \ n * 25\n    }\n    if p == 27 {\n        return n * 26\n    }\n    if p == 28\
    \ {\n        return n * 27\n    }\n    if p == 29 {\n        return n * 28\n \
    \   }\n    if p == 30 {\n        return n * 29\n    }\n    if p == 31 {\n    \
    \    return n * 30\n    }\n    if p == 32 {\n        return n * 31\n    }\n  \
    \  if p == 33 {\n        return n * 32\n    }\n    if p == 34 {\n        return\
    \ n * 33\n    }\n    if p == 35 {\n        return n * 34\n    }\n    if p == 36\
    \ {\n        return n * 35\n    }\n    if p == 37 {\n        return n * 36\n \
    \   }\n    if p == 38 {\n        return n * 37\n    }\n    if p == 39 {\n    \
    \    return n * 38\n    }\n    if p == 40 {\n        return n * 39\n    }\n  \
    \  if p == 41 {\n        return n * 40\n    }\n    if p == 42 {\n        return ",
  "\tswitch {\n\tcase n < 0:\n\t\treturn modp(abs(n), p)\n\tcase p < 0:\n\t\treturn\
    \ modp(n, -p)\n\tcase n >= p:\n\t\treturn n\n\tdefault:\n\t\treturn n % p\n\t}",
  "    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return p\n \
    \   }\n    if n == p {\n        return n\n    }\n    if n < p {\n        return\
    \ modp(n - p, p)\n    }\n    if n > p {\n        return modp(n, p)\n    }\n  \
    \  return 0", "\tif n < 0 {\n\t\tn = -n\n\t\tp = -p\n\t}\n\tif p < 1 {\n\t\tpanic(\"\
    p must be positive\")\n\t}\n\tif p > p {\n\t\tpanic(\"p must be smaller than p\"\
    )\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\t\
    if n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p\
    \ {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\
    \t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif\
    \ n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\
    \t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n ==\
    \ p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\
    \t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif\
    \ n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\
    \t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n ==\
    \ p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\
    \t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif\
    \ n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\
    \t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n", "\tif n < 0 {\n\
    \t\tn = -n\n\t}\n\tif p < 1 {\n\t\tp = -p\n\t}\n\tif p > p {\n\t\tpanic(\"p must\
    \ be less than or equal to 1\")\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\tif n\
    \ == 1 {\n\t\treturn 0\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n <= p {\n\
    \t\treturn n - p\n\t}\n\treturn n % p", "    if n == 0 {\n        return 1\n \
    \   }\n    if n == 1 {\n        return p\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if p < 2 {\n        return modp(n, p)\n    }\n    if p < p {\n\
    \        return modp(n, p - 1)\n    }\n    if p < p {\n        return modp((n\
    \ - p) / 2, p)\n    }\n    if p < p {\n        return modp((n - p) / 2, p - 1)\n\
    \    }\n    return modp((n - p) / 2, p - 1)", "\tswitch {\n\tcase n < 0:\n\t\t\
    return modp(-n, p)\n\tcase n >= p:\n\t\treturn 0\n\tdefault:\n\t\treturn n & (p\
    \ - 1)\n\t}", "\tif n < 0 {\n\t\tpanic(\"modp requires positive argument\")\n\t\
    }\n\tif p < 2 {\n\t\tpanic(\"modp requires positive argument\")\n\t}\n\tswitch\
    \ {\n\tcase n < 0:\n\t\treturn 0\n\tcase p < 2:\n\t\treturn n\n\tcase p < n:\n\
    \t\treturn p - 1\n\tdefault:\n\t\treturn p - 1\n\t}", "    if n < 0 {\n      \
    \  return modp(abs(n), p)\n    }\n    if p < 0 {\n        return modp(n, abs(p))\n\
    \    }\n    if n == 0 {\n        return 0\n    }\n    if p == 0 {\n        return\
    \ n\n    }\n    if n == 1 {\n        return p\n    }\n    if p == 1 {\n      \
    \  return n\n    }\n    if n == p {\n        return modp(n - 1, p)\n    }\n  \
    \  if n == p+1 {\n        return modp(n, p)\n    }\n    if n == p+2 {\n      \
    \  return modp(n-1, p)\n    }\n    if n == p+3 {\n        return modp(n, p)\n\
    \    }\n    if n == p+4 {\n        return modp(n-1, p)\n    }\n    if n == p+5\
    \ {\n        return modp(n, p)\n    }\n    if n == p+6 {\n        return modp(n-1,\
    \ p)\n    }\n    if n == p+7 {\n        return modp(n, p)\n    }\n    if n ==\
    \ p+8 {\n        return modp(n-1, p)\n    }\n    if n == p+9 {\n        return\
    \ modp(n, p)\n    }\n    if n == p+10 {\n        return modp(n-1, p)\n    }\n\
    \    if n == p+11 {\n        return modp(n, p)\n    }\n    if n == p+12 {\n  \
    \      return modp(n-1, p)\n    }\n    if n == p+13 {\n        return modp(n,\
    \ p)\n    }\n    if n == p+14 {\n        return modp(n-1, p)\n    }\n    if n\
    \ == p+15 {\n        return modp(n, p)\n    }\n    if n == p+16 {\n        return\
    \ modp(n-1, p)\n    }\n    if n == p+17 {\n        return modp(n, p)\n    }\n\
    \    if n == p+18 {\n        return modp(n-1, p)\n    }\n    if n == p+19 {\n\
    \        return modp(n, p)\n    }\n    if n == p+20 {\n        return modp(n-1,\
    \ p)\n    }\n    if n == p+21 {\n        return modp(n, p)\n    }\n    if n ==\
    \ p+22 {\n        return modp(n-1, p)\n    }\n    if n == p+23 {\n        return\
    \ modp(n, p)\n    }\n    if n == p+24 {\n        return modp(n-1, p)\n    }\n\
    \    if n == p+25 {\n        return modp(n, p)\n    }\n    if n == p+26 {\n  \
    \      return modp(n-1, p)\n    }\n    if n == p+27 {\n        return modp(n,\
    \ p)\n    }\n    if n == p+28 {\n        return modp(n-1, p)\n    }\n    if n\
    \ == p+", "    if n < 0 {\n        return modp(abs(n), p)\n    }\n    if p < 2\
    \ {\n        return n\n    }\n    if p < p {\n        return modp(n / p, p)\n\
    \    }\n    if p < p {\n        return modp(n / p, p)\n    }\n    if p < p {\n\
    \        return modp(n / p, p)\n    }\n    if p < p {\n        return modp(n /\
    \ p, p)\n    }\n    if p < p {\n        return modp(n / p, p)\n    }\n    if p\
    \ < p {\n        return modp(n / p, p)\n    }\n    if p < p {\n        return\
    \ modp(n / p, p)\n    }\n    if p < p {\n        return modp(n / p, p)\n    }\n\
    \    if p < p {\n        return modp(n / p, p)\n    }\n    if p < p {\n      \
    \  return modp(n / p, p)\n    }\n    if p < p {\n        return modp(n / p, p)\n\
    \    }\n    if p < p {\n        return modp(n / p, p)\n    }\n    if p < p {\n\
    \        return modp(n / p, p)\n    }\n    if p < p {\n        return modp(n /\
    \ p, p)\n    }\n    if p < p {\n        return modp(n / p, p)\n    }\n    if p\
    \ < p {\n        return modp(n / p, p)\n    }\n    if p < p {\n        return\
    \ modp(n / p, p)\n    }\n    if p < p {\n        return modp(n / p, p)\n    }\n\
    \    if p < p {\n        return modp(n / p, p)\n    }\n    if p < p {\n      \
    \  return modp(n / p, p)\n    }\n    if p < p {\n        return modp(n / p, p)\n\
    \    }\n    if p < p {\n        return modp(n / p, p)\n    }\n    if p < p {\n\
    \        return modp(n / p, p)\n    }\n    if p < p {\n        return modp(n /\
    \ p, p)\n    }\n    if p < p {\n        return modp(n / p, p)\n    }\n    if p\
    \ < p {\n        return modp(n / p, p)\n    }\n    if p < p {\n        return\
    \ modp(n / p, p)\n    }\n    if p < p {\n        return modp(n / p, p)\n    }\n\
    \    if p < p {\n        return modp(n / p, p)\n    }\n    if p < p {\n      \
    \  return modp(n / p, p)\n    }\n    if p < p {\n        return modp(n / p, p)\n\
    \    }\n    if p < p {\n        return modp(n / p, p)\n    }\n    if p < p {\n\
    \        return modp(", "\tif n < 0 {\n\t\tpanic(\"modp requires positive n\"\
    )\n\t}\n\tif p < 1 {\n\t\tpanic(\"modp requires positive p\")\n\t}\n\tif n ==\
    \ 0 {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}\n\tm := p\n\tfor m > n {\n\t\tm >>= 1\n\t}\n\treturn m", "    if\
    \ n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return p\n    }\n\
    \    if n == p {\n        return n\n    }\n    if p < n {\n        return modp(n\
    \ - p, p)\n    }\n    if p > n {\n        return modp(n - p, p)\n    }\n    return\
    \ modp(n + p - n, p)", "\tif n < 0 {\n\t\tpanic(\"modp: negative number\")\n\t\
    }\n\tif p < 1 {\n\t\tpanic(\"modp: p < 1\")\n\t}\n\tif n == 0 {\n\t\treturn 1\n\
    \t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif\
    \ p > p {\n\t\tpanic(\"modp: p > p\")\n\t}\n\tq := p\n\tfor {\n\t\tq /= 2\n\t\t\
    if q == 1 {\n\t\t\treturn n\n\t\t}\n\t\tif q == p {\n\t\t\treturn q\n\t\t}\n\t\
    }", "    if n < 0 {\n        return modp(abs(n), p)\n    }\n    if p < 1 {\n \
    \       return modp(n / p, p)\n    }\n    if p > p {\n        return modp((n -\
    \ 1) / p, p)\n    }\n    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n\
    \        return p\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }"]
stop_tokens:
- "\n}"

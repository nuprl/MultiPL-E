name: HumanEval_51_remove_vowels
language: swift
prompt: "\n/// remove_vowels is a function that takes string and returns string without\
  \ vowels.\n/// >>> remove_vowels(text: \"\")\n/// \"\"\n/// >>> remove_vowels(text:\
  \ \"abcdef\")\n/// \"bcdf\"\n/// >>> remove_vowels(text: \"aaaaa\")\n/// \"\"\n\
  /// >>> remove_vowels(text: \"aaBAA\")\n/// \"B\"\n/// >>> remove_vowels(text: \"\
  zbcd\")\n/// \"zbcd\"\nfunc remove_vowels(text: String) -> String {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
  \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
  ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
  \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
  \ \"ybcd\") == \"ybcd\")"
completions: ["    return text.filter {\n        !contains($0, \"aeiouAEIOU\")\n \
    \   }", '    return removeVowels(text, false)', "    return text.filter {\n  \
    \      !contains(vowels, $0)\n    }", "    return text.filter {\n        !contains(vowels,\
    \ $0)\n    }", "    return text.filter {\n        !contains(vowels, $0)\n    }",
  "    return text.filter {\n        !contains($0, \"aeiouAEIOU\")\n    }", "    return\
    \ text.filter {\n        !contains($0, \"aeiouAEIOU\")\n    }", "    let vowels\
    \ = \"aeiouAEIOU\"\n    var result = \"\"\n    for char in text {\n        if\
    \ !vowels.contains(char) {\n            result += char\n        }\n    }\n   \
    \ return result", "    let vowels = \"aeiouAEIOU\"\n    var result = \"\"\n  \
    \  for char in text {\n        if !vowels.contains(char) {\n            result\
    \ += char\n        }\n    }\n    return result", "    \n    var result = \"\"\n\
    \    \n    for char in text {\n        if char == \"a\" || char == \"e\" || char\
    \ == \"i\" || char == \"o\" || char == \"u\" {\n            continue\n       \
    \ }\n        result += char\n    }\n    \n    return result", "    return text.filter\
    \ {\n        !contains($0, \"aeiouAEIOU\")\n    }", "    \n    let vowels = \"\
    aeiouAEIOU\"\n    \n    var result = \"\"\n    \n    for char in text {\n    \
    \    if !vowels.contains(char) {\n            result += char\n        }\n    }\n\
    \    \n    return result", "    return text.filter {\n        !contains($0, \"\
    aeiouAEIOU\")\n    }", '    return removeVowels(text, true)', "    return text.filter\
    \ {\n        !contains($0.unicodeScalars.filter({ $0.isInverted }).map({ $0.value\
    \ }), 0xAC00..0xD7A3)\n    }", "    return text.filter {\n        !contains(vowels,\
    \ $0)\n    }", "    return text.filter {\n        !contains($0, \"aeiouAEIOU\"\
    )\n    }", "    let vowels = \"aeiouAEIOU\"\n    var result = \"\"\n    for char\
    \ in text {\n        if !vowels.contains(char) {\n            result += char\n\
    \        }\n    }\n    return result", "    return text.filter {\n        !contains($0,\
    \ \"aeiouAEIOU\")\n    }", "    return text.filter {\n        !contains(vowels,\
    \ $0)\n    }"]
stop_tokens:
- "\n}"

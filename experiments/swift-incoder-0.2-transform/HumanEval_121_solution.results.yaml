language: swift
name: HumanEval_121_solution
results:
- exit_code: 1
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    return lst.filter { $0 % 2 == 1 }.sum()\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3,\
    \ 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpq3or064b.swift:11:39: error: value of type '[Int]' has no member\
    \ 'sum'\n    return lst.filter { $0 % 2 == 1 }.sum()\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~\
    \ ^~~\n"
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for i in lst {\n        if i % 2 == 0 {\n            sum\
    \ += i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpx8wt53l1/tmpx8wt53l1.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0786820c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0786517b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0786517988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b07865167b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpx8wt53l1                        0x000055c023c5450a <unavailable> + 5386

    5    libc.so.6                          0x00002b0786a0c460 __libc_start_main +
    245

    6    tmpx8wt53l1                        0x000055c023c54169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for index in 0..<lst.count {\n        if index % 2 == 0\
    \ {\n            sum += lst[index]\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp_tvzn5hm/tmp_tvzn5hm.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6b3280dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6b32504b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6b32504988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6b325037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_tvzn5hm                        0x000055b5bb03c6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b6b329f9460 __libc_start_main +
    245

    6    tmp_tvzn5hm                        0x000055b5bb03c1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for i in lst {\n        if i % 2 == 0 {\n            sum\
    \ += i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpx8wt53l1/tmpx8wt53l1.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0786820c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0786517b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0786517988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b07865167b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpx8wt53l1                        0x000055c023c5450a <unavailable> + 5386

    5    libc.so.6                          0x00002b0786a0c460 __libc_start_main +
    245

    6    tmpx8wt53l1                        0x000055c023c54169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for i in lst {\n        if i % 2 == 0 {\n            sum\
    \ += i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpx8wt53l1/tmpx8wt53l1.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0786820c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0786517b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0786517988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b07865167b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpx8wt53l1                        0x000055c023c5450a <unavailable> + 5386

    5    libc.so.6                          0x00002b0786a0c460 __libc_start_main +
    245

    6    tmpx8wt53l1                        0x000055c023c54169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for i in lst {\n        if i % 2 == 0 {\n            sum\
    \ += i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpx8wt53l1/tmpx8wt53l1.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0786820c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0786517b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0786517988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b07865167b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpx8wt53l1                        0x000055c023c5450a <unavailable> + 5386

    5    libc.so.6                          0x00002b0786a0c460 __libc_start_main +
    245

    6    tmpx8wt53l1                        0x000055c023c54169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 1 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp7m1noo9x/tmp7m1noo9x.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002adf357b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002adf354aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002adf354ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002adf354ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7m1noo9x                        0x00005586ad33650a <unavailable> + 5386

    5    libc.so.6                          0x00002adf359a3460 __libc_start_main +
    245

    6    tmp7m1noo9x                        0x00005586ad336169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for i in lst {\n        if i % 2 == 0 {\n            sum\
    \ += i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpx8wt53l1/tmpx8wt53l1.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0786820c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0786517b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0786517988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b07865167b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpx8wt53l1                        0x000055c023c5450a <unavailable> + 5386

    5    libc.so.6                          0x00002b0786a0c460 __libc_start_main +
    245

    6    tmpx8wt53l1                        0x000055c023c54169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 1 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp7m1noo9x/tmp7m1noo9x.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002adf357b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002adf354aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002adf354ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002adf354ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7m1noo9x                        0x00005586ad33650a <unavailable> + 5386

    5    libc.so.6                          0x00002adf359a3460 __libc_start_main +
    245

    6    tmp7m1noo9x                        0x00005586ad336169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: 1
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    return lst.filter { $0 % 2 == 1 }.sum()\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3,\
    \ 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpq3or064b.swift:11:39: error: value of type '[Int]' has no member\
    \ 'sum'\n    return lst.filter { $0 % 2 == 1 }.sum()\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~\
    \ ^~~\n"
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for idx in lst.indices {\n        if idx % 2 == 0 {\n  \
    \          sum += lst[idx]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp3mk3u6nw/tmp3mk3u6nw.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b32c8df2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b32c8ae9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b32c8ae9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b32c8ae87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3mk3u6nw                        0x0000561b4bf9d71c <unavailable> + 5916

    5    libc.so.6                          0x00002b32c8fde460 __libc_start_main +
    245

    6    tmp3mk3u6nw                        0x0000561b4bf9d1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for element in lst {\n        if element % 2 == 0 {\n  \
    \          sum += element\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpv76wwol0/tmpv76wwol0.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b472702ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4726d21b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4726d21988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4726d207b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv76wwol0                        0x000056277cd8f50a <unavailable> + 5386

    5    libc.so.6                          0x00002b4727216460 __libc_start_main +
    245

    6    tmpv76wwol0                        0x000056277cd8f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for index in 0..<lst.count {\n        if index % 2 == 0\
    \ {\n            sum += lst[index]\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp_tvzn5hm/tmp_tvzn5hm.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6b3280dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6b32504b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6b32504988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6b325037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_tvzn5hm                        0x000055b5bb03c6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b6b329f9460 __libc_start_main +
    245

    6    tmp_tvzn5hm                        0x000055b5bb03c1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for element in lst {\n        if element % 2 == 0 {\n  \
    \          sum += element\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpv76wwol0/tmpv76wwol0.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b472702ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4726d21b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4726d21988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4726d207b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv76wwol0                        0x000056277cd8f50a <unavailable> + 5386

    5    libc.so.6                          0x00002b4727216460 __libc_start_main +
    245

    6    tmpv76wwol0                        0x000056277cd8f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for i in lst {\n        if i % 2 == 0 {\n            sum\
    \ += i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpx8wt53l1/tmpx8wt53l1.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0786820c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0786517b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0786517988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b07865167b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpx8wt53l1                        0x000055c023c5450a <unavailable> + 5386

    5    libc.so.6                          0x00002b0786a0c460 __libc_start_main +
    245

    6    tmpx8wt53l1                        0x000055c023c54169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: 1
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    return lst.filter { $0 % 2 == 1 }.sum()\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3,\
    \ 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpq3or064b.swift:11:39: error: value of type '[Int]' has no member\
    \ 'sum'\n    return lst.filter { $0 % 2 == 1 }.sum()\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~\
    \ ^~~\n"
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: 1
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    return lst.filter { $0 % 2 == 1 }.sum()\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3,\
    \ 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpq3or064b.swift:11:39: error: value of type '[Int]' has no member\
    \ 'sum'\n    return lst.filter { $0 % 2 == 1 }.sum()\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~\
    \ ^~~\n"
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: 1
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    return lst.filter{ $0 % 2 == 1 }.sum()\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3,\
    \ 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpc0slzhky.swift:11:38: error: value of type '[Int]' has no member\
    \ 'sum'\n    return lst.filter{ $0 % 2 == 1 }.sum()\n           ~~~~~~~~~~~~~~~~~~~~~~~~~\
    \ ^~~\n"
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for element in lst {\n        if element % 2 == 0 {\n  \
    \          sum += element\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpv76wwol0/tmpv76wwol0.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b472702ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4726d21b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4726d21988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4726d207b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv76wwol0                        0x000056277cd8f50a <unavailable> + 5386

    5    libc.so.6                          0x00002b4727216460 __libc_start_main +
    245

    6    tmpv76wwol0                        0x000056277cd8f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: 1
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    return lst.filter { $0 % 2 == 1 }.sum()\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3,\
    \ 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpq3or064b.swift:11:39: error: value of type '[Int]' has no member\
    \ 'sum'\n    return lst.filter { $0 % 2 == 1 }.sum()\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~\
    \ ^~~\n"
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for index in 0..<lst.count {\n        if index % 2 == 0\
    \ {\n            sum += lst[index]\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp_tvzn5hm/tmp_tvzn5hm.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6b3280dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6b32504b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6b32504988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6b325037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_tvzn5hm                        0x000055b5bb03c6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b6b329f9460 __libc_start_main +
    245

    6    tmp_tvzn5hm                        0x000055b5bb03c1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for index in 0..<lst.count {\n        if index % 2 == 0\
    \ {\n            sum += lst[index]\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp_tvzn5hm/tmp_tvzn5hm.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6b3280dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6b32504b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6b32504988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6b325037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_tvzn5hm                        0x000055b5bb03c6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b6b329f9460 __libc_start_main +
    245

    6    tmp_tvzn5hm                        0x000055b5bb03c1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 1 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp7m1noo9x/tmp7m1noo9x.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002adf357b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002adf354aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002adf354ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002adf354ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7m1noo9x                        0x00005586ad33650a <unavailable> + 5386

    5    libc.so.6                          0x00002adf359a3460 __libc_start_main +
    245

    6    tmp7m1noo9x                        0x00005586ad336169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for idx in lst {\n        if idx % 2 == 0 {\n          \
    \  sum += idx\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3,\
    \ 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpnqrknbk_/tmpnqrknbk_.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae4934f4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae4931ebb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae4931eb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae4931ea7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnqrknbk_                        0x0000555d3369d50a <unavailable> + 5386

    5    libc.so.6                          0x00002ae4936e0460 __libc_start_main +
    245

    6    tmpnqrknbk_                        0x0000555d3369d169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: 1
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    return lst.filter { $0 % 2 == 1 }.sum()\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3,\
    \ 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpq3or064b.swift:11:39: error: value of type '[Int]' has no member\
    \ 'sum'\n    return lst.filter { $0 % 2 == 1 }.sum()\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~\
    \ ^~~\n"
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for i in lst {\n        if i % 2 == 0 {\n            sum\
    \ += i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpx8wt53l1/tmpx8wt53l1.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0786820c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0786517b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0786517988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b07865167b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpx8wt53l1                        0x000055c023c5450a <unavailable> + 5386

    5    libc.so.6                          0x00002b0786a0c460 __libc_start_main +
    245

    6    tmpx8wt53l1                        0x000055c023c54169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for i in lst {\n        if i % 2 == 0 {\n            sum\
    \ += i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpx8wt53l1/tmpx8wt53l1.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0786820c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0786517b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0786517988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b07865167b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpx8wt53l1                        0x000055c023c5450a <unavailable> + 5386

    5    libc.so.6                          0x00002b0786a0c460 __libc_start_main +
    245

    6    tmpx8wt53l1                        0x000055c023c54169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for index in 0..<lst.count {\n        if index % 2 == 0\
    \ {\n            sum += lst[index]\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp_tvzn5hm/tmp_tvzn5hm.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6b3280dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6b32504b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6b32504988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6b325037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_tvzn5hm                        0x000055b5bb03c6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b6b329f9460 __libc_start_main +
    245

    6    tmp_tvzn5hm                        0x000055b5bb03c1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for i in lst {\n        if i % 2 == 0 {\n            sum\
    \ += i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpx8wt53l1/tmpx8wt53l1.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0786820c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0786517b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0786517988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b07865167b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpx8wt53l1                        0x000055c023c5450a <unavailable> + 5386

    5    libc.so.6                          0x00002b0786a0c460 __libc_start_main +
    245

    6    tmpx8wt53l1                        0x000055c023c54169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: 1
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    return lst.filter{ $0 % 2 == 1 }.sum()\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3,\
    \ 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpc0slzhky.swift:11:38: error: value of type '[Int]' has no member\
    \ 'sum'\n    return lst.filter{ $0 % 2 == 1 }.sum()\n           ~~~~~~~~~~~~~~~~~~~~~~~~~\
    \ ^~~\n"
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for element in lst {\n        if element % 2 == 0 {\n  \
    \          sum += element\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpv76wwol0/tmpv76wwol0.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b472702ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4726d21b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4726d21988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4726d207b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv76wwol0                        0x000056277cd8f50a <unavailable> + 5386

    5    libc.so.6                          0x00002b4727216460 __libc_start_main +
    245

    6    tmpv76wwol0                        0x000056277cd8f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 1 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp7m1noo9x/tmp7m1noo9x.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002adf357b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002adf354aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002adf354ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002adf354ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7m1noo9x                        0x00005586ad33650a <unavailable> + 5386

    5    libc.so.6                          0x00002adf359a3460 __libc_start_main +
    245

    6    tmp7m1noo9x                        0x00005586ad336169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for i in lst {\n        if i % 2 == 0 {\n            sum\
    \ += i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpx8wt53l1/tmpx8wt53l1.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0786820c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0786517b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0786517988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b07865167b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpx8wt53l1                        0x000055c023c5450a <unavailable> + 5386

    5    libc.so.6                          0x00002b0786a0c460 __libc_start_main +
    245

    6    tmpx8wt53l1                        0x000055c023c54169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for index in 0..<lst.count {\n        if index % 2 == 0\
    \ {\n            sum += lst[index]\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp_tvzn5hm/tmp_tvzn5hm.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6b3280dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6b32504b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6b32504988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6b325037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_tvzn5hm                        0x000055b5bb03c6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b6b329f9460 __libc_start_main +
    245

    6    tmp_tvzn5hm                        0x000055b5bb03c1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for index in 0..<lst.count {\n        if index % 2 == 0\
    \ {\n            sum += lst[index]\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp_tvzn5hm/tmp_tvzn5hm.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6b3280dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6b32504b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6b32504988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6b325037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_tvzn5hm                        0x000055b5bb03c6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b6b329f9460 __libc_start_main +
    245

    6    tmp_tvzn5hm                        0x000055b5bb03c1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for index in 0..<lst.count {\n        if index % 2 == 0\
    \ {\n            sum += lst[index]\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp_tvzn5hm/tmp_tvzn5hm.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6b3280dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6b32504b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6b32504988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6b325037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_tvzn5hm                        0x000055b5bb03c6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b6b329f9460 __libc_start_main +
    245

    6    tmp_tvzn5hm                        0x000055b5bb03c1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for element in lst {\n        if element % 2 == 0 {\n  \
    \          sum += element\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpv76wwol0/tmpv76wwol0.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b472702ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4726d21b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4726d21988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4726d207b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv76wwol0                        0x000056277cd8f50a <unavailable> + 5386

    5    libc.so.6                          0x00002b4727216460 __libc_start_main +
    245

    6    tmpv76wwol0                        0x000056277cd8f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: 1
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    return lst.filter { $0 % 2 == 1 }.sum()\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3,\
    \ 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpq3or064b.swift:11:39: error: value of type '[Int]' has no member\
    \ 'sum'\n    return lst.filter { $0 % 2 == 1 }.sum()\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~\
    \ ^~~\n"
  stdout: ''
  timestamp: 1660013526
- exit_code: 1
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    return lst.filter{ $0 % 2 == 1 }.sum()\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3,\
    \ 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpc0slzhky.swift:11:38: error: value of type '[Int]' has no member\
    \ 'sum'\n    return lst.filter{ $0 % 2 == 1 }.sum()\n           ~~~~~~~~~~~~~~~~~~~~~~~~~\
    \ ^~~\n"
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for index in 0..<lst.count {\n        if index % 2 == 0\
    \ {\n            sum += lst[index]\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp_tvzn5hm/tmp_tvzn5hm.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6b3280dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6b32504b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6b32504988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6b325037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_tvzn5hm                        0x000055b5bb03c6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b6b329f9460 __libc_start_main +
    245

    6    tmp_tvzn5hm                        0x000055b5bb03c1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 1 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp7m1noo9x/tmp7m1noo9x.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002adf357b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002adf354aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002adf354ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002adf354ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7m1noo9x                        0x00005586ad33650a <unavailable> + 5386

    5    libc.so.6                          0x00002adf359a3460 __libc_start_main +
    245

    6    tmp7m1noo9x                        0x00005586ad336169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for index in 0..<lst.count {\n        if index % 2 == 0\
    \ {\n            sum += lst[index]\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp_tvzn5hm/tmp_tvzn5hm.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6b3280dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6b32504b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6b32504988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6b325037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_tvzn5hm                        0x000055b5bb03c6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b6b329f9460 __libc_start_main +
    245

    6    tmp_tvzn5hm                        0x000055b5bb03c1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: 1
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    return lst.filter { $0 % 2 == 1 }.sum()\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3,\
    \ 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpq3or064b.swift:11:39: error: value of type '[Int]' has no member\
    \ 'sum'\n    return lst.filter { $0 % 2 == 1 }.sum()\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~\
    \ ^~~\n"
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for i in lst {\n        if i % 2 == 0 {\n            sum\
    \ += i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpx8wt53l1/tmpx8wt53l1.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0786820c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0786517b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0786517988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b07865167b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpx8wt53l1                        0x000055c023c5450a <unavailable> + 5386

    5    libc.so.6                          0x00002b0786a0c460 __libc_start_main +
    245

    6    tmpx8wt53l1                        0x000055c023c54169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for element in lst {\n        if element % 2 == 0 {\n  \
    \          sum += element\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpv76wwol0/tmpv76wwol0.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b472702ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4726d21b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4726d21988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4726d207b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv76wwol0                        0x000056277cd8f50a <unavailable> + 5386

    5    libc.so.6                          0x00002b4727216460 __libc_start_main +
    245

    6    tmpv76wwol0                        0x000056277cd8f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for element in lst {\n        if element % 2 == 0 {\n  \
    \          sum += element\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpv76wwol0/tmpv76wwol0.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b472702ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4726d21b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4726d21988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4726d207b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv76wwol0                        0x000056277cd8f50a <unavailable> + 5386

    5    libc.so.6                          0x00002b4727216460 __libc_start_main +
    245

    6    tmpv76wwol0                        0x000056277cd8f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 1 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp7m1noo9x/tmp7m1noo9x.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002adf357b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002adf354aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002adf354ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002adf354ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7m1noo9x                        0x00005586ad33650a <unavailable> + 5386

    5    libc.so.6                          0x00002adf359a3460 __libc_start_main +
    245

    6    tmp7m1noo9x                        0x00005586ad336169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for i in lst {\n        if i % 2 == 0 {\n            sum\
    \ += i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpx8wt53l1/tmpx8wt53l1.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0786820c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0786517b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0786517988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b07865167b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpx8wt53l1                        0x000055c023c5450a <unavailable> + 5386

    5    libc.so.6                          0x00002b0786a0c460 __libc_start_main +
    245

    6    tmpx8wt53l1                        0x000055c023c54169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for element in lst {\n        if element % 2 == 0 {\n  \
    \          sum += element\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpv76wwol0/tmpv76wwol0.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b472702ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4726d21b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4726d21988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4726d207b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv76wwol0                        0x000056277cd8f50a <unavailable> + 5386

    5    libc.so.6                          0x00002b4727216460 __libc_start_main +
    245

    6    tmpv76wwol0                        0x000056277cd8f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for i in lst {\n        if i % 2 == 0 {\n            sum\
    \ += i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpx8wt53l1/tmpx8wt53l1.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0786820c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0786517b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0786517988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b07865167b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpx8wt53l1                        0x000055c023c5450a <unavailable> + 5386

    5    libc.so.6                          0x00002b0786a0c460 __libc_start_main +
    245

    6    tmpx8wt53l1                        0x000055c023c54169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for index in 0..<lst.count {\n        if index % 2 == 0\
    \ {\n            sum += lst[index]\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp_tvzn5hm/tmp_tvzn5hm.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6b3280dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6b32504b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6b32504988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6b325037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_tvzn5hm                        0x000055b5bb03c6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b6b329f9460 __libc_start_main +
    245

    6    tmp_tvzn5hm                        0x000055b5bb03c1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for element in lst {\n        if element % 2 == 0 {\n  \
    \          sum += element\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpv76wwol0/tmpv76wwol0.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b472702ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4726d21b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4726d21988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4726d207b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv76wwol0                        0x000056277cd8f50a <unavailable> + 5386

    5    libc.so.6                          0x00002b4727216460 __libc_start_main +
    245

    6    tmpv76wwol0                        0x000056277cd8f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for i in lst {\n        if i % 2 == 0 {\n            sum\
    \ += i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpx8wt53l1/tmpx8wt53l1.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0786820c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0786517b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0786517988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b07865167b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpx8wt53l1                        0x000055c023c5450a <unavailable> + 5386

    5    libc.so.6                          0x00002b0786a0c460 __libc_start_main +
    245

    6    tmpx8wt53l1                        0x000055c023c54169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: 1
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    return lst.filter{ $0 % 2 == 1 }.sum()\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3,\
    \ 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpc0slzhky.swift:11:38: error: value of type '[Int]' has no member\
    \ 'sum'\n    return lst.filter{ $0 % 2 == 1 }.sum()\n           ~~~~~~~~~~~~~~~~~~~~~~~~~\
    \ ^~~\n"
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for i in lst {\n        if i % 2 == 0 {\n            sum\
    \ += i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpx8wt53l1/tmpx8wt53l1.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0786820c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0786517b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0786517988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b07865167b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpx8wt53l1                        0x000055c023c5450a <unavailable> + 5386

    5    libc.so.6                          0x00002b0786a0c460 __libc_start_main +
    245

    6    tmpx8wt53l1                        0x000055c023c54169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for element in lst {\n        if element % 2 == 0 {\n  \
    \          sum += element\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpv76wwol0/tmpv76wwol0.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b472702ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4726d21b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4726d21988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4726d207b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv76wwol0                        0x000056277cd8f50a <unavailable> + 5386

    5    libc.so.6                          0x00002b4727216460 __libc_start_main +
    245

    6    tmpv76wwol0                        0x000056277cd8f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: 1
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    return lst.filter { $0 % 2 == 1 }.sum()\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3,\
    \ 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpq3or064b.swift:11:39: error: value of type '[Int]' has no member\
    \ 'sum'\n    return lst.filter { $0 % 2 == 1 }.sum()\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~\
    \ ^~~\n"
  stdout: ''
  timestamp: 1660013526
- exit_code: 1
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    return lst.filter { $0 % 2 == 1 }.sum()\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3,\
    \ 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpq3or064b.swift:11:39: error: value of type '[Int]' has no member\
    \ 'sum'\n    return lst.filter { $0 % 2 == 1 }.sum()\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~\
    \ ^~~\n"
  stdout: ''
  timestamp: 1660013526
- exit_code: 1
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    return lst.filter { $0 % 2 == 1 }.sum()\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3,\
    \ 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpq3or064b.swift:11:39: error: value of type '[Int]' has no member\
    \ 'sum'\n    return lst.filter { $0 % 2 == 1 }.sum()\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~\
    \ ^~~\n"
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 1 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp7m1noo9x/tmp7m1noo9x.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002adf357b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002adf354aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002adf354ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002adf354ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7m1noo9x                        0x00005586ad33650a <unavailable> + 5386

    5    libc.so.6                          0x00002adf359a3460 __libc_start_main +
    245

    6    tmp7m1noo9x                        0x00005586ad336169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for index in 0..<lst.count {\n        if index % 2 == 0\
    \ {\n            sum += lst[index]\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp_tvzn5hm/tmp_tvzn5hm.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6b3280dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6b32504b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6b32504988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6b325037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_tvzn5hm                        0x000055b5bb03c6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b6b329f9460 __libc_start_main +
    245

    6    tmp_tvzn5hm                        0x000055b5bb03c1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for element in lst {\n        if element % 2 == 0 {\n  \
    \          sum += element\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpv76wwol0/tmpv76wwol0.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b472702ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4726d21b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4726d21988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4726d207b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv76wwol0                        0x000056277cd8f50a <unavailable> + 5386

    5    libc.so.6                          0x00002b4727216460 __libc_start_main +
    245

    6    tmpv76wwol0                        0x000056277cd8f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: 1
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    return lst.filter { $0 % 2 == 1 }.sum()\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3,\
    \ 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpq3or064b.swift:11:39: error: value of type '[Int]' has no member\
    \ 'sum'\n    return lst.filter { $0 % 2 == 1 }.sum()\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~\
    \ ^~~\n"
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for element in lst {\n        if element % 2 == 0 {\n  \
    \          sum += element\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpv76wwol0/tmpv76wwol0.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b472702ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4726d21b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4726d21988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4726d207b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv76wwol0                        0x000056277cd8f50a <unavailable> + 5386

    5    libc.so.6                          0x00002b4727216460 __libc_start_main +
    245

    6    tmpv76wwol0                        0x000056277cd8f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for index in 0..<lst.count {\n        if index % 2 == 0\
    \ {\n            sum += lst[index]\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp_tvzn5hm/tmp_tvzn5hm.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6b3280dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6b32504b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6b32504988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6b325037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_tvzn5hm                        0x000055b5bb03c6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b6b329f9460 __libc_start_main +
    245

    6    tmp_tvzn5hm                        0x000055b5bb03c1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for i in lst {\n        if i % 2 == 0 {\n            sum\
    \ += i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpx8wt53l1/tmpx8wt53l1.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0786820c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0786517b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0786517988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b07865167b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpx8wt53l1                        0x000055c023c5450a <unavailable> + 5386

    5    libc.so.6                          0x00002b0786a0c460 __libc_start_main +
    245

    6    tmpx8wt53l1                        0x000055c023c54169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: 1
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    return lst.filter{ $0 % 2 == 1 }.sum()\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3,\
    \ 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpc0slzhky.swift:11:38: error: value of type '[Int]' has no member\
    \ 'sum'\n    return lst.filter{ $0 % 2 == 1 }.sum()\n           ~~~~~~~~~~~~~~~~~~~~~~~~~\
    \ ^~~\n"
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for i in lst {\n        if i % 2 == 0 {\n            sum\
    \ += i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpx8wt53l1/tmpx8wt53l1.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0786820c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0786517b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0786517988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b07865167b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpx8wt53l1                        0x000055c023c5450a <unavailable> + 5386

    5    libc.so.6                          0x00002b0786a0c460 __libc_start_main +
    245

    6    tmpx8wt53l1                        0x000055c023c54169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: 1
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    return lst.filter { $0 % 2 == 1 }.sum()\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3,\
    \ 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpq3or064b.swift:11:39: error: value of type '[Int]' has no member\
    \ 'sum'\n    return lst.filter { $0 % 2 == 1 }.sum()\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~\
    \ ^~~\n"
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: 1
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    return lst.filter { $0 % 2 == 1 }.sum()\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3,\
    \ 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpq3or064b.swift:11:39: error: value of type '[Int]' has no member\
    \ 'sum'\n    return lst.filter { $0 % 2 == 1 }.sum()\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~\
    \ ^~~\n"
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for index in 0..<lst.count {\n        if index % 2 == 0\
    \ {\n            sum += lst[index]\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp_tvzn5hm/tmp_tvzn5hm.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6b3280dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6b32504b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6b32504988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6b325037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_tvzn5hm                        0x000055b5bb03c6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b6b329f9460 __libc_start_main +
    245

    6    tmp_tvzn5hm                        0x000055b5bb03c1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for idx in lst.indices {\n        if idx % 2 == 0 {\n  \
    \          sum += lst[idx]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp3mk3u6nw/tmp3mk3u6nw.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b32c8df2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b32c8ae9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b32c8ae9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b32c8ae87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3mk3u6nw                        0x0000561b4bf9d71c <unavailable> + 5916

    5    libc.so.6                          0x00002b32c8fde460 __libc_start_main +
    245

    6    tmp3mk3u6nw                        0x0000561b4bf9d1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for index in 0..<lst.count {\n        if index % 2 == 0\
    \ {\n            sum += lst[index]\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp_tvzn5hm/tmp_tvzn5hm.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6b3280dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6b32504b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6b32504988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6b325037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_tvzn5hm                        0x000055b5bb03c6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b6b329f9460 __libc_start_main +
    245

    6    tmp_tvzn5hm                        0x000055b5bb03c1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: 1
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    return lst.filter{ $0 % 2 == 1 }.sum()\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3,\
    \ 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpc0slzhky.swift:11:38: error: value of type '[Int]' has no member\
    \ 'sum'\n    return lst.filter{ $0 % 2 == 1 }.sum()\n           ~~~~~~~~~~~~~~~~~~~~~~~~~\
    \ ^~~\n"
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 1 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp7m1noo9x/tmp7m1noo9x.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002adf357b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002adf354aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002adf354ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002adf354ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7m1noo9x                        0x00005586ad33650a <unavailable> + 5386

    5    libc.so.6                          0x00002adf359a3460 __libc_start_main +
    245

    6    tmp7m1noo9x                        0x00005586ad336169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: 1
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    return lst.filter { $0 % 2 == 1 }.sum()\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3,\
    \ 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpq3or064b.swift:11:39: error: value of type '[Int]' has no member\
    \ 'sum'\n    return lst.filter { $0 % 2 == 1 }.sum()\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~\
    \ ^~~\n"
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for index in 0..<lst.count {\n        if index % 2 == 0\
    \ {\n            sum += lst[index]\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp_tvzn5hm/tmp_tvzn5hm.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6b3280dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6b32504b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6b32504988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6b325037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_tvzn5hm                        0x000055b5bb03c6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b6b329f9460 __libc_start_main +
    245

    6    tmp_tvzn5hm                        0x000055b5bb03c1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for element in lst {\n        if element % 2 == 0 {\n  \
    \          sum += element\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpv76wwol0/tmpv76wwol0.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b472702ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4726d21b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4726d21988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4726d207b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv76wwol0                        0x000056277cd8f50a <unavailable> + 5386

    5    libc.so.6                          0x00002b4727216460 __libc_start_main +
    245

    6    tmpv76wwol0                        0x000056277cd8f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for idx in lst.indices {\n        if idx % 2 == 0 {\n  \
    \          sum += lst[idx]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp3mk3u6nw/tmp3mk3u6nw.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b32c8df2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b32c8ae9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b32c8ae9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b32c8ae87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3mk3u6nw                        0x0000561b4bf9d71c <unavailable> + 5916

    5    libc.so.6                          0x00002b32c8fde460 __libc_start_main +
    245

    6    tmp3mk3u6nw                        0x0000561b4bf9d1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for idx in lst.indices {\n        if idx % 2 == 0 {\n  \
    \          sum += lst[idx]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp3mk3u6nw/tmp3mk3u6nw.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b32c8df2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b32c8ae9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b32c8ae9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b32c8ae87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3mk3u6nw                        0x0000561b4bf9d71c <unavailable> + 5916

    5    libc.so.6                          0x00002b32c8fde460 __libc_start_main +
    245

    6    tmp3mk3u6nw                        0x0000561b4bf9d1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for index in 0..<lst.count {\n        if index % 2 == 0\
    \ {\n            sum += lst[index]\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp_tvzn5hm/tmp_tvzn5hm.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6b3280dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6b32504b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6b32504988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6b325037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_tvzn5hm                        0x000055b5bb03c6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b6b329f9460 __libc_start_main +
    245

    6    tmp_tvzn5hm                        0x000055b5bb03c1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for i in lst {\n        if i % 2 == 0 {\n            sum\
    \ += i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpx8wt53l1/tmpx8wt53l1.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0786820c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0786517b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0786517988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b07865167b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpx8wt53l1                        0x000055c023c5450a <unavailable> + 5386

    5    libc.so.6                          0x00002b0786a0c460 __libc_start_main +
    245

    6    tmpx8wt53l1                        0x000055c023c54169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for index in 0..<lst.count {\n        if index % 2 == 0\
    \ {\n            sum += lst[index]\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp_tvzn5hm/tmp_tvzn5hm.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6b3280dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6b32504b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6b32504988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6b325037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_tvzn5hm                        0x000055b5bb03c6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b6b329f9460 __libc_start_main +
    245

    6    tmp_tvzn5hm                        0x000055b5bb03c1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 1 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp7m1noo9x/tmp7m1noo9x.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002adf357b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002adf354aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002adf354ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002adf354ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7m1noo9x                        0x00005586ad33650a <unavailable> + 5386

    5    libc.so.6                          0x00002adf359a3460 __libc_start_main +
    245

    6    tmp7m1noo9x                        0x00005586ad336169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for i in lst {\n        if i % 2 == 0 {\n            sum\
    \ += i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpx8wt53l1/tmpx8wt53l1.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0786820c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0786517b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0786517988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b07865167b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpx8wt53l1                        0x000055c023c5450a <unavailable> + 5386

    5    libc.so.6                          0x00002b0786a0c460 __libc_start_main +
    245

    6    tmpx8wt53l1                        0x000055c023c54169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for element in lst {\n        if element % 2 == 0 {\n  \
    \          sum += element\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpv76wwol0/tmpv76wwol0.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b472702ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4726d21b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4726d21988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4726d207b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv76wwol0                        0x000056277cd8f50a <unavailable> + 5386

    5    libc.so.6                          0x00002b4727216460 __libc_start_main +
    245

    6    tmpv76wwol0                        0x000056277cd8f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for element in lst {\n        if element % 2 == 0 {\n  \
    \          sum += element\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpv76wwol0/tmpv76wwol0.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b472702ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4726d21b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4726d21988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4726d207b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv76wwol0                        0x000056277cd8f50a <unavailable> + 5386

    5    libc.so.6                          0x00002b4727216460 __libc_start_main +
    245

    6    tmpv76wwol0                        0x000056277cd8f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for index in 0..<lst.count {\n        if index % 2 == 0\
    \ {\n            sum += lst[index]\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp_tvzn5hm/tmp_tvzn5hm.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6b3280dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6b32504b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6b32504988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6b325037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_tvzn5hm                        0x000055b5bb03c6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b6b329f9460 __libc_start_main +
    245

    6    tmp_tvzn5hm                        0x000055b5bb03c1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for element in lst {\n        if element % 2 == 0 {\n  \
    \          sum += element\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpv76wwol0/tmpv76wwol0.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b472702ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4726d21b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4726d21988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4726d207b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv76wwol0                        0x000056277cd8f50a <unavailable> + 5386

    5    libc.so.6                          0x00002b4727216460 __libc_start_main +
    245

    6    tmpv76wwol0                        0x000056277cd8f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for i in lst {\n        if i % 2 == 0 {\n            sum\
    \ += i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpx8wt53l1/tmpx8wt53l1.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0786820c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0786517b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0786517988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b07865167b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpx8wt53l1                        0x000055c023c5450a <unavailable> + 5386

    5    libc.so.6                          0x00002b0786a0c460 __libc_start_main +
    245

    6    tmpx8wt53l1                        0x000055c023c54169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for index in 0..<lst.count {\n        if index % 2 == 0\
    \ {\n            sum += lst[index]\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp_tvzn5hm/tmp_tvzn5hm.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6b3280dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6b32504b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6b32504988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6b325037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_tvzn5hm                        0x000055b5bb03c6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b6b329f9460 __libc_start_main +
    245

    6    tmp_tvzn5hm                        0x000055b5bb03c1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for element in lst {\n        if element % 2 == 0 {\n  \
    \          sum += element\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpv76wwol0/tmpv76wwol0.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b472702ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4726d21b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4726d21988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4726d207b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv76wwol0                        0x000056277cd8f50a <unavailable> + 5386

    5    libc.so.6                          0x00002b4727216460 __libc_start_main +
    245

    6    tmpv76wwol0                        0x000056277cd8f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for index in 0..<lst.count {\n        if index % 2 == 0\
    \ {\n            sum += lst[index]\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp_tvzn5hm/tmp_tvzn5hm.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6b3280dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6b32504b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6b32504988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6b325037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_tvzn5hm                        0x000055b5bb03c6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b6b329f9460 __libc_start_main +
    245

    6    tmp_tvzn5hm                        0x000055b5bb03c1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for i in lst {\n        if i % 2 == 0 {\n            sum\
    \ += i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpx8wt53l1/tmpx8wt53l1.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0786820c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0786517b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0786517988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b07865167b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpx8wt53l1                        0x000055c023c5450a <unavailable> + 5386

    5    libc.so.6                          0x00002b0786a0c460 __libc_start_main +
    245

    6    tmpx8wt53l1                        0x000055c023c54169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for i in lst {\n        if i % 2 == 0 {\n            sum\
    \ += i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpx8wt53l1/tmpx8wt53l1.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0786820c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0786517b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0786517988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b07865167b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpx8wt53l1                        0x000055c023c5450a <unavailable> + 5386

    5    libc.so.6                          0x00002b0786a0c460 __libc_start_main +
    245

    6    tmpx8wt53l1                        0x000055c023c54169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: 1
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    return lst.filter { $0 % 2 == 1 }.sum()\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3,\
    \ 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpq3or064b.swift:11:39: error: value of type '[Int]' has no member\
    \ 'sum'\n    return lst.filter { $0 % 2 == 1 }.sum()\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~\
    \ ^~~\n"
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for element in lst {\n        if element % 2 == 0 {\n  \
    \          sum += element\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpv76wwol0/tmpv76wwol0.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b472702ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4726d21b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4726d21988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4726d207b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv76wwol0                        0x000056277cd8f50a <unavailable> + 5386

    5    libc.so.6                          0x00002b4727216460 __libc_start_main +
    245

    6    tmpv76wwol0                        0x000056277cd8f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for idx in 0..<lst.count {\n        if idx % 2 == 0 {\n\
    \            sum += lst[idx]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmps2hzw4ds/tmps2hzw4ds.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac5ffd79c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac5ffa70b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac5ffa70988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac5ffa6f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps2hzw4ds                        0x000055e6c7edd6ec <unavailable> + 5868

    5    libc.so.6                          0x00002ac5fff65460 __libc_start_main +
    245

    6    tmps2hzw4ds                        0x000055e6c7edd1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for index in 0..<lst.count {\n        if index % 2 == 0\
    \ {\n            sum += lst[index]\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp_tvzn5hm/tmp_tvzn5hm.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6b3280dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6b32504b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6b32504988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6b325037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_tvzn5hm                        0x000055b5bb03c6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b6b329f9460 __libc_start_main +
    245

    6    tmp_tvzn5hm                        0x000055b5bb03c1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for index in 0..<lst.count {\n        if index % 2 == 0\
    \ {\n            sum += lst[index]\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp_tvzn5hm/tmp_tvzn5hm.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6b3280dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6b32504b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6b32504988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6b325037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_tvzn5hm                        0x000055b5bb03c6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b6b329f9460 __libc_start_main +
    245

    6    tmp_tvzn5hm                        0x000055b5bb03c1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for index in 0..<lst.count {\n        if index % 2 == 0\
    \ {\n            sum += lst[index]\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp_tvzn5hm/tmp_tvzn5hm.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6b3280dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6b32504b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6b32504988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6b325037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_tvzn5hm                        0x000055b5bb03c6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b6b329f9460 __libc_start_main +
    245

    6    tmp_tvzn5hm                        0x000055b5bb03c1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 1 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp7m1noo9x/tmp7m1noo9x.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002adf357b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002adf354aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002adf354ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002adf354ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7m1noo9x                        0x00005586ad33650a <unavailable> + 5386

    5    libc.so.6                          0x00002adf359a3460 __libc_start_main +
    245

    6    tmp7m1noo9x                        0x00005586ad336169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for element in lst {\n        if element % 2 == 0 {\n  \
    \          sum += element\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpv76wwol0/tmpv76wwol0.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b472702ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4726d21b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4726d21988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4726d207b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv76wwol0                        0x000056277cd8f50a <unavailable> + 5386

    5    libc.so.6                          0x00002b4727216460 __libc_start_main +
    245

    6    tmpv76wwol0                        0x000056277cd8f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 1 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp7m1noo9x/tmp7m1noo9x.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002adf357b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002adf354aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002adf354ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002adf354ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7m1noo9x                        0x00005586ad33650a <unavailable> + 5386

    5    libc.so.6                          0x00002adf359a3460 __libc_start_main +
    245

    6    tmp7m1noo9x                        0x00005586ad336169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: 1
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    return lst.filter { $0 % 2 == 1 }.sum()\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3,\
    \ 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpq3or064b.swift:11:39: error: value of type '[Int]' has no member\
    \ 'sum'\n    return lst.filter { $0 % 2 == 1 }.sum()\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~\
    \ ^~~\n"
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for idx in lst {\n        if idx % 2 == 1 {\n          \
    \  sum += idx\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3,\
    \ 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpkg843o0_/tmpkg843o0_.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12aa96cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12aa663b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12aa663988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12aa6627b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkg843o0_                        0x0000555ee2c5650a <unavailable> + 5386

    5    libc.so.6                          0x00002b12aab58460 __libc_start_main +
    245

    6    tmpkg843o0_                        0x0000555ee2c56169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for i in lst {\n        if i % 2 == 0 {\n            sum\
    \ += i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpx8wt53l1/tmpx8wt53l1.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0786820c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0786517b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0786517988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b07865167b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpx8wt53l1                        0x000055c023c5450a <unavailable> + 5386

    5    libc.so.6                          0x00002b0786a0c460 __libc_start_main +
    245

    6    tmpx8wt53l1                        0x000055c023c54169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: 1
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    return lst.filter { $0 % 2 == 1 }.sum()\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3,\
    \ 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpq3or064b.swift:11:39: error: value of type '[Int]' has no member\
    \ 'sum'\n    return lst.filter { $0 % 2 == 1 }.sum()\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~\
    \ ^~~\n"
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for i in lst {\n        if i % 2 == 0 {\n            sum\
    \ += i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpx8wt53l1/tmpx8wt53l1.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0786820c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0786517b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0786517988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b07865167b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpx8wt53l1                        0x000055c023c5450a <unavailable> + 5386

    5    libc.so.6                          0x00002b0786a0c460 __libc_start_main +
    245

    6    tmpx8wt53l1                        0x000055c023c54169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: 1
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    return lst.filter{ $0 % 2 == 1 }.sum()\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3,\
    \ 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpc0slzhky.swift:11:38: error: value of type '[Int]' has no member\
    \ 'sum'\n    return lst.filter{ $0 % 2 == 1 }.sum()\n           ~~~~~~~~~~~~~~~~~~~~~~~~~\
    \ ^~~\n"
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 1 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp7m1noo9x/tmp7m1noo9x.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002adf357b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002adf354aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002adf354ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002adf354ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7m1noo9x                        0x00005586ad33650a <unavailable> + 5386

    5    libc.so.6                          0x00002adf359a3460 __libc_start_main +
    245

    6    tmp7m1noo9x                        0x00005586ad336169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: 1
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    return lst.filter { $0 % 2 == 1 }.sum()\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3,\
    \ 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpq3or064b.swift:11:39: error: value of type '[Int]' has no member\
    \ 'sum'\n    return lst.filter { $0 % 2 == 1 }.sum()\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~\
    \ ^~~\n"
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 1 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp7m1noo9x/tmp7m1noo9x.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002adf357b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002adf354aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002adf354ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002adf354ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7m1noo9x                        0x00005586ad33650a <unavailable> + 5386

    5    libc.so.6                          0x00002adf359a3460 __libc_start_main +
    245

    6    tmp7m1noo9x                        0x00005586ad336169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: 1
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    return lst.filter { $0 % 2 == 1 }.sum()\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3,\
    \ 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpq3or064b.swift:11:39: error: value of type '[Int]' has no member\
    \ 'sum'\n    return lst.filter { $0 % 2 == 1 }.sum()\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~\
    \ ^~~\n"
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for i in lst {\n        if i % 2 == 0 {\n            sum\
    \ += i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpx8wt53l1/tmpx8wt53l1.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0786820c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0786517b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0786517988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b07865167b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpx8wt53l1                        0x000055c023c5450a <unavailable> + 5386

    5    libc.so.6                          0x00002b0786a0c460 __libc_start_main +
    245

    6    tmpx8wt53l1                        0x000055c023c54169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: 1
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    return lst.filter { $0 % 2 == 1 }.sum()\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3,\
    \ 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpq3or064b.swift:11:39: error: value of type '[Int]' has no member\
    \ 'sum'\n    return lst.filter { $0 % 2 == 1 }.sum()\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~\
    \ ^~~\n"
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for i in lst {\n        if i % 2 == 0 {\n            sum\
    \ += i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpx8wt53l1/tmpx8wt53l1.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0786820c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0786517b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0786517988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b07865167b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpx8wt53l1                        0x000055c023c5450a <unavailable> + 5386

    5    libc.so.6                          0x00002b0786a0c460 __libc_start_main +
    245

    6    tmpx8wt53l1                        0x000055c023c54169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for i in lst {\n        if i % 2 == 0 {\n            sum\
    \ += i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpx8wt53l1/tmpx8wt53l1.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0786820c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0786517b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0786517988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b07865167b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpx8wt53l1                        0x000055c023c5450a <unavailable> + 5386

    5    libc.so.6                          0x00002b0786a0c460 __libc_start_main +
    245

    6    tmpx8wt53l1                        0x000055c023c54169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for index in 0..<lst.count {\n        if index % 2 == 0\
    \ {\n            sum += lst[index]\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp_tvzn5hm/tmp_tvzn5hm.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6b3280dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6b32504b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6b32504988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6b325037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_tvzn5hm                        0x000055b5bb03c6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b6b329f9460 __libc_start_main +
    245

    6    tmp_tvzn5hm                        0x000055b5bb03c1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for i in lst {\n        if i % 2 == 0 {\n            sum\
    \ += i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpx8wt53l1/tmpx8wt53l1.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0786820c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0786517b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0786517988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b07865167b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpx8wt53l1                        0x000055c023c5450a <unavailable> + 5386

    5    libc.so.6                          0x00002b0786a0c460 __libc_start_main +
    245

    6    tmpx8wt53l1                        0x000055c023c54169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for index in 0..<lst.count {\n        if index % 2 == 0\
    \ {\n            sum += lst[index]\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp_tvzn5hm/tmp_tvzn5hm.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6b3280dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6b32504b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6b32504988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6b325037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_tvzn5hm                        0x000055b5bb03c6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b6b329f9460 __libc_start_main +
    245

    6    tmp_tvzn5hm                        0x000055b5bb03c1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 1 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp7m1noo9x/tmp7m1noo9x.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002adf357b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002adf354aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002adf354ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002adf354ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7m1noo9x                        0x00005586ad33650a <unavailable> + 5386

    5    libc.so.6                          0x00002adf359a3460 __libc_start_main +
    245

    6    tmp7m1noo9x                        0x00005586ad336169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: 1
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    return lst.filter{ $0 % 2 == 1 }.sum()\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3,\
    \ 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpc0slzhky.swift:11:38: error: value of type '[Int]' has no member\
    \ 'sum'\n    return lst.filter{ $0 % 2 == 1 }.sum()\n           ~~~~~~~~~~~~~~~~~~~~~~~~~\
    \ ^~~\n"
  stdout: ''
  timestamp: 1660013526
- exit_code: 1
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    return lst.filter { $0 % 2 == 1 }.sum()\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3,\
    \ 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpq3or064b.swift:11:39: error: value of type '[Int]' has no member\
    \ 'sum'\n    return lst.filter { $0 % 2 == 1 }.sum()\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~\
    \ ^~~\n"
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for element in lst {\n        if element % 2 == 0 {\n  \
    \          sum += element\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpv76wwol0/tmpv76wwol0.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b472702ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4726d21b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4726d21988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4726d207b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv76wwol0                        0x000056277cd8f50a <unavailable> + 5386

    5    libc.so.6                          0x00002b4727216460 __libc_start_main +
    245

    6    tmpv76wwol0                        0x000056277cd8f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for i in lst {\n        if i % 2 == 0 {\n            sum\
    \ += i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpx8wt53l1/tmpx8wt53l1.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0786820c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0786517b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0786517988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b07865167b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpx8wt53l1                        0x000055c023c5450a <unavailable> + 5386

    5    libc.so.6                          0x00002b0786a0c460 __libc_start_main +
    245

    6    tmpx8wt53l1                        0x000055c023c54169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for index in 0..<lst.count {\n        if index % 2 == 0\
    \ {\n            sum += lst[index]\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp_tvzn5hm/tmp_tvzn5hm.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6b3280dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6b32504b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6b32504988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6b325037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_tvzn5hm                        0x000055b5bb03c6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b6b329f9460 __libc_start_main +
    245

    6    tmp_tvzn5hm                        0x000055b5bb03c1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for element in lst {\n        if element % 2 == 0 {\n  \
    \          sum += element\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpv76wwol0/tmpv76wwol0.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b472702ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4726d21b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4726d21988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4726d207b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv76wwol0                        0x000056277cd8f50a <unavailable> + 5386

    5    libc.so.6                          0x00002b4727216460 __libc_start_main +
    245

    6    tmpv76wwol0                        0x000056277cd8f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp6s30f8ix/tmp6s30f8ix.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addbea21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addbe718b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addbe718988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addbe7177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6s30f8ix                        0x0000562b48dc450a <unavailable> + 5386

    5    libc.so.6                          0x00002addbec0d460 __libc_start_main +
    245

    6    tmp6s30f8ix                        0x0000562b48dc4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for idx in lst.indices {\n        if idx % 2 == 0 {\n  \
    \          sum += lst[idx]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp3mk3u6nw/tmp3mk3u6nw.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b32c8df2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b32c8ae9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b32c8ae9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b32c8ae87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3mk3u6nw                        0x0000561b4bf9d71c <unavailable> + 5916

    5    libc.so.6                          0x00002b32c8fde460 __libc_start_main +
    245

    6    tmp3mk3u6nw                        0x0000561b4bf9d1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013526
- exit_code: -4
  program: "\n/// Given a non-empty list of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for index in 0..<lst.count {\n        if index % 2 == 0\
    \ {\n            sum += lst[index]\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp_tvzn5hm/tmp_tvzn5hm.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6b3280dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6b32504b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6b32504988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6b325037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_tvzn5hm                        0x000055b5bb03c6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b6b329f9460 __libc_start_main +
    245

    6    tmp_tvzn5hm                        0x000055b5bb03c1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013526

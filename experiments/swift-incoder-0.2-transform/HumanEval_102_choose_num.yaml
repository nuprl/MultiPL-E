name: HumanEval_102_choose_num
language: swift
prompt: "\n/// This function takes two positive numbers x and y and returns the\n\
  /// biggest even integer number that is in the range [x, y] inclusive. If \n///\
  \ there's no such number, then the function should return -1.\n/// For example:\n\
  /// >>> choose_num(x: 12, y: 15)\n/// 14\n/// >>> choose_num(x: 13, y: 12)\n///\
  \ -1\nfunc choose_num(x: Int, y: Int) -> Int {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(choose_num(x: 12, y: 15) == 14)\nassert(choose_num(x:\
  \ 13, y: 12) == -1)\nassert(choose_num(x: 33, y: 12354) == 12354)\nassert(choose_num(x:\
  \ 5234, y: 5233) == -1)\nassert(choose_num(x: 6, y: 29) == 28)\nassert(choose_num(x:\
  \ 27, y: 10) == -1)\nassert(choose_num(x: 7, y: 7) == -1)\nassert(choose_num(x:\
  \ 546, y: 546) == 546)"
completions: ["    if x < y {\n        return -1\n    }\n    if x == y {\n       \
    \ return x\n    }\n    if x % 2 == 0 {\n        return choose_num(x / 2, y)\n\
    \    }\n    return choose_num(x, y / 2)", "    var result = -1\n    \n    if x\
    \ > y {\n        result = x\n    } else {\n        result = y\n    }\n    \n \
    \   if result % 2 == 0 {\n        return result\n    } else {\n        return\
    \ -1\n    }", "    if x < y {\n        return -1\n    }\n    var result = x\n\
    \    var remainder = y\n    while remainder > 0 {\n        if remainder % 2 ==\
    \ 0 {\n            result = result + 1\n        }\n        remainder = remainder\
    \ / 2\n    }\n    return result", "    if x < y {\n        return -1\n    }\n\
    \    if x == y {\n        return x\n    }\n    if x % 2 == 0 && y % 2 == 0 {\n\
    \        return x + (y - x) / 2\n    }\n    if x % 2 == 0 {\n        return x\
    \ / 2\n    }\n    return y / 2", "    if x <= y {\n        return -1\n    }\n\
    \    var biggest = Int()\n    var biggest2 = Int()\n    for var i = x; i <= y;\
    \ i++ {\n        if i % 2 == 0 {\n            if biggest < i {\n             \
    \   biggest = i\n            }\n        } else {\n            if biggest2 < i\
    \ {\n                biggest2 = i\n            }\n        }\n    }\n    if biggest\
    \ == biggest2 {\n        return biggest\n    }\n    return -1", "    if x < y\
    \ {\n        return choose_num(y, x)\n    }\n    if x == y {\n        return x\n\
    \    }\n    if x % 2 == 0 {\n        return x + (y % 2)\n    }\n    return choose_num(y\
    \ / 2, x)", "    var result = -1\n    var x = abs(x)\n    var y = abs(y)\n   \
    \ while x <= y {\n        if x % 2 == 0 && y % 2 == 0 {\n            result =\
    \ x\n            break\n        }\n        x += 1\n        y -= 1\n    }\n   \
    \ return result", "    if x <= y {\n        return -1\n    }\n    \n    var even\
    \ = Int()\n    var odd = Int()\n    \n    for _ in 0..<(x-y) {\n        even =\
    \ even + 2\n        odd = odd + 2\n    }\n    \n    if even > y {\n        return\
    \ -1\n    }\n    \n    return even", "    var result = -1\n    var x = abs(x)\n\
    \    var y = abs(y)\n    while x >= y {\n        if x % 2 == 0 {\n           \
    \ if y % 2 == 0 {\n                result = x\n                break\n       \
    \     } else {\n                result = y\n                break\n          \
    \  }\n        } else {\n            result = x\n            break\n        }\n\
    \        x /= 2\n        y /= 2\n    }\n    return result", "    var result =\
    \ -1\n    if x < y {\n        for _ in 0..<(x-y) {\n            let x = x + 1\n\
    \            if x % 2 == 0 {\n                result = x\n                break\n\
    \            }\n        }\n    } else {\n        for _ in 0..<(y-x) {\n      \
    \      let y = y + 1\n            if y % 2 == 0 {\n                result = y\n\
    \                break\n            }\n        }\n    }\n    return result", " \
    \   if x <= y {\n        return -1\n    }\n    if x == y {\n        return x\n\
    \    }\n    if x % 2 == 0 && y % 2 == 0 {\n        return x + y\n    }\n    if\
    \ x % 2 == 0 {\n        return y\n    }\n    return x", "    if x < y {\n    \
    \    (x, y) = (y, x)\n    }\n    var even: Int = 0\n    var odd: Int = 0\n   \
    \ for _ in 0..<(x-y) {\n        even += 2\n        odd += 1\n    }\n    if even\
    \ > y {\n        return even\n    }\n    return odd", "    if x < y {\n      \
    \  return choose_num(y, x)\n    }\n    if x == y {\n        return x\n    }\n\
    \    if x % 2 == 0 && y % 2 == 0 {\n        return x + (y - x) / 2\n    }\n  \
    \  if x % 2 == 0 {\n        return x - 1\n    }\n    if y % 2 == 0 {\n       \
    \ return y + 1\n    }\n    return -1", "    if x <= y {\n        return -1\n \
    \   }\n    var result: Int = 0\n    var x: Int = 0\n    var y: Int = 0\n    var\
    \ even: Bool = false\n    var x: Int = 0\n    var y: Int = 0\n    var even: Bool\
    \ = false\n    var x: Int = 0\n    var y: Int = 0\n    var even: Bool = false\n\
    \    var x: Int = 0\n    var y: Int = 0\n    var even: Bool = false\n    var x:\
    \ Int = 0\n    var y: Int = 0\n    var even: Bool = false\n    var x: Int = 0\n\
    \    var y: Int = 0\n    var even: Bool = false\n    var x: Int = 0\n    var y:\
    \ Int = 0\n    var even: Bool = false\n    var x: Int = 0\n    var y: Int = 0\n\
    \    var even: Bool = false\n    var x: Int = 0\n    var y: Int = 0\n    var even:\
    \ Bool = false\n    var x: Int = 0\n    var y: Int = 0\n    var even: Bool = false\n\
    \    var x: Int = 0\n    var y: Int = 0\n    var even: Bool = false\n    var x:\
    \ Int = 0\n    var y: Int = 0\n    var even: Bool = false\n    var x: Int = 0\n\
    \    var y: Int = 0\n    var even: Bool = false\n    var x: Int = 0\n    var y:\
    \ Int = 0\n    var even: Bool = false\n    var x: Int = 0\n    var y: Int = 0\n\
    \    var even: Bool = false\n    var x: Int = 0\n    var y: Int = 0\n    var even:\
    \ Bool = false\n    var x: Int = 0\n    var y: Int = 0\n    var even: Bool = false\n\
    \    var x: Int = 0\n    var y: Int = 0\n    var even: Bool = false\n    var x:\
    \ Int = 0\n    var y: Int = 0\n    var even: Bool = false\n    var x: Int = 0\n\
    \    var y: Int = 0\n    var even: Bool = false\n    var x: Int = 0\n    var y:\
    \ Int = 0\n    var even: Bool = false\n    var x: Int = 0\n    var y: Int = 0\n\
    \    var even: Bool = false\n    var x: Int = 0\n    var y: Int = 0\n    var even:\
    \ Bool = false\n    var x: Int = 0\n    var y: Int = 0\n    var even: Bool = false\n\
    \    var x: Int = 0\n    var y: Int = 0\n    var even: Bool = false\n    var x:\
    \ Int = 0\n    var y: Int = 0\n    var even: Bool = false\n    var x: Int = 0\n\
    \    var y: Int = 0\n    var even: Bool = false\n    var x: Int = 0\n    var y:\
    \ Int = 0\n    var even: Bool = false\n    var x: Int = 0\n    var y: Int = 0\n\
    \    var even: Bool = false\n    var x: Int = 0\n    var y: Int = 0\n    var even:\
    \ Bool = false\n    var x: Int = 0\n    var y: Int = 0\n    var even: Bool = false\n",
  "    if x < y {\n        return choose_num(y, x)\n    }\n    if x == y {\n     \
    \   return x\n    }\n    if x % 2 == 0 && y % 2 == 0 {\n        return x + (y\
    \ - x) / 2\n    }\n    if x % 2 == 0 {\n        return choose_num(x / 2, y)\n\
    \    }\n    if y % 2 == 0 {\n        return choose_num(x, y / 2)\n    }\n    return\
    \ -1", "    if x < y {\n        return choose_num(y, x)\n    }\n    if x == y\
    \ {\n        return x\n    }\n    if x % 2 == 0 {\n        return x / 2\n    }\n\
    \    if y % 2 == 0 {\n        return y / 2\n    }\n    if x > y {\n        return\
    \ choose_num(y - 1, x)\n    }\n    if y > x {\n        return choose_num(y, x\
    \ - 1)\n    }\n    return -1", "    if x < y {\n        (x, y) = (y, x)\n    }\n\
    \    \n    var result = -1\n    \n    for number in 1...y {\n        if number\
    \ % 2 == 0 {\n            if number > result {\n                result = number\n\
    \            }\n        }\n    }\n    \n    return result", "    if x > y {\n\
    \        (x, y) = (y, x)\n    }\n    \n    var result = -1\n    \n    for n in\
    \ 0..<y {\n        if x % 2 == 0 {\n            if n == y {\n                result\
    \ = x\n                break\n            }\n            \n            if n ==\
    \ x {\n                result = n\n                break\n            }\n    \
    \        \n            if n > x {\n                result = n\n              \
    \  break\n            }\n        }\n        \n        x /= 2\n    }\n    \n  \
    \  return result", "    if x <= y {\n        return -1\n    }\n    var result\
    \ = x\n    var remainder = y\n    while remainder > 0 {\n        if remainder\
    \ % 2 == 0 {\n            result = remainder\n        }\n        remainder = remainder\
    \ / 2\n    }\n    return result", "    if x > y {\n        (x, y) = (y, x)\n \
    \   }\n    \n    var result: Int = 0\n    var even: Int = 0\n    var odd: Int\
    \ = 0\n    \n    for i in 0..<x {\n        if i % 2 == 0 {\n            even =\
    \ even + i\n        } else {\n            odd = odd + i\n        }\n    }\n  \
    \  \n    if even > y {\n        result = even\n    } else {\n        result =\
    \ odd\n    }\n    \n    return result", "    if x <= y {\n        return -1\n\
    \    }\n    if x > y {\n        return -1\n    }\n    var even: Int = 0\n    var\
    \ odd: Int = 0\n    var x: Int = 0\n    var y: Int = 0\n    for _ in 0..<100 {\n\
    \        x = random(y)\n        y = random(x)\n        if x % 2 == 0 {\n     \
    \       even = even * 2 + x\n        } else {\n            odd = odd * 2 + y\n\
    \        }\n    }\n    if even > odd {\n        return even\n    } else {\n  \
    \      return odd\n    }", "    if x < y {\n        return -1\n    }\n    if x\
    \ == y {\n        return x\n    }\n    if x % 2 == 0 {\n        return choose_num(x\
    \ + 1, y)\n    }\n    if y % 2 == 0 {\n        return choose_num(x, y + 1)\n \
    \   }\n    return choose_num(x + 1, y + 1)", "    if x < y {\n        return choose_num(y,\
    \ x)\n    }\n    if x == y {\n        return x\n    }\n    if x % 2 == 0 && y\
    \ % 2 == 0 {\n        return x + y\n    }\n    if x % 2 == 0 {\n        return\
    \ y\n    }\n    return x", "    if x < y {\n        return -1\n    }\n    var\
    \ even: Int = 0\n    var odd: Int = 0\n    for _ in 0..<(x-y) {\n        if x\
    \ % 2 == 0 {\n            even += 2\n            x /= 2\n        } else {\n  \
    \          odd += 1\n            x /= 2\n        }\n    }\n    if even > odd {\n\
    \        return even\n    } else {\n        return odd\n    }", "    if x < y\
    \ {\n        (x, y) = (y, x)\n    }\n    \n    var even: Int = 0\n    var odd:\
    \ Int = 0\n    \n    for _ in 0..<(y - x) {\n        even += 2\n        odd +=\
    \ 2\n    }\n    \n    if even > odd {\n        return even\n    } else {\n   \
    \     return -1\n    }", "    if x < y {\n        return choose_num(y, x)\n  \
    \  }\n    \n    if x == y {\n        return x\n    }\n    \n    if x % 2 == 0\
    \ && y % 2 == 0 {\n        return x + (y / 2)\n    }\n    \n    if x % 2 == 0\
    \ && y % 2 != 0 {\n        return y\n    }\n    \n    if x % 2 != 0 && y % 2 ==\
    \ 0 {\n        return x\n    }\n    \n    if x % 2 != 0 && y % 2 != 0 {\n    \
    \    return y\n    }\n    \n    return -1", "    if x < y {\n        return -1\n\
    \    }\n    if x == y {\n        return x\n    }\n    var even: Int = 0\n    var\
    \ odd: Int = 0\n    var x: Int = 0\n    var y: Int = 0\n    while x < y {\n  \
    \      if x % 2 == 0 {\n            even = even + x\n        }\n        else {\n\
    \            odd = odd + x\n        }\n        x = x + 1\n    }\n    if even >\
    \ odd {\n        return even\n    }\n    return odd", "    if x < y {\n      \
    \  return choose_num(y, x)\n    }\n    \n    var even: Int = 0\n    var odd: Int\
    \ = 0\n    \n    for i in 0..<x {\n        if i % 2 == 0 {\n            even +=\
    \ i\n        } else {\n            odd += i\n        }\n    }\n    \n    if even\
    \ > y {\n        return even\n    } else {\n        return odd\n    }", "    if\
    \ x < y {\n        return -1\n    }\n    if x == y {\n        return x\n    }\n\
    \    if x % 2 == 0 {\n        return choose_num(x / 2, y)\n    }\n    if y % 2\
    \ == 0 {\n        return choose_num(x, y / 2)\n    }\n    return -1", "    if\
    \ x <= y {\n        return -1\n    }\n    if x == y {\n        return x\n    }\n\
    \    if x % 2 == 0 {\n        return choose_num(x / 2, y)\n    }\n    if y % 2\
    \ == 0 {\n        return choose_num(x, y / 2)\n    }\n    return choose_num(x\
    \ / 2, y / 2)", "    var result = -1\n    if x > y {\n        result = x\n   \
    \ } else {\n        result = y\n    }\n    \n    while result % 2 == 0 {\n   \
    \     result /= 2\n    }\n    \n    return result", "    if x < y {\n        swap(&x,\
    \ &y)\n    }\n    var even: Int = 0\n    var odd: Int = 0\n    var x: Int = 0\n\
    \    var y: Int = 0\n    var evenMax: Int = 0\n    var oddMax: Int = 0\n    var\
    \ evenMin: Int = 0\n    var oddMin: Int = 0\n    var evenMaxCount: Int = 0\n \
    \   var oddMaxCount: Int = 0\n    var evenMinCount: Int = 0\n    var oddMinCount:\
    \ Int = 0\n    var evenMaxCount2: Int = 0\n    var oddMaxCount2: Int = 0\n   \
    \ var evenMinCount2: Int = 0\n    var oddMinCount2: Int = 0\n    var evenMaxCount3:\
    \ Int = 0\n    var oddMaxCount3: Int = 0\n    var evenMinCount3: Int = 0\n   \
    \ var oddMinCount3: Int = 0\n    var evenMaxCount4: Int = 0\n    var oddMaxCount4:\
    \ Int = 0\n    var evenMinCount4: Int = 0\n    var oddMinCount4: Int = 0\n   \
    \ var evenMaxCount5: Int = 0\n    var oddMaxCount5: Int = 0\n    var evenMinCount5:\
    \ Int = 0\n    var oddMinCount5: Int = 0\n    var evenMaxCount6: Int = 0\n   \
    \ var oddMaxCount6: Int = 0\n    var evenMinCount6: Int = 0\n    var oddMinCount6:\
    \ Int = 0\n    var evenMaxCount7: Int = 0\n    var oddMaxCount7: Int = 0\n   \
    \ var evenMinCount7: Int = 0\n    var oddMinCount7: Int = 0\n    var evenMaxCount8:\
    \ Int = 0\n    var oddMaxCount8: Int = 0\n    var evenMinCount8: Int = 0\n   \
    \ var oddMinCount8: Int = 0\n    var evenMaxCount9: Int = 0\n    var oddMaxCount9:\
    \ Int = 0\n    var evenMinCount9: Int = 0\n    var oddMinCount9: Int = 0\n   \
    \ var evenMaxCount10: Int = 0\n    var oddMaxCount10: Int = 0\n    var evenMinCount10:\
    \ Int = 0\n    var oddMinCount10: Int = 0\n    var evenMaxCount11: Int = 0\n \
    \   var oddMaxCount11: Int = 0\n    var evenMinCount11: Int = 0\n    var oddMinCount11:\
    \ Int = 0\n    var evenMaxCount12: Int = 0\n    var oddMaxCount12: Int = 0\n \
    \   var evenMinCount12: Int = 0\n    var oddMinCount12: Int = 0\n    var evenMaxCount13:\
    \ Int = 0\n    var oddMaxCount13: Int = 0\n    var evenMinCount13: Int = 0\n \
    \   var oddMinCount13: Int = 0\n", "    if x <= y {\n        return -1\n    }\n\
    \    \n    var even: Int = 0\n    var odd: Int = 0\n    \n    for i in 0..<x {\n\
    \        if i % 2 == 0 {\n            even += i\n        } else {\n          \
    \  odd += i\n        }\n    }\n    \n    if even > y {\n        return even\n\
    \    } else {\n        return odd\n    }", "    if x < y {\n        return choose_num(y,\
    \ x)\n    }\n    if x == y {\n        return x\n    }\n    if x % 2 == 0 {\n \
    \       return choose_num(x / 2, y)\n    }\n    if y % 2 == 0 {\n        return\
    \ choose_num(x, y / 2)\n    }\n    return -1", "    var result = -1\n    var x\
    \ = abs(x)\n    var y = abs(y)\n    while x <= y {\n        if x % 2 == 0 && y\
    \ % 2 == 0 {\n            result = x\n            break\n        }\n        x\
    \ /= 2\n        y /= 2\n    }\n    return result", "    if x < y {\n        return\
    \ choose_num(y, x)\n    }\n    if x == y {\n        return x\n    }\n    if x\
    \ % 2 == 0 && y % 2 == 0 {\n        return x + (y - x)\n    }\n    if x % 2 ==\
    \ 0 {\n        return x - y\n    }\n    if y % 2 == 0 {\n        return x + y\n\
    \    }\n    return -1", "    if x > y {\n        (x, y) = (y, x)\n    }\n    var\
    \ even: Int = 0\n    var odd: Int = 0\n    var x: Int = 0\n    var y: Int = 0\n\
    \    var evenMax: Int = 0\n    var oddMax: Int = 0\n    for _ in 0..<(x - y) {\n\
    \        x += 2\n        y += 2\n        if x % 2 == 0 {\n            even +=\
    \ 2\n            if even > evenMax {\n                evenMax = even\n       \
    \     }\n        } else {\n            odd += 2\n            if odd > oddMax {\n\
    \                oddMax = odd\n            }\n        }\n    }\n    if evenMax\
    \ < y {\n        return evenMax\n    }\n    if oddMax < y {\n        return oddMax\n\
    \    }\n    return -1", "    if x <= y {\n        return -1\n    }\n    if x >\
    \ y {\n        return -1\n    }\n    if x == y {\n        return x\n    }\n  \
    \  if x % 2 == 0 {\n        return choose_num(x / 2, y)\n    }\n    return choose_num(x,\
    \ y / 2)", "    if x < y {\n        return -1\n    }\n    \n    var result = x\n\
    \    \n    for _ in 0..<y {\n        if result % 2 == 0 {\n            result\
    \ = result / 2\n        } else {\n            return -1\n        }\n    }\n  \
    \  \n    return result", "    if x <= y {\n        return -1\n    }\n    var max_num\
    \ = x\n    var min_num = y\n    for num in 1...y {\n        if num % 2 == 0 {\n\
    \            if num > max_num {\n                max_num = num\n            }\n\
    \            if num < min_num {\n                min_num = num\n            }\n\
    \        }\n    }\n    return max_num", "    if x <= y {\n        return -1\n\
    \    }\n    \n    var even = y\n    var odd = x\n    \n    while even > 0 {\n\
    \        if odd % 2 == 0 {\n            even -= 1\n        } else {\n        \
    \    odd -= 1\n        }\n    }\n    \n    return odd", "    if x <= y {\n   \
    \     return -1\n    }\n    \n    var biggest = Int()\n    \n    for number in\
    \ stride(from: x, through: y, by: 2) {\n        if number % 2 == 0 {\n       \
    \     biggest = max(number, biggest)\n        }\n    }\n    \n    return biggest",
  "    if x <= y {\n        return -1\n    }\n    if x == y {\n        return x\n\
    \    }\n    if x % 2 == 0 && y % 2 == 0 {\n        return x + (y - x) / 2\n  \
    \  }\n    if x % 2 == 0 {\n        return x - 1\n    }\n    if y % 2 == 0 {\n\
    \        return y + 1\n    }\n    return -1", "    if x <= y {\n        return\
    \ -1\n    }\n    if x == y {\n        return x\n    }\n    if x % 2 == 0 {\n \
    \       return choose_num(x / 2, y)\n    }\n    if y % 2 == 0 {\n        return\
    \ choose_num(x, y / 2)\n    }\n    return choose_num(x / 2, y / 2)", "    if x\
    \ <= y {\n        return -1\n    }\n    var even: Int = 0\n    var odd: Int =\
    \ 0\n    var x: Int = 0\n    var y: Int = 0\n    var evenMax: Int = 0\n    var\
    \ oddMax: Int = 0\n    var evenMin: Int = 0\n    var oddMin: Int = 0\n    var\
    \ evenMaxCount: Int = 0\n    var oddMaxCount: Int = 0\n    var evenMinCount: Int\
    \ = 0\n    var oddMinCount: Int = 0\n    var evenMaxCount2: Int = 0\n    var oddMaxCount2:\
    \ Int = 0\n    var evenMinCount2: Int = 0\n    var oddMinCount2: Int = 0\n   \
    \ var evenMaxCount3: Int = 0\n    var oddMaxCount3: Int = 0\n    var evenMinCount3:\
    \ Int = 0\n    var oddMinCount3: Int = 0\n    var evenMaxCount4: Int = 0\n   \
    \ var oddMaxCount4: Int = 0\n    var evenMinCount4: Int = 0\n    var oddMinCount4:\
    \ Int = 0\n    var evenMaxCount5: Int = 0\n    var oddMaxCount5: Int = 0\n   \
    \ var evenMinCount5: Int = 0\n    var oddMinCount5: Int = 0\n    var evenMaxCount6:\
    \ Int = 0\n    var oddMaxCount6: Int = 0\n    var evenMinCount6: Int = 0\n   \
    \ var oddMinCount6: Int = 0\n    var evenMaxCount7: Int = 0\n    var oddMaxCount7:\
    \ Int = 0\n    var evenMinCount7: Int = 0\n    var oddMinCount7: Int = 0\n   \
    \ var evenMaxCount8: Int = 0\n    var oddMaxCount8: Int = 0\n    var evenMinCount8:\
    \ Int = 0\n    var oddMinCount8: Int = 0\n    var evenMaxCount9: Int = 0\n   \
    \ var oddMaxCount9: Int = 0\n    var evenMinCount9: Int = 0\n    var oddMinCount9:\
    \ Int = 0\n    var evenMaxCount10: Int = 0\n    var oddMaxCount10: Int = 0\n \
    \   var evenMinCount10: Int = 0\n    var oddMinCount10: Int = 0\n    var evenMaxCount11:\
    \ Int = 0\n    var oddMaxCount11: Int = 0\n    var evenMinCount11: Int = 0\n \
    \   var oddMinCount11: Int = 0\n    var evenMaxCount12: Int = 0\n    var oddMaxCount12:\
    \ Int = 0\n    var evenMinCount12: Int = 0\n    var oddMinCount12: Int = 0\n \
    \   var evenMaxCount13: Int = 0\n    var oddMaxCount13: Int = 0\n    var evenMinCount13:\
    \ Int = 0\n    var oddMinCount13: Int = 0\n    var evenMaxCount", "    if x <=\
    \ y {\n        return -1\n    }\n    var biggest = Int()\n    var biggestEven\
    \ = Int()\n    for n in 1...y {\n        if n % 2 == 0 {\n            if biggestEven\
    \ == 0 {\n                biggestEven = n\n                biggest = n\n     \
    \       } else {\n                if biggest < n {\n                    biggestEven\
    \ = n\n                    biggest = n\n                }\n            }\n   \
    \     }\n    }\n    return biggestEven", "    if x <= y {\n        return -1\n\
    \    }\n    \n    var result = x\n    \n    for _ in 0..<y {\n        if result\
    \ % 2 == 0 {\n            result = result / 2\n        } else {\n            return\
    \ -1\n        }\n    }\n    \n    return result", "    if x <= y {\n        return\
    \ -1\n    }\n    if x == y {\n        return x\n    }\n    if x <= y {\n     \
    \   return -1\n    }\n    if x == y {\n        return x\n    }\n    if x <= y\
    \ {\n        return -1\n    }\n    if x == y {\n        return x\n    }\n    if\
    \ x <= y {\n        return -1\n    }\n    if x == y {\n        return x\n    }\n\
    \    if x <= y {\n        return -1\n    }\n    if x == y {\n        return x\n\
    \    }\n    if x <= y {\n        return -1\n    }\n    if x == y {\n        return\
    \ x\n    }\n    if x <= y {\n        return -1\n    }\n    if x == y {\n     \
    \   return x\n    }\n    if x <= y {\n        return -1\n    }\n    if x == y\
    \ {\n        return x\n    }\n    if x <= y {\n        return -1\n    }\n    if\
    \ x == y {\n        return x\n    }\n    if x <= y {\n        return -1\n    }\n\
    \    if x == y {\n        return x\n    }\n    if x <= y {\n        return -1\n\
    \    }\n    if x == y {\n        return x\n    }\n    if x <= y {\n        return\
    \ -1\n    }\n    if x == y {\n        return x\n    }\n    if x <= y {\n     \
    \   return -1\n    }\n    if x == y {\n        return x\n    }\n    if x <= y\
    \ {\n        return -1\n    }\n    if x == y {\n        return x\n    }\n    if\
    \ x <= y {\n        return -1\n    }\n    if x == y {\n        return x\n    }\n\
    \    if x <= y {\n        return -1\n    }\n    if x == y {\n        return x\n\
    \    }\n    if x <= y {\n        return -1\n    }\n    if x == y {\n        return\
    \ x\n    }\n    if x <= y {\n        return -1\n    }\n    if x == y {\n     \
    \   return x\n    }\n    if x <= y {\n        return -1\n    }\n    if x == y\
    \ {\n        return x\n    }\n    if x <= y {\n        return -1\n    }\n    if\
    \ x == y {\n        return x\n    }\n    if x <= y {\n        return -1\n    }\n\
    \    if x == y {\n        return x\n    }\n    if x <= y {\n        return -1\n\
    \    }\n    if x == y {\n        return x\n    }\n    if x <= y {\n        return\
    \ -1\n    }\n    if x == y {\n        return x\n    }\n    if x <= y {\n     \
    \   return -1\n    }\n    if x == y {\n        return x\n    }\n    if x <= y\
    \ {\n        return -1\n    }\n    if x == y {\n        return x\n    }\n    if\
    \ x <= y {\n        return -1\n    }\n    if x == y {\n        return x\n    }\n\
    \    if x <= y {\n        return -1\n    }\n    if x == y {\n        return x\n\
    \    }", "    if x < y {\n        return -1\n    }\n    if x == y {\n        return\
    \ x\n    }\n    var even: Int = 0\n    var odd: Int = 0\n    var x: Int = 0\n\
    \    var y: Int = 0\n    var evenMax: Int = 0\n    var oddMax: Int = 0\n    var\
    \ evenMin: Int = 0\n    var oddMin: Int = 0\n    var evenMaxCount: Int = 0\n \
    \   var oddMaxCount: Int = 0\n    var evenMinCount: Int = 0\n    var oddMinCount:\
    \ Int = 0\n    var evenMaxCount2: Int = 0\n    var oddMaxCount2: Int = 0\n   \
    \ var evenMinCount2: Int = 0\n    var oddMinCount2: Int = 0\n    var evenMaxCount3:\
    \ Int = 0\n    var oddMaxCount3: Int = 0\n    var evenMinCount3: Int = 0\n   \
    \ var oddMinCount3: Int = 0\n    var evenMaxCount4: Int = 0\n    var oddMaxCount4:\
    \ Int = 0\n    var evenMinCount4: Int = 0\n    var oddMinCount4: Int = 0\n   \
    \ var evenMaxCount5: Int = 0\n    var oddMaxCount5: Int = 0\n    var evenMinCount5:\
    \ Int = 0\n    var oddMinCount5: Int = 0\n    var evenMaxCount6: Int = 0\n   \
    \ var oddMaxCount6: Int = 0\n    var evenMinCount6: Int = 0\n    var oddMinCount6:\
    \ Int = 0\n    var evenMaxCount7: Int = 0\n    var oddMaxCount7: Int = 0\n   \
    \ var evenMinCount7: Int = 0\n    var oddMinCount7: Int = 0\n    var evenMaxCount8:\
    \ Int = 0\n    var oddMaxCount8: Int = 0\n    var evenMinCount8: Int = 0\n   \
    \ var oddMinCount8: Int = 0\n    var evenMaxCount9: Int = 0\n    var oddMaxCount9:\
    \ Int = 0\n    var evenMinCount9: Int = 0\n    var oddMinCount9: Int = 0\n   \
    \ var evenMaxCount10: Int = 0\n    var oddMaxCount10: Int = 0\n    var evenMinCount10:\
    \ Int = 0\n    var oddMinCount10: Int = 0\n    var evenMaxCount11: Int = 0\n \
    \   var oddMaxCount11: Int = 0\n    var evenMinCount11: Int = 0\n    var oddMinCount11:\
    \ Int = 0\n    var evenMaxCount12: Int = 0\n    var oddMaxCount12: Int = 0\n \
    \   var evenMinCount12: Int = 0\n    var oddMinCount12: Int = 0\n    var evenMaxCount13:\
    \ Int = 0\n    var oddMaxCount13: Int = 0\n    var evenMinCount13: Int = 0\n \
    \   var oddMinCount", "    var result = -1\n    var x = x - 1\n    var y = y -\
    \ 1\n    while x >= y {\n        if x % 2 == 0 {\n            result = x\n   \
    \         break\n        }\n        x = x - 1\n    }\n    while y >= x {\n   \
    \     if y % 2 == 0 {\n            result = y\n            break\n        }\n\
    \        y = y - 1\n    }\n    return result", "    if x < y {\n        return\
    \ -1\n    }\n    var even: Int = 0\n    var odd: Int = 0\n    for n in 0..<x {\n\
    \        if n % 2 == 0 {\n            even += n\n        } else {\n          \
    \  odd += n\n        }\n    }\n    if even > y {\n        return even\n    }\n\
    \    return odd", "    if x < y {\n        return choose_num(y, x)\n    }\n  \
    \  if x == y {\n        return x\n    }\n    if x % 2 == 0 && y % 2 == 0 {\n \
    \       return x + (y - x) / 2\n    }\n    if x % 2 == 0 {\n        return x /\
    \ 2\n    }\n    if y % 2 == 0 {\n        return y / 2\n    }\n    return -1",
  "    if x <= y {\n        return -1\n    }\n    if x == y {\n        return x\n\
    \    }\n    var even: Int = 0\n    var odd: Int = 0\n    var x: Int = 0\n    var\
    \ y: Int = 0\n    var evenMax: Int = 0\n    var oddMax: Int = 0\n    var evenMin:\
    \ Int = 0\n    var oddMin: Int = 0\n    while x <= y {\n        if x % 2 == 0\
    \ {\n            even = even * 2 + x\n            if even > evenMax {\n      \
    \          evenMax = even\n            }\n            if even < evenMin {\n  \
    \              evenMin = even\n            }\n        } else {\n            odd\
    \ = odd * 2 + x\n            if odd > oddMax {\n                oddMax = odd\n\
    \            }\n            if odd < oddMin {\n                oddMin = odd\n\
    \            }\n        }\n        x += 1\n        y += 1\n    }\n    if evenMin\
    \ > oddMin {\n        return evenMin\n    } else {\n        return oddMin\n  \
    \  }", "    if x <= y {\n        return -1\n    }\n    if x == y {\n        return\
    \ x\n    }\n    var even: Int = 0\n    var odd: Int = 0\n    var x: Int = 0\n\
    \    var y: Int = 0\n    var evenMax: Int = 0\n    var oddMax: Int = 0\n    var\
    \ evenMin: Int = 0\n    var oddMin: Int = 0\n    var evenMaxCount: Int = 0\n \
    \   var oddMaxCount: Int = 0\n    var evenMinCount: Int = 0\n    var oddMinCount:\
    \ Int = 0\n    var evenMaxCount2: Int = 0\n    var oddMaxCount2: Int = 0\n   \
    \ var evenMinCount2: Int = 0\n    var oddMinCount2: Int = 0\n    var evenMaxCount3:\
    \ Int = 0\n    var oddMaxCount3: Int = 0\n    var evenMinCount3: Int = 0\n   \
    \ var oddMinCount3: Int = 0\n    var evenMaxCount4: Int = 0\n    var oddMaxCount4:\
    \ Int = 0\n    var evenMinCount4: Int = 0\n    var oddMinCount4: Int = 0\n   \
    \ var evenMaxCount5: Int = 0\n    var oddMaxCount5: Int = 0\n    var evenMinCount5:\
    \ Int = 0\n    var oddMinCount5: Int = 0\n    var evenMaxCount6: Int = 0\n   \
    \ var oddMaxCount6: Int = 0\n    var evenMinCount6: Int = 0\n    var oddMinCount6:\
    \ Int = 0\n    var evenMaxCount7: Int = 0\n    var oddMaxCount7: Int = 0\n   \
    \ var evenMinCount7: Int = 0\n    var oddMinCount7: Int = 0\n    var evenMaxCount8:\
    \ Int = 0\n    var oddMaxCount8: Int = 0\n    var evenMinCount8: Int = 0\n   \
    \ var oddMinCount8: Int = 0\n    var evenMaxCount9: Int = 0\n    var oddMaxCount9:\
    \ Int = 0\n    var evenMinCount9: Int = 0\n    var oddMinCount9: Int = 0\n   \
    \ var evenMaxCount10: Int = 0\n    var oddMaxCount10: Int = 0\n    var evenMinCount10:\
    \ Int = 0\n    var oddMinCount10: Int = 0\n    var evenMaxCount11: Int = 0\n \
    \   var oddMaxCount11: Int = 0\n    var evenMinCount11: Int = 0\n    var oddMinCount11:\
    \ Int = 0\n    var evenMaxCount12: Int = 0\n    var oddMaxCount12: Int = 0\n \
    \   var evenMinCount12: Int = 0\n    var oddMinCount12: Int = 0\n    var evenMaxCount13:\
    \ Int = 0\n    var oddMaxCount13: Int = 0\n    var evenMinCount13: Int = 0\n \
    \   var oddMinCount", "    if x <= y {\n        return -1\n    }\n    if x ==\
    \ y {\n        return x\n    }\n    if x % 2 == 0 {\n        return choose_num(x\
    \ / 2, y)\n    }\n    if y % 2 == 0 {\n        return choose_num(x, y / 2)\n \
    \   }\n    if x > y {\n        return choose_num(x / 2, y)\n    }\n    return\
    \ choose_num(x, y / 2)", "    var result = -1\n    var x = abs(x)\n    var y =\
    \ abs(y)\n    while x >= y {\n        if x % 2 == 0 {\n            result = x\n\
    \            break\n        }\n        x /= 2\n    }\n    if y > x {\n       \
    \ result = y\n    }\n    return result", "    var result = -1\n    if x > y {\n\
    \        result = x\n    } else {\n        result = y\n    }\n    while result\
    \ > 0 && result % 2 == 0 {\n        result /= 2\n    }\n    return result", " \
    \   var result = -1\n    var even = 1\n    var odd = 0\n    \n    if x > y {\n\
    \        (x, y) = (y, x)\n    }\n    \n    for _ in 0..<(x-y) {\n        if even\
    \ % 2 == 0 {\n            even += 2\n        } else {\n            odd += 2\n\
    \        }\n    }\n    \n    if even > y {\n        result = even\n    } else\
    \ {\n        result = odd\n    }\n    \n    return result", "    if x <= y {\n\
    \        return -1\n    }\n    if x == y {\n        return x\n    }\n    if x\
    \ % 2 == 0 && y % 2 == 0 {\n        return (x * y) / 2\n    }\n    if x % 2 ==\
    \ 0 && y % 2 != 0 {\n        return -1\n    }\n    if x % 2 != 0 && y % 2 == 0\
    \ {\n        return -1\n    }\n    if x % 2 != 0 && y % 2 != 0 {\n        return\
    \ (x * y) / 2\n    }\n    return -1", "    if x < y {\n        return choose_num(y,\
    \ x)\n    }\n    if x == y {\n        return x\n    }\n    if x % 2 == 0 && y\
    \ % 2 == 0 {\n        return x + (y - x) / 2\n    }\n    if x % 2 == 0 {\n   \
    \     return x - 1\n    }\n    if y % 2 == 0 {\n        return y + 1\n    }\n\
    \    return -1", "    if x < y {\n        return -1\n    }\n    if x == y {\n\
    \        return x\n    }\n    if x % 2 == 0 {\n        return choose_num(x / 2,\
    \ y)\n    }\n    if y % 2 == 0 {\n        return choose_num(x, y / 2)\n    }\n\
    \    return choose_num(x + 1, y)", "    if x <= 0 || y <= 0 {\n        return\
    \ -1\n    }\n    var even: Int = 0\n    var odd: Int = 0\n    var x: Int = 0\n\
    \    var y: Int = 0\n    var evenMax: Int = 0\n    var oddMax: Int = 0\n    \n\
    \    while x <= y {\n        if x % 2 == 0 {\n            even = even * 2 + x\n\
    \            if even > evenMax {\n                evenMax = even\n           \
    \ }\n        } else {\n            odd = odd * 2 + x\n            if odd > oddMax\
    \ {\n                oddMax = odd\n            }\n        }\n        x += 1\n\
    \        y += 1\n    }\n    if evenMax < oddMax {\n        return evenMax\n  \
    \  } else {\n        return oddMax\n    }", "    var result = -1\n    var x =\
    \ abs(x)\n    var y = abs(y)\n    while x <= y {\n        if x % 2 == 0 && y %\
    \ 2 == 0 {\n            result = x\n            break\n        }\n        x +=\
    \ 1\n        y -= 1\n    }\n    return result", "    if x < y {\n        return\
    \ -1\n    }\n    if x == y {\n        return x\n    }\n    var even: Int = 0\n\
    \    var odd: Int = 0\n    var x: Int = 0\n    var y: Int = 0\n    var z: Int\
    \ = 0\n    var evenMax: Int = 0\n    var oddMax: Int = 0\n    var evenMin: Int\
    \ = 0\n    var oddMin: Int = 0\n    var evenMaxCount: Int = 0\n    var oddMaxCount:\
    \ Int = 0\n    var evenMinCount: Int = 0\n    var oddMinCount: Int = 0\n    var\
    \ evenMaxCount2: Int = 0\n    var oddMaxCount2: Int = 0\n    var evenMinCount2:\
    \ Int = 0\n    var oddMinCount2: Int = 0\n    var evenMaxCount3: Int = 0\n   \
    \ var oddMaxCount3: Int = 0\n    var evenMinCount3: Int = 0\n    var oddMinCount3:\
    \ Int = 0\n    var evenMaxCount4: Int = 0\n    var oddMaxCount4: Int = 0\n   \
    \ var evenMinCount4: Int = 0\n    var oddMinCount4: Int = 0\n    var evenMaxCount5:\
    \ Int = 0\n    var oddMaxCount5: Int = 0\n    var evenMinCount5: Int = 0\n   \
    \ var oddMinCount5: Int = 0\n    var evenMaxCount6: Int = 0\n    var oddMaxCount6:\
    \ Int = 0\n    var evenMinCount6: Int = 0\n    var oddMinCount6: Int = 0\n   \
    \ var evenMaxCount7: Int = 0\n    var oddMaxCount7: Int = 0\n    var evenMinCount7:\
    \ Int = 0\n    var oddMinCount7: Int = 0\n    var evenMaxCount8: Int = 0\n   \
    \ var oddMaxCount8: Int = 0\n    var evenMinCount8: Int = 0\n    var oddMinCount8:\
    \ Int = 0\n    var evenMaxCount9: Int = 0\n    var oddMaxCount9: Int = 0\n   \
    \ var evenMinCount9: Int = 0\n    var oddMinCount9: Int = 0\n    var evenMaxCount10:\
    \ Int = 0\n    var oddMaxCount10: Int = 0\n    var evenMinCount10: Int = 0\n \
    \   var oddMinCount10: Int = 0\n    var evenMaxCount11: Int = 0\n    var oddMaxCount11:\
    \ Int = 0\n    var evenMinCount11: Int = 0\n    var oddMinCount11: Int = 0\n \
    \   var evenMaxCount12: Int = 0\n    var oddMaxCount12: Int = 0\n    var evenMinCount12:\
    \ Int = 0\n    var oddMinCount12: Int = 0\n    var evenMaxCount13: Int = 0\n \
    \   var oddMaxCount13: Int = 0\n    var evenMinCount13: Int", "    var result\
    \ = -1\n    var x = abs(x)\n    var y = abs(y)\n    var m = 1\n    var n = 2\n\
    \    while m <= y {\n        if x % n == 0 {\n            if m == y {\n      \
    \          result = n\n            } else {\n                result = m\n    \
    \        }\n            break\n        }\n        n += 2\n        m += 2\n   \
    \ }\n    return result", "    if x < y {\n        return -1\n    }\n    var result\
    \ = x\n    if x % 2 == 0 {\n        result = x\n    }\n    if y % 2 == 0 {\n \
    \       result = y\n    }\n    while result > y {\n        result = result / 2\n\
    \    }\n    while result < x {\n        result = result * 2\n    }\n    return\
    \ result", "    if x < y {\n        return -1\n    }\n    if x == y {\n      \
    \  return x\n    }\n    var even = Int()\n    var odd = Int()\n    var biggest\
    \ = Int()\n    var evenBiggest = Int()\n    var oddBiggest = Int()\n    for _\
    \ in 0..<(x-y) {\n        even = even + 2\n        odd = odd + 3\n        if even\
    \ > y {\n            even = Int()\n            evenBiggest = Int()\n        }\n\
    \        if odd > y {\n            odd = Int()\n            oddBiggest = Int()\n\
    \        }\n        if even > biggest {\n            biggest = even\n        \
    \    evenBiggest = even\n        }\n        if odd > biggest {\n            biggest\
    \ = odd\n            oddBiggest = odd\n        }\n    }\n    if even > biggest\
    \ {\n        return even\n    }\n    if odd > biggest {\n        return odd\n\
    \    }\n    if evenBiggest > biggest {\n        return evenBiggest\n    }\n  \
    \  return oddBiggest", "    if x < y {\n        return choose_num(y, x)\n    }\n\
    \    if x == y {\n        return x\n    }\n    if x % 2 == 0 && y % 2 == 0 {\n\
    \        return (x * y) / 2\n    }\n    if x % 2 == 0 {\n        return x / 2\n\
    \    }\n    if y % 2 == 0 {\n        return y / 2\n    }\n    return -1", "  \
    \  var result = -1\n    var x = abs(x)\n    var y = abs(y)\n    while x >= y {\n\
    \        if x % 2 == 0 {\n            if y % 2 == 0 {\n                result\
    \ = x\n                break\n            } else {\n                result = y\n\
    \                break\n            }\n        } else {\n            result =\
    \ x\n            break\n        }\n        x /= 2\n        y /= 2\n    }\n   \
    \ return result", "    if x <= y {\n        return -1\n    }\n    \n    var even:\
    \ Int = 0\n    var odd: Int = 0\n    \n    for i in 0..<y {\n        if x % 2\
    \ == 0 {\n            even += i\n        } else {\n            odd += i\n    \
    \    }\n    }\n    \n    if even > odd {\n        return even\n    } else {\n\
    \        return odd\n    }", "    var result = -1\n    var remainder = x % y\n\
    \    if remainder == 0 {\n        result = x\n    }\n    else {\n        result\
    \ = y\n    }\n    return result", "    if x > y {\n        (x, y) = (y, x)\n \
    \   }\n    \n    var even = Int()\n    var odd = Int()\n    \n    if x % 2 ==\
    \ 0 {\n        even = x\n    } else {\n        even = x + 1\n    }\n    \n   \
    \ if y % 2 == 0 {\n        odd = y\n    } else {\n        odd = y + 1\n    }\n\
    \    \n    if even > odd {\n        return even\n    } else {\n        return\
    \ odd\n    }", "    if x < y {\n        return -1\n    }\n    if x == y {\n  \
    \      return x\n    }\n    if x % 2 == 0 {\n        return choose_num(x / 2,\
    \ y)\n    }\n    return choose_num(x, y / 2)", "    if x < y {\n        return\
    \ choose_num(y, x)\n    }\n    if x == y {\n        return x\n    }\n    if x\
    \ % 2 == 0 && y % 2 == 0 {\n        return x + (y - x) / 2\n    }\n    if x %\
    \ 2 == 0 {\n        return x - 1\n    }\n    if y % 2 == 0 {\n        return y\
    \ + 1\n    }\n    return -1", "    if x <= y {\n        return -1\n    }\n   \
    \ if x > y {\n        return -1\n    }\n    var even: Int = 0\n    var odd: Int\
    \ = 0\n    var x: Int = 0\n    var y: Int = 0\n    var evenMax: Int = 0\n    var\
    \ oddMax: Int = 0\n    var evenMin: Int = 0\n    var oddMin: Int = 0\n    var\
    \ evenMaxCount: Int = 0\n    var oddMaxCount: Int = 0\n    var evenMinCount: Int\
    \ = 0\n    var oddMinCount: Int = 0\n    var evenMaxCount2: Int = 0\n    var oddMaxCount2:\
    \ Int = 0\n    var evenMinCount2: Int = 0\n    var oddMinCount2: Int = 0\n   \
    \ var evenMaxCount3: Int = 0\n    var oddMaxCount3: Int = 0\n    var evenMinCount3:\
    \ Int = 0\n    var oddMinCount3: Int = 0\n    var evenMaxCount4: Int = 0\n   \
    \ var oddMaxCount4: Int = 0\n    var evenMinCount4: Int = 0\n    var oddMinCount4:\
    \ Int = 0\n    var evenMaxCount5: Int = 0\n    var oddMaxCount5: Int = 0\n   \
    \ var evenMinCount5: Int = 0\n    var oddMinCount5: Int = 0\n    var evenMaxCount6:\
    \ Int = 0\n    var oddMaxCount6: Int = 0\n    var evenMinCount6: Int = 0\n   \
    \ var oddMinCount6: Int = 0\n    var evenMaxCount7: Int = 0\n    var oddMaxCount7:\
    \ Int = 0\n    var evenMinCount7: Int = 0\n    var oddMinCount7: Int = 0\n   \
    \ var evenMaxCount8: Int = 0\n    var oddMaxCount8: Int = 0\n    var evenMinCount8:\
    \ Int = 0\n    var oddMinCount8: Int = 0\n    var evenMaxCount9: Int = 0\n   \
    \ var oddMaxCount9: Int = 0\n    var evenMinCount9: Int = 0\n    var oddMinCount9:\
    \ Int = 0\n    var evenMaxCount10: Int = 0\n    var oddMaxCount10: Int = 0\n \
    \   var evenMinCount10: Int = 0\n    var oddMinCount10: Int = 0\n    var evenMaxCount11:\
    \ Int = 0\n    var oddMaxCount11: Int = 0\n    var evenMinCount11: Int = 0\n \
    \   var oddMinCount11: Int = 0\n    var evenMaxCount12: Int = 0\n    var oddMaxCount12:\
    \ Int = 0\n    var evenMinCount12: Int = 0\n    var oddMinCount12: Int = 0\n \
    \   var evenMaxCount13: Int = 0\n    var oddMaxCount13: Int = 0\n    var evenMinCount13:\
    \ Int = 0\n    var oddMin", "    var result = -1\n    var x = abs(x)\n    var\
    \ y = abs(y)\n    var xx = x * x\n    var yy = y * y\n    var xy = x * y\n   \
    \ while xx <= yy {\n        if xy > xx {\n            result += x\n          \
    \  x += 1\n        } else {\n            result += y\n            y += 1\n   \
    \     }\n        xx = x * x\n        yy = y * y\n        xy = x * y\n    }\n \
    \   return result", "    if x <= y {\n        return -1\n    }\n    var even:\
    \ Int = 0\n    var odd: Int = 0\n    var x: Int\n    var y: Int\n    for (x =\
    \ min(x, y); x <= max(x, y); x++) {\n        if x % 2 == 0 {\n            even\
    \ += x\n        } else {\n            odd += x\n        }\n    }\n    if even\
    \ > odd {\n        return even\n    } else {\n        return odd\n    }", "  \
    \  var result = -1\n    var even = 1\n    var odd = 1\n    var xMin = Int(x)\n\
    \    var xMax = Int(y)\n    \n    while even < xMax && odd < xMax {\n        if\
    \ even % 2 == 0 {\n            if odd % 2 == 0 {\n                result = even\n\
    \            } else {\n                result = odd\n            }\n         \
    \   even = even + 2\n            odd = odd + 1\n        } else {\n           \
    \ if odd % 2 == 0 {\n                result = odd\n            } else {\n    \
    \            result = even\n            }\n            even = even + 1\n     \
    \       odd = odd + 2\n        }\n    }\n    return result", "    if x <= y {\n\
    \        return -1\n    }\n    \n    var result = x\n    \n    for _ in 0..<y\
    \ {\n        if result % 2 == 0 {\n            result = result / 2\n        }\
    \ else {\n            result /= 2\n        }\n    }\n    \n    return result",
  "    if x <= 0 || y <= 0 {\n        return -1\n    }\n    if x == y {\n        return\
    \ x\n    }\n    if x > y {\n        return choose_num(y, x)\n    }\n    var max_even\
    \ = y\n    for num in stride(from: x, through: y, by: 2) {\n        if num % 2\
    \ == 0 {\n            if num > max_even {\n                max_even = num\n  \
    \          }\n        }\n    }\n    return max_even", "    var result = -1\n \
    \   if x > y {\n        result = x\n    } else {\n        result = y\n    }\n\
    \    while result > 0 && result % 2 == 0 {\n        result /= 2\n    }\n    return\
    \ result", "    var result = -1\n    var x = abs(x)\n    var y = abs(y)\n    var\
    \ xx = x * x\n    var yy = y * y\n    var xy = x * y\n    while (xx <= yy) {\n\
    \        if (xx > yy) {\n            if ((xy % xx) == 0) {\n                result\
    \ = x\n                break\n            }\n        } else {\n            if\
    \ ((yy % yy) == 0) {\n                result = y\n                break\n    \
    \        }\n        }\n        xx /= 2\n        yy /= 2\n    }\n    return result",
  "    if x < y {\n        return -1\n    }\n    if x == y {\n        return x\n \
    \   }\n    if x % 2 == 0 {\n        return choose_num(x / 2, y)\n    }\n    if\
    \ y % 2 == 0 {\n        return choose_num(x, y / 2)\n    }\n    return choose_num(x\
    \ / 2, y / 2)", "    if x <= y {\n        return -1\n    }\n    \n    var max_num:\
    \ Int\n    \n    for i in 0..<(x-y) {\n        if ((x % 2) == 0) {\n         \
    \   if ((y % 2) == 0) {\n                if ((x + (y-i)) % 2 == 0) {\n       \
    \             max_num = x + (y-i)\n                    break\n               \
    \ }\n            }\n        }\n    }\n    \n    return max_num", "    if x < y\
    \ {\n        return -1\n    }\n    \n    var even = Int()\n    var odd = Int()\n\
    \    \n    for i in 0..<(x - y) {\n        if i % 2 == 0 {\n            even =\
    \ even + i\n        } else {\n            odd = odd + i\n        }\n    }\n  \
    \  \n    if even > odd {\n        return even\n    } else {\n        return odd\n\
    \    }", "    if x < y {\n        return -1\n    }\n    if x == y {\n        return\
    \ x\n    }\n    if x % 2 == 0 {\n        return choose_num(x / 2, y)\n    }\n\
    \    if y % 2 == 0 {\n        return choose_num(x, y / 2)\n    }\n    return choose_num(x\
    \ / 2, y / 2)", "    if x < y {\n        return choose_num(y, x)\n    }\n    if\
    \ x == y {\n        return x\n    }\n    if x % 2 == 0 && y % 2 == 0 {\n     \
    \   return x + y\n    }\n    if x % 2 == 0 {\n        return y\n    }\n    if\
    \ y % 2 == 0 {\n        return x\n    }\n    return -1", "    if x <= y {\n  \
    \      return -1\n    }\n    var even: Int = 0\n    var odd: Int = 0\n    var\
    \ x: Int = 0\n    var y: Int = 0\n    var z: Int = 0\n    \n    for z in x ..<\
    \ y {\n        if z % 2 == 0 {\n            even = z\n        } else {\n     \
    \       odd = z\n        }\n    }\n    \n    if even > odd {\n        return even\n\
    \    } else {\n        return odd\n    }", "    if x <= y {\n        return -1\n\
    \    }\n    if x == y {\n        return x\n    }\n    var biggest = y\n    for\
    \ number in stride(from: x, through: y, by: 2) {\n        if number % 2 == 0 {\n\
    \            biggest = number\n        }\n    }\n    return biggest", "    var\
    \ result = -1\n    var x = abs(x)\n    var y = abs(y)\n    if x > y {\n      \
    \  result = x\n    } else {\n        result = y\n    }\n    if result > 0 {\n\
    \        if result % 2 == 0 {\n            result = (result / 2) * 2\n       \
    \ }\n    }\n    return result", "    var result = -1\n    var x = abs(x)\n   \
    \ var y = abs(y)\n    while x >= y {\n        if x % 2 == 0 {\n            x =\
    \ x / 2\n        } else {\n            x = x * 3 + 1\n        }\n    }\n    while\
    \ y >= x {\n        if y % 2 == 0 {\n            y = y / 2\n        } else {\n\
    \            y = y * 3 + 1\n        }\n    }\n    if x == y {\n        result\
    \ = x\n    }\n    return result", "    var result = -1\n    if x > y {\n     \
    \   swap(&x, &y)\n    }\n    for number in stride(from: x, through: y, by: 2)\
    \ {\n        if number % 2 == 0 {\n            if number > result {\n        \
    \        result = number\n            }\n        } else {\n            if number\
    \ < result {\n                result = number\n            }\n        }\n    }\n\
    \    return result", "    if x <= y {\n        return -1\n    }\n    var even:\
    \ Int = 0\n    var odd: Int = 0\n    var x: Int = 0\n    var y: Int = 0\n    var\
    \ evenMax: Int = 0\n    var oddMax: Int = 0\n    var evenMin: Int = 0\n    var\
    \ oddMin: Int = 0\n    var evenMaxCount: Int = 0\n    var oddMaxCount: Int = 0\n\
    \    var evenMinCount: Int = 0\n    var oddMinCount: Int = 0\n    var evenMaxCount2:\
    \ Int = 0\n    var oddMaxCount2: Int = 0\n    var evenMinCount2: Int = 0\n   \
    \ var oddMinCount2: Int = 0\n    var evenMaxCount3: Int = 0\n    var oddMaxCount3:\
    \ Int = 0\n    var evenMinCount3: Int = 0\n    var oddMinCount3: Int = 0\n   \
    \ var evenMaxCount4: Int = 0\n    var oddMaxCount4: Int = 0\n    var evenMinCount4:\
    \ Int = 0\n    var oddMinCount4: Int = 0\n    var evenMaxCount5: Int = 0\n   \
    \ var oddMaxCount5: Int = 0\n    var evenMinCount5: Int = 0\n    var oddMinCount5:\
    \ Int = 0\n    var evenMaxCount6: Int = 0\n    var oddMaxCount6: Int = 0\n   \
    \ var evenMinCount6: Int = 0\n    var oddMinCount6: Int = 0\n    var evenMaxCount7:\
    \ Int = 0\n    var oddMaxCount7: Int = 0\n    var evenMinCount7: Int = 0\n   \
    \ var oddMinCount7: Int = 0\n    var evenMaxCount8: Int = 0\n    var oddMaxCount8:\
    \ Int = 0\n    var evenMinCount8: Int = 0\n    var oddMinCount8: Int = 0\n   \
    \ var evenMaxCount9: Int = 0\n    var oddMaxCount9: Int = 0\n    var evenMinCount9:\
    \ Int = 0\n    var oddMinCount9: Int = 0\n    var evenMaxCount10: Int = 0\n  \
    \  var oddMaxCount10: Int = 0\n    var evenMinCount10: Int = 0\n    var oddMinCount10:\
    \ Int = 0\n    var evenMaxCount11: Int = 0\n    var oddMaxCount11: Int = 0\n \
    \   var evenMinCount11: Int = 0\n    var oddMinCount11: Int = 0\n    var evenMaxCount12:\
    \ Int = 0\n    var oddMaxCount12: Int = 0\n    var evenMinCount12: Int = 0\n \
    \   var oddMinCount12: Int = 0\n    var evenMaxCount13: Int = 0\n    var oddMaxCount13:\
    \ Int = 0\n    var evenMinCount13: Int = 0\n    var oddMinCount13: Int = 0\n \
    \   var evenMaxCount", "    if x <= y {\n        return -1\n    }\n    \n    var\
    \ result: Int = 0\n    \n    for i in 0..<(x-y) {\n        if (((x+y) - i) % 2\
    \ == 0) {\n            result = i\n        }\n    }\n    \n    return result",
  "    if x < y {\n        (x, y) = (y, x)\n    }\n    \n    var even = Int()\n  \
    \  var odd = Int()\n    \n    for i in 0..<x {\n        if i % 2 == 0 {\n    \
    \        even += i\n        } else {\n            odd += i\n        }\n    }\n\
    \    \n    if even > y {\n        return -1\n    }\n    \n    if even < y {\n\
    \        return even\n    }\n    \n    return odd", "    if x <= y {\n       \
    \ return -1\n    }\n    var even = Int()\n    var odd = Int()\n    var x = Int()\n\
    \    var y = Int()\n    for _ in 0..<(x-y) {\n        x = rand()%(x-y)+y\n   \
    \     y = rand()%(x-y)+y\n        if x%2 == 0 {\n            even = even*10+x\n\
    \        } else {\n            odd = odd*10+x\n        }\n    }\n    if even >\
    \ odd {\n        return even\n    } else {\n        return odd\n    }", "    if\
    \ x < y {\n        return choose_num(y, x)\n    }\n    if x == y {\n        return\
    \ x\n    }\n    if x % 2 == 0 {\n        return choose_num(x / 2, y)\n    }\n\
    \    if y % 2 == 0 {\n        return choose_num(x, y / 2)\n    }\n    return -1",
  "    if x > y {\n        (x, y) = (y, x)\n    }\n    \n    var even: Int = 0\n \
    \   var odd: Int = 0\n    \n    for _ in 0..<(x-y) {\n        if x % 2 == 0 {\n\
    \            even += 2\n            x /= 2\n        } else {\n            odd\
    \ += 1\n            x /= 2\n        }\n    }\n    \n    if even > odd {\n    \
    \    return even\n    } else {\n        return odd\n    }", "    var even: Int\
    \ = 0\n    var odd: Int = 0\n    var x: Int = x\n    var y: Int = y\n    \n  \
    \  while x >= y {\n        if x % 2 == 0 {\n            even += x\n        }\n\
    \        else {\n            odd += x\n        }\n        x /= 2\n        y /=\
    \ 2\n    }\n    \n    if even > y {\n        return even\n    }\n    else {\n\
    \        return odd\n    }", "    if x <= y {\n        return -1\n    }\n    \n\
    \    var result = x\n    \n    while result < y {\n        result *= 2\n    }\n\
    \    \n    while result > y {\n        result /= 2\n    }\n    \n    return result",
  "    var result = -1\n    var xEven: Bool = false\n    var yEven: Bool = false\n\
    \    var xEvenCount: Int = 0\n    var yEvenCount: Int = 0\n    var xEvenMax: Int\
    \ = 0\n    var yEvenMax: Int = 0\n    var xEvenMin: Int = 0\n    var yEvenMin:\
    \ Int = 0\n    var xEvenMaxCount: Int = 0\n    var yEvenMaxCount: Int = 0\n  \
    \  var xEvenMinCount: Int = 0\n    var yEvenMinCount: Int = 0\n    var xEvenMaxSum:\
    \ Int = 0\n    var yEvenMaxSum: Int = 0\n    var xEvenMinSum: Int = 0\n    var\
    \ yEvenMinSum: Int = 0\n    var xEvenMaxSumCount: Int = 0\n    var yEvenMaxSumCount:\
    \ Int = 0\n    var xEvenMinSumCount: Int = 0\n    var yEvenMinSumCount: Int =\
    \ 0\n    var xEvenMaxSumSum: Int = 0\n    var yEvenMaxSumSum: Int = 0\n    var\
    \ xEvenMinSumSum: Int = 0\n    var yEvenMinSumSum: Int = 0\n    var xEvenMaxSumSumCount:\
    \ Int = 0\n    var yEvenMaxSumSumCount: Int = 0\n    var xEvenMinSumSumCount:\
    \ Int = 0\n    var yEvenMinSumSumCount: Int = 0\n    var xEvenMaxSumSumSum: Int\
    \ = 0\n    var yEvenMaxSumSumSum: Int = 0\n    var xEvenMinSumSumSum: Int = 0\n\
    \    var yEvenMinSumSumSum: Int = 0\n    var xEvenMaxSumSumSumCount: Int = 0\n\
    \    var yEvenMaxSumSumSumCount: Int = 0\n    var xEvenMinSumSumSumCount: Int\
    \ = 0\n    var yEvenMinSumSumSumCount: Int = 0\n    var xEvenMaxSumSumSumSum:\
    \ Int = 0\n    var yEvenMaxSumSumSumSum: Int = 0\n    var xEvenMinSumSumSumSum:\
    \ Int = 0\n    var yEvenMinSumSumSumSum: Int = 0\n    var xEvenMaxSumSumSumSumCount:\
    \ Int = 0\n    var yEvenMaxSumSumSumSumCount: Int = 0\n    var xEvenMinSumSumSumSumCount:\
    \ Int = 0\n    var yEvenMinSumSumSumSumCount: Int = 0\n    var xEvenMaxSumSumSumSumSum:\
    \ Int = 0\n    var yEvenMaxSumSumSumSumSum: Int = 0\n    var xEvenMinSumSumSumSumSum:\
    \ Int = 0\n    var yEvenMinSumSumSumSumSum: Int = 0\n    var xEvenMaxSumSum",
  "    if x <= y {\n        return -1\n    }\n    var even: Int = 0\n    var odd:\
    \ Int = 0\n    var x: Int = 0\n    var y: Int = 0\n    var evenMax: Int = 0\n\
    \    var oddMax: Int = 0\n    var evenMin: Int = 0\n    var oddMin: Int = 0\n\
    \    var evenMaxCount: Int = 0\n    var oddMaxCount: Int = 0\n    var evenMinCount:\
    \ Int = 0\n    var oddMinCount: Int = 0\n    var evenMaxCount2: Int = 0\n    var\
    \ oddMaxCount2: Int = 0\n    var evenMinCount2: Int = 0\n    var oddMinCount2:\
    \ Int = 0\n    var evenMaxCount3: Int = 0\n    var oddMaxCount3: Int = 0\n   \
    \ var evenMinCount3: Int = 0\n    var oddMinCount3: Int = 0\n    var evenMaxCount4:\
    \ Int = 0\n    var oddMaxCount4: Int = 0\n    var evenMinCount4: Int = 0\n   \
    \ var oddMinCount4: Int = 0\n    var evenMaxCount5: Int = 0\n    var oddMaxCount5:\
    \ Int = 0\n    var evenMinCount5: Int = 0\n    var oddMinCount5: Int = 0\n   \
    \ var evenMaxCount6: Int = 0\n    var oddMaxCount6: Int = 0\n    var evenMinCount6:\
    \ Int = 0\n    var oddMinCount6: Int = 0\n    var evenMaxCount7: Int = 0\n   \
    \ var oddMaxCount7: Int = 0\n    var evenMinCount7: Int = 0\n    var oddMinCount7:\
    \ Int = 0\n    var evenMaxCount8: Int = 0\n    var oddMaxCount8: Int = 0\n   \
    \ var evenMinCount8: Int = 0\n    var oddMinCount8: Int = 0\n    var evenMaxCount9:\
    \ Int = 0\n    var oddMaxCount9: Int = 0\n    var evenMinCount9: Int = 0\n   \
    \ var oddMinCount9: Int = 0\n    var evenMaxCount10: Int = 0\n    var oddMaxCount10:\
    \ Int = 0\n    var evenMinCount10: Int = 0\n    var oddMinCount10: Int = 0\n \
    \   var evenMaxCount11: Int = 0\n    var oddMaxCount11: Int = 0\n    var evenMinCount11:\
    \ Int = 0\n    var oddMinCount11: Int = 0\n    var evenMaxCount12: Int = 0\n \
    \   var oddMaxCount12: Int = 0\n    var evenMinCount12: Int = 0\n    var oddMinCount12:\
    \ Int = 0\n    var evenMaxCount13: Int = 0\n    var oddMaxCount13: Int = 0\n \
    \   var evenMinCount13: Int = 0\n    var oddMinCount13: Int = 0\n    var evenMaxCount",
  "    if x <= y {\n        return -1\n    }\n    if x == y {\n        return x\n\
    \    }\n    if x % 2 == 0 && y % 2 == 0 {\n        return (x * y) / 2\n    }\n\
    \    if x % 2 == 0 {\n        return x / 2\n    }\n    return y / 2", "    if\
    \ x <= y {\n        return -1\n    }\n    var result: Int = 0\n    var x: Int\n\
    \    var y: Int\n    for (x = y; x > x; x--) { \n        if x % 2 == 0 {\n   \
    \         result = x\n            break\n        }\n    }\n    return result",
  "    if x <= y {\n        return -1\n    }\n    var result = x\n    for _ in 0..<y\
    \ {\n        if result % 2 == 0 {\n            return result\n        }\n    \
    \    result /= 2\n    }\n    return -1", "    if x < y {\n        return -1\n\
    \    }\n    \n    var biggest = y\n    \n    for _ in 0..<(x-y) {\n        biggest\
    \ = biggest * 2\n    }\n    \n    return biggest", "    if x < y {\n        return\
    \ choose_num(y, x)\n    }\n    if x == y {\n        return x\n    }\n    if x\
    \ % 2 == 0 {\n        return choose_num(x / 2, y)\n    }\n    if y % 2 == 0 {\n\
    \        return choose_num(x, y / 2)\n    }\n    if x > y {\n        return -1\n\
    \    }\n    return choose_num(x / 2, y / 2)", "    if x <= y {\n        return\
    \ -1\n    }\n    var biggest = Int()\n    for num in 1...y {\n        if num %\
    \ 2 == 0 {\n            if biggest < num {\n                biggest = num\n  \
    \          }\n        }\n    }\n    return biggest", "    if x <= y {\n      \
    \  return -1\n    }\n    if x == y {\n        return x\n    }\n    if x % 2 ==\
    \ 0 {\n        return choose_num(x / 2, y)\n    }\n    if y % 2 == 0 {\n     \
    \   return choose_num(x, y / 2)\n    }\n    return choose_num(x / 2, y / 2)",
  "    if x < y {\n        (x, y) = (y, x)\n    }\n    \n    var even: Int = 0\n \
    \   var odd: Int = 0\n    \n    for _ in 0..<(x-y) {\n        even += 2\n    \
    \    odd += 2\n    }\n    \n    if even > y {\n        return even\n    }\n  \
    \  \n    if odd > y {\n        return -1\n    }\n    \n    return odd", "    if\
    \ x < y {\n        return choose_num(y, x)\n    }\n    if x == y {\n        return\
    \ x\n    }\n    if x % 2 == 0 && y % 2 == 0 {\n        return x + y\n    }\n \
    \   if x % 2 == 0 && y % 2 != 0 {\n        return x - y\n    }\n    if x % 2 !=\
    \ 0 && y % 2 == 0 {\n        return x - y\n    }\n    if x % 2 != 0 && y % 2 !=\
    \ 0 {\n        return x + y\n    }\n    return -1", "    if x < y {\n        return\
    \ -1\n    }\n    if x == y {\n        return x\n    }\n    if x % 2 == 0 && y\
    \ % 2 == 0 {\n        return x + (y - x)\n    }\n    if x % 2 == 0 && y % 2 !=\
    \ 0 {\n        return -1\n    }\n    if x % 2 != 0 && y % 2 == 0 {\n        return\
    \ -1\n    }\n    if x % 2 != 0 && y % 2 != 0 {\n        return x + (y - x)\n \
    \   }\n    return -1", "    if x < y {\n        return -1\n    }\n    \n    var\
    \ result = x\n    \n    for _ in 0..<y {\n        if result % 2 == 0 {\n     \
    \       result = result / 2\n        } else {\n            return -1\n       \
    \ }\n    }\n    \n    return result", "    if x < y {\n        return choose_num(y,\
    \ x)\n    }\n    \n    if x == y {\n        return x\n    }\n    \n    if x %\
    \ 2 == 0 {\n        return choose_num(x / 2, y)\n    }\n    \n    if y % 2 ==\
    \ 0 {\n        return choose_num(x, y / 2)\n    }\n    \n    return -1", "   \
    \ if x <= y {\n        return -1\n    }\n    var result = x\n    var remainder\
    \ = y\n    while remainder > 0 {\n        if remainder % 2 == 0 {\n          \
    \  result = remainder\n            break\n        }\n        remainder /= 2\n\
    \    }\n    return result", "    if x <= 0 || y <= 0 {\n        return -1\n  \
    \  }\n    var even: Int = 0\n    var odd: Int = 0\n    var x: Int\n    var y:\
    \ Int\n    for x = 1; x <= y; x++ {\n        if x % 2 == 0 {\n            even++\n\
    \        } else {\n            odd++\n        }\n    }\n    if even > odd {\n\
    \        return even\n    } else {\n        return odd\n    }", "    var result\
    \ = -1\n    var x = abs(x)\n    var y = abs(y)\n    while x <= y {\n        if\
    \ x % 2 == 0 && y % 2 == 0 {\n            if x > y {\n                result =\
    \ x\n            } else {\n                result = y\n            }\n       \
    \     break\n        }\n        x += 1\n        y -= 1\n    }\n    return result",
  "    if x > y {\n        return -1\n    }\n    \n    var even: Int = 0\n    var\
    \ odd: Int = 0\n    \n    for i in 0..<(x - y) {\n        if i % 2 == 0 {\n  \
    \          even += i\n        } else {\n            odd += i\n        }\n    }\n\
    \    \n    if even > odd {\n        return even\n    } else {\n        return\
    \ odd\n    }", "    if x <= y {\n        return -1\n    }\n    var even = 0\n\
    \    var odd = 0\n    var x = x - 1\n    var y = y - 1\n    while x > 0 {\n  \
    \      if x % 2 == 0 {\n            even = even + x\n        }\n        x = x\
    \ / 2\n    }\n    while y > 0 {\n        if y % 2 == 0 {\n            odd = odd\
    \ + y\n        }\n        y = y / 2\n    }\n    if even > odd {\n        return\
    \ even\n    }\n    return odd", "    if x <= y {\n        return -1\n    }\n \
    \   \n    var result = x\n    \n    for _ in 0..<y {\n        if result % 2 ==\
    \ 0 {\n            result = result / 2\n        } else {\n            result =\
    \ result * 3 + 1\n        }\n    }\n    \n    return result", "    var result\
    \ = -1\n    var x = abs(x)\n    var y = abs(y)\n    while x <= y {\n        if\
    \ x % 2 == 0 && y % 2 == 0 {\n            result = x\n            break\n    \
    \    }\n        x /= 2\n        y /= 2\n    }\n    return result", "    if x <\
    \ y {\n        return choose_num(y, x)\n    }\n    if x == y {\n        return\
    \ x\n    }\n    if x % 2 == 0 && y % 2 == 0 {\n        return x + (y - x)\n  \
    \  }\n    if x % 2 == 0 {\n        return y\n    }\n    if y % 2 == 0 {\n    \
    \    return x\n    }\n    return -1", "    var result = -1\n    var remainder\
    \ = x % y\n    while remainder != 0 {\n        if remainder % 2 == 0 {\n     \
    \       result = remainder\n            break\n        }\n        remainder =\
    \ remainder / 2\n    }\n    return result", "    if x < y {\n        return -1\n\
    \    }\n    if x == y {\n        return x\n    }\n    if x % 2 == 0 {\n      \
    \  return choose_num(x: x, y: y - 1)\n    }\n    if y % 2 == 0 {\n        return\
    \ choose_num(x: x - 1, y: y)\n    }\n    return choose_num(x: x - 1, y: y - 1)",
  "    if x <= y {\n        return -1\n    }\n    var biggest = y\n    for num in\
    \ stride(from: x, through: y, by: 2) {\n        if num % 2 == 0 {\n          \
    \  biggest = num\n        }\n    }\n    return biggest", "    if x < y {\n   \
    \     return -1\n    }\n    var even: Int = 0\n    var odd: Int = 0\n    var x:\
    \ Int = 0\n    var y: Int = 0\n    \n    while x < y {\n        if x % 2 == 0\
    \ {\n            even = even + x\n        }\n        else {\n            odd =\
    \ odd + x\n        }\n        x = x + 1\n    }\n    if even > odd {\n        return\
    \ even\n    }\n    return odd", "    if x < y {\n        (x, y) = (y, x)\n   \
    \ }\n    \n    var even: Int = 0\n    var odd: Int = 0\n    \n    for _ in 0..<(x-y)\
    \ {\n        let x = random(y)\n        let y = random(x)\n        if x % 2 ==\
    \ 0 && y % 2 == 0 {\n            even = x + y\n            break\n        }\n\
    \        \n        if x % 2 != 0 && y % 2 != 0 {\n            odd = x + y\n  \
    \          break\n        }\n    }\n    \n    if even > odd {\n        return\
    \ even\n    } else {\n        return odd\n    }", "    if x < y {\n        return\
    \ choose_num(y, x)\n    }\n    \n    if x == y {\n        return x\n    }\n  \
    \  \n    if x % 2 == 0 && y % 2 == 0 {\n        return x + y\n    }\n    \n  \
    \  if x % 2 == 0 && y % 2 != 0 {\n        return y\n    }\n    \n    if x % 2\
    \ != 0 && y % 2 == 0 {\n        return x\n    }\n    \n    if x % 2 != 0 && y\
    \ % 2 != 0 {\n        return y\n    }\n    \n    return -1", "    if x < y {\n\
    \        return choose_num(y, x)\n    }\n    \n    if x == y {\n        return\
    \ x\n    }\n    \n    if x % 2 == 0 && y % 2 == 0 {\n        return x + (y - x)\n\
    \    }\n    \n    if x % 2 == 0 {\n        return y\n    }\n    \n    return -1",
  "    if x < y {\n        return choose_num(y, x)\n    }\n    \n    var result =\
    \ x\n    \n    for _ in 0..<y {\n        if result % 2 == 0 {\n            return\
    \ result\n        }\n        result += 1\n    }\n    \n    return -1", "    if\
    \ x <= y {\n        return -1\n    }\n    var result = x\n    var remainder =\
    \ y\n    while remainder > 0 {\n        if remainder % 2 == 0 {\n            result\
    \ = result + 1\n        }\n        remainder = remainder / 2\n    }\n    return\
    \ result", "    if x < y {\n        (x, y) = (y, x)\n    }\n    var result = -1\n\
    \    var x = x - 1\n    var y = y - 1\n    while x >= y {\n        if x % 2 ==\
    \ 0 {\n            result = x\n            break\n        }\n        x /= 2\n\
    \    }\n    return result", "    if x <= y {\n        return -1\n    }\n    var\
    \ result = x\n    var remainder = y\n    while remainder > 0 {\n        if remainder\
    \ % 2 == 0 {\n            result = result + 1\n        }\n        remainder =\
    \ remainder / 2\n    }\n    return result", "    if x <= y {\n        return -1\n\
    \    }\n    if x == y {\n        return x\n    }\n    if x % 2 == 0 && y % 2 ==\
    \ 0 {\n        return (x * y) / 2\n    }\n    if x % 2 == 0 {\n        return\
    \ x / 2\n    }\n    if y % 2 == 0 {\n        return y / 2\n    }\n    return -1",
  "    if x < y {\n        return choose_num(y, x)\n    }\n    if x == y {\n     \
    \   return x\n    }\n    if x % 2 == 0 && y % 2 == 0 {\n        return x + (y\
    \ - x)\n    }\n    if x % 2 == 0 && y % 2 != 0 {\n        return -1\n    }\n \
    \   if x % 2 != 0 && y % 2 == 0 {\n        return -1\n    }\n    if x % 2 != 0\
    \ && y % 2 != 0 {\n        return -1\n    }\n    return -1", "    if x < y {\n\
    \        return choose_num(y, x)\n    }\n    if x == y {\n        return x\n \
    \   }\n    if x % 2 == 0 {\n        return choose_num(x / 2, y)\n    }\n    if\
    \ y % 2 == 0 {\n        return choose_num(x, y / 2)\n    }\n    if x > y {\n \
    \       return -1\n    }\n    return choose_num(x / 2, y / 2)", "    if x <= y\
    \ {\n        return -1\n    }\n    if x == y {\n        return x\n    }\n    if\
    \ x % 2 == 0 {\n        return choose_num(x / 2, y)\n    }\n    return choose_num(x,\
    \ y / 2)", "    if x <= y {\n        return -1\n    }\n    var result = x\n  \
    \  var remainder = y\n    while remainder > 0 {\n        if remainder % 2 == 0\
    \ {\n            result = result * 10 + remainder / 2\n        }\n        remainder\
    \ = remainder / 2\n    }\n    return result", "    var result = -1\n    var x\
    \ = abs(x)\n    var y = abs(y)\n    var x_even = x % 2 == 0\n    var y_even =\
    \ y % 2 == 0\n    if x_even && y_even {\n        if x > y {\n            result\
    \ = x\n        } else {\n            result = y\n        }\n    } else if x_even\
    \ {\n        result = x\n    } else if y_even {\n        result = y\n    } else\
    \ {\n        if x > y {\n            result = x\n        } else {\n          \
    \  result = y\n        }\n    }\n    return result", "    if x < y {\n       \
    \ return choose_num(y, x)\n    }\n    if x == y {\n        return x\n    }\n \
    \   if x % 2 == 0 {\n        return choose_num(x / 2, y)\n    }\n    return choose_num(x\
    \ / 2 + 1, y)", "    if x <= y {\n        return -1\n    }\n    var even: Int\
    \ = 0\n    var odd: Int = 0\n    var x: Int = 0\n    var y: Int = 0\n    var evenMax:\
    \ Int = 0\n    var oddMax: Int = 0\n    var evenMin: Int = 0\n    var oddMin:\
    \ Int = 0\n    var evenMaxCount: Int = 0\n    var oddMaxCount: Int = 0\n    var\
    \ evenMinCount: Int = 0\n    var oddMinCount: Int = 0\n    var evenMaxCount2:\
    \ Int = 0\n    var oddMaxCount2: Int = 0\n    var evenMinCount2: Int = 0\n   \
    \ var oddMinCount2: Int = 0\n    var evenMaxCount3: Int = 0\n    var oddMaxCount3:\
    \ Int = 0\n    var evenMinCount3: Int = 0\n    var oddMinCount3: Int = 0\n   \
    \ var evenMaxCount4: Int = 0\n    var oddMaxCount4: Int = 0\n    var evenMinCount4:\
    \ Int = 0\n    var oddMinCount4: Int = 0\n    var evenMaxCount5: Int = 0\n   \
    \ var oddMaxCount5: Int = 0\n    var evenMinCount5: Int = 0\n    var oddMinCount5:\
    \ Int = 0\n    var evenMaxCount6: Int = 0\n    var oddMaxCount6: Int = 0\n   \
    \ var evenMinCount6: Int = 0\n    var oddMinCount6: Int = 0\n    var evenMaxCount7:\
    \ Int = 0\n    var oddMaxCount7: Int = 0\n    var evenMinCount7: Int = 0\n   \
    \ var oddMinCount7: Int = 0\n    var evenMaxCount8: Int = 0\n    var oddMaxCount8:\
    \ Int = 0\n    var evenMinCount8: Int = 0\n    var oddMinCount8: Int = 0\n   \
    \ var evenMaxCount9: Int = 0\n    var oddMaxCount9: Int = 0\n    var evenMinCount9:\
    \ Int = 0\n    var oddMinCount9: Int = 0\n    var evenMaxCount10: Int = 0\n  \
    \  var oddMaxCount10: Int = 0\n    var evenMinCount10: Int = 0\n    var oddMinCount10:\
    \ Int = 0\n    var evenMaxCount11: Int = 0\n    var oddMaxCount11: Int = 0\n \
    \   var evenMinCount11: Int = 0\n    var oddMinCount11: Int = 0\n    var evenMaxCount12:\
    \ Int = 0\n    var oddMaxCount12: Int = 0\n    var evenMinCount12: Int = 0\n \
    \   var oddMinCount12: Int = 0\n    var evenMaxCount13: Int = 0\n    var oddMaxCount13:\
    \ Int = 0\n    var evenMinCount13: Int = 0\n    var oddMinCount13: Int = 0\n \
    \   var evenMaxCount", "    if x < y {\n        return -1\n    }\n    var result\
    \ = x\n    var remainder = y\n    while remainder > 0 {\n        if remainder\
    \ % 2 == 0 {\n            result = result * 10 + remainder / 2\n        }\n  \
    \      remainder = remainder / 2\n    }\n    return result", "    if x < y {\n\
    \        return -1\n    }\n    if x == y {\n        return x\n    }\n    if x\
    \ % 2 == 0 {\n        return choose_num(x / 2, y)\n    }\n    return choose_num(x,\
    \ y / 2)", "    if x <= y {\n        return -1\n    }\n    if x > y {\n      \
    \  return -1\n    }\n    var even: Int = 0\n    var odd: Int = 0\n    var x: Int\
    \ = 0\n    var y: Int = 0\n    var evenMax: Int = 0\n    var oddMax: Int = 0\n\
    \    var evenMin: Int = 0\n    var oddMin: Int = 0\n    var evenMaxCount: Int\
    \ = 0\n    var oddMaxCount: Int = 0\n    var evenMinCount: Int = 0\n    var oddMinCount:\
    \ Int = 0\n    var evenMaxCount2: Int = 0\n    var oddMaxCount2: Int = 0\n   \
    \ var evenMinCount2: Int = 0\n    var oddMinCount2: Int = 0\n    var evenMaxCount3:\
    \ Int = 0\n    var oddMaxCount3: Int = 0\n    var evenMinCount3: Int = 0\n   \
    \ var oddMinCount3: Int = 0\n    var evenMaxCount4: Int = 0\n    var oddMaxCount4:\
    \ Int = 0\n    var evenMinCount4: Int = 0\n    var oddMinCount4: Int = 0\n   \
    \ var evenMaxCount5: Int = 0\n    var oddMaxCount5: Int = 0\n    var evenMinCount5:\
    \ Int = 0\n    var oddMinCount5: Int = 0\n    var evenMaxCount6: Int = 0\n   \
    \ var oddMaxCount6: Int = 0\n    var evenMinCount6: Int = 0\n    var oddMinCount6:\
    \ Int = 0\n    var evenMaxCount7: Int = 0\n    var oddMaxCount7: Int = 0\n   \
    \ var evenMinCount7: Int = 0\n    var oddMinCount7: Int = 0\n    var evenMaxCount8:\
    \ Int = 0\n    var oddMaxCount8: Int = 0\n    var evenMinCount8: Int = 0\n   \
    \ var oddMinCount8: Int = 0\n    var evenMaxCount9: Int = 0\n    var oddMaxCount9:\
    \ Int = 0\n    var evenMinCount9: Int = 0\n    var oddMinCount9: Int = 0\n   \
    \ var evenMaxCount10: Int = 0\n    var oddMaxCount10: Int = 0\n    var evenMinCount10:\
    \ Int = 0\n    var oddMinCount10: Int = 0\n    var evenMaxCount11: Int = 0\n \
    \   var oddMaxCount11: Int = 0\n    var evenMinCount11: Int = 0\n    var oddMinCount11:\
    \ Int = 0\n    var evenMaxCount12: Int = 0\n    var oddMaxCount12: Int = 0\n \
    \   var evenMinCount12: Int = 0\n    var oddMinCount12: Int = 0\n    var evenMaxCount13:\
    \ Int = 0\n    var oddMaxCount13: Int = 0\n    var evenMinCount13: Int = 0\n \
    \   var oddMin", "    if x < y {\n        return -1\n    }\n    \n    var even:\
    \ Int = 0\n    var odd: Int = 0\n    \n    for i in 0..<(x-y) {\n        if (x-y)\
    \ < (i+1) {\n            even = even * 10 + i\n        } else {\n            odd\
    \ = odd * 10 + i\n        }\n    }\n    \n    if even > 0 {\n        return even\n\
    \    } else {\n        return odd\n    }", "    var even = Int()\n    var odd\
    \ = Int()\n    var result = Int()\n    \n    if x > y {\n        even = choose_num(y,\
    \ x)\n        odd = choose_num(x, y)\n    } else {\n        even = choose_num(x,\
    \ y)\n        odd = choose_num(y, x)\n    }\n    \n    if even % 2 == 0 {\n  \
    \      result = even\n    } else {\n        result = odd\n    }\n    \n    return\
    \ result", "    if x > y {\n        (x, y) = (y, x)\n    }\n    var even: Int\
    \ = 0\n    var odd: Int = 0\n    var x: Int = 0\n    var y: Int = 0\n    var evenMax:\
    \ Int = 0\n    var oddMax: Int = 0\n    while x <= y {\n        if x % 2 == 0\
    \ {\n            even = even * 2 + x\n            if even > evenMax {\n      \
    \          evenMax = even\n            }\n        } else {\n            odd =\
    \ odd * 2 + x\n            if odd > oddMax {\n                oddMax = odd\n \
    \           }\n        }\n        x += 1\n        y += 1\n    }\n    if evenMax\
    \ == 0 {\n        return -1\n    }\n    if evenMax < x {\n        return evenMax\n\
    \    }\n    return evenMax", "    if x > y {\n        return -1\n    }\n    var\
    \ even: Int = 0\n    var odd: Int = 0\n    var x: Int = x\n    var y: Int = y\n\
    \    while x > 0 {\n        if x % 2 == 0 {\n            even = even + x\n   \
    \     }\n        else {\n            odd = odd + x\n        }\n        x = x /\
    \ 2\n    }\n    while y > 0 {\n        if y % 2 == 0 {\n            even = even\
    \ + y\n        }\n        else {\n            odd = odd + y\n        }\n     \
    \   y = y / 2\n    }\n    if even > odd {\n        return even\n    }\n    return\
    \ odd", "    if x <= 0 || y <= 0 {\n        return -1\n    }\n    if x > y {\n\
    \        x, y = y, x\n    }\n    var result: Int = 0\n    var remainder: Int =\
    \ 0\n    while y > 0 {\n        remainder = x % y\n        result = remainder\
    \ + result\n        x /= y\n        y /= 2\n    }\n    if x == 0 {\n        result\
    \ = 1\n    }\n    return result", "    if x <= y {\n        return -1\n    }\n\
    \    var result = x\n    var remainder = y\n    while remainder > 0 {\n      \
    \  if remainder % 2 == 0 {\n            result = remainder\n            break\n\
    \        }\n        remainder /= 2\n    }\n    return result", "    if x <= y\
    \ {\n        return -1\n    }\n    if x == y {\n        return x\n    }\n    if\
    \ x <= 0 || y <= 0 {\n        return -1\n    }\n    var even: Int = 0\n    var\
    \ odd: Int = 0\n    var x: Int\n    var y: Int\n    for x in stride(from: x, through:\
    \ y, by: 2) {\n        if x % 2 == 0 {\n            even = even + x\n        }\
    \ else {\n            odd = odd + x\n        }\n    }\n    if even > odd {\n \
    \       return even\n    } else {\n        return odd\n    }", "    if x < y {\n\
    \        return -1\n    }\n    if x == y {\n        return x\n    }\n    if x\
    \ % 2 == 0 && y % 2 == 0 {\n        return x + (y - x)\n    }\n    if x % 2 ==\
    \ 0 {\n        return x + (y - x) / 2\n    }\n    if y % 2 == 0 {\n        return\
    \ (y + x) / 2\n    }\n    return -1", "    if x <= y {\n        return -1\n  \
    \  }\n    var even: Int = 0\n    var odd: Int = 0\n    var x: Int = 0\n    var\
    \ y: Int = 0\n    for x in stride(from: x, to: y, by: 2) {\n        if x % 2 ==\
    \ 0 {\n            even += x\n        } else {\n            odd += x\n       \
    \ }\n    }\n    if even > odd {\n        return even\n    } else {\n        return\
    \ odd\n    }", "    if x < y {\n        return -1\n    }\n    if x == y {\n  \
    \      return x\n    }\n    if x % 2 == 0 {\n        return choose_num(x / 2,\
    \ y)\n    }\n    if y % 2 == 0 {\n        return choose_num(x, y / 2)\n    }\n\
    \    return choose_num(x / 2, y / 2)", "    var result = -1\n    if x > y {\n\
    \        let tmp = x\n        x = y\n        y = tmp\n    }\n    if x % 2 == 0\
    \ {\n        if y % 2 == 0 {\n            result = x\n        } else {\n     \
    \       result = y\n        }\n    } else {\n        if y % 2 == 0 {\n       \
    \     result = y\n        } else {\n            result = x\n        }\n    }\n\
    \    return result", "    var result = -1\n    var x = x - 1\n    var y = y -\
    \ 1\n    while x >= y {\n        if x % 2 == 0 {\n            result = x\n   \
    \         break\n        }\n        x = x - 1\n    }\n    while y >= x {\n   \
    \     if y % 2 == 0 {\n            result = y\n            break\n        }\n\
    \        y = y - 1\n    }\n    return result", "    var result = -1\n    var x\
    \ = x - 1\n    var y = y - 1\n    var even = 1\n    var odd = 0\n    while x >=\
    \ 0 && y >= 0 {\n        if x % 2 == 0 && y % 2 == 0 {\n            if even >\
    \ result {\n                result = even\n            }\n            even = even\
    \ + 2\n        } else {\n            if odd > result {\n                result\
    \ = odd\n            }\n            odd = odd + 1\n        }\n        x = x -\
    \ 1\n        y = y - 1\n    }\n    return result", "    if x < y {\n        return\
    \ -1\n    }\n    if x == y {\n        return x\n    }\n    if x % 2 == 0 {\n \
    \       return choose_num(x / 2, y)\n    }\n    return choose_num(x, y / 2)",
  "    if x < y {\n        (x, y) = (y, x)\n    }\n    var result = -1\n    var x\
    \ = x - 1\n    var y = y - 1\n    while x >= y {\n        if x % 2 == 0 {\n  \
    \          result = x\n            break\n        }\n        x = x - 1\n    }\n\
    \    return result", "    if x < y {\n        return -1\n    }\n    \n    var\
    \ even: Int = 0\n    var odd: Int = 0\n    \n    for i in 0..<x {\n        if\
    \ i % 2 == 0 {\n            even += i\n        } else {\n            odd += i\n\
    \        }\n    }\n    \n    if even > y {\n        return even\n    } else {\n\
    \        return odd\n    }", "    if x < y {\n        (x, y) = (y, x)\n    }\n\
    \    var even: Int = 0\n    var odd: Int = 0\n    var x: Int = 0\n    var y: Int\
    \ = 0\n    while x < y {\n        even = even + x\n        odd = odd + y\n   \
    \     if even > odd {\n            x = x + 1\n        } else {\n            y\
    \ = y + 1\n        }\n    }\n    if even > odd {\n        return even\n    } else\
    \ {\n        return -1\n    }", "    if x <= y {\n        return -1\n    }\n \
    \   var max_num = x\n    var min_num = y\n    while max_num < min_num {\n    \
    \    max_num += 2\n        min_num -= 2\n    }\n    while max_num > min_num {\n\
    \        if max_num % 2 == 0 {\n            max_num -= 2\n        } else {\n \
    \           max_num -= 1\n        }\n    }\n    return max_num", "    var result\
    \ = -1\n    \n    if x >= y {\n        result = x\n    } else {\n        result\
    \ = y\n    }\n    \n    while result % 2 == 0 {\n        result = result / 2\n\
    \    }\n    \n    return result", "    if x <= y {\n        return -1\n    }\n\
    \    var even: Int = 0\n    var odd: Int = 0\n    var x: Int = 0\n    var y: Int\
    \ = 0\n    var evenMax: Int = 0\n    var oddMax: Int = 0\n    var evenMin: Int\
    \ = 0\n    var oddMin: Int = 0\n    var evenMaxCount: Int = 0\n    var oddMaxCount:\
    \ Int = 0\n    var evenMinCount: Int = 0\n    var oddMinCount: Int = 0\n    var\
    \ evenMaxSum: Int = 0\n    var oddMaxSum: Int = 0\n    var evenMinSum: Int = 0\n\
    \    var oddMinSum: Int = 0\n    var evenMaxAvg: Int = 0\n    var oddMaxAvg: Int\
    \ = 0\n    var evenMinAvg: Int = 0\n    var oddMinAvg: Int = 0\n    var evenMaxMax:\
    \ Int = 0\n    var oddMaxMax: Int = 0\n    var evenMinMax: Int = 0\n    var oddMinMax:\
    \ Int = 0\n    var evenMaxMin: Int = 0\n    var oddMaxMin: Int = 0\n    var evenMaxMaxCount:\
    \ Int = 0\n    var oddMaxMaxCount: Int = 0\n    var evenMinMaxCount: Int = 0\n\
    \    var oddMinMaxCount: Int = 0\n    var evenMaxMinCount: Int = 0\n    var oddMinMaxCount:\
    \ Int = 0\n    var evenMaxSum: Int = 0\n    var oddMaxSum: Int = 0\n    var evenMinSum:\
    \ Int = 0\n    var oddMinSum: Int = 0\n    var evenMaxAvg: Int = 0\n    var oddMaxAvg:\
    \ Int = 0\n    var evenMinAvg: Int = 0\n    var oddMinAvg: Int = 0\n    var evenMaxMax:\
    \ Int = 0\n    var oddMaxMax: Int = 0\n    var evenMinMax: Int = 0\n    var oddMinMax:\
    \ Int = 0\n    var evenMaxMin: Int = 0\n    var oddMaxMin: Int = 0\n    var evenMaxMaxCount:\
    \ Int = 0\n    var oddMaxMaxCount: Int = 0\n    var evenMinMaxCount: Int = 0\n\
    \    var oddMinMaxCount: Int = 0\n    var evenMaxMinCount: Int = 0\n    var oddMinMaxCount:\
    \ Int = 0\n    var evenMaxSum: Int = 0\n    var oddMaxSum: Int = 0\n    var evenMinSum:\
    \ Int = 0\n    var oddMinSum: Int = 0\n    var evenMaxAvg: Int = 0\n    var oddMaxAvg:\
    \ Int = 0\n    var evenMinAvg: Int = 0\n    var oddMinAvg: Int = 0\n    var evenMaxMax:\
    \ Int = 0\n    var oddMaxMax: Int = 0\n    var evenMinMax: Int = 0\n", "    if\
    \ x <= 0 || y <= 0 {\n        return -1\n    }\n    if x == y {\n        return\
    \ x\n    }\n    if x > y {\n        return choose_num(y, x)\n    }\n    var even:\
    \ Int = 0\n    var odd: Int = 0\n    var x: Int\n    var y: Int\n    for x = 1;\
    \ x <= y; x++ {\n        if x % 2 == 0 {\n            even++\n        } else {\n\
    \            odd++\n        }\n    }\n    if even > odd {\n        return even\n\
    \    } else {\n        return odd\n    }", "    if x < y {\n        return -1\n\
    \    }\n    if x == y {\n        return x\n    }\n    var biggest = y\n    for\
    \ num in stride(from: x, through: y, by: 2) {\n        if num % 2 == 0 {\n   \
    \         biggest = num\n        }\n    }\n    return biggest", "    if x <= y\
    \ {\n        return -1\n    }\n    var even = Int()\n    var odd = Int()\n   \
    \ var result = Int()\n    \n    if x % 2 == 0 {\n        even = x\n    } else\
    \ {\n        even = y\n    }\n    \n    if even > y {\n        even = y\n    }\n\
    \    \n    if even > x {\n        even = x\n    }\n    \n    if even > y {\n \
    \       even = y\n    }\n    \n    if even > x {\n        even = x\n    }\n  \
    \  \n    if even > y {\n        even = y\n    }\n    \n    if even > x {\n   \
    \     even = x\n    }\n    \n    if even > y {\n        even = y\n    }\n    \n\
    \    if even > x {\n        even = x\n    }\n    \n    if even > y {\n       \
    \ even = y\n    }\n    \n    if even > x {\n        even = x\n    }\n    \n  \
    \  if even > y {\n        even = y\n    }\n    \n    if even > x {\n        even\
    \ = x\n    }\n    \n    if even > y {\n        even = y\n    }\n    \n    if even\
    \ > x {\n        even = x\n    }\n    \n    if even > y {\n        even = y\n\
    \    }\n    \n    if even > x {\n        even = x\n    }\n    \n    if even >\
    \ y {\n        even = y\n    }\n    \n    if even > x {\n        even = x\n  \
    \  }\n    \n    if even > y {\n        even = y\n    }\n    \n    if even > x\
    \ {\n        even = x\n    }\n    \n    if even > y {\n        even = y\n    }\n\
    \    \n    if even > x {\n        even = x\n    }\n    \n    if even > y {\n \
    \       even = y\n    }\n    \n    if even > x {\n        even = x\n    }\n  \
    \  \n    if even > y {\n        even = y\n    }\n    \n    if even > x {\n   \
    \     even = x\n    }\n    \n    if even > y {\n        even = y\n    }\n    \n\
    \    if even > x {\n        even = x\n    }\n    \n    if even > y {\n       \
    \ even = y\n    }\n    \n    if even > x {\n        even = x\n    }\n    \n  \
    \  if even > y {\n        even = y\n    }\n    \n    if even > x {\n        even\
    \ = x\n    }\n", "    if x <= y {\n        return -1\n    }\n    \n    var even:\
    \ Int = 0\n    var odd: Int = 0\n    \n    for i in 0..<x {\n        if i % 2\
    \ == 0 {\n            even += i\n        } else {\n            odd += i\n    \
    \    }\n    }\n    \n    if even > y {\n        return even\n    }\n    \n   \
    \ return odd", "    if x < y {\n        return choose_num(y, x)\n    }\n    if\
    \ x == y {\n        return x\n    }\n    if x % 2 == 0 {\n        return x / 2\n\
    \    }\n    if y % 2 == 0 {\n        return y / 2\n    }\n    if x > y {\n   \
    \     return choose_num(y - 1, x)\n    }\n    return choose_num(y - 1, x - 1)",
  "    if x < y {\n        swap(x, y)\n    }\n    var result = -1\n    var even =\
    \ 1\n    var odd = 1\n    var xMin = IntMax\n    var xMax = IntMin\n    var yMin\
    \ = IntMax\n    var yMax = IntMin\n    for x in stride(from: x, through: y, by:\
    \ 1) {\n        if even % 2 == 0 {\n            if x < xMin {\n              \
    \  xMin = x\n            }\n            if x > xMax {\n                xMax =\
    \ x\n            }\n        }\n        else {\n            if x < yMin {\n   \
    \             yMin = x\n            }\n            if x > yMax {\n           \
    \     yMax = x\n            }\n        }\n        even += 2\n        odd += 2\n\
    \    }\n    if xMin == IntMax {\n        return -1\n    }\n    if yMin == IntMax\
    \ {\n        return -1\n    }\n    if xMax == IntMin {\n        return xMin\n\
    \    }\n    if yMax == IntMin {\n        return yMin\n    }\n    if xMax < yMin\
    \ {\n        return choose_num(xMin, yMin)\n    }\n    if xMin > yMax {\n    \
    \    return choose_num(xMax, yMax)\n    }\n    if xMin == yMin {\n        return\
    \ choose_num(xMin, xMax)\n    }\n    if xMax == yMax {\n        return choose_num(xMax,\
    \ xMin)\n    }\n    if xMin < yMin {\n        return choose_num(xMin, yMax)\n\
    \    }\n    if xMax > yMax {\n        return choose_num(xMax, yMin)\n    }\n \
    \   return choose_num(xMin, yMin)", "    if x > y {\n        (x, y) = (y, x)\n\
    \    }\n    \n    var even: Int = 0\n    var odd: Int = 0\n    \n    for i in\
    \ 0..<(x - y) {\n        if i % 2 == 0 {\n            even += i\n        } else\
    \ {\n            odd += i\n        }\n    }\n    \n    if even > odd {\n     \
    \   return even\n    } else {\n        return odd\n    }", "    if x < y {\n \
    \       return -1\n    }\n    if x == y {\n        return x\n    }\n    if x %\
    \ 2 == 0 && y % 2 == 0 {\n        return x + (y - x) / 2\n    }\n    if x % 2\
    \ == 0 {\n        return x / 2\n    }\n    if y % 2 == 0 {\n        return y /\
    \ 2\n    }\n    return -1", "    if x <= y {\n        return -1\n    }\n    if\
    \ x == y {\n        return x\n    }\n    if x % 2 == 0 && y % 2 == 0 {\n     \
    \   return (x * y) / 2\n    }\n    if x % 2 == 0 {\n        return x / 2\n   \
    \ }\n    if y % 2 == 0 {\n        return y / 2\n    }\n    return -1", "    if\
    \ x < y {\n        return -1\n    }\n    var result = x\n    for _ in 0..<y {\n\
    \        if result % 2 == 0 {\n            result = result / 2\n        } else\
    \ {\n            return result\n        }\n    }\n    return -1", "    if x <=\
    \ y {\n        return -1\n    }\n    var result: Int = 0\n    var x: Int\n   \
    \ var y: Int\n    for x in stride(from: x, to: y, by: 2) {\n        if x % 2 ==\
    \ 0 {\n            result = x\n            break\n        }\n    }\n    return\
    \ result", "    if x <= y {\n        return -1\n    }\n    \n    var even: Int\
    \ = 0\n    var odd: Int = 0\n    \n    for i in 0..<y {\n        if x % 2 == 0\
    \ {\n            even = even + x\n        } else {\n            odd = odd + x\n\
    \        }\n        x = x + 1\n    }\n    \n    if even > odd {\n        return\
    \ even\n    } else {\n        return odd\n    }", "    if x <= y {\n        return\
    \ -1\n    }\n    if x == y {\n        return x\n    }\n    var even: Int = 0\n\
    \    var odd: Int = 0\n    var x: Int = 0\n    var y: Int = 0\n    for _ in 0..<(x\
    \ - y) {\n        x = x + 1\n    }\n    for _ in 0..<(y - x) {\n        y = y\
    \ + 1\n    }\n    for _ in 0..<(x - y) {\n        x = x + 1\n    }\n    for _\
    \ in 0..<(y - x) {\n        y = y + 1\n    }\n    for _ in 0..<(x - y) {\n   \
    \     x = x + 1\n    }\n    for _ in 0..<(y - x) {\n        y = y + 1\n    }\n\
    \    for _ in 0..<(x - y) {\n        x = x + 1\n    }\n    for _ in 0..<(y - x)\
    \ {\n        y = y + 1\n    }\n    for _ in 0..<(x - y) {\n        x = x + 1\n\
    \    }\n    for _ in 0..<(y - x) {\n        y = y + 1\n    }\n    for _ in 0..<(x\
    \ - y) {\n        x = x + 1\n    }\n    for _ in 0..<(y - x) {\n        y = y\
    \ + 1\n    }\n    for _ in 0..<(x - y) {\n        x = x + 1\n    }\n    for _\
    \ in 0..<(y - x) {\n        y = y + 1\n    }\n    for _ in 0..<(x - y) {\n   \
    \     x = x + 1\n    }\n    for _ in 0..<(y - x) {\n        y = y + 1\n    }\n\
    \    for _ in 0..<(x - y) {\n        x = x + 1\n    }\n    for _ in 0..<(y - x)\
    \ {\n        y = y + 1\n    }\n    for _ in 0..<(x - y) {\n        x = x + 1\n\
    \    }\n    for _ in 0..<(y - x) {\n        y = y + 1\n    }\n    for _ in 0..<(x\
    \ - y) {\n        x = x + 1\n    }\n    for _ in 0..<(y - x) {\n        y = y\
    \ + 1\n    }\n    for _ in 0..<(x - y) {\n        x = x + 1\n    }\n    for _\
    \ in 0..<(y - x) {\n        y = y + 1\n    }\n    for _ in 0..<(x - y) {\n   \
    \     x = x + 1\n    }\n    for _ in 0..<(y - x) {\n        y = y + 1\n    }\n\
    \    for _ in 0..<(x - y) {\n        x = x + 1\n    }\n    for _ in 0..<(y - x)\
    \ {\n        y = y + 1\n    }\n    for _ in 0..<(x - y) {\n        x = x + 1\n\
    \    }\n    for _ in 0..<(y - x) {\n        y = y + 1\n    }\n    for _ in 0..<(x\
    \ - y) {\n        x = x + 1\n    }\n    for _ in 0..<(", "    if x <= y {\n  \
    \      return -1\n    }\n    var result = x\n    for _ in 0..<y {\n        if\
    \ result % 2 == 0 {\n            result = result / 2\n        } else {\n     \
    \       return -1\n        }\n    }\n    return result", "    if x <= y {\n  \
    \      return -1\n    }\n    \n    var max_num: Int = 0\n    \n    for num in\
    \ 1...y {\n        if num % 2 == 0 {\n            if num > max_num {\n       \
    \         max_num = num\n            }\n        }\n    }\n    \n    if max_num\
    \ == 0 {\n        return -1\n    }\n    \n    for num in 1...x {\n        if num\
    \ % 2 == 0 {\n            if num > max_num {\n                max_num = num\n\
    \            }\n        }\n    }\n    \n    return max_num", "    var result =\
    \ -1\n    var x = abs(x)\n    var y = abs(y)\n    var even = 1\n    var odd =\
    \ 0\n    var xEven = abs(x) / 2\n    var yEven = abs(y) / 2\n    var xOdd = abs(x)\
    \ / 2\n    var yOdd = abs(y) / 2\n    var xEvenOdd = abs(xEven * yOdd) / 2\n \
    \   var yEvenOdd = abs(yEven * xOdd) / 2\n    var xOddEven = abs(xOdd * yEven)\
    \ / 2\n    var yOddEven = abs(yOdd * xEven) / 2\n    var xEvenOddEven = abs(xEvenOdd\
    \ * yOddEven) / 2\n    var yEvenOddEven = abs(yEvenOdd * xOddEven) / 2\n    var\
    \ xOddEvenOddEven = abs(xOddEven * yEvenOdd) / 2\n    var yOddEvenOddEven = abs(yOddEven\
    \ * xEvenOdd) / 2\n    var xEvenOddEvenOddEven = abs(xEvenOddEven * yOddEvenOdd)\
    \ / 2\n    var yEvenOddEvenOddEven = abs(yEvenOddEven * xOddEvenOdd) / 2\n   \
    \ var xOddEvenOddEvenOddEven = abs(xOddEvenOddEven * yEvenOddEvenOdd) / 2\n  \
    \  var yOddEvenOddEvenOddEven = abs(yOddEvenOddEven * xEvenOddEvenOddEven) / 2\n\
    \    var xEvenOddEvenOddEvenOddEven = abs(xEvenOddEvenOddEven * yOddEvenOddEvenOdd)\
    \ / 2\n    var yEvenOddEvenOddEvenOddEven = abs(yEvenOddEvenOddEven * xOddEvenOddEvenOddEven)\
    \ / 2\n    var xOddEvenOddEvenOddEvenOddEven = abs(xOddEvenOddEvenOddEven * yEvenOddEvenOddEvenOddEven)\
    \ / 2\n    var yOddEvenOddEvenOddEvenOddEven = abs(yOddEvenOddEvenOddEven * xEvenOddEvenOddEvenOddEven)\
    \ / 2\n    var xEvenOddEvenOddEvenOddEvenOddEven = abs(xEvenOddEvenOddEvenOddEven\
    \ * yOddEvenOddEvenOddEvenOddEven) / 2\n    var yEvenOddEvenOddEvenOddEven", " \
    \   if x < y {\n        return -1\n    }\n    if x == y {\n        return x\n\
    \    }\n    if x % 2 == 0 && y % 2 == 0 {\n        return x + (y - x) / 2\n  \
    \  }\n    if x % 2 == 0 {\n        return x / 2\n    }\n    if y % 2 == 0 {\n\
    \        return y / 2\n    }\n    return -1", "    if x <= y {\n        return\
    \ -1\n    }\n    var biggest = Int()\n    for number in 1...y {\n        if number\
    \ > x {\n            break\n        }\n        if number % 2 == 0 {\n        \
    \    biggest = number\n        }\n    }\n    return biggest", "    if x <= y {\n\
    \        return -1\n    }\n    var result = x\n    var remainder = y\n    while\
    \ remainder > 0 {\n        if remainder % 2 == 0 {\n            result = remainder\n\
    \            break\n        }\n        remainder /= 2\n    }\n    return result",
  "    if x <= y {\n        return -1\n    }\n    var result = x\n    var remainder\
    \ = y\n    while remainder > 0 {\n        if remainder & 1 == 0 {\n          \
    \  result = result + 1\n        }\n        remainder = remainder >> 1\n    }\n\
    \    return result", "    if x <= y {\n        return -1\n    }\n    \n    var\
    \ result = x\n    var remainder = y\n    \n    while remainder > 0 {\n       \
    \ if remainder % 2 == 0 {\n            result = result + 1\n        }\n      \
    \  remainder = remainder / 2\n    }\n    \n    return result", "    var result\
    \ = -1\n    var x = abs(x)\n    var y = abs(y)\n    var x_even = x % 2 == 0\n\
    \    var y_even = y % 2 == 0\n    if x_even && y_even {\n        if x == y {\n\
    \            return x\n        }\n        if x > y {\n            return x\n \
    \       }\n        return y\n    }\n    if x_even {\n        if x == y {\n   \
    \         return x\n        }\n        if x > y {\n            return x\n    \
    \    }\n        return y\n    }\n    if y_even {\n        if x == y {\n      \
    \      return x\n        }\n        if x > y {\n            return x\n       \
    \ }\n        return y\n    }\n    if x == y {\n        return x\n    }\n    if\
    \ x > y {\n        return x\n    }\n    return y", "    if x <= y {\n        return\
    \ -1\n    }\n    if x > y {\n        return -1\n    }\n    var even: Int = 0\n\
    \    var odd: Int = 0\n    var x: Int = 0\n    var y: Int = 0\n    var evenMax:\
    \ Int = 0\n    var oddMax: Int = 0\n    var evenMin: Int = 0\n    var oddMin:\
    \ Int = 0\n    while x <= y {\n        if x % 2 == 0 {\n            even = even\
    \ * 2 + x\n            if even > evenMax {\n                evenMax = even\n \
    \           }\n            if even < evenMin {\n                evenMin = even\n\
    \            }\n        } else {\n            odd = odd * 2 + x\n            if\
    \ odd > oddMax {\n                oddMax = odd\n            }\n            if\
    \ odd < oddMin {\n                oddMin = odd\n            }\n        }\n   \
    \     x += 1\n        y += 1\n    }\n    if evenMin == evenMax {\n        return\
    \ evenMin\n    }\n    if oddMin == oddMax {\n        return oddMin\n    }\n  \
    \  return -1", "    if x < y {\n        return choose_num(y, x)\n    }\n    if\
    \ x == y {\n        return x\n    }\n    if x % 2 == 0 {\n        return choose_num(x\
    \ / 2, y)\n    }\n    return choose_num(x / 2, y)", "    if x < y {\n        (x,\
    \ y) = (y, x)\n    }\n    \n    var result = -1\n    var even = 1\n    var odd\
    \ = 1\n    \n    for _ in 0..<(x-y) {\n        if even % 2 == 0 {\n          \
    \  even = even + 2\n        } else {\n            odd = odd + 2\n        }\n \
    \   }\n    \n    if even % 2 == 0 {\n        result = even\n    } else {\n   \
    \     result = odd\n    }\n    \n    return result", "    if x <= y {\n      \
    \  return -1\n    }\n    if x > y {\n        return -1\n    }\n    if x == y {\n\
    \        return x\n    }\n    if x % 2 == 0 {\n        return choose_num(x: x,\
    \ y: y - 1)\n    }\n    if y % 2 == 0 {\n        return choose_num(x: x - 1, y:\
    \ y)\n    }\n    return choose_num(x: x - 1, y: y - 1)", "    if x < y {\n   \
    \     return choose_num(y, x)\n    }\n    if x == y {\n        return x\n    }\n\
    \    if x % 2 == 0 {\n        return x / 2\n    }\n    if y % 2 == 0 {\n     \
    \   return y / 2\n    }\n    if x > y {\n        return choose_num(y, x)\n   \
    \ }\n    return -1", "    if x < y {\n        return -1\n    }\n    var even:\
    \ Int = 0\n    var odd: Int = 0\n    var x: Int = 0\n    var y: Int = 0\n    while\
    \ x < y {\n        if x % 2 == 0 {\n            even = even + x\n        }\n \
    \       else {\n            odd = odd + x\n        }\n        x = x + 1\n    }\n\
    \    if even > odd {\n        return even\n    }\n    return odd", "    if x <\
    \ y {\n        return choose_num(y, x)\n    }\n    \n    var result = x\n    \n\
    \    for _ in 0..<y {\n        if result % 2 == 0 {\n            result = result\
    \ / 2\n        } else {\n            return -1\n        }\n    }\n    \n    return\
    \ result", "    if x < y {\n        return choose_num(y, x)\n    }\n    if x ==\
    \ y {\n        return x\n    }\n    if x % 2 == 0 {\n        return x / 2\n  \
    \  }\n    if y % 2 == 0 {\n        return y / 2\n    }\n    return -1", "    if\
    \ x < y {\n        return choose_num(y, x)\n    }\n    if x == y {\n        return\
    \ x\n    }\n    if x % 2 == 0 {\n        return x / 2\n    }\n    if y % 2 ==\
    \ 0 {\n        return y / 2\n    }\n    if x > y {\n        return choose_num(y,\
    \ x)\n    }\n    return -1", "    var biggest = y\n    if x > y {\n        biggest\
    \ = x\n    }\n    for var i = x; i <= biggest; i++ {\n        if i % 2 == 0 {\n\
    \            return i\n        }\n    }\n    return -1", "    if x <= y {\n  \
    \      return -1\n    }\n    if x > y {\n        return -1\n    }\n    if x %\
    \ 2 == 0 && y % 2 == 0 {\n        return x + (y / 2)\n    }\n    if x % 2 == 0\
    \ {\n        return x + (y / 2)\n    }\n    if y % 2 == 0 {\n        return x\
    \ + (y / 2)\n    }\n    return -1", "    if x < y {\n        return -1\n    }\n\
    \    if x == y {\n        return x\n    }\n    if x % 2 == 0 {\n        return\
    \ choose_num(x / 2, y)\n    }\n    if y % 2 == 0 {\n        return choose_num(x,\
    \ y / 2)\n    }\n    if x > y {\n        return -1\n    }\n    return choose_num(x\
    \ / 2, y / 2)", "    if x < y {\n        return choose_num(y, x)\n    }\n    if\
    \ x == y {\n        return x\n    }\n    if x % 2 == 0 {\n        return choose_num(x\
    \ / 2, y)\n    }\n    if y % 2 == 0 {\n        return choose_num(x, y / 2)\n \
    \   }\n    if x > y {\n        return choose_num(y, x)\n    }\n    return -1",
  "    if x < y {\n        return choose_num(y, x)\n    }\n    \n    if x == y {\n\
    \        return x\n    }\n    \n    if x % 2 == 0 && y % 2 == 0 {\n        return\
    \ x + (y - x)/2\n    }\n    \n    if x % 2 == 0 && y % 2 != 0 {\n        return\
    \ -1\n    }\n    \n    if x % 2 != 0 && y % 2 == 0 {\n        return -1\n    }\n\
    \    \n    if x % 2 != 0 && y % 2 != 0 {\n        return -1\n    }\n    \n   \
    \ return -1"]
stop_tokens:
- "\n}"

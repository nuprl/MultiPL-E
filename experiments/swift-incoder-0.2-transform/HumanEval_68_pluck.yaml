name: HumanEval_68_pluck
language: swift
prompt: "\n/// \"Given an array representing a branch of a tree that has non-negative\
  \ integer nodes\n/// your task is to pluck one of the nodes and return it.\n///\
  \ The plucked node should be the node with the smallest even value.\n/// If multiple\
  \ nodes with the same smallest even value are found return the node that has smallest\
  \ index.\n/// The plucked node should be returned in a list, [ smalest_value, its\
  \ index ],\n/// If there are no even values or the given array is empty, return\
  \ [].\n/// Example 1:\n/// >>> pluck(arr: [4, 2, 3])\n/// [2, 1]\n/// Explanation:\
  \ 2 has the smallest even value, and 2 has the smallest index.\n/// Example 2:\n\
  /// >>> pluck(arr: [1, 2, 3])\n/// [2, 1]\n/// Explanation: 2 has the smallest even\
  \ value, and 2 has the smallest index.\n/// Example 3:\n/// >>> pluck(arr: [] as\
  \ [Int])\n/// [] as [Int]\n/// Example 4:\n/// >>> pluck(arr: [5, 0, 3, 0, 4, 2])\n\
  /// [0, 1]\n/// Explanation: 0 is the smallest value, but  there are two zeros,\n\
  /// so we will choose the first zero, which has the smallest index.\n/// Constraints:\n\
  /// * 1 <= nodes.length <= 10000\n/// * 0 <= node.value\nfunc pluck(arr: [Int])\
  \ -> [Int] {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(pluck(arr: [4, 2, 3]) == [2, 1])\nassert(pluck(arr:\
  \ [1, 2, 3]) == [2, 1])\nassert(pluck(arr: [] as [Int]) == [] as [Int])\nassert(pluck(arr:\
  \ [5, 0, 3, 0, 4, 2]) == [0, 1])\nassert(pluck(arr: [1, 2, 3, 0, 5, 3]) == [0, 3])\n\
  assert(pluck(arr: [5, 4, 8, 4, 8]) == [4, 1])\nassert(pluck(arr: [7, 6, 7, 1]) ==\
  \ [6, 1])\nassert(pluck(arr: [7, 9, 7, 1]) == [] as [Int])"
completions: ["    var result: [Int] = []\n    var smallest: Int = 0\n    var smallestIndex:\
    \ Int = 0\n    for i := 0; i < len(arr); i++ {\n        if arr[i] < smallest {\n\
    \            smallest = arr[i]\n            smallestIndex = i\n        }\n   \
    \ }\n    if smallest != 0 {\n        result = append(result, smallest)\n     \
    \   result = append(result, smallestIndex)\n    }\n    return result", "    var\
    \ result = [Int]()\n    var minValue = arr[0]\n    var minIndex = 0\n    for i\
    \ := 1; i < len(arr); i++ {\n        if arr[i] < minValue {\n            minValue\
    \ = arr[i]\n            minIndex = i\n        }\n    }\n    result.append(minValue)\n\
    \    result.append(minIndex)\n    return result", "    var result = [Int]()\n\
    \    var minValue = arr[0]\n    var minIndex = 0\n    for i := 1; i < len(arr);\
    \ i++ {\n        if arr[i] < minValue {\n            minValue = arr[i]\n     \
    \       minIndex = i\n        }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n\
    \    return result", "    var result: [Int] = []\n    var smallest: Int = 0\n\
    \    var smallestIndex: Int = 0\n    for index in 0..<arr.count {\n        if\
    \ arr[index] % 2 == 0 {\n            if smallest == 0 || arr[index] < smallest\
    \ {\n                smallest = arr[index]\n                smallestIndex = index\n\
    \            }\n        }\n    }\n    if smallest != 0 {\n        result = [smallest,\
    \ smallestIndex]\n    }\n    return result", "    \n    var result = [Int]()\n\
    \    var minIndex = 0\n    \n    for node in arr {\n        if node.value % 2\
    \ == 0 {\n            if result.count > 0 {\n                if result[0] < node.value\
    \ {\n                    minIndex = result.count\n                } else {\n \
    \                   minIndex = 0\n                }\n            }\n         \
    \   result.append(node.value)\n        } else {\n            if result.count >\
    \ 0 {\n                if result[0] < node.value {\n                    minIndex\
    \ = result.count\n                } else {\n                    minIndex = 0\n\
    \                }\n            }\n        }\n    }\n    \n    if result.count\
    \ == 0 {\n        return result\n    }\n    \n    if result.count > 0 {\n    \
    \    if result[0] < arr[minIndex].value {\n            minIndex = 0\n        }\n\
    \    }\n    \n    if minIndex == result.count {\n        return result\n    }\n\
    \    \n    if minIndex == 0 {\n        return [arr[minIndex].value]\n    }\n \
    \   \n    if minIndex == 1 {\n        return [arr[minIndex].value, arr[minIndex-1].value]\n\
    \    }\n    \n    return [arr[minIndex].value, arr[minIndex-1].value, arr[minIndex-2].value,\
    \ arr[minIndex-3].value, arr[minIndex-4].value]", "    var result = [Int]()\n\
    \    var minValue = arr[0]\n    var minIndex = 0\n    for i := 1; i < len(arr);\
    \ i++ {\n        if arr[i] < minValue {\n            minValue = arr[i]\n     \
    \       minIndex = i\n        }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n\
    \    return result", "    if arr.isEmpty() {\n        return []\n    }\n    var\
    \ minIndex = 0\n    var minValue = arr[0]\n    for index in 0..<arr.count {\n\
    \        if arr[index] % 2 == 0 {\n            if minValue == arr[index] {\n \
    \               minIndex = index\n            } else {\n                minValue\
    \ = arr[index]\n                minIndex = index\n            }\n        }\n \
    \   }\n    return [minValue, minIndex]", "    var result = [Int]()\n    var smallestEven\
    \ = arr[0]\n    var smallestIndex = 0\n    for i := 1; i < arr.count; i++ {\n\
    \        if arr[i] < smallestEven {\n            smallestEven = arr[i]\n     \
    \       smallestIndex = i\n        }\n    }\n    result.append(smallestEven)\n\
    \    result.append(smallestIndex)\n    return result", "    \n    // write your\
    \ code here\n    \n    return arr", "    var result = [Int]()\n    var minIndex\
    \ = -1\n    var minValue = arr[0]\n    for i := 0; i < len(arr); i++ {\n     \
    \   if arr[i] < minValue {\n            minValue = arr[i]\n            minIndex\
    \ = i\n        }\n    }\n    if minIndex == -1 {\n        return result\n    }\n\
    \    result.append(minValue)\n    result.append(minIndex)\n    return result",
  "    if arr.isEmpty {\n        return []\n    }\n    var minIndex = -1\n    var\
    \ minValue = arr[0]\n    for i := 1; i < len(arr); i++ {\n        if arr[i] <\
    \ minValue {\n            minValue = arr[i]\n            minIndex = i\n      \
    \  }\n    }\n    return [minValue, minIndex]", "    var result = [Int]()\n   \
    \ var minValue = arr[0]\n    var minIndex = 0\n    for i := 1; i < len(arr); i++\
    \ {\n        if arr[i] < minValue {\n            minValue = arr[i]\n         \
    \   minIndex = i\n        }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n\
    \    return result", "    \n    var minIndex = 0\n    var minValue = arr[0]\n\
    \    \n    for index in 1..<arr.count {\n        if arr[index] < minValue {\n\
    \            minValue = arr[index]\n            minIndex = index\n        }\n\
    \    }\n    \n    return [minValue, minIndex]", "    var result = [Int]()\n  \
    \  var minValue = arr[0]\n    var minIndex = 0\n    for i := 0; i < len(arr);\
    \ i++ {\n        if arr[i] < minValue {\n            minValue = arr[i]\n     \
    \       minIndex = i\n        }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n\
    \    return result", "    var result: [Int] = []\n    var minIndex = 0\n    var\
    \ minValue = arr[0]\n    for value in arr {\n        if value % 2 == 0 {\n   \
    \         if value < minValue {\n                minValue = value\n          \
    \      minIndex = result.count\n            }\n            result[minIndex] =\
    \ value\n        }\n    }\n    return result", "    var result = [Int]()\n   \
    \ var smallestEvenValue: Int = 0\n    var smallestIndex: Int = 0\n    for index\
    \ in 0..<arr.count {\n        if arr[index] % 2 == 0 {\n            if smallestEvenValue\
    \ == 0 || arr[index] < smallestEvenValue {\n                smallestEvenValue\
    \ = arr[index]\n                smallestIndex = index\n            }\n       \
    \ }\n    }\n    if smallestEvenValue == 0 {\n        return result\n    }\n  \
    \  result.append(smallestEvenValue)\n    result.append(smallestIndex)\n    return\
    \ result", "    var result = [Int]()\n    var index = 0\n    var minValue = arr[0]\n\
    \    for value in arr {\n        if value % 2 == 0 {\n            if value < minValue\
    \ {\n                minValue = value\n                index = index + 1\n   \
    \         }\n        } else {\n            if value == minValue {\n          \
    \      index = index + 1\n            }\n        }\n    }\n    if index == 0 {\n\
    \        return arr\n    }\n    result.append(minValue)\n    result.append(index)\n\
    \    return result", "    var result: [Int] = []\n    var smallest: Int = 0\n\
    \    var smallestIndex: Int = 0\n    for index in 0..<arr.count {\n        if\
    \ arr[index] % 2 == 0 {\n            if smallest == 0 || arr[index] < smallest\
    \ {\n                smallest = arr[index]\n                smallestIndex = index\n\
    \            }\n        }\n    }\n    result = [smallest, smallestIndex]\n   \
    \ return result", "    var result = [Int]()\n    var minIndex = -1\n    var minValue\
    \ = arr[0]\n    for i := 0; i < len(arr); i++ {\n        if arr[i] < minValue\
    \ {\n            minValue = arr[i]\n            minIndex = i\n        }\n    }\n\
    \    if minIndex == -1 {\n        return result\n    }\n    for i := 0; i < len(arr);\
    \ i++ {\n        if arr[i] == minValue {\n            result.insert(i, minIndex)\n\
    \        }\n    }\n    return result", "    \n    var minIndex = 0\n    var minValue\
    \ = arr[0]\n    \n    for index in 1..<arr.count {\n        if arr[index] < minValue\
    \ {\n            minValue = arr[index]\n            minIndex = index\n       \
    \ }\n    }\n    \n    return [minValue, minIndex]", "    if arr.isEmpty() {\n\
    \        return []\n    }\n    var minValue = arr[0]\n    var minIndex = 0\n \
    \   for index in 0..<arr.count {\n        if arr[index] % 2 == 0 {\n         \
    \   if arr[index] < minValue {\n                minValue = arr[index]\n      \
    \          minIndex = index\n            }\n        }\n    }\n    return [minValue,\
    \ minIndex]", "    \n    // write your code in geeksforgeeks IDE\n    \n    return\
    \ []", "    var minIndex = 0\n    var minValue = arr[0]\n    for i := 1; i < len(arr);\
    \ i++ {\n        if arr[i] < minValue {\n            minValue = arr[i]\n     \
    \       minIndex = i\n        }\n    }\n    return [minValue, minIndex]", "  \
    \  var result = [Int]()\n    var smallestEven = arr[0]\n    var smallestIndex\
    \ = -1\n    for index in 0..<arr.count {\n        if arr[index] % 2 == 0 {\n \
    \           if smallestEven == arr[index] {\n                smallestEven = arr[index]\n\
    \                smallestIndex = index\n            }\n        } else {\n    \
    \        if smallestIndex == -1 {\n                smallestEven = arr[index]\n\
    \                smallestIndex = index\n            } else {\n               \
    \ if arr[index] < smallestEven {\n                    smallestEven = arr[index]\n\
    \                    smallestIndex = index\n                }\n            }\n\
    \        }\n    }\n    result.append(smallestEven)\n    result.append(smallestIndex)\n\
    \    return result", "    var result = [Int]()\n    var minIndex = -1\n    var\
    \ minValue = arr[0]\n    for i := 0; i < len(arr); i++ {\n        if arr[i] <\
    \ minValue {\n            minValue = arr[i]\n            minIndex = i\n      \
    \  }\n    }\n    if minIndex == -1 {\n        return result\n    }\n    for i\
    \ := 0; i < len(arr); i++ {\n        if arr[i] == minValue {\n            result.append(i)\n\
    \        }\n    }\n    return result", "    var result: [Int] = []\n    var minIndex\
    \ = 0\n    var minValue = arr[0]\n    for value in arr {\n        if value % 2\
    \ == 0 {\n            if value < minValue {\n                minValue = value\n\
    \                minIndex = result.count\n            }\n            result[minIndex]\
    \ = value\n        }\n    }\n    return result", "    \n    var minIndex = 0\n\
    \    var minValue = arr[0]\n    \n    for index in 1..<arr.count {\n        if\
    \ arr[index] >= minValue {\n            minValue = arr[index]\n            minIndex\
    \ = index\n        }\n    }\n    \n    return [minValue, minIndex]", "    var\
    \ result = [Int]()\n    var minIndex = 0\n    var minValue = arr[0]\n    for i\
    \ := 0; i < len(arr); i++ {\n        if arr[i] < minValue {\n            minValue\
    \ = arr[i]\n            minIndex = i\n        }\n    }\n    result.append(minValue)\n\
    \    result.append(minIndex)\n    return result", "    var result: [Int] = []\n\
    \    var smallest: Int = 0\n    var smallestIndex: Int = 0\n    for i := 0; i\
    \ < len(arr); i++ {\n        if arr[i] % 2 == 0 {\n            if smallest ==\
    \ 0 || arr[i] < smallest {\n                smallest = arr[i]\n              \
    \  smallestIndex = i\n            }\n        }\n    }\n    if smallest != 0 {\n\
    \        result = [smallest, smallestIndex]\n    }\n    return result", "    var\
    \ result = [Int]()\n    var minValue = arr[0]\n    var minIndex = 0\n    for i\
    \ := 1; i < len(arr); i++ {\n        if arr[i] < minValue {\n            minValue\
    \ = arr[i]\n            minIndex = i\n        }\n    }\n    result.append(minValue)\n\
    \    result.append(minIndex)\n    return result", "    var result: [Int] = []\n\
    \    var minIndex = 0\n    var minValue = arr[0]\n    for value in arr {\n   \
    \     if value % 2 == 0 {\n            if value < minValue {\n               \
    \ minValue = value\n                minIndex = result.count\n            }\n \
    \           result[minIndex] = value\n        }\n    }\n    return result", " \
    \   \n    var minIndex = 0\n    var minValue = arr[0]\n    \n    for index in\
    \ 0..<arr.count {\n        if arr[index] % 2 == 0 {\n            if arr[index]\
    \ < minValue {\n                minValue = arr[index]\n                minIndex\
    \ = index\n            }\n        }\n    }\n    \n    return [minValue, minIndex]",
  "    var result: [Int] = []\n    var smallest: Int = 0\n    var smallestIndex: Int\
    \ = 0\n    for i := 0; i < len(arr); i++ {\n        if arr[i] % 2 == 0 {\n   \
    \         if smallest == 0 || arr[i] < smallest {\n                smallest =\
    \ arr[i]\n                smallestIndex = i\n            }\n        }\n    }\n\
    \    if smallest != 0 {\n        result = append(result, smallest)\n        result\
    \ = append(result, smallestIndex)\n    }\n    return result", "    var result\
    \ = [Int]()\n    var minIndex = 0\n    var minValue = arr[0]\n    for i := 1;\
    \ i < len(arr); i++ {\n        if arr[i] < minValue {\n            minValue =\
    \ arr[i]\n            minIndex = i\n        }\n    }\n    result.append(minValue)\n\
    \    result.append(minIndex)\n    return result", "    var result = [Int]()\n\
    \    var minIndex = 0\n    var minValue = arr[0]\n    for i := 0; i < len(arr);\
    \ i++ {\n        if arr[i] < minValue {\n            minValue = arr[i]\n     \
    \       minIndex = i\n        }\n    }\n    if minValue % 2 == 0 {\n        result\
    \ = [minValue]\n    } else {\n        for i := 0; i < len(arr); i++ {\n      \
    \      if arr[i] == minValue {\n                result.append(i)\n           \
    \ }\n        }\n    }\n    return result", "    var result: [Int] = []\n    var\
    \ minIndex = 0\n    var minValue = arr[0]\n    for i := 0; i < len(arr); i++ {\n\
    \        if arr[i] < minValue {\n            minValue = arr[i]\n            minIndex\
    \ = i\n        }\n    }\n    if minIndex == 0 {\n        return result\n    }\n\
    \    for i := 0; i < len(arr); i++ {\n        if arr[i] == minValue {\n      \
    \      result.insert(minIndex, arr[i])\n        }\n    }\n    return result",
  "    if arr.isEmpty() {\n        return []\n    }\n    var result = [Int]()\n  \
    \  var smallestEven = arr[0]\n    var smallestIndex = 0\n    for i := 1; i < arr.count;\
    \ i++ {\n        if arr[i] % 2 == 0 {\n            if smallestEven == arr[i] {\n\
    \                smallestEven = arr[i]\n                smallestIndex = i\n  \
    \          } else {\n                if arr[i] < smallestEven {\n            \
    \        smallestEven = arr[i]\n                    smallestIndex = i\n      \
    \          }\n            }\n        }\n    }\n    result.append(smallestEven)\n\
    \    result.append(smallestIndex)\n    return result", "    var result = [Int]()\n\
    \    var minValue = arr[0]\n    var minIndex = 0\n    for i := 0; i < len(arr);\
    \ i++ {\n        if arr[i] < minValue {\n            minValue = arr[i]\n     \
    \       minIndex = i\n        }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n\
    \    return result", "    var minIndex = 0\n    var minValue = arr[0]\n    for\
    \ i := 1; i < len(arr); i++ {\n        if arr[i] < minValue {\n            minValue\
    \ = arr[i]\n            minIndex = i\n        }\n    }\n    return [minValue,\
    \ minIndex]", "    var result = [Int]()\n    var index = 0\n    for node in arr\
    \ {\n        if node % 2 == 0 {\n            result.append(node)\n        }\n\
    \        if index == 0 {\n            index = node\n        }\n    }\n    if index\
    \ == 0 {\n        return result\n    }\n    return result", "    var result =\
    \ [Int]()\n    var minValue = arr[0]\n    var minIndex = 0\n    for i := 0; i\
    \ < len(arr); i++ {\n        if arr[i] < minValue {\n            minValue = arr[i]\n\
    \            minIndex = i\n        }\n    }\n    result.append(minValue)\n   \
    \ result.append(minIndex)\n    return result", "    var result = [Int]()\n   \
    \ var smallestEvenValue = arr[0]\n    var smallestIndex = 0\n    for i := 1; i\
    \ < arr.count; i++ {\n        if arr[i] < smallestEvenValue {\n            smallestEvenValue\
    \ = arr[i]\n            smallestIndex = i\n        }\n    }\n    result.append(smallestEvenValue)\n\
    \    result.append(smallestIndex)\n    return result", "    var result = [Int]()\n\
    \    var minValue = arr[0]\n    var minIndex = 0\n    for i := 0; i < len(arr);\
    \ i++ {\n        if arr[i] < minValue {\n            minValue = arr[i]\n     \
    \       minIndex = i\n        }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n\
    \    return result", "    var result = [Int]()\n    var minIndex = -1\n    var\
    \ minValue = arr[0]\n    for value in arr {\n        if value == minValue {\n\
    \            minIndex += 1\n        }\n        if value < minValue {\n       \
    \     minValue = value\n            minIndex = 0\n        }\n    }\n    result.append(minValue)\n\
    \    result.append(minIndex)\n    return result", "    var result = [Int]()\n\
    \    var smallestEvenValue = arr[0]\n    var smallestIndex = 0\n    for index\
    \ in 0..<arr.count {\n        if arr[index] % 2 == 0 {\n            if smallestEvenValue\
    \ < arr[index] {\n                smallestEvenValue = arr[index]\n           \
    \     smallestIndex = index\n            }\n        }\n    }\n    result.append(smallestEvenValue)\n\
    \    result.append(smallestIndex)\n    return result", "    var result: [Int]\
    \ = []\n    var smallest: Int = 0\n    var smallestIndex: Int = 0\n    for i :=\
    \ 0; i < len(arr); i++ {\n        if arr[i] % 2 == 0 {\n            if smallest\
    \ == 0 || arr[i] < smallest {\n                smallest = arr[i]\n           \
    \     smallestIndex = i\n            }\n        }\n    }\n    if smallest == 0\
    \ {\n        return result\n    }\n    if smallest == arr[0] {\n        result\
    \ = [smallest, smallestIndex]\n    } else {\n        for i := 0; i < len(arr);\
    \ i++ {\n            if arr[i] == smallest {\n                result = [arr[i],\
    \ i]\n                break\n            }\n        }\n    }\n    return result",
  "    var result = [Int]()\n    var smallestEven = arr[0]\n    var smallestIndex\
    \ = -1\n    for index in 0..<arr.count {\n        if arr[index] % 2 == 0 {\n \
    \           if smallestEven == arr[index] {\n                smallestEven = arr[index]\n\
    \                smallestIndex = index\n            } else {\n               \
    \ smallestEven = arr[index]\n                smallestIndex = index\n         \
    \   }\n        } else {\n            if smallestIndex == -1 {\n              \
    \  smallestEven = arr[index]\n                smallestIndex = index\n        \
    \    } else {\n                if arr[index] < smallestEven {\n              \
    \      smallestEven = arr[index]\n                    smallestIndex = index\n\
    \                }\n            }\n        }\n    }\n    if smallestIndex == -1\
    \ {\n        return result\n    }\n    result.append(smallestEven)\n    result.append(smallestIndex)\n\
    \    return result", "    var result = [Int]()\n    var minIndex = -1\n    var\
    \ minValue = arr[0]\n    for i := 0; i < len(arr); i++ {\n        if arr[i] <\
    \ minValue {\n            minValue = arr[i]\n            minIndex = i\n      \
    \  }\n    }\n    if minIndex == -1 {\n        return result\n    }\n    for i\
    \ := 0; i < len(arr); i++ {\n        if arr[i] == minValue {\n            result.insert(i,\
    \ minIndex)\n        }\n    }\n    return result", "    var result = [Int]()\n\
    \    var minValue = arr[0]\n    var minIndex = 0\n    for i := 0; i < len(arr);\
    \ i++ {\n        if arr[i] < minValue {\n            minValue = arr[i]\n     \
    \       minIndex = i\n        }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n\
    \    return result", "    var result = [Int]()\n    var minValue = arr[0]\n  \
    \  var minIndex = 0\n    for index in 0..<arr.count {\n        if arr[index] %\
    \ 2 == 0 {\n            if arr[index] < minValue {\n                minValue =\
    \ arr[index]\n                minIndex = index\n            }\n        }\n   \
    \ }\n    result.append(minValue)\n    result.append(minIndex)\n    return result",
  "    var result = [Int]()\n    var minIndex = 0\n    var minValue = arr[0]\n   \
    \ for index in 0..<arr.count {\n        if arr[index] % 2 == 0 {\n           \
    \ if minValue > arr[index] {\n                minValue = arr[index]\n        \
    \        minIndex = index\n            }\n        }\n    }\n    result.append(minValue)\n\
    \    result.append(minIndex)\n    return result", "    if arr.isEmpty() {\n  \
    \      return []\n    }\n    var minValue = arr[0]\n    var minIndex = 0\n   \
    \ var minIndex2 = 0\n    for i := 1; i < arr.count; i++ {\n        if arr[i] <\
    \ minValue {\n            minValue = arr[i]\n            minIndex = i\n      \
    \  }\n        if arr[i] < minValue {\n            minValue = arr[i]\n        \
    \    minIndex2 = i\n        }\n    }\n    return [minValue, minIndex, minIndex2]",
  "    var result = [Int]()\n    var minValue = arr[0]\n    var minIndex = 0\n   \
    \ for i := 0; i < len(arr); i++ {\n        if arr[i] < minValue {\n          \
    \  minValue = arr[i]\n            minIndex = i\n        }\n    }\n    result.append(minValue)\n\
    \    result.append(minIndex)\n    return result", "    if arr.isEmpty() {\n  \
    \      return []\n    }\n    var minValue = arr[0]\n    var minIndex = 0\n   \
    \ for index in 0..<arr.count {\n        if arr[index] % 2 == 0 {\n           \
    \ if arr[index] < minValue {\n                minValue = arr[index]\n        \
    \        minIndex = index\n            }\n        }\n    }\n    return [minValue,\
    \ minIndex]", "    var result = [Int]()\n    var minIndex = 0\n    var minValue\
    \ = arr[0]\n    for i in arr {\n        if i % 2 == 0 {\n            if minValue\
    \ < i {\n                minValue = i\n                minIndex = i\n        \
    \    }\n        } else {\n            if minValue == i {\n                minIndex\
    \ = i\n            }\n        }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n\
    \    return result", "    var result = [Int]()\n    var smallestEven = Int()\n\
    \    var smallestIndex = Int()\n    for i := 0; i < len(arr); i++ {\n        if\
    \ arr[i] % 2 == 0 {\n            if smallestEven == 0 || arr[i] < smallestEven\
    \ {\n                smallestEven = arr[i]\n                smallestIndex = i\n\
    \            }\n        }\n    }\n    if smallestEven != 0 {\n        result =\
    \ [smallestEven]\n        result.append(smallestIndex)\n    }\n    return result",
  "    \n    var result = [Int]()\n    var minValue = Int()\n    var minIndex = Int()\n\
    \    \n    for node in arr {\n        if node.value % 2 == 0 {\n            if\
    \ minValue == 0 || node.value < minValue {\n                minValue = node.value\n\
    \                minIndex = node\n            }\n        }\n    }\n    \n    if\
    \ minValue != 0 {\n        result = [minValue, minIndex]\n    }\n    \n    return\
    \ result", "    var result = [Int]()\n    var minValue = arr[0]\n    var minIndex\
    \ = 0\n    for index in 0..<arr.count {\n        if arr[index] % 2 == 0 {\n  \
    \          if arr[index] < minValue {\n                minValue = arr[index]\n\
    \                minIndex = index\n            }\n        }\n    }\n    result.append(minValue)\n\
    \    result.append(minIndex)\n    return result", "    var minIndex = 0\n    var\
    \ minValue = arr[0]\n    for i := 0; i < len(arr); i++ {\n        if arr[i] <\
    \ minValue {\n            minValue = arr[i]\n            minIndex = i\n      \
    \  }\n    }\n    return [minValue, minIndex]", "    var result: [Int] = []\n \
    \   var minIndex = 0\n    var minValue = arr[0]\n    for value in arr {\n    \
    \    if value % 2 == 0 {\n            if value < minValue {\n                minValue\
    \ = value\n                minIndex = result.count\n            }\n          \
    \  result[minIndex] = value\n        }\n    }\n    return result", "    var result\
    \ = [Int]()\n    var minValue = Int()\n    var minIndex = -1\n    for i := 0;\
    \ i < len(arr); i++ {\n        if arr[i] < minValue {\n            minValue =\
    \ arr[i]\n            minIndex = i\n        }\n    }\n    if minIndex == -1 {\n\
    \        return result\n    }\n    result.append(minValue)\n    result.append(minIndex)\n\
    \    return result", "    var result = [Int]()\n    var minIndex = -1\n    var\
    \ minValue = arr[0]\n    for i := 0; i < len(arr); i++ {\n        if arr[i] <\
    \ minValue {\n            minValue = arr[i]\n            minIndex = i\n      \
    \  }\n    }\n    if minIndex == -1 {\n        return result\n    }\n    result.append(minValue)\n\
    \    result.append(minIndex)\n    return result", "    var result = [Int]()\n\
    \    var minIndex = 0\n    var minValue = arr[0]\n    for i := 0; i < len(arr);\
    \ i++ {\n        if arr[i] < minValue {\n            minValue = arr[i]\n     \
    \       minIndex = i\n        }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n\
    \    return result", "    \n    var minIndex = 0\n    var minValue = arr[0]\n\
    \    \n    for index in 1..<arr.count {\n        if arr[index] < minValue {\n\
    \            minValue = arr[index]\n            minIndex = index\n        }\n\
    \    }\n    \n    return [minValue, minIndex]", "    \n    var minIndex = 0\n\
    \    var minValue = arr[0]\n    \n    for index in 0..<arr.count {\n        if\
    \ arr[index] % 2 == 0 {\n            if arr[index] < minValue {\n            \
    \    minValue = arr[index]\n                minIndex = index\n            }\n\
    \        }\n    }\n    \n    return [minValue, minIndex]", "    var minIndex =\
    \ 0\n    var minValue = arr[0]\n    for i := 0; i < len(arr); i++ {\n        if\
    \ arr[i] < minValue {\n            minValue = arr[i]\n            minIndex = i\n\
    \        }\n    }\n    return [minValue, minIndex]", "    var result: [Int] =\
    \ []\n    var minIndex = 0\n    var minValue = arr[0]\n    for i := 0; i < len(arr);\
    \ i++ {\n        if arr[i] < minValue {\n            minValue = arr[i]\n     \
    \       minIndex = i\n        }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n\
    \    return result", "    if arr.isEmpty() {\n        return []\n    }\n    var\
    \ minIndex = 0\n    var minValue = arr[0]\n    for i := 1; i < arr.count; i++\
    \ {\n        if arr[i] < minValue {\n            minValue = arr[i]\n         \
    \   minIndex = i\n        }\n    }\n    return [minValue, minIndex]", "    \n\
    \    var minIndex = 0\n    var minValue = arr[0]\n    for index in 1..<arr.count\
    \ {\n        if arr[index] < minValue {\n            minValue = arr[index]\n \
    \           minIndex = index\n        }\n    }\n    return [minValue, minIndex]",
  "    var result = [Int]()\n    var minValue = arr[0]\n    var minIndex = 0\n   \
    \ for i := 0; i < len(arr); i++ {\n        if arr[i] < minValue {\n          \
    \  minValue = arr[i]\n            minIndex = i\n        }\n    }\n    result.append(minValue)\n\
    \    result.append(minIndex)\n    return result", "    var result = [Int]()\n\
    \    var smallestEvenValue: Int = 0\n    var smallestIndex: Int = 0\n    for i\
    \ := 0; i < len(arr); i++ {\n        if arr[i] % 2 == 0 {\n            if smallestEvenValue\
    \ == 0 || arr[i] < smallestEvenValue {\n                smallestEvenValue = arr[i]\n\
    \                smallestIndex = i\n            }\n        }\n    }\n    if smallestEvenValue\
    \ == 0 {\n        return result\n    }\n    result.append(smallestEvenValue)\n\
    \    result.append(smallestIndex)\n    return result", "    if arr.isEmpty() {\n\
    \        return []\n    }\n    var minValue = arr[0]\n    var minIndex = 0\n \
    \   for i in arr {\n        if i % 2 == 0 {\n            if minValue < i {\n \
    \               minValue = i\n                minIndex = i\n            }\n  \
    \      }\n    }\n    return [minValue, minIndex]", "    \n    // write your code\
    \ here\n    \n    return arr", "    \n    var result = [Int]()\n    \n    for\
    \ index in 0..<arr.count {\n        if arr[index] % 2 == 0 {\n            result.append(arr[index])\n\
    \        }\n    }\n    \n    return result", "    var minIndex = 0\n    var minValue\
    \ = arr[0]\n    for index in 1..<arr.count {\n        if arr[index] < minValue\
    \ {\n            minValue = arr[index]\n            minIndex = index\n       \
    \ }\n    }\n    return [minValue, minIndex]", "    if arr.isEmpty() {\n      \
    \  return []\n    }\n    var result: [Int] = []\n    var minValue = arr[0]\n \
    \   var minIndex = 0\n    for i := 1; i < arr.count; i++ {\n        if arr[i]\
    \ < minValue {\n            minValue = arr[i]\n            minIndex = i\n    \
    \    }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n    return\
    \ result", "    if arr.isEmpty {\n        return []\n    }\n    var minIndex =\
    \ 0\n    var minValue = arr[0]\n    for i := 0; i < len(arr); i++ {\n        if\
    \ arr[i] < minValue {\n            minValue = arr[i]\n            minIndex = i\n\
    \        }\n    }\n    return [minValue, minIndex]", "    var result = [Int]()\n\
    \    var minValue = Int()\n    var minIndex = -1\n    for i := 0; i < len(arr);\
    \ i++ {\n        if arr[i] < minValue {\n            minValue = arr[i]\n     \
    \       minIndex = i\n        }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n\
    \    return result", "    if arr.isEmpty() {\n        return []\n    }\n    var\
    \ minIndex = 0\n    var minValue = arr[0]\n    for i := 1; i < len(arr); i++ {\n\
    \        if arr[i] < minValue {\n            minValue = arr[i]\n            minIndex\
    \ = i\n        }\n    }\n    return [minValue, minIndex]", "    var result = [Int]()\n\
    \    var smallest = 0\n    var smallestIndex = 0\n    for i := 0; i < len(arr);\
    \ i++ {\n        if arr[i] % 2 == 0 {\n            if smallest == 0 || arr[i]\
    \ < arr[smallest] {\n                smallest = arr[i]\n                smallestIndex\
    \ = i\n            }\n        }\n    }\n    if smallest == 0 {\n        return\
    \ result\n    }\n    if smallest == arr[smallest] {\n        return result\n \
    \   }\n    result.append(smallest)\n    result.append(smallestIndex)\n    return\
    \ result", "    var result = [Int]()\n    var smallestEven = arr[0]\n    var smallestIndex\
    \ = -1\n    for index in 0..<arr.count {\n        if arr[index] % 2 == 0 {\n \
    \           if smallestEven == arr[index] {\n                smallestEven = arr[index]\n\
    \                smallestIndex = index\n            }\n        } else {\n    \
    \        if smallestEven == arr[index] {\n                smallestIndex = index\n\
    \            }\n        }\n    }\n    if smallestIndex == -1 {\n        return\
    \ result\n    }\n    result.append(smallestEven)\n    result.append(smallestIndex)\n\
    \    return result", "    \n    var minIndex = 0\n    var minValue = arr[0]\n\
    \    \n    for index in 1..<arr.count {\n        if arr[index] < minValue {\n\
    \            minValue = arr[index]\n            minIndex = index\n        }\n\
    \    }\n    \n    return [minValue, minIndex]", "    var result = [Int]()\n  \
    \  var smallestEven = arr[0]\n    var smallestIndex = -1\n    for i := 1; i <\
    \ arr.count; i++ {\n        if arr[i] < smallestEven {\n            smallestEven\
    \ = arr[i]\n            smallestIndex = i\n        }\n    }\n    result.append(smallestEven)\n\
    \    result.append(smallestIndex)\n    return result", "    \n    let n = arr.count\n\
    \    \n    if n == 0 {\n        return []\n    }\n    \n    var minValue = arr[0]\n\
    \    var minIndex = 0\n    \n    for i in 1..<n {\n        if arr[i] < minValue\
    \ {\n            minValue = arr[i]\n            minIndex = i\n        }\n    }\n\
    \    \n    return [minValue, minIndex]", "    var result: [Int] = []\n    var\
    \ minIndex = 0\n    var minValue = arr[0]\n    for i := 0; i < len(arr); i++ {\n\
    \        if arr[i] < minValue {\n            minValue = arr[i]\n            minIndex\
    \ = i\n        }\n    }\n    if minIndex == 0 {\n        return result\n    }\n\
    \    for i := 0; i < len(arr); i++ {\n        if arr[i] == minValue {\n      \
    \      result.append(i)\n        }\n    }\n    return result", "    \n    var\
    \ minIndex = 0\n    var minValue = arr[0]\n    \n    for index in 1..<arr.count\
    \ {\n        if arr[index] < minValue {\n            minValue = arr[index]\n \
    \           minIndex = index\n        }\n    }\n    \n    return [minValue, minIndex]",
  "    \n    var result = [Int]()\n    \n    if arr.isEmpty {\n        return result\n\
    \    }\n    \n    var minValue = arr[0]\n    var minIndex = 0\n    \n    for index\
    \ in 0..<arr.count {\n        if arr[index] % 2 == 0 {\n            if arr[index]\
    \ < minValue {\n                minValue = arr[index]\n                minIndex\
    \ = index\n            }\n        }\n    }\n    \n    if minIndex == 0 {\n   \
    \     return result\n    }\n    \n    result.append(minValue)\n    result.append(minIndex)\n\
    \    return result", "    \n    // write your code here\n    \n    return arr",
  "    var result = [Int]()\n    var smallestEven = arr[0]\n    var smallestIndex\
    \ = 0\n    for index in 0..<arr.count {\n        if arr[index] % 2 == 0 {\n  \
    \          if smallestEven > arr[index] {\n                smallestEven = arr[index]\n\
    \                smallestIndex = index\n            }\n        }\n    }\n    result.append(smallestEven)\n\
    \    result.append(smallestIndex)\n    return result", "    if arr.isEmpty {\n\
    \        return []\n    }\n    var result = [Int]()\n    var minValue = arr[0]\n\
    \    var minIndex = 0\n    for i := 0; i < len(arr); i++ {\n        if arr[i]\
    \ < minValue {\n            minValue = arr[i]\n            minIndex = i\n    \
    \    }\n    }\n    if minValue % 2 == 0 {\n        result.append(minValue)\n \
    \       result.append(minIndex)\n    } else {\n        var minValue2 = minValue\n\
    \        var minIndex2 = 0\n        for i := 0; i < len(arr); i++ {\n        \
    \    if arr[i] < minValue2 {\n                minValue2 = arr[i]\n           \
    \     minIndex2 = i\n            }\n        }\n        if minValue2 % 2 == 0 {\n\
    \            result.append(minValue2)\n            result.append(minIndex2)\n\
    \        }\n    }\n    return result", "    var result = [Int]()\n    var minValue\
    \ = Int()\n    var minIndex = -1\n    for i := 0; i < len(arr); i++ {\n      \
    \  if arr[i] < minValue {\n            minValue = arr[i]\n            minIndex\
    \ = i\n        }\n    }\n    if minIndex == -1 {\n        return result\n    }\n\
    \    result.append(minValue)\n    result.append(minIndex)\n    return result",
  "    var result = [Int]()\n    var minIndex = 0\n    var minValue = arr[0]\n   \
    \ for i in arr {\n        if i % 2 == 0 {\n            if minValue < i {\n   \
    \             minValue = i\n                minIndex = i\n            }\n    \
    \    } else {\n            if minValue == i {\n                minIndex = i\n\
    \            }\n        }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n\
    \    return result", "    if arr.isEmpty {\n        return []\n    }\n    var\
    \ minIndex = 0\n    var minValue = arr[0]\n    for i := 1; i < len(arr); i++ {\n\
    \        if arr[i] < minValue {\n            minValue = arr[i]\n            minIndex\
    \ = i\n        }\n    }\n    return [minValue, minIndex]", "    var minIndex =\
    \ 0\n    var minValue = arr[0]\n    for i := 1; i < len(arr); i++ {\n        if\
    \ arr[i] < minValue {\n            minValue = arr[i]\n            minIndex = i\n\
    \        }\n    }\n    return [minValue, minIndex]", "    var result = [Int]()\n\
    \    var index = 0\n    for node in arr {\n        if node % 2 == 0 {\n      \
    \      result.append(node)\n            index += 1\n        }\n    }\n    if index\
    \ == 0 {\n        return arr\n    }\n    if index == 1 {\n        return result\n\
    \    }\n    if index == arr.count {\n        return nil\n    }\n    if index ==\
    \ arr.count - 1 {\n        return result\n    }\n    var smallestValue = arr[0]\n\
    \    var smallestIndex = 0\n    for node in arr {\n        if node % 2 == 0 {\n\
    \            if smallestValue < node {\n                smallestValue = node\n\
    \                smallestIndex = index\n            }\n        }\n    }\n    return\
    \ [smallestValue, smallestIndex]", "    var result: [Int] = []\n    var smallest:\
    \ Int = 0\n    var smallestIndex: Int = 0\n    for i := 0; i < len(arr); i++ {\n\
    \        if arr[i] % 2 == 0 {\n            if smallest == 0 || arr[i] < smallest\
    \ {\n                smallest = arr[i]\n                smallestIndex = i\n  \
    \          }\n        }\n    }\n    if smallest != 0 {\n        result = append(result,\
    \ smallest)\n        result = append(result, smallestIndex)\n    }\n    return\
    \ result", "    \n    var result = [Int]()\n    var minIndex = 0\n    var minValue\
    \ = arr[0]\n    \n    for value in arr {\n        if value % 2 == 0 {\n      \
    \      if value < minValue {\n                minValue = value\n             \
    \   minIndex = arr.index(value)\n            }\n        }\n    }\n    \n    result.append(minValue)\n\
    \    result.append(minIndex)\n    \n    return result", "    var minIndex = 0\n\
    \    var minValue = arr[0]\n    for i := 1; i < len(arr); i++ {\n        if arr[i]\
    \ < minValue {\n            minValue = arr[i]\n            minIndex = i\n    \
    \    }\n    }\n    return [minValue, minIndex]", "    var result = [Int]()\n \
    \   var smallestEven = arr[0]\n    var smallestIndex = -1\n    for index in 0..<arr.count\
    \ {\n        if arr[index] % 2 == 0 {\n            if smallestEven == arr[index]\
    \ {\n                smallestEven = arr[index]\n                smallestIndex\
    \ = index\n            } else {\n                smallestEven = arr[index]\n \
    \               smallestIndex = index\n            }\n        }\n    }\n    result.append(smallestEven)\n\
    \    result.append(smallestIndex)\n    return result", "    \n    var result =\
    \ [Int]()\n    var smallestValue = arr[0]\n    var smallestIndex = 0\n    \n \
    \   for value in arr {\n        if value < smallestValue {\n            smallestValue\
    \ = value\n            smallestIndex = 0\n        }\n        if value == smallestValue\
    \ {\n            smallestIndex += 1\n        }\n    }\n    \n    if smallestIndex\
    \ == 0 {\n        return result\n    }\n    \n    for value in arr {\n       \
    \ if value == smallestValue {\n            result.append(smallestIndex)\n    \
    \    }\n    }\n    \n    return result", "    \n    var result = [Int]()\n   \
    \ \n    var smallestEvenValue = arr[0]\n    var smallestIndex = 0\n    \n    for\
    \ index in 0..<arr.count {\n        if arr[index] % 2 == 0 {\n            if arr[index]\
    \ < smallestEvenValue {\n                smallestEvenValue = arr[index]\n    \
    \            smallestIndex = index\n            }\n        }\n    }\n    \n  \
    \  if smallestEvenValue == arr[0] {\n        result = [smallestEvenValue, smallestIndex]\n\
    \    } else {\n        result = [smallestEvenValue, smallestIndex]\n    }\n  \
    \  \n    return result", "    \n    var minIndex = 0\n    var minValue = arr[0]\n\
    \    \n    for index in 0..<arr.count {\n        if arr[index] % 2 == 0 {\n  \
    \          if arr[index] < minValue {\n                minValue = arr[index]\n\
    \                minIndex = index\n            }\n        }\n    }\n    \n   \
    \ return [minValue, minIndex]", "    var minIndex = 0\n    var minValue = arr[0]\n\
    \    for i := 1; i < len(arr); i++ {\n        if arr[i] < minValue {\n       \
    \     minValue = arr[i]\n            minIndex = i\n        }\n    }\n    return\
    \ [minValue, minIndex]", "    var result = [Int]()\n    var index = 0\n    for\
    \ element in arr {\n        if element % 2 == 0 {\n            result.append(element)\n\
    \        }\n        if element == 0 {\n            if index != 0 {\n         \
    \       result.append(element)\n            }\n            index++\n        }\n\
    \    }\n    return result", "    var result: [Int] = []\n    var smallest: Int\
    \ = 0\n    var smallestIndex: Int = 0\n    for i := 0; i < len(arr); i++ {\n \
    \       if arr[i] % 2 == 0 {\n            if smallest == 0 || arr[i] < smallest\
    \ {\n                smallest = arr[i]\n                smallestIndex = i\n  \
    \          }\n        }\n    }\n    if smallest != 0 {\n        result = append(result,\
    \ smallest)\n        result = append(result, smallestIndex)\n    }\n    return\
    \ result", "    if arr.isEmpty {\n        return []\n    }\n    var result: [Int]\
    \ = []\n    var minValue = arr[0]\n    var minIndex = 0\n    for i := 1; i < arr.count;\
    \ i++ {\n        if arr[i] < minValue {\n            minValue = arr[i]\n     \
    \       minIndex = i\n        }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n\
    \    return result", "    var result = [Int]()\n    var smallestEvenValue = 0\n\
    \    var smallestIndex = 0\n    for i := 0; i < len(arr); i++ {\n        if arr[i]\
    \ % 2 == 0 {\n            if smallestEvenValue == 0 {\n                smallestEvenValue\
    \ = arr[i]\n                smallestIndex = i\n            } else {\n        \
    \        if arr[i] < smallestEvenValue {\n                    smallestEvenValue\
    \ = arr[i]\n                    smallestIndex = i\n                }\n       \
    \     }\n        }\n    }\n    if smallestEvenValue != 0 {\n        result = append(result,\
    \ smallestEvenValue)\n        result = append(result, smallestIndex)\n    }\n\
    \    return result", "    var result = [Int]()\n    var index = 0\n    for node\
    \ in arr {\n        if node % 2 == 0 {\n            result.append(node)\n    \
    \    }\n        if index == 0 {\n            index = node\n        }\n    }\n\
    \    return result", "    \n    var minIndex = 0\n    var minValue = arr[0]\n\
    \    \n    for index in 0..<arr.count {\n        if arr[index] % 2 == 0 {\n  \
    \          if minValue < arr[index] {\n                minValue = arr[index]\n\
    \                minIndex = index\n            }\n        }\n    }\n    \n   \
    \ return [minValue, minIndex]", "    var result = [Int]()\n    var minValue =\
    \ arr[0]\n    var minIndex = 0\n    for i := 1; i < len(arr); i++ {\n        if\
    \ arr[i] < minValue {\n            minValue = arr[i]\n            minIndex = i\n\
    \        }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n\
    \    return result", "    if arr.isEmpty() {\n        return []\n    }\n    var\
    \ minIndex = -1\n    var minValue = arr[0]\n    for i := 1; i < arr.count; i++\
    \ {\n        if arr[i] < minValue {\n            minValue = arr[i]\n         \
    \   minIndex = i\n        }\n    }\n    return [minValue, minIndex]", "    \n\
    \    var minIndex = 0\n    var minValue = arr[0]\n    for index in 1..<arr.count\
    \ {\n        if arr[index] < minValue {\n            minValue = arr[index]\n \
    \           minIndex = index\n        }\n    }\n    return [minValue, minIndex]",
  "    var result: [Int] = []\n    var smallest: Int = 0\n    var smallestIndex: Int\
    \ = 0\n    for i := 0; i < len(arr); i++ {\n        if arr[i] % 2 == 0 {\n   \
    \         if smallest == 0 || arr[i] < smallest {\n                smallest =\
    \ arr[i]\n                smallestIndex = i\n            }\n        }\n    }\n\
    \    if smallest != 0 {\n        result = append(result, smallest)\n        result\
    \ = append(result, smallestIndex)\n    }\n    return result", "    \n    var minIndex\
    \ = 0\n    var minValue = arr[0]\n    \n    for index in 1..<arr.count {\n   \
    \     if arr[index] < minValue {\n            minValue = arr[index]\n        \
    \    minIndex = index\n        }\n    }\n    \n    return [minValue, minIndex]",
  "    \n    var minIndex = 0\n    var minValue = arr[0]\n    for index in 1..<arr.count\
    \ {\n        if arr[index] < minValue {\n            minValue = arr[index]\n \
    \           minIndex = index\n        }\n    }\n    return [minValue, minIndex]",
  "    var result = [Int]()\n    var index = 0\n    var smallestEvenValue = arr[0]\n\
    \    for value in arr {\n        if value % 2 == 0 {\n            if value < smallestEvenValue\
    \ {\n                smallestEvenValue = value\n                index = index\
    \ + 1\n            }\n        } else {\n            if smallestEvenValue == value\
    \ {\n                index = index + 1\n            }\n        }\n    }\n    if\
    \ index == 0 {\n        return arr\n    }\n    if index == 1 {\n        result.append(smallestEvenValue)\n\
    \        return result\n    }\n    if index == arr.count {\n        result.append(smallestEvenValue)\n\
    \        return result\n    }\n    if smallestEvenValue == arr[0] {\n        result.append(smallestEvenValue)\n\
    \        return result\n    }\n    if smallestEvenValue == arr[1] {\n        result.append(smallestEvenValue)\n\
    \        return result\n    }\n    if smallestEvenValue == arr[2] {\n        result.append(smallestEvenValue)\n\
    \        return result\n    }\n    if smallestEvenValue == arr[3] {\n        result.append(smallestEvenValue)\n\
    \        return result\n    }\n    if smallestEvenValue == arr[4] {\n        result.append(smallestEvenValue)\n\
    \        return result\n    }\n    if smallestEvenValue == arr[5] {\n        result.append(smallestEvenValue)\n\
    \        return result\n    }\n    if smallestEvenValue == arr[6] {\n        result.append(smallestEvenValue)\n\
    \        return result\n    }\n    if smallestEvenValue == arr[7] {\n        result.append(smallestEvenValue)\n\
    \        return result\n    }\n    if smallestEvenValue == arr[8] {\n        result.append(smallestEvenValue)\n\
    \        return result\n    }\n    if smallestEvenValue == arr[9] {\n        result.append(smallestEvenValue)\n\
    \        return result\n    }\n    if smallestEvenValue == arr[10] {\n       \
    \ result.append(smallestEvenValue)\n        return result\n    }\n    if smallestEvenValue\
    \ == arr[11] {\n        result.append(smallestEvenValue)\n        return result\n\
    \    }\n    if smallestEvenValue == arr[12] {\n        result.append(smallestEvenValue)\n\
    \        return result\n    }\n    if smallestEvenValue == arr[13] {\n       \
    \ result.append(smallestEvenValue)\n        return result\n    }\n    if smallestEvenValue\
    \ == arr[14] {\n        result.append(smallestEvenValue)\n        return result\n\
    \    }\n    if smallestEvenValue == arr[15] {\n        result.append(smallestEvenValue)\n\
    \        return result\n    }\n    if smallestEvenValue == arr[16] {\n       \
    \ result.append(smallestEvenValue)\n        return result\n    }\n    if smallestEvenValue\
    \ == arr[17] {\n        result.append(smallestEvenValue)\n        return result\n\
    \    }\n    if smallestEvenValue == arr[18] {\n        result.append(smallestEvenValue)",
  "    \n    var result = [Int]()\n    var minIndex = 0\n    var minValue = arr[0]\n\
    \    for i in arr {\n        if i % 2 == 0 {\n            if minValue < i {\n\
    \                minValue = i\n                minIndex = i\n            }\n \
    \       } else {\n            if minValue == i {\n                minIndex = i\n\
    \            }\n        }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n\
    \    return result", "    var result = [Int]()\n    var smallestEven = arr[0]\n\
    \    var smallestIndex = -1\n    for i := 1; i < arr.count; i++ {\n        if\
    \ arr[i] < smallestEven {\n            smallestEven = arr[i]\n            smallestIndex\
    \ = i\n        }\n    }\n    result.append(smallestEven)\n    result.append(smallestIndex)\n\
    \    return result", "    if arr.isEmpty {\n        return []\n    }\n    var\
    \ minValue = arr[0]\n    var minIndex = 0\n    var minIndex2 = 0\n    for i :=\
    \ 1; i < arr.count; i++ {\n        if arr[i] < minValue {\n            minValue\
    \ = arr[i]\n            minIndex = i\n        }\n        if arr[i] < minValue\
    \ {\n            minValue = arr[i]\n            minIndex2 = i\n        }\n   \
    \ }\n    if minIndex2 == minIndex {\n        return [minValue, minIndex]\n   \
    \ }\n    return [minValue, minIndex2]", "    var result = [Int]()\n    var minIndex\
    \ = 0\n    var minValue = arr[0]\n    for index in 0..<arr.count {\n        if\
    \ arr[index] % 2 == 0 {\n            if minValue < arr[index] {\n            \
    \    minValue = arr[index]\n                minIndex = index\n            }\n\
    \        }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n\
    \    return result", "    var result = [Int]()\n    var minValue = arr[0]\n  \
    \  var minIndex = 0\n    for index in 0..<arr.count {\n        if arr[index] %\
    \ 2 == 0 {\n            if arr[index] < minValue {\n                minValue =\
    \ arr[index]\n                minIndex = index\n            }\n        }\n   \
    \ }\n    result.append(minValue)\n    result.append(minIndex)\n    return result",
  "    \n    var result = [Int]()\n    \n    for element in arr {\n        if element\
    \ % 2 == 0 {\n            result.append(element)\n        }\n    }\n    \n   \
    \ if result.isEmpty {\n        return arr\n    }\n    \n    var smallestEvenValue\
    \ = result[0]\n    var smallestIndex = 0\n    \n    for element in result {\n\
    \        if element % 2 == 0 {\n            if smallestEvenValue < element {\n\
    \                smallestEvenValue = element\n                smallestIndex =\
    \ result.index(of: element)\n            }\n        }\n    }\n    \n    return\
    \ [smallestEvenValue, smallestIndex]", "    \n    var result = [Int]()\n    \n\
    \    var minValue = arr[0]\n    var minIndex = 0\n    \n    for i in arr {\n \
    \       if i % 2 == 0 {\n            if minValue < i {\n                minValue\
    \ = i\n                minIndex = i\n            }\n        } else {\n       \
    \     if minValue == i {\n                minIndex += 1\n            }\n     \
    \   }\n    }\n    \n    if minIndex == 0 {\n        return result\n    }\n   \
    \ \n    if minIndex == arr.count {\n        return result\n    }\n    \n    result.append(minValue)\n\
    \    result.append(minIndex)\n    return result", "    if arr.isEmpty() {\n  \
    \      return []\n    }\n    var minIndex = 0\n    var minValue = arr[0]\n   \
    \ for i := 1; i < len(arr); i++ {\n        if arr[i] < minValue {\n          \
    \  minValue = arr[i]\n            minIndex = i\n        }\n    }\n    return [minValue,\
    \ minIndex]", "    var result = [Int]()\n    var minIndex = 0\n    var minValue\
    \ = arr[0]\n    for i := 0; i < len(arr); i++ {\n        if arr[i] < minValue\
    \ {\n            minValue = arr[i]\n            minIndex = i\n        }\n    }\n\
    \    result.append(minValue)\n    result.append(minIndex)\n    return result",
  "    var result = [Int]()\n    var smallestEven = arr[0]\n    var smallestIndex\
    \ = -1\n    for i := 1; i < len(arr); i++ {\n        if arr[i] < smallestEven\
    \ {\n            smallestEven = arr[i]\n            smallestIndex = i\n      \
    \  }\n    }\n    if smallestIndex == -1 {\n        return result\n    }\n    result.append(smallestEven)\n\
    \    result.append(smallestIndex)\n    return result", "    \n    var minIndex\
    \ = 0\n    var minValue = arr[0]\n    for index in 0..<arr.count {\n        if\
    \ arr[index] % 2 == 0 {\n            if minValue == arr[index] {\n           \
    \     minIndex = index\n            } else {\n                minValue = arr[index]\n\
    \                minIndex = index\n            }\n        }\n    }\n    return\
    \ [minValue, minIndex]", "    var result = [Int]()\n    var smallestEven = arr[0]\n\
    \    var smallestIndex = 0\n    for index in 0..<arr.count {\n        if arr[index]\
    \ % 2 == 0 {\n            if arr[index] < smallestEven {\n                smallestEven\
    \ = arr[index]\n                smallestIndex = index\n            }\n       \
    \ }\n    }\n    result.append(smallestEven)\n    result.append(smallestIndex)\n\
    \    return result", "    var result = [Int]()\n    var index = 0\n    for node\
    \ in arr {\n        if node % 2 == 0 {\n            result.append(node)\n    \
    \    }\n        if index == 0 {\n            index = node\n        }\n    }\n\
    \    return result", "    var result: [Int] = []\n    var smallest: Int = 0\n\
    \    var smallestIndex: Int = 0\n    for index in 0..<arr.count {\n        if\
    \ arr[index] % 2 == 0 {\n            if smallest == 0 || arr[index] < smallest\
    \ {\n                smallest = arr[index]\n                smallestIndex = index\n\
    \            }\n        }\n    }\n    if smallest == 0 {\n        return result\n\
    \    }\n    result.append(smallest)\n    result.append(smallestIndex)\n    return\
    \ result", "    var result = [Int]()\n    var minIndex = -1\n    var minValue\
    \ = arr[0]\n    for i := 0; i < len(arr); i++ {\n        if arr[i] < minValue\
    \ {\n            minValue = arr[i]\n            minIndex = i\n        }\n    }\n\
    \    result.append(minValue)\n    result.append(minIndex)\n    return result",
  "    var result = [Int]()\n    var minValue = Int64(math.MinInt64)\n    var minIndex\
    \ = -1\n    for i := 0; i < len(arr); i++ {\n        if arr[i] < minValue {\n\
    \            minValue = arr[i]\n            minIndex = i\n        }\n    }\n \
    \   if minIndex == -1 {\n        return result\n    }\n    result.append(minValue)\n\
    \    result.append(minIndex)\n    return result", "    var result = [Int]()\n\
    \    var index = 0\n    for node in arr {\n        if node.value % 2 == 0 {\n\
    \            result.append(node.value)\n            index = result.count\n   \
    \     }\n    }\n    if index == 0 {\n        return arr\n    }\n    return result",
  "    var result = [Int]()\n    var minIndex = 0\n    var minValue = arr[0]\n   \
    \ for index in 0..<arr.count {\n        if arr[index] % 2 == 0 {\n           \
    \ if arr[index] < minValue {\n                minValue = arr[index]\n        \
    \        minIndex = index\n            }\n        }\n    }\n    result.append(minValue)\n\
    \    result.append(minIndex)\n    return result", "    if arr.isEmpty() {\n  \
    \      return []\n    }\n    var result = [Int]()\n    var minValue = arr[0]\n\
    \    var minIndex = 0\n    for i := 1; i < arr.count; i++ {\n        if arr[i]\
    \ < minValue {\n            minValue = arr[i]\n            minIndex = i\n    \
    \    }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n    return\
    \ result", "    var result = [Int]()\n    var smallestValue = arr[0]\n    var\
    \ smallestIndex = 0\n    for i := 1; i < arr.count; i++ {\n        if arr[i] <\
    \ smallestValue {\n            smallestValue = arr[i]\n            smallestIndex\
    \ = i\n        }\n    }\n    result.append(smallestValue)\n    result.append(smallestIndex)\n\
    \    return result", "    if arr.isEmpty() {\n        return []\n    }\n    var\
    \ minValue = arr[0]\n    var minIndex = 0\n    for index in 1..<arr.count {\n\
    \        if arr[index] < minValue {\n            minValue = arr[index]\n     \
    \       minIndex = index\n        }\n    }\n    return [minValue, minIndex]",
  "    if arr.isEmpty() {\n        return []\n    }\n    var result = [Int]()\n  \
    \  var minValue = arr[0]\n    var minIndex = 0\n    for i := 1; i < arr.count;\
    \ i++ {\n        if arr[i] < minValue {\n            minValue = arr[i]\n     \
    \       minIndex = i\n        }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n\
    \    return result", "    \n    var result = [Int]()\n    var minValue = Int()\n\
    \    var minIndex = -1\n    \n    for i in arr {\n        if i % 2 == 0 {\n  \
    \          if minValue == 0 || minValue > i {\n                minValue = i\n\
    \                minIndex = i\n            }\n        } else {\n            if\
    \ minValue == 0 || minValue > i {\n                minValue = i\n            \
    \    minIndex = i\n            }\n        }\n    }\n    \n    if minValue == 0\
    \ {\n        return arr\n    }\n    \n    if minIndex == -1 {\n        return\
    \ arr\n    }\n    \n    for i in arr {\n        if i == minValue {\n         \
    \   result.append(i)\n        }\n    }\n    \n    return result", "    var result:\
    \ [Int] = []\n    var smallest: Int = 0\n    var smallestIndex: Int = 0\n    for\
    \ index in 0..<arr.count {\n        if arr[index] % 2 == 0 {\n            if smallest\
    \ == 0 || arr[index] < smallest {\n                smallest = arr[index]\n   \
    \             smallestIndex = index\n            }\n        }\n    }\n    result\
    \ = [smallest, smallestIndex]\n    return result", "    \n    let len = arr.count\n\
    \    \n    if len == 0 {\n        return []\n    }\n    \n    var minValue = arr[0]\n\
    \    var minIndex = 0\n    \n    for i in 1..<len {\n        if arr[i] < minValue\
    \ {\n            minValue = arr[i]\n            minIndex = i\n        }\n    }\n\
    \    \n    var result = [minValue, minIndex]\n    \n    if minValue % 2 == 0 {\n\
    \        result[0] = minValue / 2\n    }\n    \n    return result", "    var result\
    \ = [Int]()\n    var minValue = arr[0]\n    var minIndex = 0\n    for i := 1;\
    \ i < len(arr); i++ {\n        if arr[i] < minValue {\n            minValue =\
    \ arr[i]\n            minIndex = i\n        }\n    }\n    result.append(minValue)\n\
    \    result.append(minIndex)\n    return result", "    var result: [Int] = []\n\
    \    var minIndex = 0\n    var minValue = arr[0]\n    for i := 0; i < len(arr);\
    \ i++ {\n        if arr[i] < minValue {\n            minValue = arr[i]\n     \
    \       minIndex = i\n        }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n\
    \    return result", "    var minIndex = 0\n    var minValue = arr[0]\n    for\
    \ i := 1; i < len(arr); i++ {\n        if arr[i] < minValue {\n            minValue\
    \ = arr[i]\n            minIndex = i\n        }\n    }\n    return [minValue,\
    \ minIndex]", "    var result = [Int]()\n    var minValue = Int()\n    var minIndex\
    \ = -1\n    for i := 0; i < len(arr); i++ {\n        if arr[i] < minValue {\n\
    \            minValue = arr[i]\n            minIndex = i\n        }\n    }\n \
    \   if minValue == 0 {\n        return result\n    }\n    for i := 0; i < len(arr);\
    \ i++ {\n        if arr[i] == minValue {\n            result.append(i)\n     \
    \   }\n    }\n    return result", "    var minIndex = 0\n    var minValue = arr[0]\n\
    \    for i := 1; i < len(arr); i++ {\n        if arr[i] < minValue {\n       \
    \     minValue = arr[i]\n            minIndex = i\n        }\n    }\n    return\
    \ [minValue, minIndex]", "    var result = [Int]()\n    var index = 0\n    var\
    \ smallestEvenValue = arr[0]\n    for value in arr {\n        if value < smallestEvenValue\
    \ {\n            smallestEvenValue = value\n        }\n        if value == smallestEvenValue\
    \ {\n            result.append(value)\n            index += 1\n        }\n   \
    \ }\n    if index == 0 {\n        return arr\n    }\n    return result", "   \
    \ var result = [Int]()\n    var minIndex = 0\n    var minValue = arr[0]\n    for\
    \ i := 1; i < len(arr); i++ {\n        if arr[i] < minValue {\n            minValue\
    \ = arr[i]\n            minIndex = i\n        }\n    }\n    result.append(minValue)\n\
    \    result.append(minIndex)\n    return result", "    if arr.isEmpty {\n    \
    \    return []\n    }\n    var result: [Int] = []\n    var smallestEvenValue:\
    \ Int = 0\n    var smallestIndex: Int = 0\n    for index in 0..<arr.count {\n\
    \        if arr[index] % 2 == 0 {\n            if smallestEvenValue == 0 || arr[index]\
    \ < smallestEvenValue {\n                smallestEvenValue = arr[index]\n    \
    \            smallestIndex = index\n            }\n        }\n    }\n    if smallestEvenValue\
    \ == 0 {\n        return result\n    }\n    result.append(smallestEvenValue)\n\
    \    result.append(smallestIndex)\n    return result", "    var result = [Int]()\n\
    \    var minIndex = 0\n    var minValue = arr[0]\n    for i := 0; i < len(arr);\
    \ i++ {\n        if arr[i] < minValue {\n            minValue = arr[i]\n     \
    \       minIndex = i\n        }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n\
    \    return result", "    \n    var minIndex = 0\n    var minValue = arr[0]\n\
    \    \n    for index in 0..<arr.count {\n        if arr[index] % 2 == 0 {\n  \
    \          if arr[index] < minValue {\n                minValue = arr[index]\n\
    \                minIndex = index\n            }\n        }\n    }\n    \n   \
    \ return [minValue, minIndex]", "    var result: [Int] = []\n    var minIndex\
    \ = 0\n    var minValue = arr[0]\n    for index in 0..<arr.count {\n        if\
    \ arr[index] % 2 == 0 {\n            if arr[index] < minValue {\n            \
    \    minValue = arr[index]\n                minIndex = index\n            }\n\
    \        }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n\
    \    return result", "    if arr.isEmpty() {\n        return []\n    }\n    var\
    \ minValue = arr[0]\n    var minIndex = 0\n    var minIndex2 = 0\n    var minIndex3\
    \ = 0\n    var minIndex4 = 0\n    var minIndex5 = 0\n    var minIndex6 = 0\n \
    \   var minIndex7 = 0\n    var minIndex8 = 0\n    var minIndex9 = 0\n    var minIndex10\
    \ = 0\n    var minIndex11 = 0\n    var minIndex12 = 0\n    var minIndex13 = 0\n\
    \    var minIndex14 = 0\n    var minIndex15 = 0\n    var minIndex16 = 0\n    var\
    \ minIndex17 = 0\n    var minIndex18 = 0\n    var minIndex19 = 0\n    var minIndex20\
    \ = 0\n    var minIndex21 = 0\n    var minIndex22 = 0\n    var minIndex23 = 0\n\
    \    var minIndex24 = 0\n    var minIndex25 = 0\n    var minIndex26 = 0\n    var\
    \ minIndex27 = 0\n    var minIndex28 = 0\n    var minIndex29 = 0\n    var minIndex30\
    \ = 0\n    var minIndex31 = 0\n    var minIndex32 = 0\n    var minIndex33 = 0\n\
    \    var minIndex34 = 0\n    var minIndex35 = 0\n    var minIndex36 = 0\n    var\
    \ minIndex37 = 0\n    var minIndex38 = 0\n    var minIndex39 = 0\n    var minIndex40\
    \ = 0\n    var minIndex41 = 0\n    var minIndex42 = 0\n    var minIndex43 = 0\n\
    \    var minIndex44 = 0\n    var minIndex45 = 0\n    var minIndex46 = 0\n    var\
    \ minIndex47 = 0\n    var minIndex48 = 0\n    var minIndex49 = 0\n    var minIndex50\
    \ = 0\n    var minIndex51 = 0\n    var minIndex52 = 0\n    var minIndex53 = 0\n\
    \    var minIndex54 = 0\n    var minIndex55 = 0\n    var minIndex56 = 0\n    var\
    \ minIndex57 = 0\n    var minIndex58 = 0\n    var minIndex59 = 0\n    var minIndex60\
    \ = 0\n    var minIndex61 = 0\n    var minIndex62 = 0\n    var minIndex63 = 0\n\
    \    var minIndex64 = 0\n    var minIndex65 = 0\n    var minIndex66 = 0\n    var\
    \ minIndex67 = 0\n    var minIndex68 = 0\n    var minIndex69 = 0\n    var minIndex70\
    \ = 0\n    var minIndex71 = 0\n    var minIndex72 = 0\n    var minIndex73 = 0\n\
    \    var minIndex74 = 0\n    var minIndex75 = 0\n    var minIndex76 = 0\n    var\
    \ minIndex77 = 0\n    var minIndex78 = 0\n    var minIndex79 = 0\n    var minIndex80\
    \ = 0\n    var minIndex81 = 0\n    var minIndex82 = 0\n    var minIndex83 = 0\n",
  "    var result = [Int]()\n    var minValue = arr[0]\n    var minIndex = 0\n   \
    \ for i := 0; i < len(arr); i++ {\n        if arr[i] < minValue {\n          \
    \  minValue = arr[i]\n            minIndex = i\n        }\n    }\n    result.append(minValue)\n\
    \    result.append(minIndex)\n    return result", "    var result = [Int]()\n\
    \    var minIndex = 0\n    var minValue = arr[0]\n    for i in arr {\n       \
    \ if i % 2 == 0 {\n            if minValue > i {\n                minValue = i\n\
    \                minIndex = i\n            }\n        } else {\n            if\
    \ minValue == i {\n                minIndex = i\n            }\n        }\n  \
    \  }\n    result.append(minValue)\n    result.append(minIndex)\n    return result",
  "    \n    var minIndex = 0\n    var minValue = arr[0]\n    \n    for index in 0..<arr.count\
    \ {\n        if arr[index] % 2 == 0 {\n            if arr[index] < minValue {\n\
    \                minValue = arr[index]\n                minIndex = index\n   \
    \         }\n        }\n    }\n    \n    return [minValue, minIndex]", "    var\
    \ result = [Int]()\n    var index = 0\n    for node in arr {\n        if node\
    \ % 2 == 0 {\n            result.append(node)\n        }\n        if index ==\
    \ 0 {\n            index = node\n        }\n    }\n    if index == 0 {\n     \
    \   return result\n    }\n    return result", "    var result = [Int]()\n    var\
    \ minValue = Int()\n    var minIndex = -1\n    for i := 0; i < len(arr); i++ {\n\
    \        if arr[i] < minValue {\n            minValue = arr[i]\n            minIndex\
    \ = i\n        }\n    }\n    if minIndex == -1 {\n        return result\n    }\n\
    \    result.append(minValue)\n    result.append(minIndex)\n    return result",
  "    \n    var minIndex = 0\n    var minValue = arr[0]\n    \n    for index in 0..<arr.count\
    \ {\n        if arr[index] % 2 == 0 {\n            if minValue == arr[index] {\n\
    \                minIndex = index\n            } else {\n                minValue\
    \ = arr[index]\n                minIndex = index\n            }\n        }\n \
    \   }\n    \n    return [minValue, minIndex]", "    var result = [Int]()\n   \
    \ var smallestEvenIndex = 0\n    var smallestEvenValue = arr[0]\n    for index\
    \ in 0..<arr.count {\n        if arr[index] % 2 == 0 {\n            if smallestEvenValue\
    \ < arr[index] {\n                smallestEvenValue = arr[index]\n           \
    \     smallestEvenIndex = index\n            }\n        }\n    }\n    result.append(smallestEvenValue)\n\
    \    result.append(smallestEvenIndex)\n    return result", "    var result = [Int]()\n\
    \    var smallestEvenValue: Int = 0\n    var smallestIndex: Int = 0\n    for index\
    \ in 0..<arr.count {\n        if arr[index] % 2 == 0 {\n            if smallestEvenValue\
    \ == 0 || arr[index] < smallestEvenValue {\n                smallestEvenValue\
    \ = arr[index]\n                smallestIndex = index\n            }\n       \
    \ }\n    }\n    if smallestEvenValue == 0 {\n        return result\n    }\n  \
    \  result.append(smallestEvenValue)\n    result.append(smallestIndex)\n    return\
    \ result", "    var result = [Int]()\n    var minValue = arr[0]\n    var minIndex\
    \ = 0\n    for i := 1; i < arr.count; i++ {\n        if arr[i] < minValue {\n\
    \            minValue = arr[i]\n            minIndex = i\n        }\n    }\n \
    \   result.append(minValue)\n    result.append(minIndex)\n    return result",
  "    \n    var result = [Int]()\n    \n    if arr.isEmpty {\n        return result\n\
    \    }\n    \n    var smallestEvenValue = arr[0]\n    var smallestIndex = 0\n\
    \    \n    for i in arr {\n        if i % 2 == 0 {\n            if smallestEvenValue\
    \ < i {\n                smallestEvenValue = i\n                smallestIndex\
    \ = i\n            }\n        }\n    }\n    \n    if smallestEvenValue == 0 {\n\
    \        return result\n    }\n    \n    if smallestIndex == 0 {\n        return\
    \ [smallestEvenValue, smallestIndex]\n    }\n    \n    if smallestIndex < smallestEvenValue\
    \ {\n        return [smallestEvenValue, smallestIndex]\n    }\n    \n    return\
    \ [smallestEvenValue, smallestIndex]", "    var minIndex = 0\n    var minValue\
    \ = arr[0]\n    for i := 0; i < len(arr); i++ {\n        if arr[i] < minValue\
    \ {\n            minValue = arr[i]\n            minIndex = i\n        }\n    }\n\
    \    return [minValue, minIndex]", "    var result = [Int]()\n    var minValue\
    \ = Int()\n    var minIndex = -1\n    for i := 0; i < len(arr); i++ {\n      \
    \  if arr[i] < minValue {\n            minValue = arr[i]\n            minIndex\
    \ = i\n        }\n    }\n    if minIndex == -1 {\n        return result\n    }\n\
    \    result.append(minValue)\n    result.append(minIndex)\n    return result",
  "    var result: [Int] = []\n    var minIndex = 0\n    for i := 0; i < len(arr);\
    \ i++ {\n        if arr[i] % 2 == 0 {\n            result.append(arr[i])\n   \
    \         if arr[i] < arr[minIndex] {\n                minIndex = i\n        \
    \    }\n        }\n    }\n    if minIndex == 0 {\n        return result\n    }\n\
    \    if minIndex == len(arr) {\n        return result\n    }\n    return result[minIndex]",
  "    var result: [Int] = []\n    var smallest: Int = 0\n    var smallestIndex: Int\
    \ = 0\n    for i := 0; i < len(arr); i++ {\n        if arr[i] % 2 == 0 {\n   \
    \         if smallest == 0 || arr[i] < smallest {\n                smallest =\
    \ arr[i]\n                smallestIndex = i\n            }\n        }\n    }\n\
    \    if smallest != 0 {\n        result = append(result, smallest)\n        result\
    \ = append(result, smallestIndex)\n    }\n    return result", "    if arr.isEmpty\
    \ {\n        return []\n    }\n    var minValue = arr[0]\n    var minIndex = 0\n\
    \    var minIndex2 = 0\n    for i := 1; i < arr.count; i++ {\n        if arr[i]\
    \ < minValue {\n            minValue = arr[i]\n            minIndex = i\n    \
    \    }\n        if arr[i] < minValue {\n            minValue = arr[i]\n      \
    \      minIndex2 = i\n        }\n    }\n    return [minValue, minIndex2]", " \
    \   \n    var result = [Int]()\n    \n    var minValue = arr[0]\n    var minIndex\
    \ = 0\n    \n    for index in 0..<arr.count {\n        if arr[index] % 2 == 0\
    \ {\n            if arr[index] < minValue {\n                minValue = arr[index]\n\
    \                minIndex = index\n            }\n        }\n    }\n    \n   \
    \ if minIndex == 0 {\n        return result\n    }\n    \n    if minIndex < arr.count\
    \ {\n        result.append(minValue)\n        result.append(minIndex)\n    }\n\
    \    \n    return result", "    if arr.isEmpty() {\n        return []\n    }\n\
    \    var result = [Int]()\n    var minValue = arr[0]\n    var minIndex = 0\n \
    \   for i := 1; i < arr.count; i++ {\n        if arr[i] < minValue {\n       \
    \     result = [minValue, minIndex]\n            break\n        }\n        if\
    \ arr[i] > minValue {\n            result = [arr[i], i]\n        }\n        if\
    \ arr[i] != minValue {\n            minValue = arr[i]\n            minIndex =\
    \ i\n        }\n    }\n    return result", "    \n    var minIndex = 0\n    var\
    \ minValue = arr[0]\n    \n    for i in arr {\n        if i % 2 == 0 {\n     \
    \       if minValue > i {\n                minValue = i\n                minIndex\
    \ = i\n            }\n        }\n    }\n    \n    return [minValue, minIndex]",
  "    var result = [Int]()\n    var smallestEven = arr[0]\n    var smallestIndex\
    \ = 0\n    for i := 1; i < len(arr); i++ {\n        if arr[i] < smallestEven {\n\
    \            smallestEven = arr[i]\n            smallestIndex = i\n        }\n\
    \    }\n    result.append(smallestEven)\n    result.append(smallestIndex)\n  \
    \  return result", "    \n    var result: [Int] = []\n    var minIndex = 0\n \
    \   var minVal = arr[0]\n    \n    for val in arr {\n        if val < minVal {\n\
    \            minVal = val\n            minIndex = arr.index(of: val)\n       \
    \ }\n    }\n    \n    if minIndex == 0 {\n        return result\n    }\n    \n\
    \    for val in arr {\n        if val == minVal {\n            result.append(val)\n\
    \        }\n    }\n    \n    return result", "    if arr.isEmpty {\n        return\
    \ []\n    }\n    var minIndex = 0\n    var minValue = arr[0]\n    for i := 1;\
    \ i < arr.count; i++ {\n        if arr[i] < minValue {\n            minValue =\
    \ arr[i]\n            minIndex = i\n        }\n    }\n    return [minValue, minIndex]",
  "    \n    var minIndex = 0\n    var minValue = arr[0]\n    \n    for index in 1..<arr.count\
    \ {\n        if arr[index] < minValue {\n            minValue = arr[index]\n \
    \           minIndex = index\n        }\n    }\n    \n    return [minValue, minIndex]",
  "    var result = [Int]()\n    var smallestEvenIndex = 0\n    var smallestEvenValue\
    \ = 0\n    for index in 0..<arr.count {\n        if arr[index] % 2 == 0 {\n  \
    \          if smallestEvenValue == 0 || arr[index] < smallestEvenValue {\n   \
    \             smallestEvenValue = arr[index]\n                smallestEvenIndex\
    \ = index\n            }\n        }\n    }\n    result.append(smallestEvenValue)\n\
    \    result.append(smallestEvenIndex)\n    return result", "    if arr.isEmpty()\
    \ {\n        return []\n    }\n    var minIndex = 0\n    var minValue = arr[0]\n\
    \    for i := 1; i < arr.count; i++ {\n        if arr[i] < minValue {\n      \
    \      minValue = arr[i]\n            minIndex = i\n        }\n    }\n    return\
    \ [minValue, minIndex]", "    if arr.isEmpty() {\n        return []\n    }\n \
    \   var minValue = arr[0]\n    var minIndex = 0\n    for i := 1; i < arr.count();\
    \ i++ {\n        if arr[i] < minValue {\n            minValue = arr[i]\n     \
    \       minIndex = i\n        }\n    }\n    return [minValue, minIndex]", "  \
    \  if arr.isEmpty() {\n        return []\n    }\n    var minIndex = 0\n    var\
    \ minValue = arr[0]\n    for i := 1; i < len(arr); i++ {\n        if arr[i] <\
    \ minValue {\n            minValue = arr[i]\n            minIndex = i\n      \
    \  }\n    }\n    return [minValue, minIndex]", "    var result: [Int] = []\n \
    \   var min: Int = 0\n    var minIndex: Int = 0\n    for i := 0; i < len(arr);\
    \ i++ {\n        if arr[i] % 2 == 0 {\n            if arr[i] < min {\n       \
    \         min = arr[i]\n                minIndex = i\n            }\n        }\n\
    \    }\n    if min == 0 {\n        return result\n    }\n    result.insert(min,\
    \ minIndex)\n    return result", "    \n    var minIndex = 0\n    var minValue\
    \ = arr[0]\n    for i in arr {\n        if i % 2 == 0 {\n            if minValue\
    \ < i {\n                minValue = i\n                minIndex = i\n        \
    \    }\n        }\n    }\n    return [minValue, minIndex]", "    if arr.isEmpty\
    \ {\n        return []\n    }\n    var minValue = arr[0]\n    var minIndex = 0\n\
    \    var minIndex2 = 0\n    for i := 1; i < len(arr); i++ {\n        if arr[i]\
    \ < minValue {\n            minValue = arr[i]\n            minIndex = i\n    \
    \    }\n        if arr[i] < minValue {\n            minValue = arr[i]\n      \
    \      minIndex2 = i\n        }\n    }\n    return [minValue, minIndex]", "  \
    \  var result = [Int]()\n    var minIndex = 0\n    var minValue = arr[0]\n   \
    \ for index in 0..<arr.count {\n        if arr[index] % 2 == 0 {\n           \
    \ if minValue == arr[index] {\n                minIndex = index\n            }\
    \ else {\n                minValue = arr[index]\n                minIndex = index\n\
    \            }\n        }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n\
    \    return result", "    var minIndex = 0\n    var minValue = arr[0]\n    for\
    \ i := 0; i < len(arr); i++ {\n        if arr[i] < minValue {\n            minValue\
    \ = arr[i]\n            minIndex = i\n        }\n    }\n    return [minValue,\
    \ minIndex]", "    var result = [Int]()\n    var smallest = 0\n    var smallestIndex\
    \ = 0\n    for i := 0; i < len(arr); i++ {\n        if arr[i] % 2 == 0 {\n   \
    \         if smallest == 0 || arr[i] < arr[smallest] {\n                smallest\
    \ = arr[i]\n                smallestIndex = i\n            }\n        }\n    }\n\
    \    if smallest != 0 {\n        result = append(result, smallest)\n        result\
    \ = append(result, smallestIndex)\n    }\n    return result", "    var result:\
    \ [Int] = []\n    var minIndex = 0\n    for node in arr {\n        if node.value\
    \ % 2 == 0 {\n            if node.value < arr[minIndex].value {\n            \
    \    minIndex = result.count\n            }\n            result.append(node.value)\n\
    \        }\n    }\n    if minIndex == 0 {\n        return result\n    }\n    return\
    \ result[minIndex]", "    var result = [Int]()\n    var minValue = arr[0]\n  \
    \  var minIndex = 0\n    for i := 1; i < len(arr); i++ {\n        if arr[i] <\
    \ minValue {\n            minValue = arr[i]\n            minIndex = i\n      \
    \  }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n    return\
    \ result", "    var result = [Int]()\n    var smallestEven = arr[0]\n    var smallestIndex\
    \ = 0\n    for index in 0..<arr.count {\n        if arr[index] % 2 == 0 {\n  \
    \          if smallestEven == arr[index] {\n                smallestEven = arr[index]\n\
    \                smallestIndex = index\n            } else {\n               \
    \ smallestEven = arr[index]\n                smallestIndex = index\n         \
    \   }\n        }\n    }\n    result.append(smallestEven)\n    result.append(smallestIndex)\n\
    \    return result", "    var result = [Int]()\n    var smallest = 0\n    var\
    \ smallestIndex = 0\n    for i := 0; i < len(arr); i++ {\n        if arr[i] %\
    \ 2 == 0 {\n            if smallest == 0 || arr[i] < arr[smallest] {\n       \
    \         smallest = arr[i]\n                smallestIndex = i\n            }\n\
    \        }\n    }\n    if smallest == 0 {\n        return result\n    }\n    if\
    \ smallest == arr[0] {\n        result[0] = smallest\n    } else {\n        result[0]\
    \ = smallestIndex\n    }\n    return result", "    var result = [Int]()\n    var\
    \ minIndex = 0\n    var minValue = arr[0]\n    for value in arr {\n        if\
    \ value < minValue {\n            minValue = value\n            minIndex = result.count\n\
    \        }\n        if value == minValue {\n            result[minIndex] = value\n\
    \        }\n    }\n    return result", "    var result = [Int]()\n    var minValue\
    \ = arr[0]\n    var minIndex = 0\n    for i := 0; i < len(arr); i++ {\n      \
    \  if arr[i] < minValue {\n            minValue = arr[i]\n            minIndex\
    \ = i\n        }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n\
    \    return result", "    var result = [Int]()\n    var smallestValue = arr[0]\n\
    \    var smallestIndex = 0\n    for index in 0..<arr.count {\n        if arr[index]\
    \ % 2 == 0 {\n            if smallestValue == arr[index] {\n                smallestIndex\
    \ = index\n            } else {\n                smallestValue = arr[index]\n\
    \                smallestIndex = index\n            }\n        }\n    }\n    result.append(smallestValue)\n\
    \    result.append(smallestIndex)\n    return result", "    var result = [Int]()\n\
    \    var minValue = arr[0]\n    var minIndex = 0\n    for i := 1; i < len(arr);\
    \ i++ {\n        if arr[i] < minValue {\n            minValue = arr[i]\n     \
    \       minIndex = i\n        }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n\
    \    return result", "    var result = [Int]()\n    var minValue = Int()\n   \
    \ var minIndex = -1\n    for index in 0..<arr.count {\n        if arr[index] %\
    \ 2 == 0 {\n            if minValue == 0 || arr[index] < minValue {\n        \
    \        minValue = arr[index]\n                minIndex = index\n           \
    \ }\n        }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n\
    \    return result", "    \n    var minIndex = 0\n    var minValue = arr[0]\n\
    \    \n    for index in 1..<arr.count {\n        if arr[index] < minValue {\n\
    \            minValue = arr[index]\n            minIndex = index\n        }\n\
    \    }\n    \n    return [minValue, minIndex]", "    var result = [Int]()\n  \
    \  var minValue = Int64(math.MaxInt64)\n    var minIndex = -1\n    for i := 0;\
    \ i < len(arr); i++ {\n        if arr[i] < minValue {\n            minValue =\
    \ arr[i]\n            minIndex = i\n        }\n    }\n    if minIndex == -1 {\n\
    \        return result\n    }\n    result.append(minValue)\n    result.append(minIndex)\n\
    \    return result", "    var result: [Int] = []\n    var smallest: Int = 0\n\
    \    var smallestIndex: Int = 0\n    for index in 0..<arr.count {\n        if\
    \ arr[index] % 2 == 0 {\n            if smallest == 0 || arr[index] < smallest\
    \ {\n                smallest = arr[index]\n                smallestIndex = index\n\
    \            }\n        }\n    }\n    if smallest != 0 {\n        result = [smallest,\
    \ smallestIndex]\n    }\n    return result", "    if arr.isEmpty {\n        return\
    \ []\n    }\n    var minValue = arr[0]\n    var minIndex = 0\n    for i := 1;\
    \ i < arr.count; i++ {\n        if arr[i] < minValue {\n            minValue =\
    \ arr[i]\n            minIndex = i\n        }\n    }\n    return [minValue, minIndex]",
  "    var result = [Int]()\n    var minValue = arr[0]\n    var minIndex = 0\n   \
    \ for i := 1; i < len(arr); i++ {\n        if arr[i] < minValue {\n          \
    \  minValue = arr[i]\n            minIndex = i\n        }\n    }\n    result.append(minValue)\n\
    \    result.append(minIndex)\n    return result", "    var result = [Int]()\n\
    \    var minIndex = 0\n    var minValue = arr[0]\n    for index in 0..<arr.count\
    \ {\n        if arr[index] % 2 == 0 {\n            if minValue < arr[index] {\n\
    \                minValue = arr[index]\n                minIndex = index\n   \
    \         }\n        }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n\
    \    return result"]
stop_tokens:
- "\n}"
